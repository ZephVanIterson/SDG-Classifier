Repository,Description,Readme Content,Topics,Date Started,Last Contribution,Number of Contributors,Authenticated Contributors,Number of Stars,Number of Subscribers,Contributors,SG
seiginonakama/BlockCanaryEx,make performance bottleneck detection easily when app blocked,"[中文文档](https://github.com/lqcandqq13/BlockCanaryEx/blob/master/README_ZH.md)

BlockCanaryEx
=============
a library for android which can help you to find heavy methods in your code when your app blocked,
base on [BlockCanary](https://github.com/markzhai/AndroidPerformanceMonitor).

![TextLayoutBuilder logo](./sample_gc.jpeg)
![TextLayoutBuilder logo](./sample_view.jpg)

What's the difference between BlockCanaryEx and BlockCanary
-------------
- BlockCanaryEx java runtime code are modified form BlockCanary, ui and features are mostly same;
- BlockCanaryEx add MethodSampler, knows every method's execute info (like cost-time, called-times...) when blocked;
- BlockCanaryEx focus on the method which cost most of time when your app blocked, and display it directly to developer;
- BlockCanaryEx add gc sampler，we can know whether and when gc happened during we blocked.
- add view performance sampler, we can know the detail about view measure, layout, draw during we blocked.

What's we target
-------------

![blocksource](./block_source.jpeg)

Download
-------------
root build.gradle
```groovy
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0' //version must >= 1.5.0
        classpath 'com.letv.sarrsdesktop:BlockCanaryExPlugin:0.9.9.5'
    }
}
```
model build.gradle
```groovy
apply plugin: 'blockcanaryex'
```

```groovy
debugCompile 'com.letv.sarrsdesktop:BlockCanaryExJRT:0.9.9.4'
releaseCompile 'com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:0.9.9.4'
testCompile 'com.letv.sarrsdesktop:BlockCanaryExJRTNoOp:0.9.9.4'
```

Basic Usage
-------------

init BlockCanaryEx before other method when your application attachBaseContext

```java
public class TestApplication extends Application {
    @Override
    public void attachBaseContext(Context context) {
        super.attachBaseContext(context);
        boolean isInSamplerProcess = BlockCanaryEx.isInSamplerProcess(this);
        if(!isInSamplerProcess) {
            BlockCanaryEx.install(new Config(this));
        }
        if(!isInSamplerProcess) {
            //your code start here
        }
    }
}
```

done, now BlockCanaryEx be enabled when you app in debug mode.

Advance Usage
-------------

BlockCanaryEx do method sample by inject MethodSampler into your code when compile time,
the scope to inject MethodSampler is the src of your project and subProject by default.
projectLocalDep, subProjectLocalDep, externalLibraries is ignored. If you want to change
the scope to watch more method performance, you can do the config in gradle.

```groovy
  apply plugin: 'blockcanaryex'

  block {
      debugEnabled true //enable MethodSampler when debug mode, default true
      releaseEnabled false //enable MethodSampler when release mode, default false
      excludePackages = [] //exclude the package you don't want to inject MethodSampler, eg: ['com.android', 'android.support']
      excludeClasses = [] //exclude the class you don't want to inject MethodSampler
      includePackages = [] //only include the package you want to inject MethodSampler, packages which don't included will not be injected

      scope {
          project true //inject MethodSampler for app project, default true
          projectLocalDep false //inject MethodSampler for app libs(eg: .jar), default false
          subProject true //inject MethodSampler for subProject of app project, default true
          subProjectLocalDep false //inject MethodSampler for subProject libs, default false
          externalLibraries false //inject MethodSampler external libs, default false
      }
  }
 ```

you also can override more Config method to customize BlockCanaryEx runtime

```java
  public class TestApplication extends Application {
      @Override
      public void onCreate() {
          super.onCreate();
          BlockCanaryEx.install(new Config(this) {
              /**
               * If need notification to notice block.
               *
               * @return true if need, else if not need.
               */
              public boolean displayNotification() {
                  return true;
              }

              /**
               * judge whether the loop is blocked, you can override this to decide
               * whether it is blocked by your logic
               *
               * @param costRealTimeMs in mills
               * @param costThreadTimeMs in mills
               * @param creatingActivity current creatingActivity class name, nullable
               * @param isApplicationCreating is application creating
               * @param inflateCostTimeMs view inflating time in mills
               * @return true if blocked, else false
               */
              public boolean isBlock(long costRealTimeMs, long costThreadTimeMs,
                                         String creatingActivity, boolean isApplicationCreating, long inflateCostTimeMs) {
                  if(creatingActivity != null || isApplicationCreating) {
                      return costRealTimeMs > 250L;
                  } else {
                      return costRealTimeMs > 100L && costThreadTimeMs > 8L;
                  }
              }

              /**
               * judge whether the method is heavy method, we will print heavy method in log
               *
               * Note: running in none ui thread
               *
               * @param methodInfo {@link MethodInfo}
               * @return true if it is heavy method, else false
               */
              public boolean isHeavyMethod(MethodInfo methodInfo) {
                  return (methodInfo.getCostThreadTime() > 0L && methodInfo.getCostRealTimeMs() > 0L)
                          || methodInfo.getCostRealTimeMs() > 2L;
              }

              /**
               * judge whether the method is called frequently, we will print frequent method in log
               *
               * Note: running in none ui thread
               *
               * @param frequentMethodInfo the execute info of same method in this loop {@link FrequentMethodInfo}
               * @return true if it is frequent method, else false
               */
              public boolean isFrequentMethod(FrequentMethodInfo frequentMethodInfo) {
                  return frequentMethodInfo.getTotalCostRealTimeMs() > 1L && frequentMethodInfo.getCalledTimes() > 1;
              }

              /**
               * we will save block log to sdcard by default, if you want to disable this, just return false
               *
               * Warning: if save log disabled, new BlockInfo will not be displayed in DisplayActivity
               *
               * Note: running in none ui thread
               *
               * @return false to disable save log
               */
              public boolean enableSaveLog() {
                  return true;
              }

              /**
               * Path to save log, like ""/blockcanary/"", will save to sdcard if can. if we can't save log to sdcard (eg: no permission),
               * else we will try to save to ""${context.getExternalFilesDir(""BlockCanaryEx"")}${provideLogPath()}"", if we failed too,
               * we will save to ""${context.getFilesDir()${provideLogPath()}""}""
               *
               * Note: running in none ui thread
               *
               * @return path of log files
               */
              public String provideLogPath() {
                  return ""/blockcanaryex/"" + getContext().getPackageName() + ""/"";
              }

              /**
               * Network type to record in log, you should impl this if you want to record this
               *
               * @return {@link String} like 2G, 3G, 4G, wifi, etc.
               */
              public String provideNetworkType() {
                  return ""unknown"";
              }

              /**
               * unique id to record in log, you should impl this if you want to record this
               *
               * @return {@link String} like imei, account id...
               */
              public String provideUid() {
                  return ""unknown"";
              }

              /**
               * Implement in your project.
               *
               * @return Qualifier which can specify this installation, like version + flavor.
               */
              @TargetApi(Build.VERSION_CODES.DONUT)
              public String provideQualifier() {
                  PackageInfo packageInfo = ProcessUtils.getPackageInfo(getContext());
                  ApplicationInfo applicationInfo = getContext().getApplicationInfo();
                  if(packageInfo != null) {
                      return applicationInfo.name + ""-"" + packageInfo.versionName;
                  }
                  return ""unknown"";
              }

              /**
               * Block listener, developer may provide their own actions
               *
               * @param blockInfo {@link BlockInfo}
               */
              @Override
              public void onBlock(BlockInfo blockInfo) {
              }
          });
      }
  }
 ```

License
-------

     Licensed under the Apache License, Version 2.0 (the ""License"");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an ""AS IS"" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
","'android', 'blockcanaryex', 'findblock', 'performance', 'performance-monitoring'",2017-03-06T14:56:32Z,2017-08-23T03:29:40Z,6,2,2171,72,"('Lei Zhou (周磊)', 63), ('seiginonakama', 21), ('Jing Zhang', 4), ('zhoulei', 4), ('zl142486', 2), ('Rainer-Lang', 1)",1,1,
JoeyChiou/B20150401,,"# B20150401
",,2015-04-01T00:37:20Z,2015-04-14T14:55:14Z,1,1,0,16,"('JoeyChiou', 1)",1,1,
ddollar/jekyll-s3,Push your Jekyll Blog to Amazon S3!,"# jekyll-s3

Deploy your jekyll site to S3.

## Install

    gem install jekyll-s3

## Setup

  * Go to your jekyll site directory
  * Run `jekyll-s3`. It generates a configuration file called `_jekyll_s3.yml` that looks like that:

s3_id: YOUR_AWS_S3_ACCESS_KEY_ID
s3_secret: YOUR_AWS_S3_SECRET_ACCESS_KEY
s3_bucket: your.blog.bucket.com


  * Edit it with your details.

## Deploy!

  * Run `jekyll-s3`. Done.

## Want the root url to render index.html?

  * Log into 
  * Set the Index document to index.html in Bucket Properties >
    Website.
  * Visit the website endpoint:
    (http://yourblog.s3-website...amazonaws.com)

## Todo

  * Upload new / updated files *only* (using s3-sync?)

## License

MIT

## Copyright

Copyright (c) 2011 VersaPay, Philippe Creux.
  
",,2011-05-11T22:26:17Z,2011-05-11T00:16:31Z,1,1,14,3,"('pcreux', 7)",0,0,
sodaling/FastestBilibiliDownloader,B站视频极速批量下载器|The fastest Bilibili video downloader,"# FastestBibiliDownloader

## 原项目地址：**[ FastestBilibiliDownloader](https://github.com/sodaling/FastestBilibiliDownloader)**

> 项目仅用于学习交流，请勿用于任何商业用途！

## ⭐新增

自动解析 **想要下载的视频网址 / UP主个人主页网址**，支持：

- [x] [https://www.bilibili.com/video/**旧版的av号**/](#)，av号是以`av`开头的**一串数字**
- [x] [https://www.bilibili.com/video/**新版的BV号**/](#)，BV号是以`BV`开头的**一串字符**
- [x] [https://space.bilibili.com/**UP主的ID**/](#)，UP主的ID是**一串数字**

![demo.png](demo.png)

## ⚠较原项目的删减

+ 由于FFmeg拼接、转化耗时太长，故移除了 `video merge`中的功能 。下载后的视频为`.flv`格式。

-----

## 👍原项目说明

**东半球第二快的Bilibili.com（B站）视频下载器！**

如果你想下载b站某个up主的所有视频，而且要飞快的那种，那么你可以试试这个项目-.-

目前提供两个（三个）视频下载方案:

1. 通过视频的aid,下载单个视频.
2. 通过up主的upid(b站叫mid),下载这个up主所投稿的所有视频.
3. 通过视频的BVid,下载单个视频. **(new)**


> 特性:
>
> Github上下载b站视频代码已经有很多了.那么本下载器的特点是啥呢?
>
> 因为这是用Golang写的,当然了,也就利用了Golang的特性:goroutine.
>
> 简单来说,特点就是:
>
> **快!贼快!下载的视频越多越快！**
>
> * 当单个aid视频分了若干个part时候,或者当你选了下载up主下所有视频时候.多个视频将会同时并行下载,跑满你的网速绝对不是问题.
> * 下载与合并视频并行处理.如果视频分了多个part,下载完成的同时就会立即合并.该视频合并处理和其他与其他下载和合并同时进行且互不影响.

### 运行

下载的临时视频会存放在运行路径下的**download**文件夹下，每个视频（aid）一个文件夹，以**aid_视频标题**为文件夹名称。
最终的视频会存放在运行路径下的**output**文件夹下，每个aid一个文件夹，以**视频标题**为文件夹名称。
```shell
go run cmd/start-concurrent-engine.go -h   # 获得参数
```



#### 使用Golang编译环境

1. 安装Golang编译环境
* Ubuntu
```shell
sudo apt install golang
```

1.1 如果你在中国大陆，那么你大概率可能或许maybe需要配置代理才能顺利进行下一步。
```shell
go env -w GO111MODULE=on #启用Go Moledules
go env -w  GOPROXY=https://goproxy.io #使用官方代理
```

2. 一次性运行FastestBibiliDownloader
程序入口在**cmd/start-concurrent-engine.go**，只需要
```shell
go run cmd/start-concurrent-engine.go -t (aid/bvid/upid) -v (id)
```
首次运行会花时间下一大堆东西，然后按提示操作即可。
注意，合并视频需要FFmpeg的支持。不然只会下载并不会自动合并。FFmpeg的安装教程请咨询搜索引擎。

3. 编译FastestBibiliDownloader
```shell
go build cmd/start-concurrent-engine.go -t (aid/bvid/upid) -v (id)
```
之后直接运行./start-concurrent-engine即可。

#### 如果你没有Golang编译环境，或者没有FFmeg环境。那么推荐用docker方式运行。已经写好了dockefile和makefile。你只需要：

   ```shell
   $ cd FastestBilibiliDownloader
   $ make build #下载镜像
   $ make run #运行镜像
   ```

   

#### 后续有空会打包bin文件到release的。

### 感谢

1. engine部分的框架参考**ccmouse**的思路，后面自己调整了整体架构部分，非常感谢。
2. [bilibili-downloader](https://github.com/stevenjoezhang/bilibili-downloader)：b站请求视频的API等等都是从这位的代码获得，本身的py代码注释也非常清晰，非常感谢。
3. @sshwy帮忙抓虫纠错
4. @justin201802不厌其烦的帮忙修改

>欢迎各位提pr或者fork或者什么都行，能帮助到你的话欢迎star！疫情无聊在家磨时间的产物，粗糙了一点，欢迎各位完善～

","'bilibili', 'video-downloader'",2020-02-10T19:29:53Z,2023-07-25T01:54:06Z,5,4,672,15,"('sodaling', 50), ('laorange', 4), ('huhaobin', 2), ('yangyah1', 2), ('ilolipopi', 1)",1,1,
evansolomon/IsValid.org,Analyze the results of A/B tests,"[![Build Status](https://travis-ci.org/evansolomon/IsValid.org.png)](https://travis-ci.org/evansolomon/IsValid.org)

## What is this?

IsValid automates statistical tests for A/B experiments.  It will calculate significance and confidence intervials.

In short, you can use it to figure out what, if anything, the result of an A/B test means.

## How can I use it?

I host this exact code at [isvalid.org](http://isvalid.org).  If you want, you can host it yourself.

There is also an API (which you could host yourself!) that you can read about [here](https://github.com/evansolomon/IsValid.org/wiki/API).

## Development

IsValid uses [Grunt](http://gruntjs.com/) to do all kind of build process-y things.  A simple `npm install` will take care of its dependencies.

## Bookmarklet

You can send data to IsValid with a handy browser bookmarklet using this as the URL:

    javascript:(function(){var e;e={init:function(){var t;return window.jQuery?e.ready():(t=document.createElement(""script""),t.type=""text/javascript"",t.src=""//ajax.googleapis.com/ajax/libs/jquery/1.8.1/jquery.min.js"",t.onload=t.onreadystatechange=function(){return this.readyState&&""loaded""!==this.readyState&&""complete""!==this.readyState?void 0:e.ready()},document.getElementsByTagName(""head"")[0].appendChild(t))},ready:function(){return e.reset(),e.header.create(),jQuery(document).click(e.click),jQuery(""*"").hover(e.mouseEnter,e.mouseLeave)},click:function(t){var n,r;return r=t.target.innerHTML,n=parseInt(r.replace(/,/g,""""),10),e.selectable(n)?(e.selected.push(n),jQuery(t.target).css(""background-color"",""rgba(50, 200, 80, 0.7)"").addClass(""isvalid-clicked""),jQuery("".isvalid-steps"").text(e.nextStep()),4===e.selected.length&&(window.open(""http://isvalid.org/?sc=""+e.selected[0]+""&cc=""+e.selected[1]+""&se=""+e.selected[2]+""&ce=""+e.selected[3]),e.reset()),t.target.style.cursor=""default"",e.header.update(),!1):void 0},mouseLeave:function(e){var t;return t=jQuery(this),t.hasClass(""isvalid-clicked"")||t.hasClass(""isvalid-steps"")||t.css(""background-color"",""""),e.target.style.cursor=""default""},mouseEnter:function(t){var n,r,i;return n=jQuery(this),!n.hasClass(""isvalid-clicked"")&&(i=t.target.innerHTML,r=parseInt(i.replace(/,/g,""""),10),e.selectable(r))?(t.stopPropagation(),n.css(""background-color"",""rgba(50, 200, 80, 0.25)""),t.target.style.cursor=""pointer""):void 0},selectable:function(e){return!isNaN(parseFloat(e))&&isFinite(e)},nextStep:function(){var t;switch(t=void 0,e.selected.length){case 0:t=""Control samples"";break;case 1:t=""Control conversions"";break;case 2:t=""Experiment samples"";break;case 3:t=""Experiment conversions"";break;default:t=""This should never happen""}return""Select: ""+t},header:{create:function(){var e;return e=jQuery(""""),e.css({top:""0px"",left:""0px"",""background-color"":""rgba(50, 200, 80, 0.8)"",""z-index"":""10000"",width:""100%"",height:""60px"",position:""fixed"",""text-align"":""center"",""padding-top"":""20px"",""font-size"":""30px""}),e.addClass(""isvalid-steps""),e.prependTo(""body""),this.update()},update:function(){return jQuery("".isvalid-steps"").text(e.nextStep())}},reset:function(){return jQuery("".isvalid-clicked"").removeClass(""isvalid-clicked"").css(""background-color"",""""),jQuery(document).unbind(""click"",e.click),jQuery(""*"").unbind(""mouseleave"",e.mouseLeave).unbind(""mouseenter"",e.mouseEnter),jQuery("".isvalid-steps"").remove(),e.selected=[]}},e.init()}).call(this);
",,2011-10-11T14:59:54Z,2014-11-04T00:56:46Z,3,3,21,2,"('evansolomon', 279), ('westi', 1), ('pjad', 1)",2,2,
IBM-Blockchain-Archive/example02,Example chaincode. Store two integers named A and B. Subtract from one and add to the other.,"#Example 02 Chaincode

##### Description

Store two integers named A and B. Subtract from one and add to the other.

***

##### Versions and Supported Platforms
Use the correct version for your Hyperledger network.

- [Example02 v1.0](https://github.com/ibm-blockchain/example02/tree/v1.0) 
	- Works with Hyperledger fabric `v0.5-developer-preview`
	- IBM Bluemix Blockchain Service `v0.4.2+`
	- HTTP deployment url: `http://gopkg.in/ibm-blockchain/example02.v1`

- [Example02 v2.0](https://github.com/ibm-blockchain/example02/tree/v2.0)
	- Works with Hyperledger fabric `v0.6-developer-preview`
	- HTTP deployment url: `http://gopkg.in/ibm-blockchain/example02.v2`

****

Not familiar with chaincode yet? Try [Learn Chaincode](https://github.com/IBM-Blockchain/learn-chaincode) first.
",,2016-10-24T15:47:17Z,2017-07-01T16:11:35Z,1,1,11,9,"('dshuffma-ibm', 2)",0,0,
uber/RIBs,Uber's cross-platform mobile architecture framework.,"



[![Android CI](https://github.com/uber/RIBs/actions/workflows/android.yml/badge.svg?branch=main)](https://github.com/uber/RIBs/actions/workflows/android.yml)
[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)
[![Maven Central](https://img.shields.io/maven-central/v/com.uber.rib/rib-android.svg)](https://search.maven.org/artifact/com.uber.rib/rib-android)
[![Cocoapods Compatible](https://img.shields.io/cocoapods/v/RIBs.svg)](https://cocoapods.org/pods/ribs)
[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg)](https://github.com/Carthage/Carthage)

RIBs is the cross-platform architecture framework behind many mobile apps at Uber. The name RIBs is short for Router, Interactor and Builder, which are core components of this architecture. This framework is designed for mobile apps with a large number of engineers and nested states.

The RIBs architecture provides:
* **Shared architecture across iOS and Android.** Build cross-platform apps that have similar architecture, enabling iOS and Android teams to cross-review business logic code.
* **Testability and Isolation.** Classes must be easy to unit test and reason about in isolation. Individual RIB classes have distinct responsibilities like: routing, business, view logic, creation. Plus, most RIB logic is decoupled from child RIB logic. This makes RIB classes easy to test and reason about independently.
* **Tooling for developer productivity.** RIBs come with IDE tooling around code generation, memory leak detection, static analysis and runtime integrations - all which improve developer productivity for large teams or small.
* **An architecture that scales.** This architecture has proven to scale to hundreds of engineers working on the same codebase and apps with hundreds of RIBs.


## Documentation
To get started with RIBs, please refer to the [RIBs documentation](https://github.com/uber/RIBs/wiki). This describes key concepts on RIBs, from what they are for, their structure and common use cases.

To get more hands on with RIBs, we have written a [series of tutorials](https://github.com/uber/RIBs/wiki) that run you through the main aspects of the architecture with hands-on examples.

To read about the backstory on why we created RIBs, see [this blog post](https://www.uber.com/blog/new-rider-app-architecture/) we wrote when releasing RIBs in production the first time and see [this short video](https://www.youtube.com/watch?v=Q5cTT0M0YXg) where we discussed how the RIBs architecture works.

#### What is the difference between RIBs and MV*/VIPER?

MVC, MVP, MVI, MVVM and VIPER are architecture patterns. RIBs is a framework. What differentiates RIBs from frameworks based on MV*/VIPER is:

- **Business logic drives the app, not the view tree**. Unlike with MV*/VIPER, a RIB does not have to have a view. This means that the app hierarchy is driven by the business logic, not the view tree.
- **Independent business logic and view trees**. RIBs decouple how the business logic scopes are structured from view hierarchies. This allows the application to have a deep business logic tree, isolating business logic nodes, while maintaining a shallow view hierarchy making layouts, animations and transitions easy.

There are some other novel things about RIBs. However, these could also be implemented with other MV*/VIPER frameworks. These are:
- **Cross-platform approach**, allowing iOS and Android architecture to stay in sync.
- **Tooling for easier adoption** on larger apps or teams. Tooling we are open sourcing includes IDE plugins for code generation and static code analysis.
- **Strong opinions about how state should be communicated**, using DI and Rx. Each RIB defines its dependencies and what dependencies it needs from its parent. Parent components that fulfill a child’s parent dependencies are provided to child Builders as a constructor dependency to allow for hierarchical DI scoping. This means that information is communicated via these dependencies up and down the tree.

## Usage

1. Clone this repository
2. Integrate using your preferred installation mechanism

For usage of the tooling built around RIBs, please see the [Tooling section](https://github.com/uber/RIBs/wiki#rib-tooling) in our documentation.

## Installation for Android

To integrate the recommended minimum setup for RIBs add the following to your `build.gradle`:

```gradle
dependencies {
  annotationProcessor 'com.uber.rib:rib-compiler-test:0.16.2'
  implementation 'com.uber.rib:rib-android:0.16.2'
  testImplementation 'com.uber.rib:rib-test:0.16.2'
}
```
There are a number of extension packages available as well including Kotlin extensions, Jetpack Compose support, Coroutines support


## Installation for iOS
#### CocoaPods

To integrate RIBs into your project add the following to your `Podfile`:

```ruby
pod 'RIBs', '~> 0.9'
```

#### Carthage

To integrate RIBs into your project using Carthage add the following to your `Cartfile`:

```ruby
github ""uber/RIBs"" ~> 0.9
```

## Related projects

If you like RIBs, check out other related open source projects from our team:
- [Needle](https://github.com/uber/needle): a compile-time safe Swift dependency injection framework.
- [Motif](https://github.com/uber/motif): An abstract on top of Dagger offering simpler APIs for nested scopes.
- [Swift Concurrency](https://github.com/uber/swift-concurrency): a set of concurrency utility classes used by Uber, inspired by the equivalent [java.util.concurrent](https://docs.oracle.com/javase/8/docs/api/java/util/concurrent/package-summary.html) package classes.
- [Swift Abstract Class](https://github.com/uber/swift-abstract-class): a light-weight library along with an executable that enables compile-time safe abstract class development for Swift projects.
- [Swift Common](https://github.com/uber/swift-common): common libraries used by this set of Swift open source projects.

## License

    Copyright (C) 2017 Uber Technologies

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
","'android', 'architectural-patterns', 'architecture', 'ios', 'mobile', 'mobile-app', 'mobile-development', 'mvc', 'mvp', 'mvvm', 'viper'",2017-10-03T18:18:50Z,2024-05-01T10:46:53Z,70,60,7705,202,"('jbarr21', 109), ('AttwellBrian', 92), ('tyvsmith', 90), ('FranAguilera', 44), ('psteiger', 35), ('artman', 22), ('neakor', 17), ('idanakav', 15), ('gergelyorosz', 14), ('Gergely Orosz', 12), ('kovpas', 11), ('sbarow', 10), ('yuanlu-0', 10), ('Pavel Mazurin', 8), ('Tuomas Artman', 7), ('SergeySmykovskyi', 7), ('edrew08', 6), ('msridhar', 6), ('Leland Takamine', 4), ('jarinosuke', 4), ('rendecano', 4), ('ZacSweers', 3), ('oliviernotteghem', 3), ('thekirankumar', 2), ('Solace-Studios', 2), ('sanchezz93', 2), ('uOOOO', 2), ('Alan Zhao', 1), ('kiliankoe', 1), ('lucas34', 1), ('lukaciko', 1), ('MathieuBrousseIDO', 1), ('oronbz', 1), ('Patrick Pei', 1), ('pavlodavydiuk', 1), ('rafaeltoledo', 1), ('rudro', 1), ('serejahh', 1), ('ShaishavGandhi', 1), ('ElonPark', 1), ('tp', 1), ('TonyTangAndroid', 1), ('imairi', 1), ('dzzh', 1), ('davissuber', 1), ('fegol', 1), ('kimgaeunnn', 1), ('BharathMG', 1), ('Alex Culeva', 1), ('alexDtorres', 1), ('iMinichrispy', 1), ('mamykin-andrey', 1), ('pomozoff', 1), ('ctataru', 1), ('myhrvold', 1), ('Daisuke Iwata', 1), ('dayanruben', 1), ('DevYeom', 1), ('kronik', 1), ('volatilegg', 1), ('trungducc', 1), ('ebubekirsezer', 1), ('Ericliu001', 1), ('ibrahimkteish', 1), ('woookDev', 1), ('jsdev887', 1), ('hansler', 1), ('Jorge Coca', 1), ('JUSTINMKAUFMAN', 1), ('KYHyeon', 1)",43,37,
edavis10/heroku_s3_backup,Backup your PostgreSQL database from Heroku to Amazon S3.  Gem to wrap the code by Trevor Turk.,"= heroku_s3_backup

Gem to backup your database on Heroku.com to S3.

== Usage

1. Add the heroku_s3_backup gem to your .gems file for Heroku
2. Add your S3 config to Heroku
     heroku config:add s3_access_key_id=YOUR_ID s3_secret_access_key=YOUR_KEY
3. Run the HerokuS3Backup.backup method from your console or a cronjob
     task :cron => :environment do
       HerokuS3Backup.backup
     end

The blog post at http://almosteffortless.com/2010/04/14/automated-heroku-backups/ has some more detailed instructions.

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Code stolen from Trevor Turk (http://almosteffortless.com/2010/04/14/automated-heroku-backups/) and packaged by Eric Davis.

Copyright (c) 2010 Eric Davis. See LICENSE for details.
",,2010-04-23T15:59:01Z,2010-04-23T16:05:24Z,1,1,27,2,"('edavis10', 4)",0,0,
rubygems/bundler,Manage your Ruby application's gem dependencies,"**Bundler is now maintained in the [rubygems/rubygems](https://github.com/rubygems/rubygems) repository.**

----

[![Version     ](https://img.shields.io/gem/v/bundler.svg?style=flat)](https://rubygems.org/gems/bundler)
[![Inline docs ](https://inch-ci.org/github/rubygems/bundler.svg?style=flat)](https://inch-ci.org/github/rubygems/bundler)
[![Slack       ](https://bundler-slackin.herokuapp.com/badge.svg)](https://bundler-slackin.herokuapp.com)

# Bundler: a gem to bundle gems

Bundler makes sure Ruby applications run the same code on every machine.

It does this by managing the gems that the application depends on. Given a list of gems, it can automatically download and install those gems, as well as any other gems needed by the gems that are listed. Before installing gems, it checks the versions of every gem to make sure that they are compatible, and can all be loaded at the same time. After the gems have been installed, Bundler can help you update some or all of them when new versions become available. Finally, it records the exact versions that have been installed, so that others can install the exact same gems.

### Installation and usage

To install (or update to the latest version):

```
gem install bundler
```

To install a prerelease version (if one is available), run `gem install bundler --pre`. To uninstall Bundler, run `gem uninstall bundler`.

Bundler is most commonly used to manage your application's dependencies. For example, these commands will allow you to use Bundler to manage the `rspec` gem for your application:

```
bundle init
bundle add rspec
bundle install
bundle exec rspec
```

See [bundler.io](https://bundler.io) for the full documentation.

### Troubleshooting

For help with common problems, see [TROUBLESHOOTING](doc/TROUBLESHOOTING.md).

Still stuck? Try [filing an issue](doc/contributing/ISSUES.md).

### Other questions

To see what has changed in recent versions of Bundler, see the [CHANGELOG](CHANGELOG.md).

To get in touch with the Bundler core team and other Bundler users, please see [getting help](doc/contributing/GETTING_HELP.md).

### Contributing

If you'd like to contribute to Bundler, that's awesome, and we <3 you. We've put together [the Bundler contributor guide](https://github.com/rubygems/bundler/blob/master/doc/contributing/README.md) with all of the information you need to get started.

If you'd like to request a substantial change to Bundler or to the Bundler documentation, refer to the [Bundler RFC process](https://github.com/bundler/rfcs) for more information.

While some Bundler contributors are compensated by Ruby Together, the project maintainers make decisions independent of Ruby Together. As a project, we welcome contributions regardless of the author's affiliation with Ruby Together.

### Supporting


Ruby Together pays some Bundler maintainers for their ongoing work. As a grassroots initiative committed to supporting the critical Ruby infrastructure you rely on, Ruby Together is funded entirely by the Ruby community. Contribute today as an individual or (better yet) as a company to ensure that Bundler, RubyGems, and other shared tooling is around for years to come.

### Code of Conduct

Everyone interacting in the Bundler project's codebases, issue trackers, chat rooms, and mailing lists is expected to follow the [Bundler code of conduct](https://github.com/rubygems/bundler/blob/master/CODE_OF_CONDUCT.md).

### License

Bundler is available under an [MIT License](https://github.com/rubygems/bundler/blob/master/LICENSE.md).
","'dependency-manager', 'ruby', 'rubygems'",2010-01-26T00:46:38Z,2021-03-19T11:26:04Z,770,369,4886,152,"('indirect', 2659), ('segiddins', 1347), ('bundlerbot', 1278), ('deivid-rodriguez', 962), ('homu', 472), ('hone', 445), ('josevalim', 370), ('Carl Lerche', 304), ('Carlhuda', 180), ('hsbt', 170), ('colby-swandale', 125), ('asutoshpalai', 124), ('Colby Swandale', 117), ('wycats', 110), ('RochesterinNYC', 106), ('Who828', 105), ('TimMoore', 98), ('nex3', 87), ('agrim123', 71), ('sferik', 63), ('joshbuddy', 53), ('chrismo', 49), ('Andre Arko', 42), ('Koronen', 37), ('agis', 32), ('Andre Medeiros', 31), ('esasse', 30), ('denniss', 29), ('jeremy', 29), ('kou', 29), ('gnufied', 28), ('Boggs', 27), ('radar', 27), ('koic', 26), ('spastorino', 26), ('tenderlove', 24), ('pcarranza', 24), ('pducks32', 24), ('rohitarondekar', 23), ('b-ggs', 23), ('greysteil', 22), ('José Valim', 21), ('rubymorillo', 21), ('Brian Donovan', 19), ('joshk', 19), ('Ash Wilson', 18), ('ajwann', 18), ('eagletmt', 18), ('JuanitoFatas', 17), ('NickLaMuro', 17), ('myronmarston', 16), ('jherdman', 15), ('kiela', 15), ('64kramsystem', 15), ('Stefan Lance', 15), ('eregon', 15), ('jules2689', 15), ('amatsuda', 14), ('Evan Phoenix', 14), ('arbonap', 14), ('Zachary Scott', 14), ('Shekharrajak', 14), ('allenzhao', 13), ('janpio', 13), ('rthbound', 13), ('Andre Arko and Terence Lee', 13), ('fabien', 13), ('Michael Pitman', 13), ('mislav', 13), ('voxik', 13), ('xaviershay', 12), ('okkez', 12), ('joelmoss', 12), ('cypher', 12), ('mvz', 12), ('nesaulov', 11), ('kirs', 11), ('ryanfox1985', 11), ('raggi', 11), ('André Arko', 11), ('duckinator', 10), ('luislavena', 10), ('dekellum', 10), ('ankitkataria', 10), ('André Medeiros', 9), ('pskocik', 9), ('mobilutz', 8), ('zofrex', 8), ('simi', 8), ('jhhere', 8), ('fredrb', 8), ('carllerche', 8), ('postmodern', 8), ('smellsblue', 8), ('Charles Jolley', 8), ('zorbash', 8), ('jaym', 8), ('jendiamond', 8), ('larskanis', 7), ('fotanus@gmail.com', 7), ('David Morhovich', 7), ('dubek', 7), ('slothelle', 7), ('olleolleolle', 7), ('chastell', 7), ('bronzdoc', 7), ('Yehuda Katz', 7), ('tricknotes', 7), ('Caden Lovelace', 6), ('mattbrictson', 6), ('hmistry', 6), ('Greg Werbin', 6), ('arthurnn', 6), ('Hsing-Hui Hsu', 6), ('Andy Delcambre', 6), ('tom hensel', 6), ('fatkodima', 6), ('zachahn', 6), ('Antonio Scandurra', 6), ('banyan', 6), ('Lukas Oberhuber', 6), ('MSP-Greg', 6), ('mtscout6', 6), ('mipearson', 6), ('timblair', 6), ('nobu', 6), ('SnackBandit', 6), ('savavirtosu', 6), ('Sam Kottler', 6), ('alyssais', 5), ('schneems', 5), ('Yehuda Katz', 5), ('MSNexploder', 5), ('sol', 5), ('koraktor', 5), ('mistydemeo', 5), ('citizen428', 5), ('A5308Y', 5), ('BenMorganIO', 5), ('brchristian', 5), ('cowboyd', 5), ('Daniel Trierweiler', 5), ('dougbarth', 5), ('lamont-granquist', 5), ('walf443', 5), ('jrafanie', 5), ('cldwalker', 5), ('Hemant Kumar', 5), ('jlsuttles', 5), ('Marcus Oladell', 4), ('Matthew Phillips', 4), ('nholden', 4), ('pmahoney', 4), ('Peter Retzlaff', 4), ('pjvds', 4), ('prathamesh-sonpatki', 4), ('Rafael Mendonça França', 4), ('rsutphin', 4), ('roseweixel', 4), ('mcfiredrill', 4), ('pwnall', 4), ('William Johnston', 4), ('Yehuda Katz', 4), ('danielsdeleo', 4), ('ojab', 4), ('saigo', 4), ('sanemat', 4), ('fotanus', 4), ('ixti', 4), ('ognevsky', 4), ('cdwort', 4), ('knu', 4), ('sonalkr132', 4), ('diegosteiner', 4), ('evanphx', 4), ('databus23', 4), ('gjaldon', 4), ('gavrieltal', 4), ('Hirotaka Azuma', 4), ('vassilevsky', 4), ('kevmoo', 4), ('kerrizor', 4), ('Keith Shook', 4), ('znz', 4), ('Karlo', 4), ('josh', 4), ('jonathanpike', 4), ('joelvh', 4), ('Jesse Luehrs', 4), ('Jeremy Tryba', 4), ('smathy', 4), ('JamesFerguson', 4), ('stephencelis', 3), ('stefansedich', 3), ('Shayon Mukherjee', 3), ('sumbach', 3), ('frsyuki', 3), ('rwilcox', 3), ('Ryan Ahearn', 3), ('QuBiT', 3), ('rrrene', 3), ('rkbodenner', 3), ('pascal-za', 3), ('coderanger', 3), ('ndbroadbent', 3), ('trans', 3), ('steved', 3), ('sunaku', 3), ('timfel', 3), ('shyouhei', 3), ('wjordan', 3), ('William Johnston', 3), ('wilson', 3), ('yuuki1224', 3), ('dbloete', 3), ('deepj', 3), ('meganemura', 3), ('richo', 3), ('tdumitrescu', 3), ('tomhuda', 3), ('CoralineAda', 3), ('chalkos', 3), ('cgriego', 3), ('Chris Keele', 3), ('Danial Pearce', 3), ('David Blondeau', 3), ('Donnie Tognazzini', 3), ('EduardoBautista', 3), ('Emily Giurleo', 3), ('nilsding', 3), ('gxespino', 3), ('grzuy', 3), ('hwartig', 3), ('BanzaiMan', 3), ('igorbozato', 3), ('rykov', 3), ('opiethehokie', 3), ('maxjustus', 3), ('spraints', 3), ('Martin Jagusch', 3), ('pmenglund', 3), ('bowsersenior', 3), ('coilysiren', 3), ('Lars Haugseth', 3), ('mrkn', 3), ('DevRubySlippers', 3), ('wuputah', 3), ('jdliss', 3), ('jisaacks', 3), ('biow0lf', 3), ('Igor Zubkov', 3), ('mastfissh', 2), ('orien', 2), ('chipiga', 2), ('phil-monroe', 2), ('rafaelfranca', 2), ('njam', 2), ('richardkmichael', 2), ('robertwahler', 2), ('sandlerr', 2), ('lenary', 2), ('seanlinsley', 2), ('sirupsen', 2), ('sdhull', 2), ('steveklabnik', 2), ('steverob', 2), ('csgui', 2), ('kcurtin', 2), ('spk', 2), ('leereilly', 2), ('crowbot', 2), ('lucasmazza', 2), ('mal', 2), ('Nitrodist', 2), ('Matt Colyer', 2), ('moeffju', 2), ('MaxLap', 2), ('Michael Birk', 2), ('m1k3', 2), ('staugaard', 2), ('mheffner', 2), ('mfazekas', 2), ('olivierlacan', 2), ('qblake', 2), ('zverok', 2), ('y-yagi', 2), ('tiredpixel', 2), ('smlx', 2), ('shtirlic', 2), ('sealocal', 2), ('rhysd', 2), ('hirochachacha', 2), ('hasimo', 2), ('geemus', 2), ('bundlerbotbot', 2), ('akihiro17', 2), ('mame', 2), ('Yorick Peterse', 2), ('Yehuda Katz and Terence Lee', 2), ('Yehuda Katz', 2), ('Yehuda Katz', 2), ('morgoth', 2), ('wfarr', 2), ('utkarshkukreti', 2), ('ogra', 2), ('tomlea', 2), ('echohead', 2), ('tf', 2), ('coop', 2), ('aeroastro', 2), ('giraffate', 2), ('tdtds', 2), ('Sven Schwyn', 2), ('sunny', 2), ('ddollar', 2), ('davidblondeau', 2), ('danieltdt', 2), ('danp', 2), ('dmcclory', 2), ('netskin-ci', 2), ('Colby', 2), ('cmeiklejohn', 2), ('Christian Hofstaedtler', 2), ('ChrisBr', 2), ('cheald', 2), ('gaffneyc', 2), ('csquared', 2), ('headius', 2), ('punkle', 2), ('Brian Donovan', 2), ('brettporter', 2), ('BrentWheeldon', 2), ('Bradley Schaefer', 2), ('Empact', 2), ('Artyom Khramov', 2), ('arronmabrey', 2), ('Andrey Korobkov', 2), ('aughr', 2), ('andreagoulet', 2), ('akahn', 2), ('mctaylorpants', 2), ('myabc', 2), ('Alex Arnell', 2), ('blackxored', 2), ('aroben', 2), ('kgrz', 2), ('Jonathan del Strother', 2), ('jrochkind', 2), ('jhawthorn', 2), ('jredville', 2), ('jeremyevans', 2), ('jetaggart', 2), ('jasonrclark', 2), ('jarmo', 2), ('janlelis', 2), ('James Harton', 2), ('Jacob Burkhart & Josh Lane', 2), ('jackdempsey', 2), ('yaotti', 2), ('5t111111', 2), ('dhh', 2), ('nubbel', 2), ('dduugg', 2), ('dylanahsmith', 2), ('Edwin Moss', 2), ('agenteo', 2), ('eric1234', 2), ('eric', 2), ('hibariya', 2), ('HINOHARA Hiroshi', 2), ('glennpratt', 2), ('gilesbowkett', 2), ('mtsmfm', 2), ('fnichol', 2), ('felixbuenemann', 2), ('fny', 2), ('Robin Böning', 1), ('Robert Soly', 1), ('Rob Slifka', 1), ('Ralph', 1), ('Przemek Hocke', 1), ('Piotr Sarnacki', 1), ('Piotr Kuczynski', 1), ('Philip Arndt', 1), ('Phil Nash', 1), ('Petrik de Heus', 1), ('Peter Wagenet', 1), ('Peter McLarnan', 1), ('Peter Marsh', 1), ('Pedro Nascimento', 1), ('Pedro Belo', 1), ('Pavel', 1), ('Paul Nikitochkin', 1), ('Paul Bowsher', 1), ('Patryk Ptasiński', 1), ('Patrik Ragnarsson', 1), ('PatrickGVice', 1), ('Patrick Helm', 1), ('Pan Thomakos', 1), ('Oscar Amado', 1), ('juanxo', 1), ('Shim Won', 1), ('Shannon Carey', 1), ('Sebastian Nowak', 1), ('Sebastian Martinez', 1), ('Sean Collins', 1), ('Sean Arnold', 1), ('Scott Tesler', 1), ('Scott Tadman', 1), ('Scott Pfister', 1), ('Scott Francis', 1), ('Sarah Duve', 1), ('Sarah Allen', 1), ('Sanjiv Jha', 1), ('Samuel Henrique', 1), ('Samuel Cochran', 1), ('Sam Woodard', 1), ('Sam Schenkman-Moore', 1), ('Sam Pohlenz', 1), ('Sam', 1), ('Salimane Adjao Moustapha', 1), ('Ryan Souza', 1), ('Ryan Carver', 1), ('Rory McCune', 1), ('Roque Pinel', 1), ('Matteo Latini', 1), ('Matt Wynne', 1), ('Matt Wrock', 1), ('Matt Sanders', 1), ('Matt Aimonetti', 1), ('Mateus Resende', 1), ('MasterLambaster', 1), ('Masha', 1), ('Masato Ohba', 1), (""Marjan Krekoten' (Мар'ян Крекотень)"", 1), ('Marcio Toshio', 1), ('Lukasz Strzalkowski', 1), ('Luis Reis', 1), ('Lorenzo Manacorda', 1), ('Lindsay Holmwood', 1), ('Leonardo Bessa', 1), ('Leo Arnold', 1), ('Lee Jarvis', 1), ('Laura Paakkinen', 1), ('Lars Gierth', 1), ('Lance Ivy', 1), ('Kyle Unruh', 1), ('Kyle Shank', 1), ('Kyle E. Mitchell', 1), ('Kristian Meier', 1), ('Oleg Pudeyev', 1), ('Nobuhiro Nikushi', 1), ('Nikolay Burlov', 1), ('Nihad Abbasov', 1), ('Nicolas Blanco', 1), ('Nick Slocum', 1), ('Nick Sieger', 1), ('Nick Pellant', 1), ('Nick Howard', 1), ('Nicholas Watson', 1), ('Neer Friedman', 1), ('Nathaniel Bibler', 1), ('Nate Holland', 1), ('NARUSE, Yui', 1), ('Mitchell Hashimoto', 1), ('Mike MacDonald', 1), ('Michael Raidel', 1), ('Michael Grosser', 1), ('Michael Deering', 1), ('Michael', 1), ('Mattias Petter Johansson', 1), ('Mattia Gheda', 1), ('Matthew Rudy Jacobs', 1), ('Matthew Kent', 1), ('Matthew Draper', 1), ('jhllnd', 1), ('jgeiger', 1), ('jfelchner', 1), ('jc00ke', 1), ('gyngve', 1), ('grosser', 1), ('ethanez713', 1), ('emsk', 1), ('dx7', 1), ('dsisnero', 1), ('doodzik', 1), ('dblock', 1), ('coding46', 1), ('brainopia', 1), ('bluehavana', 1), ('aslakhellesoy', 1), ('ascherger', 1), ('Zachary Scott', 1), ('Yehuda Katz', 1), ('Yehuda Katz', 1), ('Xavier Noria', 1), ('Will Leinweber', 1), ('Whitney-Rose Levis', 1), ('Tim Pope', 1), ('☈king', 1), ('valodzka', 1), ('utilum', 1), ('tomykaira', 1), ('tommy', 1), ('teitei-tk', 1), ('shrey-sharma', 1), ('serge', 1), ('rubiii', 1), ('robuye', 1), ('robcole', 1), ('quix', 1), ('osheroff', 1), ('opsb', 1), ('ohbarye', 1), ('mrb', 1), ('mpd', 1), ('meganemura', 1), ('mccraig mccraig of the clan mccraig', 1), ('masarakki', 1), ('loveky', 1), ('lolwut', 1), ('liz!', 1), ('leslie.wen', 1), ('kruczjak', 1), ('Tim Lucas', 1), ('Tieg Zaharia', 1), ('Thomas Drake-Brockman', 1), ('Terin Stock', 1), ('Tejas Bubane', 1), ('Tatsuya Hoshino', 1), ('Takashi Kokubun', 1), ('Sven Fuchs', 1), ('Strech (Sergey Fedorov)', 1), ('Strand McCutchen', 1), ('Steven R. Baker', 1), ('Steven Hancock', 1), ('Steve Richert', 1), ('Steve Jorgensen', 1), ('Steve Frank', 1), ('Steve Agalloco', 1), ('Stephen Touset', 1), ('Stephen Augenstein', 1), ('Sketch', 1), ('Simon Perepelitsa', 1), ('Simon Jefford', 1), ('Simon Elcham', 1), ('Simon Coffey', 1), ('Simon Chiang', 1), ('Waynn Lue', 1), ('Waldemar Quevedo', 1), ('Wade Tandy', 1), ('Vladimir Yarotsky', 1), ('Vijay Dev', 1), ('Victor Gama', 1), ('Veronica Ray', 1), ('Vasiliy Ermolovich', 1), ('U.Nakamura', 1), ('Tyler McMullen', 1), ('Tristan Hill', 1), ('Toshi MARUYAMA', 1), ('Tony Spataro', 1), ('Tony Jian', 1), ('Tony Issakov', 1), ('Tony Arcieri', 1), ('Tomoki Aonuma', 1), ('Tom Ward', 1), ('Tom Duffield', 1), ('Todd Lynam', 1), ('Tobias Grasse', 1), ('Tobias Grasse', 1), ('Tobias Bühlmann', 1), ('Tobias Bühlmann', 1), ('Timo Schilling', 1), ('danielpclark', 1), ('Daniel Mueller', 1), ('daniel-ferketa', 1), ('dweinand', 1), ('danfinnie', 1), ('djanowski', 1), ('perplexes', 1), ('Colby Swandale', 1), ('Cohen-Carlisle', 1), ('ccutrer', 1), ('aycabta', 1), ('claudiob', 1), ('cirdes', 1), ('chulkilee', 1), ('zeha', 1), ('farski', 1), ('cehoffman', 1), ('Chris Continanza and Terence Lee', 1), ('yous', 1), ('e2', 1), ('cpgo', 1), ('bryanwoods', 1), ('nono', 1), ('Lytol', 1), ('Ptico', 1), ('Jonan Scheffler', 1), ('Dávid Halász', 1), ('Dustin Willis Webber', 1), ('Dov Murik', 1), ('Donovan Bray', 1), (""Dominique d'Argent"", 1), ('Dominick Reinhold', 1), ('Dominic Cleal', 1), ('Diego Elio Pettenò', 1), ('Derek Prior', 1), ('Derek Kastner', 1), ('Dean Holdren', 1), ('David Stosik', 1), ('David Rodríguez', 1), ('dwradcliffe', 1), ('dlee', 1), ('David Jones', 1), ('DavidEGrayson', 1), ('dchandekstark', 1), ('David Celis', 1), ('kodnin', 1), ('Dave Smylie', 1), ('invisiblefunnel', 1), ('Daniel Spangenberg', 1), ('dr-itz', 1), ('ai', 1), ('pixeltrix', 1), ('andrew', 1), ('GeekOnCoffee', 1), ('Andrew Davis', 1), ('zmack', 1), ('alup', 1), ('Andrea Nodari', 1), ('tmm1', 1), ('AlexanderPavlenko', 1), ('apsoto', 1), ('Alex Gordon', 1), ('alepore', 1), ('aledalgrande', 1), ('aitor', 1), ('anibali', 1), ('Intrepidd', 1), ('adrian-gomez', 1), ('adilsoncarvalho', 1), ('Adilson Carvalho', 1), ('aprescott', 1), ('abunashir', 1), ('seuros', 1), ('aptinio', 1), ('BrianHawley', 1), ('brixen', 1), ('Brandon Shroyer', 1), ('bkeepers', 1), ('bjfish', 1), ('bdimcheff', 1), ('Brandon Black', 1), ('bison', 1), ('bgreenlee', 1), ('bitboxer', 1), ('bwillis', 1), ('r00k', 1), ('benmoss', 1), ('benlovell', 1), ('dreadwail', 1), ('Ben Hamill', 1), ('bak', 1), ('Baumgarten', 1), ('jumbosushi', 1), ('asehra', 1), ('tundal45', 1), ('arunagw', 1), ('ariejan', 1), ('antono', 1), ('andrehjr', 1), ('Jonah Williams', 1), ('Jon Moses', 1), ('Jon Jensen', 1), ('John Keiser', 1), ('John Joseph Bachir', 1), ('John Firebaugh', 1), ('John Backus', 1), ('Joey Geiger', 1), ('Joel Turkel', 1), ('Jingwen Owen Ou', 1), ('Jesse Storimer', 1), ('Jesper Rønn-Jensen', 1), ('Jeremy Weathers', 1), ('Jeff Pollard', 1), ('Jean Boussier', 1), ('Jason Petersen', 1), ('Jason Perkins', 1), ('Jason Karns', 1), ('Jarl Friis', 1), ('Jared Kauppila', 1), ('Jannis Hermanns', 1), ('Jan Krutisch', 1), ('Jamie Wilkinson', 1), ('Genadi Samokovarov', 1), ('Konstantin Haase', 1), ('Koichi ITO', 1), ('Kevin Radloff', 1), ('Kevin R. Barnes', 1), ('Kevin Peng', 1), ('Ken Mayer', 1), ('Kazuki Yamaguchi', 1), ('Kazuhiro Sera', 1), ('Kaycee', 1), ('Katrina Owen', 1), ('Karlo Soriano', 1), ('Kamil K. Lemański', 1), ('KAKUTANI Shintaro', 1), ('Justin Myers', 1), ('Junichi Morimoto', 1), ('Junichi Ito', 1), ('Jun Hiroe', 1), ('Juan Barreneche', 1), ('Joshua Nichols', 1), ('Josh Bodah', 1), ('Jordan Thomas', 1), ('Jonne Haß', 1), ('Joni Lahtinen', 1), ('Jonathan Hefner', 1), ('Jonathan Allard', 1), ('Gearnode', 1), ('Gabriel Mazetto', 1), ('Gabe Kopley', 1), ('Fuad Saud', 1), ('Fredrik Valeur', 1), ('Fred Wu', 1), ('François Beausoleil', 1), ('Forest Gagnon', 1), ('Florian Munz', 1), ('Filip Bartuzi', 1), ('Felix Krause', 1), ('Felix Krause', 1), ('Felix C. Stegerman', 1), ('Faun', 1), ('Evan Phoenix', 1), ('Erik Johnson', 1), ('Eric Hodel', 1), ('Eric Coleman', 1), ('Eric Boehs', 1), ('Eric Allen', 1), ('EmilRehnberg', 1), ('Eloy Espinaco', 1), ('Elia Schito', 1), ('Ejay Canaria', 1), ('Jamie Macey', 1), ('Jamie Gaskins', 1), ('James Miller', 1), ('James Healy', 1), ('James Cook', 1), ('Jake Worth', 1), ('Jacques Crocker', 1), ('Jack LaBarba', 1), ('JT Archie', 1), ('Ivo Wever', 1), ('Ivan Ukhov', 1), ('Ivan Tse', 1), ('Ivan Kuchin', 1), ('Ian Ker-Seymer', 1), ('Hugo David Farji', 1), ('Hugh Bien', 1), ('Hrvoje Šimić', 1), ('HippoDippo', 1), ('Henrik Nyh', 1), ('Helio Rodrigues', 1), ('Hashrocket Workstation', 1), ('Gustav Munkby', 1), ('Gough, Jack', 1), ('Giorgos Tsiftsis', 1), ('George Papanikolaou', 1)",394,70,
http4s/http4s,"A minimal, idiomatic Scala interface for HTTP","# Http4s [![Build Status](https://github.com/http4s/http4s/workflows/Continuous%20Integration/badge.svg?branch=series/0.23)](https://github.com/http4s/http4s/actions?query=branch%3Aseries%2F0.23+workflow%3A%22Continuous+Integration%22) [![Maven Central](https://img.shields.io/maven-central/v/org.http4s/http4s-core_2.13?versionPrefix=0.23)](https://img.shields.io/maven-central/v/org.http4s/http4s-core_2.13?versionPrefix=0.23) [![Typelevel library](https://img.shields.io/badge/typelevel-library-green.svg)](https://typelevel.org/projects/#http4s) 

Http4s is a minimal, idiomatic Scala interface for HTTP services.  Http4s is
Scala's answer to Ruby's Rack, Python's WSGI, Haskell's WAI, and Java's
Servlets.

```scala
val http = HttpRoutes.of {
  case GET -> Root / ""hello"" =>
    Ok(""Hello, better world."")
}
```

Learn more at [http4s.org](https://http4s.org/).

If you run into any difficulties please enable partial unification in your `build.sbt` (not needed for Scala 2.13 and beyond, because Scala 2.13.0+ has partial unification switched on by default)

```scala
scalacOptions ++= Seq(""-Ypartial-unification"")
```

## Requirements

Running the **blaze** backend requires a modern, supported version of the JVM to build and run, as it relies on server
APIs unavailable before JDK8u252. Any JDK newer than JDK8u252, including 9+ is supported.

## Code of Conduct

http4s is proud to be a [Typelevel](https://typelevel.org/)
project.  We are committed to providing a friendly, safe and welcoming
environment for all, and ask that the community adhere to the [Scala
Code of Conduct](https://http4s.org/code-of-conduct/).

## License

This software is licensed under the Apache 2 license, quoted below.

> Copyright 2013-2021 http4s [[https://http4s.org](https://http4s.org/)]

> Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at

> [[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)]

> Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

## Acknowledgments

[![YourKit](https://www.yourkit.com/images/yklogo.png)](https://www.yourkit.com/)

Special thanks to [YourKit](https://www.yourkit.com/) for supporting this project's ongoing performance tuning efforts with licenses to their excellent product.

","'cats', 'fs2', 'http', 'http-client', 'http-server', 'scala', 'typelevel'",2012-03-12T04:41:20Z,2024-06-18T14:30:06Z,468,338,2518,71,"('rossabaker', 7244), ('armanbilge', 1105), ('ChristopherDavenport', 993), ('bryce-anderson', 912), ('scala-steward', 758), ('danicheg', 742), ('aeons', 663), ('http4s-stewardbot', 361), ('Raas Ahsan', 319), ('bplommer', 216), ('mergifybot', 193), ('cquiroz', 191), ('hamnis', 185), ('m-sp', 164), ('kevinmeredith', 143), ('RafalSumislawski', 142), ('jmcardon', 133), ('valencik', 113), ('diesalbla', 107), ('bfritz', 92), ('yanns', 72), ('isomarcte', 67), ('amarrella', 63), ('Travis CI', 63), ('SystemFw', 62), ('reactormonk', 60), ('casualjim', 59), ('eklavya', 49), ('fredshonorio', 48), ('ashwinbhaskar', 48), ('kmeredith', 47), ('zarthross', 44), ('FrancescoSerra', 39), ('domaspoliakas', 39), ('vasilmkd', 36), ('blast-hardcheese', 36), ('VlachJosef', 33), ('arouel', 33), ('Jonathan Ferguson', 32), ('zmccoy', 32), ('tbrown1979', 32), ('luisdeltoro', 31), ('yurique', 28), ('lewisjkl', 28), ('jedesah', 27), ('TimWSpence', 26), ('nigredo-tori', 25), ('satorg', 25), ('san-coding', 25), ('SallyPerez', 24), ('julien-truffaut', 23), ('kovstas', 23), ('tomwadeson', 22), ('rcardin', 22), ('agustafson', 21), ('github-actionsbot', 19), ('vder', 19), ('voidcontext', 18), ('mox692', 18), ('Phong Nguyen', 17), ('kryptt', 17), ('travisbrown', 17), ('novakov-alexey', 16), ('andimiller', 16), ('gvolpe', 16), ('tpolecat', 16), ('hvesalai', 14), ('bpholt', 14), ('IndiscriminateCoding', 13), ('kubukoz', 13), ('erewl', 13), ('bfdes', 12), ('coltfred', 12), ('bsrini', 12), ('Tomas Herman', 11), ('ghostroad', 11), ('JCranky', 11), ('shengc', 10), ('Sean Sullivan', 10), ('mrdziuban', 10), ('kailuowang', 10), ('jodagm', 10), ('wemrysi', 10), ('colin-williams', 10), ('Bryce Anderson', 10), ('Calvin Brown', 9), ('danghieutrung', 9), ('dzanot', 9), ('kry00la', 9), ('augi', 9), ('lloydmeta', 9), ('fthomas', 9), ('rhyskeepence', 9), ('amohrland', 8), ('rohan-sircar', 8), ('rpiaggio', 8), ('aryairani', 8), ('Haris Khan', 8), ('m4dc4p', 8), ('zcox', 8), ('alejandrohdezma', 7), ('amitrai48', 7), ('philotimos', 7), ('froth', 7), ('m3is0', 7), ('rsoeldner', 7), ('Andrew Gustafson', 7), ('Ben Plommer', 7), ('nebtrx', 7), ('taig', 7), ('MartinSnyder', 7), ('luisspringernature', 7), ('keirlawson', 7), ('benderpremier', 7), ('dakatsuka', 7), ('buntec', 7), ('jcouyang', 6), ('gchew', 6), ('greg', 6), ('julien', 6), ('cobr123', 6), ('arturaz', 6), ('toddburnside', 6), ('Marvel Mathew', 6), ('jyoo980', 6), ('insdami', 6), ('mbilski', 6), ('Nelu Snegur', 6), ('peterbecich', 6), ('Phong Nguyen', 6), ('Randy Alexander', 6), ('rzeigler', 6), ('ScalaFanatic', 6), ('timo-schmid', 6), ('ang-mic', 6), ('arixmkii', 5), ('ybasket', 5), ('ammarc', 5), ('ayushhooda', 5), ('bsrini', 5), ('cmcmteixeira', 5), ('frehn', 5), ('gringrape', 5), ('sierikov', 5), ('wedens', 5), ('hejfelix', 5), ('etorreborre', 5), ('barryoneill', 5), ('CharlesD91', 5), ('Cody Allen', 5), ('dchenbecker', 5), ('Fedor Shiriaev', 5), ('Gregor Heine', 5), ('harpresing', 5), ('jenshalm', 5), ('NicolasRouquette', 5), ('sideeffffect', 5), ('Tomáš Heřman', 5), ('Leammas', 5), ('Lasering', 4), ('amesgen', 4), ('gribbet', 4), ('IssueMonoid', 4), ('albertoadami', 4), ('zakolenko', 4), ('apple-corps', 4), ('zizhengtai', 4), ('zan-preston', 4), ('BenFradet', 4), ('cgoldammer', 4), ('somethingconcon', 4), ('appliedfunctor', 4), ('Adam-McDevitt', 4), ('daddykotex', 4), ('Hiroki6', 4), ('JakDar', 4), ('BalmungSan', 4), ('morgen-peschke', 4), ('Noel Welsh', 4), ('Piotr Gabara', 3), ('guymers', 3), ('sullis', 3), ('shannonbarnes', 3), ('jcranky', 3), ('dozed', 3), ('stephennancekivell', 3), ('Valy Dia', 3), ('zakpatterson', 3), ('dantb', 3), ('emanb29', 3), ('gaspb', 3), ('mgibowski', 3), ('sbuzzard', 3), ('vglushak', 3), ('zainab-ali', 3), ('lukoyanov', 3), ('yoshinorin', 3), ('peterneyens', 3), ('TomTriple', 3), ('mcarolan', 3), ('asarturas', 3), ('Andrii Khrupalyk', 3), ('refried', 3), ('amiguez', 3), ('plokhotnyuk', 3), ('niij', 3), ('Carlo Sana', 3), ('christiankjaer', 3), ('ceedubs', 3), ('dabd', 3), ('diogocanut', 3), ('Eric Mann', 3), ('phiSgr', 3), ('Michal Kowaliszyn', 3), ('mpilquist', 3), ('grouzen', 3), ('mdedetrich', 3), ('monkey-mas', 3), ('leoniv', 3), ('Kevin Meredith', 3), ('joan38', 3), ('jan0sch', 3), ('howyp', 3), ('Haripriya Murthy', 3), ('yoohaemin', 3), ('George Wilson', 3), ('Quafadas', 2), ('SethTisue', 2), ('Sebastian Voss', 2), ('Sam Tombury (Bryan)', 2), ('Ryan Peters', 2), ('lhns', 2), ('LolHens', 2), ('phongngtuan', 2), ('perok', 2), ('CremboC', 2), ('liff', 2), ('takezoe', 2), ('NAJ10', 2), ('mossprescott', 2), ('Martin Egri', 2), ('Martijn Riemers', 2), ('martijnhoekstra', 2), ('megri', 2), ('Daenyth', 2), ('FunFunFine', 2), ('yasuba', 2), ('vilu', 2), ('valydia', 2), ('typelevel-stewardbot', 2), ('rintcius', 2), ('pshirshov', 2), ('pocketberserker', 2), ('michal', 2), ('mcintdan', 2), ('maxkorolev', 2), ('klpx', 2), ('yuferpegom', 2), ('yannick-cw', 2), ('walesho', 2), ('travisblakeney', 2), ('Tom Fiset', 2), ('DeviLab', 2), ('Denys Fakhritdinov', 2), ('drostron', 2), ('Dave Gurnell', 2), ('djspiewak', 2), ('dcsobral', 2), ('CraigHammondDexcom', 2), ('CharlesAHunt', 2), ('Chingles2404', 2), ('gannicottb', 2), ('ngbinh', 2), ('Anil Kumar Myla', 2), ('Angel-O', 2), ('faustas', 2), ('akovbovich', 2), ('utaal', 2), ('amrhassan', 2), ('asachdeva', 2), ('Aki Huttunen', 2), ('alexarchambault', 2), ('mabasic', 2), ('mtomko', 2), ('Marco Di Paola', 2), ('iRevive', 2), ('aspic', 2), ('lucidd', 2), ('ktfleming', 2), ('wjoel', 2), ('jaspervz', 2), ('Jan Gerlinger', 2), ('edmundnoble', 2), ('Edward Yang', 2), ('fsarradin', 2), ('gstro', 2), ('Igosuki', 2), ('haripriyamurthy', 2), ('ikr0m', 2), ('Ismael Juma', 2), ('wjlow', 2), ('Jamie Wilson', 2), ('nolledge', 1), ('richashworth', 1), ('rolandomanrique', 1), ('ragb', 1), ('rtar', 1), ('rlavolee', 1), ('sluukkonen', 1), ('Sam Bryan', 1), ('desbo', 1), ('samspills', 1), ('Sarunas Valaskevicius', 1), ('ScalaWilliam', 1), ('gokyo', 1), ('stephanh', 1), ('sbly', 1), ('devholic', 1), ('Susan Potter', 1), ('tbrown1979', 1), ('Tobias Lieber', 1), ('toby5box', 1), ('MatthewEdge', 1), ('tovbinm', 1), ('mkows', 1), ('mszczygiel', 1), ('MichalPawlicki', 1), ('mikela', 1), ('Napas', 1), ('flash-gordon', 1), ('kusaeva', 1), ('olliahonen', 1), ('Omar González', 1), ('ProxyLiveSolutions', 1), ('pkhry', 1), ('PeterPerhac', 1), (""Philippe L'Heureux"", 1), ('Philippus', 1), ('pravin-raha', 1), ('Qi77Qi', 1), ('Raas Ahsan', 1), ('Rafa Paradela', 1), ('rsemlal', 1), ('jbwheatley', 1), ('jinilover', 1), ('jules Ivanic', 1), ('kajyuuen', 1), ('key-eugene', 1), ('lewisc2303', 1), ('marko asplund', 1), ('marko asplund', 1), ('matthughes', 1), ('rexim', 1), ('rnd4222', 1), ('ronanM', 1), ('sierikov', 1), ('sksamuel', 1), ('sportanova', 1), ('takapi327', 1), ('trepidacious', 1), ('vkopanev', 1), ('wedens', 1), ('wedens', 1), ('wlingxiao', 1), ('TomTriple', 1), ('Viačeslav Pozdniakov', 1), ('VladKopanev', 1), ('Will Hayworth', 1), ('Yannick Heiber', 1), ('Yannick Heiber', 1), ('Yosef Fertel', 1), ('Yuriy Lazarev', 1), ('Yuriy Lazaryev', 1), ('ajelden', 1), ('ashok-ramdoss', 1), ('calvinbrown085', 1), ('d.semenov', 1), ('dragonfly.ai', 1), ('dwlizlo', 1), ('erdeszt', 1), ('fabio labella', 1), ('glen@roar', 1), ('guisanpea', 1), ('j-keck', 1), ('jbwheatley', 1), ('danbim', 1), ('danielkarch', 1), ('dsusviela', 1), ('virusdave', 1), ('David Strawn', 1), ('David Walend', 1), ('Dennis4b', 1), ('Devon Stewart', 1), ('dbousamra', 1), ('eikek', 1), ('endertunc', 1), ('epost', 1), ('fabiocognigni', 1), ('fedor-shi', 1), ('fghibellini', 1), ('george-wilson-rea', 1), ('GrafBlutwurst', 1), ('Grogs', 1), ('MasseGuillaume', 1), ('hartmut27', 1), ('437580', 1), ('MouslihAbdelhakim', 1), ('Adriani-Furtado', 1), ('Alejandro Hernández', 1), ('Alex Hennecke', 1), ('ahjohannessen', 1), ('zAPFy', 1), ('alissapajer', 1), ('Allison Houghton', 1), ('andreamarcolin', 1), ('CloudNiner', 1), ('Andrew M', 1), ('aaabramov', 1), ('andyscott', 1), ('anilkumarmyla', 1), ('anthony-cros', 1), ('chuwy', 1), ('ALPHA-60', 1), ('yuchaoran2011', 1), ('Charvát Michal', 1), ('cb372', 1), ('lunedis', 1), ('Keir Lawson', 1), ('kejifasuyi', 1), ('kevin-lee', 1), ('Tomahna', 1), ('Kevin Saldana', 1), ('KristianAN', 1), ('LaurenceWarne', 1), ('leeshangqian', 1), ('LeifW', 1), ('lolgab', 1), ('Luke Stephenson', 1), ('mcenkar', 1), ('Marcus-Rosti', 1), ('mcanlas', 1), ('Markus Appel', 1), ('markus1189', 1), ('justjoheinz', 1), ('mattyjbrown', 1), ('aldiyen', 1), ('mattkohl', 1), ('Henri Cook', 1), ('henridwyer', 1), ('hnaderi', 1), ('hgiddens', 1), ('ingarabr', 1), ('ijuma', 1), ('Jack Low', 1), ('Slakah', 1), ('jisantuc', 1), ('jvliwanag', 1), ('jrozanski', 1), ('Jed Wesley-Smith', 1), ('Jentsch', 1), ('guersam', 1), ('joescii', 1), ('knuton', 1), ('teigen', 1), ('jadlr', 1), ('jordiolivares', 1), ('jgogstad', 1), ('neko-kai', 1)",166,98,
nsdown/BaiduExporter,Assistant for Baidu to export download links to aria2/aria2-rpc,"#BaiduExporter

可以方便的把百度网盘的下载地址导出到aria2/aria2-rpc，支持YAAW。

作为chrome扩展安装即可.

Web Store link : https://chrome.google.com/webstore/detail/baiduexporter/mjaenbjdjmgolhoafkohbhhbaiedbkno
",,2014-07-11T09:15:37Z,2014-07-11T09:14:44Z,1,1,17,4,"('acgotaku', 11)",0,0,
imnemo/nodeapidoc,The newest nodejs documents compiled from nodejs's git repository!!,"nodeapidoc
==========

The newest nodejs documents compiled from nodejs's git repository directly!  
算了，还是别拽英文了~ 嘿嘿  
当然，你也可以很简单的使用`make doc`命令自己编译一份文档，我编译一份放到本地也只是为了访问方便和快速，因为  
有相当一些时候，我访问node官网，速度都不那么给劲儿，虽然情况比以前好多了~~  
因为是直接从node源码中编译的文档，所以肯定是最新的，现在本文档是`V0.7.9-pre`，node官网文档是`V0.6.17`  
  
##Version##
V0.7.9-pre  

##How to use##
直接`git clone`一份到本地  
  
如果本地有搭有`apache`环境，那就把这些静态页面放到网站目录下吧，通过访问  
`http://localhost/nodeapidoc/api`  
*温馨提示:可以加入标签页哦！！*
  
如果没有搭建`apache`环境，那么可以自己使用`nodejs`hack一下喽，用`connect`实现很简单很简单吧~~  
  
如果懒到写`nodejs`代码都不愿意，那就直接在浏览器打开`index.html`文件吧，反正都是静态页面，不过这样会很丑！  

##TODO##
> 1、用connect写一个`nodejs`版服务器，练手嘛。。。虽然很简单！  
> 2、既然练手，那也得有点专业精神，包装成一个可全局安装的`node module`，这样可以直接通过命令行启动文档喽~**Cool!**  
否则如果用`nodejs`做服务端的话，还得先去命令行启动，然后到浏览器请求本地文档页面！  

##CHM file##
好吧，有做好的chm文件，最方便了~  
可以单独下载两个文件  
[nodeapidoc.full.chm](https://github.com/sunshine1988/nodeapidoc/blob/master/nodeapidoc.full.chm):Node官网全页面  
[nodeapidoc.min.chm](https://github.com/sunshine1988/nodeapidoc/blob/master/nodeapidoc.min.chm)：只包含NodeJS Api Doc  
后者只有几百KB，下这个好了~
  
##Relative##
[这哥们儿已经hack了一个比官方文档更漂亮且实用的文档了](http://millermedeiros.github.com/mdoc/examples/node_api/doc/)  
可搜索哦~~",,2012-05-09T12:31:23Z,2012-10-26T03:25:40Z,1,1,55,15,"('imnemo', 8)",0,0,
jmportilla/Complete-Python-Bootcamp,Lectures for Udemy - Complete Python Bootcamp Course,"# Complete-Python-Bootcamp

## Welcome to the Repository for the Complete Python Bootcamp!

This is the Repository for the Udemy course - ""Complete Python Bootcamp"".

You can purchase the course at a 50% discount by clicking [here](https://www.udemy.com/complete-python-bootcamp/?couponCode=PYTHON15). 
Purchasing the course grants access to all the screencast videos and the moderated discussion forums!


In this repo you will find all the accompanying Jupyter (p.k.a. iPython) Notebooks for the course. For quicker view rendering and simpler downloading procedures, you can check out this repo using [NbViewer](http://nbviewer.ipython.org/github/jmportilla/Complete-Python-Bootcamp/tree/master/).


Then navigate to your desired lecture and enjoy! You can download the .ipynb files onto your own computer for convenience.

Enjoy the course and thank you for enrolling!
",,2015-09-06T18:35:51Z,2023-07-26T23:28:47Z,16,14,2198,429,"('jmportilla', 91), ('Pierian-Data', 24), ('nunolf', 3), ('bzcorn', 3), ('mikejune', 2), ('hackob', 2), ('prezha', 2), ('AlexsLaboratory', 1), ('caroldew', 1), ('Cecilia Cisneros', 1), ('eric-camplin', 1), ('jdschmidt', 1), ('webjoe', 1), ('Larkula', 1), ('Ricardo Gomez', 1), ('bricklen', 1)",9,7,
prowdsponsor/fb,Bindings for Facebook's API.,,,2012-01-16T16:49:08Z,2016-12-21T17:37:47Z,14,10,48,8,"('meteficha', 247), ('whittle', 14), ('paulrzcz', 8), ('stepcut', 6), ('gabrielprioli', 5), ('ddssff', 4), ('snoyberg', 4), ('alanpog', 3), ('paulrzcz', 3), ('Sergei Trofimovich', 2), ('Henry Bucklow', 1), ('tolysz', 1), ('timp', 1), ('unknown', 1)",4,2,
cccnqu/ai106b,人工智慧 -- 使用 JavaScript 實作 (金門大學 / 資訊工程系 106 上學期 ),"# 人工智慧 -- 以 JavaScript 實作

欄位       |  內容
----------|----------------------------
課程名稱   | 人工智慧
開課單位   | 金門大學資訊工程系
開課年度   | 106 學年下學期
學員姓名   | 
教師姓名   | 陳鍾誠
課程教材   | [wiki](https://github.com/cccnqu/ai106b/wiki)
共用教材   | https://github.com/cccnqu/course/wiki
程式範例   | [example](example)
練習作業   | [exercise](exercise)
專案作品   | [project](project)
學員筆記   | [wiki](../../wiki)
疑問解答   | [issue](https://github.com/cccnqu/ai106b/issues)
更多資源   | [more](more)
課程網站   | https://mdbookspace.com/view/ai/

",,2017-09-12T23:52:48Z,2018-06-24T04:54:22Z,1,1,23,3,"('ccckmit', 56)",0,0,
Rance935/BeautyPaPa,整体开发基于 MVP+RxJava+Retrofit+okhttp实现视频+新闻客户端,"
软件介绍

![](http://upload-images.jianshu.io/upload_images/1433157-65fdfafe7eca03d5.png?imageMogr2/auto-orient/strip%7CimageView2/2)

本软件包含两大模块
  美拍视频 Api 取自 美拍Api
![](http://upload-images.jianshu.io/upload_images/1433157-fa049267c1d7bb2f.jpg?imageMogr2/auto-orient/strip%7CimageView2/2)

  知乎日报 Api 取自 ZhihuDailyPurify
![](http://upload-images.jianshu.io/upload_images/1433157-118f916807305fc9.jpg?imageMogr2/auto-orient/strip%7CimageView2/2)

",,2016-10-28T03:05:13Z,2016-12-30T03:50:49Z,1,1,148,11,"('Rance935', 17)",0,0,
rubenlagus/TelegramBots,Java library to create bots using Telegram Bots API,"# Telegram Bot Java Library
[![Telegram](/TelegramBots.svg)](https://telegram.me/JavaBotsApi)

[![Build Status](https://travis-ci.org/rubenlagus/TelegramBots.svg?branch=master)](https://travis-ci.org/rubenlagus/TelegramBots)
[![Jitpack](https://jitpack.io/v/rubenlagus/TelegramBots.svg)](https://jitpack.io/#rubenlagus/TelegramBots)
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/org.telegram/telegrambots-meta/badge.svg)](http://mvnrepository.com/artifact/org.telegram/telegrambots)
[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](https://github.com/rubenlagus/TelegramBots/blob/master/LICENSE)

A simple to use library to create Telegram Bots in Java

## Contributions
Feel free to fork this project, work on it and then make a pull request against **DEV** branch. Most of the times I will accept them if they add something valuable to the code.

Please, **DO NOT PUSH ANY TOKEN OR API KEY**, I will never accept a pull request with that content.

## Webhooks vs GetUpdates
Both ways are supported, but I recommend long polling method.

## Usage

For more information, check our [documentation](https://rubenlagus.github.io/TelegramBotsDocumentation/telegram-bots.html)


## Example bots
Open them and send them */help* command to get some information about their capabilities:

https://telegram.me/weatherbot (**Use custom keyboards**)

https://telegram.me/directionsbot (**Basic messages**)

https://telegram.me/filesbot (**Send files by file_id**)

https://telegram.me/TGlanguagesbot (**Send files uploding them**)

https://telegram.me/RaeBot (**Inline support**)

https://telegram.me/SnowcrashBot (**Webhook support**)

You can see code for those bots at [TelegramBotsExample](https://github.com/rubenlagus/TelegramBotsExample) project.

## Telegram Bot API
This library use [Telegram bot API](https://core.telegram.org/bots), you can find more information following the link.

## Questions or Suggestions
Feel free to create issues [here](https://github.com/rubenlagus/TelegramBots/issues) as you need or join the [chat](https://telegram.me/JavaBotsApi)

## Powered by Intellij and DigitalOcean

   
   



## License 
MIT License

Copyright (c) 2016 Ruben Bermudez

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
","'java', 'java-library', 'jitpack', 'maven', 'polling', 'spring-boot', 'telegram', 'telegram-bot', 'telegram-bots-api', 'webhook'",2016-01-14T00:13:07Z,2024-06-16T16:15:48Z,122,96,4511,169,"('rubenlagus', 662), ('addo47', 28), ('Abbas Abou Daya', 27), ('costalfy', 24), ('Chase22', 23), ('tschulz', 20), ('davioooh', 18), ('aNNiMON', 17), ('Clevero', 16), ('Mit0x2', 15), ('antonu17', 8), ('UnAfraid', 8), ('christianblos', 7), ('flicus', 6), ('nea89o', 6), ('ChmilevFA', 6), ('Alexander Babai', 6), ('dapoldi', 5), ('AzZureman', 5), ('recursiveribbons', 5), ('loolzaaa', 4), ('bernikr', 4), ('snyk-bot', 4), ('jugendhacker', 4), ('ekiauhce', 4), ('bvn13', 4), ('Narryel', 4), ('dschulz', 4), ('alexengrig', 4), ('myplacedk', 4), ('LukasPrediger', 4), ('timursergeevichname', 3), ('monkeyboiii', 3), ('vsubhuman', 3), ('limitium', 3), ('kit', 3), ('Vladimir', 3), ('slavino', 3), ('o-chaey', 3), ('Björn Petersen', 3), ('AngryJKirk', 2), ('zhaoyi', 2), ('xMandrake', 2), ('taksoidet', 2), ('nubdub', 2), ('ng1905', 2), ('iamvincentliu', 2), ('galimru', 2), ('EgorBochkarev', 2), ('dependabotbot', 2), ('dartwata', 2), ('d35h', 2), ('Rubenlagus', 2), ('homich1991', 2), ('MouamleH', 2), ('michaelarlt', 2), ('AssasinCross', 2), ('Dhina17', 2), ('varunsingh87', 1), ('Vinpasso', 1), ('FireFrogSEO', 1), ('YanhuiJessica', 1), ('azhohov', 1), ('d2a-raudenaerde', 1), ('ezachateyskiy', 1), ('yangshoulai', 1), ('goroshevsky', 1), ('TerminusMKB', 1), ('Stephan Groenewold', 1), ('Sheigutn', 1), ('Jimall', 1), ('rgordeev', 1), ('rgolyshev', 1), ('Relecto', 1), ('vsubhuman', 1), ('valery1707', 1), ('tolwi', 1), ('sokomishalov', 1), ('sokomishalov', 1), ('robatipoor', 1), ('rbondar', 1), ('oskov', 1), ('nicetryzz', 1), ('Melancholic', 1), ('morozov', 1), ('maratische', 1), ('malta895', 1), ('link1107', 1), ('jonas-s-s-s', 1), ('gekoramy', 1), ('alpa-coder', 1), ('chengza', 1), ('chenzhang22', 1), ('ChelouteVR', 1), ('Chase', 1), ('b1sar', 1), ('lacinoire', 1), ('camilosampedro', 1), ('bryan-zhu-dev', 1), ('berkus', 1), ('Baspla', 1), ('Anton Petrov', 1), ('MonsterDeveloper', 1), ('AndreicaRadu', 1), ('AliannejadiPourya', 1), ('Alexey Zhohov', 1), ('Ramil Aminev', 1), ('everbald', 1), ('MarijnKoesen', 1), ('McPringle', 1), ('luksrn', 1), ('LamGC', 1), ('Manjago', 1), ('JetCoder1', 1), ('javver', 1), ('LegendaryZer0', 1), ('Evgeny Gorshkov', 1), ('Kurpilyansky', 1), ('kortov', 1), ('Erik-Berndt Scheper', 1), ('eitland', 1), ('dmgangan', 1)",64,52,
ohad-rodeh/bt,COW b-trees,"# bt

COW b-trees

This repository implements the COW friendly b-trees, as described in the paper:
     Ohad Rodeh
     B-trees, Shadows, and Clones
     ACM Transactions on Storage 2008

The code contains a lot of scaffolding, but the main directory is
src/oc/bpt. BPT is short for ""B Plus Tree"". The license is BSD, which
should allow incorporating the code into other open source and commercial projects.

### Build & run tests

The project depends on standard Linux tools: `gcc`, `make`, `awk`, `sed`.

In order to compile the project, from the root directory `ROOT`, do:
```
cd src
make all
```

This will create three directories under `bin`, `lib`, and `obj`. They
contain generated binaries, libraries, and object files.

The sources for the b-tree tests are in directory `src/oc/bpt/test`. The test
script that exercises all the tests is `run_tests.sh`.


### Directory naming

The src directory contains these sub-directories:

    oc      object code
    oc/bpt  b-tree
    oc/crt  thread and lock support, based on pthreads
    oc/ds   data structures
    oc/utl  utilities
    oc/xt   extent tree
    pl      platform

The locking and thread support is currently based on Linux
pthreads. The name ""crt"" is due to an
internal co-routine library that was used prior to this, and never released.

### B-tree implementation

Directory oc/bpt holds the core b-tree code, the files are as follows:

    oc_bpt_int.h                   main interface file
    oc_bpt_label.[ch]              labeling b-tree nodes, for debugging
    oc_bpt_nd.[ch]                 structure of a b-tree node (page)
    oc_bpt_op_insert.[ch]          insert key algorithm
    oc_bpt_op_insert_range.[ch]    insert a key range algorithm
    oc_bpt_op_lookup.[ch]          key lookup algorithm
    oc_bpt_op_output_dot.[ch]
    oc_bpt_op_output_clones_dot.[ch] generate output file in dot format
    oc_bpt_op_remove_key.[ch]      remove key algorithm
    oc_bpt_op_remove_range.[ch]    remove a key range algorithm
    oc_bpt_op_stat.[ch]
    oc_bpt_op_validate.[ch]        validate a btree, for debugging
    oc_bpt_op_validate_clones.[ch] validate a btree, for debugging

The most complicated algorithm is remove-range. The main issue is that
removing a range from the middle of a tree causes significant
difficulties when trying to rebalance it. The output-dot files are
used to generate b-tree descriptions in dot format
(http://www.graphviz.org/). This allows using the dot program to
visualize test outputs, for example:

    dot -Tjpg X.dot -o X.jpg

The `Oc_wu` structure that is passed around by the code, describe a
""work-unit"". This is probably equivalent to a transaction in the
caller code.
",,2014-03-23T11:06:53Z,2017-11-11T22:06:04Z,3,2,94,12,"('orodeh', 21), ('Ohad Rodeh', 4), ('ohad-rodeh', 3)",0,0,
ivanseidel/Robot-Rescue-2013,"RoboCup Junior Rescue B Robot sharing (CAD, Software, Electronics, materials and all stuff)","Robot-Rescue-2013
=================

![RoboCup Rescue B](https://raw.githubusercontent.com/ivanseidel/Robot-Rescue-2013/master/Midia/info_08.png)

This repository includes the entire Rescue B project from 2013, used in the international RoboCup Rescue B league.

There is an old version (android based) of it (on the picture, the 2012 one), find out more [here](https://github.com/ivanseidel/Robot-Rescue-2012).

This robot uses two Arm Cortex M3 and one Atmega328. All the code is written in C++, using using Interfaces, and Classes hierarchy to provide well encapsulated code, and easy to use.

Because our team was participating at the same time on the Soccer Junior B league too, we couldn't finish it's code completely, but Mechanics, Hardware and Firmware part was 100% completed. Here is the [Soccer project repository](https://github.com/ivanseidel/Robot-Soccer-2013).

The image bellow is a picture/render of the real robot, and it's project rendered in SolidWorks.

![RoboCup Rescue B render](https://raw.githubusercontent.com/ivanseidel/Robot-Rescue-2013/master/Midia/info_10.png)
",,2013-12-16T10:05:37Z,2015-06-16T12:56:24Z,2,1,15,5,"('ivanseidel', 12), ('Ivan Seidel', 7)",0,0,
pgaskin/BookBrowser,"eBook server supporting ePub, MOBI and PDF books.","# BookBrowser
[![Build Status](https://travis-ci.org/geek1011/BookBrowser.svg?branch=master)](https://travis-ci.org/geek1011/BookBrowser)

**Note:** This project is no longer maintained, as I haven't had the time or motivation to continue working on it. BookBrowser will still work as-is (I still use it myself occasionally), but is unlikely to receive any new features or bugfixes.

An easy-to-use tool to generate a web-based ePub and PDF ebook browser. All you need to do is [download it](https://github.com/geek1011/BookBrowser/releases/latest) into the folder with your ebooks, and run it. There is also a [demo](https://bookbrowser-demo.geek1011.net/books/).

## Features
- Multiple book formats
    - epub
    - pdf
    - mobi (basic support)
- Search
- Advanced Search
    - Search any combination of fields
    - View all information in the results
- List view
- Responsive web interface
- Update notifications
- Browse by:
    - Author
    - Series (from calibre metadata)
- Sorted by:
    - Last added
    - Alphabetically
    - Series
- Web based reader
    - Custom fonts, colors, sizing, spacing
    - Remembers your position
    - Book search
    - And more
- Search
- And more
- Easy-to-use
- Fast
- No extra dependencies

## Screenshots

| ![](docs/screenshots/books-mobile.png) | ![](docs/screenshots/books-list-mobile.png) | ![](docs/screenshots/authors-mobile.png) | ![](docs/screenshots/book-mobile.png) |
| --- | --- | --- | --- |
| ![](docs/screenshots/books-desktop.png) | ![](docs/screenshots/books-list-desktop.png) | ![](docs/screenshots/authors-desktop.png) | ![](docs/screenshots/book-desktop.png) |

## Reader Screenshots

| Desktop | Mobile |
| --- | --- |
| ![](docs/screenshots/reader-desktop.png) | ![](docs/screenshots/reader-mobile.png) |

## Advanced Search

| ![](docs/screenshots/list-desktop.png) |
| --- |
| |

## System Requirements
The server works on all platforms.

The web interface works on IE 9+, Edge, Firefox 3+, Chrome, Safari 5.1+, Opera 17+, and Android browser 4.4+.

The web-based reader works on IE 10+, Edge, Firefox 28+, Chrome 21+, Safari 9+, Opera 17+, and Android browser 4.4+.

## Usage

```
Usage: BookBrowser [OPTIONS]

Options:
  -a, --addr string      the address to bind the server to ([IP]:PORT) (default "":8090"")
  -b, --bookdir string   the directory to load books from (must exist) (default ""/home/patrick/src/BookBrowser"")
  -h, --help             Show this help text
  -n, --nocovers         do not index covers
  -t, --tempdir string   the directory to store temp files such as cover thumbnails (created on start, deleted on exit unless already exists) (default ""/tmp/bookbrowser946254949"")
      --version          Show the version
```
",,2016-11-06T23:22:39Z,2020-06-27T04:56:08Z,7,7,608,36,"('pgaskin', 201), ('geek1011', 15), ('sblinch', 5), ('eskwayrd', 1), ('Harnish', 1), ('mathieui', 1), ('nskaggs', 1)",4,4,
waltfy/destiny,A client for Bungie's Destiny API.,":warning: I do not intend to maintain this project any longer — feel free to ask for contributor privilege.

Destiny-Client [![npm version](https://badge.fury.io/js/destiny-client.svg)](http://badge.fury.io/js/destiny-client) [![Gitter](https://badges.gitter.im/Destiny-Client.svg)](https://gitter.im/waltfy/destiny?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
====

A simple client for interacting with Bungie's Destiny API.

The intent is to implement [more and more end-points](https://gist.github.com/waltfy/3f707a1ea7454997e484) as time allows.

Please feel free submit issues and requests, or [get in touch](//www.twitter.com/waltfy).

## Getting Started

NOTE: As of Desiny 2.0, The Taken King, Bungie is deeming some items as ""Classified"", therefore all requests now require the `X-API-Key` HTTP header. The `Destiny` constructor should now be called as below:

```
var destiny = Destiny('your_api_key');
```

### Proxy Server

Unfortunately you cannot ""hit"" `https://bungie.net` directly. So if you plan to use this library in client-side code, due to `CORS` you'll have to run your own proxy server to handle your requests to Bungie for you. I have added an example proxy server ([`proxy.js`](https://github.com/waltfy/destiny/blob/develop/proxy.js)). Simply run `node proxy.js`. Credit to [@phuu](https://github.com/phuu).

### Node

`npm install destiny-client`

Note that if you wish, you may override the default host (`https://bungie.net/`) with your own. i.e. If you have a proxy server to handle your requests. See [proxy-server](#proxy-server) instructions above. Also works with [React Native](https://facebook.github.io/react-native/).

```js
var destiny = require('destiny-client')(API_KEY);

destiny
  .Search({
    membershipType: 1,
    name: 'waltercarvalho'
  })
  .then(users => {
    console.debug('users', users);
  });
```

### Web

Simply include [`destiny.js`](https://raw.githubusercontent.com/waltfy/destiny/develop/destiny.js) on your page. You will most likely need a proxy server due to `CORS`. See [proxy-server](#proxy-server) instructions above.

```html



    var destiny = Destiny(API_KEY, 'http://{{ host }}:{{ yourport }}/platform/Destiny/'); // this is your proxy server

    destiny
        .Search({
            membershipType: 1,
            name: 'waltercarvalho'
        })
        .then(users => {
            console.debug('users', users);
        });

```

### Acquiring Cookies

**TODO:** Working on automating this, for now simply inspect your resources to find cookies. Guides can be found online.

## API Overview

In all requests `membershipType` is a `Number` representing the account type, or what network you are in. The network types are:
* `1`: XBox Live.
* `2`: PlayStation Network (PSN).

### `Destiny::Search(params)`

> Returns an `Array` of accounts.

`params` (`Object`)

  - `membershipType` - `Number`
  - `name` - `String`, the name of your account.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

destiny
    .Search({
        membershipType: 1,
        name: 'waltercarvalho'
    })
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Sample Response:
```js
[
    {
        iconPath: '/img/theme/destiny/icons/icon_xbl.png',
        membershipType: 1,
        membershipId: '4611686018439937004',
        displayName: 'waltercarvalho'
    }
]
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Search', url: 'SearchDestinyPlayer/${ membershipType }/${ name }/', required: ['membershipType', 'name'] }`

* * *

### `Destiny::Account(params)`

> Returns an `Object` with details about an account.

`params` (`Object`)
  - `membershipType` - `Number`
  - `membershipId` - `String`, your membership id.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

destiny
    .Account({
        membershipType: 1,
        membershipId: '4611686018439937004'
    })
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Sample Response:
```js
{ membershipId: '4611686018439937000',
  membershipType: 1,
  characters:
   [ { characterBase: [Object],
       levelProgression: [Object],
       emblemPath: '/common/destiny_content/icons/117285c72a9c89626cd7b3fa3d7226ee.jpg',
       backgroundPath: '/common/destiny_content/icons/2c73bcd2e874e640f158197bb9f2c55d.jpg',
       emblemHash: 776529032,
       characterLevel: 2,
       baseCharacterLevel: 2,
       isPrestigeLevel: false,
       percentToNextLevel: 50.1219521 } ],
  inventory:
   { buckets: { Invisible: [], Item: [], Currency: [] },
     currencies: [ [Object] ] },
  grimoireScore: 85 }
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Account', url: '${ membershipType }/Account/${ membershipId }', required: ['membershipType', 'membershipId'] },`

* * *

### `Destiny::Character(params)`

> Returns an `Object` with details about a character.

`params` (`Object`)
  - `membershipType` - `Number`
  - `membershipId` - `String`, your membership id.
  - `characterId` - `String`, your character id.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

destiny
    .Character({
        membershipType: 1,
        membershipId: '4611686018439937004',
        characterId: '2305843009244228629'
    })
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Sample Response:
```js
{ characterBase:
   { membershipId: '4611686018439937004',
     membershipType: 1,
     characterId: '2305843009244228629',
     dateLastPlayed: '2015-05-24T14:31:37Z',
     minutesPlayedThisSession: '87',
     minutesPlayedTotal: '6130',
     powerLevel: 32,
     raceHash: 2803282938,
     genderHash: 3111576190,
     classHash: 2271682572,
     currentActivityHash: 0,
     lastCompletedStoryHash: 0,
     stats:
      { STAT_DEFENSE: [Object],
        STAT_INTELLECT: [Object],
        STAT_DISCIPLINE: [Object],
        STAT_STRENGTH: [Object],
        STAT_LIGHT: [Object],
        STAT_ARMOR: [Object],
        STAT_AGILITY: [Object],
        STAT_RECOVERY: [Object],
        STAT_OPTICS: [Object] },
     customization:
      { personality: 2166136261,
        face: 820889531,
        skinColor: 2542514575,
        lipColor: 1328348389,
        eyeColor: 1511637748,
        hairColor: 2001723931,
        featureColor: 2166136261,
        decalColor: 233897108,
        wearHelmet: false,
        hairIndex: 10,
        featureIndex: 0,
        decalIndex: 0 },
     grimoireScore: 2100,
     peerView: { equipment: [Object] },
     genderType: 0,
     classType: 2,
     buildStatGroupHash: 1997970403 },
  levelProgression:
   { dailyProgress: 4032,
     weeklyProgress: 196282,
     currentProgress: 1091453,
     level: 13,
     step: 0,
     progressToNextLevel: 51453,
     nextLevelAt: 80000,
     progressionHash: 2030054750 },
  emblemPath: '/common/destiny_content/icons/a9ac444de02308d1410af8a0c201d177.jpg',
  backgroundPath: '/common/destiny_content/icons/ee90656ee23ceabf4fe6c4b34234d3ca.jpg',
  emblemHash: 3656150982,
  characterLevel: 32,
  baseCharacterLevel: 20,
  isPrestigeLevel: true,
  percentToNextLevel: 25 }
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Character', url: '${ membershipType }/Account/${ membershipId }/Character/${ characterId }/', required: ['membershipType', 'membershipId', 'characterId'] }`

### `Destiny::Activities(params)`

> Returns an `Object` with details about a character's activities.

`params` (`Object`)
  - `membershipType` - `Number`
  - `membershipId` - `String`, your membership id.
  - `characterId` - `String`, your character id.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

destiny
    .Character({
        membershipType: 1,
        membershipId: '4611686018439937004',
        characterId: '2305843009244228629'
    })
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Activities', url: '${ membershipType }/Account/${ membershipId }/Character/${ characterId }/Activities', required: ['membershipType', 'membershipId', 'characterId'] }`

* * *

### `Destiny::Inventory(params)`

> Returns an `Object` with details about character's inventory.

`params` (`Object`)
  - `membershipType` - `Number`
  - `membershipId` - `String`, your membership id.
  - `characterId` - `String`, your character id.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

destiny
    .Inventory({
        membershipType: 1,
        membershipId: '4611686018439937004',
        characterId: '2305843009244228629'
    })
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Inventory', url: '${ membershipType }/Account/${ membershipId }/Character/${ characterId }/Inventory', required: ['membershipType', 'membershipId', 'characterId'] }`

* * *

### `Destiny::Progression(params)`

> Returns an `Object` with details about character's progression.

`params` (`Object`)
  - `membershipType` - `Number`
  - `membershipId` - `String`, your membership id.
  - `characterId` - `String`, your character id.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

destiny
    .Inventory({
        membershipType: 1,
        membershipId: '4611686018439937004',
        characterId: '2305843009244228629'
    })
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Progression', url: '${ membershipType }/Account/${ membershipId }/Character/${ characterId }/Progression', required: ['membershipType', 'membershipId', 'characterId'] }`

* * *

### `Destiny::Equip(params, headers)` – **COOKIES REQUIRED**

> Equips an item onto a character

- `params` (`Object`)
  - `membershipType` - `Number`
  - `characterId` - `String`, your character id.
  - `itemId` - `String`, id of item to be equipped.
- `headers` - `Object`, used for authentication.
  - `'Cookie'` - `String`, provided by Bungie.
  - `'x-api-key'` - `String`, provided by Bungie.
  - `'x-csrf'` - `String`, provided by Bungie.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

var AUTH = {
  'Cookie': '{{ cookie }}',
  'x-api-key': '{{ your api key}}',
  'x-csrf': '{{ your csrf token }}'
};

destiny
    .Equip({
        characterId: '2305843009244228629',
        itemId: '6917529049882199897',
        membershipType: 1
    }, AUTH)
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'Equip', url: 'EquipItem', required: ['characterId', 'itemId', 'membershipType'] }`

* * *

### `Destiny::TransferItem(params, headers)` – **COOKIES REQUIRED**

> Transfers an item from a char's inventory to the vault.

- `params` (`Object`)
  - `membershipType` - `Number`
  - `characterId` - `String`, your character id.
  - `itemId` - `String`, id of item to be equipped.
  - `itemReferenceHash` - `Number`
  - `stackSize` - `Number`, number of items to move, 1 for weapons and armour.
  - `transferToVault` - `Boolean`, `true` to send to the vault, and `false` to pull from it.
- `headers` - `Object`, used for authentication.
  - `'Cookie'` - `String`, provided by Bungie.
  - `'x-api-key'` - `String`, provided by Bungie.
  - `'x-csrf'` - `String`, provided by Bungie.

#### Sample Usage:
```js
var destiny = require('destiny-client')(API_KEY);

var AUTH = {
  'Cookie': '{{ cookie }}',
  'x-api-key': '{{ your api key}}',
  'x-csrf': '{{ your csrf token }}'
};

destiny
    .TransferItem({
        characterId: '2305843009244228629',
        itemId: '6917529037157880001',
        itemReferenceHash: 1683638659,
        membershipType: 1,
        stackSize: 1,
        transferToVault: true
    }, AUTH)
    .then(res => { /* deal with response */ })
    .catch(err => { /* handle error */ });
```

#### Spec

As per defined in [`endpoints.js`](https://github.com/waltfy/destiny/blob/develop/src/endpoints.js).

`{ name: 'TransferItem', url: 'TransferItem', required: ['characterId', 'itemId', 'itemReferenceHash', 'membershipType'] }`

## Change Log

- `v.0.4.1` - 24/05/2015 - Breaking changes.
  * Rewrite in ES6
  * Cleaned up various bits code
  * Addition of more end points, including Authorized ones `(EquipItem, TransferItem)`
  * Moved build system to Webpack
  * Now using `isomorphic-fetch`
  * Added pre-commit hooks to ensure builds for both Node and Web are committed before pushing
  * Removed old CONFIG file
  * Improved overall architecture of the library
  * Added linting
- `v.0.3.2` - **NOTE:** If you depended on this version make sure you explicit define it on your `package.json`.

## License

The MIT License (MIT)

Copyright (c) 2014-2015 Walter Carvalho

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
",,2014-11-23T17:08:00Z,2019-02-20T08:19:18Z,10,6,121,23,"('waltfy', 59), ('Walter Carvalho', 34), ('Walter Carvalho', 4), ('CMTegner', 3), ('znja', 1), ('passy', 1), ('dasilva333', 1), ('gitter-badger', 1), ('Tom Ashworth', 1), ('Walter Carvalho', 1)",6,4,
NCAR/bspline,Cubic B-Spline implementation in C++ templates,"# EOL BSpline Library README

This is the source distribution for the NCAR/EOL BSpline C++ library.

## Background

The BSpline package provides an implementation of a Cubic B-Spline method
devised by Vic Ooyama, and brought to our attention by James
Franklin. Franklin employed the B-Spline for general purpose filtering in
his dropsonde quality control processing program, known as `editsonde`.

NCAR used Franklin's code, and a paper published by Ooyama, to build this
generic B-Spline class library.

## Legal

See the [COPYRIGHT](./COPYRIGHT) file in the source distribution.

## Requirements

BSpline builds on Windows, Linux and Mac. Here are the build environments
for each operating system:

* Windows: Microsoft Visual Studio 2005
* Linux: scons and g++
* Mac: scons and g++ (both provided by Xcode)

BSpline uses the [Doxygen](www.doxygen.org) documentation system. Doxygen
is not required to build BSpline, but if available it can be used to create
html documentation.

## Organization

* BSpline/
  * Contains the source code to create a bspline library, and a header file to access the BSpline from your code.
* Tests/
  * Contains several subdirectories with code for evaluating
    the code. The C++ directory is the only one that is currently compiled
    and known to work. The R directory contains code for plotting
    results using the R statistical langauge. The Fortran directory contains
    code for some unknown application.
* Design/
  * Contains notes and and some original Ooyama code.

## Building

### Linux/Mac

[Scons] (http://www.scons.org) is used to build BSpline.

BSpline is built by running scons in the top directory:

```
scons
```

This will create `BSpline/libbspline.a` and `Tests/C++/bspline`. The library 
will contain float and double instantiations of the BSpline
templates.

### Windows

A Visual Studio solution (`bspline.sln`) is provided for building the
same products.

## Documentation

The BSpline code is documented using the Doxygen embedded comments.  Run
`doxygen` in the top directory, where it will find the Doxygen
configuration file:

```
doxygen
```

This will produce html formatted documentation in the `doc/` directory.
Open `doc/index.html` with your favorite browser.

The generated documentation is also committed to the GitHub Pages for this
project, so it can be viewed online:

 * http://ncar.github.io/bspline/

Here are the steps to update the documentation in GitHub pages from the
source tree:

In a clone of the bspline project, clone it again into a `doc` directory:

```
cd bspline
git clone git@github.com:NCAR/bspline.git doc
```

Checkout the gh-pages branch in the `doc` subdirectory.

```
cd doc
git checkout origin/gh-pages -b gh-pages
```

Generate the doxygen output into the doc directory:

```
cd ..
scons doc
```

Commit the changes to the gh-pages branch:

```
cd doc
git commit -a -m'generated updated documentation'
```
","'atmospheric-science', 'c-plus-plus', 'cubic-splines', 'interpolation', 'library', 'splines'",2015-07-02T16:06:24Z,2024-05-06T21:10:30Z,9,4,91,25,"('granger', 105), ('martinc', 94), ('garyjg', 43), ('martin', 11), ('belinga', 6), ('(no author)', 1), ('MisterMartin', 1), ('FloCiaglia', 1), ('isabels', 1)",4,3,
vedovelli/l5ekb,Repositorio do curso Laravel 5 - Edukee - Turma B,"# Nosso amado curso Laravel!

**Instruções de instalação**

1. Fazer o clone do repositório
2. Acessar a pasta raiz no Terminal
3. Rodar `composer install`
4. Rodar `npm install`
5. Rodar `php artisan serve`",,2016-07-30T12:38:03Z,2016-08-12T11:02:08Z,2,2,7,4,"('vedovelli', 21), ('vs0uz4', 1)",1,1,
sferik/t-ruby,A command-line power tool for Twitter.,"# [![Application icon](https://github.com/sferik/t/raw/master/icon/t.png)][icon]
[icon]: https://github.com/sferik/t/raw/master/icon/t.png

# Twitter CLI
[![Gem Version](https://img.shields.io/gem/v/t.svg)][gem]
[![Build Status](https://img.shields.io/travis/sferik/t.svg)][travis]
[![Dependency Status](https://img.shields.io/gemnasium/sferik/t.svg)][gemnasium]
[![tip for next commit](https://tip4commit.com/projects/102.svg)](https://tip4commit.com/github/sferik/t)

[gem]: https://rubygems.org/gems/t
[travis]: https://travis-ci.org/sferik/t
[gemnasium]: https://gemnasium.com/sferik/t

#### A command-line power tool for Twitter.
The CLI takes syntactic cues from the [Twitter SMS commands][sms], but it
offers vastly more commands and capabilities than are available via SMS.

[sms]: https://support.twitter.com/articles/14020-twitter-sms-command

## Dependencies
First, make sure you have Ruby installed.

**On a Mac**, open `/Applications/Utilities/Terminal.app` and type:

    ruby -v

If the output looks something like this, you're in good shape:

    ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-darwin15]

If the output looks more like this, you need to [install Ruby][ruby]:

[ruby]: https://www.ruby-lang.org/en/downloads/

    ruby: command not found

**On Linux**, for Debian-based systems, open a terminal and type:

    sudo apt-get install ruby-dev

or for Red Hat-based distros like Fedora and CentOS, type:

    sudo yum install ruby-devel

(if necessary, adapt for your package manager)

**On Windows**, you can install Ruby with [RubyInstaller][rubyinstaller].

[rubyinstaller]: http://rubyinstaller.org/downloads/

## Installation
Once you've verified that Ruby is installed:

    gem install t

## Configuration
Twitter API v1.1 requires OAuth for all of its functionality, so you'll need a
registered Twitter application. If you've never registered a Twitter
application before, it's easy! Just sign-in using your Twitter account and then
fill out the short form at . If you've
previously registered a Twitter application, it should be listed at
. Once you've registered an application, make sure
to set your application's Access Level to ""Read, Write and Access direct
messages"", otherwise you'll receive an error that looks like this:

    Error processing your OAuth request: Read-only application cannot POST

A mobile phone number must be associated with your account in order to obtain write privileges. If your carrier is not supported by Twitter and you are unable to add a number, contact Twitter using , selecting the last checkbox. Some users have reported success adding their number using the mobile site, , which seems to bypass the carrier check at the moment.

Now, you're ready to authorize a Twitter account with your application. To
proceed, type the following command at the prompt and follow the instructions:

    t authorize

This command will direct you to a URL where you can sign-in to Twitter,
authorize the application, and then enter the returned PIN back into the
terminal. If you type the PIN correctly, you should now be authorized to use
`t` as that user. To authorize multiple accounts, simply repeat the last step,
signing into Twitter as a different user.

**NOTE**: If you have problems authorizing multiple accounts, open a new window in your browser in incognito/private-browsing mode and repeat the `t authorize` steps. This is apparently due to a bug in twitter's cookie handling.

You can see a list of all the accounts you've authorized by typing the command:

    t accounts

The output of which will be structured like this:

    sferik
      UDfNTpOz5ZDG4a6w7dIWj
      uuP7Xbl2mEfGMiDu1uIyFN
    gem
      thG9EfWoADtIr6NjbL9ON (active)

**Note**: One of your authorized accounts (specifically, the last one
authorized) will be set as active. To change the active account, use the `set`
subcommand, passing either just a username, if it's unambiguous, or a username
and consumer key pair, like this:

    t set active sferik UDfNTpOz5ZDG4a6w7dIWj

Account information is stored in a YAML-formatted file located at `~/.trc`.

**Note**: Anyone with access to this file can impersonate you on Twitter, so
it's important to keep it secure, just as you would treat your SSH private key.
For this reason, the file is hidden and has the permission bits set to `0600`.

## Usage Examples
Typing `t help` will list all the available commands. You can type `t help
TASK` to get help for a specific command.

    t help

#### Update your status
    t update ""I'm tweeting from the command line. Isn't that special?""

**Note**: If your tweet includes special characters (e.g. `!`), make sure to
wrap it in single quotes instead of double quotes, so those characters are not
interpreted by your shell.
If you use single quotes, your Tweet obviously can't contain any
apostrophes unless you prefix them with a backslash `\`:

    t update 'I\'m tweeting from the command line. Isn\'t that special?'

#### Retrieve detailed information about a Twitter user
    t whois @sferik

#### Retrieve stats for multiple users
    t users -l @sferik @gem

#### Follow users
    t follow @sferik @gem

#### Check whether one user follows another
    t does_follow @ev @sferik

**Note**: If the first user does not follow the second, `t` will exit with a
non-zero exit code. This allows you to execute commands conditionally. For
example, here's how to send a user a direct message only if they already follow you:

    t does_follow @ev && t dm @ev ""What's up, bro?""

#### Create a list for everyone you're following
    t list create following-`date ""+%Y-%m-%d""`

#### Add everyone you're following to that list (up to 500 users)
    t followings | xargs t list add following-`date ""+%Y-%m-%d""`

#### List all the members of a list, in long format
    t list members -l following-`date ""+%Y-%m-%d""`

#### List all your lists, in long format
    t lists -l

#### List all your friends, in long format, ordered by number of followers
    t friends -l --sort=followers

#### List all your leaders (people you follow who don't follow you back)
    t leaders -l --sort=followers

#### Mute everyone you follow
    t followings | xargs t mute

#### Unfollow everyone you follow who doesn't follow you back
    t leaders | xargs t unfollow

#### Unfollow 10 people who haven't tweeted in the longest time
    t followings -l --sort=tweeted | head -10 | awk '{print $1}' | xargs t unfollow -i

#### Twitter roulette: randomly follow someone who follows you (who you don't already follow)
    t groupies | shuf | head -1 | xargs t follow

#### Favorite the last 10 tweets that mention you
    t mentions -n 10 -l | awk '{print $1}' | xargs t favorite

#### Output the last 200 tweets in your timeline to a CSV file
    t timeline -n 200 --csv > timeline.csv

#### Start streaming your timeline (Control-C to stop)
    t stream timeline

#### Count the number of official Twitter engineering accounts
    t list members twitter/engineering | wc -l

#### Search Twitter for the 20 most recent Tweets that match a specified query
    t search all ""query""

#### Download the latest Linux kernel via BitTorrent (possibly NSFW, depending on where you work)
    t search all ""lang:en filter:links linux torrent"" -n 1 | grep -o ""http://t.co/[0-9A-Za-z]*"" | xargs open

#### Search Tweets you've favorited that match a specified query
    t search favorites ""query""

#### Search Tweets mentioning you that match a specified query
    t search mentions ""query""

#### Search Tweets you've retweeted that match a specified query
    t search retweets ""query""

#### Search Tweets in your home timeline that match a specified query
    t search timeline ""query""
**Note**: In Twitter API parlance, your “home timeline” is your “Newsfeed” whereas your “user timeline” are the tweets tweeted (and retweeted) by you.

#### Search Tweets in a specified user’s timeline
    t search timeline @sferik ""query""

## Features
* Deep search: Instead of using the Twitter Search API, [which only goes
  back 6-9 days][search], `t search` fetches up to 3,200 tweets via the REST API
  and then checks each one against a regular expression.
* Multi-threaded: Whenever possible, Twitter API requests are made in parallel,
  resulting in faster performance for bulk operations.
* Designed for Unix: Output is designed to be piped to other Unix utilities,
  like grep, comm, cut, awk, bc, wc, and xargs for advanced text processing.
* Generate spreadsheets: Convert the output of any command to CSV format simply
  by adding the `--csv` flag.
* 95% C0 Code Coverage: Well tested, with a 2.5:1 test-to-code ratio.

[search]: https://dev.twitter.com/rest/public/search

## Using T for Backup
[@jphpsf][jphpsf] wrote a [blog post][blog] explaining how to use `t` to backup
your Twitter account.

[jphpsf]: https://github.com/jphpsf
[blog]: http://blog.jphpsf.com/2012/05/07/backing-up-your-twitter-account-with-t/

`t` was also mentioned on [an episode of the Ruby 5 podcast][ruby5].

`t` was also discussed on [an episode of the Ruby Rogues podcast][rubyrogues].

[ruby5]: https://ruby5.codeschool.com/episodes/273-episode-269-may-4th-2012/stories/2400-t-command-line-power-tool-for-twitter

[rubyrogues]: https://devchat.tv/ruby-rogues/127-rr-erik-michaels-ober

If you discuss `t` in a blog post or podcast, [let me know][email] and I'll
link it here.

[email]: mailto:sferik@gmail.com

## Relationship Terminology
There is some ambiguity in the terminology used to describe relationships on
Twitter. For example, some people use the term ""friends"" to mean everyone you
follow. In `t`, ""friends"" refers to just the subset of people who follow you
back (i.e., friendship is bidirectional). Here is the full table of terminology
used by `t`:

                               ___________________________________________________
                              |                         |                         |
                              |     YOU FOLLOW THEM     |  YOU DON'T FOLLOW THEM  |
     _________________________|_________________________|_________________________|_________________________
    |                         |                         |                         |                         |
    |     THEY FOLLOW YOU     |         friends         |        groupies         |        followers        |
    |_________________________|_________________________|_________________________|_________________________|
    |                         |                         |
    |  THEY DON'T FOLLOW YOU  |         leaders         |
    |_________________________|_________________________|
                              |                         |
                              |       followings        |
                              |_________________________|

## Screenshots
![Timeline](https://github.com/sferik/t/raw/master/screenshots/timeline.png)
![List](https://github.com/sferik/t/raw/master/screenshots/list.png)

## Shell completion
If you're running Zsh or Bash, you can source one of the [bundled completion
files][completion] to get shell completion for `t` commands, subcommands, and
flags.

Don't run Zsh or Bash? Why not [contribute][] completion support for your
favorite shell?

[completion]: https://github.com/sferik/t/tree/master/etc
[contribute]: https://github.com/sferik/t/blob/master/CONTRIBUTING.md

## History
The [twitter gem][gem] previously contained a command-line interface, up until
version 0.5.0, when it was [removed][]. This project is offered as a successor
to that effort, however it is a clean room implementation that contains none of
the original code.

[gem]: https://rubygems.org/gems/twitter
[removed]: https://github.com/jnunemaker/twitter/commit/dd2445e3e2c97f38b28a3f32ea902536b3897adf
![History](https://github.com/sferik/t/raw/master/screenshots/history.png)

## Supported Ruby Versions
This library aims to support and is [tested against][travis] the following Ruby
implementations:

* Ruby 3.1
* Ruby 3.2
* Ruby 3.3

If something doesn't work on one of these Ruby versions, it's a bug.

This library may inadvertently work (or seem to work) on other Ruby
implementations, however support will only be provided for the versions listed
above.

If you would like this library to support another Ruby version, you may
volunteer to be a maintainer. Being a maintainer entails making sure all tests
run and pass on that implementation. When something breaks on your
implementation, you will be responsible for providing patches in a timely
fashion. If critical issues for a particular implementation exist at the time
of a major release, support for that Ruby version may be dropped.

## Troubleshooting
If you are running t on a remote computer you can use the flag --display-uri during authorize process to display the url instead of opening the web browser.

    t authorize --display-uri

## Copyright
Copyright (c) 2011-2024 Erik Berlin. See [LICENSE][] for details.
Application icon by [@nvk][nvk].

[license]: https://github.com/sferik/t/blob/master/LICENSE.md
[nvk]: http://www.rnvk.org
",,2011-11-23T02:59:48Z,2024-04-30T21:36:28Z,63,54,5428,120,"('sferik', 903), ('bfontaine', 12), ('cobyism', 11), ('tedkulp', 10), ('ysksn', 9), ('pengwynn', 8), ('parkr', 6), ('stve', 6), ('mportiz08', 5), ('waynn', 4), ('nvk', 4), ('mislav', 4), ('Brook Riggio', 4), ('acoravos', 3), ('patmaddox', 3), ('jphpsf', 3), ('timvdalen', 3), ('autodidacticon', 3), ('nickborromeo', 2), ('blrhc', 2), ('Ufuk Kayserilioglu', 2), ('mcfiredrill', 2), ('chastell', 2), ('nickmerwin', 2), ('Kyle Dreger', 2), ('JuanitoFatas', 2), ('joshk', 2), ('copiousfreetime', 2), ('aniversarioperu', 2), ('benhc123', 2), ('Adrien', 1), ('phillipalexander', 1), ('rayne-b', 1), ('Robin Message', 1), ('zenspider', 1), ('cllns', 1), ('stefl', 1), ('tjschuck', 1), ('tomer', 1), ('mildsunrise', 1), ('Yoni Weisbrod', 1), ('dianakimball', 1), ('engstrom', 1), ('ReadmeCritic', 1), ('iamdeuterium', 1), ('iirelu', 1), ('kputnam', 1), ('afbroman', 1), ('GeekShadow', 1), ('ohAitch', 1), ('Atul9', 1), ('Ball', 1), ('dtgay', 1), ('mutewinter', 1), ('johndbritton', 1), ('leto', 1), ('groddeck', 1), ('orangejulius', 1), ('justincampbell', 1), ('kytrinyx', 1), ('LunarLambda', 1), ('mathiasbynens', 1), ('pborreli', 1)",33,27,
dmcgarry/kaggle_cooking,"Quick solution to Kaggle's ""What's Cooking"" competition.","# What's Cooking?
Quick solution to Kaggle's ""What's Cooking"" competition: https://www.kaggle.com/c/whats-cooking.  I entered this competition to build a very quick code sample and was pleasantly surprised to place in 4th place at the time of publishing the code to github.

## To Run
To train the model simply execute the src/train.py script. For example:
./train.py > ../data/results.txt",,2015-10-07T20:29:56Z,2015-10-09T17:26:19Z,2,1,26,0,"('dmcgarry', 2), ('dmcgarry', 1)",1,1,
attaswift/BTree,Fast sorted collections for Swift using in-memory B-trees,"# Fast Sorted Collections for SwiftUsing In-Memory B-Trees

[![Swift 4.0](https://img.shields.io/badge/Swift-4.0-blue.svg)](https://swift.org)
[![License](https://img.shields.io/badge/licence-MIT-blue.svg)](https://github.com/attaswift/BTree/blob/master/LICENSE.md)
[![Platform](https://img.shields.io/badge/platforms-macOS%20∙%20iOS%20∙%20watchOS%20∙%20tvOS-blue.svg)](https://developer.apple.com/platforms/)

[![Build Status](https://travis-ci.org/attaswift/BTree.svg?branch=master)](https://travis-ci.org/attaswift/BTree)
[![Code Coverage](https://codecov.io/github/attaswift/BTree/coverage.svg?branch=master)](https://codecov.io/github/attaswift/BTree?branch=master)

[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg)](https://github.com/Carthage/Carthage)
[![CocoaPod Version](https://img.shields.io/cocoapods/v/BTree.svg)](http://cocoapods.org/pods/BTree)

* [Overview](#overview)
* [Reference Documentation](#api)
* [Optimizing Collections: The Book](#book)
* [What Are B-Trees?](#what)
* [Why In-Memory B-Trees?](#why)
* [Laundry List of Issues with Standard Collection Types](#boo)
* [B-Trees to the Rescue!](#yay)
* [Implementation Notes](#notes)
* [Remark on Performance of Imported Generics](#generics)

### Overview

This project provides an efficient in-memory B-tree implementation in pure Swift, and several useful
sorted collection types that use B-trees for their underlying storage.

-   [`Map`][Map] implements a sorted mapping from unique comparable keys to arbitrary values.
    It is like `Dictionary` in the standard library, but it does not require keys to be hashable, 
    it has strong guarantees on worst-case performance, and it maintains its elements in a well-defined
    order.

-   [`List`][List] implements a random-access collection of arbitrary elements. 
    It is like `Array` in the standard library, but lookup, insertion and removal of elements at
    any index have logarithmic complexity. 
    (`Array` has O(1) lookup, but insertion and removal at an arbitrary index costs O(n).)
    Concatenation of two lists of any size, inserting a list into another list at any position,
    removal of any subrange of elements, or extraction of an arbitrary sub-list are also
    operations with O(log(*n*)) complexity.

-   [`SortedSet`][SortedSet] implements a sorted collection of unique comparable elements.
    It is like `Set` in the standard library, but lookup, insertion and removal of any element
    has logarithmic complexity. Elements in an `SortedSet` are kept sorted in ascending order.
    Operations working on full sets (such as taking the union, intersection or difference) 
    can take as little as O(log(*n*)) time if the elements in the source sets aren't interleaved.

-   [`SortedBag`][SortedBag] implements a sorted [multiset][multiset] with
    comparable elements. This is a generalization of a set that allows multiple instances of the same value.
    (The standard library does not include such a collection, although you can use a dictionary to emulate one 
    by storing the multiplicities of the keys as values.)
    The implementation provided in this package stores each duplicate element separately, which may come useful
    if your elements are reference types with identities or you have some other means to distinguish between equal elements.
    `SortedBag` operations have the same time complexities as the equivalent operations in `SortedSet`.

-   [`BTree`][BTree] is the underlying primitive collection that serves as base storage
    for all of the above collections. It is a general sorted key-value store with full support
    for elements with duplicate keys; it provides a sum of all operations individually provided
    by the higher-level abstractions above (and more!).

    The `BTree` type is public; you may want to use it if you need a collection flavor that 
    isn't provided by default (such as a multimap) 
    or if you need to use an operation that isn't exposed by the wrappers.
    
All of these collections are structs and they implement the same copy-on-write value semantics as
standard Swift collection types like `Array` and `Dictionary`. (In fact, copy-on-write works even
better with these than standard collections; continue reading to find out why!)

[Map]: http://attaswift.github.io/BTree/api/Structs/Map.html
[List]: http://attaswift.github.io/BTree/api/Structs/List.html
[SortedSet]: http://attaswift.github.io/BTree/api/Structs/SortedSet.html
[SortedBag]: http://attaswift.github.io/BTree/api/Structs/SortedBag.html
[multiset]: https://en.wikipedia.org/wiki/Set_(abstract_data_type)#Multiset

The latest version of `BTree` requires Swift 4. (The last release supporting Swift 3 was 4.0.2.)

### [Reference Documentation][doc]

The project includes [a nicely formatted reference document][doc] generated from the documentation comments
embedded in its source code.

[doc]: http://attaswift.github.io/BTree/api

### [Optimizing Collections: The Book][OptimizingCollections]

If you want to learn more about how this package works, the book
[Optimizing Collections][OptimizingCollections] includes detailed explanations of
many of the algorithms and optimization tricks implemented by this package – and so, so much more.
It is written by the same author, and published by the fine folks at objc.io.
Buying a copy of the book is not only a nice way to support this project, it also gets you something quite interesting to read.
Win-win!

[![Optimizing Collections (eBook)](docs/images/OptimizingCollections.png)][OptimizingCollections]

[OptimizingCollections]: https://www.objc.io/books/optimizing-collections/

### What Are B-Trees?

[B-trees][B-tree wiki] are search trees that provide a sorted key-value store with excellent performance
characteristics.  In essence, each node maintains a sorted array of its own elements, and
another array for its children.  The tree is kept balanced by three constraints: 

1. Only the root node is allowed to be less than half full.
2. No node may be larger than the maximum size.
3. The leaf nodes are all at the same level.

Compared to other popular search trees such as [red-black trees][red-black tree] or [AVL trees][avl wiki], 
B-trees have huge nodes: nodes often contain hundreds (or even thousands) of key-value pairs and children.

This module implements a ""vanilla"" B-tree where every node contains full key-value pairs. 
(The other popular type is the [B+-tree][b-plus tree] where only leaf nodes contain values; 
internal nodes contain only copies of keys.
This often makes more sense on an external storage device with a fixed block size, but it seems less useful for
an in-memory implementation.)

Each node in the tree also maintains the count of all elements under it. 
This makes the tree an [order statistic tree], where efficient positional lookup is possible.

[B-tree wiki]: https://en.wikipedia.org/wiki/B-tree
[red-black tree]: https://github.com/attaswift/RedBlackTree
[avl wiki]: https://en.wikipedia.org/wiki/AVL_tree
[order statistic tree]: https://en.wikipedia.org/wiki/Order_statistic_tree
[b-plus tree]: https://en.wikipedia.org/wiki/B%2B_tree

### Why In-Memory B-Trees?

The Swift standard library offers heavily optimized arrays and hash tables, but omits linked lists and
tree-based data structures. This is a result of the Swift engineering team spending resources 
(effort, code size) on the abstractions that provide the biggest bang for the buck. 

> Indeed, the library lacks even a basic [double-ended queue][deque] construct -- 
> although Cocoa's `Foundation` framework does include one in `NSArray`.

[deque]: https://github.com/attaswift/Deque

However, some problems call for a wider variety of data structures. 

In the past, linked lists and low-order search trees such as red-black trees were frequently employed;
however, the performance of these constructs on modern hardware is greatly limited
by their heavy use of pointers.

[B-trees][B-tree wiki] were originally invented in the 1970s as a data structure for slow external storage
devices. As such, they are strongly optimized for locality of reference: 
they prefer to keep data in long contiguous buffers and they keep pointer derefencing to a minimum.
(Dereferencing a pointer in a B-tree usually meant reading another block of data from the spinning hard drive,
which is a glacially slow device compared to the main memory.)

Today's computers have multi-tiered memory architectures; they rely on caching to keep the system
performant. This means that locality of reference has become a hugely important property for in-memory
data structures, too.

Arrays are the epitome of reference locality, so the Swift stdlib's heavy emphasis on `Array` as the
universal collection type is well justified.

For example, using a single array to hold a sorted list of items has quite horrible (quadratic) asymptotic
complexity when there are many elements. However, up to a certain maximum size, a simple array is in fact 
the most efficient way to represent a sorted list.

![Typical benchmark results for sorted collections](docs/images/Sorted%20Collections%20in%20Swift.png)

The benchmark above demonstrates this really well: insertion of *n* elements into a sorted array 
costs O(n^2) when there are many items, but for many reasonably sized data sets, it is still much faster 
than creating a red-black tree with its fancypants O(n * log(n)) complexity. 

Near the beginning of the curve, up to about *eighteen thousand items*, a sorted array implementation
imported from an external module is very consistently about 6-7 times faster than a red-black tree, with a
slope that is indistinguishable from O(n * log(n)).

Even after it catches up to quadratic complexity, in this particular benchmark, 
it takes about a *hundred thousand items* for the sorted
array to become slower than the red-black tree! 

> The exact cutoff point depends on the type/size of elements that you work with, and the capabilities 
> of the compiler. This benchmark used tiny 8-byte integer elements, hence the huge number.

> The benchmark is based on [my own red-black tree implementation][red-black tree] that uses a single flat array to store
> node data. A [more typical implementation][airspeed-velocity] would store each node in a separately allocated object, so
> it would likely be even slower.

[airspeed-velocity]: http://airspeedvelocity.net/2015/07/22/a-persistent-tree-using-indirect-enums-in-swift/

> The chart above is a [log-log plot][loglog] which makes it easy to compare the polynomial exponents of 
> the complexity curves of competing algorithms at a glance. The slope of a quadratic algorithm on a log-log chart
> (like insertion into a sorted array---the green curves) is twice of that of a 
> linear algorithm (like appending *n* items to an unsorted array---light blue curve) or a quasilinear one 
> (like inserting into a red-black tree, red curve).

[loglog]: https://en.wikipedia.org/wiki/Log–log_plot

> Note that the big gap between collections imported from
> stdlib and those imported from external modules is caused by a [limitation in the current Swift compiler/ABI](#perf):
> when this limitation is lifted, the gap will narrow considerably, which will reduce the element count
> at which you'll be able to reap the benefits of lower asymptotic complexity.

> (This effect is already visible (albeit in reverse) on the benchmark for the ""inlined"" sorted array (light green), 
> which is essentially the same code as the regular one (dark green) except it was implemented
> in the same module as the benchmarking loop, so the compiler has more options to optimize away
> witness tables and other levels of abstraction. That line starts curving up much sooner, at about 2000 
> items--imagine having a B-tree implementation that's equally fast! Or better, try it yourself and report your
> results. Producing benchmarks like this takes a lot of time and effort.) :-)


This remarkable result is due in large part to the vast number of (to a CPU, random-looking) memory 
references that are needed to operate on red-black trees. 
Their [intricate ballet of tree rotations][rbtree-animation] looks mighty impressive 
to us mere humans, but to the delicate caches of your poor CPU, 
it looks more like a drunken elephant [moshing at a thrash metal concert][moshing].

[rbtree-animation]: https://youtu.be/m9tse9Gr2pE?t=209
[moshing]: https://en.wikipedia.org/wiki/Moshing

Meanwhile, the humble `Array` does the only thing it knows: sliding around
long contiguous memory regions. It does this over and over, ad nauseum. It doesn't look impressive,
but (up to a point) it fits well with how computers work.

So a small `Array` is perfect for maintaining a sorted list. But what if the list gets too long?
The B-tree's answer is to simply cut the array in half, and to create a new index tree node on top to allow 
it to quickly find its way around this more complex list structure. 
These internal index nodes can also consist of arrays of elements and node references, 
creating a nice recursive data structure.

Because their fanout number is so high, B-trees are extremely shallow: for a B-tree with order 100 (which
is actually rather on the low end), you can fit a billion items into a tree that's not more than five levels deep.

Once you accept that small arrays are fast, it is easy to see why B-trees work so well: unless it holds more
elements than its order, a B-tree quite literally **is** just an `Array`. 
So it has the same performance behavior as an `Array` for a small number of elements, 
and when it grows larger it prevents a quadratic upswing by never allowing its arrays to get too large.
The yellow curve on the benchmark above demonstrates this behavior well.

Consider that each node in a typical B-tree can hold about *ten full levels of a red-black tree* 
(or AVL trees or whatever binary tree you like). 
Looking up an item in a B-tree node still requires a binary search of the node
array, but this search works on a contiguous memory region, while the conventional search tree
is fiddling around with loading pointer values and dereferencing them.

So it makes perfect sense to employ B-trees as an in-memory data structure.

Think about this, though: how many times do you need to work with a hundred thousand
sorted items in a typical app? Or even twenty thousand? Or even just two thousand? The most interesting
benefits of B-trees often occur at element counts well over a hundred thousand.
However, B-trees are not much slower than arrays for low element counts (remember, they *are* arrays in that
case), so it makes sense to use them when there's even a slight chance that the count will get large.

### Laundry List of Issues with Standard Collection Types

The data structures implemented by `Array`, `Dictionary` and `Set` are remarkably versatile:
a huge class of problems is easily and efficiently solved by simple combinations of these abstractions.
However, they aren't without drawbacks: you have probably run into cases when the standard collections
exhibit suboptimal behavior:

1.  Insertion and removal in the middle of an `Array` can be slow when there are many items. (Keep the previous section in mind, though.)

2.  The all-or-nothing [copy-on-write behavior][cow] of `Array`, `Dictionary` and `Set` can lead to performance problems
    that are hard to detect and fix.
    If the underlying storage buffer is being shared by multiple collection instances, the modification of a single element 
    in any of the instances requires creating a full copy of every element. 
    
    It is not at all obvious from the code when this happens, and it is even harder to reliably check for. 
    You can't (easily) write unit tests to check against accidental copying of items with value semantics!

3.  With standard collection types, you often need to think about memory management.

    Arrays and dictionaries never release memory until they're entirely deallocated; 
    a long-lived collection may hold onto a large piece of memory due to an earlier, temporary spike in the 
    number of its elements. This is a form of subtle resource leak that can be hard to detect.
    On memory-constrained systems, wasting too much space may cause abrupt process termination.

    Appending a new element to an array, or inserting a new element into a dictionary or a set are 
    usually constant time operations, but they sometimes take O(*n*) time when the collection exhausts its allocated capacity.
    These spikes in execution time are often undesired, but preventing them requires careful size analysis.  
    If you reserve too little space, you'll still get spikes; if you reserve too much, you're wasting memory.
    
4.  The order of elements in a `Dictionary` or a `Set` is undefined, and it isn't even stable:
    it may change after seemingly simple mutations. Two collections with the exact same set of elements may store
    them in wildly different order.

5.  Hashing collections require their keys to be `Hashable`. If you want to use your own type as the key, 
    you need to write a hash function yourself. It is annoyingly hard to write a good hash function, and 
    it is even harder to test that it doesn't produce too many collisions for the sets of values your code 
    will typically use.

6.  The possibility of hash collisions make `Dictionary` and `Set` badly suited for tasks which require
    guaranteed worst-case performance. (E.g. server code may face low-bandwidth denial of service attacks due to
    [artificial hash collisions][hash dos].)

7.  Array concatenation takes O(*n*) time, because it needs to put a copy of every element from both arrays 
    into a new contiguous buffer.

8.  Merging dictionaries or taking the union/intersection etc. of two sets are all costly
    O(*n*) operations, even if the elements aren't interleaved at all.

9.  Creating an independently editable sub-dictionary or subset requires elementwise iteration over either
    the entire collection, or the entire set of potential target items. This is often impractical, especially
    when the collection is large but sparse.
    
    Getting an independently editable sub-array out of an array takes time that is linear in the size of the result. 
    (`ArraySlice` is often helpful, but it is most effective as a short-lived read-only view in temporary local variables.)


These issues don't always matter. In fact, lots of interesting problems can be solved without 
running into any of them. When they do occur, the problems they cause are often insignificant.
Even when they cause significant problems, it is usually straightforward to work around them by chosing a
slightly different algorithm. 

But sometimes you run into a case where the standard collection types are too slow, 
and it would be too painful to work around them.
    
[hash dos]: http://arstechnica.com/business/2011/12/huge-portions-of-web-vulnerable-to-hashing-denial-of-service-attack/
[cow]: https://en.wikipedia.org/wiki/Copy-on-write


### B-Trees to the Rescue!

B-trees solve all of the issues above. 
(Of course, they come with a set of different issues of their own. Life is hard.)

Let's enumerate:

1.  Insertion or removal from any position in a B-tree-based data structure takes O(log(*n*)) time, no matter what.

2.  Like standard collection types, B-trees implement full copy-on-write value semantics.
    Copying a B-tree into another variable takes O(1) time; mutations of a copy do not affect the original instance.
    
    However, B-trees implement a greatly improved version of copy-on-write that is not all-or-nothing: 
    each node in the tree may be independently shared with other trees. 
    
    If you need to insert/remove/update a single element, B-trees will copy at most O(log(*n*)) elements to satisfy
    value semantics, even if the tree was entirely shared before the mutation.

3.  Storage management in B-trees is granular; you do not need to reserve space for a B-tree in advance, and
    it never allocates more memory than it needs to store the actual number of elements it contains.
    
    Storage is gradually allocated and released in small increments as the tree grows and shrinks.
    Storage is only copied when mutating shared elements, and even then it is done in small batches.
    
    The performance of B-trees is extremely stable, with no irregular spikes ever.
    
    (Note that there is a bit of leeway in allocations to make it easy to balance the tree. 
    In the worst case, a B-tree may only fill 50% of the space it allocates. The ratio is typically 
    much higher than that, though.)

4.  B-trees always keep their items sorted in ascending key order, and they provide efficient positional lookups.
    You can get the *i*th smallest/largest item in a tree in O(log(*n*)) time.

5.  Keys of a B-tree need to be `Comparable`, not `Hashable`. It is often significantly easier to 
    write comparison operators than hash functions; it is also much easier to verify that the implementation works 
    correctly. A buggy `<` operator will typically lead to obvious issues that are relatively easy to catch; 
    a badly collisioning hash may go undetected for years.

6.  Adversaries (or blind chance) will never produce a set of elements for which B-trees behave especially badly.
    The performance of B-trees only depends on the size of the tree, not its contents. 
    (Provided that key comparison also behaves uniformly, of course. 
    If you allow multi-megabyte strings as keys, you're gonna have a bad time.)

7.  Concatenation of any two B-trees takes O(log(*n*)) time. For trees that aren't of a trivial size, the result 
    will share some of its nodes with the input trees, deferring most copying until the time the tree needs to be modified.
    (Which may never happen.) Copy-on-write really shines with B-trees!
    
8.  Merging the contents of two B-trees into a single tree takes O(*n*) time in the worst case, but
    if the elements aren't too badly interleaved, it can often finish in O(log(*n*)) time by linking entire subtrees
    into the result in one go.
    
    Set operations on the keys of a B-tree (such as calculating the intersection set, subtraction set, 
    symmetric difference, etc.) also exploit the same trick for a huge performance boost.
    If the input trees are mutated versions of the same original tree, these operations are also able 
    to skip elementwise processing of entire subtrees that are shared between the inputs.

9.  The `SubSequence` of a B-tree is also a B-tree. You can slice and dice B-trees any way you like:
    getting a fully independent copy of any prefix, suffix or subrange in a tree only takes O(log(*n*)) time.
    You can then take the subtree you extracted and insert it into another tree; this also costs O(log(*n*)), 
    no matter where in the tree you want to put it. (You do need to keep the order of keys correct, though.)


### Implementation Notes

-   [`BTree`][BTree] is a generic struct with copy-on-write value semantics.  Internally, it stores its data in
    nodes with a fixed maximum size, arranged in a tree.  `BTree` type provides a full set of hand-tuned 
    high-level operations to work with elements of a B-tree.
    
    Nodes are represented by instances of a [reference type][BTreeNode] that is not exported as public API.
    (Low-level access to individual tree nodes would be tricky to get right, and it would prevent
    future optimizations, such as moving node counts up to parent nodes.)

-   By default, the tree order (a.k.a., the fanout, or the maximum number of children) is set such
    that [each node stores about 16KiB data][bTreeNodeSize]. Larger node sizes make lookups faster, while
    insertion/removal becomes slower -- 16KiB is a good enough approximation of the optimal node size
    on most modern systems.  (But you can also set a custom node size if you know better. Note though
    that you cannot mix-n-match trees of different orders.)  Thus, on a 64-bit system, a B-tree
    holding `Int` elements will store about 2047 elements per node. Wow!

[bTreeNodeSize]: https://github.com/attaswift/BTree/blob/master/Sources/BTreeNode.swift#L23

-   Individual B-tree nodes may be independently shared between multiple B-trees.  When mutating a
    (partially or fully) shared tree, copy-on-write is restricted to only clone the nodes whose subtree is
    actually affected by the mutation. This has the following consequences:
  
    - Nodes cannot contain a reference to their parent node, because it is not necessarily unique. 
    
    - Mutations of shared trees are typically much cheaper than copying the entire collection at once, 
      which is what standard collection types do.
      
    - The root node is never shared between trees that are not equal.

-   [`BTree`][BTree] allows elements with duplicate keys to be stored in the tree. 
    (In fact, `List` works by using the same (empty) key for all elements.) 

    All methods that take a key to find an element [let you (optionally) specify][BTreeKeySelector] if you
    want to work with the first or last matching element, or if you're happy with any match. The latter
    option is sometimes faster as it often allows the search to stop at the topmost matching element. There
    is also a selector that looks for the element *after* the specified key -- this can be nice to determine
    the position of the end of a range of matching items.

-   Each node keeps track of the number of items in its entire subtree, so 
    [efficient positional lookup][BTree.elementAtOffset]
    is possible.  For any *i*, you can get, set, remove or insert the *i*th item in the tree in log(n) time.

-   There is a [`BTreeIterator`][BTreeIterator] and a [`BTreeIndex`][BTreeIndex] that provide the
    usual generator/indexing semantics. While individual element lookup usually takes O(log(n))
    operations, iterating over all elements via these interfaces requires linear time. Using the
    generator is faster than indexing, so you should prefer using it whenever possible. 
    There are methods to start an iterator from the middle of the tree: 
    from any offset, any index, or any key.
    
-   Note that [`forEach`][BTree.forEach] has a specialized recursive implementation, 
    which makes it the fastest way to iterate over B-trees. There is even a variant that allows you
    to stop the iteration when you had seen enough items and want to get off the carousel.

-   [`BTreeCursor`][BTreeCursor] is an easy-to-use, general-purpose batch editing facility that allows you to
    manipulate the elements of a B-tree conveniently and highly efficiently. You can use a cursor to
    walk over the contents of a tree, modifying/inserting/removing elements as needed without a
    per-element log(n) lookup overhead. If you need to insert or remove a bunch or consecutive elements,
    it is better to use the provided bulk removal/insertion methods than to process them individually 
    (Range operations have O(log(*n*)) complexity vs. elementwise processing takes O(*k* * log(n)).)
    
-   Internally, navigation in a B-Tree is based on abstract primitives that maintain a path to a particular
    position in the tree, as described by the [`BTreePath`][BTreePath] protocol. The methods directly
    provided by this protocol are too low-level for convenient use, but the protocol has extension methods
    built on top of these that support familiar concepts like moving back and forth step by step, jumping to
    a specific offset in the tree, or looking up a particular key.
    
    Indexes, generators and cursors use their particular implementation of `BTreePath` to represent their
    own path flavors. All three of them maintain a path of nodes from the root of the tree to a particular
    slot of a particular node, but the details are very different:
    
    - A [`BTreeIndex`][BTreeIndex] may not hold a strong reference to its tree, because that would 
      interfere with copy-on-write when you want to mutate the tree at a certain index. Thus, indices
      are wrappers around a [`BTreeWeakPath`][BTreeWeakPath], which uses weak references, and 
      needs to tread very carefully in order to detect when one of its references gets out of date.
      
    - Meanwhile a [`BTreeIterator`][BTreeIterator] is supposed to support standalone iteration over the
      contents of the tree, so it must contain strong references. It uses a
      [`BTreeStrongPath`][BTreeStrongPath] to represent the path of its next element. While an iterator only
      needs to be able to move one step forward, `BTreeStrongPath` supports the full tree navigation API,
      making it very useful elsewhere in the codebase whenever we need a kind of read-only cursor into a
      tree. For example, the tree merging algorithm uses strong paths to represent its current positions in
      its input trees.
      
    - Finally, a [`BTreeCursor`][BTreeCursor] needs to maintain a path where each node is uniquely
      held by the cursor, ready for mutation. (A cursor owns its own copy of the tree, and does
      not share it with the outside world until it is finished.) 
      This special path flavor is implemented by [`BTreeCursorPath`][BTreeCursorPath].
      To speed things up, this struct intentionally breaks the node counts on its current path, 
      to allow for super speedy elementwise insertions and removals. The counts are carefully recalculated
      whenever the path moves off a node's branch in the tree.
          
[BTreePath]: https://github.com/attaswift/BTree/blob/master/Sources/BTreePath.swift
[BTreeWeakPath]: https://github.com/attaswift/BTree/blob/master/Sources/BTreeIndex.swift#L87
[BTreeStrongPath]: https://github.com/attaswift/BTree/blob/master/Sources/BTreeIterator.swift#L74
[BTreeCursorPath]: https://github.com/attaswift/BTree/blob/master/Sources/BTreeCursor.swift#L96

-   It would be overkill to create an explicit path to look up or modify a single element in the tree
    on its own, so `BTree` also provides a [set of recursive methods][BTree-lookups] that 
    implement the same sort of lookups and simple mutations. 
    They are faster when you need to retrieve a single item, but they aren't efficient when called repeatedly.
    
[BTree-lookups]: https://github.com/attaswift/BTree/blob/master/Sources/BTree.swift#L280-L419

-   `BTree` includes a [bulk loading algorithm][BTree.bulkLoad] that efficiently initializes fully loaded
    trees from any sorted sequence. You can also specify a fill factor that's less than 100% if you expect to
    insert data into the middle of the tree later; leaving some space available may reduce work to keep the
    tree balanced. The bulk loader can optionally filter out duplicate keys for you. It verifies that the
    elements are in the correct order and traps if they aren't.
    
    The bulk loader is based on a general [`BTreeBuilder`][BTreeBuilder] struct that specializes on
    appending elements to a newly created tree. Beside individual elements, it also supports efficiently 
    appending entire B-trees. This comes useful in optimized tree merging algorithms.

[BTree.bulkLoad]: http://attaswift.github.io/BTree/api/Structs/BTree.html#/s:FV5BTree5BTreecuRd__s8SequenceWd__8Iterator7Element_zTxq__rFT14sortedElementsqd__14dropDuplicatesSb5orderSi10fillFactorSd_GS0_xq__
[BTreeBuilder]: https://github.com/attaswift/BTree/blob/master/Sources/BTreeBuilder.swift
    
-   [Constructing a B-tree from an unsorted sequence of elements][BTree.unsorted-load] inserts the elements into the tree one by
    one; no buffer is allocated to sort elements before loading them into the tree. This is done more
    efficiently than calling [an insertion method][BTree.insert] with each element one by one, but it is likely still slower than
    a quicksort. (So sort elements on your own if you ca","'btree', 'collection', 'orderedcollection', 'search-trees', 'swift'",2015-12-15T02:32:26Z,2022-02-23T10:17:30Z,4,2,1305,32,"('lorentey', 496), ('Hoon H', 1), ('gitter-badger', 1), ('Werner Altewischer', 1)",3,1,
RoyWallace/BottomNavigationBar,Material design 更新的BottomNavigationbar的开源实现,"#开发过程中遇到问题可以加群讨论，Android讨论群：295456349

# BottomNavigationBar
Material design 更新的BottomNavigationbar的开源实现

目前版本最新版本是v0.3，还在努力完善中，有兴趣的朋友可以关注。如果发现问题请写在issue，我会定期查看和修复。

###version

v0.1 基础版本

v0.2 支持修改tab selected 情况下的width scale 属性

v0.3 支持设置tab text 在unselected情况下是否隐藏

###Demo修改
有童鞋反应说要如何实现像新规范里面NavigationBar透明的样式，所以这里把项目的Demo修改一下，实现Navigationbar透明并且覆盖在BottomNavigationBar上面。（目前这种实现方式还不够完善，会导致statusBar也不占位的问题。如果有网友有更好的实现方式，不妨提出来，大家一起探讨和分享。）
ps:最近碰上公司项目比较赶，所以暂停了BottomNavigationBar的开源进度。

具体实现：
demo基础上

        setContentView(R.layout.activity_main);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {
            Window window = getWindow();
            // Translucent status bar
            window.setFlags(
                    WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS,
                    WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
            // Translucent navigation bar
            window.setFlags(
                    WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION,
                    WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);
        }
去掉所有的xml中的所有android:fitsSystemWindows=""true""

    <android.support.design.widget.AppBarLayout
        android:layout_width=""match_parent""
        android:layout_height=""wrap_content""
        android:theme=""@style/AppTheme.AppBarOverlay"">

        <View
            android:layout_width=""match_parent""
            android:layout_height=""24dp""/>

        <android.support.v7.widget.Toolbar
            android:id=""@+id/toolbar""
            android:layout_width=""match_parent""
            android:layout_height=""?attr/actionBarSize""
            android:background=""#33000000""
            app:layout_scrollFlags=""scroll""
            app:popupTheme=""@style/AppTheme.PopupOverlay""/>

    

#####补个图

 ![image](https://github.com/RoyWallace/BottomNavigationBar/blob/master/gif/v0.3.1.gif?raw=true)


###TODO

 支持 bar background 不随tab选中而变化
 支持 tab textColor selector


[bottom navigation bars的规范在这里](https://www.google.com/design/spec/components/bottom-navigation.html)

###Show

![image](https://github.com/RoyWallace/BottomNavigationBar/blob/master/gif/v0.2.gif?raw=true)
![image](https://github.com/RoyWallace/BottomNavigationBar/blob/master/gif/v0.3.gif?raw=true)

####How to use
[![](https://jitpack.io/v/RoyWallace/BottomNavigationBar.svg)](https://jitpack.io/#RoyWallace/BottomNavigationBar)

**Step 1**. Add the JitPack repository to your build file
Add it in your root build.gradle at the end of repositories:

    allprojects {
        repositories {
            ...
            maven { url ""https://jitpack.io"" }
        }
    }
**Step 2.** Add the dependency

    dependencies {
            compile 'com.github.RoyWallace:BottomNavigationBar:v0.1'
    }

**Step 3.**  use it in your layout xml

    <etong.bottomnavigation.lib.BottomNavigationBar
        android:id=""@+id/bottomLayout""
        android:layout_width=""match_parent""
        android:layout_height=""?attr/actionBarSize""
        android:layout_gravity=""bottom""/>
**Step 4.** add tab and tabSelected listener

    bottomLayout = (BottomNavigationBar) findViewById(R.id.bottomLayout);
    //params: int icon,String text,int color
    bottomLayout.addTab(R.mipmap.ic_local_movies_white_48dp, ""Movies & Tv"", 0xff4a5965);
    bottomLayout.setOnTabListener(new BottomNavigationBar.TabListener() {
        @Override
        public void onSelected(int position) {
            //...
        }
    });
and you can also use the **BottomNavigationBehavior** with **CoordinatorLayout** 

    <etong.bottomnavigation.lib.BottomNavigationBar
        android:id=""@+id/bottomLayout""
        android:layout_width=""match_parent""
        android:layout_height=""?attr/actionBarSize""
        android:layout_gravity=""bottom""
        app:layout_behavior=""etong.bottomnavigation.lib.BottomNavigationBehavior""/>

####Set tab selected width( bottomLayout.setTabWidthSelectedScale(1.5f);
####Set tab text default visible
    bottomLayout.setTextDefaultVisible(true);
    
 

#License
BottomNavigationBar for Android
The MIT License (MIT)

Copyright (c) 2016 恶童历险记(https://github.com/RoyWallace)

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.


",,2016-03-19T07:34:05Z,2017-09-12T02:47:57Z,2,0,329,18,"('RoyWallace', 26), ('恶童历险记', 3)",0,0,
disembl/tree,"An embedded, simple, fast, concurrent, on-disk key-value store using a b+tree.","An embedded, tiny, fast, on-disk, concurrent key-value store using b+trees.

A database is stored in a single file.

On most POSIX systems, multiple processes can safely access a single file.

Supports put(key,value), get(key), and delete(key).

Usage examples can be found in main()",,2013-03-02T01:52:29Z,2019-03-14T09:46:25Z,2,0,39,7,"('Matthew', 4), ('Matthew Levenstein', 2)",0,0,
xmcp/pakku.js,拯救B站的弹幕体验！,"[![Chrome Web Store - Version](https://img.shields.io/chrome-web-store/v/jklfcpboamajpiikgkbjcnnnnooefbhh.svg?style=flat-square)](https://chromewebstore.google.com/detail/pakku%EF%BC%9A%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%BC%B9%E5%B9%95%E8%BF%87%E6%BB%A4%E5%99%A8/jklfcpboamajpiikgkbjcnnnnooefbhh)
[![Chrome Web Store - Rating](https://img.shields.io/chrome-web-store/rating/jklfcpboamajpiikgkbjcnnnnooefbhh.svg?style=flat-square)](https://chromewebstore.google.com/detail/pakku%EF%BC%9A%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%BC%B9%E5%B9%95%E8%BF%87%E6%BB%A4%E5%99%A8/jklfcpboamajpiikgkbjcnnnnooefbhh)
/
[![Edge Add-on - Version](https://img.shields.io/badge/dynamic/json?label=edge%20add-on&prefix=v&query=%24.version&url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Flnfcfeidnipnphibahlkdhalpkpmccoc&style=flat-square)](https://microsoftedge.microsoft.com/addons/detail/pakku%EF%BC%9A%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%BC%B9%E5%B9%95%E8%BF%87%E6%BB%A4%E5%99%A8/lnfcfeidnipnphibahlkdhalpkpmccoc)
[![Edge Add-on - Rating](https://img.shields.io/badge/dynamic/json?label=rating&suffix=/5&color=&query=%24.averageRating&url=https%3A%2F%2Fmicrosoftedge.microsoft.com%2Faddons%2Fgetproductdetailsbycrxid%2Flnfcfeidnipnphibahlkdhalpkpmccoc&style=flat-square&color=4c1)](https://microsoftedge.microsoft.com/addons/detail/pakku%EF%BC%9A%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E5%BC%B9%E5%B9%95%E8%BF%87%E6%BB%A4%E5%99%A8/lnfcfeidnipnphibahlkdhalpkpmccoc)
/
[![Mozilla Add-on - Version](https://img.shields.io/amo/v/pakkujs.svg?style=flat-square)](https://addons.mozilla.org/zh-CN/firefox/addon/pakkujs?src=external-shield)
[![Mozilla Add-on - Rating](https://img.shields.io/amo/rating/pakkujs.svg?style=flat-square)](https://addons.mozilla.org/zh-CN/firefox/addon/pakkujs?src=external-shield)

#### [→ 点我安装 ←](https://s.xmcp.ltd/pakkujs/?src=readme_1) （支持 Chrome、Edge、Firefox）

![logo](https://cloud.githubusercontent.com/assets/6646473/17503651/20b41376-5e24-11e6-8829-6b8a0ccd47a9.png)
# pakku.js

自动合并B站视频中刷屏弹幕的浏览器插件，让您免受各种带节奏弹幕的刷屏之苦。

↓ 《千绪的通学路》第5话

![](https://s.xmcp.ltd/pakkujs/comm/1.png)

↓  哔哩哔哩拜年祭 2018，可见“弹幕密度分析图”功能

![](https://s.xmcp.ltd/pakkujs/comm/2.png)

↓  【炮姐/AMV】我永远都会守护在你的身边！(av810872)，可见“自动调整弹幕大小”功能

![](https://s.xmcp.ltd/pakkujs/comm/3.png)

↓  《NEW GAME!》第8话，可见“弹幕信息显示框”功能

![](https://s.xmcp.ltd/pakkujs/comm/4.png)

↓  电磁炮真是太可爱了(av314)，可见统计信息显示

![](https://s.xmcp.ltd/pakkujs/comm/5.png)

### 用户脚本

可以通过 JavaScript 代码来修改弹幕内容，实现深度自定义 pakku 的功能或者临时调整弹幕样式。

详见 [用户脚本文档](userscript_docs/README.md)。

### 浏览器兼容性

目前版本兼容 Chrome 和 Edge 版本 ≥99，以及 Firefox 版本 ≥113。

未来的浏览器兼容性目标为 Chrome 和 Edge 最近 24 个版本，Firefox 最近 12 个版本。

### License

[GPLv3](LICENSE.txt)

#### [→ 点我安装 ←](https://s.xmcp.ltd/pakkujs/?src=readme_2) （支持 Chrome、Edge、Firefox）
","'anime', 'bilibili', 'chrome-extension', 'danmaku', 'javascript', 'webextension'",2017-02-28T15:45:02Z,2024-06-16T06:44:39Z,6,6,1990,20,"('xmcp', 527), ('dramforever', 2), ('Last-Order', 1), ('tc21', 1), ('kookxiang', 1), ('zacyu', 1)",4,4,
geoffsalmon/vlc-python,VLC's python bindings,"* Python ctypes-based bindings for libvlc

The bindings use ctypes to directly call the libvlc dynamic lib, and
the code is generated from the include files defining the public API.

** License

The generated module is licensed, like libvlc, under the GNU Lesser
General Public License 2.1 or later. The module generator itself is
licensed under the GNU General Public License version 2 or later.

** Building

To generate the vlc.py module and its documentation, use
make
or use the generated/vlc.py file.

To install it for development purposes (add a symlink to your Python
library) simply do

    python setup.py develop

preferably inside a virtualenv. You can uninstall it later with

    python setup.py develop --uninstall

Documentation building needs epydoc. An online build is available at 
http://advene.org/download/python-ctypes/

** Layout

The module offers two ways of accessing the API - a raw access to all
exported methods, and more convenient wrapper classes :

- Raw access: methods are available as attributes of the vlc
  module. Use their docstring (any introspective shell like ipython is
  your friends) to explore them. 

- Wrapper classes: most major structures of the libvlc API (Instance,
  Media, MediaPlayer, etc) are wrapped as classes, with shorter method
  names.

** Using the module

On win32, the simplest way is to put the vlc.py file in the same
directory as the libvlc.dll file (standard location:
c:\Program Files\VideoLAN\VLC ).

- Using raw access:

>>> import vlc
>>> vlc.libvlc_get_version()
'1.0.0 Goldeneye'
>>> e=vlc.VLCException()
>>> i=vlc.libvlc_new(0, [], e)
>>> i

>>> vlc.libvlc_audio_get_volume(i,e)
50

- Using wrapper classes:

>>> import vlc
>>> i=vlc.Instance('--no-audio', '--fullscreen')
>>> i.audio_get_volume()
50
>>> p=i.media_player_new()
>>> m=i.media_new('file:///tmp/foo.avi')
>>> m.get_mrl()
'file:///tmp/foo.avi'
>>> p.set_media(m)
>>> p.play()

or shorter:

>>> import vlc
>>> p=vlc.MediaPlayer('file:///tmp/foo.avi')
>>> p.play()

In this latter case, a default vlc.Instance will be instanciated and
stored in vlc._default_instance. It will be used to instanciate the
various classes (Media, MediaList, MediaPlayer, etc).
",,2011-08-14T14:22:20Z,2013-07-08T01:30:08Z,8,6,47,6,"('oaubert', 182), ('mrJean1', 21), ('Jean Brouwers', 9), ('geoffsalmon', 5), ('metakermit', 1), ('gorb314', 1), ('TypX', 1), ('JP Dinger', 1)",4,3,
liexusong/php-beast,PHP source code encrypt module (PHP源码加密扩展),"
        ____  __  ______     ____  _________   ___________
       / __ \/ / / / __ \   / __ )/ ____/   | / ___/_  __/
      / /_/ / /_/ / /_/ /  / __  / __/ / /| | \__ \ / /
     / ____/ __  / ____/  / /_/ / /___/ ___ |___/ // /
    /_/   /_/ /_/_/      /_____/_____/_/  |_/____//_/

贡献者名字：
@imaben (windows版本提供者)  https://github.com/imaben
@pinguo-niulingyun (PHP7版本提供者) https://github.com/pinguo-niulingyun

QQ交流群：239243332


Windows DLL：下载地址

php-beast可以自定义加密模块，加密模块编写教程: 点击

编译安装如下:

$ wget https://github.com/liexusong/php-beast/archive/master.zip
$ unzip master.zip
$ cd php-beast-master
$ phpize
$ ./configure
$ sudo make && make install

编译好之后修改php.ini配置文件, 加入配置项: extension=beast.so, 重启php-fpm


温馨提示: 可以设置较大的缓存提高效率

使用php-beast的性能：


不使用php-beast的性能：


配置项:

 beast.cache_size = size
 beast.log_file = ""path_to_log""
 beast.log_user = ""user""
 beast.log_level = ""debug""
 beast.enable = On


beast.log_level支持参数：

 1. DEBUG
 2. NOTICE
 3. ERROR


支持的模块有：

 1. AES
 2. DES
 3. Base64


通过测试环境:

 Nginx + Fastcgi + (PHP-5.2.x ~ PHP-7.1.x)


------------------------------

## 怎么加密项目
**加密方案1**

安装完 `php-beast` 后可以使用 `tools` 目录下的 `encode_files.php` 来加密你的项目。使用 `encode_files.php` 之前先修改 `tools` 目录下的 `configure.ini` 文件，如下：
```ini
; source path
src_path = """"

; destination path
dst_path = """"

; expire time
expire = """"

; encrypt type (selection: DES, AES, BASE64)
encrypt_type = ""DES""
```
`src_path` 是要加密项目的路径，`dst_path` 是保存加密后项目的路径，`expire` 是设置项目可使用的时间 (`expire` 的格式是：`YYYY-mm-dd HH:ii:ss`)。`encrypt_type`是加密的方式，选择项有：DES、AES、BASE64。
修改完 `configure.ini` 文件后就可以使用命令 `php encode_files.php` 开始加密项目。

**加密方案2**

使用`beast_encode_file()`函数加密文件，函数原型如下：
`beast_encode_file(string $input_file, string $output_file, int expire_timestamp, int encrypt_type)`。

1. $input_file: 要加密的文件
2. $output_file: 输出的加密文件路径
3. $expire_timestamp: 文件过期时间戳
4. $encrypt_type: 加密使用的算法（支持：BEAST_ENCRYPT_TYPE_DES、BEAST_ENCRYPT_TYPE_AES）


------------------------------

## 制定自己的php-beast

`php-beast` 有多个地方可以定制的，以下一一列出：

*1.* 使用 `header.c` 文件可以修改 `php-beast` 加密后的文件头结构，这样网上的解密软件就不能认识我们的加密文件，就不能进行解密，增加加密的安全性。

*2.* `php-beast` 提供只能在指定的机器上运行的功能。要使用此功能可以在 `networkcards.c` 文件添加能够运行机器的网卡号，例如：
```c
char *allow_networkcards[] = {
	""fa:16:3e:08:88:01"",
    NULL,
};
```
这样设置之后，`php-beast` 扩展就只能在 `fa:16:3e:08:88:01` 这台机器上运行。另外要注意的是，由于有些机器网卡名可能不一样，所以如果你的网卡名不是 `eth0` 的话，可以在 `php.ini` 中添加配置项： `beast.networkcard = ""xxx""` 其中 `xxx` 就是你的网卡名，也可以配置多张网卡，如：`beast.networkcard = ""eth0,eth1,eth2""`。

*3.* 使用 `php-beast` 时最好不要使用默认的加密key，因为扩展是开源的，如果使用默认加密key的话，很容易被人发现。所以最好编译的时候修改加密的key，`aes模块` 可以在 `aes_algo_handler.c` 文件修改，而 `des模块` 可以在 `des_algo_handler.c` 文件修改。

------------------------------

## 开启debug模式
可以在configure时加上 `--enable-beast-debug` 选项来开启debug模式。开启debug模式后需要在php.ini配置文件中加入配置项：`beast.debug_path` 和 `beast.debug_mode`。`beast.debug_mode` 用于指定是否使用debug模式，而 `beast.debug_path` 用于输出解密后的php脚本源码。这样就可以在 `beast.debug_path` 目录中看到php-beast解密后的源代码，可以方便知道扩展解密是否正确。

## 开启禁止执行未加密的脚本
可以在configure时加上 `--enable-execute-normal-script=off` 选项来禁止执行未加密的PHP脚本。

------------------------------

## 函数列表
*1.* beast_encode_file(): 用于加密一个文件

*2.* beast_avail_cache(): 获取可以缓存大小

*3.* beast_support_filesize(): 获取beast支持的最大可加密文件大小

*4.* beast_file_expire(): 获取一个文件的过期时间

*5.* beast_clean_cache(): 清空beast的所有缓存(如果有文件更新, 可以使用此函数清空缓存)

------------------------------

## 常见问题

*1.* linux：如果出现502错误，一般是由于GCC版本太低导致，请先升级GCC再安装本模块。

*2.* Windows：IIS环境下FastCGI进程异常退出：尝试将IIS的运行用户从ApplicationPoolIdentity改为LocalSystem

------------------------------

### 我们的公众号

![](https://image-static.segmentfault.com/376/558/3765589661-607fef350658b_fix732)

------------------------------
",,2013-06-08T02:46:51Z,2021-08-16T11:17:34Z,8,3,1683,120,"('liexusong', 197), ('xusong.lie', 145), ('imaben', 23), ('citizen233', 5), ('niulingyun', 2), ('liexusong', 1), ('smizrahi', 1), ('yangruitao', 1)",3,0,
mVentory/MVentory_S3CDN,mVentory S3 CDN extension for Magento for keeping images on AWS,"This project has been discontinued. Check out our next project: a [4G security camera](https://sensorable.io).


#S3CDN Extension

The mVentory S3CDN extension moves product image storage from Magento server to Amazon S3. It greately reduces server requirements and allows using Amazon CloudFront CDN.

All product photos uploaded to Magento `media` folder are copied to a preconfigured S3 bucket.
Magento generates resized product images on demand and stores them in `media` folder for re-use. This extension requires product image sizes to be known in advance to generate all possible sizes and store them on S3. It slightly increases the amount of stored data.


#####S3 structure

Images are stored in S3 with the same names and paths as in Magento. The root path includes the s3 domain name, the bucket name, the site name (prefix), followed by the normal magento path.

     E.g. http://d3jbsz0dxpzi11.cloudfront.net/t1/215x170/1/3/1335478295542.jpg

where t1 is the name (prefix) of the site/storefront.

#####Security policy

Magento admin stores an AWS key for accessing S3. Limit the account rights to minimise potential damage should the key fall into wrong hands.

1. Use IAM to create a user with limited access
2. Restrict uploads to the IP of your Magento server

***

##Installation

* Install the extension (magento connect link)
* You should see mVentory group with CDN tab on _System Configuration_ page.
* Log out of Magento admin and log back in if you don't see the tab or get an error after clicking on it.

##AWS S3 configuration

These instructions are only a guide and are not intended to be the best practice recommendation.

1) **Create a buket.**

2) **Create a read-only bucket policy:**

```
{
    ""Version"": ""2008-10-17"",
    ""Id"": ""Policy1234567"",
    ""Statement"": [
    	{
    		""Sid"": ""Stmt1234567"",
    		""Effect"": ""Allow"",
    		""Principal"": {
    			""AWS"": ""*""
    		},
    		""Action"": ""s3:GetObject"",
    		""Resource"": ""arn:aws:s3:::mybucketname/*""
    	}
    ]
}
```
Replace `mybucketname` with the name of your bucket. Keep `/*` to allow access to files and subfolders, not just the bucket.

3) **Create a folder in the bucket.** You an use any name, but we recommend using the name of your website for consistency, e.g. _shop1_.

4) **Create an IAM user** with the following permissions:

```
{
     ""Statement"": [
       {
         ""Effect"": ""Allow"",
         ""Action"": [
           ""s3:Get*"",
           ""s3:List*"",
           ""s3:Put*""
         ],
         ""Resource"": ""arn:aws:s3:::mybucketname/*""
       }
     ]
}
```
5) **Save the access keys** of the IAM user.

####Bucket URL

Determine the bucket URL. It can be in a form of `http://s3.amazonaws.com//some/path/to/file.jpg` (works only for some buckets in some regions) or `http://.s3.amazonaws.com/some/path/to/file.jpg` (should work for all types of buckets from all regions),  where `` should be replaced with your bucket name.
test the bucket URL.

You can verify the URL by manually uploading an image through the AWS console and making sure you can access it through the URL.

##Magento configuration 

1. Go to _System -> Configuration -> mVentory / CDN_.

2. Log out of admin and log back in in if you get 404 error (a known Magento quirk).

3. Enter Access and Secret Keys (that you saved in step 5 of AWS S3 configuration) and bucket name to the _Default_ configuration level.

4. Enter a comma-separated list of image dimensions (in pixels). This list must include all dimensions used in your theme. E.g. you can use this list for the default theme:
`50x, 56x, 75x75, 75x, 76x, 85x, 100x100, 113x113, 125x125, 125x, 135x, 265x`.

5. Save config and switch to the website level.

6. Enter the S3 folder name (from step 3 of AWS configuration). E.g. _shop1_.

7. Save config. *Do not proceed to uploading placeholders without saving.*

8. Press on `Upload placeholders to CDN` button to generate standard Magento image placeholders of the specified dimensions and upload them to S3.

9. Switch to _General/Web_ tab. Enter the bucket URL into _Base Media URL_ text boxes in _Secure_ and _Unsecure_ sections. We recommend using a CloudFront URL.
Examples:
 	
* `http://.s3.amazonaws.com/` for direct S3 access
* `http://dk721sbikbl1.cloudfront.net/` via CloudFront

### Testing the set up

1. Create a new product and view it in the front-end.
2. The URLs of the product images should be pointing at AWS and images should be displayed correctly.

### Troubleshooting

1. Check the URL of the images - must point to S3 or CloudFront.
2. Try accessing the image on S3 - should be public
3. Use AWS console to check if the image exists on S3
4. Check if the bucket has a policy for public read-only access

***
 
##Image migration

Use `utils/upload-to-s3` script to migrate all original product images from the local storage to S3. All other images in /media/ folder are ignored.

####Prep

1. Place the script into Magento root
2. Check your `max_execution_time`. The script may take a while.
3. Modify the script if you want to limit the scope of the images to a particular website.
4. Prepare an S3 bucket (see instructions above).
5. Prepare resizing dimensions (see instructions above)

We recomment to configure and test the extension first. Do not run the script if you cannot successfully upload images to S3 via the admin or [Magento Android App](http://mventory.com). 

####Notes

* Resizing dimensions are taken from mage config.
* Original files are uploaded as is, other dimensions are produced on the fly and uploaded.
* Uploaded images are not deleted.
* Errors are written to s3.log file. 
* The script does not stop on errors. 
* Files existing on S3 are overwritten by the local copy.
* The script may take a very long time to execute

***

##Bulk image resizing

Use `utils/resize-on-s3` script to resize original images on S3 to something else.

The script can called from ... and requires ... the user to be logged in as ... . It can be done from the same magento instance or from any other, as long as the keys, paths and sizes match.

Resizing dimensions are taken from mage config.

The extension downloads the originals from S3, resizes them and uploads the resized images to their location in S3.

Errors are written to an error log. The script will not stop on errors. Files existing on S3 are overwritten by the local copy.

***

##Testing the migration

1. Rename the existing media folder and create a new one so that it is empty and you still have all your files locally.
2. Create a new product and view it in the front-end.
3. The URLs of the product images should be pointing at AWS.
",,2014-03-21T03:16:52Z,2019-06-23T03:39:50Z,6,4,31,11,"('Anatoly A. Kazantsev', 12), ('rimutaka', 9), ('agnz', 8), ('anatolykazantsev', 3), ('U-miho-desktop\\miho', 1), ('jmfaraujo', 1)",2,1,
gavinkwoe/BeeFramework,[Experimental] A semi-hybrid framework that allows you to create mobile apps using Objective-C and XML/CSS,"***This project is no longer supported or updated. Please do not file issues or pull-requests against this repo. If you wish to continue to develop this code yourself, we recommend you fork it.***

***Goodbye BeeFramework, Goodbye Steve Jobs era.***

![logo](https://cloud.githubusercontent.com/assets/679824/3976127/d495a6a4-2819-11e4-81cf-b27832e27e90.png)

BeeFramework is a semi-hybrid framework that allows you to create mobile apps using Objective-C and XML/CSS.

## Join us

QQ Group: 314365063

## * Samurai-Native

Yet another great UI Solution

[https://github.com/hackers-painters/samurai-native](https://github.com/hackers-painters/samurai-native)

## 0.6.0 New Feature - Liveload

### Have a better life with liveload

1. Edit the XML file with any editor (Xcode, Sublime Text, even TextEdit etc.).
2. After editing, just save the file by shortcut (`Command+S`) or clicking the menu item `Save`.
3. Then the corresponding view in smulator will update according to the changes without rebuilding app.
4. You can get More info from `/serivces/bee.service.liveload/`.

### Here is a video about the new feature
 
📺 &nbsp;BeeFramework 0.6.0 New Feature - Liveload &nbsp; [YouTube] &nbsp; [Youku]
 
 ![liveload-snopshot](https://cloud.githubusercontent.com/assets/679824/3977216/bc197f36-2834-11e4-95ff-838a39556c08.png)

## How to install

1. Download the source code
2. Drag and drop `/framework` folder into your project
3. Drag and drop `/services` folder into your project
4. Build and run

## Demo app

A demo app for dribbble.com, as fast as native, as flexible as web. See `/projects/dribbble` demo for more information.

![dribbble-1](https://cloud.githubusercontent.com/assets/679824/3976218/fe45e93a-281b-11e4-9cae-50fc2266b2a0.png)
![dribbble-2](https://cloud.githubusercontent.com/assets/679824/3976221/08565f9a-281c-11e4-88ea-23724a2008cf.png)

## Demo app - Wireframe mode

![dribbble-3](https://cloud.githubusercontent.com/assets/679824/3976224/18fce0bc-281c-11e4-865c-3cedac069fbf.png)

## Demo app - Inspector mode

![dribbble-4](https://cloud.githubusercontent.com/assets/679824/3976226/26716650-281c-11e4-99f0-c8d12e9b9624.png)

## Semi-Hybrid UI

Semi-hybrid offers you a new approach to UI development using XML/CSS, you can reuse these templates in any project based on BeeFramework. See `/projects/dribbble` demo for more information.

![bee_template](https://cloud.githubusercontent.com/assets/679824/3976231/32682b56-281c-11e4-8824-9ae7aaa0d21f.png)

## Services

Services extend and expand the functionality of your app automatically, drag and drop the services folder into your project. See `/services` for more information.

![bee_services](https://cloud.githubusercontent.com/assets/679824/3976233/32dbf874-281c-11e4-8baf-271edac46312.png)

For example:


bee.services.alipay.config.parnter = @"""";
bee.services.alipay.config.seller = @"""";
bee.services.alipay.config.privateKey = @"""";
bee.services.alipay.config.publicKey = @"""";
bee.services.alipay.config.notifyURL = @""http://"";

bee.services.alipay.order.no = @""SN"";
bee.services.alipay.order.name = @""NAME"";
bee.services.alipay.order.desc = @""DESC"";
bee.services.alipay.order.price = @""PRICE"";

bee.services.alipay.whenSucceed = ^
{
};

bee.services.alipay.PAY();	// or .ON();


## Scaffold

Scaffold helps you to generate Model/Controller code and documents, also provide the local test environment. See `/tools/scaffold` or `/projects/scaffold` for more information.

![bee_scaffold_1](https://cloud.githubusercontent.com/assets/679824/3976230/32287a1a-281c-11e4-9999-968fb3c9c93e.png)
![bee_scaffold_2](https://cloud.githubusercontent.com/assets/679824/3976232/326d4e88-281c-11e4-837c-bb8756aec6ca.png)

For example:


> ./scaffold schema build ./example/dribbble.json
> ./scaffold schema test ./example/dribbble.json


## Features

- CLI
- MVC
	- View
		- Liveload
		- Application
		- Config
		- Container
			- Board
			- Stack
			- Router
			- Window
		- CSS style sheet
		- XML template
		- DOM
			- Animation/Transition
			- Data binding
			- Capability
			- Elements
			- Elements ext
			- Signaling
			- Auto layout
			- Query (jQuery-like syntax)
		- View-Model
			- Once
			- Paging
			- Stream
		- Other
			- Color
			- Font
			- Image
			- Metrics
	- Model
	- Controller
		- Message
		- MessageController
		- Queue
		- Routine
		- Extensions
			- Message + JSON
			- Message + HTTP
			- Message + XML
			- Message + ActiveRecord
- System
	- Cache
		- File
		- Memory
		- Keychain
		- UserDefaults
	- Database
		- SQLite wrapper
		- ActiveRecord
		- Driver
	- Foundation
		- Assertion
		- Log
		- Performance
		- Runtime
		- Sandbox
		- Singleton
		- System information
		- Thread
		- Ticker
		- UnitTest
	- Localization
	- Network
		- HTTP client
		- HTTP server
		- Reachability
		- Socket
	- Resource
	- Service

## Lastest version

* [Download the lastest release](https://github.com/gavinkwoe/BeeFramework/archive/master.zip)

		https://github.com/gavinkwoe/BeeFramework/archive/master.zip

* Clone the repo (CLI)

		git clone git@github.com:gavinkwoe/BeeFramework.git

* Clone the repo (HTTP)

		https://github.com/gavinkwoe/BeeFramework.git

* Import from CocoaPods ( thanks to [stcui](https://github.com/stcui) )

	Add below to `Podfile` and run `pod install`

		platform :ios
		pod 'BeeFramework', :head

## Bug tracker

* Have a bug or a feature request? [Please open a new issue](https://github.com/gavinkwoe/BeeFramework/issues).
* Before opening any issue, please read the [Issue Guidelines](https://github.com/necolas/issue-guidelines), written by [Nicolas Gallagher](https://github.com/necolas/).


## License

![geek-zoo](https://cloud.githubusercontent.com/assets/679824/3976260/f51498ba-281c-11e4-9569-6b60cfb1d90a.png)

	 ______    ______    ______
	/\  __ \  /\  ___\  /\  ___\
	\ \  __<  \ \  __\_ \ \  __\_
	 \ \_____\ \ \_____\ \ \_____\
	  \/_____/  \/_____/  \/_____/


	Copyright (c) 2014-2015, Geek Zoo Studio
	http://www.bee-framework.com


	Permission is hereby granted, free of charge, to any person obtaining a
	copy of this software and associated documentation files (the ""Software""),
	to deal in the Software without restriction, including without limitation
	the rights to use, copy, modify, merge, publish, distribute, sublicense,
	and/or sell copies of the Software, and to permit persons to whom the
	Software is furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in
	all copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
	FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
	IN THE SOFTWARE.

## Change log

#### 0.6.0

1. Liveload

#### 0.5.0

1. New MVVM architecture
2. New Package technology
3. New Signal routing technology
4. New HTTP server technology
5. New CSS parser, support more CSS syntax
6. New ScrollView, support complex layout
7. More jQuery-like syntax
8. Refactory directory structure
9. Refactory animation system
10. Support multi-language
11. Support manifest.json
12. New 3D UI inspector plugin
13. New grid system plugin
14. New alipay plugin
15. New location plugin
16. New push notification plugin
17. New social share plugin
18. New splash plugin
19. Bug fix

#### 0.4.0

1. Refactory the directory structure, divided into four parts, applicaton, service, system and vendor.
2. New XML template technology, perfect support for CSS
3. New QUERY technology, compatible with the jQUERY grammar
4. New automatic layout algorithm, easy to handle complex UI development task
5. New Service technology, plug-and-play
6. New mocking server technology, simulate network requests.
7. New ActiveObject technology, support any object serialization and deserialization
8. New In-app debugger, simplify the useless function
9. Code generator for JSON schema, no longer need to handwritten server docking code
10. Add BeeUISkeleton, an simple and powerful application entry
11. Add BeeRoutine, an BeeMessage which can asynchronous and by-self executing
12. Fix some BUG

#### 0.3.0

1. Fully support for MacOS
2. Fully support for UI template (xml)
3. Fully support for UI query syntax, like jQUERY
4. Fully support for template/viewController signal bridging by ID
5. Fix some bugs

#### 0.2.3

1. Refactoring the directory structure, Core and MVC completely separated, and the source files and the extensions completely separated
2. Refactoring the code structure of BeeDatabase and BeeActiveRecord, more clearly
3. Support the ActiveRecord inherition and nesting, support HAS/BELONG_TO operations
4. Support dot(.) opertions for BeeRequest and BeeMessage
5. Fix some bugs

#### 0.2.0

1. Add BeeDatabase
2. Add BeeActiveRecord
3. Overload graph
4. Fix some bugs
5. Move precompile options to 'Bee_Precompile.h'

#### 0.1.0

1. Draft version
2. Tutorial
3. In-app debugger

## Contributors

Name|Type
----|----
**Gavin.Kwoe**|[https://github.com/gavinkwoe](https://github.com/gavinkwoe)
**QFish**|[https://github.com/qfish](https://github.com/qfish)
**STCui**|[https://github.com/stcui](https://github.com/stcui)
**ilikeido**|[https://github.com/ilikeido](https://github.com/ilikeido)
**gelosie**|[https://github.com/gelosie](https://github.com/gelosie)
**lancy**|[https://github.com/lancy](https://github.com/lancy)
**uxyheaven**|[https://github.com/uxyheaven](https://github.com/uxyheaven)
**Yulong**|[https://github.com/Yulong](https://github.com/Yulong)
**esseak**|[https://github.com/esseak](https://github.com/esseak)
**inonomori**|[https://github.com/inonomori](https://github.com/inonomori)

## More Incredible Projects from OpenSourceChina

You may want to see more great open source projects brought you by Chinese developers. See more in the [Projects repo](https://github.com/OpenSourceChina/Projects) of [OpenSourceChina](https://github.com/OpenSourceChina).

Join us, please contact [gavinkwoe](https://github.com/gavinkwoe) or [onevcat](https://github.com/onevcat).
",,2012-08-28T08:29:24Z,2016-09-23T03:01:20Z,28,20,3335,390,"('gavinkwoe', 169), ('stcui', 32), ('qfish', 21), ('gelosie', 13), ('ilikeido', 11), ('GeekZooStudio', 5), ('hesh', 5), ('uxyheaven', 3), ('ganvinalix', 3), ('jebai', 3), ('lancy', 3), ('刘家锋', 3), ('cdoky', 2), ('Yulong', 2), ('chenyun120', 1), ('Chenyun', 1), ('esseak', 1), ('Mylonly', 1), ('Uxyheaven', 1), ('jiwq', 1), ('YuZhangGHub', 1), ('Yulong', 1), ('inonomori', 1), ('ganvinalix', 1), ('hongliang-goudou', 1), ('ponxu', 1), ('xeodou', 1), ('zhuchaowe', 1)",14,9,
cmsb2g/B2GAnaFW,Analysis framework for Beyond Two Generations (B2G) Physics Analysis Group (PAG) of the Compact Muon Solenoid (CMS) Experiment,"B2GAnaFW
========

Analysis framework for Beyond Two Generations (B2G) Physics Analysis Group (PAG) of the Compact Muon Solenoid (CMS) Experiment

Version
=======

This version is used to produced B2G EDMNtuples for the re-MiniAOD of the MC and Run2012D, as weill as the Run2012D_PromptReco-v4

https://twiki.cern.ch/twiki/bin/view/CMSPublic/WorkBookMiniAOD#Run2_Spring15MiniAODv2_re_miniAO

https://twiki.cern.ch/twiki/bin/view/CMSPublic/WorkBookMiniAOD#Run2015_B_C_50ns_D_05Oct2015_re

https://twiki.cern.ch/twiki/bin/view/CMSPublic/WorkBookMiniAOD#Run2015D_PromptReco_v4_Data_2015

Checkout Instructions
=====================

Make a new CMSSW area

$ cmsrel CMSSW_7_4_15

$ cd CMSSW_7_4_15/src

$ cmsenv

Needed to run VID for electron ID
=================================

$ git cms-merge-topic ikrav:egm_id_7.4.12_v1

Clone the github repository
===========================

$ git clone -b v7.4.x_V8 https://github.com/cmsb2g/B2GAnaFW.git Analysis/B2GAnaFW

Compile
=======

$ scram b -j 10

Running
=======

The python configuration file for cmsRun is B2GAnaFW/test/b2gedmntuples_cfg.py. It runs on the miniAOD data tier and produces an EDM-ntuple.

The configuration file contians a header explaining usage. Do

$ cd Analysis/B2GAnaFW/test

$ python b2gedmntuples_cfg.py 

for running instructions. 

",,2014-12-12T17:08:19Z,2018-10-24T16:04:00Z,16,15,8,21,"('dmajumder', 71), ('rappoccio', 45), ('decosa', 42), ('bchiarito', 17), ('oiorio', 14), ('osherson', 5), ('jkarancs', 4), ('justinrpilot', 4), ('skyriacoCMS', 4), ('yongyg', 3), ('dpinna', 2), ('Alejandro', 1), ('TC01', 1), ('jkaisen', 1), ('cmsb2g', 1), ('nfaltermann', 1)",5,4,
penglu20/Bigbang,The source code of Bigbang App: http://www.coolapk.com/apk/com.forfan.bigbang  /   https://play.google.com/store/apps/details?id=com.forfan.bigbang,"##Bigbang 是老罗设计的一种高效的文字处理方式。

遗憾的是Bigbang只能在锤子手机上使用。

为了让更多人体验到这种高效的交互方式，我们做了这个小应用[下载地址](http://www.coolapk.com/apk/com.forfan.bigbang)。

由于不具备系统权限，所以我们无法完全做到在锤子手机上的使用体验，但是我们也试图通过其他方法来进行补足。

本应用中使用到的技术包括：

1. 通过辅助模式，实现单击、长按、双击来进行选词；

2. 通过系统复制进行选词；

3. 通过辅助模式，实现全局复制进行选词；

4. 使用5.0以上的系统接口，进行截图OCR进行选词；

5. 通过悬浮窗、通知栏进行控制；

6. 通过xposed模块，实现单击、长按、双击来进行选词


后期我们会总结开发过程中使用到的技术和学习到的经验，写几篇技术博客，如果能对其他人有所帮助我们就心满意足了。

##下载地址

[酷安市场](http://www.coolapk.com/apk/com.forfan.bigbang )

[GooglePlay](https://play.google.com/store/apps/details?id=com.forfan.bigbang)


###应用内截图：

######点击触发：
![点击触发](https://raw.githubusercontent.com/l465659833/Bigbang/master/gif/click.gif)

######复制触发：

![复制触发](https://raw.githubusercontent.com/l465659833/Bigbang/master/gif/copy.gif)

######全局复制触发：
![全局复制触发](https://raw.githubusercontent.com/l465659833/Bigbang/master/gif/ucopy.gif)


######截屏OCR触发：
![截屏OCR触发](https://raw.githubusercontent.com/l465659833/Bigbang/master/gif/ocr.gif)


######分词界面设置：
![分词界面设置](https://raw.githubusercontent.com/l465659833/Bigbang/master/gif/setting.gif)






##感谢：


首先要感谢[@shang1101](https://github.com/shang1101) ，Bigbang是由我们俩配合完成的！

分词界面是基于baoyongzhang大神的代码修改的，在此郑重感谢，这是他的github地址： https://github.com/baoyongzhang/BigBang 

全局复制功能参考了这个应用的实现：http://www.coolapk.com/apk/com.camel.corp.universalcopy


##相关文章


我们在做这个项目的过程中，学习到了一些知识，遇到了很多坑，记录整理成文，希望可以帮助你阅读和理解本项目：

[开发《全能分词》（又名《锤子Bigbang》）的心路历程](http://www.jianshu.com/p/6e068fca111b)

[通过辅助模式获取点击的文字](http://www.jianshu.com/p/60758b3f2c7c)

[使用辅助服务实现全局复制](http://www.jianshu.com/p/c34cbef4d68e)

[使用辅助服务监听系统按键](http://www.jianshu.com/p/03904692b76b)

[如何通过Xposed框架获取点击的文字](http://www.jianshu.com/p/d7083c6e83bb)

[使用Xposed框架实现全局复制](http://www.jianshu.com/p/9dda421d23e4)

[在onLayout中实现简单的微动效](http://www.jianshu.com/p/93463ab36df9)

[如何使用Android的拖拽接口实现拖拽功能](http://www.jianshu.com/p/5001d0b42e10)

[通过ContentProvider多进程共享SharedPreferences数据](http://www.jianshu.com/p/bdebf741221e)

[Android上如何实现矩形区域截屏](http://www.jianshu.com/p/0462dae4c808)

[Android如何判断NavigationBar是否显示（获取屏幕真实的高度）](http://www.jianshu.com/p/84d951b3f079)

[如何在Bitmap截取任意形状](http://www.jianshu.com/p/d64cf9f69d05)

[4种获取前台应用的方法（肯定有你不知道的）](http://www.jianshu.com/p/a513accd40cd)

[android7.0 通过代码 分享图片到朋友圈](http://www.jianshu.com/p/5b0e0310d93f)

[Android中如何正确的获得所有App列表](http://www.jianshu.com/p/aee07cbb0cae)

[Android的supportV7中默认按钮的颜色设置](http://www.jianshu.com/p/98214d31318d)

[Android沉浸式与SearchView的坑](http://www.jianshu.com/p/f5d6bf2fc634)

[Android中“强制停止”和广播保活的一个小坑](http://www.jianshu.com/p/c632f5de465f)

[Xposed大法好,教你实现ForceTouch炫酷功能](http://www.jianshu.com/p/e7ea5e3bdb47)

[如何实现android炫酷悬浮球菜单](http://www.jianshu.com/p/56abca9fb592)


##License


![DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE](http://www.wtfpl.net/wp-content/uploads/2012/12/logo-220x1601.png)


```
Copyright © 2016 l465659833 
This work is free. You can redistribute it and/or modify it under the
terms of the Do What The Fuck You Want To Public License, Version 2,
as published by Sam Hocevar. See the COPYING file for more details.

```
",,2017-01-03T07:50:50Z,2020-03-23T07:48:51Z,5,2,686,27,"('penglu', 127), ('unknown', 117), ('unknown', 54), ('penglu20', 5), ('shang1101', 2)",0,0,
ariok/BWWalkthrough,BWWalkthrough is a simple library that helps you build custom walkthroughs for your iOS App,"




[![CocoaPods](https://img.shields.io/cocoapods/v/BWWalkthrough.svg)]()
[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)
[![Platform](https://img.shields.io/cocoapods/p/BWWalkthrough.svg?style=flat)](http://cocoadocs.org/docsets/BWWalkthrough)
[![Twitter](https://img.shields.io/badge/twitter-@bitwaker-59ADEB.svg?style=flat)](http://twitter.com/bitwaker)


## What is BWWalkthrough?
BWWalkthrough (BWWT) is a class that helps you create **Walkthroughs** for your iOS Apps.
It differs from other similar classes in that there is no rigid template; BWWT is just a layer placed over your controllers that gives you complete **freedom on the design of your views.**.

![Preview](http://www.thinkandbuild.it/gifs/BWWalkthrough_mini2.gif)

Video preview [Here](http://vimeo.com/106542773)
A dedicated tutorial is available on [ThinkAndBuild](http://www.thinkandbuild.it/creating-custom-walkthroughs-for-your-apps/)

The class comes with a set of **pre-built animations** that are automatically applied to the subviews of each page. This set can be  easily substituted with your custom animations.

BWWT is essentially defined by 2 classes:
**BWWalkthroughViewController** is the Master (or Container). It shows the walkthrough and contains UI elements that are shared among all the Pages (like UIButtons and UIPageControl).

**BWWalkthroughPageViewController** defines every single Page that is going to be displayed with the walkthrough inside the Master.

## What it's not?
BWWT is not a copy-paste-and-it-just-works class and it is not a fixed walkthrough template. If you need a simple no-configuration walkthrough, BWWT is not the right choice.

## Installation
> Note: There is a known issue with IBOutlets and Carthage that prevents Outlets from working correctly. 
> I see something similar reported for other [projects](https://github.com/xmartlabs/Eureka/issues/295) too. 
> My suggestion is to follow the manual installation instructions, as it is just matter of drag and drop 2 files in your project. 
> I know you cannot update the library automatically going that route... but IBOutlets are needed for a project like BWWalkthrough. 

### With CocoaPods

BWWalkthrough is available through [CocoaPods](http://cocoapods.org). To install
it, simply add the following line to your Podfile:

```ruby
pod ""BWWalkthrough""
```

### With Carthage

Include this line into your `Cartfile`:

```ruby
github ""ariok/BWWalkthrough""
```

Run carthage update to build the framework and drag the built BWWalkthrough.framework into your Xcode project.

### With Swift Package Manager
``` swift
// swift-tools-version:5.0	
import PackageDescription
	
let package = Package(
name: ""YourTestProject"",
platforms: [
    .iOS(.v10),
],
dependencies: [
    .package(url: ""https://github.com/ariok/BWWalkthrough/.git"", from: ""4.0.1"")
],
targets: [
    .target(name: ""YourTestProject"", dependencies: [""BWWalkthrough""])
]
)
```
And then import wherever needed: ```import BWWalkthrough```
	
#### Adding it to an existent iOS Project via Swift Package Manager
	
1. Using Xcode 11 go to File > Swift Packages > Add Package Dependency
2. Paste the project URL: https://github.com/ariok/BWWalkthrough
3. Click on next and select the project target
	
If you have doubts, please, check the following links:
	
[How to use](https://developer.apple.com/videos/play/wwdc2019/408/)
	
[Creating Swift Packages](https://developer.apple.com/videos/play/wwdc2019/410/)
	
After successfully retrieved the package and added it to your project, just import `BWWalkthrough` and you can get the full benefits of it.

### Manually

Include the `BWWalkthrough/BWWalkthroughViewController.swift` and the `BWWalkthrough/BWWalkthroughPageViewController.swift` files into your project.

## How to use it?

#### Define the Master

Add a new controller to the Storyboard and set its class as **BWWalkthroughViewController**. This is the Master controller where every page will be attached.

Here you can add all the elements that have to be visible in all the Pages.

There are 4 prebuilt IBOutlets that you can attach to your elements to obtain some standard behaviours: UIPageControl (**pageControl**), UIButton to close/skip the walkthrough (**closeButton**) and UIButtons to navigate to the next and the previous page (**nextButton**, **prevButton**).
You can take advantage of these IBOutlets just creating your UI elements and connecting them with the outlets of the Master controller.

#### Define the Pages

Add a new controller to the Storyboard and set it has **BWWalkthroughPageViewController**. Define your views as you prefer.

#### Attach Pages to the Master

Here is an example that shows how to create a walkthrough reading data from a dedicated Storyboard:

```swift
// Get view controllers and build the walkthrough
let stb = UIStoryboard(name: ""Walkthrough"", bundle: nil)
let walkthrough = stb.instantiateViewControllerWithIdentifier(“Master”) as BWWalkthroughViewController
let page_one = stb.instantiateViewControllerWithIdentifier(“page1”) as UIViewController
let page_two = stb.instantiateViewControllerWithIdentifier(“page2”) as UIViewController
let page_three = stb.instantiateViewControllerWithIdentifier(“page3”) as UIViewController

// Attach the pages to the master
walkthrough.delegate = self
walkthrough.add(viewController:page_one)
walkthrough.add(viewController:page_two)
walkthrough.add(viewController:page_three)
```

## Prebuilt Animations
You can add animations without writing a line of code. You just implement a new Page with its subviews and set an animation style using the runtime argument {Key: **animationType**, type: String} via IB. The BWWalkthrough animates your views depending on the selected animation style.

At the moment (WIP!) the possible value for animationsType are:
**Linear**, **Curve**, **Zoom** and **InOut**
The speed of the animation on the X and Y axes **must** be modified using the runtime argument {key: **speed** type:CGPoint}, while the runtime argument {key: **speedVariance** type: CGPoint} adds a speed variation to the the subviews of the page depending on the hierarchy position.

**Example**
Let’s say that we have defined these runtime arguments for one of the Pages:

- animationType: ""Linear""
- speed: {0,1}
- speedVariance: {0,2}

The subviews of the Page will perform a linear animation adding speed to the upfront elements depending on speedVariance.
So if we have 3 subviews, the speed of each view will be:

- view 0 {0,1+2}
- view 1 {0,1+2+2}
- view 2 {0,1+2+2+2}

creating the ~~infamous~~ parallax effect.

### Exclude Views from automatic animations
You might need to avoid animations for some specific subviews.To stop those views to be part of the automatic BWWalkthrough animations you can just specify a list of views’ tags that you don’t want to animate. The Inspectable property `staticTags` (available from version ~> 0.6) accepts a `String` where you can list these tags separated by comma (“1,3,9”). The views indicated by those tags are now excluded from the automatic animations.

## Custom Animations
Each page of the walkthrough receives information about its normalized offset position implementing the protocol **BWWalkthroughPage**, so you can extend the prebuilt animations adding your super-custom-shiny-woah™ animations depending on this value (here is a simple example)
```swift
func walkthroughDidScroll(position: CGFloat, offset: CGFloat) {
    var tr = CATransform3DIdentity
    tr.m34 = -1/500.0
    titleLabel?.layer.transform = CATransform3DRotate(tr, CGFloat(M_PI)*2 * (1.0 - offset), 1, 1, 1)
}
```

## Delegate
The **BWWalkthroughViewControllerDelegate** protocol defines some useful methods that you can implement to get more control over the Walkthrough flow.
```swift
@objc protocol BWWalkthroughViewControllerDelegate {
        @objc optional func walkthroughCloseButtonPressed()
        @objc optional func walkthroughNextButtonPressed()
        @objc optional func walkthroughPrevButtonPressed()
        @objc optional func walkthroughPageDidChange(pageNumber:Int)
}
```
",,2014-09-18T13:29:20Z,2021-02-07T14:50:57Z,14,9,2763,65,"('ariok', 68), ('Yari @bitwaker', 7), ('apiejh', 4), ('TomThorpe', 4), ('wircho', 3), ('gabrielPeart', 2), ('willeeklund', 2), ('yoichitgy', 2), ('Adrian Schoenig', 1), ('colemancda', 1), ('Gianmaria Dal Maistro', 1), ('Hervé Heurtault de Lammerville', 1), ('Unknown', 1), ('kumapo', 1)",6,2,
ringlelai/HSDcDesingPatternCourse,HSDc's Design Pattern Course,"# HSDcDesingPatternCourse
1. 本專案內含完整的 C#.NET 程式碼與 UML Model 檔。
2. HSDc 未來所提供的開源文件，均會於 [FB 社團－軟體設計鮮思維](https://www.facebook.com/groups/softthinking/ ""FB 社團－軟體設計鮮思維"")公布。
3. 關於 C#.NET 程式碼的結構部分說明，請參考－http://www.kenming.idv.tw/opensource_hsdc-design-patterns_for-free

# System Requirement
1. This demo is writing by Visual Studio Community 2015, if you want to view, debug or run this sample, please download Visual Studio Community 2015.
2. (optional) [EA UML Viewer](http://www.sparxsystems.com.au/products/ea/trial.html ""EA UML Viewer"")。
 
# How to run this Sample?
1. Download or clone this repository.
2. Use Visual Studio Community to open the ""Design Patterns Demo Solution.sln"" solution file on ""Source Code"" directory.
3. Run the WebMVC Project.
4. Enjoy it!

# Model file
This sample contain all 23 design pattern's example and structure, and you could find the ""Design Pattern.eap"" in the ""Model"" directory.
You could open this model file by using ""Sparx System Enterprise Architect"".
",,2015-11-17T12:34:50Z,2015-12-22T07:42:33Z,16,10,12,10,"('ringlelai', 45), ('chang Justin', 10), ('rexlucien', 9), ('Bill Lin', 8), ('y2468101216', 8), ('BillLin', 7), ('wanzi', 5), ('Roger-Chen-KMI', 4), ('JustinChangTW', 4), ('Ted', 3), ('singoboy', 1), ('kenming', 1), ('paul0907', 1), ('Roger Chen', 1), ('pinkyTseng', 1), ('tedchwang', 1)",6,5,
qbittorrent/qBittorrent,qBittorrent BitTorrent client,"qBittorrent - A BitTorrent client in Qt
------------------------------------------

[![GitHub Actions CI Status](https://github.com/qbittorrent/qBittorrent/actions/workflows/ci_ubuntu.yaml/badge.svg)](https://github.com/qbittorrent/qBittorrent/actions)
[![Coverity Status](https://scan.coverity.com/projects/5494/badge.svg)](https://scan.coverity.com/projects/5494)
********************************
### Description:
qBittorrent is a bittorrent client programmed in C++ / Qt that uses
libtorrent (sometimes called libtorrent-rasterbar) by Arvid Norberg.

It aims to be a good alternative to all other bittorrent clients
out there. qBittorrent is fast, stable and provides unicode
support as well as many features.

The free [IP to Country Lite database](https://db-ip.com/db/download/ip-to-country-lite) by [DB-IP](https://db-ip.com/) is used for resolving the countries of peers. The database is licensed under the [Creative Commons Attribution 4.0 International License](https://creativecommons.org/licenses/by/4.0/).

### Installation:

Refer to the [INSTALL](INSTALL) file.

### Public key:
Starting from v3.3.4 all source tarballs and binaries are signed.
The key currently used is 4096R/[5B7CC9A2](https://pgp.mit.edu/pks/lookup?op=get&search=0x6E4A2D025B7CC9A2) with fingerprint `D8F3DA77AAC6741053599C136E4A2D025B7CC9A2`.
You can also download it from [here](https://github.com/qbittorrent/qBittorrent/raw/master/5B7CC9A2.asc).
**PREVIOUSLY** the following key was used to sign the v3.3.4 source tarballs and v3.3.4 Windows installer **only**: 4096R/[520EC6F6](https://pgp.mit.edu/pks/lookup?op=get&search=0xA1ACCAE4520EC6F6) with fingerprint `F4A5FD201B117B1C2AB590E2A1ACCAE4520EC6F6`.

### Misc:
For more information please visit:
https://www.qbittorrent.org

or our wiki here:
https://wiki.qbittorrent.org

Use the forum for troubleshooting before reporting bugs:
https://forum.qbittorrent.org

Please report any bug (or feature request) to:
https://bugs.qbittorrent.org

Official IRC channel:
[#qbittorrent on irc.libera.chat](ircs://irc.libera.chat:6697/qbittorrent)

------------------------------------------
sledgehammer999 \
","'bittorrent', 'bittorrent-client', 'c-plus-plus', 'crossplatform', 'torrent', 'torrent-client'",2012-02-04T09:37:46Z,2024-06-18T14:18:18Z,369,317,25728,416,"('Christophe Dumez', 4175), ('Chocobo1', 2908), ('sledgehammer999', 2195), ('glassez', 1178), ('Piccirello', 200), ('zeule', 180), ('pmzqla', 172), ('ngosang', 163), ('Gelmir', 129), ('buinsky', 108), ('thalieht', 97), ('jagannatharjun', 71), ('thalieht', 67), ('FranciscoPombal', 66), ('sorokin', 64), ('cdumez', 54), ('xavier2k6', 47), ('Arnaud Demaiziere', 39), ('Christophe Dumez', 38), ('NotTsunami', 24), ('magao', 22), ('Kolcha', 20), ('DoumanAsh', 18), ('dzmat', 18), ('an0n666', 15), ('summer', 13), ('john-peterson', 12), ('adem4ik', 12), ('LocalSpook', 12), ('bertyhell', 12), ('onto', 11), ('seprode', 10), ('brvphoenix', 10), ('silverqx', 10), ('botanegg', 9), ('vit9696', 9), ('ADTC', 9), ('Yez Ezey', 9), ('luis-pereira', 9), ('Noctem', 8), ('Nowshed H. Imran', 8), ('unitmatrix', 7), ('An0n', 7), ('ishanarora', 7), ('naikel', 7), ('schnurlos', 7), ('vlakoff', 7), ('alfrix', 6), ('brvphoenix', 6), ('ngaro', 6), ('HanabishiRecca', 6), ('fbriere', 6), ('BouRock', 6), ('AbeniMatteo', 6), ('zywo', 5), ('Driim', 5), ('Tilka', 5), ('dependabotbot', 5), ('zzandland', 5), ('okeatime', 5), ('KingLucius', 5), ('BrunoReX', 5), ('starius', 5), ('paolo-sz', 4), ('maboroshin', 4), ('luzpaz', 4), ('airium', 4), ('Driim', 4), ('jleclanche', 4), ('Brian Kendall', 4), ('fightingdreamer', 4), ('Harekiet', 4), ('Stephen Dawkins', 4), ('RockyTDR', 4), ('fusioneer-GitHub', 4), ('vit9696', 3), ('tgregerson', 3), ('yurivict', 3), ('ireallylikeher', 3), ('scootergrisen', 3), ('nl6720', 3), ('bovirus', 3), ('a-sum-duma', 3), ('Tester798', 3), ('LazyBui', 3), ('kasper93', 3), ('heirecka', 3), ('surfernsk', 3), ('da2x', 3), ('Christian Kandeler', 3), ('benhutchins', 3), ('OpenSpaghettiSauce', 3), ('alderz', 3), ('birdie-github', 3), ('diger', 2), ('jNullj', 2), ('lbilli', 2), ('netswap', 2), ('nonew-star', 2), ('OpenGG', 2), ('dartraiden', 2), ('dance', 2), ('arvidn', 2), ('arvidn', 2), ('a1346054', 2), ('crackwitz', 2), ('racam', 2), ('takiz', 2), ('tostercx', 2), ('tristanleboss', 2), ('j1warren', 2), ('zhuangzi926', 2), ('btdigg', 2), ('Bartuzen', 2), ('mayli', 2), ('khw15', 2), ('Falcosc', 2), ('Fisiu', 2), ('jerrymakesjelly', 2), ('lgbaldoni', 2), ('bryanroscoe', 2), ('Andrea', 2), ('An0n', 2), ('Fale', 2), ('comradekingu', 2), ('Felipe Barriga Richards', 2), ('Goshik92', 2), ('hugok79', 2), ('Ivanov Juriy', 2), ('jesec', 2), ('janka102', 2), ('LordNyriox', 2), ('wowzaman12', 2), ('Zach Bacon', 2), ('DouiKo', 2), ('ntfreak', 2), ('Shraymonks', 2), ('rwasef1830', 2), ('eszlari', 2), ('PeterDaveHello', 2), ('ppolewicz', 2), ('PredatorIWD', 2), ('ManiMatter', 2), ('fmatthew5876', 2), ('MarcDrieu', 2), ('maxrd2', 2), ('a-raccoon', 1), ('yurikoles', 1), ('proninyaroslav', 1), ('Xegor', 1), ('WillDaSilva', 1), ('Vort', 1), ('VlaDexa', 1), ('VladimirSinenko', 1), ('zzag', 1), ('veeti', 1), ('Mazino-Urek', 1), ('oprypin', 1), ('alxpl', 1), ('an0n666', 1), ('avivmu', 1), ('axet', 1), ('bob23450', 1), ('borouhin', 1), ('botmtl', 1), ('cayenne17', 1), ('ccerrillo', 1), ('constantined', 1), ('d3fault', 1), ('d47081', 1), ('devastatorius', 1), ('OctopusET', 1), ('Omar-Abdul-Azeez', 1), ('pktiuk', 1), ('pinotree', 1), ('Prince Gupta', 1), ('ROBERTO', 1), ('RequiDev', 1), ('roope242', 1), ('SagePtr', 1), ('Sakib-Abrar', 1), ('thesamesam', 1), ('ATGardner', 1), ('Nikolay Korotysh', 1), ('SeigneurSerpent', 1), ('Sentox6', 1), ('shaneallgeier', 1), ('5idereal', 1), ('Simone', 1), ('Sophist-UK', 1), ('17jiangz1', 1), ('SF73', 1), ('lavoiesl', 1), ('TheNicker', 1), ('Stocy', 1), ('atesca09', 1), ('trim21', 1), ('UnDifferential', 1), ('UnSleep', 1), ('pieniacy', 1), ('qbittorrentfan', 1), ('rcarpa', 1), ('regs01', 1), ('rusu-afanasie', 1), ('sheeit', 1), ('shitcod3r', 1), ('skvenders', 1), ('slrslr', 1), ('slrslr', 1), ('smigii', 1), ('sotiris-bos', 1), ('stalkerok', 1), ('tearfur', 1), ('tehcneko', 1), ('thoradia', 1), ('tjjh89017', 1), ('treysis', 1), ('ttys3', 1), ('itsnotv', 1), ('wevsty', 1), ('silviucc', 1), ('xkrstudio', 1), ('xnoreq', 1), ('IcaroGMC', 1), ('Στέφανος Αντάρης', 1), ('iDolmatov', 1), ('nanamicat', 1), ('cherinyy', 1), ('djt3', 1), ('doadin', 1), ('dsimakov', 1), ('ducalex', 1), ('dyumin', 1), ('huglovefan', 1), ('erikssm', 1), ('rig8f', 1), ('foxi69', 1), ('funkydude', 1), ('gdim47', 1), ('gxcreator', 1), ('hannsen', 1), ('horgan', 1), ('iomezk', 1), ('itlezy', 1), ('jan.karberg', 1), ('kevtechxx', 1), ('knackebrot', 1), ('kraleksandr', 1), ('leigh123linux', 1), ('lojack5', 1), ('loligans', 1), ('masux', 1), ('meequz', 1), ('milahu', 1), ('murlakatamenka', 1), ('mxtsdev', 1), ('nmariusp', 1), ('CoryG89', 1), ('Couchy', 1), ('CzBiX', 1), ('darksom', 1), ('dsemi', 1), ('dpeukert', 1), ('itsdani', 1), ('solarfl4re', 1), ('davidxuang', 1), ('valiukasd', 1), ('syphyr', 1), ('shemanaev', 1), ('denizdogan', 1), ('nakarotori', 1), ('divinehawk', 1), ('d-s-x', 1), ('daimor', 1), ('dmitry1100', 1), ('dm-vodopyanov', 1), ('DoumanAsh', 1), ('Driim', 1), ('EdwardLinux', 1), ('onlined', 1), ('eli-schwartz', 1), ('marianielias', 1), ('emilmgeorge', 1), ('Ernesto Castellotti', 1), ('Evengard', 1), ('AceLewis', 1), ('Administrator account', 1), ('AgentConDier', 1), ('alessandrosimonelli', 1), ('Unknow0059', 1), ('MrStukov', 1), ('noraj', 1), ('Jamim', 1), ('allanlaal', 1), ('Amanuense-del-diavolo', 1), ('karimodm', 1), ('andrewpros', 1), ('aitrenkin', 1), ('bershanskiy', 1), ('Anton-Latukha', 1), ('netjunki', 1), ('bilelmoussaoui', 1), ('Biswa96', 1), ('Blackspirits', 1), ('briankendall', 1), ('BurningMop', 1), ('MaddTheSane', 1), ('cbodley', 1), ('chrishirst', 1), ('kikz0rsk', 1), ('c4181', 1), ('ClemPera', 1), ('Coool', 1), ('PeskyPotato', 1), ('starsunyzl', 1), ('likol', 1), ('LoneDev6', 1), ('LoopsGod', 1), ('llaera', 1), ('LosikiS', 1), ('Lukas Greib', 1), ('mr-cn', 1), ('ntfshard', 1), ('mj-p', 1), ('masux', 1), ('MartinKing01', 1), ('Mataniko', 1), ('MaticBabnik', 1), ('Matthaiks', 1), ('mayankasthana', 1), ('Medvedishce', 1), ('mkopec', 1), ('bud-mo', 1), ('midhunvnadh', 1), ('mikelei8291', 1), ('Mikhail Varantsou', 1), ('quiple', 1), ('Mutoso', 1), ('Naglis Jonaitis', 1), ('Nathan Lewis', 1), ('nicolasfella', 1), ('fabricionaweb', 1), ('qwerty12', 1), ('Felipefpl', 1), ('cabo40', 1), ('FozzeY', 1), ('HamletDuFromage', 1), ('shford', 1), ('FliessendWasser', 1), ('HiFiPhile', 1), ('BanzaiMan', 1), ('Hyperz', 1), ('barhom', 1), ('loskutov', 1), ('jcarr', 1), ('Jay-716', 1), ('JayRet', 1), ('winneon', 1), ('jconnop', 1), ('JimmyAx', 1), ('JonatanWick', 1), ('jmabuin', 1), ('jsayol', 1), ('JuanjiJG', 1), ('MarongHappy', 1), ('ojura', 1), ('jozsefsallai', 1), ('kevincox', 1), ('kristof-mattei', 1)",223,195,
kunny/blog_samples,Sample projects provided on blog article,"# Blog samples [![Build Status](https://travis-ci.org/kunny/blog_samples.svg?branch=master)](https://travis-ci.org/kunny/blog_samples)


블로그 [커니의 안드로이드 이야기](http://androidhuman.com)에 게재되는 포스트에서 사용한 예제를 제공합니다.

## 예제 프로젝트를 다운로드 하려면?
### git을 사용하여 전체 저장소 다운로드

`Github` 애플리케이션을 사용거나, 터미널에서 다음 명령어를 사용하면 전체 저장소를 다운로드 할 수 있습니다.

    $ git clone https://github.com/kunny/blog_samples


### 개별 프로젝트 다운로드

[파이썬 스크립트](https://raw.githubusercontent.com/kunny/blog_samples/master/Android/get_project.py)를 사용하면 일부 프로젝트만 선택하여 다운로드 할 수 있습니다. 스크립트 사용을 위해 미리 설치되어 있어야 하는 구성요소는 다음과 같습니다.

- Python 2.7.5 이상
- Subversion

#### 다운로드 가능한 프로젝트 조회

`python get_project.py` 를 실행하면 스크립트 사용 방법과 함께 다운로드 가능한 프로젝트 정보가 표시됩니다.

	$ python get_project.py

	Usage : python get_project.py [projectName ...]
	Example :
	$ python get_project.py HelloWorld // Download one project
	$ python get_project.py HelloWorld StudioTesting // Download multiple project

	Available projects :

	Name                           Post URL
	-----------------------------------------------------------
	HelloWorld                     None
	NavigationDrawerExample_Studio http://androidhuman.com/524
	AndroidStudioLibApp            http://androidhuman.com/530
	StudioTesting                  http://androidhuman.com/536
	SigningWithStudio              http://androidhuman.com/544
	BasicFragments                 http://androidhuman.com/546
	BasicFragments_withActionItem  http://androidhuman.com/547
	BasicFragments_PersistState    http://androidhuman.com/549

#### 프로젝트 다운로드

원하는 프로젝트를 한 개 혹은 여러 개 동시에 다운로드 할 수 있습니다. 한 개의 프로젝트를 다운로드하려면 다음과 같이 프로젝트 이름을 인자로 적어주면 됩니다.

    $ python get_project.py HelloWorld

여러 프로젝트를 동시에 다운로드 하려는 경우, 인자에 프로젝트 이름들을 연달아 입력하면 됩니다.  
아래는 `HelloWorld` 예제와 `BasicFragments` 예제를 다운로드 하는 예를 보여줍니다.

    $ python get_project.py HelloWorld BasicFragments



",,2013-05-22T01:33:24Z,2020-11-25T21:59:01Z,1,1,64,15,"('kunny', 80)",0,0,
junzis/the-1090mhz-riddle,The book about decoding Mode-S and ADS-B data,"The 1090 Megahertz Riddle
==========================

This is the working repository of the book ""The 1090 Megahertz Riddle: A Guide to Decoding Mode S and ADS-B Signals"".

Visit the web version of the book online at: [mode-s.org](http://mode-s.org)

The second edition of this book is published by TU Delft OPEN Publishing as an open access book, under [CC BY-NC-SA-4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/) license. You can find the publisher’s version of the book at: https://doi.org/10.34641/mg.11

---

## Synopsis

In the last twenty years, aircraft surveillance has moved from controller-based interrogation to automatic broadcast. The Automatic Dependent Surveillance-Broadcast (ADS-B) is the most common method for aircraft to report their state information like identity, position, and speed. Like other Mode S communications, ADS-B makes use of the 1090 megahertz transponder to transmit data. The protocol for ADS-B is open, and low-cost receivers can easily be used to intercept its signals. Many recent air transportation studies have benefited from this open data source. However, the current literature does not offer a systematic exploration of Mode S and ADS-B data, nor does it offer an in-depth explanation of the decoding process.

This book tackles this missing area in the literature. It offers researchers, engineers, students, and enthusiasts a clear guide to understanding and making use of open ADS-B and Mode S data. The first part of this book presents the knowledge required to get started with decoding these signals. It includes background information on primary radar, secondary radar, Mode A/C, Mode S, and ADS-B, as well as the hardware and software setups necessary to gather radio signals. After that, the 17 core chapters of the book investigate the details of all types of ADS-B signals and commonly used Mode S signals. Throughout these chapters, examples and sample Python code are used extensively to explain and demonstrate the decoding process. Finally, the last chapter of the book offers a summary and a brief overview of research topics that go beyond the decoding of these signals.


## Cite this book

```
@book{sun1090mhz,
    author = {Sun, Junzi}, 
    title = {The 1090 Megahertz Riddle: A Guide to Decoding Mode S and ADS-B Signals},
    publisher = {TU Delft OPEN Publishing},
    year = 2021,
    edition = 2,
    isbn = {978-94-6366-402-8},
    doi = {10.34641/mg.11}
}
```


## Table of content

```
Chapter 1 Introduction
  Section 1.1 Background: The ""death ray"" that saves lives
  Section 1.2 The primary radar
  Section 1.3 The secondary radar
  Section 1.4 Mode S
  Section 1.5 ADS-B
  Section 1.6 Other Mode S services
  Section 1.7 Summary

Chapter 2 Quick Start: Hardware and Software to Receive Mode S Signals
  Section 2.1 Range
  Section 2.2 Antenna
  Section 2.3 Receiver
  Section 2.4 Software tools

Chapter 3 ADS-B Basics
  Section 3.1 Message structure
  Section 3.2 Capability
  Section 3.3 ICAO address
  Section 3.4 ADS-B message types
  Section 3.5 Example of ADS-B message structure
  Section 3.6 Availability and transmission rate
  Section 3.7 ADS-B versions

Chapter 4 Aircraft identification and category
  Section 4.1 Identification (call sign)
  Section 4.2 Wake vortex category
  Section 4.3 Decoding example

Chapter 5 Airborne position
  Section 5.1 An over-simplified example
  Section 5.2 Compact position reporting
  Section 5.3 Globally unambiguous position decoding
  Section 5.4 Locally unambiguous position decoding
  Section 5.5 Altitude decoding
  Section 5.6 Verification of decoded positions

Chapter 6 Surface position
  Section 6.1 Movement
  Section 6.2 Ground track
  Section 6.3 Position
  Section 6.4 Decoding example

Chapter 7 Airborne velocity
  Section 7.1 Vertical rate
  Section 7.2 GNSS and barometric altitudes difference
  Section 7.3 Sub-type 1 and 2: Ground speed decoding
  Section 7.4 Sub-type 3 and 4: Airspeed decoding

Chapter 8 Aircraft operation status
  Section 8.1 Version 0
  Section 8.2 Version 1
  Section 8.3 Version 2

Chapter 9 Uncertainties in ADS-B
  Section 9.1 Terminology
  Section 9.2 Version 0
  Section 9.3 Version 1
  Section 9.4 Version 2

Chapter 10 Error control in ADS-B
  Section 10.1 CRC error control
  Section 10.2 ADS-B parity

Chapter 11 Basics of Mode S services
  Section 11.1 Mode S message structures
  Section 11.2 Parity
  Section 11.3 ICAO address recovery
  Section 11.4 Two's complement coding

Chapter 12 All-call reply

Chapter 13 Surveillance replies
  Section 13.1 Message structure
  Section 13.2 Altitude code
  Section 13.3 Identity code

Chapter 14 Airborne collision avoidance system
  Section 14.1 Background
  Section 14.2 ACAS with Mode C transponders
  Section 14.3 ACAS with Mode S transponders
  Section 14.4 ACAS coordination interrogation
  Section 14.5 ACAS coordination reply

Chapter 15 Comm-B
  Section 15.1 Structure
  Section 15.2 BDS

Chapter 16 Mode S elementary surveillance
  Section 16.1 Data link capability report (BDS 1,0)
  Section 16.2 Common usage GICB capability report (BDS 1,7)
  Section 16.3 Aircraft identification (BDS 2,0)
  Section 16.4 ACAS active resolution advisory (BDS 3,0)

Chapter 17 Mode S enhanced surveillance
  Section 17.1 Selected vertical intention (BDS 4,0)
  Section 17.2 Track and turn report (BDS 5,0)
  Section 17.3 Heading and speed report (BDS 6,0)

Chapter 18 Mode S meteorological services
  Section 18.1 Meteorological routine air report (BDS 4,4)
  Section 18.2 Meteorological hazard report (BDS 4,5)

Chapter 19 Inferencing of BDS codes
  Section 19.1 BDS codes identification logics
  Section 19.2 Identification of BSD 5,0 and 6,0
  Section 19.3 Decoding examples

Chapter 20 Summary and beyond
  Section 20.1 Summary
  Section 20.2 Crowd-sourced networks
  Section 20.3 Additional data
  Section 20.4 Congestion
  Section 20.5 The Future of Mode S and ADS-B

```","'ads-b', 'aircraft', 'decoding', 'mode-s'",2015-03-16T19:23:13Z,2024-02-28T19:37:06Z,20,18,102,17,"('junzis', 152), ('dforsi', 9), ('Junzi Sun', 9), ('espinielli', 6), ('adeprice', 4), ('agnivade', 3), ('pfr223', 2), ('carroux', 1), ('verdie-g', 1), ('HV', 1), ('fangruipei', 1), ('mpetroff', 1), ('micknudsen', 1), ('guenthersebastian', 1), ('chtitux', 1), ('iwbnwif', 1), ('q-wertz', 1), ('tedder', 1), ('yanghsu', 1), ('acebrianjuan', 1)",13,12,
mdenil/dropout,A theano implementation of Hinton's dropout.,"Theano implementation of dropout.  See: http://arxiv.org/abs/1207.0580

Run with:

     ./mlp.py dropout

for dropout, or 

    ./mlp.py backprop

for regular backprop with no dropout.

Use:

    ./plot_results.sh results.png

to visualize the results.

Based on code from:
- http://deeplearning.net/tutorial/mlp.html
- http://deeplearning.net/tutorial/logreg.html

Use the data here to make the units of the results comparable to Hinton's paper:
- http://www.cs.ox.ac.uk/people/misha.denil/hidden/mnist_batches.npz

",,2012-07-21T00:45:44Z,2014-07-08T03:32:52Z,2,2,144,16,"('mdenil', 23), ('ChenglongChen', 2)",0,0,
heroku/heroku-buildpack-nodejs,Heroku's buildpack for Node.js applications.,"# Heroku Buildpack for Node.js

![nodejs](https://cloud.githubusercontent.com/assets/51578/13712672/efdf2a40-e792-11e5-82ef-492478cbc0dc.png)

This is the official [Heroku buildpack](http://devcenter.heroku.com/articles/buildpacks) for Node.js apps.

[![CI](https://github.com/heroku/heroku-buildpack-nodejs/actions/workflows/ci.yml/badge.svg)](https://github.com/heroku/heroku-buildpack-nodejs/actions/workflows/ci.yml)

## Documentation

For more information about using this Node.js buildpack on Heroku, see these Dev Center articles:

- [Heroku Node.js Support](https://devcenter.heroku.com/articles/nodejs-support)
- [Getting Started with Node.js on Heroku](https://devcenter.heroku.com/articles/nodejs)
- [Troubleshooting Node.js Deploys](https://devcenter.heroku.com/articles/troubleshooting-node-deploys)

For more general information about buildpacks on Heroku:

- [Buildpacks](https://devcenter.heroku.com/articles/buildpacks)
- [Buildpack API](https://devcenter.heroku.com/articles/buildpack-api)

## Using the Heroku Node.js buildpack

It's suggested that you use the latest version of the release buildpack. You can set it using the `heroku-cli`.

```sh
heroku buildpacks:set heroku/nodejs
```

Your builds will always used the latest published release of the buildpack.

If you need to use the git url, you can use the `latest` tag to make sure you always have the latest release. **The `main` branch will always have the latest buildpack updates, but it does not correspond with a numbered release.**

```sh
heroku buildpacks:set https://github.com/heroku/heroku-buildpack-nodejs#latest -a my-app
```

## Locking to a buildpack version

Even though it's suggested to use the latest release, you may want to lock dependencies - including buildpacks - to a specific version.

First, find the version you want from
[the list of buildpack versions](https://github.com/heroku/heroku-buildpack-nodejs/tags).
Then, specify that version with `buildpacks:set`:

```
heroku buildpacks:set https://github.com/heroku/heroku-buildpack-nodejs#v176 -a my-app
```

### Chain Node with multiple buildpacks

This buildpack automatically exports node, npm, and any node_modules binaries
into the `$PATH` for easy use in subsequent buildpacks.

## Feedback

Having trouble? Dig it? Feature request?

- [help.heroku.com](https://help.heroku.com/)
- [GitHub issues](https://github.com/heroku/heroku-buildpack-nodejs/issues)

## Development

### Prerequisites

For local development, you may need the following tools:

- [Docker](https://hub.docker.com/search?type=edition&offering=community)
- [Go 1.14](https://golang.org/doc/install#install)
- [upx](https://upx.github.io/)

### Deploying an app with a fork or branch

To make changes to this buildpack, fork it on GitHub.
Push up changes to your fork, then create a new Heroku app to test it,
or configure an existing app to use your buildpack:

```
# Create a new Heroku app that uses your buildpack
heroku create --buildpack 

# Configure an existing Heroku app to use your buildpack
heroku buildpacks:set 

# You can also use a git branch!
heroku buildpacks:set #your-branch
```

### Downloading Plugins

In order to download the latest plugins that have been released, run the following:

```
plugin/download.sh v$VERSION
```

Make sure the version is in the format `v#`, ie. `v7`.

## Tests

The buildpack tests use [Docker](https://www.docker.com/) to simulate
Heroku's stacks.

To run the test suite:

```
make test
```

Or to just test a specific stack:

```
make heroku-20-build
make heroku-22-build
```

The tests are run via the vendored
[shunit2](https://github.com/kward/shunit2)
test framework.

### Debugging

To display the logged build outputs to assist with debugging, use the ""echo"" and ""cat"" commands. For example:

```sh
test() {
  local log_file var

  var=""testtest""
  log_file=$(mktemp)
  echo ""this is the log file"" > ""$log_file""
  echo ""test log file"" >> ""$log_file""

  # use `echo` and `cat` for printing variables and reading files respectively
  echo $var
  cat $log_file

  # some cases when debugging is necessary
  assertEquals ""$var"" ""testtest""
  assertFileContains ""test log file"" ""$log_file""
}
```

Running the test above would produce:

```log
testtest
this is the log file
test log file
```

The test output writes to `$STD_OUT`, so you can use `cat $STD_OUT` to read output.
","'buildpack', 'heroku', 'heroku-languages', 'nodejs'",2011-05-18T17:00:45Z,2024-06-18T12:10:43Z,64,57,1297,126,"('hunterloftis', 308), ('Danielle Adams', 173), ('jmorrell', 170), ('zeke', 151), ('ddollar', 146), ('lillianzhang331', 134), ('joshwlewis', 131), ('danielleadams', 111), ('heroku-linguistbot', 67), ('colincasey', 66), ('Danielle Adams', 39), ('dependabotbot', 37), ('edmorley', 29), ('Jeremy Morrell', 21), ('github-actionsbot', 13), ('dzuelke', 7), ('hone', 5), ('schneems', 5), ('mattgraham', 4), ('geoffharcourt', 3), ('Lyric Hupp', 3), ('josegonzalez', 3), ('jkutner', 3), ('brandonchinn178', 2), ('sonicdoe', 2), ('Lyric', 2), ('rykov', 2), ('OliverJAsh', 2), ('Androbin', 2), ('btubbs', 2), ('rwonly', 1), ('aeby', 1), ('naveensrinivasan', 1), ('michaelherold', 1), ('Michael A. Lavina', 1), ('mlynch', 1), ('mgomes', 1), ('mmcgrana', 1), ('lackac', 1), ('ryanbrainard', 1), ('svennam92', 1), ('timshadel', 1), ('fiznool', 1), ('tt', 1), ('techtonik', 1), ('jkap', 1), ('zunda', 1), ('afeld', 1), ('BigAlUK', 1), ('bbodenmiller', 1), ('bmaupin', 1), ('zbuc', 1), ('cleishm', 1), ('djmarcin', 1), ('davidjrice', 1), ('fjorgemota', 1), ('jacobwgillespie', 1), ('kuba-kubula', 1), ('jbutz', 1), ('Jeff Dickey', 1), ('johanholmerin', 1), ('jclem', 1), ('kwlockwo', 1), ('kevinjalbert', 1)",34,32,
ionic-team/ionic2-app-base,"Template for starting Ionic 2 apps, used by the Ionic CLI","### :point_right: This app base repo has moved to the [ionic-team/starters](https://github.com/ionic-team/starters/tree/master/ionic-angular/base) repo! :point_left:
",,2015-10-29T19:22:25Z,2018-02-07T11:24:22Z,31,28,220,57,"('tlancina', 97), ('brandyscarney', 56), ('danbucholtz', 55), ('jgw96', 53), ('adamdbradley', 44), ('imhoffd', 18), ('mhartington', 18), ('jbavari', 12), ('mlynch', 11), ('danielsogl', 6), ('Justin Willis', 4), ('jthoms1', 4), ('iignatov', 3), ('ramonornela', 3), ('kensodemann', 3), ('5amfung', 2), ('PatrickJS', 2), ('nunoarruda', 2), ('manucorporat', 2), ('dylanvdmerwe', 2), ('root-io', 2), ('DanailMinchev', 2), ('amuramoto', 1), ('chrisgriffith', 1), ('gianpaj', 1), ('ihadeed', 1), ('janpio', 1), ('matheo', 1), ('oddcb', 1), ('petercn', 1), ('pwespi', 1)",9,8,
nightseas/pi_mods,Expansion modules for Raspberry Pi B+ & 2B.,,,2015-05-06T18:09:03Z,2016-10-19T12:15:48Z,1,1,22,4,"('nightseas', 15)",0,0,
andrewrk/clashos,multiplayer arcade game for bare metal Raspberry Pi 3 B+,"# ClashOS

A work-in-progress multiplayer arcade game that runs directly on the
Raspberry Pi 3 B+ hardware, written entirely in [Zig](https://ziglang.org/).

## Current Status

""Hello World"" OS using the MiniUART. ~Tested and working on real hardware.~
It has regressed on real hardware, and I haven't fixed it yet.

## Building

```
zig build
```

## Testing

### QEMU

```
zig build qemu
```

#### Debugging with GDB

```
zig build qemu -Dgdb
```

In another terminal:

```
gdb zig-cache/clashos-dbg -ex 'target remote localhost:1234'
```

### Sending a New Kernel Image via Serial

While the Raspberry Pi is running, you can use

```
zig build upload -Dtty=/dev/ttyUSB0
```

If using QEMU, use `zig build qemu -Dpty` and note the tty path.
In another terminal window, `cat` the tty path.
In yet another terminal window, you can use the `zig build upload`
command above, with the tty path provided by QEMU.
This is compatible with using GDB with QEMU, just make sure to pass
the `-Dgdb` to both `zig build` commands.

### Actual Hardware

1. Mount an sdcard with a single FAT32 partition.
2. Copy `boot/*` to `/path/to/sdcard/*`.
3. `zig build`
4. Copy `clashos.bin` to `/path/to/sdcard/kernel7.img`.

For further changes repeat steps 3 and 4.

## Roadmap

 * Interface with the file system
 * Get rid of dependency on binutils objcopy
 * Interface with the video driver
 * Get a simple joystick and button and use GPIO
 * Sound (should it be the analog or over HDMI)?
 * Make the game
 * Build arcade cabinets

## Documentation

### EZSync 012 USB Cable

 * Black: Pin 6, Ground
 * Yellow: Pin 8, BCM 14, TXD / Transmit
 * Orange: Pin 10, BCM 15, RXD / Receive

### How to view the serial data

Where `/dev/ttyUSB0` is the device that represents the serial-to-USB cable:

```
sudo screen /dev/ttyUSB0 115200 cs8
```

### Memory Layout

```
0x0000000 (  0 MiB) - boot entry point
0x0001000           - shortExceptionHandlerAt0x1000 function
0x0001100           - kernelMainAt0x1100 function
0x8000000 (128 MiB) - top of kernel stack, and bootloader_main function
0x8800000 (136 MiB) - top of bootloader stack
```
","'aarch64', 'kernel', 'raspberry-pi', 'zig'",2017-02-03T22:09:14Z,2020-01-26T14:50:06Z,2,2,207,15,"('andrewrk', 60), ('markfirmware', 4)",0,0,
grantmd/node-adsb,An ADS-B decoder in node,"# Node ADS-B

This is an [ADS-B](http://en.wikipedia.org/wiki/Automatic_dependent_surveillance-broadcast) decoder in node. When partnered with some source of ADS-B data, it will decode packets and... DO THINGS.

[![Build Status](https://travis-ci.org/grantmd/node-adsb.png)](https://travis-ci.org/grantmd/node-adsb)

## How to use

You will need a signal source. A good source is either [rtl-sdr](http://sdr.osmocom.org/trac/wiki/rtl-sdr) or [dump1090](https://github.com/antirez/dump1090/), if you have the hardware to receive live signals. Otherwise, it will be possible to either listen to an ADS-B aggregator or local files.

Command line args can be discovered with:

    node adsb.js -h

## Credits

Most of this is a direct port of antirez's dump1090: https://github.com/antirez/dump1090/

Why re-implement it? Mostly because I wanted to do more with the data once it was decoded, and I'm much more comfortable doing that with node than in C.",,2013-03-28T04:01:06Z,2013-04-01T19:12:21Z,1,1,23,4,"('grantmd', 53)",0,0,
jsfiddle/jsfiddle-users,"Discussions, issues and docs for JSFiddle.","## Links

- [Documentation](https://docs.jsfiddle.net) (Usage, API, etc)

## Common questions:

**Question:** I have a rogue fiddle in my listing that crashes the browser when loading, how can I fix this?

> **Answer:** It's possible to add `?disable_render=true` to the end of URL's where fiddles are listed - this will disable the results tab, allowing you to remove the rouge fiddle.
",,2010-09-23T09:34:18Z,2024-05-15T14:27:12Z,10,7,313,35,"('zalun', 75), ('oskarkrawczyk', 30), ('James Cooke', 14), ('dylanpyle', 1), ('kini', 1), ('ExplodingCabbage', 1), ('Oliver Caldwell', 1), ('Oskar Krawczyk', 1), ('gitter-badger', 1), ('sohnryang', 1)",7,5,
Signatum/SXT,Lack's Stock eXTension ,,,2015-06-18T05:11:59Z,2017-03-27T21:28:02Z,5,5,11,6,"('Signatum', 112), ('NathanKell', 15), ('Kerbas-ad-astra', 8), ('PhineasFreak', 1), ('Randazzo', 1)",2,2,
ziad-saab/decodemtl,Repo for DecodeMTL's site,"# [DecodeMTL](http://www.decodemtl.com)
## Montreal's Leading Coding Bootcamp

The code for the landing page is open through this repository, and the page is hosted on [Github Pages](https://pages.github.com/).

Technologies used:
* html5
* css3 inspired from [BEM](https://bem.info/)
* javascript/jquery
* [sass](http://sass-lang.com/)
* [bourbon](http://bourbon.io/)
* [zurb foundation](http://foundation.zurb.com/)
* [webpack](http://webpack.github.io/)
* [grunt](http://gruntjs.com/)
* [jekyll](http://jekyllrb.com/)


Built using the awesome [Cloud9 IDE](http://c9.io/)
",,2014-09-16T19:27:43Z,2016-11-25T16:07:07Z,7,6,4,5,"('ziad-saab', 134), ('kevkhoury', 61), ('noratop', 10), ('spasiu', 7), ('nyanofthemoon', 2), ('dcodrin', 1), ('Kevin Khoury', 1)",2,1,
Rayhane-mamah/Tacotron-2,DeepMind's Tacotron-2 Tensorflow implementation,"# Tacotron-2:
Tensorflow implementation of DeepMind's Tacotron-2. A deep neural network architecture described in this paper: [Natural TTS synthesis by conditioning Wavenet on MEL spectogram predictions](https://arxiv.org/pdf/1712.05884.pdf)

This Repository contains additional improvements and attempts over the paper, we thus propose **paper_hparams.py** file which holds the exact hyperparameters to reproduce the paper results without any additional extras.

Suggested **hparams.py** file which is default in use, contains the hyperparameters with extras that proved to provide better results in most cases. Feel free to toy with the parameters as needed.

DIFFERENCES WILL BE HIGHLIGHTED IN DOCUMENTATION SHORTLY.


# Repository Structure:
	Tacotron-2
	├── datasets
	├── en_UK		(0)
	│   └── by_book
	│       └── female
	├── en_US		(0)
	│   └── by_book
	│       ├── female
	│       └── male
	├── LJSpeech-1.1	(0)
	│   └── wavs
	├── logs-Tacotron	(2)
	│   ├── eval_-dir
	│   │ 	├── plots
	│ 	│ 	└── wavs
	│   ├── mel-spectrograms
	│   ├── plots
	│   ├── taco_pretrained
	│   ├── metas
	│   └── wavs
	├── logs-Wavenet	(4)
	│   ├── eval-dir
	│   │ 	├── plots
	│ 	│ 	└── wavs
	│   ├── plots
	│   ├── wave_pretrained
	│   ├── metas
	│   └── wavs
	├── logs-Tacotron-2	( * )
	│   ├── eval-dir
	│   │ 	├── plots
	│ 	│ 	└── wavs
	│   ├── plots
	│   ├── taco_pretrained
	│   ├── wave_pretrained
	│   ├── metas
	│   └── wavs
	├── papers
	├── tacotron
	│   ├── models
	│   └── utils
	├── tacotron_output	(3)
	│   ├── eval
	│   ├── gta
	│   ├── logs-eval
	│   │   ├── plots
	│   │   └── wavs
	│   └── natural
	├── wavenet_output	(5)
	│   ├── plots
	│   └── wavs
	├── training_data	(1)
	│   ├── audio
	│   ├── linear
	│	└── mels
	└── wavenet_vocoder
		└── models


The previous tree shows the current state of the repository (separate training, one step at a time).

- Step **(0)**: Get your dataset, here I have set the examples of **Ljspeech**, **en_US** and **en_UK** (from **M-AILABS**).
- Step **(1)**: Preprocess your data. This will give you the **training_data** folder.
- Step **(2)**: Train your Tacotron model. Yields the **logs-Tacotron** folder.
- Step **(3)**: Synthesize/Evaluate the Tacotron model. Gives the **tacotron_output** folder.
- Step **(4)**: Train your Wavenet model. Yield the **logs-Wavenet** folder.
- Step **(5)**: Synthesize audio using the Wavenet model. Gives the **wavenet_output** folder.

- Note: Steps 2, 3, and 4 can be made with a simple run for both Tacotron and WaveNet (Tacotron-2, step ( * )).


Note:
- **Our preprocessing only supports Ljspeech and Ljspeech-like datasets (M-AILABS speech data)!** If running on datasets stored differently, you will probably need to make your own preprocessing script.
- In the previous tree, files **were not represented** and **max depth was set to 3** for simplicity.
- If you run training of both **models at the same time**, repository structure will be different.

# Pretrained model and Samples:
Pre-trained models and audio samples will be added at a later date. You can however check some primary insights of the model performance (at early stages of training) [here](https://github.com/Rayhane-mamah/Tacotron-2/issues/4#issuecomment-378741465). THIS IS VERY OUTDATED, I WILL UPDATE THIS SOON

# Model Architecture:

  


The model described by the authors can be divided in two parts:
- Spectrogram prediction network
- Wavenet vocoder

To have an in-depth exploration of the model architecture, training procedure and preprocessing logic, refer to [our wiki](https://github.com/Rayhane-mamah/Tacotron-2/wiki)

# Current state:

To have an overview of our advance on this project, please refer to [this discussion](https://github.com/Rayhane-mamah/Tacotron-2/issues/4)

since the two parts of the global model are trained separately, we can start by training the feature prediction model to use his predictions later during the wavenet training.

# How to start
- **Machine Setup:**

First, you need to have python 3 installed along with [Tensorflow](https://www.tensorflow.org/install/).

Next, you need to install some Linux dependencies to ensure audio libraries work properly:

> apt-get install -y libasound-dev portaudio19-dev libportaudio2 libportaudiocpp0 ffmpeg libav-tools

Finally, you can install the requirements. If you are an Anaconda user: (else replace **pip** with **pip3** and **python** with **python3**)

> pip install -r requirements.txt

- **Docker:**

Alternatively, one can build the **docker image** to ensure everything is setup automatically and use the project inside the docker containers.
**Dockerfile is insider ""docker"" folder**

docker image can be built with:

> docker build -t tacotron-2_image docker/

Then containers are runnable with:

> docker run -i --name new_container tacotron-2_image

Please report any issues with the Docker usage with our models, I'll get to it. Thanks!

# Dataset:
We tested the code above on the [ljspeech dataset](https://keithito.com/LJ-Speech-Dataset/), which has almost 24 hours of labeled single actress voice recording. (further info on the dataset are available in the README file when you download it)

We are also running current tests on the [new M-AILABS speech dataset](http://www.m-ailabs.bayern/en/the-mailabs-speech-dataset/) which contains more than 700h of speech (more than 80 Gb of data) for more than 10 languages.

After **downloading** the dataset, **extract** the compressed file, and **place the folder inside the cloned repository.**

# Hparams setting:
Before proceeding, you must pick the hyperparameters that suit best your needs. While it is possible to change the hyper parameters from command line during preprocessing/training, I still recommend making the changes once and for all on the **hparams.py** file directly.

To pick optimal fft parameters, I have made a **griffin_lim_synthesis_tool** notebook that you can use to invert real extracted mel/linear spectrograms and choose how good your preprocessing is. All other options are well explained in the **hparams.py** and have meaningful names so that you can try multiple things with them.

AWAIT DOCUMENTATION ON HPARAMS SHORTLY!!

# Preprocessing
Before running the following steps, please make sure you are inside **Tacotron-2 folder**

> cd Tacotron-2

Preprocessing can then be started using: 

> python preprocess.py

dataset can be chosen using the **--dataset** argument. If using M-AILABS dataset, you need to provide the **language, voice, reader, merge_books and book arguments** for your custom need. Default is **Ljspeech**.

Example M-AILABS:

> python preprocess.py --dataset='M-AILABS' --language='en_US' --voice='female' --reader='mary_ann' --merge_books=False --book='northandsouth'

or if you want to use all books for a single speaker:

> python preprocess.py --dataset='M-AILABS' --language='en_US' --voice='female' --reader='mary_ann' --merge_books=True

This should take no longer than a **few minutes.**

# Training:
To **train both models** sequentially (one after the other):

> python train.py --model='Tacotron-2'


Feature prediction model can **separately** be **trained** using:

> python train.py --model='Tacotron'

checkpoints will be made each **5000 steps** and stored under **logs-Tacotron folder.**

Naturally, **training the wavenet separately** is done by:

> python train.py --model='WaveNet'

logs will be stored inside **logs-Wavenet**.

**Note:**
- If model argument is not provided, training will default to Tacotron-2 model training. (both models)
- Please refer to train arguments under [train.py](https://github.com/Rayhane-mamah/Tacotron-2/blob/master/train.py) for a set of options you can use.
- It is now possible to make wavenet preprocessing alone using **wavenet_proprocess.py**.

# Synthesis
To **synthesize audio** in an **End-to-End** (text to audio) manner (both models at work):

> python synthesize.py --model='Tacotron-2'

For the spectrogram prediction network (separately), there are **three types** of mel spectrograms synthesis:

- **Evaluation** (synthesis on custom sentences). This is what we'll usually use after having a full end to end model.

> python synthesize.py --model='Tacotron'

- **Natural synthesis** (let the model make predictions alone by feeding last decoder output to the next time step).

> python synthesize.py --model='Tacotron' --mode='synthesis' --GTA=False


- **Ground Truth Aligned synthesis** (DEFAULT: the model is assisted by true labels in a teacher forcing manner). This synthesis method is used when predicting mel spectrograms used to train the wavenet vocoder. (yields better results as stated in the paper)

> python synthesize.py --model='Tacotron' --mode='synthesis' --GTA=True

Synthesizing the **waveforms** conditionned on previously synthesized Mel-spectrograms (separately) can be done with:

> python synthesize.py --model='WaveNet'

**Note:**
- If model argument is not provided, synthesis will default to Tacotron-2 model synthesis. (End-to-End TTS)
- Please refer to synthesis arguments under [synthesize.py](https://github.com/Rayhane-mamah/Tacotron-2/blob/master/synthesize.py) for a set of options you can use.


# References and Resources:
- [Natural TTS synthesis by conditioning Wavenet on MEL spectogram predictions](https://arxiv.org/pdf/1712.05884.pdf)
- [Original tacotron paper](https://arxiv.org/pdf/1703.10135.pdf)
- [Attention-Based Models for Speech Recognition](https://arxiv.org/pdf/1506.07503.pdf)
- [Wavenet: A generative model for raw audio](https://arxiv.org/pdf/1609.03499.pdf)
- [Fast Wavenet](https://arxiv.org/pdf/1611.09482.pdf)
- [r9y9/wavenet_vocoder](https://github.com/r9y9/wavenet_vocoder)
- [keithito/tacotron](https://github.com/keithito/tacotron)

","'paper', 'python', 'speech-synthesis', 'tacotron', 'tensorflow', 'text-to-speech', 'wavenet'",2017-12-20T16:08:13Z,2023-07-06T21:18:43Z,15,14,2245,132,"('Rayhane-mamah', 125), ('h-meru', 5), ('Yeongtae', 5), ('r9y9', 4), ('ArloZ', 3), ('jyegerlehner', 3), ('begeekmyfriend', 2), ('scribblemaniac', 2), ('alex73', 1), ('Ilya Shutov', 1), ('m-toman', 1), ('metaln37', 1), ('nikitos9000', 1), ('dsmiller', 1), ('neverjoe', 1)",7,6,
ccoenraets/phonegap-s3-upload,upload,"## Uploading Pictures from PhoneGap to S3 ##

Sample application showing how to upload pictures from a PhoneGap app to Amazon S3.

More info: http://coenraets.org",,2013-09-16T16:28:21Z,2015-05-21T19:03:04Z,1,1,36,5,"('ccoenraets', 4)",0,0,
FabrizioBrancati/BFKit,BFKit is a collection of useful classes and categories to develop Apps faster.,"

[![Build Status](https://travis-ci.com/FabrizioBrancati/BFKit.svg?branch=master)](https://travis-ci.com/FabrizioBrancati/BFKit)
[![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)
[![Version](https://img.shields.io/cocoapods/v/BFKit.svg?style=flat)][CocoaDocs]
[![Language](https://img.shields.io/badge/language-Objective--C-blue.svg)](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/ProgrammingWithObjectiveC/Introduction/Introduction.html)
[![Platform](https://img.shields.io/badge/platform-iOS-ffc713.svg)][CocoaDocs]
[![License](https://img.shields.io/badge/license-MIT-lightgrey.svg)](https://github.com/FabrizioBrancati/BFKit/blob/master/LICENSE)

---


    Swift Version &bull;
    What does it do &bull;
    Language support &bull;
    Requirements &bull;
    Communication &bull;
    Contributing &bull;
    Installing and Usage &bull;
    Documentation &bull;
    Changelog &bull;
    Demo &bull;
    Todo &bull;
    Author &bull;
    License


---

Swift Version 
=============

If you are looking for Swift version check it out here: **[BFKit Swift](https://github.com/FabrizioBrancati/BFKit-Swift)**

What does it do
===============

BFKit is a collection of useful classes to **develop Apps faster**.
For example you can use every iOS font with just an enum!
It also adds some useful method to some classes like:

### BFKit:
- [BFApp](http://cocoadocs.org/docsets/BFKit/1.10./Classes/BFApp.html)
- [BFButton](http://cocoadocs.org/docsets/BFKit/1.10./Classes/BFButton.html)
- BFDataStructures ([List](http://cocoadocs.org/docsets/BFKit/1.10./Classes/List.html) - [Queue](http://cocoadocs.org/docsets/BFKit/1.10./Classes/Queue.html) - [Stack](http://cocoadocs.org/docsets/BFKit/1.10./Classes/Stack.html))
- [BFLog](http://cocoadocs.org/docsets/BFKit/1.10./Classes/BFLog.html)
- [BFPassword](http://cocoadocs.org/docsets/BFKit/1.10./Classes/BFPassword.html)
- [BFSystemSound](http://cocoadocs.org/docsets/BFKit/1.10./Classes/BFSystemSound.html)
- [BFTouchID](http://cocoadocs.org/docsets/BFKit/1.10./Classes/BFTouchID.html) (iOS 8 or later)

### Foundation:
- [NSArray](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSArray+BFKit.html)
- [NSDate](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSDate+BFKit.html)
- [NSDictionary](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSDictionary+BFKit.html)
- [NSFileManager](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSFileManager+BFKit.html)
- [NSMutableArray](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSMutableArray+BFKit.html)
- [NSMutableDictionary](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSMutableDictionary+BFKit.html)
- [NSNumber](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSNumber+BFKit.html)
- [NSObject](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSObject+BFKit.html)
- [NSProcessInfo](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSProcessInfo+BFKit.html)
- [NSString](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSString+BFKit.html)
- [NSThread](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSThread+BFKit.html)

### UIKit:
- [UIBarButtonItem](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIBarButtonItem+BFKit.html)
- [UIButton](http://cocoadocs.org/docsets/BFKit/1.10./Categories/NSArray+BFKit.html)
- [UIColor](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIColor+BFKit.html)
- [UIDevice](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIDevice+BFKit.html)
- [UIFont](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIFont+BFKit.html)
- [UIImage](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIImage+BFKit.html)
- [UIImageView](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIImageView+BFKit.html)
- [UILabel](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UILabel+BFKit.html)
- [UINavigationBar](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UINavigationBar+BFKit.html)
- [UIScreen](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIScreen+BFKit.html)
- [UIScrollView](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIScrollView+BFKit.html)
- [UITableView](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UITableView+BFKit.html)
- [UITextField](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UITextField+BFKit.html)
- [UITextView](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UITextView+BFKit.html)
- [UIToolbar](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIToolbar+BFKit.html)
- [UIView](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIView+BFKit.html)
- [UIWindow](http://cocoadocs.org/docsets/BFKit/1.10./Categories/UIWindow+BFKit.html)

Language support
================

- Brazilian Portuguese (pt-Br)
- English (en)
- Indonesian (id)
- Italian (it)
- Russian (ru)
- Simplified Chinese (zh-Hans)
- Swedish (sv)
- Traditional Chinese (zh-Hant)
- Traditional Turkish (tr-TR)
- Ukrainian (uk)
- Vietnamese (vi)

Requirements
============

- iOS SDK **7.0** if you copy the Framework files (Source folder)
- iOS SDK **8.0** if you use it as a Framework
- **Xcode 7.0** or later
- **ARC**

Communication
=============

- If you need help, use Stack Overflow.
- If you found a bug, open an issue.
- If you have a feature request, open an issue.
- If you want to contribute, see [Contributing](https://github.com/FabrizioBrancati/BFKit#contributing-octocat) section.

Contributing :octocat:
======================

See [CONTRIBUTING.md](https://github.com/FabrizioBrancati/BFKit/blob/master/.github/CONTRIBUTING.md) file.

Installing and Usage
====================

### iOS 7 or later compatible
#### Manual
- Copy the **Source** folder to the project
- Add the following frameworks to the project:
  - **UIKit**
  - **Foundation**
  - **CoreImage**
  - **CoreGraphics**
  - **QuartzCore**
  - **Accelerate**
  - **AudioToolbox** (if you want to use **BFSystemSound** class)
  - **LocalAuthentication** (if you want to use **BFTouchID** class, and set it as weak if your App runs on iOS 7)
- Import BFKit with ```#import ""BFKit.h""```
- Enjoy!

#### CocoaPods
##### Pro version
- ```pod 'BFKit'```
- Import the Framework with ```import BFKit```
- Enjoy!

##### Newbie version
- Create a **Podfile** in your **project directory**
- Write:

    ```ruby
    platform :ios, '7.0'
    xcodeproj 'Project.xcodeproj'

    pod 'BFKit'
    ```
- Change **""Project""**  with your **real project name**
- Open **Terminal**, go to **project directory** and type: ```pod install```
- Import the Framework with ```#import ```
- Enjoy!

### iOS 8 or later compatible
#### Manual
- Open the **BFKit** folder and build the Framework from the project
- Import BFKit.framework into your project
- Add the following frameworks to the project:
  - **UIKit**
  - **Foundation**
  - **CoreImage**
  - **CoreGraphics**
  - **QuartzCore**
  - **Accelerate**
  - **AudioToolbox** (if you want to use **BFSystemSound** class)
  - **LocalAuthentication** (if you want to use **BFTouchID** class, and set it as weak if your App runs on iOS 7)
- Import the Framework with ```import BFKit```
- Enjoy!

#### Carthage
##### Pro version
- ```github ""FabrizioBrancati/BFKit""```
- Import the Framework with ```import BFKit```
- Enjoy!

##### Newbie version
- Create a **Cartfile** in your **project directory**
- Write:

    ```ruby
    github ""FabrizioBrancati/BFKit""
    ```
- Open **Terminal**, go to **project directory** and type: ```carthage update```
- **Include the created Framework** in your project
- **Add Build Phase** with the following contents:

    ```sh
    /usr/local/bin/carthage copy-frameworks
    ```

    Add the paths to the Queuer framework under **Input Files**

    ```sh
    $(SRCROOT)/Carthage/Build/iOS/BFKit.framework
    ```

    Add the paths to the copied frameworks to the **Output Files**

    ```sh
    $(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/BFKit.framework
    ```

    This script works around an [App Store submission bug](http://www.openradar.me/radar?id=6409498411401216) triggered by universal binaries and ensures that necessary bitcode-related files are copied when archiving
- **(Optional)** Add Build Phase with the following contents

    ```sh
    /usr/local/bin/carthage outdated --xcode-warnings
    ```

    To automatically warn you when one of your dependencies is out of date
- Import the Framework with ```import BFKit```
- Enjoy!

Documentation
=============

### [CocoaDocs] - 100% Documented

Changelog
=========

To see what has changed in recent version of BFKit, see the **[CHANGELOG](https://github.com/FabrizioBrancati/BFKit/blob/master/CHANGELOG.md)**

Demo
====

Open and run the BFKitDemo project in Xcode and see BFKit in action!

Todo
====

- :heavy_minus_sign: Create great tests and add Coveralls badge
- :heavy_minus_sign: Add support to macOS, watchOS and tvOS
- :heavy_minus_sign: Create a new Example App that shows all the functionalities of BFKit
- :heavy_check_mark: Add Carthage support
- :heavy_check_mark: Add to CocoaPods
- :heavy_check_mark: Create a great documentation

Author
======

**Fabrizio Brancati**

[![Website](https://img.shields.io/badge/website-fabriziobrancati.com-4fb0c8.svg)](http://www.fabriziobrancati.com)

[![Email](https://img.shields.io/badge/email-fabrizio.brancati%40gmail.com-green.svg)](mailto:fabrizio.brancati@gmail.com)

License
=======

BFKit is available under the MIT license. See the **[LICENSE](https://github.com/FabrizioBrancati/BFKit/blob/master/LICENSE)** file for more info.

[CocoaDocs]: http://cocoadocs.org/docsets/BFKit/1.10./
","'bfkit', 'carthage', 'cocoapods', 'foundation', 'ios', 'objective-c', 'objective-c-extensions', 'uikit', 'xcode'",2014-11-15T16:45:40Z,2020-05-25T10:33:18Z,19,16,798,46,"('FabrizioBrancati', 306), ('fabiosoft', 10), ('AshrafAbuBakr', 6), ('AshrafAbuBakr', 6), ('emersonbroga', 5), ('Vanson', 5), ('zxm9988', 5), ('emptyway', 4), ('insanoid', 3), ('pontus-andersson', 2), ('bontangster', 1), ('davidjelliott', 1), ('duc-ios', 1), ('gabrielPeart', 1), ('Oksana Kovalchuk', 1), ('ramonvic', 1), ('hiralin', 1), ('durul', 1), ('liushixiang', 1)",9,7,
GeekyAnts/NativeBase,"Mobile-first, accessible components for React Native & Web to build consistent UI across Android, iOS and Web.","# 

[![Financial Contributors on Open Collective](https://opencollective.com/NativeBase/all/badge.svg?label=financial+contributors)](https://opencollective.com/NativeBase)
[![](https://img.shields.io/discord/785491682719301643?label=Discord&logo=discord&logoColor=%237289DA)](https://discord.com/invite/TSgCw2UPmb)
[![npm next package](https://img.shields.io/npm/v/native-base/next.svg)](https://www.npmjs.com/package/native-base)
[![npm latest package](https://img.shields.io/npm/v/native-base/latest.svg)](https://www.npmjs.com/package/native-base)
[![npm downloads](https://img.shields.io/npm/dm/native-base.svg)](https://npm-stat.com/charts.html?package=native-base)
[![license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/GeekyAnts/NativeBase/blob/master/LICENSE)
[![Follow on Twitter](https://img.shields.io/twitter/follow/nativebase.svg?label=follow+NativeBase)](https://twitter.com/nativebase)
[![Github Stars](https://img.shields.io/github/stars/GeekyAnts/NativeBase)](https://img.shields.io/github/stars/GeekyAnts/NativeBase)

**IMPORTANT MESSAGE** — If you are starting a new project with NativeBase, we recommend using [gluestack-ui](https://ui.gluestack.io/) instead. [Know More](https://nativebase.io/blogs/road-ahead-with-gluestack-ui).

## NativeBase is a mobile-first, accessible component library for building a consistent design system across android, iOS & web.

[**Website**](https://nativebase.io/)

[**Documentation**](https://docs.nativebase.io/)

## Table of Contents

1. [Introduction](#1-introduction)
2. [Motivation](#2-motivation)
3. [Features](#3-features)
4. [Dependencies](#4-dependencies)
5. [Installation & Setup](#5-installation)
6. [Components](#6-components)
7. [Examples](#7-examples)
8. [KitchenSink App](#8-kitchensink-app)
9. [Tech Stack](#9-tech-stack)
10. [Compatible Versions](#10-compatible-versions)
11. [Contributors](#11-contributors)
12. [Changelog](#12-changelog)
13. [Community](#13-community)
14. [License](#14-license)

## 1. Introduction?

[NativeBase](https://nativebase.io/) is a mobile-first, component library for React & React Native. Version 3.0 ships with complete ARIA integration, support for utility props and nearly 40 components that are consistent across Android, iOS and Web. Fast-track your dev process with NativeBase 3.0.

**Recommended by [Awesome React Native](https://github.com/jondot/awesome-react-native)**

> NativeBase was added to the list of Frameworks of Awesome React Native and it is used by numerous React lovers across the world.

## 2. Motivation

Building with React Native from scratch is a tedious process with multiple steps such as adding styling, interactions, state management, responsiveness, accessibility, etc. We wanted to build and ship accessible, high-quality apps quickly.


Our inspirations include Material UI, Chakra UI, Ant Design, Braid Design System, Bootstrap, TailwindCSS & Flutter.

## 3. Features

### **Out of the Box Accessibility**

Integrated with React ARIA and React Native ARIA, which provides React hooks. This enables you to build accessible design systems in no time.



### **Supporting Utility Props**

Powered by [Styled System](https://styled-system.com) so you can rapidly build custom UI components with constraint-based utility style props.

### **Rich Component Library**

NativeBase offers around 40 components so you can build seamlessly. It includes button, checkbox, flex, stack and more.

### **Highly Themeable**

Themeability is one of the core elements of NativeBase. You can customise your app theme and component styles to your heart's content.



### **Available for Both Mobile and Web**

NativeBase 3.0 is powered by React Native Web so you can build consistent UIs across Web, Android and iOS.

### **Responsiveness Made Easy**

Instead of manually adding responsiveness, NativeBase 3.0 allows you to provide object and array values to add responsive styles.

### **Now with** **Dark Mode**

Building apps with a dark mode setting just got a whole lot easier. NativeBase is now optimised for light and dark modes.

## 4. Dependencies

React Native, Expo

## 5. Installation

NativeBase is supported in Expo or React Native CLI initiated apps. Web support is made possible by react-native-web.

Refer the [guides](https://docs.nativebase.io/installation) to setup NativeBase in your React app.

## 6. Components

NativeBase 3.0 is a rich component library with nearly 40 components.

- [**Layout**](https://docs.nativebase.io/box)
- [**Forms**](https://docs.nativebase.io/button)
- [**Data Display**](https://docs.nativebase.io/badge)
- [**Feedback**](https://docs.nativebase.io/alert)
- [**Typography**](https://docs.nativebase.io/text)
- [**Overlay** ](https://docs.nativebase.io/alert-dialog)
- [**Disclosure**](https://docs.nativebase.io/action-sheet)
- [**Media & Icons**](https://docs.nativebase.io/avatar)
- [**Transition**](https://docs.nativebase.io/presence-transition)
- [**Other**](https://docs.nativebase.io/fab)

## 7. Examples

[Check out the Todo-List example](https://docs.nativebase.io/todo-list)

## 8. KitchenSink App

[Kitchen Sink](https://kitchensink.nativebase.io/) is a comprehensive demo app showcasing all the NativeBase components in action. It includes buttons, forms, icons, etc.


    
  


## 9. Tech Stack

JavaScript, React Native, Styled System

### Made with :heart: at [GeekyAnts](https://geekyants.com/?utm_source=nb-github&utm_medium=landing+page&utm_campaign=nativebase-github-cta)

NativeBase is an open-source project made by the tech-savvy geeks at GeekyAnts.
GeekyAnts is a group of React Native experts. Do [get in touch with us](https://geekyants.com/hire/?utm_source=nb-github&utm_medium=landing+page&utm_campaign=nativebase-github-hire-cta) for any help with your React Native project. Always happy to help!

## 10. Compatible Versions

| NativeBase                       | React Native                                               |
| -------------------------------- | ---------------------------------------------------------- |
| v0.1.1                           | v0.22 to v0.23                                             |
| v0.2.0 to v0.3.1                 | v0.24 to v0.25                                             |
| v0.4.6 to v0.4.9                 | v0.26.0 - v0.27.1                                          |
| v0.5.0 to v0.5.15                | v0.26.0 - v0.37.0                                          |
| v0.5.16 to v0.5.20               | v0.38.0 - v0.39.0                                          |
| v2.0.0-alpha1 to v2.1.3          | v0.38.0 to v0.43.0                                         |
| v2.1.4 to v2.1.5                 | v0.44.0 to v0.45.0                                         |
| v2.2.0                           | v0.44.0 to v0.45.0                                         |
| v2.2.1                           | v0.46.0 and above                                          |
| v2.3.0 to 2.6.1                  | v0.46.0 and above (does not support React 16.0.0-alpha.13) |
| v2.7.0                           | v0.56.0 and above                                          |
| v3.0.0-next.36 to v3.0.0-next-41 | v0.63.0 and above                                          |
| v3.0.0 to latest                 | v0.63.0 and above                                          |

## 11. Contributors

### Code Contributors

This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].


### Financial Contributors

Become a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/NativeBase/contribute)]

#### Individuals



#### Organizations

Support this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/NativeBase/contribute)]












## 12. Changelog

[Check out the changelog in the official documentation](https://docs.nativebase.io/changelog)

## 13. Community

- [Facebook](https://www.facebook.com/nativebaseio)
- [Twitter](https://twitter.com/nativebase)
- [Discord](https://discord.com/invite/TSgCw2UPmb)
- [Stackoverflow](https://stackoverflow.com/questions/tagged/native-base)
- [Blog](https://nativebase.io/blogs)
- [YouTube](https://www.youtube.com/channel/UCoL_iTwpY07vDs91974z3xA/about)

## 14. License

Licensed under the MIT License, Copyright © 2021 GeekyAnts. See [LICENSE](https://github.com/GeekyAnts/NativeBase/blob/master/LICENSE) for more information.
","'android', 'hacktoberfest', 'ios', 'native-platforms', 'nativebase', 'nextjs', 'react', 'react-native', 'ui-components'",2016-04-15T11:37:23Z,2024-05-27T09:01:36Z,299,220,20067,269,"('surajahmed', 729), ('theankurkedia', 508), ('SupriyaKalghatgi', 426), ('Sankhadeep', 412), ('intergalacticspacehighway', 403), ('rayan1810', 390), ('Ajamuar', 340), ('md-rehman', 306), ('Viraj-10', 277), ('shivrajkumar', 241), ('akhil-ga', 182), ('ankit-tailor', 162), ('himanshu-satija', 122), ('sankhadeeproy007', 117), ('Shivraj', 101), ('Himanshu Satija', 88), ('Sankhadeep Roy', 81), ('mayank-96', 78), ('Vidhi Kataria', 72), ('amars29', 66), ('makkarMeenu', 63), ('Supriya Kalghatgi', 55), ('Shivraj', 54), ('rohits-geekyants', 42), ('Vidhi Kataria', 35), ('Supriya Kalghatgi', 31), ('amars29', 31), ('Meenu Makkar', 29), ('Nishan Bende', 25), ('William Candillon', 23), ('PlabanJr', 22), ('Himanshu', 17), ('Mayank Sunil Pagar', 15), ('ruchi-002', 14), ('dikarel', 14), ('hanykumar', 13), ('Supriya Kalghatgi', 13), ('sahusoft', 13), ('chaitanya-bhagavan', 11), ('gauravprwl14', 11), ('sahusoft', 11), ('Srishti-Sharma', 10), ('sanketsahu', 9), ('Vidhi Kataria', 9), ('Simranjit1080', 9), ('hyunjun19', 9), ('gvarandas', 8), ('Sankhadeep', 8), ('Suvendu Kumar', 8), ('wcandillon', 8), ('himanshu-sahusoft', 8), ('stonecold123', 8), ('flyandi', 7), ('rsmelo92', 7), ('ankit-geekyants', 7), ('cyrus25', 7), ('Viraj Joshi', 6), ('Jasbir23', 6), ('Jan Karres', 6), ('cristianocca', 6), ('aaray', 6), ('AleksandarDev', 6), ('dennisdeng2002', 5), ('darkmantle', 5), ('yeknava', 5), ('madhav23bansal', 5), ('vidhi499', 5), ('Mayank Pagar', 5), ('MaratFM', 5), ('Hany Kumar', 5), ('beausmith', 5), ('taljacobson', 4), ('ruchik02', 4), ('akhil', 4), ('Viraj Ajay Joshi', 4), ('Tiberiu-Alexandru Mihai', 4), ('StevePotter', 4), ('Srishti Sharma', 4), ('Sarhan Aissi', 4), ('Nishan', 4), ('copleykj', 4), ('kagurazakakotori', 4), ('fredmon3', 4), ('BenWildeman', 4), ('alexrussell', 4), ('AaronFriel', 4), ('kbukum', 3), ('dependabotbot', 3), ('RWOverdijk', 3), ('rgabs', 3), ('Paul', 3), ('PaitoAnderson', 3), ('mweibel', 3), ('Mayank Sunil Pagar', 3), ('InJung Chung', 3), ('Hany Kumar', 3), ('gcorreaalves', 3), ('amiosci', 3), ('Adrien ROCHEDY', 3), ('tyrauber', 2), ('TimBroddin', 2), ('Terence Lee', 2), ('Supriya Kalghatgi', 2), ('Supriya', 2), ('smmoosavi', 2), ('robertasg', 2), ('Rishabh Pandey', 2), ('joesonw', 2), ('maxusr', 2), ('MattYoon', 2), ('Vidhi Kataria', 2), ('alexandrtovmach', 2), ('bahadircivelek', 2), ('enagorny', 2), ('mfarhankasmani', 2), ('mihirk', 2), ('suvenduchhatoi', 2), ('alexicum', 2), ('elyalvarado', 2), ('sharathprabhal', 2), ('ammons-qualtrics', 2), ('IntelliJAbhishek', 2), ('Ammon S', 2), ('andersr', 2), ('Andrew Matheny', 2), ('ARKEOLOGIST', 2), ('armanatz', 2), ('arunim2405', 2), ('brianjd', 2), ('virus2016', 2), ('myarete', 2), ('Cristian Gomez', 2), ('danieloprado', 2), ('DH-iTap', 2), ('tvadiep', 2), ('francescopersico', 2), ('geekygil20', 2), ('Jake Taylor', 2), ('monkeywithacupcake', 2), ('josephdburdick', 2), ('coreh', 2), ('Kumar Sanket', 2), ('S-Kaushik', 1), ('shobhitsinghal624', 1), ('Shiv', 1), ('shishircc', 1), ('sebflipper', 1), ('rmtsrc', 1), ('tux-tn', 1), ('Salil999', 1), ('designorant', 1), ('Sui Shum', 1), ('sntran', 1), ('Tom Mahle', 1), ('huutritran', 1), ('Usamaliaquat123', 1), ('VahidBo', 1), ('VnsCode', 1), ('blanvam', 1), ('Vipulbhj', 1), ('hugoram', 1), ('mlecoq', 1), ('aroucha-miguel', 1), ('mortezaalizadeh', 1), ('muratakbal', 1), ('Nasir Sheikh', 1), ('nyablo', 1), ('Nihaal-Aftab', 1), ('powernic', 1), ('Nikos410', 1), ('ngregory-rbi', 1), ('ozanturksever', 1), ('pwoltman', 1), ('patrickgodinho', 1), ('patrick-welab', 1), ('ppoliani', 1), ('preynal', 1), ('rdfito', 1), ('Rishabh Karnad', 1), ('rizalsidikp', 1), ('sakshya73', 1), ('iamadityaaz', 1), ('jono-allen', 1), ('juandav', 1), ('kaykdm', 1), ('MonchiLin', 1), ('lex', 1), ('ltinyho', 1), ('madhav', 1), ('nishikata-seiichi', 1), ('pf-siedler', 1), ('rizzomichaelg', 1), ('tamurayk', 1), ('tasso-evangelista', 1), ('williampaulo', 1), ('causztic', 1), ('yuta.suzuka', 1), ('yuzu441', 1), ('wanxger', 1), ('马士振', 1), ('billnbell', 1), ('William Paulo', 1), ('movibe', 1), ('yduman', 1), ('zjkhiyori', 1), ('yosmanyga', 1), ('fengyouchao', 1), ('Youngtao1999', 1), ('Yura', 1), ('abdelhaksam', 1), ('alex461919', 1), ('alfianwahid', 1), ('apps', 1), ('asimolmez', 1), ('dansokol', 1), ('kyoyadmoon', 1), ('docker', 1), ('fnarbona', 1), ('Gilbishkosma', 1), ('martinezguillaume', 1), ('misterchlee7', 1), ('Chion82', 1), ('cbpetersen', 1), ('confiks', 1), ('swiety85', 1), ('dgarciamuria', 1), ('Daniel Ruf', 1), ('danilvalov', 1), ('moret', 1), ('darron1217', 1), ('davidcozsmith', 1), ('David Wu', 1), ('edinpuzic', 1), ('exneval', 1), ('epavanello', 1), ('manuquentin', 1), ('CeamKrier', 1), ('eric-alcidion', 1), ('ErkanSensei', 1), ('kmcrawford', 1), ('ElegantSoft', 1), ('alexander7161', 1), ('priezz', 1), ('Amine-H', 1), ('Andreas Klein', 1), ('andreimc', 1), ('radarhere', 1), ('Andrew Zhang', 1), ('anmolakhilesh', 1), ('ArmandoAssuncao', 1), ('gutoglup', 1), ('Ayush Bansal', 1), ('benox3', 1), ('bherila', 1), ('Bene Ádám', 1), ('BerndSchrooten', 1), ('bluet', 1), ('brendanyounger', 1), ('brentvatne', 1), ('caphun', 1), ('kbrandwijk', 1), ('iRoachie', 1), ('kherock', 1), ('Lakshaya Maheshwari', 1), ('lcastillo88', 1), ('juslintek', 1), ('Landerson352', 1), ('lucianomlima', 1), ('Maksim Riazanov', 1), ('Marc Woolfson', 1), ('MarceloAlves', 1), ('yosimasu', 1), ('matias-frontend', 1), ('admmasters', 1), ('MattYoon', 1), ('matgentili', 1), ('hexelon', 1), ('Michael Lefkowitz', 1), ('mribbons', 1), ('gaurav1620', 1), ('gor181', 1), ('GregoryEsberci', 1), ('guiguetz', 1), ('codler', 1), ('monodop', 1), ('Haseeb Majid', 1), ('tranduchieu', 1), ('her0e1c1', 1), ('ilya-bmi', 1), ('JABvzla', 1), ('Jacse', 1), ('michalak111', 1), ('jbreuer95', 1), ('jeremyhon', 1), ('jembach', 1), ('Jonatan E. Salas', 1), ('joshbalfour', 1), ('aljourda', 1), ('Kaz Watanabe', 1)",157,128,
ozzi-/JWT4B,JWT Support for Burp ,"![build status](https://api.travis-ci.com/ozzi-/JWT4B.svg?branch=master)
![licence](https://img.shields.io/github/license/mvetsch/JWT4B.svg)
![open issues](https://img.shields.io/github/issues/mvetsch/JWT4B.svg)


# JWT4B
JSON Web Tokens (JWT) support for the Burp Interception Proxy. JWT4B will let you manipulate a JWT on the fly, automate common attacks against JWT and decode it for you in the proxy history. JWT4B automagically detects JWTs in the form of 'Authorization Bearer' headers as well as customizable post body parameters and body content.

![Logo](https://i.imgur.com/SnrC5To.png)

# Screenshots
![Screenshot - Intercept View](https://i.imgur.com/VsbqoNL.png)

![Screenshot - Decode View](https://i.imgur.com/hsBNeE2.png)

![Screenshot - Suite Tab View](https://i.imgur.com/2HGOI27.png)

# Testing
The following url contains links to four pages which simulate a JWT being sent via XHR or as cookie.
 [https://oz-web.com/jwt/](https://oz-web.com/jwt/) 

# Configuration
A config file will be created under ""%user.home%\.JWT4B\config.json"" with the following content:
```
{
  ""resetEditor"": true,
  ""highlightColor"": ""blue"",
  ""interceptComment"": ""Contains a JWT"",
  ""tokenKeywords"": [
    ""id_token"",
    ""ID_TOKEN"",
    ""access_token"",
    ""token""
  ],
  ""cveAttackModePublicKey"": ""MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuNCJ/1Tawe8DUIbQDxjRr+bVSoIdcOjJm5wskbMUjHopTWERzLo65yLPjCVcRudQ8DNJIs3yb+hzxi0b8uyKXK6nYTaxdwtRN61NMgI/ecNYw1A3nMLRJ4KetLCUqCehVV+OavJqwGXb0k4OhJu7VefLD9PxOQxLd/MxJLMTChqYYQWY069oNTB9uRaBRLwcEv3i8uiM3HAdx4di0FZLHN5yAt6Zq7TR53CUDSI74q/AH4zeuo+D/UscVTq2bInfJmN3NdA6XqPdjnu6DtT7VQZif+06sFXgnoieuUaeRE0Jn8ZY72hljToFZmsLUPPhTSzmFTgko4+MGnS29w1rbQIDAQAB"",
  ""cveAttackModePrivateKey"": ""MIIEvwIBADANBgkqhkiG9w0BAQEFAASCBKkwggSlAgEAAoIBAQC40In/VNrB7wNQhtAPGNGv5tVKgh1w6MmbnCyRsxSMeilNYRHMujrnIs+MJVxG51DwM0kizfJv6HPGLRvy7IpcrqdhNrF3C1E3rU0yAj95w1jDUDecwtEngp60sJSoJ6FVX45q8mrAZdvSTg6Em7tV58sP0/E5DEt38zEksxMKGphhBZjTr2g1MH25FoFEvBwS/eLy6IzccB3Hh2LQVksc3nIC3pmrtNHncJQNIjvir8AfjN66j4P9SxxVOrZsid8mY3c10Dpeo92Oe7oO1PtVBmJ/7TqwVeCeiJ65Rp5ETQmfxljvaGWNOgVmawtQ8+FNLOYVOCSjj4wadLb3DWttAgMBAAECggEBALF/J2ngNxEW2loWf/Bf59NGoQakHF56VFZtEakFEvEvykcUuSGkojmmhyqUHyHBu0xWFSGmJfcwizCD1lnir6f/3aVR//LTHbeZa5Bh9FCfOrqqah7WREXr/zyOctdk6F+0HHW+SKRrr0k1yl+1qaABtFaJOR2PH1Qebs5OZjTGXvKtm5H7G4FeNPDjprCKB5vRiWPY5F3sRJOFp8TwkH5qbirgZh0KJiYuJMq9QtzjRHYjzALOSWldpqb8Xzcx7lHZbF8gNv3zeRJRJWTYATq8KVaZ3fs0mv9z37MPRC1AS9v4ylrwXsAviWvn21Q6E1jrxOxZfAhkoA2aLtFMr4kCgYEA68yc8mupFsRCwcfChauAExibU2lCmW1ImcWxGLQR0dVPyaEPlecwKxvdetWs7BPaxqogKppB71gsxXYASUntgwj1f7zXxo4rdSZv20B09eASo+I8qZpfDZWR1oM7HjXR40lWELtQhzD0QDQCUmQtCpVGgyheqPsrQntCeM5LEisCgYEAyKXD93Onevtg6K2GWmnIgCP8+PRvu9kYW+3yhN0BGzmJrVSlD6uw0SAsA7awd54Qs00gGcWoztDm7V+YHDcYy3oOzwip4Yw2S3kUPewupySLm1VrDBMdXVp1sQH/I5DE3B4c5OxgdCmiX+7hLkXBBjpOqbHS+2bsPs9qnO2M5McCgYAhj84G8yvuAaE+05/sRqzECwyQorrH+7YJrQm36mle5G2m1TXSsEU63Yx4n1EtiOXqwOwzJCGeX35/3HvN8qfLrsrCk65ipHmrAv2Ix3PeSzZb/SeFPGOrG07WqXcQpbhqEVYeq4qas20QdlaeQ4PlrbmLkYNnqdhObhzX9QTaYQKBgQDDa9/fpL8cIrWSKV/Ps3PaijKa7sfcd2coMiqgiPfI4lNbhDN3fcsrA2CbBVX+Su8NEzMOptrxA7nGu/JUmL0HgQvnTRLYYE2JWJYEcYJGvGtUkO8/xWY2RCKYkc9Dfn6dvJ57wFV5Dgvdz7V18e47+JIg6NcKkIXL7wxxZ1RwhQKBgQDd4nlMdJue4zA7hO2YGxUqX+ALVY6ikZ/SBOQIDrnI9aixwXYQ3t3Nwjim73/0uiLXLOpO92dBSym7GeSPYqWZhkyQ8C05tDyGvDI5b7bVmD1pxmnhG9sOktrkDVkOsYUnAhRwCgmuExkoeGWPvUt+85cmMpJfHHqbrb5FLqTeXQ==""
}
```
Changing the config requires a reload of the extension or BURP.
If you messed something up, just delete the file, it will be created again with the default values.
Note: If resetEditor is set to false, all options such as the re-singing and alg attack won't be reset for every new request. This might be useful when working in the repeater.

## Building your own version (with Eclipse)
1. Clone repository and create new Eclipse Java Project
2. Rightclick -> Configure -> Convert to Gradle Project (downloading all required libraries)
3. Open Burp -> Extensions -> APIs -> Save interface files -> Copy all files to JWT4B\src\burp
4. Gradle -> build jar
5. Load the JAR in Burp through the Extender Tab -> Extensions -> Add (Good to know: CTRL+Click on a extension to reload it)

# Installation from BApp Store
This extension is available in the [BApp Store](https://portswigger.net/bappstore/f923cbf91698420890354c1d8958fee6).
",,2017-01-27T13:13:24Z,2024-06-17T05:31:10Z,16,14,238,10,"('ozzi-', 181), ('BlindFetch', 30), ('DolphFlynn', 10), ('Oussama Zgheb', 8), ('ahri', 7), ('pajswigger', 5), ('b4dpxl', 4), ('mike-smith-ps', 3), ('Oussama Zgheb', 3), ('mvetsch', 3), ('dstuttard', 2), ('dependabotbot', 2), ('Brainloop-Security', 1), ('Hannah-PortSwigger', 1), ('emtunc', 1), ('virusvfv', 1)",4,4,
dariuszseweryn/RxAndroidBle,An Android Bluetooth Low Energy (BLE) Library with RxJava3 interface,"# RxAndroidBle ![Build Status](https://github.com/dariuszseweryn/rxandroidble/actions/workflows/gradle-actions.yml/badge.svg?branch=master) [![Maven Central](https://img.shields.io/maven-central/v/com.polidea.rxandroidble2/rxandroidble.svg)](http://search.maven.org/#search%7Cgav%7C1%7Cg%3A%22com.polidea.rxandroidble2%22%20AND%20a%3A%22rxandroidble%22)

  <img 
    alt=""Tailored software services including concept, design, development and testing""
    src=""site/RX-Android.png""
    height=""300""
    style=""margin-top: 20px; margin-bottom: 20px;""
  />


## Introduction

RxAndroidBle is a powerful painkiller for Android's Bluetooth Low Energy headaches. It is backed by RxJava, implementing complicated APIs as handy reactive observables. The library does for you:

 * Fancy asynchronous operations support (read, write, notifications)
 * Threading management in order to meet Android contracts
 * Connection and operation error handling

For support head to [StackOverflow #rxandroidble](http://stackoverflow.com/questions/tagged/rxandroidble?sort=active)

## RxAndroidBLE @ Mobile Central Europe 2016
[![RxAndroidBLE @ Mobile Central Europe 2016](https://img.youtube.com/vi/0aKfUGCxUDM/0.jpg)](https://www.youtube.com/watch?v=0aKfUGCxUDM)

## Getting Started

The first step is to include RxAndroidBle into your project.

### Gradle
If you use Gradle to build your project — as a Gradle project implementation dependency:
```groovy
implementation ""com.polidea.rxandroidble3:rxandroidble:1.18.1""
```
or for RxJava 2 based artifact
```groovy
implementation ""com.polidea.rxandroidble2:rxandroidble:1.18.1""
```
### Maven
If you use Maven to build your project — as a Maven project dependency:
```xml

  com.polidea.rxandroidble3
  rxandroidble
  1.18.1
  aar

```
or for RxJava 2 based artifact
```xml

  com.polidea.rxandroidble2
  rxandroidble
  1.18.1
  aar

```

### Snapshot
If your are interested in cutting-edge build you can get a `x.y.z-SNAPSHOT` version of the library.
NOTE: Snapshots are built from the top of the `master` and `develop` branches and a subject to more frequent changes that may break the API and/or change behavior.

To be able to download it you need to add Sonatype Snapshot repository site to your `build.gradle` file:
```groovy
maven { url ""https://oss.sonatype.org/content/repositories/snapshots"" }
```

### Permissions
Android requires additional permissions declared in the manifest for an app to run a BLE scan since API 23 (6.0 / Marshmallow) and perform a BLE connection since API 31 (Android 12). RxAndroidBle provides a minimal set of commonly used bluetooth permissions for you in its `AndroidManifest.xml`. These permissions currently assume scanning is only used when the App is in the foreground, and that the App wants to derive the user's location from BLE signal (on API >= 23). Below are a number of additions you can make to your `AndroidManifext.xml` for your specific use case.

#### If you want to derive the user's location in your App
RxAndroidBle uses the `uses-permission-sdk-23` tag to require location only on APIs >= 23, where it is required for BLE scanning. Additionally, in a future version of RxAndroidBle, these permissions will be restricted to only APIs 23-30. To ensure you can derive the user's location in your App with all API versions, and avoid any issues with merging of permissions when uploading to the Play Store, add the following to your `AndroidManifest.xml`:
```xml




```

#### If you do not want to derive user's location in your App
If you only want to scan for BLE peripherals and do not access location otherwise you can request only the required permissions by adding the following to your `AndroidManifest.xml`:
```xml


```

#### If you want to scan in the background and support APIs 29 & 30
You should add the following to your `AndroidManifest.xml`:
```xml

```
If you want to access the user's location in the background on APIs > 30, remove the `android:maxSdkVersion` attribute.

#### If you want to derive the user's location from BLE scanning in API >= 31

API 31 (Android 12) introduced new Bluetooth permissions. RxAndroidBle uses the `android:usesPermissionFlags=""neverForLocation""` attribute on the `BLUETOOTH_SCAN` permission, which indicates scanning will not be used to derive the user's location, so location permissions are not required. If you need to locate the user with BLE scanning, use this instead, but keep in mind that you will still need `ACCESS_FINE_LOCATION`:
```xml

```

#### If you do not need to connect to peripherals
You can remove the `BLUETOOTH_CONNECT` permission that RxAndroidBle requests in APIs >= 31:
```xml

```

#### Summary of available permissions
##### Scanning
A summary of available runtime permissions used for BLE scanning:

| from API | to API (inclusive) | Acceptable runtime permissions |
|:---:|:---:| --- |
| 18 | 22 | (No runtime permissions needed) |
| 23 | 28 | One of below:- `android.permission.ACCESS_COARSE_LOCATION`- `android.permission.ACCESS_FINE_LOCATION` |
| 29 | 30 | - `android.permission.ACCESS_FINE_LOCATION`- `android.permission.ACCESS_BACKGROUND_LOCATION`\* |
| 31 | current | - `android.permission.BLUETOOTH_SCAN`- `android.permission.ACCESS_FINE_LOCATION`\*\* |

\* Needed if [scan is performed in background](https://developer.android.com/about/versions/10/privacy/changes#app-access-device-location)

\*\* Only needed if you want to obtain user's location with BLE scanning (`BLUETOOTH_SCAN` is not using `neverForLocation` attribute in your App)

##### Connecting
A summary of available runtime permissions used for BLE connections:
| from API | to API (inclusive) | Acceptable runtime permissions |
|:---:|:---:| --- |
| 18 | 30 | (No runtime permissions needed) |
| 31 | current | - `android.permission.BLUETOOTH_CONNECT` |

## Usage
### Obtaining the client
It's your job to maintain single instance of the client. You can use singleton, scoped [Dagger](http://google.github.io/dagger/) component or whatever else you want.

```java
RxBleClient rxBleClient = RxBleClient.create(context);
```

### Turning the bluetooth on / off
The library does _not_ handle managing the state of the BluetoothAdapter.
Direct managing of the state is not recommended as it violates the application user's right to manage the state of their phone. See `Javadoc` of [BluetoothAdapter.enable()](https://developer.android.com/reference/android/bluetooth/BluetoothAdapter.html#enable()) method.
It is the user's responsibility to inform why the application needs Bluetooth to be turned on and for ask the application's user consent.
It is possible to show a native activity for turning the Bluetooth on by calling:
```java
Intent enableBtIntent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE);
int REQUEST_ENABLE_BT = 1;
context.startActivityForResult(enableBtIntent, REQUEST_ENABLE_BT);
```

### Device discovery
Scanning devices in the area is simple as that:

```java
Disposable scanSubscription = rxBleClient.scanBleDevices(
        new ScanSettings.Builder()
            // .setScanMode(ScanSettings.SCAN_MODE_LOW_LATENCY) // change if needed
            // .setCallbackType(ScanSettings.CALLBACK_TYPE_ALL_MATCHES) // change if needed
            .build()
        // add filters if needed
)
    .subscribe(
        scanResult -> {
            // Process scan result here.
        },
        throwable -> {
            // Handle an error here.
        }
    );

// When done, just dispose.
scanSubscription.dispose();
```
For devices with API <21 (before Lollipop) the scan API is emulated to get the same behaviour.

### Observing client state
On Android it is not always trivial to determine if a particular BLE operation has a potential to succeed. e.g. to scan on Android 6.0 the device needs to have a `BluetoothAdapter`, the application needs to have a granted [runtime permission](https://github.com/dariuszseweryn/RxAndroidBle#permissions) for either `ACCESS_COARSE_LOCATION` or `ACCESS_FINE_LOCATION`, additionally `Location Services` need to be turned on.
To be sure that the scan will work only when everything is ready you could use:

```java
Disposable flowDisposable = rxBleClient.observeStateChanges()
    .switchMap(state -> { // switchMap makes sure that if the state will change the rxBleClient.scanBleDevices() will dispose and thus end the scan
        switch (state) {

            case READY:
                // everything should work
                return rxBleClient.scanBleDevices();
            case BLUETOOTH_NOT_AVAILABLE:
                // basically no functionality will work here
            case LOCATION_PERMISSION_NOT_GRANTED:
                // scanning and connecting will not work
            case BLUETOOTH_NOT_ENABLED:
                // scanning and connecting will not work
            case LOCATION_SERVICES_NOT_ENABLED:
                // scanning will not work
            default:
                return Observable.empty();
        }
    })
    .subscribe(
    	rxBleScanResult -> {
    	    // Process scan result here.
    	},
    	throwable -> {
    	    // Handle an error here.
    	}
    );

// When done, just dispose.
flowDisposable.dispose();
```

### Connection
For further BLE interactions the connection is required.

```java
String macAddress = ""AA:BB:CC:DD:EE:FF"";
RxBleDevice device = rxBleClient.getBleDevice(macAddress);

Disposable disposable = device.establishConnection(false) // <-- autoConnect flag
    .subscribe(
        rxBleConnection -> {
            // All GATT operations are done through the rxBleConnection.
        },
        throwable -> {
            // Handle an error here.
        }
    );

// When done... dispose and forget about connection teardown :)
disposable.dispose();
```

#### Auto connect
From BluetoothDevice.connectGatt() Javadoc:
> autoConnect	boolean: Whether to directly connect to the remote device (false) or to automatically connect as soon as the remote device becomes available (true).

Auto connect concept may be misleading at first glance. With the autoconnect flag set to false the connection will end up with an error if a BLE device is not advertising when the `RxBleDevice#establishConnection` method is called. From platform to platform timeout after which the error is emitted differs, but in general it is rather tens of seconds than single seconds (~30 s).

Setting the auto connect flag to true allows you to wait until the BLE device becomes discoverable. The `RxBleConnection` instance won't be emitted until the connection is fully set up. From experience it also handles acquiring wake locks, so it's safe to assume that your Android device will be woken up after the connection has been established - but it is not a documented feature and may change in the future system releases. Unlike the native Android API, if `autoConnect=true` while using this library there will be NO attempts to automatically reconnect if the original connection is lost.

Be careful not to overuse the autoConnect flag. On the other side it has negative impact on the connection initialization speed. Scanning window and interval is lowered as it is optimized for background use and depending on Bluetooth parameters it may (and usually do) take more time to establish the connection.

### Read / write operations
#### Read
```java
device.establishConnection(false)
    .flatMapSingle(rxBleConnection -> rxBleConnection.readCharacteristic(characteristicUUID))
    .subscribe(
        characteristicValue -> {
            // Read characteristic value.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
#### Write
```java
device.establishConnection(false)
    .flatMapSingle(rxBleConnection -> rxBleConnection.writeCharacteristic(characteristicUUID, bytesToWrite))
    .subscribe(
        characteristicValue -> {
            // Characteristic value confirmed.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
#### Multiple reads
```java
device.establishConnection(false)
    .flatMap(rxBleConnection -> Single.zip(
        rxBleConnection.readCharacteristic(firstUUID),
        rxBleConnection.readCharacteristic(secondUUID),
        YourModelCombiningTwoValues::new
    ))
    .subscribe(
        model -> {
            // Process your model.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
#### Long write
```java
device.establishConnection(false)
    .flatMap(rxBleConnection -> rxBleConnection.createNewLongWriteBuilder()
        .setCharacteristicUuid(uuid) // required or the .setCharacteristic()
        // .setCharacteristic() alternative if you have a specific BluetoothGattCharacteristic
        .setBytes(byteArray)
        // .setWriteOperationRetryStrategy(retryStrategy) // if you'd like to retry batch write operations on failure, provide your own retry strategy
        // .setMaxBatchSize(maxBatchSize) // optional -> default 20 or current MTU
        // .setWriteOperationAckStrategy(ackStrategy) // optional to postpone writing next batch
        .build()
    )
    .subscribe(
        byteArray -> {
            // Written data.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
#### Read and write combined

```java
device.establishConnection(false)
    .flatMapSingle(rxBleConnection -> rxBleConnection.readCharacteristic(characteristicUuid)
        .doOnSuccess(bytes -> {
            // Process read data.
        })
        .flatMap(bytes -> rxBleConnection.writeCharacteristic(characteristicUuid, bytesToWrite))
    )
    .subscribe(
        writeBytes -> {
            // Written data.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
### Change notifications
```java
device.establishConnection(false)
    .flatMap(rxBleConnection -> rxBleConnection.setupNotification(characteristicUuid))
    .doOnNext(notificationObservable -> {
        // Notification has been set up
    })
    .flatMap(notificationObservable -> notificationObservable) // <-- Notification has been set up, now observe value changes.
    .subscribe(
        bytes -> {
            // Given characteristic has been changes, here is the value.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
### Observing connection state
If you want to observe changes in device connection state just subscribe like below. On subscription you will receive the most current state instantly.

```java
device.observeConnectionStateChanges()
    .subscribe(
        connectionState -> {
            // Process your way.
        },
        throwable -> {
            // Handle an error here.
        }
    );
```
### Logging
For connection debugging you can use extended logging

```java
RxBleClient.setLogLevel(RxBleLog.DEBUG);
```

By default `RxBleLog` uses logcat to print the messages. You can provide your own logger implementation to forward it to other logging libraries such as Timber.
```java
RxBleLog.setLogger((level, tag, msg) -> Timber.tag(tag).log(level, msg));
```

### Error handling
Every error you may encounter is provided via `onError` callback. Each public method has JavaDoc explaining possible errors.

### Observable behaviour
From different interfaces, you can obtain different `Observable`s which exhibit different behaviours.
There are two types of `Observable`s that you may encounter.
1. Multiple values - i.e. `RxBleClient.scan()`, `RxBleDevice.observeConnectionStateChanges()` and `Observable` emitted by `RxBleConnection.setupNotification()` / `RxBleConnection.setupIndication()`
2. One value — these usually are meant for auto cleanup upon disposing i.e. `setupNotification()` / `setupIndication()` — when you will dispose the notification / indication will be disabled

`RxBleDevice.establishConnection()` is an `Observable` that will emit a single `RxBleConnection` but will not complete as the connection may be later a subject to an error (i.e. external disconnection). Whenever you are no longer interested in keeping the connection open you should dispose it which will cause disconnection and cleanup of resources.

The below table contains an overview of used `Observable` patterns

| Interface | Function | Number of values | [Hot/Cold](https://medium.com/@benlesh/hot-vs-cold-observables-f8094ed53339)
| --- | --- | --- | --- |
| RxBleClient | scanBleDevices()* | Infinite | cold |
| RxBleClient | observeStateChanges() | Infinite** | hot |
| RxBleDevice | observeConnectionStateChanges() | Infinite | hot |
| RxBleDevice | establishConnection()* | One | cold |
| RxBleConnection | setupNotification()* | One | cold |
| RxBleConnection | setupNotification() emitted Observable | Infinite** | hot |
| RxBleConnection | setupIndication()* | One | cold |
| RxBleConnection | setupIndication() emitted Observable | Infinite** | hot |
| RxBleConnection | queue() | User defined | cold |

\* this `Observable` when disposed closes/cleans up internal resources (i.e. finishes scan, closes a connection, disables notifications)
\** this `Observable` may complete. For example `observeStateChanges()` does emit only a single value and finishes in exactly one situation — when Bluetooth Adapter is not available on the device. There is no reason to monitor other states as the adapter does not appear during runtime. A second example: Observables emitted from `setupNotification` / `setupIndication` may complete when the parent Observable is disposed.

### Helpers
We encourage you to check the package [`com.polidea.rxandroidble2.helpers`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/rxandroidble/src/main/java/com/polidea/rxandroidble2/helpers) and [`com.polidea.rxandroidble2.utils`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/rxandroidble/src/main/java/com/polidea/rxandroidble2/utils) which contain handy reactive wrappers for some typical use-cases.

#### Value interpretation
Bluetooth Specification specifies formats in which `int`/`float`/`String` values may be stored in characteristics. `BluetoothGattCharacteristic` has functions for retrieving those (`.getIntValue()`/`.getFloatValue()`/`.getStringValue()`).
Since `RxAndroidBle` reads and notifications emit `byte[]` you may want to use `ValueIntepreter` helper to retrieve the same data easily.

#### Observing BluetoothAdapter state
If you would like to observe `BluetoothAdapter` state changes you can use `RxBleAdapterStateObservable`.

## More examples

Usage examples are located in:
- [`/sample`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/sample/src/main/java/com/polidea/rxandroidble2/sample)
- [`/sample-kotlin`](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/sample-kotlin/src/main/kotlin/com/polidea/rxandroidble2/samplekotlin)

Keep in mind that these are only _samples_ to show how the library can be used. These are not meant for being role model of a good application architecture.

## Testing
Using RxAndroidBle enables you to test your application easily.

### Unit tests
Most of the objects that the library uses are implementations of interfaces which can be mocked.

Alternatively one could use `MockRxAndroidBle` (more info below). Note: Using `MockRxAndroidBle` in unit tests needs [Robolectric](https://github.com/robolectric/robolectric).

### Integration tests
Sometimes there is a need to develop the application without the access to a physical device. We have created [MockRxAndroidBle](https://github.com/dariuszseweryn/RxAndroidBle/tree/master/mockrxandroidble) as a drop-in addon for mocking a simple peripheral.

Unfortunately it is not under active development—PRs are welcomed though. ;)

## [Small performance comparison](https://github.com/dariuszseweryn/RxAndroidBle/issues/41#issuecomment-333513707)

## Contributing
If you would like to contribute code you can do so through GitHub by forking the repository and sending a pull request.

When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. Please also make sure your code compiles by running ```./gradlew clean checkstyle test```.

## FAQ
If you encounter seemingly incorrect behaviour in your application that is regarding this library please check the below list of Frequently Asked Questions:
- [Cannot connect / Status 133](https://github.com/dariuszseweryn/RxAndroidBle/wiki/FAQ:-Cannot-connect)
- [UndeliverableException](https://github.com/dariuszseweryn/RxAndroidBle/wiki/FAQ:-UndeliverableException)

## Support
* non-commercial — head to [StackOverflow #rxandroidble](https://stackoverflow.com/questions/tagged/rxandroidble)
* commercial — contact the maintainer

## Discussions
Want to talk about it? Join our discussion on [Gitter](https://gitter.im/RxBLELibraries/RxAndroidBle)

## Maintainers
* Dariusz Seweryn (github: dariuszseweryn)

## [Contributors](https://github.com/dariuszseweryn/RxAndroidBle/graphs/contributors), thank you!

## License

    Copyright 2016 Polidea Sp. z o.o
    Copyright 2021 Dariusz Seweryn 

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

","'android-bluetooth', 'android-library', 'ble', 'bluetooth-le', 'bluetooth-low-energy', 'rxjava', 'rxjava2', 'rxjava3'",2016-02-04T13:42:02Z,2024-03-27T06:45:16Z,48,42,3390,98,"('dariuszseweryn', 606), ('uKL', 178), ('nrbrook', 95), ('Michal Zielinski', 32), ('lukaszkalnik', 13), ('Andrea Pregnolato', 11), ('bleeding182', 4), ('ened', 4), ('mikolak', 4), ('nightscape', 3), ('mapyo', 3), ('ivanph', 2), ('tomaszmnich', 2), ('roman-upnext', 2), ('passsy', 2), ('maoueh', 2), ('seotrader', 2), ('martiwi', 1), ('bntnam', 1), ('Nate Ridderman', 1), ('piotrdubiel', 1), ('piotrek1543', 1), ('ardovic', 1), ('sebirdman', 1), ('theosotr', 1), ('Thuy Trinh', 1), ('filippodelfra', 1), ('fracturedpsyche', 1), ('kaiaai', 1), ('matthew-compton', 1), ('BharathMG', 1), ('mzgreen', 1), ('ykc415', 1), ('MartinSadovy', 1), ('Marcio Granzotto Rodrigues', 1), ('mechatronik', 1), ('connected-jallen', 1), ('JlUgia', 1), ('FireZenk', 1), ('jdrider', 1), ('marsounjan', 1), ('JamesDougherty', 1), ('ivanempire', 1), ('GuillaumeBourge', 1), ('DaBs', 1), ('Emeritus-DarranKelinske', 1), ('danielstuart14', 1), ('ariccio', 1)",31,27,
boto/boto,"For the latest version of boto, see https://github.com/boto/boto3 -- Python interface to Amazon Web Services","####
Deprecation notice
####

**This package is no longer maintained and has been replaced by** `Boto3 `__.
**Issues and pull requests are not reviewed. If you are having an issue with the** `Boto3 `__ **package or the** `AWS CLI `__, **please open an issue on their respective repositories.**

####
boto
####
boto 2.49.0

Released: 11-July-2018

.. image:: https://pypip.in/d/boto/badge.svg
        :target: https://pypi.python.org/pypi/boto/


************
Introduction
************

Boto is a Python package that provides interfaces to Amazon Web Services.
Currently, all features work with Python 2.6 and 2.7. Work is under way to
support Python 3.3+ in the same codebase. Modules are being ported one at
a time with the help of the open source community, so please check below
for compatibility with Python 3.3+.

To port a module to Python 3.3+, please view our `Contributing Guidelines`_
and the `Porting Guide`_. If you would like, you can open an issue to let
others know about your work in progress. Tests **must** pass on Python
2.6, 2.7, 3.3, and 3.4 for pull requests to be accepted.


********
Services
********

At the moment, boto supports:

* Compute

  * Amazon Elastic Compute Cloud (EC2) (Python 3)
  * Amazon Elastic Map Reduce (EMR) (Python 3)
  * AutoScaling (Python 3)
  * Amazon Kinesis (Python 3)
  * AWS Lambda (Python 3)
  * Amazon EC2 Container Service (Python 3)

* Content Delivery

  * Amazon CloudFront (Python 3)

* Database

  * Amazon Relational Data Service (RDS)
  * Amazon DynamoDB (Python 3)
  * Amazon SimpleDB (Python 3)
  * Amazon ElastiCache (Python 3)
  * Amazon Redshift (Python 3)

* Deployment and Management

  * AWS Elastic Beanstalk (Python 3)
  * AWS CloudFormation (Python 3)
  * AWS Data Pipeline (Python 3)
  * AWS Opsworks (Python 3)
  * AWS CloudTrail (Python 3)
  * AWS CodeDeploy (Python 3)

* Administration & Security

  * AWS Identity and Access Management (IAM) (Python 3)
  * AWS Key Management Service (KMS) (Python 3)
  * AWS Config (Python 3)
  * AWS CloudHSM (Python 3)

* Application Services

  * Amazon CloudSearch (Python 3)
  * Amazon CloudSearch Domain (Python 3)
  * Amazon Elastic Transcoder (Python 3)
  * Amazon Simple Workflow Service (SWF) (Python 3)
  * Amazon Simple Queue Service (SQS) (Python 3)
  * Amazon Simple Notification Server (SNS) (Python 3)
  * Amazon Simple Email Service (SES) (Python 3)
  * Amazon Cognito Identity (Python 3)
  * Amazon Cognito Sync (Python 3)
  * Amazon Machine Learning (Python 3)

* Monitoring

  * Amazon CloudWatch (EC2 Only) (Python 3)
  * Amazon CloudWatch Logs (Python 3)

* Networking

  * Amazon Route53 (Python 3)
  * Amazon Route 53 Domains (Python 3)
  * Amazon Virtual Private Cloud (VPC) (Python 3)
  * Elastic Load Balancing (ELB) (Python 3)
  * AWS Direct Connect (Python 3)

* Payments and Billing

  * Amazon Flexible Payment Service (FPS)

* Storage

  * Amazon Simple Storage Service (S3) (Python 3)
  * Amazon Glacier (Python 3)
  * Amazon Elastic Block Store (EBS)
  * Google Cloud Storage

* Workforce

  * Amazon Mechanical Turk

* Other

  * Marketplace Web Services (Python 3)
  * AWS Support (Python 3)

The goal of boto is to support the full breadth and depth of Amazon
Web Services.  In addition, boto provides support for other public
services such as Google Storage in addition to private cloud systems
like Eucalyptus, OpenStack and Open Nebula.

Boto is developed mainly using Python 2.6.6 and Python 2.7.3 on Mac OSX
and Ubuntu Maverick.  It is known to work on other Linux distributions
and on Windows.  Most of Boto requires no additional libraries or packages
other than those that are distributed with Python.  Efforts are made
to keep boto compatible with Python 2.5.x but no guarantees are made.

************
Installation
************

Install via `pip`_:

::

    $ pip install boto

Install from source:

::

    $ git clone git://github.com/boto/boto.git
    $ cd boto
    $ python setup.py install

**********
ChangeLogs
**********

To see what has changed over time in boto, you can check out the
release notes at `http://docs.pythonboto.org/en/latest/#release-notes`

***************************
Finding Out More About Boto
***************************

The main source code repository for boto can be found on `github.com`_.
The boto project uses the `gitflow`_ model for branching.

`Online documentation`_ is also available. The online documentation includes
full API documentation as well as Getting Started Guides for many of the boto
modules.

Boto releases can be found on the `Python Cheese Shop`_.

Join our IRC channel `#boto` on FreeNode.
Webchat IRC channel: http://webchat.freenode.net/?channels=boto

Join the `boto-users Google Group`_.

*************************
Getting Started with Boto
*************************

Your credentials can be passed into the methods that create
connections.  Alternatively, boto will check for the existence of the
following environment variables to ascertain your credentials:

**AWS_ACCESS_KEY_ID** - Your AWS Access Key ID

**AWS_SECRET_ACCESS_KEY** - Your AWS Secret Access Key

Credentials and other boto-related settings can also be stored in a
boto config file.  See `this`_ for details.

.. _Contributing Guidelines: https://github.com/boto/boto/blob/develop/CONTRIBUTING
.. _Porting Guide: http://boto.readthedocs.org/en/latest/porting_guide.html
.. _pip: http://www.pip-installer.org/
.. _release notes: https://github.com/boto/boto/wiki
.. _github.com: http://github.com/boto/boto
.. _Online documentation: http://docs.pythonboto.org
.. _Python Cheese Shop: http://pypi.python.org/pypi/boto
.. _this: http://docs.pythonboto.org/en/latest/boto_config_tut.html
.. _gitflow: http://nvie.com/posts/a-successful-git-branching-model/
.. _neo: https://github.com/boto/boto/tree/neo
.. _boto-users Google Group: https://groups.google.com/forum/?fromgroups#!forum/boto-users
",,2010-07-12T19:15:33Z,2024-01-12T23:46:55Z,684,325,6488,279,"('garnaat', 1047), ('Mitch.Garnaat', 1033), ('danielgtaylor', 641), ('toastdriven', 510), ('jamesls', 383), ('kopertop', 230), ('mfschwartz', 214), ('kyleknap', 187), ('Mitch Garnaat', 165), ('kopertop', 132), ('paltman', 85), ('pasc', 85), ('felixonmars', 72), ('JordonPhillips', 72), ('Chris Moyer', 60), ('Greg Taylor', 58), ('James Saryerwinnie', 51), ('walsh159', 49), ('jtriley', 39), (""Thomas O'Dowd"", 39), ('jimbrowne', 37), ('disruptek', 32), ('JannKleen', 27), ('walsh159', 25), ('mbarrien', 25), ('oozie', 25), ('kdaily', 22), ('rlotun', 22), ('rlotun', 22), ('jterrace', 21), ('Cat Lee Ball 🎷🐛', 21), ('bwbeach', 20), ('ryansb', 20), ('almost', 20), ('Paulo Almeida', 19), ('Kodiologist', 18), ('Zihao Yu', 17), ('John Walsh', 16), ('dkavanagh', 16), ('rdodev', 16), ('methane', 16), ('jaraco', 16), ('mco-gh', 16), ('reinhillmann', 15), ('catleeball', 15), ('Justin Patrin', 14), ('Anton Lundin', 14), ('mitchellh', 13), ('victortrac', 13), ('JDrosdeck', 13), ('gholms', 13), ('rayluo', 12), ('basak', 12), ('shawnps', 12), ('tpodowd', 12), ('Yaniv Ovadia', 12), ('jgeewax', 12), ('tmorgan', 11), ('marknca', 11), ('ghostrocket', 11), ('aleszoulek', 11), ('gtaylor', 10), ('Matt Millar', 10), ('mtdowling', 10), ('milancermak', 10), ('rdodev', 10), ('djcross', 10), ('micahhausler', 9), ('acrefoot', 9), ('thobrla', 9), ('Roberto Gaiser', 9), ('secretmike', 9), ('anseljh', 8), ('sievlev', 8), ('houglum', 8), ('Lee Trout', 8), ('Jean-Tiare LE BIGOT', 8), ('hmarr', 8), ('David Marin', 8), ('mumrah', 8), ('jnovatnack', 7), ('srri', 7), ('yuvaloren', 7), ('tehsmyers', 7), ('Petr Novodvorskiy', 7), ('phobologic', 7), ('kouk', 7), ('juanfont', 7), ('Joel Barciauskas', 7), ('georgesequeira', 7), ('dstufft', 7), ('Andy Davidoff', 7), ('katzj', 6), ('spenczar', 6), ('nishigori', 6), ('nevins-b', 6), ('avanash', 6), ('moliware', 6), ('sethoscope', 6), ('Paulo Miguel Almeida', 6), ('liamf', 6), ('staer', 6), ('Chris AtLee', 6), ('chrishenry', 6), ('Aron Rosenberg', 6), ('oxtopus', 5), ('Rayson Ho', 5), ('Rob Lugton', 5), ('Samuel Lucidi', 5), ('DreadPirateShawn', 5), ('Steve Johnson', 5), ('theju', 5), ('EaterOA', 5), ('zwilt', 5), ('kozmaz87', 5), ('cce', 5), ('jdennis', 5), ('chetan', 5), ('bohyn', 5), ('g2harris', 5), ('opottone', 5), ('a13m', 5), ('awblocker', 5), ('bmaltby', 5), ('EnTeQuAk', 5), ('cosmin', 5), ('KonishchevDmitry', 5), ('gz', 5), ('Hunter Blanks', 5), ('walkerjoe', 5), ('JJC1138', 5), ('kennu', 5), ('Kyle Gordon', 5), ('Max Noel', 5), ('gimbel0893', 5), ('natedub', 5), ('alfredodeza', 4), ('Robert Mela', 4), ('Steven Arcangeli', 4), ('Vineeth Pillai', 4), ('zachhuff386', 4), ('blinsay', 4), ('j0nes2k', 4), ('jumping', 4), ('kain-jy', 4), ('micahhausler', 4), ('rdoci', 4), ('rdodev', 4), ('unknown', 4), ('chocobn69', 4), ('bobveznat', 4), ('sukrit007', 4), ('arturhoo', 4), ('Austin Marshall', 4), ('holzman', 4), ('clifflu', 4), ('HarryRybacki', 4), ('James Martin', 4), ('jamesonjlee', 4), ('KS Chan', 4), ('marascio', 4), ('numerodix', 4), ('MisaKondo', 4), ('Nathan Grigg', 4), ('Nick Tarleton', 4), ('kotnik', 4), ('phspagiari', 4), ('Piotr Bulinski', 4), ('ralfharing', 4), ('yig', 3), ('trevorsummerssmith', 3), ('Tobias Work', 3), ('macrotim', 3), ('tedromer', 3), ('T. Dampier', 3), ('Steven Hardy', 3), ('simonratner', 3), ('shaunbrady', 3), ('smoser', 3), ('Ryan Grigsby', 3), ('phickey', 3), ('pslawski', 3), ('aedeph', 3), ('eckamm', 3), ('jma', 3), ('mLewisLogic', 3), ('ukhersu', 3), ('unknown', 3), ('winhamwr', 3), ('fivethreeo', 3), ('dennisatplumbee', 3), ('hinnerk', 3), ('tedder', 3), ('sanbornm', 3), ('Barnaby Gray', 3), ('carllen', 3), ('brucep-care', 3), ('Clement Demonchy', 3), ('bhagany', 3), ('Mavus', 3), ('taliastocks', 3), ('dangra', 3), ('darjus-amzn', 3), ('davbo', 3), ('dmcritchie', 3), ('fejta', 3), ('Evan Worley', 3), ('Franc Carter', 3), ('pasieronen', 3), ('nkvoll', 3), ('mtripoli', 3), ('michaelnt', 3), ('mtai', 3), ('Mark Nunnikhoven', 3), ('imlucas', 3), ('gustavorauber', 3), ('henrysher', 3), ('Ilya Volodarsky', 3), ('JerryKwan', 3), ('amyreese', 3), ('Luca Bruno', 3), ('Leftium', 3), ('srs81', 2), ('stevearc', 2), ('Steve Mactaggart', 2), ('Louis Pery', 2), ('sjones4', 2), ('sopel', 2), ('Stefan Praszalowicz', 2), ('mbox', 2), ('rytis', 2), ('ryansydnor', 2), ('rohitagarwal003', 2), ('rjschwei', 2), ('Rafael Cunha de Almeida', 2), ('priteau', 2), ('paulcwatts', 2), ('Olivier Hervieu', 2), ('ohe', 2), ('nithint', 2), ('mbr', 2), ('nhumphreys', 2), ('Nate', 2), ('Miles Shang', 2), ('Michael Drzal', 2), ('tierney', 2), ('Ivoz', 2), ('MarkRoddy', 2), ('markhjelm', 2), ('cshanes', 2), ('thaDude', 2), ('siroken3', 2), ('rdodev', 2), ('peterneyens', 2), ('mumrah', 2), ('msshin', 2), ('laflechejonathan', 2), ('jsmartin', 2), ('fuke', 2), ('flipkin', 2), ('farthVader', 2), ('drrb', 2), ('dialt0ne', 2), ('crschmidt', 2), ('chirag', 2), ('chilang', 2), ('andy', 2), ('yarikoptic', 2), ('Xavier Lapointe', 2), ('whilp', 2), ('Warren Turkal', 2), ('Waldemar Kornewald', 2), ('Vladimir Ryazanov', 2), ('Tryggvi Bjorgvinsson', 2), ('tommorris', 2), ('tt-savola', 2), ('Tiago Alves Macambira', 2), ('krallin', 2), ('dwightjl', 2), ('Doug Ellwanger', 2), ('DempDemp', 2), ('dkimdon', 2), ('danielrhammond', 2), ('danielbeardsley', 2), ('Dan-RAINN', 2), ('Dan Lecocq', 2), ('coryb', 2), ('ckrybus', 2), ('cbednarski', 2), ('manos', 2), ('boldfield', 2), ('adamsb6', 2), ('bradleyayers', 2), ('Brad Greenlee', 2), ('tamentis', 2), ('bdubertret', 2), ('yowmamasita', 2), ('Arnaud Delabarre', 2), ('Arif Amirani', 2), ('Andrés J. Díaz', 2), ('andrewyates', 2), ('Andrew Watts', 2), ('rectalogic', 2), ('nanorepublica', 2), ('Allard Hoeve', 2), ('alimoeeny', 2), ('abhinav-upadhyay', 2), ('Lee-Ming Zen', 2), ('lotten', 2), ('mulka', 2), ('kz9676', 2), ('kevinschaul', 2), ('kevgliss', 2), ('kdeldycke', 2), ('khagler', 2), ('klimkiewicz', 2), ('Jonathan Lansey', 2), ('saebyn', 2), ('Jim Fulton', 2), ('jpommer', 2), ('jerm', 2), ('mgoblue80', 2), ('esanchezm', 2), ('Eugene Brevdo', 2), ('fabiant7t', 2), ('Gabriel Monroy', 2), ('Garth Berry', 2), ('georgegoh', 2), ('gertjanol', 2), ('phunter', 2), ('ilam', 2), ('Jack Bruno', 2), ('Jakub Gustak', 2), ('kvbik', 2), ('James Legg', 2), ('Jason Allum', 2), ('Rajiv Navada', 1), ('Ramon Navarro Bosch', 1), ('Randall Degges', 1), ('Rayson HO @ Open Grid Scheduler', 1), ('Rayson Ho', 1), ('Rhett Garber', 1), ('Riobard', 1), ('Rob Fletcher', 1), ('Rob Terhaar', 1), ('Rohit Agarwal', 1), ('Svenja Cao', 1), ('Rajesh', 1), ('Rafal Kwasny', 1), ('Quentin de Metz', 1), ('Phocux', 1), ('Philip Jay', 1), ('Peter Moon', 1), ('Peter Marsh', 1), ('Peter Hall', 1), ('Peter Dyson', 1), ('Peter Dave Hello', 1), ('Nathaniel Moseley', 1), ('Stuart Warren', 1), ('Steven Richards', 1), ('Steven Cummings', 1), ('Steve Howard', 1), ('Stephen Röttger', 1), ('Stefan Pochmann', 1), ('Stefan Foulis', 1), ('Stan Hu', 1), ('Stan Blosser', 1), ('Spike Gronim', 1), ('Sever Băneşiu', 1), ('Seth Davis', 1), ('Sergio Oliveira', 1), ('SeongSooCho', 1), ('Sean Talts', 1), (""Sean O'Connor"", 1), ('Samuel Sutch', 1), ('Samuel Lucidi', 1), ('Samuel Lucidi', 1), ('Samuel Lucidi', 1), ('Ryan S. Brown', 1), ('Royce Remer', 1), ('Nathan J. Mehl', 1), ('Nathan Herring', 1), ('Nathan Binkert', 1), ('Nathan', 1), ('Munehisa Kamata', 1), ('Mohan Krishnan', 1), ('Mitchell Hashimoto', 1), ('Miles Shang', 1), ('Mikhail Kolesnik', 1), ('Mike Tougeron', 1), ('Mike Bryant', 1), ('Michael Wirth', 1), ('Michael Stevens', 1), ('Michael Leonhard', 1), ('Michael Budde', 1), ('Micah Hausler', 1), ('MaximVeksler', 1), ('Maxim Veksler', 1), ('Max', 1), ('Matthew Copperwaite', 1), ('Matt Veitas', 1), ('Peter Broadwell', 1), ('Pedro Figueiredo', 1), ('Pavel Repin', 1), ('Paul Tobias', 1), ('Paul Melnikow', 1), ('Paul Graydon', 1), ('Paul Armstrong', 1), ('Patrick Stegmann', 1), ('Patrick Lucas', 1), ('Patrick Kelley', 1), ('Patrick Hayes', 1), ('Pak Youngrok', 1), ('Otto Jongerius', 1), ('Ori Hoch', 1), ('Ori Avtalion', 1), ('Oleksandr Gituliar', 1), ('Nuutti Kotivuori', 1), ('Nicolas Baccelli', 1), ('Nico Revin', 1), ('Nick Sitarz', 1), ('Neil Wilson', 1), ('Neil Mann', 1), ('pchico', 1), ('noxiouz', 1), ('noenglishprofessorbut', 1), ('najeira', 1), ('mraposa', 1), ('moranski', 1), ('mikepope', 1), ('martin', 1), ('lochiiconnectivity', 1), ('l33twolf', 1), ('ksacry', 1), ('krz.suc', 1), ('kmwang', 1), ('keiji', 1), ('kdmukai', 1), ('kbalaji', 1), ('jordansmith', 1), ('jmallen', 1), ('jjhooper', 1), ('jijojv', 1), ('jibs', 1), ('Wolfgang Nagele', 1), ('이덕준', 1), ('齋藤 貴彦', 1), ('Łukasz Kożuchowski', 1), ('zvickery', 1), ('vikalp', 1), ('vikalp', 1), ('unknown', 1), ('unknown', 1), ('ubhisat', 1), ('toby', 1), ('squfrans', 1), ('socketbox', 1), ('seales', 1), ('scott', 1), ('sblosser', 1), ('sanbornm', 1), ('ryancustommade', 1), ('ruben', 1), ('root', 1), ('root', 1), ('robert.leftwich', 1), ('rgrp', 1), ('Wil Tan', 1), ('Wil Tan', 1), ('Vivek', 1), ('Vitali Kotik', 1), ('Vinicius Ruan Cainelli', 1), ('Victor Trac', 1), ('Trey Tacon', 1), ('Trevor Pounds', 1), ('Travis Thieman', 1), ('Travis McLane', 1), ('Tom Terrace', 1), ('Tom Tang', 1), ('Tom Hoover', 1), ('Tom Benninger', 1), ('Toby Burress', 1), ('Tim Martin', 1), ('Tim Gross', 1), ('Tim Burke', 1), ('Thomas Grainger', 1), ('Theo Julienne', 1), ('Terence Honles', 1), ('innovatifi', 1), ('graphaelli', 1), ('geekpete', 1), ('frankamp', 1), ('follower', 1), ('focus', 1), ('dherbst', 1), ('darktable', 1), ('cariaso', 1), ('bsimpson63', 1), ('brimcfadden', 1), ('altruism', 1), ('alexzhangs', 1), ('akuznets0v', 1), ('acobb', 1), ('Zhihong Yao', 1), ('ZerothAngel', 1), ('Zachary Musgrave', 1), ('Yuki Yokoyama', 1), ('Yossi Rafelson', 1), ('Yossi Gottlieb', 1), ('Yaniv Ovadia', 1), ('daniel-vcodex', 1), ('Dang', 1), ('djw', 1), ('dlo', 1), ('yuzeh', 1), ('Dan Fairs', 1), ('callahad', 1), ('damz', 1), ('dsharkey', 1), ('CyrilRoelandteNovance', 1), ('Craig Jellick', 1), ('Cosmo Petrich', 1), ('corymintz', 1), ('frewsxcv', 1), ('conorbranagan', 1), ('cliffano', 1), ('Chunyan Song', 1), ('Chunyan Song', 1), ('croach', 1), ('onyxfish', 1), ('Christopher Adams', 1), ('abutcher', 1), ('freyes', 1), ('egirshov', 1), ('Esteban Sánchez', 1), ('Eric Smalling', 1), ('dhoeric', 1), ('webfanatic', 1), ('duduklein', 1), ('ehebert', 1), ('edmorley', 1), ('dbarlett', 1), ('adregan', 1), ('kachok', 1), ('David Watrous', 1), ('drbild', 1), ('David Pisoni', 1), ('daviddpark', 1), ('David Ormsbee', 1), ('David Marin', 1), ('davidmarble', 1), ('Daniel Norberg', 1), ('dhuang', 1), ('djhworld', 1), ('Andersen Yang', 1), ('ph87', 1), ('AlexeyMK', 1), ('alexanderdean', 1), ('schworer', 1), ('Alex Schoof', 1), ('a5an0', 1), ('anorth2', 1), ('Alex Konradi', 1), ('alexjurkiewicz', 1), ('Alex Corley', 1), ('abrinsmead', 1), ('akoumjian', 1), ('ahmedj', 1), ('guilload', 1), ('Adrian Mester', 1), ('abridgett', 1), ('adrian-sgn', 1), ('thurloat', 1), ('arterrey', 1), ('AdamG', 1), ('xtofian', 1), ('Chris Huegle', 1), ('Chris Henry', 1), ('rafael81', 1), ('carsongee', 1), ('buzztroll', 1), ('Bryan Donlan', 1), ('kanzure', 1), ('adrienbrunet', 1), ('brianjaystanley', 1), ('bugi', 1), ('Branen Salmon', 1), ('emidln', 1), ('Bram Noordzij', 1), ('b0morris', 1), ('benhoyt', 1), ('benburry', 1), ('ls-aron-kyle', 1), ('scalp42', 1), ('anoopj', 1), ('ajorg-aws', 1), ('andrewgross', 1), ('Kuznetsov', 1), ('Kit Sunde', 1), ('Khoa Tran', 1), ('Kevin Meyer', 1), ('Kevin Locke', 1), ('Kevin Burke', 1), ('Keith Fitzgerald', 1), ('Kazuhiro Ogura', 1), ('Katsunori Kanda', 1), ('Justyna Ilczuk', 1), ('Joshua Royalty', 1), ('cellofellow', 1), ('Josh Austin', 1), ('josegonzalez', 1), ('jordansissel', 1), ('joonathan', 1), ('Jonathan Sabo', 1), ('jonathanwcrane', 1), ('johnnyw-aws', 1), ('John Lynn', 1), ('sandbox', 1), ('isaacbowen', 1), ('Matt Singleton', 1), ('Matt Robenolt', 1), ('Matt DeBoard', 1), ('Matt Boersma', 1), ('Matt Billenstein', 1), ('Matt Andrews', 1), ('Masakazu Iwatate', 1), ('Martin andrews', 1), ('Martin Davidsson', 1), ('Mark Smith', 1), ('Mark Reid', 1), ('Mark Reddy', 1), ('Malthe Borch', 1), ('Mac Morgan', 1), ('Luke Carmichael', 1), ('Lukas Bezdicka', 1), ('Luis Buriola', 1), ('Luis Barrueco', 1), ('Lorrin Nelson', 1), ('Laurent Raufaste', 1), ('Lars Butler', 1), ('Kyle Conroy', 1), ('Ian Kallen', 1), ('iandanforth', 1), ('hvpareja', 1), ('hyunjung', 1), ('hltbra', 1), ('dahlia', 1), ('hjacobs', 1), ('hanleyhansen', 1), ('cornmander', 1), ('Greg Femec', 1), ('gleicon', 1), ('Gil Raphaelli', 1), ('georgekola', 1), ('gene1wood', 1), ('gaige', 1), ('freimer', 1), ('fsouza', 1), ('aficionado', 1), ('Francesco Malandrino', 1), ('Franc Carter', 1), ('Feroze Daud', 1), ('Joe Zulli', 1), ('joesondow', 1), ('Joe Crobak', 1), ('Jim Wilcoxson', 1), ('jianli', 1), ('Jerome Petazzoni', 1), ('jerith', 1), ('jedberg', 1), ('j-carl', 1), ('rubic', 1), ('jrwren', 1), ('jason-w', 1), ('jthigpen', 1), ('James ORourke', 1), ('jamesob', 1), ('jlambatl', 1), ('James Downs', 1), ('James Dennis', 1), ('Roguelazer', 1), ('jzbruno', 1), ('itoshkov', 1), ('iurisilvio', 1)",348,101,
HandBrake/HandBrake,HandBrake's main development repository ,"# HandBrake [![macOS Build](https://github.com/HandBrake/HandBrake/workflows/macOS%20build/badge.svg)](https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22macOS+build%22) [![Windows Build](https://github.com/HandBrake/HandBrake/workflows/Windows%20Build/badge.svg)](https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22Windows+Build%22) [![Linux Build](https://github.com/HandBrake/HandBrake/workflows/Linux%20Build/badge.svg)](https://github.com/HandBrake/HandBrake/actions?query=workflow%3A%22Linux+Build%22)


HandBrake is an open-source video transcoder available for Linux, Mac, and Windows, licensed under the [GNU General Public License (GPL) Version 2](LICENSE).

HandBrake takes videos you already have and makes new ones that work on your mobile phone, tablet, TV media player, game console, computer, or web browser—nearly anything that supports modern video formats.

HandBrake works with most common video files and formats, including ones created by consumer and professional video cameras, mobile devices such as phones and tablets, game and computer screen recordings, and DVD and Blu-ray discs. HandBrake leverages tools such as FFmpeg, x264, and x265 to create new MP4 or MKV video files from these *Sources*.

For information on downloading, building/installing, and using HandBrake, see the official [HandBrake Documentation](https://handbrake.fr/docs).

## Community Support

Visit the [HandBrake Community Forums](https://forum.handbrake.fr/).

For information on HandBrake's community support channels, please see [Community Support](https://handbrake.fr/docs/en/latest/help/community-support.html).

Our [community rules](https://forum.handbrake.fr/app.php/rules) and [code of conduct](https://github.com/HandBrake/HandBrake/blob/master/CODE_OF_CONDUCT.md) apply to both our site and GitHub.


## Contributing

We welcome most contributions. While it is our goal to allow everyone to contribute, contributions not meeting the project's goals or  standards may be rejected.

Please read our [guide to contributing](https://handbrake.fr/docs/en/latest/contributing/contribute.html). This will provide you with all the information you need to start contributing to the project. 

## Translations

We are now accepting translations via  [Transifex](https://www.transifex.com/HandBrakeProject/public) 

Please read our [Translations Guide](https://github.com/HandBrake/HandBrake/blob/master/TRANSLATION.markdown) and follow the instructions if you are interested in joining the translation effort.


## Additional Information

[Application / Project Information](https://github.com/HandBrake/HandBrake/wiki/Application-Information)  
[Authors](AUTHORS.markdown)  
[License](LICENSE)  
[News](NEWS.markdown)  

## Special Thanks



and to many others who have contributed! [Thanks](THANKS.markdown)
","'gplv2', 'multi-platform', 'video-transcoding'",2015-08-22T16:32:28Z,2024-06-18T08:18:16Z,136,110,16103,286,"('sr55', 3721), ('jstebbins', 2931), ('galad87', 1940), ('bradleysepos', 766), ('dynaflash', 690), ('twalker314', 617), ('jbrjake', 331), ('robxnano', 181), ('Nomis101', 156), ('galinart', 139), ('van', 129), ('KonaBlend', 121), ('eddyg', 114), ('saintdev', 70), ('RandomEngy', 49), ('maximd33', 48), ('titer', 34), ('jsoref', 32), ('handbrake', 32), ('hnsteyding', 30), ('maurj', 30), ('PhilippeRigaux', 23), ('EwoutH', 21), ('dependabotbot', 20), ('mstorsjo', 16), ('yuichiro-naito', 16), ('brianmario', 16), ('marcosfrm', 16), ('brad0', 14), ('samhutchins', 14), ('SeanMcG', 13), ('johnallen', 10), ('ferdnyc', 9), ('clee', 9), ('maximd33i', 7), ('ryoon', 7), ('sgothel', 6), ('cleaner', 6), ('cubicibo', 6), ('superdump', 6), ('2wayne', 6), ('luzpaz', 5), ('rhester', 5), ('f3ndot', 5), ('Patriccollu', 4), ('sverrirs', 4), ('midzer', 4), ('OvchinnikovDmitrii', 4), ('msidrisi91', 3), ('awk', 3), ('PMunkes', 3), ('astiob', 3), ('frederickding', 3), ('chrisd8088', 3), ('hadess', 3), ('abrezovsky', 3), ('qarkai', 2), ('sr55.hb@outlook.com', 2), ('reece00', 2), ('davidfstr', 2), ('darkdragon-001', 2), ('anongitter', 2), ('tmatth', 2), ('rarzumanyan', 2), ('Ricardo Nunez', 2), ('shlyakpavel', 2), ('nedrichards', 2), ('JMoVS', 2), ('Xeio', 2), ('jlesage', 2), ('jbeich', 2), ('foutrelis', 2), ('benlake', 1), ('aaronjeline', 1), ('x3rAx', 1), ('woutershep', 1), ('Wouterdek', 1), ('TotalCaesar659', 1), ('tgurr', 1), ('tianon', 1), ('Strangelovian', 1), ('theHamsta', 1), ('soulshadow', 1), ('shakim', 1), ('Shakil-Shahadat', 1), ('sebastinas', 1), ('Sebastian Janning', 1), ('thesamesam', 1), ('cclauss', 1), ('dashsantosh-mcw', 1), ('digulla', 1), ('dtparr', 1), ('edu', 1), ('freddii', 1), ('helinb', 1), ('ilovezfs', 1), ('lameventanas', 1), ('nitschis', 1), ('quietvoid', 1), ('schrotthaufen', 1), ('setec', 1), ('stickz', 1), ('supachris28', 1), ('toni-estevez', 1), ('andrewlewis', 1), ('drolevar', 1), ('aldot', 1), ('lamby', 1), ('coreydaley', 1), ('caldwell', 1), ('Flameeyes', 1), ('happycollision', 1), ('DrupFlip', 1), ('EArmour', 1), ('emericg', 1), ('gfsheppard', 1), ('HofiOne', 1), ('jamiemlaw', 1), ('John Stebbins', 1), ('John Stebbins', 1), ('John Stebbins', 1), ('John Stebbins', 1), ('64bit-awesome', 1), ('mypopydev', 1), ('MarongHappy', 1), ('xfer', 1), ('MatthewLazarow', 1), ('gedoensmax', 1), ('cho-m', 1), ('mwootton', 1), ('NadeenUdantha', 1), ('Nik Pawlak', 1), ('trebmuh', 1), ('PatrickFerry', 1), ('pereorga', 1), ('hpi1', 1)",64,51,
fearofcode/bateman,(ABANDONED) Simple stock trading system that optimizes its parameters with particle swarm optimization,"Bateman
-------

![Everything failed to subdue me. Soon everything seemed dull: another sunrise, the lives of heroes, falling in love, war, the discoveries people made about each other.](http://media.tumblr.com/tumblr_lmvx4uwp0h1qeqv7k.gif)

Bateman is a very simple trading system meant to screen a subset of the US equities markets and tests out how well a simple [long](http://www.investopedia.com/terms/l/long.asp)-only trading strategy described below will work.

It's based off the observation that many symbols display sufficient daily volatility that their high will generally be significantly above their open, regardless of their price at the close of trading.

The strategy has its parameters refined by [particle swarm optimization](http://en.wikipedia.org/wiki/Particle_swarm_optimization), a simple continuous optimization algorithm, so that you don't have to figure out the parameters for each stock you're interested in by hand.

I never really got around to making this robust, but would like to come back to it someday soon. See below for a sample run of it.

Obviously, don't use this for trading real money.

Who are you?
------------

My name is Warren Henning. I'm a 29 year old software developer living in Berkeley, California.

I don't have any professional experience in the finance or investment banking industries. I've never worked for a bank. This is just a hobby project I've wanted to do for a long time.

Have you traded this with real money? Does it work?
---------------------------------------------------

I haven't risked any money on this. It produces profitable simulated results on historical data I've tried it against recently (see a sample result below), but that's definitely not a guarantee of actual trading performance.

This is Open Source software, which basically means I owe you nothing and this software doesn't necessarily work. Please read the LICENSE file carefully. It's not my fault if on the off chance you use this and lose money! You have no recourse against me. Again, refer to [the license](https://github.com/fearofcode/bateman/blob/master/LICENSE).

Why are you doing this?  How can you write a program to pick stock trades?
-------------------------------------------------------------------------

I'm doing this for fun, nothing more. I'm not selling anything or expecting to make money off this. I'm giving it away because I think the idea of it is more interesting than the practical reality of it as a money-making tool. I don't have the capital to trade it, and it's common even for seemingly foolproof trading systems to not do well under actual circumstances compared to their simulated performance.

I'd like to discuss the idea of relying on a computer to place trades now. A program like Bateman falls under the category of ""algorithmic trading"", which 
has been practiced by hedge funds and Wall Street firms for quite a while now. See [Wikipedia's page on algorithmic trading](http://en.wikipedia.org/wiki/Algorithmic_trading) for more information.

Note that ""algorithmic trading"" should be distinguished from [""high-frequency trading""](http://en.wikipedia.org/wiki/High-frequency_trading), which is what has become the real focus of the quants and hedge fund rocket scientists nowadays. Bateman is not a high-frequency trading app; in fact, it simulates placing trades only once a day. Compared to the crazy shit Wall Street is doing now, Bateman is, I would think, old hat. From what I know, Wall Street has shifted its focus from discretionary proprietary trading to market-making, statistical arbitrage, and high-frequency trading operations. We're living in a crazy world, and depending on who you ask, [high-frequency trading definitely has its dark side](http://www.zerohedge.com/news/2012-12-15/high-frequency-trading-broken-market-primer-two-parts). I have nothing to do with that.

I'll also emphasize again that I'm not a trader and, while I am a professional programmer, I've never worked on any trading infrastructure code.

Additionally, Bateman isn't really a fully algorithmic trading app, since it doesn't actually place trades itself; it just tries to find numbers that would allow a human trader to trade successfully. So it enables ""systematic trading"", where a program emits outputs that suggest a rigid, objective course of action that the human trader is then supposed to follow. Many people are unable to follow through with this and generally lose money as a result. So, Bateman has nothing for talking to brokers or actually making trades itself. If you wanted to use the results of a program like this, you'd have to do that by hand.

Prior to the rise of ubiquitous high-performance computers, trading was done in what is now often called, by contrast, a [discretionary](http://blog.nobletrading.com/2009/12/what-is-discretionary-trading.html) fashion, with traders generally trying to combine macroeconomic and fundamental financial information ([""fundamental analysis""](http://en.wikipedia.org/wiki/Fundamental_analysis); think Warren Buffett) with [technical analysis](http://en.wikipedia.org/wiki/Technical_analysis)/charting to figure out what to trade or invest in. It's generally agreed that due to the [psychological factors involved in trading](http://economix.blogs.nytimes.com/2011/02/17/forecasting-is-for-the-birds-and-rats/), humans are less skilled at executing trades than pre-configured trading systems. This is due to factors like second-guessing, over-thinking, being indecisive or changing one's mind, etc., almost always to one's own detriment. This compliments recent psychological studies about the flawed nature of memory and the human mind.

If you haven't ever tried to trade and haven't experienced this psychological aspect, I suggest getting a [free paper trading account](http://www.oanda.com/) that lets you do simulated trading without actually giving anyone any financial information or money and actually trying it for yourself. If you're like most people, you'll have a hard time waiting for the results of a trade to play out and want to basically dick around. Paper trading has a certain stress to it, even when no real money is changing hands -- now imagine if it was cash you had busted your ass to save and you were going to try to live the dream and ""trade for a living"". Most people fail, badly. There is almost certain no reason to believe you or I are any better or different. Most ""successful traders"" who appear to be beating the market are just lucky.
 
Hence, to somewhat alleviate the unreliability and anxiety associated with discretionary trading, traders look for rigorous, quantitative ""trading systems"" that enable ""systematic trading"" if used and followed properly. If the program makes trades automatically without human intervention, this removes the obligation to follow the decisions made by the system everytime, as well, and the psychological aspects of the system are largely removed; all that then remains for such an algorithmic trading system is to monitor it to ensure it's working as intended.

There have been a few cases of high-frequency trading systems gone awry to disastrous results; one such system at Knight Capital [racked up over US$400 million in losses in 30 minutes](http://dealbook.nytimes.com/2012/08/02/knight-capital-says-trading-mishap-cost-it-440-million/). Imagine being the first person at the firm to learn what had happened, and having to be the messenger of such horrible news. Yikes.

To conclude these thoughts on algorithmic and high-frequency trading, it's clear that scrutiny and rigorous testing are crucial for success, as Knight Capital learned.

On model complexity
-------------------

Any time you build a system with parameters that get ""learned"" or ""optimized"" with some kind of underlying assumption behind it, you're basically building a statistical model. Other financial models often have much stronger assumptions than Bateman's, such as a normal distribution of returns or [mean reversion](http://en.wikipedia.org/wiki/Mean_reversion_(finance)).

Bateman is intended to have good ""generalization"" and future performance by being limited in its assumptions. Bateman's assumption is that some stocks go up a little sometimes. A plot of a ""Bateman model"" consists of a couple of horizontal lines, nothing more.

Compared to the [moving averages](http://en.wikipedia.org/wiki/Moving_average) and other [indicators](http://www.investopedia.com/terms/t/technicalindicator.asp) many traders use, this is very simple: wait for the stock to go up a little bit (to get some evidence that it won't just go straight down that day), buy, wait for it to go up a little more, sell, then do it again the next day. This can be carried out through a [limit order](http://www.investopedia.com/terms/l/limitorder.asp) with pre-determined profit targets and [stop losses](http://www.investopedia.com/terms/s/stop-lossorder.asp), and a model like that is perfect for someone who isn't a professional trader. If it no longer goes up during the day the way it used to, stop trading that stock and look for another one. If no stocks display this volatility property regularly enough, don't use the system. Simple as that.

But, you might be asking yourself, isn't computer AI kind of lousy at complex tasks like this? Well, as imperfect as computers are at complex decision-making tasks, their systematic nature gives them a certain edge versus humans in financial markets. As simple as a small set of numerical parameters to guide trades is, therein lies its strength: the assumptions behind Bateman are minimal, and not meant to be universally applicable; it's instead intended to be used on stocks that have in the past displayed a specific property on a frequent basis. It's well-known in machine learning that models with too many parameters or of too great complexity that are tested on historical data wind up being overtrained to that data, and effectively just memorizing it, with the consequence that they do poorly on future, unforeseen data. This, unfortunately, is why it's not generally practical or effective to build huge models that handle every conceivable scenario and do lots of stuff.

Why write something from scratch? Aren't there tools out there for this?
------------------------------------------------------------------------

There are many different ways to write a trading system. Many trading systems consist of an awful hell-world of Excel spreadsheets and VBA macros. Many others exist as scripts for tools like [MetaTrader](http://www.metaquotes.net/en/metatrader4), which have built in programming languages intended to be friendly to non-professional programmers.

They also include optimization facilities for finding numerical parameters to trading systems, like genetic algorithms.

Probably the easiest way to go in general would be to use [Quantopian](http://www.quantopian.com), which lets you build and test trading systems right in your browser.

Most of these tools are inadequate because they don't give you the low-level control you need. Quantopian gives you access to libraries like [numpy](http://www.numpy.org/), so that may very well be your best option if you don't roll your own from scratch.

I need to call a backtrading system in a loop and have it run as fast as possible. In other words, I can't see how to implement Bateman in terms of low-level linear algebra that can be called from Numpy.

So, we're stuck with a general-purpose language like Java.

Finally, I'd like to comment on the choice of optimization algorithm. I decided to use [particle swarm optimization](http://en.wikipedia.org/wiki/Particle_swarm_optimization) rather than genetic algorithms because PSO can often be better for continuous optimization tasks, whereas genetic algorithms seem, to me, more suited for discrete/combinatorial tasks like scheduling and routing.

What is the idea behind the trading system?
-------------------------------------------

As mentioned above, Bateman tries to buy a stock slightly above its open and below or near its daily high. Rather than trying to build a forecasting model, Bateman is intended for use with stocks that have a frequent high positive difference between daily high and open share price, so that regardless of what happens by the end of the day, at some point it will likely exhibit behavior that can be profitably exploited.

There are three fixed numerical parameters Bateman tries to optimize when it runs: the ""buy trigger"", the ""sell trigger"", and a stop loss.

1. The *buy trigger* is the amount above the open price for the day that it will buy at. So if the stock opens at 100 and the buy trigger is taken to be 0.5, any price above 100.5 will be acted upon.
2. The *sell trigger* is the amount above the price shares were purchased at to sell. If the sell trigger is not met by the end of the day, the shares are sold so that no positions are carried overnight.
3. The *stop loss* is used in the normal sense as a [risk management](http://www.investopedia.com/articles/trading/09/risk-management.asp) procedure to cut losses.

To find what the values of these constants should be for a given stock, it downloads recent data for that stock and tries to find the specific numbers that would be most profitable for that data. To compute this, it takes a given possible candidate set of constants and [backtests](http://en.wikipedia.org/wiki/Backtesting) them, simulating trading using the historical data it acquires. As it's an optimization algorithm, it gravitates towards more profitable constants. 

These three components -- buy trigger, sell trigger, stop loss -- are the numbers Bateman optimizes for, using data retrieved from Google to create a simulation of trading that data as if it were live. The results of the trade simulation are the particle swarm algorithm's *objective function*; every time it wants to find out how good a set of candidate parameters are, it runs a full simulation with those and gets back a number that lets it quantitatively compare different solutions so that it can find better solutions. The simulation of trading is what is used to drive the optimization process.

So what does it actually give back to you?
------------------------------------------

After downloading data from the Internet and running through the optimization process, some sample values it might wind up spitting back would be something like ""buy trigger = 0.1, sell trigger = 0.5, stop loss = 0.07"". This would be interpreted to mean the following:

> ""If the stock price is currently up $0.10 or more since the beginning of trading and we haven't made any other trades today, then BUY; if, after buying, the stock has gone up an additional $0.50, SELL. Additionally, if, after buying, the stock price has gone down by $0.07 or more, SELL. If we still haven't sold shares of stock and the end of the trading day is imminent, SELL, regardless of current share price. If we have traded once today, don't trade again until the next trading day"".

Notice how this is systematic, quantitative, and could be automatically executed by a computer without human intervention. This is why Bateman is a ""trading system"" or enables ""systematic trading"": it suggests a course of action that completely removes qualitative judgment or fickle human decision-making.

*Is it really worth the trouble to use an algorithm to find the buy and sell triggers?* Well, when I tried to figure out good buy and sell triggers by hand by looking at graphs of intraday data, my results were significantly worse than the numbers Bateman comes up with through its particle swarm algorithm, so I think this program adds real value. Besides, doing that by hand when you have a quad-core computer in front of you seems silly.

How many shares do we buy? The model I use is to just take a fixed percentage of our capital and buy as many shares as we can buy on that. Currently I'm using 75% of available capital in the executable example described below, which I think would be considered pretty high, but Bateman is long-only and sets fairly tight stop losses. So I think the choice is reasonable.

What range should we restrict our model parameters to? That's a matter of preference. I'll choose the following:

* Set minimum buy trigger to 0, allowing buying at open price
* Set minimum stop loss and sell trigger to 0.2% of the first opening price, which we'll use as a kind of proxy of the historical bid-ask spread
* Set maximum buy trigger, sell trigger, and stop loss to the median difference between open price and high for the last year, so that we can estimate triggers that are reasonably in line with historical data

To get the median figure referred to above, we download daily end-of-day data for the last year from Yahoo! Finance. See `YahooQuoteFetcher`.

Our choice of ranges will influence the outcomes we get. See `BuyZoneOptimizer` for how all of this comes together and tinker around with it if you want to change the ranges. 

Currently, it does backtesting with a simulated starting amount of US$100,000 and what should be reasonable assumptions about trading costs: US$10 commissions one way for trading, slippage of 0.01%. These aren't currently user-configurable, other than the symbol to work with. It simulates placing a (long-only) [market order](http://www.investopedia.com/terms/m/marketorder.asp) (as opposed to a [limit order](http://www.investopedia.com/terms/l/limitorder.asp)) that it assumes it pretty much gets right where it buys at -- it assumes orders are placed fast enough to be considered immediate for the purposes of a simulation, at a price with small enough slippage to be quite small. It also assumes the spread between the bid and ask is small enough to be reasonably accounted for with the commissions and slippage calculation that is applied to every trade. Currently, trailing stop losses are not supported. It will also only trade once a day. It keeps trades of a fixed size, not changing them or undertaking new trades until the current trade has been closed.

Hopefully the assumptions implemented here are reasonable enough to be useful for simulating the performance of a trading rule.

Also, the specific metric it optimizes for is actually the [Sharpe ratio](http://en.wikipedia.org/wiki/Sharpe_ratio) of the simulated trades, rather than net profit; i.e., it is intended to optimize for *risk-adjusted* returns. Although the Sharpe ratio is imperfect and many other metrics could plausibly be used, it is widely known and is currently what is in place.

To restate and summarize, it takes a given set of parameters as candidate triggers and stop loss, simulates that on historical data, and then returns the best one it finds.

How to run it
-------------

You will need the following software to run this:

* [JDK](http://www.oracle.com/technetwork/java/javase/downloads/index.html) version 1.7 (note the version -- it uses some 1.7-specific I/O libraries)
* [Maven](http://maven.apache.org/) 3

Then you'll want to start by cloning the repo:

    $ git clone https://github.com/fearofcode/bateman
    $ cd bateman

Then you can build the project, which should be as simple as:

    $ mvn package

Maven will download a lot of stuff the first time through. It should run the project's unit tests, then build a single fat JAR in the `target` directory.

Assuming it built successfully, you should be able to run it like any other JAR:

    $ java -jar target/bateman-1.0-SNAPSHOT.jar

This will then run the actual optimizer. Currently it is hardcoded to work on Apple's stock (AAPL).

When you run this, a sequence of events will occur:

* Download recent intraday quotes for the symbol in question (AAPL) from Google Finance
* Run a particle swarm optimization to find the best triggers and stop loss
* Print the parameters it comes up with and run a final simulation with these
* Write out a simulated trading log with profit-and-loss calculations for each simulated trade to a CSV file you can review with any spreadsheet program

A sample run
------------

When you run this, most of the outcome will be the progress of the particle swarm optimizer. Some sample output follows:

    23:05:50.338 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Particle swarm initialized
    23:05:50.341 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 1: best value -3.0648277667766175 at coords [1.2742273917025326, 0.7690457987179611, 4.521118993131451]
    23:05:50.480 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 2: best value -3.2299958855018924 at coords [1.2425268939525784, 0.8014714510930134, 4.616561434373768]
    23:05:50.631 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 3: best value -3.2299958855018924 at coords [1.2425268939525784, 0.8014714510930134, 4.616561434373768]
    23:05:50.754 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 4: best value -5.676073292799925 at coords [1.3946440963101172, 1.226696036387319, 2.550049492946538]
    23:05:50.871 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 5: best value -5.676073292799925 at coords [1.3946440963101172, 1.226696036387319, 2.550049492946538]
    [... optimizer output snipped ...]
    23:06:00.913 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 99: best value -10.770243306518138 at coords [1.3557883047481225, 1.3986054963066454, 3.2890686853292372]
    23:06:01.018 [main] INFO  o.w.b.p.SimpleParticleSwarmOptimizer - Generation 100: best value -10.770243306518138 at coords [1.3557883047481225, 1.3986054963066454, 3.2890686853292372]
    buyTrigger: 1.3557883047481225
    sellTrigger: 1.3986054963066454
    stopLoss: 3.2890686853292372
    writing trades to ./AAPL_trades_201303242306.csv
    writing series to ./AAPL_series_201303242306.csv


The output excerpt shown above is an example of running the optimization process with the parameters listed above: a $100,000 starting balance, whatever historical data comes back from Google Finance, $10 trading commissions, etc. The ""best values"" it lists are the (negative) Sharpe ratios of the simulated trades it's running with the three numbers you see listed on each line. At each iteration, in other words, it prints out the best triggers and stop loss it's found thus far. The number should actually get lower, because as an optimization algorithm it minimizes a function; maximizing a function f(x) is, in general, equivalent to minimizing the function g(x) = -f(x). So it is trying to find minimal, negative Sharpe ratios. At the end, it prints out the best value it found in the optimization run and then writes out the given CSV file whose filename you see printed above, which you can open and examine. Here is a sample of what the CSV looks like:

    OpenIndex,CloseIndex,Open,Close,OpenPrice,ClosePrice,Type,Size,OutlayCost,Profit,Balance
    394,401,2013-03-05 6:32:00,2013-03-05 6:39:00,423.43,425.26,LONG,177,74964.6,298.89,100298.89
    1275,1296,2013-03-07 8:09:00,2013-03-07 8:30:00,426.21,427.79,LONG,176,75030.46,253.05,100551.94
    1577,1584,2013-03-08 6:39:00,2013-03-08 6:46:00,432.97,434.68,LONG,174,75354.31,272.44,100824.38
    2269,2273,2013-03-11 11:40:00,2013-03-11 11:44:00,431.73,433.45,LONG,175,75570.31,275.86,101100.24
    2369,2374,2013-03-12 6:49:00,2013-03-12 6:54:00,437.01,438.5,LONG,173,75620.29,233.49,101333.73
    2785,2817,2013-03-13 7:14:00,2013-03-13 7:46:00,430.37,432.03,LONG,176,75762.69,266.98,101600.71
    3534,3544,2013-03-15 6:40:00,2013-03-15 6:50:00,439.68,441.4,LONG,173,76082.25,272.32,101873.03
    3920,3929,2013-03-18 6:34:00,2013-03-18 6:43:00,444.17,445.99,LONG,172,76414.88,287.71,102160.74
    5093,5281,2013-03-21 6:33:00,2013-03-21 9:41:00,452.53,453.96,LONG,169,76495.2,216.37,102377.11
    5502,5633,2013-03-22 6:51:00,2013-03-22 9:02:00,456.2,457.97,LONG,168,76659.26,272.0,102649.11

Each line corresponds to a simulated trade. The meaning of the columns are as follows:

* OpenIndex and CloseIndex are used for plotting and can be ignored
* Open and Close are the dates the trade was started and finished, respectively
* OpenPrice and ClosePrice are the prices of the stock at the open and close dates
* Type is the type of the trade. Currently this will always be ""LONG"" as Bateman is long-only.
* Size is the number of shares purchased.
* OutlayCost is the total cost of purchasing all the shares.
* Profit is the amount of profit made on each trade after accounting for slippage and commissions. Losses will appear as negative profit.
* Balance is the simulated account balance at the end of the trade on that line; the balance column constitutes an ""equity curve"".

So, what does the trade log above mean? How did we do overall? Well, let's have a look. The program was run on a computer on the west coast of the USA, in the PDT timezone, 3 hours behind the stock exchange in New York. So here in our dataset, trading commences each day at 6:30 AM. In the sample output above, we can see all trades were opened in the morning and held anywhere from 5 minutes to a few hours. In this dataset, all our trades are profitable. But if we look at the overall trend of AAPL in the date range in question, we see it was undergoing a long upward rally. So we were really just profiting from that. So, while it kind of works, to some extent we're just recapitulating buy-and-hold, but in a way that in this simulation leaves us with consistent profits every time. Our buy trigger is $1.36 and our sell trigger is $1.39, so we're really taking advantage of a stock that in hindsight was already destined to make a large upward move for the day.

The optimizer will look for whatever maximizes our objective function. The simulation above doesn't necessarily capture anything because of the lack of data we have access to. This currently can't be helped as Google Finance's intraday data only seems to go back a few weeks. More serious usage of this would definitely require more data.

Let's talk for a second about this strategy compared to [buy-and-hold](http://en.wikipedia.org/wiki/Buy_and_hold). Someone who buys shares and holds on to them will profit more than an [active trading](http://www.investopedia.com/active-trading/) strategy like what Bateman suggests, yes; and we will rack up lots of expenses from commissions that eat into our profits. But our trading strategy can also give us much more consistent profits on a day-to-day basis than buy-and-hold, even though buy-and-hold will outperform this strategy in the long term for some stocks.

Plotting the results
--------------------

See the file `sample_plotting_script.r` in the `plot` directory for an example of visualizing the stock data and the trade log together. Replace the runtime at the top of the with the ones Bateman puts in the output CSV file, copy the CSV files into the plot directory, then run it with [R](http://www.r-project.org/) like so:

    $ cp *.csv plot
    $ cd plot
    $ vi sample_plotting_script.r # edit the script here
    $ R CMD BATCH sample_plotting_script.r

Sample CSVs are included in the project, so running this as is should work. You'll need the `chron` library, which you install with `install.packages(""chron"")`.

See [http://i.imgur.com/HBoX2sG.png](http://i.imgur.com/HBoX2sG.png) for a full example of the rather large image the script currently produces; it is intentionally created to be quite wide, currently 5000px, so that you can see a long series of intraday data clearly. You'll of course need to scroll the image horizontally.

A detail of the plot is shown below.

![Detail of a plot of visualizing the trade log, showing two profitable trades](http://i.imgur.com/D2OD5xA.png)

The time series is plotted as you would expect, and trades are then overlayed on that time series to show entries and exits. There's sideways text for each trade to give dates and the exact profit amounts, as well. These trades are profitable, so they're shown in green. Losing trades are shown in red.

It's possible to get much more elaborate with visualizing and analyzing data like this, but this basically does the job well enough.

If you haven't used R before, consider picking up an introductory book on it or try a [tutorial](http://www.nceas.ucsb.edu/files/scicomp/Dloads/RProgramming/BestFirstRTutorial.pdf).
 
What's coming next?
-------------------

I need to look more into whether the assumptions the program makes about how it places its market orders are actually realistic.

I'd like to make the program more configurable and more easy to understand. A web frontend would be nice.

The facilities for analyzing and plotting trades with R could be more automated and better.

One interesting final thing to note is that a somewhat analogous version of this system could be used for [forex](http://en.wikipedia.org/wiki/Foreign_exchange_market) trading!
 
Thank you
---------

Hopefully this long-winded README was helpful in understanding what this program does.
",,2013-03-21T03:01:15Z,2014-05-12T03:19:06Z,2,2,724,103,"('fearofcode', 76), ('hornd', 1)",1,1,
midgetspy/Sick-Beard,PVR & episode guide that downloads and manages all your TV shows ,"Sick Beard
=====

*Sick Beard is currently an alpha release. There may be severe bugs in it and at any given time it may not work at all.*

Sick Beard is a PVR for newsgroup users (with limited torrent support). It watches for new episodes of your favorite shows and when they are posted it downloads them, sorts and renames them, and optionally generates metadata for them. It currently supports several torrent and usenet sites and retrieves show information from theTVDB.com and TVRage.com.

Features include:

* automatically retrieves new episode torrent or nzb files
* can scan your existing library and then download any old seasons or episodes you're missing
* can watch for better versions and upgrade your existing episodes (to from TV DVD/BluRay for example)
* XBMC library updates, poster/fanart downloads, and NFO/TBN generation
* configurable episode renaming
* sends NZBs directly to SABnzbd, prioritizes and categorizes them properly
* available for any platform, uses simple HTTP interface
* can notify XBMC, Growl, or Twitter when new episodes are downloaded
* specials and double episode support


Sick Beard makes use of the following projects:

* [cherrypy][cherrypy]
* [Cheetah][cheetah]
* [simplejson][simplejson]
* [tvdb_api][tvdb_api]
* [ConfigObj][configobj]
* [SABnzbd+][sabnzbd]
* [jQuery][jquery]
* [Python GNTP][pythongntp]
* [SocksiPy][socks]
* [python-dateutil][dateutil]
* [jsonrpclib][jsonrpclib]

## Dependencies

To run Sick Beard from source you will need Python 2.5+ and Cheetah 2.1.0+.
The [binary releases][githubdownloads] are standalone. Build 503 and older can be found on the now defunct [legacy releases][googledownloads].

## Bugs

If you find a bug please report it or it'll never get fixed. Verify that it hasn't [already been submitted][googleissues] and then [log a new bug][googlenewissue]. Be sure to provide as much information as possible.

[cherrypy]: http://www.cherrypy.org
[cheetah]: http://www.cheetahtemplate.org/
[simplejson]: http://code.google.com/p/simplejson/ 
[tvdb_api]: http://github.com/dbr/tvdb_api
[configobj]: http://www.voidspace.org.uk/python/configobj.html
[sabnzbd]: http://www.sabnzbd.org/
[jquery]: http://jquery.com
[pythongntp]: http://github.com/kfdm/gntp
[socks]: http://code.google.com/p/socksipy-branch/
[dateutil]: http://labix.org/python-dateutil
[googledownloads]: http://code.google.com/p/sickbeard/downloads/list
[googleissues]: http://code.google.com/p/sickbeard/issues/list
[googlenewissue]: http://code.google.com/p/sickbeard/issues/entry
[jsonrpclib]: https://github.com/joshmarshall/jsonrpclib
[githubdownloads]: https://github.com/midgetspy/Sick-Beard/releases
",,2010-03-16T21:09:33Z,2022-06-15T14:09:10Z,151,120,2895,183,"('midgetspy', 2180), ('thezoggy', 717), ('Patrick Vos', 323), ('lad1337', 253), ('mattsch', 34), ('f1sherman', 22), ('Djelibeybi', 21), ('daften', 18), ('mreid-tt', 15), ('ciaran', 14), ('generica', 14), ('adamrb', 14), ('arucard21', 12), ('giantspook', 11), ('Nico Berlee', 11), ('magister', 11), ('sander1', 11), ('wafflecopter', 10), ('duststorm', 8), ('jerub', 8), ('Jeroen Bouwens', 8), ('Adalan', 8), ('xombiemp', 7), ('nberlee', 7), ('Conjuro', 6), ('JoshSchreuder', 6), ('saqebakhter', 6), ('travisghansen', 5), ('sgranade', 5), ('Gordon Turner', 5), ('AWilco', 5), ('chaosloth', 4), ('unknown', 4), ('azcom', 4), ('Thomas W. Most', 4), ('viraptor', 4), ('Matthew Raspberry', 4), ('Luke Barnett', 4), ('tolecnal', 4), ('jrdnull', 4), ('ghuntley', 4), ('Anton Johansson', 4), ('tester22', 4), ('gordonturner', 3), ('yaleman', 3), ('cianmcgovern', 3), ('tlusk', 3), ('ppslim', 3), ('mila76', 3), ('lebedevcoder', 3), ('jayme-github', 3), ('colinhumber', 3), ('unreal4u', 3), ('bekriebel', 3), ('bradallred', 3), ('bramp', 3), ('adam-bielicki', 3), ('depassp', 2), ('SerhatG', 2), ('bardelot', 2), ('etimedout', 2), ('fauxfiction', 2), ('mallen-sharerocket', 2), ('mdave', 2), ('pairofdimes', 2), ('swc', 2), ('wsnipex', 2), ('marvinpinto', 2), ('feld', 2), ('mr-orange', 2), ('dstjacques', 2), ('chuckination', 2), ('andylintner', 2), ('anthonyryan1', 2), ('indirect', 2), ('Alessandro Lenzen', 2), ('psarossy', 1), ('ParalysedBeaver', 1), ('Grepsy', 1), ('sj26', 1), ('smeggingsmegger', 1), ('seanstar12', 1), ('mongo527', 1), ('Smenus', 1), ('spikegrobstein', 1), ('sHorst', 1), ('nate1280', 1), ('mikenerone', 1), ('michaelficarra', 1), ('Matt Melling', 1), ('Manojav Sridhar', 1), ('LeonB', 1), ('kgleeson', 1), ('jorgenpt', 1), ('droob', 1), ('timdorr', 1), ('racquemis', 1), ('nightspirit81', 1), ('mmccurdy', 1), ('julian', 1), ('guy2545', 1), ('gleam', 1), ('elrodro83', 1), ('doobeh', 1), ('darookee', 1), ('daffster', 1), ('daemox', 1), ('yoavf', 1), ('winetrance', 1), ('twoolie', 1), ('taylorludwig', 1), ('zebulon501', 1), ('SubJunk', 1), ('Steve', 1), ('douglasdollars', 1), ('daveisadork', 1), ('DTMDTM', 1), ('xbmcfanboy', 1), ('camflan', 1), ('Callum Loh', 1), ('Byron Dover', 1), ('bcrook', 1), ('Brian', 1), ('Brandon Weeks', 1), ('Boudin', 1), ('Bertrand Dunogier', 1), ('pengc99', 1), ('andersonvom', 1), ('abush', 1), ('Lx', 1), ('qbit', 1), ('fyelles', 1), ('John Doe', 1), ('Hellowlol', 1), ('wlfshmn', 1), ('jvale', 1), ('flippingtables', 1), ('jeroenj', 1), ('jerbob92', 1), ('jbrownbridge', 1), ('smithjw', 1), ('James Hannah', 1), ('James Hannah', 1), ('Jacksonville', 1), ('Iakrom', 1), ('georgewhewell', 1), ('BigCabbage', 1), ('fernandotakai', 1), ('tuxjobs', 1), ('Duststorm', 1), ('mannkind', 1)",75,58,
cibomahto/s3g,"Attempt at a python implementation of the s3g protocol, to speak to MakerBots.","# s3g

S3g is an attempt at implementing the MakerBot serial protocol in python. The main goal is to control some plotter devices. If it proves useful, then certainly something else could be done with it.

## Usage

For now, just some unit tests:

    python s3g_test.py

Once it can pass these, then some comms handler, etc. It's only going to support a blocking interface.

## Reference

See the [RepRap Generation 3 (s3g) Protocol Specification](https://docs.google.com/a/makerbot.com/document/d/1oq-oEogcRxJ91ex4_cJLs8bXPmWoTKJRNPz9Amh0Hb4/edit#heading=h.054a1e7d67e9)
",,2012-04-09T05:54:49Z,2012-04-17T05:25:46Z,1,1,5,4,"('cibomahto', 11)",0,0,
k4mpr3t/b4tm4n, B4TM4N ~ PHP WEBSHELL,"# B4TM4N ~ PHP WEBSHELL
![screenshot](screenshot.png ""b4tm4n sh3ll"")

## Login Account (Default)
```
Username : k4mpr3t
Password : k4mpr3t
```

## Features
```
[0] File Manager
[1] Sec. Info
[2] Simply Database
[3] Interactive terminal
[4] PHP Reverse Back Connect
[5] Run PHP Code
[6] Custom Toolz
[7] Self Script Encryptor !
[8] Error Handler
[9] Themes
```

## Self Script Encryptor
```
Usage : http://website.com/shell.php?x=self-encryptor&name=shell_encrypt.php
```
",,2018-01-27T20:38:27Z,2019-03-17T11:15:21Z,1,1,189,12,"('k4mpr3t', 37)",0,0,
dankogai/js-base64,Base64 implementation for JavaScript,"[![CI via GitHub Actions](https://github.com/dankogai/js-base64/actions/workflows/node.js.yml/badge.svg)](https://github.com/dankogai/js-base64/actions/workflows/node.js.yml)

# base64.js

Yet another [Base64] transcoder.

[Base64]: http://en.wikipedia.org/wiki/Base64

## Install

```shell
$ npm install --save js-base64
```

## Usage

### In Browser

Locally…

```html

```

… or Directly from CDN.  In which case you don't even need to install.

```html

```

This good old way loads `Base64` in the global context (`window`).  Though `Base64.noConflict()` is made available, you should consider using ES6 Module to avoid tainting `window`.

### As an ES6 Module

locally…

```javascript
import { Base64 } from 'js-base64';
```

```javascript
// or if you prefer no Base64 namespace
import { encode, decode } from 'js-base64';
```

or even remotely.

```html

// note jsdelivr.net does not automatically minify .mjs
import { Base64 } from 'https://cdn.jsdelivr.net/npm/js-base64@3.7.7/base64.mjs';

```

```html

// or if you prefer no Base64 namespace
import { encode, decode } from 'https://cdn.jsdelivr.net/npm/js-base64@3.7.7/base64.mjs';

```

### node.js (commonjs)

```javascript
const {Base64} = require('js-base64');
```

Unlike the case above, the global context is no longer modified.

You can also use [esm] to `import` instead of `require`.

[esm]: https://github.com/standard-things/esm

```javascript
require=require('esm')(module);
import {Base64} from 'js-base64';
```

## SYNOPSIS

```javascript
let latin = 'dankogai';
let utf8  = '小飼弾'
let u8s   =  new Uint8Array([100,97,110,107,111,103,97,105]);
Base64.encode(latin);             // ZGFua29nYWk=
Base64.encode(latin, true);       // ZGFua29nYWk skips padding
Base64.encodeURI(latin);          // ZGFua29nYWk
Base64.btoa(latin);               // ZGFua29nYWk=
Base64.btoa(utf8);                // raises exception
Base64.fromUint8Array(u8s);       // ZGFua29nYWk=
Base64.fromUint8Array(u8s, true); // ZGFua29nYW which is URI safe
Base64.encode(utf8);              // 5bCP6aO85by+
Base64.encode(utf8, true)         // 5bCP6aO85by-
Base64.encodeURI(utf8);           // 5bCP6aO85by-
```

```javascript
Base64.decode(      'ZGFua29nYWk=');// dankogai
Base64.decode(      'ZGFua29nYWk'); // dankogai
Base64.atob(        'ZGFua29nYWk=');// dankogai
Base64.atob(        '5bCP6aO85by+');// 'å°é£¼å¼¾' which is nonsense
Base64.toUint8Array('ZGFua29nYWk=');// u8s above
Base64.decode(      '5bCP6aO85by+');// 小飼弾
// note .decodeURI() is unnecessary since it accepts both flavors
Base64.decode(      '5bCP6aO85by-');// 小飼弾
```

```javascript
Base64.isValid(0);      // false: 0 is not string
Base64.isValid('');     // true: a valid Base64-encoded empty byte
Base64.isValid('ZA=='); // true: a valid Base64-encoded 'd'
Base64.isValid('Z A='); // true: whitespaces are okay
Base64.isValid('ZA');   // true: padding ='s can be omitted
Base64.isValid('++');   // true: can be non URL-safe
Base64.isValid('--');   // true: or URL-safe
Base64.isValid('+-');   // false: can't mix both
```

### Built-in Extensions

By default `Base64` leaves built-in prototypes untouched.  But you can extend them as below.

```javascript
// you have to explicitly extend String.prototype
Base64.extendString();
// once extended, you can do the following
'dankogai'.toBase64();        // ZGFua29nYWk=
'小飼弾'.toBase64();           // 5bCP6aO85by+
'小飼弾'.toBase64(true);       // 5bCP6aO85by-
'小飼弾'.toBase64URI();        // 5bCP6aO85by- ab alias of .toBase64(true)
'小飼弾'.toBase64URL();        // 5bCP6aO85by- an alias of .toBase64URI()
'ZGFua29nYWk='.fromBase64();  // dankogai
'5bCP6aO85by+'.fromBase64();  // 小飼弾
'5bCP6aO85by-'.fromBase64();  // 小飼弾
'5bCP6aO85by-'.toUint8Array();// u8s above
```

```javascript
// you have to explicitly extend Uint8Array.prototype
Base64.extendUint8Array();
// once extended, you can do the following
u8s.toBase64();     // 'ZGFua29nYWk='
u8s.toBase64URI();  // 'ZGFua29nYWk'
u8s.toBase64URL();  // 'ZGFua29nYWk' an alias of .toBase64URI()
```

```javascript
// extend all at once
Base64.extendBuiltins()
```

## `.decode()` vs `.atob` (and `.encode()` vs `btoa()`)

Suppose you have:

```
var pngBase64 = 
  ""iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAQAAAC1HAwCAAAAC0lEQVR42mNkYAAAAAYAAjCB0C8AAAAASUVORK5CYII="";
```

Which is a Base64-encoded 1x1 transparent PNG, **DO NOT USE** `Base64.decode(pngBase64)`.  Use `Base64.atob(pngBase64)` instead.  `Base64.decode()` decodes to UTF-8 string while `Base64.atob()` decodes to bytes, which is compatible to browser built-in `atob()` (Which is absent in node.js).  The same rule applies to the opposite direction.

Or even better, `Base64.toUint8Array(pngBase64)`.

## Brief History

* Since version 3.3 it is written in TypeScript.  Now `base64.mjs` is compiled from `base64.ts` then `base64.js` is generated from `base64.mjs`.
* Since version 3.7 `base64.js` is ES5-compatible again (hence IE11-compatible).
* Since 3.0 `js-base64` switch to ES2015 module so it is no longer compatible with legacy browsers like IE (see above)
",,2009-04-01T21:15:08Z,2024-06-16T06:07:28Z,44,37,4208,70,"('dankogai', 293), ('dankogai', 35), ('Sines', 8), ('JounQin', 4), ('amachang', 4), ('kazuho', 4), ('sylvainpolletvillard', 3), ('dallonf', 2), ('DenisCarriere', 2), ('jineshshah36', 2), ('jstayton', 2), ('sidharthv96', 2), ('neojski', 2), ('htaketani', 2), ('winzaa123', 2), ('BaluVyamajala', 1), ('busterc', 1), ('ctomacheski-evernote', 1), ('cbovis', 1), ('CDanU', 1), ('pubkey', 1), ('davido', 1), ('GauBen', 1), ('Itayp-harmonie', 1), ('jimmyhchan', 1), ('kidonng', 1), ('Leechael', 1), ('Leon Si', 1), ('mha-trustpilot', 1), ('Michsior14', 1), ('robertmassaioli', 1), ('samthor', 1), ('ohnorobo', 1), ('ScottWeinstein', 1), ('yjcxy12', 1), ('arjunyel', 1), ('drry', 1), ('foomin10', 1), ('gigimon', 1), ('gityu2013', 1), ('iManoir', 1), ('jonathanong', 1), ('liansnail', 1), ('suedar', 1)",29,26,
crper/S-NEXT,Bootstrap Admin Template; refactory && simplify (on AdminLte),"#S-NEXT
一款基于bootstrap的响应式后台主题

##**注意**:
请到**[gh-pages](https://github.com/crperlin/S-NEXT/tree/gh-pages)**分支去下载模版,修改和更新日志请看**[CHANGELOG.md](https://github.com/crperlin/S-NEXT/blob/gh-pages/CHANGLOG.md)**

###贯穿整个模版的五个必备库
- FontAwesome v4.4.0 -- 丰富的图标
- Bootstrap v3.3.5 -- 响应式框架
- jquery-2.1.4 -- 可以快速开发的JS框架
- velocity.js v1.2.3（非常快速的动画插件，很明显改善了整个模板动画的执行效率）
- s-next.js -- 整个后台模板的核心库


#为什么做！！
1. 原有模版有很多用不到的东西，比如调用谷歌的在线字体；
2. IE10+下的一些BUG没有修复．提交ISSUE没反应
3. 插件不使用bower管理,升级插件什么太麻烦
4. 原有的模版样式不够丰富,准备自行拓展
5. 原有的模版不用sass,准备自行添加进去
6. 调整一些东东更适合国内
7. 不喜欢太耦合,基本元素做成页面,插件的单独页面


#模版的特点
- 使用bower管理依赖
- 能不用插件的实现的功能，尽量不用插件
- 能用CSS实现的效果，也尽量不借助其他东东
- 尽可能的减少错误,规范的书写代码(去掉了原来模板的一些语法错误),及精简了一些冗余代码
- 用`velocity.js`改善整个模板的动画执行效率，非常明显！！
- 低级浏览器的提醒，及一些功能上的CSS HACK添加
- CDN使用国内的
- 还有一些小细节上的完善及功能添加(比如表单验证!!!`checkbox` css3美化!)
- `fastclick`并入`s-next.js` -- 解决移动端点击300ms问题


#后续可能添加的功能
-  使用gulp自动化构建
-  换肤功能
-  模块化(`webpack`或者`requirejs`)

#兼容性
1. IE9+
2. Firefox 40+
3. Chrome 30+

#目录结构
```
    │  .bowerrc
    │  bower.json
    │  box.html
    │  button.html
    │  form.html
    │  general.html
    │  icons.html
    │  index.html
    │  README.md
    │  table.html
    │  
    ├─dist
    │  ├─css
    │  │  ├─all   
    │  │  └─skins        
    │  ├─fonts     
    │  ├─img
    │  └─js
    │      └─plugins
```

#感谢
基于[**Admin-lte**](https://github.com/almasaeed2010/AdminLTE)为基础制作而成;
有个成型的模版省去了大量的时间,非常感谢作者[@Abdullah Almsaeed](https://github.com/almasaeed2010)

**有兴趣的小伙伴们`fork`一起完善吧!!应该还有相当多的地方可以继续完善的**",,2015-11-13T03:25:33Z,2015-12-23T14:54:41Z,2,1,19,2,"('crper', 6), ('unknown', 2)",0,0,
Alephbet/alephbet,AlephBet is a pure-javascript A/B (multivariate) testing framework for developers.,"# AlephBet

AlephBet is a pure-javascript A/B (multivariate) testing framework for developers.

Key Features:

* A choice of tracking backends:
  - AWS Lambda with [Lamed](https://github.com/Alephbet/lamed) (recommended)
  - Ruby on Rails with the [alephbet](https://github.com/Alephbet/alephbet-rails) rubygem (still experimental)
  - [Gimel](https://github.com/Alephbet/gimel) (no longer recommended)
* Weighted variants. See https://github.com/Alephbet/alephbet/pull/20
* user-based / cross-device experiments. See https://github.com/Alephbet/alephbet/issues/16
* Pluggable backends: event tracking (defaults to Google Universal Analytics), and storage (defaults to
  localStorage)
* Supports multiple variants and goals
* Tracks unique visitors and goal completions
* Flexible triggers
* Ideal for use with page and fragment caching
* Developer-friendly for both usage and contirbution (using npm / webpack)

## What does AlephBet mean?

Aleph (אלף) Bet (בית) are the first two letters in the Hebrew alphabet. Similar to A and B.

## Inspiration

AlephBet was heavily inspired by Optimizely (sans WYSIWYG and reporting) and
[Cohorts.js](https://github.com/jamesyu/cohorts).
The code structure and some code elements were taken from cohorts.js, with some notable changes to terminology and
built-in support for unique goals and visitor tracking.

For more detailed info about the background and rationale for creating AlephBet, please check out this [blog
post](http://blog.gingerlime.com/2015/alephbet-javascript-ab-test-framework-for-developers/)

## Screencast

[![AlephBet Screencast](https://img.youtube.com/vi/NGJ0kdsxNIc/0.jpg)](https://www.youtube.com/watch?v=NGJ0kdsxNIc&vq=hd1080)

[code snippet used on the screencast](http://codepen.io/anon/pen/xGLrRV?editors=001)

for more screencasts, tips and info, please check the [wiki](https://github.com/gingerlime/alephbet/wiki)

## Quick Start

* Make sure your Google Universal analytics is set up.
* [Download](https://github.com/gingerlime/alephbet/releases/latest) and include `alephbet.min.js` in the head section of your HTML.
* Or import it in your javascript code

```javascript
import AlephBet from ""alephbet"" # ES6 module syntax
const AlephBet = require(""alephbet"") # commonJS syntax
```

* Create an experiment:

```javascript
import AlephBet from ""alephbet"";

const button_color_experiment = new AlephBet.Experiment({
  name: 'button color',  // the name of this experiment; required.
  variants: {  // variants for this experiment; required.
    blue: {
      activate: function() {  // activate function to execute if variant is selected
        $('#my-btn').attr('style', 'color: blue;');
      }
    },
    red: {
      activate: function() {
        $('#my-btn').attr('style', 'color: red;');
      }
    }
  },
});
```

* Track goals for your experiment:

```javascript
// creating a goal
const button_clicked_goal = new AlephBet.Goal('button clicked');
$('#my-btn').on('click', function() {
  // The chosen variant will be tied to the goal automatically
  button_clicked_goal.complete();
});

// adding experiment to the goal
button_clicked_goal.add_experiment(button_color_experiment);

// alternatively - add the goal to the experiment
button_color_experiment.add_goal(button_clicked_goal);

// tracking non-unique goals, e.g. page views
const page_views = new AlephBet.Goal('page view', {unique: false});
```

* view results on your Google Analytics Event Tracking Section. The experiment name + variation will be assigned to  `actions`, and Visitors or Goals to `label`. e.g.
  - action: `button color | red`, label: `Visitors` : unique count of visitors assigned to the `red` variant.
  - `button color | blue`, `button clicked` : unique visitors clicking on the button assigned to the `blue` variant.
  - `button color | red`, `viewed page` : count of pages viewed by all visitors (not-unique) *after* the experiment started.

* **important note**: whilst Google Analytics is the *easiest* way to start playing with Alephbet, it's definitely not the best way to use it. GA starts sampling events after you reach a certain volume, and the built-in GA adapter does not support more advanced features like [cross-device tracking](https://github.com/Alephbet/alephbet/wiki/User-based-and-Cross-device-tracking). If you're serious about running A/B tests, I would urge you to consider using [Lamed](https://github.com/Alephbet/lamed), [Alephbet-Rails](https://github.com/Alephbet/alephbet-rails) or another backend instead.

## Advanced Usage

### Recommended Usage Pattern

AlephBet was meant to be used across different pages, tracking multiple goals over simultaneous experiments. It is
therefore recommended to keep all experiments in one javascript file, shared across all pages. This allows sharing goals
across different experiments. Experiments can be triggered based on a set of conditions, allowing to fine-tune the
audience for the experiments (e.g. mobile users, logged-in etc).

### Triggers

Experiments automatically start by default. However, a trigger function can be provided, to limit the audience or the
page(s) where the experiment ""kicks-off"".
```javascript
import AlephBet from ""alephbet"";

const button_color_experiment = new Alephbet.Experiment({
  name: 'button color',
  trigger: () => {
    return window.location.href.match(/pricing/);
  },
  variants: { // ...
  },
});

// triggers can be assigned to a variable and shared / re-used
const logged_in_user = function() { return document.cookie.match(/__session/); };
const mobile_browser = function() { // test if mobile browser };

const big_header_experiment = new Alephbet.Experiment({
  name: 'big header',
  trigger: () => { return logged_in_user() && mobile_browser(); },
  // ...
});
```

**NOTE**: once a user participates in an experiment, the trigger is no longer checked. See #9

### Sample size

You can specify a `sample` float (between 0.0 and 1.0) to limit the number of visitors participating in an experiment.

### Weights

Whilst `sample` will limit the entire experiment to a subset of potential participants, `weight` allows
you to apply a weighted-random selection of variants. This can be considered a first step (manual) way
to implement [Multi Armed Bandit testing](https://conversionxl.com/blog/bandit-tests/).

NOTE: Weights can be any integer value. **Do not use floats**. You can use any number, but it's probably easiest
      to treat it as a percentage, e.g. use weights of 80, 20 to allocate ~80% to one variant vs. ~20% to the other.

```javascript
import {Experiment} from ""alephbet""

const button_color_experiment = new Experiment({
  name: 'button color',  // the name of this experiment; required.
  variants: {  // variants for this experiment; required.
    blue: {
      activate: function() {  // activate function to execute if variant is selected
        $('#my-btn').attr('style', 'color: blue;');
      },
      weight: 50 // optional, can be any integer value
    },
    red: {
      activate: function() {
        $('#my-btn').attr('style', 'color: red;');
      },
      weight: 50
    }
  },
});
```

### Visitors

Visitors will be tracked once they participate in an experiment (and only once). Once a visitor participates in an
experiment, the same variant will always be shown to them. If visitors are excluded from the sample, they will be
permanently excluded from seeing the experiment. Triggers however will be checked more than once, to allow launching
experiments under specific conditions for the same visitor.

### User-based / Cross-device tracking

You can now pass a `user_id` to the experiment as an optional parameter.
This allows experiment to work across devices on a per-user basis.

```javascript
import AlephBet from ""alephbet"";

const button_color_experiment = new Alephbet.Experiment({
  name: 'button color',
  user_id: get_user_id(),  // pass over the unique user id bound to this experiment
  trigger: () => {
    // do not trigger this expeirment without a user_id
    return get_user_id() && other_condition();
  },
  variants: {  // variants for this experiment; required.
    blue: {
      activate: function() {  // activate function to execute if variant is selected
        $('#my-btn').attr('style', 'color: blue;');
      }
    },
    red: {
      activate: function() {
        $('#my-btn').attr('style', 'color: red;');
      }
    }
  },
});

// do not assign goals without a user_id
if (get_user_id()) {
  button_color_experiment.add_goal(my_goal);
}
```

Notes:

* For user-based tracking, make sure you *always* have a user_id. Do not mix visitors (without an id) and users (with an id) in the same experiment.
* Cross-device tracking only works with the [Lamed](https://github.com/Alephbet/lamed) or [Alephbet-Rails](https://github.com/Alephbet/alephbet-rails) tracking backends. It does not work with Google Analytics.

See this [Wiki page](https://github.com/Alephbet/alephbet/wiki/User-based-and-Cross-device-tracking) for more information

### Goals

Goals are uniquely tracked by default. i.e. if a goal is set to measure how many visitors clicked on a button, multiple
clicks won't generate another goal completion. Only one per visitor. Non-unique goals can be set by passing `unique: false` to the goal when creating it.

Goals will only be tracked if the experiment was launched and a variant selected before. Tracking goals is therefore
safe and idempotent (unless unique is false).

Here's a short sample of tracking multiple goals over multiple experiments:

```javascript
import AlephBet from ""alephbet"";

// main goal - button click
const button_click_goal = new AlephBet.Goal('button click');
$('#my-btn').on('click', function() {
  button_clicked_goal.complete();
});

// engagement - any click on the page
const engagement = new AlephBet.Goal('engagement');
$('html').on('click', function() {
  engagement.complete();
});

const all_goals = [button_click_goal, engagement];

// experiments
const button_color_experiment = new AlephBet.Experiment({ /* ... */ });
const buy_button_cta_experiment = new AlephBet.Experiment({ /* ... */ });

// adding all goals to experiments
_(all_goals).each(function (goal) {
  button_color_experiment.add_goal(goal);
  buy_button_cta_experiment.add_goal(goal);
});

// alternatively, you can use the add_goals method and pass it an array of goals
button_color_experiment.add_goals(all_goals);
buy_button_cta_experiment.add_goals(all_goals);
```

### Custom Tracking Adapter

AlephBet comes with a built-in Google Analytics adapter and several [adapters](../../wiki/Tips-&-Caveats#persistent-queue-adapters) with potentially better accuracy:

[Persistent Queue GA Adapter](../../wiki/Tips-&-Caveats#persistentqueuegoogleanalyticsadapter)

[Persistent Queue Keen Adapter](../../wiki/Tips-&-Caveats#persistentqueuekeenadapter)

Alephbet adapter - a generic adapter

[Lamed](https://github.com/Alephbet/lamed) adapter

[Gimel](https://github.com/Alephbet/gimel) adapter

Creating custom adapters is however very easy.

Here's an example for integrating an adapter for [keen.io](https://keen.io)

(For a more complete implementation, you should use the built-in `Alephbet.PersistentQueueKeenAdapter`)

```html



    window.keen_client = new Keen({
        projectId: ""ENTER YOUR PROJECT ID"",
        writeKey: ""ENTER YOUR WRITE KEY""
    });
    const tracking_adapter = {
        experiment_start: function(experiment, variant) {
            keen_client.addEvent(experiment.name, {variant: variant, event: 'participate'});
        },
        goal_complete: function(experiment, variant, event_name, _props) {
            keen_client.addEvent(experiment.name, {variant: variant, event: event_name});
        }
    };
    const my_experiment = new AlephBet.Experiment({
        name: 'my experiment',
        variants: { // ...
        },
        tracking_adapter: tracking_adapter,
        // ...
    });


```

### Custom Storage Adapter

Similar to the tracking adapter, you can customize the storage adapter. AlephBet uses localStorage by default, but if you want to use cookies or customize how data is persisted on the client, creating an adapter is very easy.

Here's a simple example of a cookie storage adapter with expiry of 30 days, using
[js-cookie](https://github.com/js-cookie/js-cookie):

```html


    // NOTE: using JSON stringify / parse to allow storing more complex values
    const storage_adapter = {
        set: function(key, value) {
            Cookies.set(key, JSON.stringify(value), {expires: 30});
        },
        get: function(key) {
            try { return JSON.parse(Cookies.get(key)); } catch(e) { return Cookies.get(key); }
        }
    };
    const my_experiment = new AlephBet.Experiment({
        name: 'my experiment',
        variants: { // ...
        },
        storage_adapter: storage_adapter,
        // ...
    });
 
```

### Debug mode

To set more verbose logging to the browser console, use

```javascript
import Alephbet from ""alephbet""

AlephBet.options.debug = true`
````

### Other install options

* download `alephbet.min.js` from the `dist` folder on github
* `npm install alephbet`
* `bower install alephbet`

## Analyzing results

AlephBet is built for developers, so there's no fancy interface or WYSIWYG editors. The best way to analyze the results
and determine the best variant from an experiment is to look at the raw data and calculate the statistical significance.
A couple of recommended resources:

* [Thumbtack's ABBA A/B Test Calculator](https://www.thumbtack.com/labs/abba/)
* [Evan Miller's A/B Testing tools](http://www.evanmiller.org/ab-testing/)

## Development

### Commands

* `yarn run build` - to build distribution files
* `yarn run watch` - will watch files and re-build using `jest`

## License

AlephBet is distributed under the MIT license. All 3rd party libraries and components are distributed under their
respective license terms.

```
Copyright (C) 2015 Yoav Aner

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the
rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit
persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
```
",,2015-06-04T12:34:42Z,2024-02-26T08:05:42Z,10,6,282,14,"('Yoav', 105), ('dependabotbot', 53), ('gingerlime', 21), ('joker-777', 19), ('gingerlime', 13), ('Yoav Aner', 8), ('szymansd', 7), ('zwacky', 2), ('rbalicki2', 2), ('Azd325', 1)",1,1,
facebookarchive/bAbI-tasks,Task generation for testing text understanding and reasoning,"bAbI tasks
==========

This repository contains code to generate the `bAbI tasks`__ as described in the paper
`Towards AI-Complete Question Answering: A Set of Prerequisite Toy Tasks`__.
Please cite the paper if you use this code in your work (bibtex entry `here`__).

__ http://fb.ai/babi
__ http://arxiv.org/abs/1502.05698
__ http://dblp.uni-trier.de/rec/bibtex/journals/corr/WestonBCM15

.. contents:: :depth: 2

Installation
------------

This project requires Torch to be installed. The easiest way to install Torch
is by following the installation instructions at `torch/distro`__.  To use the
library, install it with LuaRocks by running the following command from the
root directory.

.. code:: bash

   luarocks make babitasks-scm-1.rockspec

__ https://github.com/torch/distro

Usage
-----

To generate a task, run the command

.. code:: bash

    babi-tasks 

where ```` is either a class name (like ``PathFinding``) or the task
number (e.g. 19). To quickly generate 1000 examples of each task, you can use

.. code:: bash

    for i in `seq 1 20`; do babi-tasks $i 1000 > task_$i.txt; done

Tasks
-----

The tasks in ``babi/tasks`` correspond to those from the original dataset as
follows:

== ============================================= ===================
#   Task                                         Class name
== ============================================= ===================
 1  Basic factoid QA with single supporting fact WhereIsActor
 2  Factoid QA with two supporting facts         WhereIsObject
 3  Factoid QA with three supporting facts       WhereWasObject
 4  Two argument relations: subject vs. object   IsDir
 5  Three argument relations                     WhoWhatGave
 6  Yes/No questions                             IsActorThere
 7  Counting                                     Counting
 8  Lists/Sets                                   Listing
 9  Simple Negation                              Negation
10  Indefinite Knowledge                         Indefinite
11  Basic coreference                            BasicCoreference
12  Conjunction                                  Conjunction
13  Compound coreference                         CompoundCoreference
14  Time manipulation                            Time
15  Basic deduction                              Deduction
16  Basic induction                              Induction
17  Positional reasoning                         PositionalReasoning
18  Reasoning about size                         Size
19  Path finding                                 PathFinding
20  Reasoning about agent's motivation           Motivations
== ============================================= ===================

    Note: This code is a rewrite of the original code that was used to
    generate the publicly available dataset at `fb.ai/babi`__. As such, it
    is not possible to produce exactly the same dataset.
    However, we have verified that numbers obtained are very similar.

__ http://fb.ai/babi

Task flags
~~~~~~~~~~
Some tasks accept configuration flags that will change their output.

In both the ``PathFinding`` and ``Size`` the number of inference steps required
to answer the question can be changed. You can also control the number of
""decoys"" (locations that are not part of the path).

.. code:: bash

   babi-tasks PathFinding --path-length 3 --decoys 1
   babi-tasks Size --steps 3

Currently the path length plus the number of decoys has to be 5 or less.
Similarly, the number of size comparisons cannot be more than 5.

For tasks involving people moving around, the use of coreferences and
conjunctions can be controlled with the flags ``--coreference`` and
``--conjunction``. These flags take a number between 0 and 1 as an argument,
determining the fraction of the time coreferences and conjunctions are used
respectively.

.. code:: bash

   babi-tasks WhereIsActor --coreference 1.0

Tasks can also be rendered in a more symbolic manner. Use the flag ``--symbolic
true`` to enable this.::

  1 H teleport N
  2 H teleport F
  3 eval H is_in  F       2

Code Overview
-------------

Tasks are generated through simulation: We have a world containing entities_,
and actions_ that can add new entities to the world, or modify entities' states.
Simulations then just take the form of sampling actions that are valid.

We often want to ask questions that require some sort of logical inference. Some
types of inference can be re-used in multiple tasks, for example the deduction
that a person and the object they are holding are in the same place is used
several times. For this reason, some of the reasoning has been factored out: We
keep track of what the reader of a story knows about the world, and each time a
new line is read, we update this knowledge_.

What follows is a brief overview of the classes and concepts used, which should
help guide the understanding of the code.

World
~~~~~

A world is a collection of entities. Worlds can be loaded from text files such
as those found in ``babi/tasks/worlds`` using the ``world:load(filename)``
command.

.. _entities:

Entity
~~~~~~

All concepts and objects in the simulations are entities. They are effectively
Lua tables that describe the entity's properties.

Actions
~~~~~~~

Actions modify the state of the world. Each action is performed by an entity,
even actions like setting the location or size of another entity (these are
usually performed by the entity ""god"").

An action's ``is_valid`` method will test whether an action can be performed
e.g. John cannot move to the kitchen if he is already there. The ``perform``
method assumes that the action is valid, and modifies the world accordingly
i.e. it will change the location of John.

Lastly, actions can update the reader's knowledge_ of the world. For example,
if we know that John is in the kitchen, the action ""John grabs the milk""
informs the reader that the milk is in the kitchen as well.

Knowledge
~~~~~~~~~

The ``Knowledge`` class keeps track of what a reader currently knows about the
world. When actions_ are performed, the ``Action.update_knowledge`` method can
update this knowledge accordingly. For example, when ``Knowledge`` contains
the information that John is in the kitchen, the action of dropping the milk
will result in the knowledge being updated to say that the milk is in the
kitchen, and that it isn't being held by anyone.

The ``Knowledge`` class takes into account some basic logical rules. For
example, some properties are ""exclusive"" in the sense that only one value can be
true (John cannot be in the kitchen and the garden at the same time, but he can
be not in the kitchen and not in the garden at the same time). Reversely, this
means that if John is in the garden, the reader knows that he is not in the
kitchen.

We keep track of which actions gave us which pieces of information about the
world. This way, we can provide the user with the supporting facts when asking
questions.

.. _clauses:

Clause
~~~~~~

Facts about the world are expressed as clauses of the form ``(truth value,
actor, action, arguments)``. For example ``(true, john, teleport, kitchen)``
means that John moved to the kitchen, while ``(false, john, drop, milk)``
means that John did *not* drop the milk. Note that because all information
must be conveyed as actions, the sentence ""John is in the garden"" is
represented as ``(true, god, set_property, is_in, garden)``.

.. _questions:

Question
~~~~~~~~

A question is represented as a tuple of the form ``(question type, clause,
support)``.

    | 1 John is in the garden.
    | 2 Where is John?  garden  1

This story is represented as a clause, ``clause = (true, god, set_property,
john, is_in, garden)``, followed by a question, ``question = (evaluate, clause,
{1})``. A question like ""Is john in the garden?"" would instead be represented as
``question = (yes_no, clause, {1})``.

Natural language generation
~~~~~~~~~~~~~~~~~~~~~~~~~~~

After the simulation is complete, a story (task) is nothing more but a list of
clauses_ and questions_. We turn this into text using the ``stringify``
function. This function performs a simple process: It repeatedly tries to find
templates that can turn the next clause(s) or question(s) into text. It randomly
samples a template from the matching ones, and goes on to the next clause that
needs to be converted.

Templates can be selected further based on configuration (each task has a
default configuration, but they can be passed through the command line as
well). This enables turning on things like coreferences, conjunctions, etc.

References
----------

* Jason Weston, Antoine Bordes, Sumit Chopra, Tomas Mikolov, Alexander M. 
  Rush, Bart van Merriënboer, ""`Towards AI-Complete Question Answering: A Set of Prerequisite Toy
  Tasks`__"", *arXiv:1502.05698 [cs.AI]*.
* Sainbayar Sukhbaatar, Arthur Szlam, Jason Weston, Rob Fergus, ""`End-To-End
  Memory Networks`__"", *arXiv:1503.08895 [cs.NE]*.

__ http://arxiv.org/abs/1502.05698
__ http://arxiv.org/abs/1503.08895
",,2015-09-16T00:04:13Z,2019-03-27T22:23:53Z,3,3,892,76,"('jaseweston', 15), ('bartvm', 13), ('alexholdenmiller', 5)",0,0,
ygx2011/Marker_AR,Marker(b/w) AR,"# Marker_AR
This is black/white Marker AR on Mac OSX.

For MarkerLess and SLAM AR, see another project [Stereo-SLAM-AR](https://github.com/ygx2011/Stereo_SLAM_AR).

This is the demo video: http://v.youku.com/v_show/id_XMTYzODMwOTE3Mg==.html?spm=a2hzp.8253869.0.0&from=y1.7-2





",,2016-12-23T03:56:35Z,2016-12-23T05:55:31Z,2,0,8,2,"('Ying Gaoxuan', 3), ('Ying Gaoxuan', 1)",1,0,
enpeizhao/duck_db,c/c++ build a simple b+tree RDMS（利用c/c++ 开发基于B+树的小型关系型数据库 ）,"## c/c++ build a simple b+tree RDMS（利用c/c++ 开发基于B+树的小型关系型数据库 ）


开发环境：ubuntu

1. 输入`make`进行编译，输入`./duck_db`即可运行；
2. `make clean`清除文件。
3. 数据库二进制文件存的目录：./data/db.bin



[TOC]

#### 目的

> “What I cannot create, I do not understand.” – [Richard Feynman](https://en.m.wikiquote.org/wiki/Richard_Feynman)

正如这句名言，理解一个事物最好的办法就是亲自设计制作它，本文将介绍一个简单的关系型数据库系统（类似MySQL、sqlite等）的开发过程，用于理解关系型数据库基本工作原理，我称它为duck_db。

帮助界面：

![image-20180902192805872](./md_image/1.png)

主要功能特色如下：

1. 使用C/C++开发；
2. 已实现基本的CURD操作，使用控制台SQL：
   1. 新建记录（create），操作SQL：**insert db {index} {name} {age} {email};**
   2. 更新记录（update），操作语句：**update db {name} {age} {email} where id={index};**
   3. 单条读取记录（read），操作语句：**select * from db where id={index};**
   4. 范围读取（read in range），操作语句：**select * from db where id in({minIndex},{maxIndex});**
   5. 删除记录（delete），操作语句：**delete from db where id ={index};**
3. 底层使用B+树（B+ TREE）构建索引；
4. 利用二进制存储数据表；
5. 暂不支持自定义表结构，数据库表结构固定为：id，name，age，email，如图：

![image-20180902195643745](./md_image/2.png)

#### 过程

下图是sqlite的架构图：

![3](./md_image/3.gif)

参考上图，主要开发步骤如下：

1. 创建一个控制台对话交互程序（REPL：read-execute-print loop）；
2. 创建一个简单的词法分析器用来解析SQL语句；
3. 编写CURD函数实现数据库的增删改查操作；
4. 创建一个b+树索引引擎，进行数据库的索引和磁盘读写操作，数据表将以二进制的形式存储。

##### Step 1：REPL（read-execute-print loop）

使用一个字符数组（*userCommand）接受用户输入，并且不断比对关键字，用于识别SQL语句指令：

代码片段：

```c++
// REPL
void selectCommand(){
char *userCommand = new char[256];
while(true){
	// 获取用户输入
	cin.getline(userCommand,256);
	if(strcmp(userCommand,"".exit"") == 0){
		// 退出系统
		break;
    }else if(strcmp(userCommand,"".help"") == 0){
    	// 帮助
    }else if(strcmp(userCommand,"".reset"") == 0){
    	// 重置数据库
    }else if(strncmp(userCommand,""insert"",6) == 0){
    	// 插入记录
    }else if(strncmp(userCommand,""delete"",6) == 0){
    	// 删除记录	    	
    }else if(strncmp(userCommand,""select"",6) == 0){
    	// 读取记录
    }else if(strncmp(userCommand,""update"",6) == 0){
    	// 更新记录
    }else{
    	// 错误信息
    }
}

}
```
##### Step 2：词法分析器

使用sscanf函数，实现基本的SQL解析，如：

```c++
sscanf(userCommand,""insert db %d %s %d %s;"",keyIndex, insertData->name,&(insertData->age),insertData->email);
```

表示解析类似如下SQL语句，其他SQL操作类似：

```sql
insert db 3 username 28 user@gmail.com;
```

##### Step 3：表数据结构

暂不支持自定义表结构，数据库表结构固定为：id（主键），name，age，email：

```c++
struct value_t{
    char name[256]; // 姓名
    int age; // 年龄
    char email[256]; // email
};
```

##### Step 4：CURD函数原型

CURD函数原型如下，我们将稍后完善这些函数：

```c++
// 插入记录
int insertRecord();
// 删除记录
int deleteRecord();
// 搜索记录(根据索引)
int searchRecord();
// 搜索记录(范围搜索)
int searchAll();
// 更新记录
int updateRecord();
```

##### Step 5：B树和B+树

###### 一、索引

数据库一般会操作海量的数据，这些数据都是存在磁盘上的。查询是数据库的最主要功能之一，我们可以将查询的过程类比在牛津词典中查单词。我们都希望查询数据的速度能尽可能的快。

![image-20180904094621292](./md_image/5.png)

上图是《牛津高阶词典》，共收录了8万多个单词，假设我需要查询“hash”这个单词，我们有两种方式：一是从 A->H 一个个遍历；二是按图示红圈的方式先找到H，再看单词第二个字母，再看第三个......显然我们一般用的是第二种方式，而红圈内的字母即索引（index）。

MySQL官方对索引的定义为：索引（Index）是帮助MySQL高效获取数据的数据结构。提取句子主干，就可以得到索引的本质：索引是数据结构。

最基本的查询算法当然是[顺序查找](http://en.wikipedia.org/wiki/Linear_search)（linear search），这种复杂度为O(n)的算法在数据量很大时显然是糟糕的，随着计算机科学的发展，我们先后发明了[二分查找](http://en.wikipedia.org/wiki/Binary_search_algorithm)（binary search）、[二叉树查找](http://en.wikipedia.org/wiki/Binary_search_tree)（binary tree search）等算法。每种查找算法都只能应用于特定的数据结构之上，例如二分查找要求被检索数据有序，而二叉树查找只能应用于[二叉查找树](http://en.wikipedia.org/wiki/Binary_search_tree)上，但是数据本身的组织结构不可能完全满足各种数据结构（例如，理论上不可能同时将两列都按顺序进行组织），所以，在数据之外，数据库系统还维护着满足特定查找算法的数据结构，这些数据结构以某种方式引用（指向）数据，这样就可以在这些数据结构上实现高级查找算法。这种数据结构，就是索引。

![img](./md_image/6.png)

上图展示了一种可能的索引方式。左边是数据表，一共有两列七条记录，最左边的是数据记录的物理地址（注意逻辑上相邻的记录在磁盘上也并不是一定物理相邻的）。为了加快Col2的查找，可以维护一个右边所示的二叉查找树，每个节点分别包含索引键值和一个指向对应数据记录物理地址的指针，这样就可以运用二叉查找在的复杂度内获取到相应数据。

|               | Unsorted Array of rows | Sorted Array of rows | Tree of nodes                    |
| ------------- | ---------------------- | -------------------- | -------------------------------- |
| Pages contain | only data              | only data            | metadata, primary keys, and data |
| Rows per page | more                   | more                 | fewer                            |
| Insertion     | O(1)                   | O(n)                 | O(log(n))                        |
| Deletion      | O(n)                   | O(n)                 | O(log(n))                        |
| Lookup by id  | O(n)                   | O(log(n))            | O(log(n)                         |

目前大部分数据库系统及文件系统都采用B-Tree或其变种B+Tree作为索引结构，没有使用二叉查找树或其进化品种[红黑树](http://en.wikipedia.org/wiki/Red-black_tree)（red-black tree）的原因请参见这篇文章：http://www.cnblogs.com/serendipity-fly/p/9300360.html

###### 二、B树和B+树

维基百科对B树的定义为“在计算机科学中，B树（B-tree）是一种树状数据结构，它能够存储数据、对其进行排序并允许以O(log n)的时间复杂度运行进行查找、顺序读取、插入和删除的数据结构。B树，概括来说是一个节点可以拥有多于2个子节点的二叉查找树。与自平衡二叉查找树不同，B-树为系统最优化**大块数据的读和写操作**。B-tree算法减少定位记录时所经历的中间过程，从而加快存取速度。普遍运用在**数据库**和**文件系统**。”

**B树**

**B 树**可以看作是对2-3查找树的一种扩展，即他允许每个节点有M-1个子节点。

- 根节点至少有两个子节点；
- 每个节点有M-1个key，并且以升序排列；
- 位于M-1和M key的子节点的值位于M-1 和M key对应的Value之间；
- 其它节点至少有M/2个子节点；

下图是一个M=4 阶的B树：

![7](./md_image/7.png)

下面是往B树中依次插入

**6 10 4 14 5 11 15 3 2 12 1 7 8 8 6 3 6 21 5 15 15 6 32 23 45 65 7 8 6 5 4**

的演示动画：

![bb](./md_image/bb.gif)

**B+树**

**B+**树是对B树的一种变形树，它与B树的差异在于：

- 有k个子结点的结点必然有k个关键码；
- 非叶结点仅具有索引作用，跟记录有关的信息均存放在叶结点中。
- 树的所有叶结点构成一个有序链表，可以按照关键码排序的次序遍历全部记录。

如下图，是一个B+树：

![9](./md_image/9.png)

下面是往B+树中依次插入

**6 10 4 14 5 11 15 3 2 12 1 7 8 8 6 3 6 21 5 15 15 6 32 23 45 65 7 8 6 5 4**

的演示动画：

![b+](./md_image/b+.gif)

B和B+树的区别在于，B+树的非叶子结点只包含导航信息，不包含实际的值，所有的叶子结点和相连的节点使用链表相连，便于区间查找和遍历。

**B+ 树的优点在于：**

- 由于B+树在内部节点上不包含数据信息，因此在内存页中能够存放更多的key。 数据存放的更加紧密，具有更好的空间局部性。因此访问叶子节点上关联的数据也具有更好的缓存命中率。
- B+树的叶子结点都是相链的，因此对整棵树的便利只需要一次线性遍历叶子结点即可。而且由于数据顺序排列并且相连，所以便于区间查找和搜索。而B树则需要进行每一层的递归遍历。相邻的元素可能在内存中不相邻，所以缓存命中性没有B+树好。

但是B树也有优点，其优点在于，由于B树的每一个节点都包含key和value，因此经常访问的元素可能离根节点更近，因此访问也更迅速。下面是B 树和B+树的区别图：

![8](./md_image/8.png)

###### 三、MySQL的MyISAM索引和InnoDB索引

**MyISAM索引**

MyISAM引擎使用B+Tree作为索引结构，叶节点的data域存放的是数据记录的地址。下图是MyISAM索引的原理图：

![8-a](./md_image/8-a.png)



这里设表一共有三列，假设我们以Col1为主键，则上图是一个MyISAM表的主索引（Primary key）示意。可以看出MyISAM的索引文件仅仅保存数据记录的地址。

**InnoDB索引**

虽然InnoDB也使用B+Tree作为索引结构，但具体实现方式却与MyISAM截然不同。

第一个重大区别是InnoDB的数据文件本身就是索引文件。从上文知道，MyISAM索引文件和数据文件是分离的，索引文件仅保存数据记录的地址。而在InnoDB中，表数据文件本身就是按B+Tree组织的一个索引结构，这棵树的叶节点data域保存了完整的数据记录。这个索引的key是数据表的主键，因此InnoDB表数据文件本身就是主索引。

![10](./md_image/10.png)



**本文将模拟InnoDB引擎：**

因B+数实现逻辑较复杂，下面代码是函数原型，完整代码请查看文末地址：

```c++
// 构造函数
bplus_tree(const char *path, bool force_empty = false);
/* abstract operations */
// 搜索
int search(const key_t& key, value_t *value) const;
// 范围搜索
int search_range(key_t *left, const key_t &right,
                 value_t *values, size_t max, bool *next = NULL) const;
// 删除
int remove(const key_t& key);
// 新增记录
int insert(const key_t& key, value_t value);
// 更新
int update(const key_t& key, value_t value);
```
###### 四、文件IO

B+tree的叶节点data域保存了完整的数据记录。我们需要将数据存入磁盘，构建相应的函数进行文件IO操作。下面是部分代码：

```c++
/* read block from disk */
template
int map(T *block, off_t offset) const
{
    return map(block, offset, sizeof(T));
}
/* write block to disk */
template
int unmap(T *block, off_t offset) const
{
    return unmap(block, offset, sizeof(T));
}
```

##### Step 6：完善CURD函数，初始化系统

以插入记录函数（C操作）为例：

```c++
// insert
int insertRecord(bplus_tree *treePtr,int *index, value_t *values){
	bpt::key_t key;
    //转换格式
	intToKeyT(&key,index);
	return (*treePtr).insert(key, *values);
}
```

函数参数分别为`bplus_tree *treePtr,int *index, value_t *values`，分别为B+树指针，索引指针，插入记录的参数指针。

再建立一个启动函数`initialSystem() ` 给 `main()` 调用：

```C++
// 创建一个B+树指针
bplus_tree *duck_db_ptr;
// initial
void initialSystem(){
	// step 1 : 打印帮助信息
	printHelpMess();
	// step 2 : 从文件初始化B+树，如果磁盘没有文件，将自动创建新的
	bplus_tree duck_db(dbFileName, (!is_file_exist(dbFileName)));
    // 传递地址给指针
	duck_db_ptr = &duck_db;
	// step 3 : 进入REPL SQL命令解析程序(insert,delete,update,search)
	selectCommand();
}
```

main函数

``` c++
int main(int argc, char *argv[])
{
    // 启动系统
	initialSystem();
}
```

#### 测试

使用[rspec](http://rspec.info/)测试duck_db，我们将插入5000条数据：

```ruby
it 'inserting test ' do
  script = (1..5000).map do |i|
    ""insert db #{i} user#{i} #{i*12} person#{i}@example.com""
  end
  script << "".exit""
  result = run_script(script)
  expect(result.last(2)).to match_array([
    "">insert"",
    ""> bye!"",
  ])
end
```

输入`bundle exec rspec`，结果如下：

![image-20180906161404599](./md_image/12.png)

共耗时28.71秒，平均插入每条记录需要0.005742秒，并产生了5.1MB的数据文件：

![image-20180906161613057](./md_image/13.png)

随机查询一条数据：

![image-20180906162224569](./md_image/14.png)

![image-20180906162308633](./md_image/15.png)

打印一个范围：

![image-20180906162543967](./md_image/16.png)

更新一条id=2634的记录：

![image-20180906162915686](./md_image/17.png)

删除id=4265的记录：

![image-20180906163031482](./md_image/18.png)

#### 评价

duck_db利用B+树实现了数据库基本的CURD操作，但是距离真实可用的数据库还有很大的差距，比如：

1. 无法创建自定义表；
2. 不支持事物处理，IO优化；
3. 不支持远程登录数据库，只可以本地使用；
4. CURD高级功能如函数，约束，连表操作等不支持；
5. 更多高级特性等。

#### 完整代码

项目代码已托管至GitHub：https://github.com/enpeizhao/duck_db

","'bplustree', 'database', 'innodb', 'myisam', 'sqlite', 'tutorial'",2018-09-06T08:41:36Z,2020-08-04T13:28:45Z,1,1,465,6,"('enpeizhao', 11)",0,0,
timelyportfolio/rCharts_time_series,Quick Summary of R's History of Time Series Charting,,,2013-06-14T19:00:00Z,2013-08-05T13:43:48Z,3,3,76,9,"('timelyportfolio', 22), ('phillip-burger-sculpturearts', 2), ('reinholdsson', 1)",1,1,
tapilab/is-karthikbmk,karthikbmk's independent study,"# Text Summarization using Deep Learning and Ridge Regression

![summ](https://github.com/tapilab/is-karthikbmk/blob/master/src/Others/summ.png)

## Problem

Develop Models to Summarize long documents.

## Research questions

1.What are the relevant features for summarization?  
2.How to tune the Hyper-parameters for a given model?  
3.Which model works best for summarization?  
4.How to stich together multiple sentences for summarization?  

## Related work

Here's how other people have tried to solve this problem:  

1. Query-Oriented Multi-Document Summarization via Unsupervised Deep Learning 
http://www.aaai.org/ocs/index.php/AAAI/AAAI12/paper/view/5058 

2. Ranking with Recursive Neural Networks and Its Application to Multi-document Summarization:  
http://www.aaai.org/ocs/index.php/AAAI/AAAI15/paper/download/9414/9520

3. Reader-Aware Multi-Document Summarization via Sparse Coding:  
www.aaai.org/ocs/index.php/IJCAI/IJCAI15/paper/download/11398/10841

## Data

DUC 2001 dataset will be used to build the initial model.Here is an example data record:


 LA021090-0005 
 174161 


February 10, 1990, Saturday, Home Edition 




Metro; Part B; Page 6; Column 4; Op-Ed Desk 




873 words 




GUN NUTS HAVE A REAL POINT; 


CONSTITUTION: THE CLIMATE MAY NOW BE RUNNING IN FAVOR OF MORE RESTRICTIONS, 
INCLUDING A BAN ON HANDGUNS. BUT THERE'S STILL THE SECOND AMENDMENT. 




By MICHAEL KINSLEY, Michael Kinsley writes the TRB column for The New Republic. 




Around the world, national theologies are crumbling: communism, apartheid and, 
here in America, the worship of guns -- to foreigners, the single craziest 
thing about us. 


Do you sense an outbreak of sanity about gun control? I do. There was retired 
Chief Justice Warren Burger preaching sacrilege on the cover of Parade magazine 
a couple of weeks ago. A Time Magazine/Cable News Network poll reports that 87% 
of gun owners themselves favor a seven-day waiting period for handgun 
purchases; three-quarters favor registration of semi-automatic weapons and 
handguns, and half favor registration of rifles and shotguns. 


Unfortunately, there is the Second Amendment to the Constitution: ""A well 
regulated militia, being necessary to the security of a free State, the right 
of the people to keep and bear arms, shall not be infringed."" 


Most right thinkers take comfort in that funny stuff about the militia. Since 
the amendment's stated purpose is arming state militias, they reason, it 
creates no individual right to own a gun. That reasoning is good enough for the 
ACLU. But would civil-libertarians be so stinting about an amendment they felt 
more fond of? Say, the First? 


The purpose of the First Amendment's free-speech guarantee was pretty clearly 
to protect political discourse. But liberals reject the notion that free speech 
is therefore limited to political topics, even broadly defined. True, that 
purpose is not inscribed in the amendment itself. But why leap to the 
conclusion that a broadly worded constitutional freedom (""the right of the 
people to keep and bear arms"") is narrowly limited by its stated purpose, 
unless you're trying to explain it away? A colleague says that if liberals 
interpreted the Second Amendment the way they interpret the rest of the Bill of 
Rights, there would be law professors arguing that gun ownership is mandatory. 


The most thorough parsing of the Second Amendment is a 1983 article in the 
Michigan Law Review by Don Kates, a gun enthusiast. Kates expends most energy 
demonstrating that at the time of the Bill of Rights, all able-bodied men were 
considered to be part of the ""militia"" and were expected to defend the state if 
necessary. I'm not sure this is as clinching an argument as Kates seems to 
think. The fact that once upon a time everyone was a member of the militia 
doesn't prove that everyone still has a right to a gun even after the 
composition of the militia has changed. 


But Kates has other bullets in his belt. The phrase ""right of the people"" 
appears four other times in the Bill of Rights (including the First Amendment). 
In all these other cases, everyone agrees that it creates a right for 
individual citizens, not just some collective right of states as a whole. Kates 
also marshals impressive historical evidence that the Second Amendment, like 
other Bill of Rights protections, was intended to incorporate English common 
law rights of the time, which pretty clearly included the right to keep a gun 
in your home for reasons having nothing to do with the militia. 


If there is a good reply to Kates's fusillade, the controllers haven't made it. 
Of course the existence of an individual right to own guns doesn't mean that it 
is absolute. What are the limits? In the Supreme Court's one 20th-Century 
treatment of the Second Amendment, it held somewhat ambiguously in 1939 that 
sawed-off shotguns aren't necessarily protected by the Constitution without 
proof that they are the kind of weapon a militia might have used. 


Working from that decision and the common law, Kates says the amendment's 
protection should be limited to weapons ""in common use among law-abiding 
people,"" useful for law enforcement or personal defense, and lineally descended 
from weapons known to the Framers. (No nuclear bombs.) He adds that they must 
be light enough for an ordinary person to carry (""bear""), and even that they 
can't be especially ""dangerous or unusual."" He says that the amendment places 
no limit on mandatory registration or laws against concealed weapons in public. 


This list seems quite reasonable and moderate, though where it all comes from 
is not clear. In suggesting, for example, that it would be fine to ban 
automatic rifles but not semi-automatics, Kates is slicing the constitutional 
salami pretty thin. But in what I suspect was the main purpose of his exercise 
-- establishing that a flat ban on handguns would be hard to justify under the 
Constitution -- Kates builds a distressingly good case. 


The downside of having a Bill of Rights is that the protection of individual 
rights usually entails social costs. This is as true of the Second Amendment as 
it is of the First, Fourth, Fifth and Sixth. The downside of having those 
rights inscribed in a Constitution, protected from the whims of majority rule, 
is that they can't be re-defined as life changes. It would be remarkable indeed 
if none of the Bill of Rights became less sensible and more burdensome with 
time. 


Talking and writing are as central to American democracy as they ever were; 
shooting just isn't. Gun nuts are unconvincing (at least to me) in their 
attempts to argue that the individual right to bear arms is still as vital to 
freedom as it was in 1792. But the right is still there. 




Opinion 




## Methods

1. Extract Features. This will be X_train
2. Compute ROGUE score for every sentence across all the documents. This is will be y_train
3. This is now a Regression problem. Use Ridge as the initial Baseline Model  
4. Predict using the Model 
5. Select Sentences for Summarization based on a Salience Function 
6. Evaluate and Tune the Model
7. Repeat steps 4,5,6 with Deep Models
8. Identify the Best Model
9. Generate Summaries using the Best Model


## Validation Errors

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/ridge.png)

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/adam_logistic.png)

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/adam_tanh.png)

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/sgd_logistic.png)

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/sgd_tanh.png)

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/lbfgs_logistic.png)

![Ridge](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/lbfgs_tanh.png)

## Test Accuracy:  
![Test](https://github.com/tapilab/is-karthikbmk/blob/master/src/Results/Test.png)

## Sample Summaries : 

### Predicted Summary for doc 1 : 
Second Amendment states (1791): ""A well regulated militia, being necessary to 
the security of a free State, the right of the people to keep and bear Arms, 
shall not be infringed.""


### Real Summary for doc 1: 
The Second Amendment to the Constitution reads: ""A well regulated militia, being necessary to the security of a free state, the right of the people to keep and bear arms shall not be infringed"". The Second Amendment was originated by some of the states as protection against the federal government. The word ""people"" is used collectively and refers to a political entity such as a state. The Supreme Court on several occasions in the past has ruled that this amendment did not create a federally- protected right of individuals to bear arms but rather, limited the power of the federal government.


### Predicted Summary for doc 2 : 
Johnson testified this week at a Canadian inquiry that his seven-year 
involvement with illegal performance-enhancing drugs included injections before 
the 1987 World Championships in Rome, where he set the existing world record of 
9.83 seconds.


### Real Summary for doc 2 : 
US track and field officials said that Johnson should be stripped of his world record in the 100 meter dash. Johnson testified at a Canadian inquiry that he had been involved with illegal performance-enhancing drugs for seven years and had injections before he set the world record in the 1987 World Championship in Rome. His coach and physician had also testified at the inquiry. Carl Lewis said that while Johnson had not told the truth earlier, he was doing so now and speaking out against drugs and should be allowed back in the sport after he finishes his suspension.


### Predicted Summary for doc 3 : 
Exxon Corp. on Wednesday increased its estimate of the total 1989 costs of 
cleaning up the massive Alaskan oil spill to $2 billion and said it would take 
another $500-million charge in the fourth quarter to cover costs from what is 
now the most expensive environmental disaster in history.


### Real Summary for doc 3 : 
Exxon increased its estimate of the 1989 costs of cleaning up the most expensive environmental disaster in history to $2B and it could take another $500M. Exxon noted that these costs were the major reason for their lower net income for the year, but analysts said that Exxon's size would insulate it from serious long-term financial damage. Exxon's stock has lagged behind that of major oil firms and Exxon could suffer from continuing negative publicity from the Valdez spill and the subsequent heating oil spill into a waterway between New York and New Jersey.

### Predicted Summary for doc 4 : 
Reforestation would give wooded areas in Yellowstone a ""five-year jump"" on natural regrowth of the woods and would ""get it green again,"" says John Davis, Willamette Industries Inc.'s general manager for Western timber logging operations in Lewiston, Idaho.


### Real Summary for doc 4 : 
Following the worst fire on record in Yellowstone National Park, biologist, Donald Despain examines the forest looking for signs of new life. By next spring, many seeds released from rock-hard pine cones will be fertilized by nutrients leaching into the soil from the now-packed ash, will sprout. Grasses and several types of wildflowers are already sprouting less than seven weeks after the fire. Next year, the ground cover replacing the park's burnt stands of aging lodgepole pines should provide a 30-fold increase in plant species. The new growth will attract a larger variety of birds and other animal life to the area.


### Predicted Summary for doc 5 : 
The director of the county Social Services Agency wants all Orange County 
residents, including illegal aliens, to be counted in the 1990 Census, and he 
will ask the Board of Supervisors to support his position.


### Real Summary for doc 5 : 
The Social Services director in Orange County wants all residents in the county to be counted in the 1990 Census. He will ask the Board of Supervisors to pass a resolution supporting his position. If the approximate 200,000 illegal aliens were not counted, the county would loose an estimated $56 million a year in federal revenue and lose representatives in Congress. On Thursday, the U.S. Senate and House agreed that illegal aliens should be counted. Before Thursday, the Senate had voted to bar the Census Bureau from counting illegal aliens. The House had twice rejected efforts to exclude aliens.


## Conclusions / Future Work

Here's the main conclusions and a list of directions for improvement.

1. Generate the summary instead of extracting it
2. Train on all the DUC Datasets - DUC 2002, 2003....2006  
3. Regularize the Deep Models using Dropout. 
4. Learn the Features from Text instead of Hand-Crafting it 
5. Work on Query Relevant Summarization
",,2016-03-30T14:50:21Z,2017-09-02T06:15:48Z,2,2,11,4,"('karthikbmk', 94), ('aronwc', 2)",0,0,
szwacz/electron-boilerplate,Boilerplate application for Electron runtime,"# electron-boilerplate

**This repository is no longer in active maintenance.**

---

Minimalistic, very easy to understand boilerplate for [Electron runtime](https://www.electronjs.org/). Tested on Windows, macOS and Linux.  

This project contains only bare minimum of tooling and dependencies to provide you with simple to understand and extensible base (but still, this is fully functional Electron environment). The boilerplate doesn't impose on you any frontend technologies, so feel free to pick your favourite.

# Quick start

Make sure you have [Node.js](https://nodejs.org) installed, then type...
```
git clone https://github.com/szwacz/electron-boilerplate.git
cd electron-boilerplate
npm install
npm start
```
...and you have a running desktop application on your screen.

# Structure of the project

The application consists of two main folders...

`src` - files within this folder get transpiled or compiled (because Electron can't use them directly).

`app` - contains all static assets which don't need any pre-processing and can be used directly.

The build process compiles the content of the `src` folder and puts it into the `app` folder, so after the build has finished, your `app` folder contains the full, runnable application. Treat `src` and `app` folders like two halves of one bigger thing.

The drawback of this design is that `app` folder contains some files which should be git-ignored and some which shouldn't (see `.gitignore` file). But this two-folders split makes development builds much faster.

# Development

## Starting the app

```
npm start
```

## The build pipeline

Build process uses [Webpack](https://webpack.js.org/). The entry-points are `src/main.js` and `src/app.js`. Webpack will follow all `import` statements starting from those files and compile code of the whole dependency tree into one `.js` file for each entry point.

[Babel](http://babeljs.io/) is also utilised, but mainly for its great error messages. Electron under the hood runs latest Chromium, hence most of the new JavaScript features are already natively supported.

## Environments

Environmental variables are done in a bit different way (not via `process.env`). Env files are plain JSONs in `config` directory, and build process dynamically links one of them as an `env` module. You can import it wherever in code you need access to the environment.
```js
import env from ""env"";
console.log(env.name);
```

## Adding npm modules to your app

Remember to respect the split between `dependencies` and `devDependencies` in `package.json` file. Your distributable app will contain only modules listed in `dependencies` after running the release script.

*Side note:* If the module you want to use in your app is a native one (not pure JavaScript but compiled binary) you should first  run `npm install name_of_npm_module` and then `npm run postinstall` to rebuild the module for Electron. You need to do this once after you're first time installing the module. Later on, the postinstall script will fire automatically with every `npm install`.

# Testing

Run all tests:
```
npm test
```

## Unit

```
npm run unit
```
Using [electron-mocha](https://github.com/jprichardson/electron-mocha) test runner with the [Chai](http://chaijs.com/api/assert/) assertion library. You can put your spec files wherever you want within the `src` directory, just name them with the `.spec.js` extension.

## End to end

```
npm run e2e
```
Using [Mocha](https://mochajs.org/) and [Spectron](http://electron.atom.io/spectron/). This task will run all files in `e2e` directory with `.e2e.js` extension.

# Making a release

To package your app into an installer use command:
```
npm run release
```

Once the packaging process finished, the `dist` directory will contain your distributable file.

[Electron-builder](https://github.com/electron-userland/electron-builder) is handling the packaging process. Follow docs over there to customise your build.

You can package your app cross-platform from a single operating system, [electron-builder kind of supports this](https://www.electron.build/multi-platform-build), but there are limitations and asterisks. That's why this boilerplate doesn't do that by default.
",,2015-04-25T09:16:40Z,2022-12-27T15:03:51Z,45,41,3128,108,"('szwacz', 326), ('black-snow', 23), ('rodrigok', 13), ('romannekhor', 10), ('misteral', 8), ('brandonhamilton', 5), ('ingro', 4), ('pkunze', 3), ('idleberg', 3), ('Blaine Schmeisser', 3), ('Schultzer', 3), ('antoinepairet', 3), ('alexdevero', 3), ('anubhavsahoo', 2), ('carlosperate', 2), ('eisenkolb', 2), ('plrthink', 2), ('lazamar', 2), ('jonatasfreitasv', 2), ('tkdave', 2), ('danschultzer', 2), ('RichLewis007', 1), ('simonsarris', 1), ('Thom-x', 1), ('turadg', 1), ('Tysen Moore', 1), ('tyv', 1), ('zeke', 1), ('crucialfelix', 1), ('high5', 1), ('coskuntekin', 1), ('mkostas', 1), ('orthographic-pedant', 1), ('pcewing', 1), ('OwenBrotherwood', 1), ('markmont', 1), ('marcelocg', 1), ('kylewest', 1), ('jsumners', 1), ('Jake Dsouza', 1), ('jpedius', 1), ('huyhong', 1), ('denysvitali', 1), ('bradvogel', 1), ('Alfonso M. García Astorga', 1)",24,21,
BehaviorTree/BehaviorTree.CPP,Behavior Trees Library in C++. Batteries included.,"![License MIT](https://img.shields.io/github/license/BehaviorTree/BehaviorTree.CPP?color=blue)
![Version](https://img.shields.io/badge/version-4.6-blue.svg)
[![conan Ubuntu](https://github.com/BehaviorTree/BehaviorTree.CPP/actions/workflows/cmake_ubuntu.yml/badge.svg)](https://github.com/BehaviorTree/BehaviorTree.CPP/actions/workflows/cmake_ubuntu.yml)
[![conan Windows](https://github.com/BehaviorTree/BehaviorTree.CPP/actions/workflows/cmake_windows.yml/badge.svg)](https://github.com/BehaviorTree/BehaviorTree.CPP/actions/workflows/cmake_windows.yml)
[![ros1](https://github.com/BehaviorTree/BehaviorTree.CPP/workflows/ros1/badge.svg?branch=master)](https://github.com/BehaviorTree/BehaviorTree.CPP/actions?query=workflow%3Aros1)
[![ros2](https://github.com/BehaviorTree/BehaviorTree.CPP/workflows/ros2/badge.svg?branch=master)](https://github.com/BehaviorTree/BehaviorTree.CPP/actions?query=workflow%3Aros2)
[![pixi (Conda)](https://github.com/BehaviorTree/BehaviorTree.CPP/actions/workflows/pixi.yaml/badge.svg)](https://github.com/BehaviorTree/BehaviorTree.CPP/actions/workflows/pixi.yaml)

# BehaviorTree.CPP 4.6



This  __C++ 17__ library provides a framework to create BehaviorTrees.
It was designed to be flexible, easy to use, reactive and fast.

Even if our main use-case is __robotics__, you can use this library to build
__AI for games__, or to replace Finite State Machines.

There are few features which make __BehaviorTree.CPP__ unique, when compared to other implementations:

- It makes __asynchronous Actions__, i.e. non-blocking, a first-class citizen.

- You can build __reactive__ behaviors that execute multiple Actions concurrently (orthogonality).

- Trees are defined using a Domain Specific __scripting language__ (based on XML), and can be loaded at run-time; in other words, even if written in C++, the morphology of the Trees is _not_ hard-coded.

- You can statically link your custom TreeNodes or convert them into __plugins__
and load them at run-time.

- It provides a type-safe and flexible mechanism to do __Dataflow__ between
  Nodes of the Tree.

- It includes a __logging/profiling__ infrastructure that allows the user
to visualize, record, replay and analyze state transitions.

## Documentation and Community

You can learn about the main concepts, the API and the tutorials here: https://www.behaviortree.dev/

If the documentation doesn't answer your questions and/or you want to
connect with the other **BT.CPP** users, visit [our forum](https://github.com/BehaviorTree/BehaviorTree.CPP/discussions)

# GUI Editor

Editing a BehaviorTree is as simple as editing an XML file in your favorite text editor.

If you are looking for a more fancy graphical user interface (and I know you do) check
[Groot2](https://www.behaviortree.dev/groot) out.

![Groot screenshot](docs/groot-screenshot.png)

# How to compile

**BT.CPP** requires a compile that supports c++17.

Three build systems are supported:

- **catkin**, if you use ROS
- **colcon (ament)**, if you use ROS2
- **conan** otherwise (Linux/Windows).
- **straight cmake** if you want to be personally responsible for dependencies :)

Compiling with [conan](https://conan.io/):

Assuming that you are in the **parent** directory of `BehaviorTree.CPP`:

```
mkdir build; cd build
conan install ../BehaviorTree.CPP --output-folder=. --build=missing
cmake ../BehaviorTree.CPP -DCMAKE_TOOLCHAIN_FILE=""conan_toolchain.cmake""
cmake --build . --parallel
```

If you have dependencies such as ZeroMQ and SQlite already installed and you don't want to
use conan, simply type:

```
mkdir build; cd build
cmake ../BehaviorTree.CPP
cmake --build . --parallel
```

If you want to build in a [pixi](https://pixi.sh/) project (conda virtual environment).
```
pixi run build
```

If you want to use BT.CPP in your application, please refer to the
example here: https://github.com/BehaviorTree/btcpp_sample .

# Commercial support

Are you using BT.CPP in your commercial product and do you need technical support / consulting?
You can contact the primary author, **dfaconti@aurynrobotics.com**, to discuss your use case and needs.

# Star History

[![Star History Chart](https://api.star-history.com/svg?repos=BehaviorTree/BehaviorTree.CPP&type=Date)](https://star-history.com/#BehaviorTree/BehaviorTree.CPP&Date)

## Previous version

Version 3.8 of the software can be found in the branch
[v3.8](https://github.com/BehaviorTree/BehaviorTree.CPP/tree/v3.8).

That branch might receive bug fixes, but the new features will be implemented
only in the master branch.

# License

The MIT License (MIT)

Copyright (c) 2019-2023 Davide Faconti

Copyright (c) 2018-2019 Davide Faconti, Eurecat

Copyright (c) 2014-2018 Michele Colledanchise

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
","'ai', 'behaviortree', 'coordination', 'games', 'robotics', 'ros', 'state-machine'",2018-10-16T16:19:58Z,2024-06-06T09:15:40Z,121,107,2771,72,"('facontidavide', 775), ('Davide Faconti', 264), ('miccol', 107), ('Davide Faconti', 23), ('daf@blue-ocean-robotics.com', 13), ('ewerlopes', 12), ('Gaël Écorchard', 8), ('tony-p', 7), ('Davide Faconti', 6), ('SubaruArai', 6), ('asasine', 6), ('miccol', 5), ('galou', 5), ('unvestigate', 4), ('renan028', 4), ('schornakj', 4), ('alsora', 4), ('OPerepadia', 3), ('imgbotbot', 3), ('goekce', 3), ('fultoncjb', 3), ('benjinne', 3), ('Victor Lopez', 3), ('uilianries', 3), ('seanyen', 3), ('robin-mueller', 3), ('Masadow', 3), ('sarcasticnature', 3), ('cmcghan', 3), ('shkwon98', 2), ('HansRobo', 2), ('Tradias', 2), ('FabianSchurig', 2), ('fmros', 2), ('Michael Jeronimo', 2), ('LoyVanBeek', 2), ('keenanjohnson', 2), ('Jesus05', 2), ('ImgBotApp', 2), ('griswaldbrooks', 2), ('daniel-serrano', 2), ('luminize', 2), ('adlarkin', 2), ('Affonso-Gui', 2), ('aayn', 2), ('', 2), ('sea-bass', 1), ('skasperski', 1), ('Rid0n', 1), ('0xfizzy', 1), ('sidyhe', 1), ('Steffen Groot', 1), ('SteveMacenski', 1), ('taehyeon4', 1), ('seanng-1', 1), ('Sarath18', 1), ('ross-weir', 1), ('robodrome', 1), ('pcouvignou-irobot', 1), ('peterpolidoro', 1), ('perara', 1), ('paulbovbel', 1), ('5730289021-NN', 1), ('nzlz', 1), ('swarajpeppermint', 1), ('s-trinh', 1), ('panwauu', 1), ('muritane', 1), ('matthews-jca', 1), ('hlzl', 1), ('l3enQ', 1), ('amangiat88', 1), ('umhan35', 1), ('liangyuwei', 1), ('Yadunund', 1), ('Wuqiqi123', 1), ('zflat', 1), ('vicmassy', 1), ('ValerioMagnago', 1), ('happykeyboard', 1), ('Tobias-Fischer', 1), ('QQting', 1), ('Timple', 1), ('Davide Faconti', 1), ('kant', 1), ('wep21', 1), ('onionsflying', 1), ('RavenX8', 1), ('chhtz', 1), ('ct2034', 1), ('makokal', 1), ('BartKeulen', 1), ('Bart Keulen', 1), ('AndyZe', 1), ('ana-GT', 1), ('Kucukcollu', 1), ('AlexisTM', 1), ('Ace314159', 1), ('Aglargil', 1), ('aboseley', 1), ('Aposhian', 1), ('3wnbr1', 1), ('MithunKinarullathil', 1), ('msadowski', 1), ('MarqRazz', 1), ('farshbafdoustar', 1), ('LucasNolasco', 1), ('Luca Bonamini', 1), ('imere', 1), ('jorgectf', 1), ('artivis', 1), ('JafarAbdi', 1), ('indraneelpatil', 1), ('hsmin99', 1), ('homalozoa', 1), ('aufheben1', 1), ('doisyg', 1), ('fmrico', 1), ('vignif', 1), ('gramss', 1), ('Ferran Roure', 1)",75,70,
DanWahlin/Angular-BareBones,Angular and TypeScript Bare Bones Project,"# Angular and TypeScript Bare Bones Project

The Bare Bones project is an Angular starter project that has the npm modules, 
configuration, scripts, folders and routing in place.

Here's what is in the project:

* Angular scripts and TypeScript configuration are ready to go
* Angular bootstrapper wired up to the app component
* App component with basic routing applied
* Homepage component 
* A single ""feature"" component (represents a custom feature your app would have)
* A simple data service to provide data and show dependency injection
* Routing between the homepage and the ""feature""
* Bootstrap for CSS

It's a minimal app intended to get you up and running quickly so the rest is up to you!

If you're using VS Code, install my [Angular code snippets](https://blog.codewithdan.com/2017/04/01/angular-2-typescript-and-html-snippets-for-vs-code/) 
to simplify the process of writing Angular code. The code snippets make it easy
to build Angular components, services, pipes, directives and more.


## Running the Application

1. Install [Node.js](http://nodejs.org)

1. Install the Angular CLI:

    `npm install -g @angular/cli`

1. Run `npm install` to install app dependencies

1. Run `ng serve -o` to start the server and launch the app
",,2016-03-22T00:20:17Z,2018-10-23T05:18:46Z,4,1,150,20,"('DanWahlin', 55), ('Dan Wahlin', 26), ('Dan Wahlin', 6), ('Dan Wahlin', 1)",1,0,
aztack/G2B,A Google Map API to Baidu Map API Adapter,"Google Map to Baidu Map 迁移工具说明
====================================

0) 变更记录
===========

version 0.1

- 修正GLatLngBounds无参数初始化加了坐标偏移的问题
- 增加GIcon拷贝构造时更新image,iconSize,iconAnchor,infoWindowAnchor属性到实现
- 修正GMarker构造时options的icon属性没有正确设置的问题
	
2011-06-29

- 构造GMarker时传入的option支持zIndexProcess,但只在构造时调用一次，并设置marker的zIndex
- 增加GMapType,但是用户不能主动创建该类实例
- 修复GDirection.loadFromWaypoints连续调用不清除上一次结果的问题
	
2011-08-02

- 2011年07月29日 API 1.2 Map增加mouseover和mouseout事件,做相应的修改
- 修复map,marker事件部分的bug

1) G2B介绍
==========

G2B是一个'个人的','实验性质'的工程
G2B是什么?
----------

G2B是一个适配层脚本。它使用百度地图API实现了“部分”谷歌地图API的接口
通过加载G2B脚本,用户可以通过无需或少量修改已有map应用,做到从google map api
迁移到baidu map api

G2B不是什么?
------------

G2B不是完整的谷歌地图API的实现。由于谷歌地图API的接口类、函数非常多。
在编写G2B时无法一一实现。所以采用了“案例驱动”的编写模式：逐个实现

[Google API V2 Examples](http://code.google.com/apis/maps/documentation/javascript/v2/examples/index.html)

中的实例功能。目前已经支持“去哪儿”网地图应用的迁移。

G2B实现难点
-----------

适配层编写的困难指出就是要处理上下两层(google map api和baidu map api)之间的差异。
具体体现在坐标系统、事件处理、框架结构方面。

2) G2B的实现
============

为什么没有选择继承?
-------------------

最初的确尝试过通过继承BMap中对应类，并重写部分函数的实现方法。
但是这种方法有个明显的问题：名字冲突。比如
GLatLng中有两个方法用于获得对应的经纬度坐标值lng()和lat()。
但是在对应的BMap.Point中lng和lat是两个属性。
所以放弃了这种实现方法
	
实现方法
--------

最终G2B选择了聚合的实现方式：将具体实现保存在一个名为_impl的属性中。
然后在实现的谷歌接口函数中调用_impl中对应的方法。
	
Klass帮助类 - 元编程
--------------------

百度地图API和谷歌地图API中存在很多函数名和功能完全一致或相似的情况。
为了避免大量重复代码，并能做到同意修改。在G2B前面部分实现了一个名为Klass
的帮助类。比如如果某个类的函数名和语义完全一样。那么调用Klass的same方法自动生成
一个同名函数绑定到对_impl的调用上。如toString方法:
		
```javascript
Klass(""GLatLng"",function(lat,lng),[BMap.Point])
.same(""toString"")
.end();
```
			
其中GLatLng为要实现的谷歌接口。后面接构造函数；第三个参数标明该接口对应百度地图
API中的BMap.Point。然后二者有一个名字和功能相同的函数“toString”；end表示定义结束。

当二者有功能相同但是名字不同的函数时，可以使用alias来声明别名:
		
```javascript
Klass(""GMarker"",function(...){...},[])
.alias(""openInfoWindowHtml"",""openInfoWindow"")
.end();
```
		
上面代码中，openInfoWindow是BMap.Marker的方法，它和GMarker的openInfoWindowHtml功能相同.

当百度地图API没有对应实现时（比如GMap.enableRotation），那么使用noimpl标明没有对应实现.
		
事件
----

谷歌地图和百度地图采用了完全不同的事件注册机制。前者使用GEvent注册事件处理函数。
后者采用与W3C标准一致的addEventListener/removeEventListener方法注册、注销事件处理函数
在G2B中实现了一个与GEvent功能一样的对象。
	
事件派发
--------

由于实现的差异，二者的事件处理函数的参数完全不同。为了适配这个差异，G2B在调用事件处理函数
之前进行了“翻译”。详见EVENT_SINGNATUR和translateEventArgs。
目前只实现了必要的几个核心类的事件处理。
translateEventArgs抽象了这些类的事件的共同处。是一个泛化的处理函数。如果今后需要增加
更多的事件翻译，可以通过直接判断对象和事件的类型调用相应的翻译代码进行翻译。
		
常量定义
--------

使用Const函数定义常量:Const(""Const_Name"",value);
		
坐标偏移
--------
目前坐标偏移采用线性偏移。

进行偏移的原则是：

* 所有进入GXXX函数的坐标都认为是谷歌坐标。进入函数后用TO_BLNG和TO_BLAT转换为百度坐标。
* 所有传出GXXX函数的坐标都认为是谷歌坐标。返回之前用TO_GLNG和TO_GLAT转换为谷歌坐标
* 在G2B的实现函数内部，对_impl之间的调用不需要转换，都是百度坐标

用于预处理器生成不同的代码（可选）
---------------------------------

默认情况下TO\_BLNG/TO\_BLAT/TO\_GLNG/TO\_GLAT都是函数。
如果传入的参数全部已经预先转换为百度坐标（也就是说不需要进行线性偏移）
那么可以将上述几个函数改写为直接返回传入的参数不进行偏移。
为了避免这个无意义的函数调用的开销。可以打开给g2b.h中的

```c
#define __GOOGLE__
```
然后按照g2b.o.js头部的命令用c++预处理器将上述偏移函数去掉。
		
3) 局限性
=========

功能的局限性
------------

由于采用的是“案例驱动”的编写方式，所以只实现了谷歌实例的大部分功能和“去哪儿”网
迁移需要的功能。如果需要其他功能还需要继续完善G2B。
		
坐标偏移
--------

由于各种原因无法做到谷歌和百度坐标之间的精确双向转换。
目前只能做到线性偏移转换，偏移导致的误差最大在70米

G2B只是一个迁移解决方案。还是希望用户可以主动去了解、使用百度地图API:
[百度地图API](http://dev.baidu.com/wiki/static/index.htm)
","'baidu-map', 'google-maps'",2011-06-28T02:42:00Z,2013-05-25T09:57:19Z,1,1,24,4,"('aztack', 21)",0,0,
lewagon/awesome-navbars,navbar HTML/SCSS templates for Le Wagon's students,"## Le Wagon's navbar

Choose one of our templates:

- HTML template: you can find it on [Le Wagon's components library](http://lewagon.github.io/ui-components/#navbar)
- [ERB template without login](https://github.com/lewagon/awesome-navbars/blob/master/templates/_navbar_wagon_without_login.html.erb)
- [ERB template with login](https://github.com/lewagon/awesome-navbars/blob/master/templates/_navbar_wagon.html.erb) using [Devise](https://github.com/plataformatec/devise) helpers.

",,2014-11-14T15:07:03Z,2023-05-25T14:12:30Z,9,8,61,17,"('Papillard', 52), ('ssaunier', 8), ('dmilon', 6), ('Arthur Littmann', 4), ('MarcelSF', 4), ('cveneziani', 3), ('sarahlafer', 3), ('juliends', 3), ('Naokimi', 2)",0,0,
rafal-szypulka/b2m-nodejs,,"# [Build to Manage - Node.js application monitoring and logging lab](https://rafal-szypulka.github.io/b2m-nodejs)
",,2019-03-05T12:00:03Z,2022-12-07T00:59:59Z,1,1,2,2,"('rafal-szypulka', 23)",0,0,
11ty/eleventy-base-blog,A starter repository for a blog web site using the Eleventy static site generator.,"# eleventy-base-blog v8

A starter repository showing how to build a blog with the [Eleventy](https://www.11ty.dev/) site generator (using the [v2.0 release](https://www.11ty.dev/blog/eleventy-v2/)).

## Getting Started

* [Want a more generic/detailed getting started guide?](https://www.11ty.dev/docs/getting-started/)

1. Make a directory and navigate to it:

```
mkdir my-blog-name
cd my-blog-name
```

2. Clone this Repository

```
git clone https://github.com/11ty/eleventy-base-blog.git .
```

_Optional:_ Review `eleventy.config.js` and `_data/metadata.js` to configure the site’s options and data.

3. Install dependencies

```
npm install
```

4. Run Eleventy

Generate a production-ready build to the `_site` folder:

```
npx @11ty/eleventy
```

Or build and host on a local development server:

```
npx @11ty/eleventy --serve
```

Or you can run [debug mode](https://www.11ty.dev/docs/debugging/) to see all the internals.

## Features

- Using [Eleventy v2.0](https://www.11ty.dev/blog/eleventy-v2/) with zero-JavaScript output.
	- Content is exclusively pre-rendered (this is a static site).
	- Can easily [deploy to a subfolder without changing any content](https://www.11ty.dev/docs/plugins/html-base/)
	- All URLs are decoupled from the content’s location on the file system.
	- Configure templates via the [Eleventy Data Cascade](https://www.11ty.dev/docs/data-cascade/)
- **Performance focused**: four-hundos Lighthouse score out of the box!
	- [View the Lighthouse report for the latest build](https://eleventy-base-blog.netlify.app/reports/lighthouse/) courtesy of the [Netlify Lighthouse plugin](https://github.com/netlify/netlify-plugin-lighthouse).
	- _0 Cumulative Layout Shift_
	- _0ms Total Blocking Time_
- Local development live reload provided by [Eleventy Dev Server](https://www.11ty.dev/docs/dev-server/).
- Content-driven [navigation menu](https://www.11ty.dev/docs/plugins/navigation/)
- [Image optimization](https://www.11ty.dev/docs/plugins/image/) via the `{% image %}` shortcode.
	- Zero-JavaScript output.
	- Support for modern image formats automatically (e.g. AVIF and WebP)
	- Prefers `` markup if possible (single image format) but switches automatically to `` for multiple image formats.
	- Automated `` syntax markup with `srcset` and optional `sizes`
	- Includes `width`/`height` attributes to avoid [content layout shift](https://web.dev/cls/).
	- Includes `loading=""lazy""` for native lazy loading without JavaScript.
	- Includes [`decoding=""async""`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decoding)
	- Images can be co-located with blog post files.
	- View the [Image plugin source code](https://github.com/11ty/eleventy-base-blog/blob/main/eleventy.config.images.js)
- Per page CSS bundles [via `eleventy-plugin-bundle`](https://github.com/11ty/eleventy-plugin-bundle).
- Built-in [syntax highlighter](https://www.11ty.dev/docs/plugins/syntaxhighlight/) (zero-JavaScript output).
- Blog Posts
	- Draft posts: use `draft: true` to mark a blog post as a draft. Drafts are **only** included during `--serve`/`--watch` and are excluded from full builds. View the [Drafts plugin source code](https://github.com/11ty/eleventy-base-blog/blob/main/eleventy.config.drafts.js).
	- Automated next/previous links
	- Accessible deep links to headings
- Generated Pages
	- Home, Archive, and About pages.
	- [Feeds for Atom and JSON](https://www.11ty.dev/docs/plugins/rss/)
	- `sitemap.xml`
	- Zero-maintenance tag pages ([View on the Demo](https://eleventy-base-blog.netlify.app/tags/))
	- Content not found (404) page

## Demos

- [Netlify](https://eleventy-base-blog.netlify.com/)
- [GitHub Pages](https://11ty.github.io/eleventy-base-blog/)
- [Remix on Glitch](https://glitch.com/~11ty-eleventy-base-blog)
- [Cloudflare Pages](https://eleventy-base-blog-d2a.pages.dev/)

## Deploy this to your own site

Deploy this Eleventy site in just a few clicks on these services:

- [Deploy this to **Netlify**](https://app.netlify.com/start/deploy?repository=https://github.com/11ty/eleventy-base-blog)
- [Deploy this to **Vercel**](https://vercel.com/import/project?template=11ty%2Feleventy-base-blog)
- Look in `.github/workflows/gh-pages.yml.sample` for information on Deploying to **GitHub Pages**.
- [Try it out on **Stackblitz**](https://stackblitz.com/github/11ty/eleventy-base-blog)
- If you run Eleventy locally you can drag your `_site` folder to [`netlify.com/drop`](https://netlify.com/drop) to upload it without using `git`.
- Read more about [Deploying an Eleventy project](https://www.11ty.dev/docs/deployment/) to the web.

### Implementation Notes

- `content/about/index.md` is an example of a content page.
- `content/blog/` has the blog posts but really they can live in any directory. They need only the `posts` tag to be included in the blog posts [collection](https://www.11ty.dev/docs/collections/).
- Use the `eleventyNavigation` key (via the [Eleventy Navigation plugin](https://www.11ty.dev/docs/plugins/navigation/)) in your front matter to add a template to the top level site navigation. This is in use on `content/index.njk` and `content/about/index.md`.
- Content can be in _any template format_ (blog posts needn’t exclusively be markdown, for example). Configure your project’s supported templates in `eleventy.config.js` -> `templateFormats`.
- The `public` folder in your input directory will be copied to the output folder (via `addPassthroughCopy` in the `eleventy.config.js` file). This means `./public/css/*` will live at `./_site/css/*` after your build completes.
- Provides two content feeds:
	- `content/feed/feed.njk`
	- `content/feed/json.njk`
- This project uses three [Eleventy Layouts](https://www.11ty.dev/docs/layouts/):
	- `_includes/layouts/base.njk`: the top level HTML structure
	- `_includes/layouts/home.njk`: the home page template (wrapped into `base.njk`)
	- `_includes/layouts/post.njk`: the blog post template (wrapped into `base.njk`)
- `_includes/postslist.njk` is a Nunjucks include and is a reusable component used to display a list of all the posts. `content/index.njk` has an example of how to use it.

#### Content Security Policy

If your site enforces a [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) (as public-facing sites should), you have a few choices (pick one):

1. In `base.njk`, remove `{% getBundle ""css"" %}` and uncomment ``
2. Configure the server with the CSP directive `style-src: 'unsafe-inline'` (less secure).
","'blog', 'eleventy', 'eleventy-sample'",2018-01-15T19:28:07Z,2024-06-12T15:41:36Z,35,34,1178,19,"('zachleat', 321), ('mathiasbynens', 10), ('benjifs', 5), ('verlok', 3), ('clottman', 3), ('mohsen1', 3), ('krzychukula', 2), ('styfle', 2), ('nhoizey', 2), ('j9t', 2), ('aboutdavid', 2), ('nick-novak', 1), ('nilsmielke', 1), ('DougReeder', 1), ('pdehaan', 1), ('saif71', 1), ('SiarheiBobryk', 1), ('siimpragi', 1), ('lonekorean', 1), ('shwilliam', 1), ('Zearin', 1), ('dhoman', 1), ('fschoenfeldt', 1), ('onezerodigits', 1), ('kitt', 1), ('handreistoicescu', 1), ('denmch', 1), ('davidakennedy', 1), ('thedamon', 1), ('charliegroll', 1), ('benedfit', 1), ('Atlas48', 1), ('Andrei Stoicescu', 1), ('andersk', 1), ('plug-n-play', 1)",24,23,
gurayyarar/AdminBSBMaterialDesign,AdminBSB - Free admin panel that is based on Bootstrap 3.x with Material Design,"AdminBSB - Material Design
=======================
[![npm version](https://img.shields.io/npm/v/adminbsb-materialdesign.svg)](https://www.npmjs.com/package/adminbsb-materialdesign)
![Bower version](https://img.shields.io/bower/v/adminbsb-materialdesign.svg)

**AdminBSB - Material Design is a fully responsive and free admin template.** It was developed with [Bootstrap 3.x Framework](http://getbootstrap.com) and [Google Material Design](https://material.google.com) of powers.

It's really easy to customize and usage. You can use for from 320px to large resolution pixels of new generation screens and mobile devices. (**Fully Responsive Material Design**)

Looking for Premium Templates?
----------------
**If you need more features please visit portfolio of mine which page link is [https://themeforest.net/user/gurayyarar/portfolio](http://bit.ly/2oPFpmQ)**

Demo
----------------
You can check the website preview with **[this link](https://gurayyarar.github.io/AdminBSBMaterialDesign/)**  

![AdminBSB - Free Admin Template With Material Design](https://raw.githubusercontent.com/gurayyarar/AdminBSBMaterialDesign/master/images/screenshot.png)

Installation
----------------
You can choose one from multiple ways for installation.

**GitHub**
- Fork the repository ([here is the guide](https://help.github.com/articles/fork-a-repo/)).
- Clone to your machine
```
git clone https://github.com/gurayyarar/AdminBSBMaterialDesign.git
```

**npm**
```
npm install adminbsb-materialdesign
```

**bower**
```
bower install adminbsb-materialdesign
```

Documentation
----------
Visit the **[documentation](https://gurayyarar.github.io/AdminBSBMaterialDesign/documentation/)**

Browser Support
----------
- IE 10 +
- Microsoft Edge (Latest)
- Mozilla Firefox (Latest)
- Google Chrome (Latest)
- Opera (Latest)
- Safari (Latest)

Change Logs
----------
You can display all release notes with **[this link](https://gurayyarar.github.io/AdminBSBMaterialDesign/pages/changelogs.html)**


FAQ
===
**Can I use this template for personal or commercial websites/web projects?**  
Sure, you can use both of personal and commercial websites/web projects.

**Is the attribution link required?**  
No, not required. (Though very much appreciated)

License
----------
**AdminBSB - Material Design** is an open source project that is licensed under the [MIT license](http://opensource.org/licenses/MIT).

Donations
----------
Donations are **greatly appreciated!**

**[BUY ME A COFFEE](http://bit.ly/2yEjtx5)**
",,2016-08-19T12:18:02Z,2024-05-25T11:37:19Z,13,9,2743,208,"('gurayyarar', 26), ('Güray Yarar', 5), ('Ryosuke Yokoe', 3), ('premedios', 2), ('ColinDinelli', 1), ('Jian Gao', 1), ('ivancemed', 1), ('masoudjahromi', 1), ('praveenscience', 1), ('REscobar', 1), ('aadiyahsi', 1), ('ailtonbsj', 1), ('geoffrey-brier', 1)",9,7,
splitrb/split,:chart_with_upwards_trend: The Rack Based A/B testing framework,"# [Split](https://libraries.io/rubygems/split)

[![Gem Version](https://badge.fury.io/rb/split.svg)](http://badge.fury.io/rb/split)
![Build status](https://github.com/splitrb/split/actions/workflows/ci.yml/badge.svg?branch=main)
[![Code Climate](https://codeclimate.com/github/splitrb/split/badges/gpa.svg)](https://codeclimate.com/github/splitrb/split)
[![Test Coverage](https://codeclimate.com/github/splitrb/split/badges/coverage.svg)](https://codeclimate.com/github/splitrb/split/coverage)
[![standard-readme compliant](https://img.shields.io/badge/readme%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/RichardLitt/standard-readme)
[![Open Source Helpers](https://www.codetriage.com/splitrb/split/badges/users.svg)](https://www.codetriage.com/splitrb/split)

> 📈 The Rack Based A/B testing framework https://libraries.io/rubygems/split

Split is a rack based A/B testing framework designed to work with Rails, Sinatra or any other rack based app.

Split is heavily inspired by the [Abingo](https://github.com/ryanb/abingo) and [Vanity](https://github.com/assaf/vanity) Rails A/B testing plugins and [Resque](https://github.com/resque/resque) in its use of Redis.

Split is designed to be hacker friendly, allowing for maximum customisation and extensibility.

## Install

### Requirements

Split v4.0+ is currently tested with Ruby >= 2.5 and Rails >= 5.2.

If your project requires compatibility with Ruby 2.4.x or older Rails versions. You can try v3.0 or v0.8.0(for Ruby 1.9.3)

Split uses Redis as a datastore.

Split only supports Redis 4.0 or greater.

If you're on OS X, Homebrew is the simplest way to install Redis:

```bash
brew install redis
redis-server /usr/local/etc/redis.conf
```

You now have a Redis daemon running on port `6379`.

### Setup

```bash
gem install split
```

#### Rails

Adding `gem 'split'` to your Gemfile will autoload it when rails starts up, as long as you've configured Redis it will 'just work'.

#### Sinatra

To configure Sinatra with Split you need to enable sessions and mix in the helper methods. Add the following lines at the top of your Sinatra app:

```ruby
require 'split'

class MySinatraApp < Sinatra::Base
  enable :sessions
  helpers Split::Helper

  get '/' do
  ...
end
```

## Usage

To begin your A/B test use the `ab_test` method, naming your experiment with the first argument and then the different alternatives which you wish to test on as the other arguments.

`ab_test` returns one of the alternatives, if a user has already seen that test they will get the same alternative as before, which you can use to split your code on.

It can be used to render different templates, show different text or any other case based logic.

`ab_finished` is used to make a completion of an experiment, or conversion.

Example: View

```erb

  

```

Example: Controller

```ruby
def register_new_user
  # See what level of free points maximizes users' decision to buy replacement points.
  @starter_points = ab_test(:new_user_free_points, '100', '200', '300')
end
```

Example: Conversion tracking (in a controller!)

```ruby
def buy_new_points
  # some business logic
  ab_finished(:new_user_free_points)
end
```

Example: Conversion tracking (in a view)

```erb
Thanks for signing up, dude! 
```

You can find more examples, tutorials and guides on the [wiki](https://github.com/splitrb/split/wiki).

## Statistical Validity

Split has two options for you to use to determine which alternative is the best.

The first option (default on the dashboard) uses a z test (n>30) for the difference between your control and alternative conversion rates to calculate statistical significance. This test will tell you whether an alternative is better or worse than your control, but it will not distinguish between which alternative is the best in an experiment with multiple alternatives. Split will only tell you if your experiment is 90%, 95%, or 99% significant, and this test only works if you have more than 30 participants and 5 conversions for each branch.

As per this [blog post](https://www.evanmiller.org/how-not-to-run-an-ab-test.html) on the pitfalls of A/B testing, it is highly recommended that you determine your requisite sample size for each branch before running the experiment. Otherwise, you'll have an increased rate of false positives (experiments which show a significant effect where really there is none).

[Here](https://www.evanmiller.org/ab-testing/sample-size.html) is a sample size calculator for your convenience.

The second option uses simulations from a beta distribution to determine the probability that the given alternative is the winner compared to all other alternatives. You can view these probabilities by clicking on the drop-down menu labeled ""Confidence."" This option should be used when the experiment has more than just 1 control and 1 alternative. It can also be used for a simple, 2-alternative A/B test.

Calculating the beta-distribution simulations for a large number of experiments can be slow, so the results are cached. You can specify how often they should be recalculated (the default is once per day).

```ruby
Split.configure do |config|
  config.winning_alternative_recalculation_interval = 3600 # 1 hour
end
```

## Extras

### Weighted alternatives

Perhaps you only want to show an alternative to 10% of your visitors because it is very experimental or not yet fully load tested.

To do this you can pass a weight with each alternative in the following ways:

```ruby
ab_test(:homepage_design, {'Old' => 18}, {'New' => 2})

ab_test(:homepage_design, 'Old', {'New' => 1.0/9})

ab_test(:homepage_design, {'Old' => 9}, 'New')
```

This will only show the new alternative to visitors 1 in 10 times, the default weight for an alternative is 1.

### Overriding alternatives

For development and testing, you may wish to force your app to always return an alternative.
You can do this by passing it as a parameter in the url.

If you have an experiment called `button_color` with alternatives called `red` and `blue` used on your homepage, a url such as:

    http://myawesomesite.com?ab_test[button_color]=red

will always have red buttons. This won't be stored in your session or count towards to results, unless you set the `store_override` configuration option.

In the event you want to disable all tests without having to know the individual experiment names, add a `SPLIT_DISABLE` query parameter.

    http://myawesomesite.com?SPLIT_DISABLE=true

It is not required to send `SPLIT_DISABLE=false` to activate Split.


### Rspec Helper
To aid testing with RSpec, write `spec/support/split_helper.rb` and call `use_ab_test(alternatives_by_experiment)` in your specs as instructed below:

```ruby
# Create a file with these contents at 'spec/support/split_helper.rb'
# and ensure it is `require`d in your rails_helper.rb or spec_helper.rb
module SplitHelper

  # Force a specific experiment alternative to always be returned:
  #   use_ab_test(signup_form: ""single_page"")
  #
  # Force alternatives for multiple experiments:
  #   use_ab_test(signup_form: ""single_page"", pricing: ""show_enterprise_prices"")
  #
  def use_ab_test(alternatives_by_experiment)
    allow_any_instance_of(Split::Helper).to receive(:ab_test) do |_receiver, experiment, &block|
      variant = alternatives_by_experiment.fetch(experiment) { |key| raise ""Unknown experiment '#{key}'"" }
      block.call(variant) unless block.nil?
      variant
    end
  end
end

# Make the `use_ab_test` method available to all specs:
RSpec.configure do |config|
  config.include SplitHelper
end
```

Now you can call `use_ab_test(alternatives_by_experiment)`  in your specs, for example:
```ruby
it ""registers using experimental signup"" do
  use_ab_test experiment_name: ""alternative_name""
  post ""/signups""
  ...
end
```


### Starting experiments manually

By default new A/B tests will be active right after deployment. In case you would like to start new test a while after
the deploy, you can do it by setting the `start_manually` configuration option to `true`.

After choosing this option tests won't be started right after deploy, but after pressing the `Start` button in Split admin dashboard.  If a test is deleted from the Split dashboard, then it can only be started after pressing the `Start` button whenever being re-initialized.

### Reset after completion

When a user completes a test their session is reset so that they may start the test again in the future.

To stop this behaviour you can pass the following option to the `ab_finished` method:

```ruby
ab_finished(:experiment_name, reset: false)
```

The user will then always see the alternative they started with.

Any old unfinished experiment key will be deleted from the user's data storage if the experiment had been removed or is over and a winner had been chosen. This allows a user to enroll into any new experiment in cases when the `allow_multiple_experiments` config option is set to `false`.

### Reset experiments manually

By default Split automatically resets the experiment whenever it detects the configuration for an experiment has changed (e.g. you call `ab_test` with different alternatives). You can prevent this by setting the option `reset_manually` to `true`.

You may want to do this when you want to change something, like the variants' names, the metadata about an experiment, etc. without resetting everything.

### Multiple experiments at once

By default Split will avoid users participating in multiple experiments at once. This means you are less likely to skew results by adding in more variation to your tests.

To stop this behaviour and allow users to participate in multiple experiments at once set the `allow_multiple_experiments` config option to true like so:

```ruby
Split.configure do |config|
  config.allow_multiple_experiments = true
end
```

This will allow the user to participate in any number of experiments and belong to any alternative in each experiment. This has the possible downside of a variation in one experiment influencing the outcome of another.

To address this, setting the `allow_multiple_experiments` config option to 'control' like so:
```ruby
Split.configure do |config|
  config.allow_multiple_experiments = 'control'
end
```

For this to work, each and every experiment you define must have an alternative named 'control'. This will allow the user to participate in multiple experiments as long as the user belongs to the alternative 'control' in each experiment. As soon as the user belongs to an alternative named something other than 'control' the user may not participate in any more experiments. Calling ab_test() will always return the first alternative without adding the user to that experiment.

### Experiment Persistence

Split comes with three built-in persistence adapters for storing users and the alternatives they've been given for each experiment.

By default Split will store the tests for each user in the session.

You can optionally configure Split to use a cookie, Redis, or any custom adapter of your choosing.

#### Cookies

```ruby
Split.configure do |config|
  config.persistence = :cookie
end
```

When using the cookie persistence, Split stores data into an anonymous tracking cookie named 'split', which expires in 1 year. To change that, set the `persistence_cookie_length` in the configuration (unit of time in seconds).

```ruby
Split.configure do |config|
  config.persistence = :cookie
  config.persistence_cookie_length = 2592000 # 30 days
end
```

The data stored consists of the experiment name and the variants the user is in. Example: { ""experiment_name"" => ""variant_a"" }

__Note:__ Using cookies depends on `ActionDispatch::Cookies` or any identical API

#### Redis

Using Redis will allow ab_users to persist across sessions or machines.

```ruby
Split.configure do |config|
  config.persistence = Split::Persistence::RedisAdapter.with_config(lookup_by: -> (context) { context.current_user_id })
  # Equivalent
  # config.persistence = Split::Persistence::RedisAdapter.with_config(lookup_by: :current_user_id)
end
```

Options:
* `lookup_by`: method to invoke per request for uniquely identifying ab_users (mandatory configuration)
* `namespace`: separate namespace to store these persisted values (default ""persistence"")
* `expire_seconds`: sets TTL for user key. (if a user is in multiple experiments most recent update will reset TTL for all their assignments)

#### Dual Adapter

The Dual Adapter allows the use of different persistence adapters for logged-in and logged-out users. A common use case is to use Redis for logged-in users and Cookies for logged-out users.

```ruby
cookie_adapter = Split::Persistence::CookieAdapter
redis_adapter = Split::Persistence::RedisAdapter.with_config(
    lookup_by: -> (context) { context.send(:current_user).try(:id) },
    expire_seconds: 2592000)

Split.configure do |config|
  config.persistence = Split::Persistence::DualAdapter.with_config(
      logged_in: -> (context) { !context.send(:current_user).try(:id).nil? },
      logged_in_adapter: redis_adapter,
      logged_out_adapter: cookie_adapter)
  config.persistence_cookie_length = 2592000 # 30 days
end
```

#### Custom Adapter

Your custom adapter needs to implement the same API as existing adapters.
See `Split::Persistence::CookieAdapter` or `Split::Persistence::SessionAdapter` for a starting point.

```ruby
Split.configure do |config|
  config.persistence = YourCustomAdapterClass
end
```

### Trial Event Hooks

You can define methods that will be called at the same time as experiment
alternative participation and goal completion.

For example:

``` ruby
Split.configure do |config|
  config.on_trial  = :log_trial # run on every trial
  config.on_trial_choose   = :log_trial_choose # run on trials with new users only
  config.on_trial_complete = :log_trial_complete
end
```

Set these attributes to a method name available in the same context as the
`ab_test` method. These methods should accept one argument, a `Trial` instance.

``` ruby
def log_trial(trial)
  logger.info ""experiment=%s alternative=%s user=%s"" %
    [ trial.experiment.name, trial.alternative, current_user.id ]
end

def log_trial_choose(trial)
  logger.info ""[new user] experiment=%s alternative=%s user=%s"" %
    [ trial.experiment.name, trial.alternative, current_user.id ]
end

def log_trial_complete(trial)
  logger.info ""experiment=%s alternative=%s user=%s complete=true"" %
    [ trial.experiment.name, trial.alternative, current_user.id ]
end
```

#### Views

If you are running `ab_test` from a view, you must define your event
hook callback as a
[helper_method](https://apidock.com/rails/AbstractController/Helpers/ClassMethods/helper_method)
in the controller:

``` ruby
helper_method :log_trial_choose

def log_trial_choose(trial)
  logger.info ""experiment=%s alternative=%s user=%s"" %
    [ trial.experiment.name, trial.alternative, current_user.id ]
end
```

### Experiment Hooks

You can assign a proc that will be called when an experiment is reset or deleted. You can use these hooks to call methods within your application to keep data related to experiments in sync with Split.

For example:

``` ruby
Split.configure do |config|
  # after experiment reset or deleted
  config.on_experiment_reset  = -> (example) { # Do something on reset }
  config.on_experiment_delete = -> (experiment) { # Do something else on delete }
  # before experiment reset or deleted
  config.on_before_experiment_reset  = -> (example) { # Do something on reset }
  config.on_before_experiment_delete = -> (experiment) { # Do something else on delete }
  # after experiment winner had been set
  config.on_experiment_winner_choose = -> (experiment) { # Do something on winner choose }
end
```

## Web Interface

Split comes with a Sinatra-based front end to get an overview of how your experiments are doing.

If you are running Rails 2: You can mount this inside your app using Rack::URLMap in your `config.ru`

```ruby
require 'split/dashboard'

run Rack::URLMap.new \
  ""/""       => Your::App.new,
  ""/split"" => Split::Dashboard.new
```

However, if you are using Rails 3 or higher: You can mount this inside your app routes by first adding this to the Gemfile:

```ruby
gem 'split', require: 'split/dashboard'
```

Then adding this to config/routes.rb

```ruby
mount Split::Dashboard, at: 'split'
```

You may want to password protect that page, you can do so with `Rack::Auth::Basic` (in your split initializer file)

```ruby
# Rails apps or apps that already depend on activesupport
Split::Dashboard.use Rack::Auth::Basic do |username, password|
  # Protect against timing attacks:
  # - Use & (do not use &&) so that it doesn't short circuit.
  # - Use digests to stop length information leaking
  ActiveSupport::SecurityUtils.secure_compare(::Digest::SHA256.hexdigest(username), ::Digest::SHA256.hexdigest(ENV[""SPLIT_USERNAME""])) &
    ActiveSupport::SecurityUtils.secure_compare(::Digest::SHA256.hexdigest(password), ::Digest::SHA256.hexdigest(ENV[""SPLIT_PASSWORD""]))
end

# Apps without activesupport
Split::Dashboard.use Rack::Auth::Basic do |username, password|
  # Protect against timing attacks:
  # - Use & (do not use &&) so that it doesn't short circuit.
  # - Use digests to stop length information leaking
  Rack::Utils.secure_compare(::Digest::SHA256.hexdigest(username), ::Digest::SHA256.hexdigest(ENV[""SPLIT_USERNAME""])) &
    Rack::Utils.secure_compare(::Digest::SHA256.hexdigest(password), ::Digest::SHA256.hexdigest(ENV[""SPLIT_PASSWORD""]))
end
```

You can even use Devise or any other Warden-based authentication method to authorize users. Just replace `mount Split::Dashboard, :at => 'split'` in `config/routes.rb` with the following:
```ruby
match ""/split"" => Split::Dashboard, anchor: false, via: [:get, :post, :delete], constraints: -> (request) do
  request.env['warden'].authenticated? # are we authenticated?
  request.env['warden'].authenticate! # authenticate if not already
  # or even check any other condition such as request.env['warden'].user.is_admin?
end
```

More information on this [here](https://steve.dynedge.co.uk/2011/12/09/controlling-access-to-routes-and-rack-apps-in-rails-3-with-devise-and-warden/)

### Screenshot

![split_screenshot](https://raw.githubusercontent.com/caser/caser.github.io/master/dashboard.png)

## Configuration

You can override the default configuration options of Split like so:

```ruby
Split.configure do |config|
  config.db_failover = true # handle Redis errors gracefully
  config.db_failover_on_db_error = -> (error) { Rails.logger.error(error.message) }
  config.allow_multiple_experiments = true
  config.enabled = true
  config.persistence = Split::Persistence::SessionAdapter
  #config.start_manually = false ## new test will have to be started manually from the admin panel. default false
  #config.reset_manually = false ## if true, it never resets the experiment data, even if the configuration changes
  config.include_rails_helper = true
  config.redis = ""redis://custom.redis.url:6380""
end
```

Split looks for the Redis host in the environment variable `REDIS_URL` then
defaults to `redis://localhost:6379` if not specified by configure block.

On platforms like Heroku, Split will use the value of `REDIS_PROVIDER` to
determine which env variable key to use when retrieving the host config. This
defaults to `REDIS_URL`.

### Filtering

In most scenarios you don't want to have AB-Testing enabled for web spiders, robots or special groups of users.
Split provides functionality to filter this based on a predefined, extensible list of bots, IP-lists or custom exclude logic.

```ruby
Split.configure do |config|
  # bot config
  config.robot_regex = /my_custom_robot_regex/ # or
  config.bots['newbot'] = ""Description for bot with 'newbot' user agent, which will be added to config.robot_regex for exclusion""

  # IP config
  config.ignore_ip_addresses << '81.19.48.130' # or regex: /81\.19\.48\.[0-9]+/

  # or provide your own filter functionality, the default is proc{ |request| is_robot? || is_ignored_ip_address? || is_preview? }
  config.ignore_filter = -> (request) { CustomExcludeLogic.excludes?(request) }
end
```

### Experiment configuration

Instead of providing the experiment options inline, you can store them
in a hash. This hash can control your experiment's alternatives, weights,
algorithm and if the experiment resets once finished:

```ruby
Split.configure do |config|
  config.experiments = {
    my_first_experiment: {
      alternatives: [""a"", ""b""],
      resettable: false
    },
    :my_second_experiment => {
      algorithm: 'Split::Algorithms::Whiplash',
      alternatives: [
        { name: ""a"", percent: 67 },
        { name: ""b"", percent: 33 }
      ]
    }
  }
end
```

You can also store your experiments in a YAML file:

```ruby
Split.configure do |config|
  config.experiments = YAML.load_file ""config/experiments.yml""
end
```

You can then define the YAML file like:

```yaml
my_first_experiment:
  alternatives:
    - a
    - b
my_second_experiment:
  alternatives:
    - name: a
      percent: 67
    - name: b
      percent: 33
  resettable: false
```

This simplifies the calls from your code:

```ruby
ab_test(:my_first_experiment)
```

and:

```ruby
ab_finished(:my_first_experiment)
```

You can also add meta data for each experiment, which is very useful when you need more than an alternative name to change behaviour:

```ruby
Split.configure do |config|
  config.experiments = {
    my_first_experiment: {
      alternatives: [""a"", ""b""],
      metadata: {
        ""a"" => {""text"" => ""Have a fantastic day""},
        ""b"" => {""text"" => ""Don't get hit by a bus""}
      }
    }
  }
end
```

```yaml
my_first_experiment:
  alternatives:
    - a
    - b
  metadata:
    a:
      text: ""Have a fantastic day""
    b:
      text: ""Don't get hit by a bus""
```

This allows for some advanced experiment configuration using methods like:

```ruby
trial.alternative.name # => ""a""

trial.metadata['text'] # => ""Have a fantastic day""
```

or in views:

```erb

  
  

```

The keys used in meta data should be Strings

#### Metrics

You might wish to track generic metrics, such as conversions, and use
those to complete multiple different experiments without adding more to
your code. You can use the configuration hash to do this, thanks to
the `:metric` option.

```ruby
Split.configure do |config|
  config.experiments = {
    my_first_experiment: {
      alternatives: [""a"", ""b""],
      metric: :my_metric
    }
  }
end
```

Your code may then track a completion using the metric instead of
the experiment name:

```ruby
ab_finished(:my_metric)
```

You can also create a new metric by instantiating and saving a new Metric object.

```ruby
Split::Metric.new(:my_metric)
Split::Metric.save
```

#### Goals

You might wish to allow an experiment to have multiple, distinguishable goals.
The API to define goals for an experiment is this:

```ruby
ab_test({link_color: [""purchase"", ""refund""]}, ""red"", ""blue"")
```

or you can define them in a configuration file:

```ruby
Split.configure do |config|
  config.experiments = {
    link_color: {
      alternatives: [""red"", ""blue""],
      goals: [""purchase"", ""refund""]
    }
  }
end
```

To complete a goal conversion, you do it like:

```ruby
ab_finished(link_color: ""purchase"")
```

Note that if you pass additional options, that should be a separate hash:

```ruby
ab_finished({ link_color: ""purchase"" }, reset: false)
```

**NOTE:** This does not mean that a single experiment can complete more than one goal.

Once you finish one of the goals, the test is considered to be completed, and finishing the other goal will no longer register. (Assuming the test runs with `reset: false`.)

**Good Example**: Test if listing Plan A first result in more conversions to Plan A (goal: ""plana_conversion"") or Plan B (goal: ""planb_conversion"").

**Bad Example**: Test if button color increases conversion rate through multiple steps of a funnel. THIS WILL NOT WORK.

**Bad Example**: Test both how button color affects signup *and* how it affects login, at the same time. THIS WILL NOT WORK.

#### Combined Experiments
If you want to test how button color affects signup *and* how it affects login at the same time, use combined experiments.
Configure like so:
```ruby
  Split.configuration.experiments = {
        :button_color_experiment => {
          :alternatives => [""blue"", ""green""],
          :combined_experiments => [""button_color_on_signup"", ""button_color_on_login""]
        }
      }
```

Starting the combined test starts all combined experiments
```ruby
 ab_combined_test(:button_color_experiment)
```
Finish each combined test as normal

```ruby
   ab_finished(:button_color_on_login)
   ab_finished(:button_color_on_signup)
```

**Additional Configuration**:
* Be sure to enable `allow_multiple_experiments`
* In Sinatra include the CombinedExperimentsHelper
  ```
    helpers Split::CombinedExperimentsHelper
  ```
### DB failover solution

Due to the fact that Redis has no automatic failover mechanism, it's
possible to switch on the `db_failover` config option, so that `ab_test`
and `ab_finished` will not crash in case of a db failure. `ab_test` always
delivers alternative A (the first one) in that case.

It's also possible to set a `db_failover_on_db_error` callback (proc)
for example to log these errors via Rails.logger.

### Redis

You may want to change the Redis host and port Split connects to, or
set various other options at startup.

Split has a `redis` setter which can be given a string or a Redis
object. This means if you're already using Redis in your app, Split
can re-use the existing connection.

String: `Split.redis = 'redis://localhost:6379'`

Redis: `Split.redis = $redis`

For our rails app we have a `config/initializers/split.rb` file where
we load `config/split.yml` by hand and set the Redis information
appropriately.

Here's our `config/split.yml`:

```yml
development: redis://localhost:6379
test: redis://localhost:6379
staging: redis://redis1.example.com:6379
fi: redis://localhost:6379
production: redis://redis1.example.com:6379
```

And our initializer:

```ruby
split_config = YAML.load_file(Rails.root.join('config', 'split.yml'))
Split.redis = split_config[Rails.env]
```

### Redis Caching (v4.0+)

In some high-volume usage scenarios, Redis load can be incurred by repeated 
fetches for fairly static data.  Enabling caching will reduce this load.

 ```ruby
Split.configuration.cache = true
````

This currently caches:
  - `Split::ExperimentCatalog.find`
  - `Split::Experiment.start_time`
  - `Split::Experiment.winner`

## Namespaces

If you're running multiple, separate instances of Split you may want
to namespace the keyspaces so they do not overlap. This is not unlike
the approach taken by many memcached clients.

This feature can be provided by the [redis-namespace](https://github.com/defunkt/redis-namespace)
library. To configure Split to use `Redis::Namespace`, do the following:

1. Add `redis-namespace` to your Gemfile:

  ```ruby
  gem 'redis-namespace'
  ```

2. Configure `Split.redis` to use a `Redis::Namespace` instance (possible in an
   initializer):

  ```ruby
  redis = Redis.new(url: ENV['REDIS_URL']) # or whatever config you want
  Split.redis = Redis::Namespace.new(:your_namespace, redis: redis)
  ```

## Outside of a Web Session

Split provides the Helper module to facilitate running experiments inside web sessions.

Alternatively, you can access the underlying Metric, Trial, Experiment and Alternative objects to
conduct experiments that are not tied to a web session.

```ruby
# create a new experiment
experiment = Split::ExperimentCatalog.find_or_create('color', 'red', 'blue')

# find the user
user = Split::User.find(user_id, :redis)

# create a new trial
trial = Split::Trial.new(user: user, experiment: experiment)

# run trial
trial.choose!

# get the result, returns either red or blue
trial.alternative.name

# if the goal has been achieved, increment the successful completions for this alternative.
if goal_achieved?
  trial.complete!
end

```

## Algorithms

By default, Split ships with `Split::Algorithms::WeightedSample` that randomly selects from possible alternatives for a traditional a/b test.
It is possible to specify static weights to favor certain alternatives.

`Split::Algorithms::Whiplash` is an implementation of a [multi-armed bandit algorithm](http://stevehanov.ca/blog/index.php?id=132).
This algorithm will automatically weight the alternatives based on their relative performance,
choosing the better-performing ones more often as trials are completed.

`Split::Algorithms::BlockRandomization` is an algorithm that ensures equal
participation across all alternatives. This algorithm will choose the alternative
with the fewest participants. In the event of multiple minimum participant alternatives
(i.e. starting a new ""Block"") the algorithm will choose a random alternative from
those minimum participant alternatives.

Users may also write their own algorithms. The default algorithm may be specified globally in the configuration file, or on a per experiment basis using the experiments hash of the configuration file.

To change the algorithm globally for all experiments, use the following in your initializer:

```ruby
Split.configure do |config|
  config.algorithm = Split::Algorithms::Whiplash
end
```

## Extensions

  - [Split::Export](https://github.com/splitrb/split-export) - Easily export A/B test data out of Split.
  - [Split::Analytics](https://github.com/splitrb/split-analytics) - Push test data to Google Analytics.
  - [Split::Mongoid](https://github.com/MongoHQ/split-mongoid) - Store experiment data in mongoid (still uses redis).
  - [Split::Cacheable](https://github.com/harrystech/split_cacheable) - Automatically create cache buckets per test.
  - [Split::Counters](https://github.com/bernardkroes/split-counters) - Add counters per experiment and alternative.
  - [Split::Cli](https://github.com/craigmcnamara/split-cli) - A CLI to trigger Split A/B tests.

## Screencast

Ryan bates has produced an excellent 10 minute screencast about split on the Railscasts site: [A/B Testing with Split](http://railscasts.com/episodes/331-a-b-testing-with-split)

## Blogposts

* [Recipe: A/B testing with KISSMetrics and the split gem](https://robots.thoughtbot.com/post/9595887299/recipe-a-b-testing-with-kissmetrics-and-the-split-gem)
* [Rails A/B testing with Split on Heroku](http://blog.nathanhumbert.com/2012/02/rails-ab-testing-with-split-on-heroku.html)

## Backers

Support us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/split#backer)]

































## Sponsors

Become a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/split#sponsor)]
































## Contribute

Please do! Over 70 different people have contributed to the project, you can see them all here: https://github.com/splitrb/split/graphs/contributors.

### Development

The source code is hosted at [GitHub](https://github.com/splitrb/split).

Report issues and feature requests on [GitHub Issues](https://github.com/splitrb/split/issues).

You can find a discussion form on [Google Groups](https://groups.google.com/d/forum/split-ruby).

### Tests

Run the tests like this:

    # Start a Redis server in another tab.
    redis-server

    bundle
    rake spec

### A Note on Patches and Pull Requests

 * Fork the project.
 * Make your feature addition or bug fix.
 * Add tests for it. This is important so I don't break it in a
   future version unintentionally.
 * Add documentation if necessary.
 * Commit. Do not mess with the rakefile, version, or history.
   (If you want to have your own version, that is fine. But bump the version in a commit by itself, which I can ignore when I pull.)
 * Send a pull request. Bonus points for topic branches.

### Code ","'ab-testing', 'rack', 'rails', 'redis', 'ruby', 'split'",2011-05-14T18:05:47Z,2024-03-03T23:00:30Z,182,147,2699,41,"('andrew', 467), ('andrehjr', 226), ('iangreenleaf', 41), ('Andrew Nesbitt', 32), ('buddhamagnet', 24), ('woodhull', 19), ('phoet', 15), ('andreibondarev', 10), ('semanticart', 10), ('joshdover', 10), ('Quinten Powell', 8), ('lautis', 8), ('coolzilj', 8), ('giraffate', 8), ('seabornlee', 7), ('caser', 7), ('Leonid Beder', 7), ('lloydpick', 7), ('rdh', 7), ('jonastemplestein', 6), ('nberger', 6), ('robin-phung', 6), ('patbenatar', 6), ('Craig McNamara', 6), ('swrobel', 6), ('henrik', 5), ('philnash', 5), ('stevenou', 5), ('fengb', 5), ('knarewski', 4), ('gnanou', 4), ('peterylai', 4), ('pakallis', 4), ('dmeremyanin', 4), ('eliotsykes', 4), ('Ian Vaughan', 4), ('dekz', 4), ('Lay Flags', 4), ('Joel Chippindale', 4), ('ccallebs', 3), ('mikezaby', 3), ('dependabot-previewbot', 3), ('santib', 3), ('themgt', 3), ('patbl', 3), ('Nicholas Firth-McCoy', 3), ('vrish88', 3), ('pfeiffer', 3), ('spheric', 3), ('mtyeh411', 3), ('ipoval', 3), ('duksis', 3), ('henrique-ft', 3), ('fenelon', 3), ('Brandon Carpenter', 3), ('Andrew Appleton', 3), ('amangup', 3), ('rtwomey', 2), ('paneq', 2), ('Robert Hustead', 2), ('Pavlos Kallis', 2), ('grosser', 2), ('martinciu', 2), ('Keith Kim', 2), ('AlainPilon', 2), ('serggl', 2), ('Sunny Ng', 2), ('tamird', 2), ('tomasdundacek', 2), ('waynemoore', 2), ('edmilton', 2), ('rceee', 2), ('selfish', 2), ('divineforest', 2), ('appleton', 2), ('Ash McKenzie', 2), ('bmarini', 2), ('bschaeffer', 2), ('zinkkrysty', 2), ('danielschwartz', 2), ('elliotcm', 2), ('ekorneeff', 2), ('flori', 2), ('macgena', 2), ('ilyakatz', 2), ('lostapathy', 2), ('joedelia', 2), ('karmakaze', 2), ('Jealrock', 1), ('paulfri', 1), ('Paulo Casaretto', 1), ('Pavlos Kallis', 1), ('codetriage-readme-bot', 1), ('RichardLitt', 1), ('rdunlop', 1), ('Rocco Galluzzo', 1), ('ryanlecompte', 1), ('007sumit', 1), ('Stefano B', 1), ('NaturalHokke', 1), ('Nicolás Risso', 1), ('naveen-chidhambaram', 1), ('Nate Delage', 1), ('mttrs', 1), ('SegFaultAX', 1), ('Michael Webb', 1), ('vermaxik', 1), ('matthewford', 1), ('mattwd7', 1), ('stabenfeldt', 1), ('martingregoire', 1), ('Martin Belza', 1), ('yjukaku', 1), ('rnitta', 1), ('razel1982', 1), ('naofumi-fujii', 1), ('lucaspolonio', 1), ('wadako111', 1), ('dependabotbot', 1), ('cmantas', 1), ('andreas', 1), ('huoxito', 1), ('vigosan', 1), ('Vasfed', 1), ('varunsrin', 1), ('tranngocsam', 1), ('afn', 1), ('TomasBarry', 1), ('Thomas Rekittke', 1), ('thomasmaas', 1), ('tomciopp', 1), ('t4deu', 1), ('blahblahblah-', 1), ('sumedhav', 1), ('stevendaniels', 1), ('mlovic', 1), ('hasghari', 1), ('GeorgeGorbanev', 1), ('Evan Pavlica', 1), ('ecaron', 1), ('maletor', 1), ('elisehuard', 1), ('cattekin', 1), ('dougpetronilio', 1), ('dv', 1), ('davidgrieser', 1), ('daviddening', 1), ('cesarizu', 1), ('clowder', 1), ('sadhu89', 1), ('brunopedroso', 1), ('brandonparsons', 1), ('BradHudson', 1), ('avit', 1), ('akirill0v', 1), ('apsoto', 1), ('alopatin', 1), ('adammulligan', 1), ('agraves', 1), ('MarkRoddy', 1), ('fusion2004', 1), ('TSMMark', 1), ('mcls', 1), ('lackac', 1), ('leocassarani', 1), ('iridakos', 1), ('kylerippey', 1), ('ursm', 1), ('fluke', 1), ('mezis', 1), ('Jules Coleman', 1), ('jordelver', 1), ('jmondo', 1), ('Johannes Barre + Hugo Duksis', 1), ('Joe Root', 1), ('cifarelli', 1), ('jaywengrow', 1), ('jaynetics', 1), ('hulleywood', 1), ('Jake Romer', 1), ('Ilya Katz', 1), ('hanibash', 1)",94,77,
Adrian2112/UIImage-BlurredFrame,UIImage category that blurs an specified frame of a UIImage,"UIImage+BlurredFrame is a UIImage category that blurs an specified frame of a UIImage

#Install

Install with [cocoapods](http://cocoapods.org/)

```
pod 'UIImage+BlurredFrame'
```


#Usage

```
UIImage *img = [UIImage imageNamed:@""myImage""];
CGRect frame = CGRectMake(0, img.size.height - 200, img.size.width, img.size.height - 200);
    
img = [img applyLightEffectAtFrame:frame];

```




##Credits

`UIImage+ImageEffects` category taken from the [2013 wwdc developer](https://developer.apple.com/wwdc/videos/)
videos 'Implementing Engaging UI on iOS'

Methods to crop and merge images from [this stackoverflow answer](http://stackoverflow.com/a/14108694/1293623)


## Author
**Adrián González**

+ [http://github.com/adrian2112](http://github.com/adrian2112)
",,2013-11-07T16:50:11Z,2016-03-17T08:18:05Z,4,4,756,25,"('Adrian2112', 20), ('k06a', 1), ('Leandros', 1), ('kaneshin', 1)",3,3,
h2non/bimg,Go package for fast high-level image processing powered by libvips C library,"# bimg [![GoDoc](https://godoc.org/github.com/h2non/bimg?status.svg)](https://godoc.org/github.com/h2non/bimg) [![Coverage Status](https://coveralls.io/repos/github/h2non/bimg/badge.svg?branch=master)](https://coveralls.io/github/h2non/bimg?branch=master) ![License](https://img.shields.io/badge/license-MIT-blue.svg)

Small [Go](http://golang.org) package for fast high-level image processing using [libvips](https://github.com/jcupitt/libvips) via C bindings, providing a simple [programmatic API](#examples).

bimg was designed to be a small and efficient library supporting common [image operations](#supported-image-operations) such as crop, resize, rotate, zoom or watermark. It can read JPEG, PNG, WEBP natively, and optionally TIFF, PDF, GIF and SVG formats if `libvips@8.3+` is compiled with proper library bindings. Lastly AVIF is supported as of `libvips@8.9+`. For AVIF support `libheif` needs to be [compiled with an applicable AVIF en-/decoder](https://github.com/strukturag/libheif#compiling).

bimg is able to output images as JPEG, PNG and WEBP formats, including transparent conversion across them.

bimg uses internally libvips, a powerful library written in C for image processing which requires a [low memory footprint](https://github.com/jcupitt/libvips/wiki/Speed_and_Memory_Use)
and it's typically 4x faster than using the quickest ImageMagick and GraphicsMagick settings or Go native `image` package, and in some cases it's even 8x faster processing JPEG images.

If you're looking for an HTTP based image processing solution, see [imaginary](https://github.com/h2non/imaginary).

bimg was heavily inspired in [sharp](https://github.com/lovell/sharp), its homologous package built for [node.js](http://nodejs.org). bimg is used in production environments processing thousands of images per day.

**v1 notice**: `bimg` introduces some minor breaking changes in `v1` release.
If you're using `gopkg.in`, you can still rely in the `v0` without worrying about API breaking changes.

## Contents

- [Supported image operations](#supported-image-operations)
- [Prerequisites](#prerequisites)
- [Installation](#installation)
- [Performance](#performance)
- [Benchmark](#benchmark)
- [Examples](#examples)
- [Debugging](#debugging)
- [API](#api)
- [Authors](#authors)
- [Credits](#credits)

## Supported image operations

- Resize
- Enlarge
- Crop (including smart crop support, libvips 8.5+)
- Rotate (with auto-rotate based on EXIF orientation)
- Flip (with auto-flip based on EXIF metadata)
- Flop
- Zoom
- Thumbnail
- Extract area
- Watermark (using text or image)
- Gaussian blur effect
- Custom output color space (RGB, grayscale...)
- Format conversion (with additional quality/compression settings)
- EXIF metadata (size, alpha channel, profile, orientation...)
- Trim (libvips 8.6+)

## Prerequisites

- [libvips](https://github.com/libvips/libvips) 8.3+ (8.8+ recommended)
- C compatible compiler such as gcc 4.6+ or clang 3.0+
- Go 1.3+

**Note**: 
 * `libvips` v8.3+ is required for GIF, PDF and SVG support.
 * `libvips` v8.9+ is required for AVIF support. `libheif` compiled with a AVIF en-/decoder also needs to be present.

## Installation

```bash
go get -u github.com/h2non/bimg
```

### libvips

Follow `libvips` installation instructions:

[https://libvips.github.io/libvips/install.html](https://libvips.github.io/libvips/install.html)

##### Installation script

**Note**: install script is officially deprecated, it might not work as expected. We recommend following [libvips install](https://libvips.github.io/libvips/install.html) instructions.

Run the following script as `sudo` (supports OSX, Debian/Ubuntu, Redhat, Fedora, Amazon Linux):
```bash
curl -s https://raw.githubusercontent.com/h2non/bimg/master/preinstall.sh | sudo bash -
```

If you want to take the advantage of [OpenSlide](http://openslide.org/), simply add `--with-openslide` to enable it:
```bash
curl -s https://raw.githubusercontent.com/h2non/bimg/master/preinstall.sh | sudo bash -s --with-openslide
```

The [install script](https://github.com/h2non/bimg/blob/master/preinstall.sh) requires `curl` and `pkg-config`.

## Performance

libvips is probably the fastest open source solution for image processing.
Here you can see some performance test comparisons for multiple scenarios:

- [libvips speed and memory usage](https://github.com/jcupitt/libvips/wiki/Speed-and-memory-use)

## Benchmark

Tested using Go 1.5.1 and libvips-7.42.3 in OSX i7 2.7Ghz
```
BenchmarkRotateJpeg-8     	      20	  64686945 ns/op
BenchmarkResizeLargeJpeg-8	      20	  63390416 ns/op
BenchmarkResizePng-8      	     100	  18147294 ns/op
BenchmarkResizeWebP-8     	     100	  20836741 ns/op
BenchmarkConvertToJpeg-8  	     100	  12831812 ns/op
BenchmarkConvertToPng-8   	      10	 128901422 ns/op
BenchmarkConvertToWebp-8  	      10	 204027990 ns/op
BenchmarkCropJpeg-8       	      30	  59068572 ns/op
BenchmarkCropPng-8        	      10	 117303259 ns/op
BenchmarkCropWebP-8       	      10	 107060659 ns/op
BenchmarkExtractJpeg-8    	      50	  30708919 ns/op
BenchmarkExtractPng-8     	    3000	    595546 ns/op
BenchmarkExtractWebp-8    	    3000	    386379 ns/op
BenchmarkZoomJpeg-8       	      10	 160005424 ns/op
BenchmarkZoomPng-8        	      30	  44561047 ns/op
BenchmarkZoomWebp-8       	      10	 126732678 ns/op
BenchmarkWatermarkJpeg-8  	      20	  79006133 ns/op
BenchmarkWatermarPng-8    	     200	   8197291 ns/op
BenchmarkWatermarWebp-8   	      30	  49360369 ns/op
```

## Examples

```go
import (
  ""fmt""
  ""os""
  ""github.com/h2non/bimg""
)
```

#### Resize

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

newImage, err := bimg.NewImage(buffer).Resize(800, 600)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

size, err := bimg.NewImage(newImage).Size()
if size.Width == 800 && size.Height == 600 {
  fmt.Println(""The image size is valid"")
}

bimg.Write(""new.jpg"", newImage)
```

#### Rotate

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

newImage, err := bimg.NewImage(buffer).Rotate(90)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

bimg.Write(""new.jpg"", newImage)
```

#### Convert

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

newImage, err := bimg.NewImage(buffer).Convert(bimg.PNG)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

if bimg.NewImage(newImage).Type() == ""png"" {
  fmt.Fprintln(os.Stderr, ""The image was converted into png"")
}
```

#### Force resize

Force resize operation without preserving the aspect ratio:

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

newImage, err := bimg.NewImage(buffer).ForceResize(1000, 500)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

size := bimg.Size(newImage)
if size.Width != 1000 || size.Height != 500 {
  fmt.Fprintln(os.Stderr, ""Incorrect image size"")
}
```

#### Custom colour space (black & white)

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

newImage, err := bimg.NewImage(buffer).Colourspace(bimg.INTERPRETATION_B_W)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

colourSpace, _ := bimg.ImageInterpretation(newImage)
if colourSpace != bimg.INTERPRETATION_B_W {
  fmt.Fprintln(os.Stderr, ""Invalid colour space"")
}
```

#### Custom options

See [Options](https://godoc.org/github.com/h2non/bimg#Options) struct to discover all the available fields

```go
options := bimg.Options{
  Width:        800,
  Height:       600,
  Crop:         true,
  Quality:      95,
  Rotate:       180,
  Interlace:    true,
}

buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

newImage, err := bimg.NewImage(buffer).Process(options)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

bimg.Write(""new.jpg"", newImage)
```

#### Watermark

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

watermark := bimg.Watermark{
  Text:       ""Chuck Norris (c) 2315"",
  Opacity:    0.25,
  Width:      200,
  DPI:        100,
  Margin:     150,
  Font:       ""sans bold 12"",
  Background: bimg.Color{255, 255, 255},
}

newImage, err := bimg.NewImage(buffer).Watermark(watermark)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

bimg.Write(""new.jpg"", newImage)
```

#### Fluent interface

```go
buffer, err := bimg.Read(""image.jpg"")
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

image := bimg.NewImage(buffer)

// first crop image
_, err := image.CropByWidth(300)
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

// then flip it
newImage, err := image.Flip()
if err != nil {
  fmt.Fprintln(os.Stderr, err)
}

// save the cropped and flipped image
bimg.Write(""new.jpg"", newImage)
```

## Debugging

Run the process passing the `DEBUG` environment variable
```
DEBUG=bimg ./app
```

Enable libvips traces (note that a lot of data will be written in stdout):
```
VIPS_TRACE=1 ./app
```

You can also dump a core on failure, as [John Cuppit](https://github.com/jcupitt) said:
```c
g_log_set_always_fatal(
                G_LOG_FLAG_RECURSION |
                G_LOG_FLAG_FATAL |
                G_LOG_LEVEL_ERROR |
                G_LOG_LEVEL_CRITICAL |
                G_LOG_LEVEL_WARNING );
```

Or set the G_DEBUG environment variable:
```
export G_DEBUG=fatal-warnings,fatal-criticals
```

## API

See [godoc reference](https://godoc.org/github.com/h2non/bimg) for detailed API documentation.

## Authors

- [Tomás Aparicio](https://github.com/h2non) - Original author and architect.

## Credits

People who recurrently contributed to improve `bimg` in some way.

- [John Cupitt](https://github.com/jcupitt)
- [Yoan Blanc](https://github.com/greut)
- [Christophe Eblé](https://github.com/chreble)
- [Brant Fitzsimmons](https://github.com/bfitzsimmons)
- [Thomas Meson](https://github.com/zllak)

Thank you!

## License

MIT - Tomas Aparicio

[![views](https://sourcegraph.com/api/repos/github.com/h2non/bimg/.counters/views.svg)](https://sourcegraph.com/github.com/h2non/bimg)
","'crop', 'crop-image', 'golang', 'image', 'jpeg', 'libvips', 'png', 'processing', 'resize', 'watermark', 'webp'",2015-03-17T14:14:02Z,2024-04-23T07:43:40Z,64,45,2597,39,"('h2non', 463), ('greut', 32), ('LarsFronius', 8), ('zllak', 8), ('fredrsf', 8), ('Dynom', 5), ('vansante', 5), ('ajdevries', 4), ('Laurentiu Ilie', 4), ('henry-blip', 4), ('kirillDanshin', 3), ('jayme-github', 3), ('bfitzsimmons', 3), ('evanoberholster', 2), ('igsr5', 2), ('ZloyDyadka', 2), ('Yaroslav Khrylchenko', 2), ('vaibsharma', 2), ('totallyunknown', 2), ('Martti Leppänen', 2), ('kyfk', 2), ('Jibin George', 2), ('jeremysf', 2), ('James Schofield', 2), ('danpersa', 2), ('BernhardB', 2), ('Aarti Parikh', 2), ('Adam Scarr', 1), ('mtribes-sdk-bot', 1), ('Mircea Cosbuc', 1), ('momo13', 1), ('nvartolomei', 1), ('chonthu', 1), ('Patrick Zhang', 1), ('der-eismann', 1), ('praveensanap', 1), ('QuentinDanjou', 1), ('skidder', 1), ('Skylar Lee', 1), ('Tulskiy Aleksandr', 1), ('larrabee', 1), ('c93614', 1), ('golint-fixer', 1), ('testwill', 1), ('lucor', 1), ('sugimotoren', 1), ('Adriano', 1), ('Andrey Kirillov', 1), ('andrioid', 1), ('abracadaber', 1), ('azumads', 1), ('Bernhard B', 1), ('cgroschupp', 1), ('cneerdaels', 1), ('Dal-Papa', 1), ('shoreward', 1), ('Eslam Mahmoud', 1), ('ffawkes', 1), ('jaume-pinyol', 1), ('kishorgandham', 1), ('Keruspe', 1), ('sunsided', 1), ('Mereng', 1), ('mikepulaski', 1)",37,26,
tbranyen/backbone-boilerplate,A workflow for building Backbone applications.,"![Boilerplate](https://github.com/tbranyen/backbone-boilerplate/raw/assets/header.png)

[![Build status][travis-image]][travis-url] 
[![Code coverage][coveralls-image]][coveralls-url] 
[![Gitter][gitter-image]][gitter-url]

Backbone Boilerplate
====================

This boilerplate is the product of much research and frustration.  Existing
boilerplates freely modify Backbone core, lack a build process, and are very
prescriptive; Backbone Boilerplate changes that.

The Backbone Boilerplate is a way of organizing a web application with some
opinionated defaults, such as: [Backbone](http://backbonejs.org),
[jQuery](http://jquery.com), [Lodash](http://lodash.com),
[Grunt](http://gruntjs.com), [Babel](https://babeljs.io/),
[Combyne](https://github.com/tbranyen/combyne),
[Karma](http://karma-runner.github.io/0.12/index.html),
[Mocha](https://mochajs.org), and [PureCSS](http://purecss.io/) for styles.

Organize your application with a logical file structure, develop your
Models/Collections/Views/Routers inside modules, and build knowing you have
efficient code that will not bottleneck your users.

Thanks to our
[Contributors](https://github.com/tbranyen/backbone-boilerplate/contributors)!
Special Thanks to: [cowboy](http://github.com/cowboy),
[iros](http://github.com/iros), [nimbupani](http://github.com/nimbupani),
[wookiehangover](http://github.com/wookiehangover), and
[jugglinmike](http://github.com/jugglinmike) for helping me create this
project.  Extra Special Thanks to: [Paul
Guinan](http://bigredhair.com/work/paul.html) for giving me usage rights to his
fantastic Boilerplate character.

## Documentation ##

[Backbone Boilerplate Wiki](https://github.com/tbranyen/backbone-boilerplate/wiki)

## Getting started ##

The easiest way to get started is to install Git and clone the repository:

``` bash
# Using Git, fetch only the latest commits.  You won't need the full history
# for your project.
git clone --depth 1 https://github.com/tbranyen/backbone-boilerplate

# Move the repository to your own project name.
mv backbone-boilerplate my-project
```

You will need to download and install [Node](http://nodejs.org/) to fetch the
dependencies and use the build tools.

## Updating dependencies ##

Third party packages may update independently from this main repo, so it's a
good idea to update after fetching.

``` bash
npm install
```

## Build process ##

The build process consists of numerous Grunt plugin tasks that work together
to optimize your application.

``` bash
# To run the build process, run the NPM start script. This will automatically
# run JSHint, the development Connect server, and watch your files for changes.
npm start

# Run a build and test the now optimized assets.
npm run test-prod
```

## Working with tests ##

Create an ES6 module in the `test/tests` directory and add an
import in the `test/runner.js` file. You'll see existing examples in there to
make it easy to follow.

Run the tests with:

``` bash
npm test
```

If you want to continuously test, run `npm start` and open the
`test/index.html` file in your browser. The tests will re-run whenever you
change source files.

By default, the test runner is BDD Mocha and uses Node's assert.

## License ##
Copyright © 2015 Tim Branyen (@tbranyen)  
Licensed under the MIT license.

[travis-url]: http://travis-ci.org/tbranyen/backbone-boilerplate
[travis-image]: https://img.shields.io/travis/tbranyen/backbone-boilerplate.svg
[coveralls-url]: https://coveralls.io/r/tbranyen/backbone-boilerplate
[coveralls-image]: https://img.shields.io/coveralls/tbranyen/backbone-boilerplate.svg
[gitter-url]: https://gitter.im/tbranyen/backbone-boilerplate
[gitter-image]: https://img.shields.io/badge/GITTER-join%20chat-green.svg
",,2011-12-01T18:35:51Z,2017-07-09T21:47:48Z,44,35,4483,130,"('tbranyen', 380), ('SBoudrias', 14), ('Trevor Cook', 10), ('petjofi', 6), ('Tyler Kellen', 5), ('chewbranca', 4), ('kurtmilam', 4), ('pifantastic', 3), ('Jonathan Reyes', 3), ('liamks', 3), ('unknown', 3), ('boazsender', 2), ('hetsch', 2), ('Hina', 2), ('fiznool', 2), ('zonak', 2), ('naveda89', 1), ('andriijas', 1), ('andrewpthorp', 1), ('arthurvr', 1), ('spoonben', 1), ('brock', 1), ('barraponto', 1), ('codymorrison', 1), ('coldhead', 1), ('Dave Phipps', 1), ('David Murdoch', 1), ('diegotres', 1), ('errcw', 1), ('Fred Stevens-Smith', 1), ('iros', 1), ('JeroenReumkens', 1), ('jessebeach', 1), ('jdalton', 1), ('beriberikix', 1), ('jrgns', 1), ('mthenw', 1), ('jugglinmike', 1), ('raulbrito', 1), ('Sam Breed', 1), ('sebdeckers', 1), ('misfo', 1), ('ajpiano', 1), ('sponge', 1)",28,24,
YQGong/NN_From_Scratch,B站视频系列-从零开始的神经网络,"# 从零开始的神经网络
这个仓库包含B站视频系列-从零开始的神经网络的更多信息。

## 这个仓库的使用方式：

- 获取视频中的示例代码
- 欢迎帮助我完善代码中的注释以及Bug
- 欢迎帮助我完善这个README
- 欢迎添加各类与主题有关的素材或者文章。（如果要转载别人的文章请注意版权问题）

## python版本代码在NN_From_Scratch_python目录下
",,2019-05-13T05:30:22Z,2023-04-30T06:30:12Z,2,2,106,1,"('southAntarctic', 13), ('YQGong', 9)",0,0,
google/brotli,Brotli compression format,"
  
  



### Introduction

Brotli is a generic-purpose lossless compression algorithm that compresses data
using a combination of a modern variant of the LZ77 algorithm, Huffman coding
and 2nd order context modeling, with a compression ratio comparable to the best
currently available general-purpose compression methods. It is similar in speed
with deflate but offers more dense compression.

The specification of the Brotli Compressed Data Format is defined in [RFC 7932](https://tools.ietf.org/html/rfc7932).

Brotli is open-sourced under the MIT License, see the LICENSE file.

> **Please note:** brotli is a ""stream"" format; it does not contain
> meta-information, like checksums or uncompresssed data length. It is possible
> to modify ""raw"" ranges of the compressed stream and the decoder will not
> notice that.

### Build instructions

#### Vcpkg

You can download and install brotli using the [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:

    git clone https://github.com/Microsoft/vcpkg.git
    cd vcpkg
    ./bootstrap-vcpkg.sh
    ./vcpkg integrate install
    ./vcpkg install brotli

The brotli port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.

#### Bazel

See [Bazel](http://www.bazel.build/)

#### CMake

The basic commands to build and install brotli are:

    $ mkdir out && cd out
    $ cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=./installed ..
    $ cmake --build . --config Release --target install

You can use other [CMake](https://cmake.org/) configuration.

#### Python

To install the latest release of the Python module, run the following:

    $ pip install brotli

To install the tip-of-the-tree version, run:

    $ pip install --upgrade git+https://github.com/google/brotli

See the [Python readme](python/README.md) for more details on installing
from source, development, and testing.

### Contributing

We glad to answer/library related questions in
[brotli mailing list](https://groups.google.com/forum/#!forum/brotli).

Regular issues / feature requests should be reported in
[issue tracker](https://github.com/google/brotli/issues).

For reporting vulnerability please read [SECURITY](SECURITY.md).

For contributing changes please read [CONTRIBUTING](CONTRIBUTING.md).

### Benchmarks
* [Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/) / [Unstable Squash Compression Benchmark](https://quixdb.github.io/squash-benchmark/unstable/)
* [Large Text Compression Benchmark](http://mattmahoney.net/dc/text.html)
* [Lzturbo Benchmark](https://sites.google.com/site/powturbo/home/benchmark)

### Related projects
> **Disclaimer:** Brotli authors take no responsibility for the third party projects mentioned in this section.

Independent [decoder](https://github.com/madler/brotli) implementation by Mark Adler, based entirely on format specification.

JavaScript port of brotli [decoder](https://github.com/devongovett/brotli.js). Could be used directly via `npm install brotli`

Hand ported [decoder / encoder](https://github.com/dominikhlbg/BrotliHaxe) in haxe by Dominik Homberger. Output source code: JavaScript, PHP, Python, Java and C#

7Zip [plugin](https://github.com/mcmilk/7-Zip-Zstd)

Dart [native bindings](https://github.com/thosakwe/brotli)

Dart compression framework with [fast FFI-based Brotli implementation](https://pub.dev/documentation/es_compression/latest/brotli/brotli-library.html) with ready-to-use prebuilt binaries for Win/Linux/Mac
",,2014-10-09T14:35:14Z,2024-05-31T16:11:38Z,105,97,13253,337,"('eustas', 495), ('szabadka', 378), ('Cosimo Lupo', 62), ('lvandeve', 28), ('dsnet', 26), ('nicksay', 18), ('nemequ', 14), ('fred-wang', 13), ('Copybara-Service', 10), ('dependabotbot', 8), ('ende76', 8), ('stephenkyle-ARM', 6), ('PiotrSikora', 6), ('Zip753', 5), ('khaledhosny', 4), ('hyperxpro', 3), ('anthrotype', 3), ('rsheeter', 3), ('rojkov', 2), ('jyrkialakuijala', 2), ('rockdaboot', 2), ('trofi', 2), ('sebmarchand', 2), ('ryandesign', 2), ('mdejong', 2), ('Sp1l', 2), ('aperezdc', 2), ('sullis', 1), ('tavrez', 1), ('ahorek', 1), ('paulvollmer', 1), ('OZ1', 1), ('nigoroll', 1), ('the-moisrex', 1), ('Chocobo1', 1), ('michal-josef-spacek', 1), ('hoisie', 1), ('nstepien', 1), ('maxnordlund', 1), ('martin-g', 1), ('Marco Scardovi', 1), ('karpinski', 1), ('lukaso', 1), ('Leo Neat', 1), ('kmosiejczuk', 1), ('irori', 1), ('cherinyy', 1), ('zhongfly', 1), ('shenglei10', 1), ('marianopeck', 1), ('jneb', 1), ('fisherwky', 1), ('davidlt', 1), ('chad-iris', 1), ('agrieve', 1), ('akashin', 1), ('loongson-zn', 1), ('wkennington', 1), ('tpopela', 1), ('kloczek', 1), ('thinred', 1), ('thosakwe', 1), ('timgates42', 1), ('fischbacher', 1), ('sylvestre', 1), ('bodewig', 1), ('kleisauke', 1), ('1100101', 1), ('fhanau', 1), ('Evgenii Kliuchnikov', 1), ('Exagone313', 1), ('dominikhlbg', 1), ('mitya57', 1), ('dlemstra', 1), ('Denys Tsomenko', 1), ('chylex', 1), ('axnsan12', 1), ('schroederc', 1), ('saucecontrol', 1), ('cclauss', 1), ('catenacyber', 1), ('AronParker', 1), ('madebr', 1), ('ammaraskar', 1), ('SaveTheRbtz', 1), ('RaMdsC', 1), ('keith', 1), ('kasper93', 1), ('jibsen', 1), ('jridgewell', 1), ('juliyvchirkov', 1), ('jbms', 1), ('jbicha', 1), ('crowell', 1), ('Janek', 1), ('jameshilliard', 1), ('Zapa289', 1), ('nilya', 1), ('eltociear', 1), ('iand675', 1), ('gliptak', 1), ('grdowns', 1), ('gtalusan', 1), ('gpotter2', 1), ('jedisct1', 1)",78,72,
mleventi/acts-as-dag,Directed Acyclic Graph hierarchy for Rail's ActiveRecord models,"= Acts As Dag

Acts As Dag, short for Acts As Directed Acyclic Graph, is a plugin which allows you to represent DAG hierarchy using your ActiveRecord models. 

== Basic Information

Say you have been using one of the many great plugins that allow for Tree hierarchy like: acts_as_tree or acts_as_nested_set, acts_as_better_nested_set, etc. Yet, you feel something is missing. Tree's are just not good enough. You want to allow each record to have multiple parent objects within a hierarchy as well as multiple children. Then you are going to need a DAG instead of a tree, and thats were this plugin becomes useful.

=== What's a DAG?

http://en.wikipedia.org/wiki/Directed_acyclic_graph

=== Aren't there plugins for this already?

Yes, but I think they aren't as fast or feature filled. Flogic has a good simple acts_as_dag plugin on github which would be similar to acts_as_tree.

== Features

* DAG graph functionality
* STI support
* Polymorphic graphs
* Association injection for graph nodes
* Instance method injections (root?,leaf?) for graph nodes
* O(1) lookups, no breath or depth first searching
* O(x*y) insert, update and delete, where x & y are the number of ancestors and descendants of a node.
 
== Requirements

This uses named_scope so your going to need Rails 2.1 or above.

== Installation

	script/plugin install git://github.com/mleventi/acts-as-dag.git
	
== Terminology

- Node: A source or destination of a link or edge in the graph.
- Edge: A direct connection between two nodes. These can only be created by your application.
- Link: A indirect connection between two nodes. Denotes the existence of a path. These can only be created by the plugin internally.
	
== Singleton Methods

This section outlines the two methods that need to be included in your ActiveRecord models. In general this whole plugin can be thought of as one big has_many association.

=== acts_as_dag_links

This singleton class method needs to be called in your ActiveRecord model that represents the links for the DAG graph. For non-polymorphic graphs it has a required parameter:

	acts_as_dag_links :node_class_name => 'Class Name of the node model'

If the graph is polymorphic :node_class_name is unnecessary. A polymorphic call would be:

	acts_as_dag_links :polymorphic => true

==== Optional Parameters

- :ancestor_id_column. By default, 'ancestor_id', column to use for the ancestor reference
- :descendant_id_column. By default, 'descendant_id', column to use for the descendant reference
- :direct_column. By default, 'direct', boolean column that represents whether the link is an edge (direct)
- :count_column. By default, 'count', represents the number of ways to get from A to B.
- :polymorphic. By default, false, If you want polymorphic graphs see below.

With polymorphic graphs we also have...

- :ancestor_type_column. By default, 'ancestor_type', column to use for the ancestor type reference
- :descendant_type_column. By default, 'descendant_type', column to use for the descendant type reference

==== Required Table Columns

Each of the optional column parameters needs a field in the link table. Hence for non-polymorphic graphs a migration would look like...

	create_table :links, do |t|
		t.integer :ancestor_id
		t.integer :descendant_id
		t.boolean :direct
		t.integer :count
	end
	
And for polymorphic graphs...

	create_table :links, do |t|
		t.integer :ancestor_id
		t.string  :ancestor_type
		t.integer :descendant_id
		t.string  :descendant_type
		t.boolean :direct
		t.integer :count
	end
	
==== Injected Associations

Calling acts_as_dag_links method in the class definition injects the following associations.

	belongs_to :ancestor
	belongs_to :descendant
	
==== Injected Named Scopes

The recieves the following named scopes. The following two scopes narrows a query to only links with a certain ancestor or descendant

	named_scope :with_ancestor(ancestor_instance)
	named_scope :with_descendant(descendant_instance)
	
The scopes below narrow queries to direct or indirect links

	named_scope :direct
	named_scope :indirect
	
The scopes below attach the actual ancestor or descendant nodes

	named_scope :ancestor_nodes, :joins => :ancestor
	named_scope :descendant_nodes, :joins => :descendant
	
==== Injected Class Methods

Several class methods get added to the link model to make it easier to find and create edges, and find links.

	#Finds an edge of returns nil
	self.find_edge(ancestor,descendant)
	#Returns true if an edge exists
	self.edge?(ancestor,descendant)
	self.direct?(ancestor,descendant)
	
	#Finds a link or returns nil
	self.find_link(ancestor,descendant)
	#Returns true if a link exists
	self.connected?(ancestor,descendant)
	
	#Creates an edge between an ancestor and descendant
	self.create_edge(ancestor,descendant)
	self.connect(ancestor,descendant)
	
	#Creates an edge using save! between an ancestor and descendant
	self.create_edge!(ancestor,descendant)
	self.connect!(ancestor,descendant)
	
	#Builds an edge between an ancestor and descendant, returning an unsaved edge
	self.build_edge(ancestor,descendant)
	
	#Finds and returns the edge if it exists, or calls build_edge
	self.find_or_build_edge(ancestor,descendant)
	
==== Injected Instance Methods

Here is a sample of some of the important instance methods that get added to the link model.

	#whether the current edge can be destroyed. If the edge also has a link, ie it can be made indirectly, then it cannot be 	destroyed.	
	destroyable?()
	
	#Make the edge indirect. Removes the direct edge but keeps the indirect links
	make_indirect()
	
	#Makes the link direct. Adds a direct edge onto a link.
	make_direct()
	
	#Number of unique ways to get from the ancestor to the descendant
	count()
	
=== has_dag_links

This singleton class method can be optionally called from the node ActiveRecord model. If you do not call it you don't get all the nice associations within the node model, yet everything will still work fine. It takes the required parameter:

	has_dag_links :link_class_name => 'Class Name of the link model'

==== Optional Parameters

- :prefix. By default, ''. Use a prefix if your model calls has_dag_links for multiple link classes.

If your link class holds a polymorphic graph you also have...

- :ancestor_class_names. By default [], array of class names that are ancestors to this class.
- :descendant_class_names. By default [], array of class names that are descendants to this class.

==== Injected Associations

has_dag_links provides a number of has_many and has_many_through associations.

- links_as_ancestor: Has many association that finds the links with the current instance as ancestor
- links_as_descendant: Has many association that finds the links with the current instance as descendant
- links_as_parent: Has many association that finds direct links (edges) with the current instance as ancestor
- links_as_child: Has many association that finds direct links (edges) with the current instance as descendant

Note that if a record is in links_as_parent it will be in links_as_ancestor. Also note that adding records to either produces the same result as you can only add direct links (edges). Currently there is also an error if a record exists for links_as_ancestor and you try to add it to links_as_parent. The correct way is to use the make_direct method on the link instance.

For non-polymorphic graphs you also get the following associations. These find the actual ancestors as opposed to the link instances.

- ancestors
- descendants
- parents
- children

For polymorphic graphs where the ancestor_class_names or descendant_class_names includes the specified class names the following associations are also built. For each ancestor_class_name:

-links_as_descendant_for_#{ancestor_class_name.tableize}
-links_as_child_for_#{ancestor_class_name.tableize}
-ancestor_#{ancestor_class_name.tableize}
-parent_#{ancestor_class_name.tableize}

For each descendant_class_name

-links_as_ancestor_for_#{ancestor_class_name.tableize}
-links_as_parent_for_#{ancestor_class_name.tableize}
-descendant_#{ancestor_class_name.tableize}
-child_#{ancestor_class_name.tableize}

==== Injected Instance Methods

Along with the above associations a number of instance methods are defined.

-leaf? , Boolean value as to whether the current node is a leaf (no descendants)
-root? , Boolean value as to whether the current node is a root (no ancestors)

With polymorphic graphs for each ancestor_class_name another method is defined.

-root_for_#{ancestor_class_name.tableize}? , Returns true if the node has no ancestors of the represented type.

Likewise for each descendant_class_name.

-leaf_for_#{descendent_class_name.tableize}? , Returns true if the node has no descendants of the represented type.

== Usage

This section goes over some basic usage examples and presents some caveats.

=== Basic Non-polymorphic Graphs.

	class Node < ActiveRecord::Base
		has_dag_links :link_class_name => 'Link'
	end
	
	class Link < ActiveRecord::Base
		acts_as_dag_links :node_class_name => 'Node'
	end
	
	#Adding an edge
	parent_node = Node.create!
	child_node = Node.create!
	parent_node.children << child_node
	
	#Removing it
	link = Link.find_link(parent_node,child_node)
	if link.destroyable?
		link.destory
	else
		link.make_indirect
		link.save!
	end

=== Caveats for Adding, Updating, Deleting Links

Due to the algorithm used there are some caveats for modifying links. Don't worry if you try to do something illegal because it will raise exceptions and not muck the graph up.

You can only create new edges where a link doesn't already exist. If the link exists and you want to make it direct you need to promote it using make_direct instance method. Also you can only create direct links. This makes sense because indirect links are dependent on direct links. An indirect link by itself makes no sense to the algorithm. In reverse, you can only delete links which are direct and have no indirect nature. Hence the link only exists because it is direct and not through a sequence of other links. Instead of deleting these types of links you can downgrade them using make_indirect. This will remove the direct edge A -> C and leave the transitive edge from A -> B and B -> C. So just remember before you add, check if it exists, or use one of the link class method create_edge! which will always work.

== The Algorithm

This section briefly explains how the plugin works. For a really detailed understanding look at the perpetuate function which is used to fix up the graph when its changed.

To start there is some terminology:

- Node is a point on the graph
- Edge is a direct connection between two nodes.
- Link is a connection using one or more edges.

This implementation works by storing every possible link as a record in the database. The links originate at the ancestor and end at the descendant. Hence checking if X is a descendant of Y can be accomplished in one SQL query. Likewise finding all descendants or ancestors of Y can also be done in a single query. There are simple queries that don't use recursive stored procedures that you would need with a parent child model. Hence getting information out of the database is really fast. You can also find out the number of unique ways X is connected to Y and whether it has a direct connection. This allows the finding of all parents or children of a node with one query.

The downside to this implementation, besides the large storage requirements, is that updating the graph by adding or removing nodes or edges is not trivial. When edges are added a sort of cross product between the parent and child nodes ancestors and descendants is done that updates the counts and creates new links as necessary. Hence the complexity of an update, add, or deletion, matters heavily on how your graph is arranged and what nodes you are connecting.

== Thanks

Whoever did the awesome_nested_set plugin. This is my first plugin and I used that as a base. The Rails Way was also a great book that essentially taught me Rails. 

== Credit

Authors:: Matthew Leventi

Algorithm and plugin designed by Matthew Leventi Email:(first letter of my first name followed by my last name @gmail.com). Im open to questions, very open to bugs, and even more receptive of bug fixes. I am also currently (August 2008) looking for a job just having graduated University of Rochester.
",,2008-07-22T16:42:23Z,2022-05-10T21:41:01Z,2,1,55,3,"('mleventi', 13), ('Matthew Leventi', 1)",1,0,
kartik-v/bootstrap-fileinput,"An enhanced HTML 5 file input for Bootstrap 5.x/4.x./3.x with file preview, multiple selection, and more features.","
    
        
    
    
    bootstrap-fileinput
    
    <a href=""https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DTP3NZQ6G2AYU""
       title=""Donate via Paypal"" target=""_blank"">
    &nbsp; &nbsp; &nbsp;
    




[![Financial Contributors on Open Collective](https://opencollective.com/bootstrap-fileinput/all/badge.svg?label=financial+contributors)](https://opencollective.com/bootstrap-fileinput)
[![Latest Stable Version](https://poser.pugx.org/kartik-v/bootstrap-fileinput/v/stable)](https://packagist.org/packages/kartik-v/bootstrap-fileinput)
[![License](https://poser.pugx.org/kartik-v/bootstrap-fileinput/license)](https://packagist.org/packages/kartik-v/bootstrap-fileinput)
[![Packagist Downloads](https://poser.pugx.org/kartik-v/bootstrap-fileinput/downloads)](https://packagist.org/packages/kartik-v/bootstrap-fileinput)
[![Monthly Downloads](https://poser.pugx.org/kartik-v/bootstrap-fileinput/d/monthly)](https://packagist.org/packages/kartik-v/bootstrap-fileinput)



An enhanced HTML 5 file input for Bootstrap 5.x, 4.x, and 3.x with file preview for various files, offers multiple selection, resumable chunk uploads, and more. The plugin allows you a simple way to setup an advanced file picker/upload control built to work specially with Bootstrap 5.x, 4.x, and 3.x CSS3 styles. It enhances the file input functionality further, by offering support to preview a wide variety of files i.e. images, text, html, video, audio, flash, and objects. In addition, it includes AJAX based uploads, dragging &amp; dropping files, viewing upload progress, and selectively previewing, adding, or deleting files. 

> NEW: Bootstrap 5.x support is added from v5.2.0 (major release after v5.1.5) of the plugin. With v5.2.0, the plugin is able to automatically detect the bootstrap library version and deliver the relevant bootstrap specific functionality (if the bootstrap library JS file is loaded). Alternatively, check the `$.fn.fileinputBsVersion` setting for advanced use cases to avoid Bootstrap version detection issues.

> NOTE: Version 5.x is a significant rewrite. With version 5.x, the plugin code has been revamped with enhanced file management, resumable chunk uploads support, and other new features. You can go through the various closed enhancements and features and documented for [Release 5.x milestone](https://github.com/kartik-v/bootstrap-fileinput/milestone/1?closed=1).   

![Krajee Default Theme](https://user-images.githubusercontent.com/3592619/60393698-ea1fc280-9b36-11e9-9f16-b27c529d6819.png)

> NOTE: An alternative new [Krajee Explorer Theme](http://plugins.krajee.com/file-krajee-explorer-demo) (preview shown below) for `bootstrap-fileinput` has been released and available since v4.3.7. For more theming options and suggestions refer the [theming demos](http://plugins.krajee.com/file-theme-demo).

![Krajee Explorer Theme](https://user-images.githubusercontent.com/3592619/60393721-51d60d80-9b37-11e9-991c-810c942ac516.png)

## Documentation and Demo

View the [plugin documentation](http://plugins.krajee.com/file-input) and [plugin demos](http://plugins.krajee.com/file-input/demo) at Krajee JQuery plugins. 

## Pre-requisites  

1. [Bootstrap 5.x or 4.x, or 3.x](http://getbootstrap.com/)
2. Latest [JQuery](http://jquery.com/)
3. Most modern browsers supporting HTML5 (inputs and FileReader API) including CSS3 & JQuery. For Internet Explorer, one must use IE versions 10 and above. IE9 and below will work as a normal file input, and will not support multiple file selection or the HTML 5 FileReader API.
4. With release 4.0, AJAX uploads are supported. AJAX uploads require that the browser support HTML5 FormData and XHR2 (XMLHttpRequest 2). Most modern browsers support FormData and XHR2. The plugin will automatically degrade to normal form based submission for browsers not supporting AJAX uploads

> NOTE: 
> - Bootstrap 5.x is supported in addition to Bootstrap 3.x and 4.x since release v5.2.0. Refer the [CHANGE LOG](https://github.com/kartik-v/bootstrap-fileinput/blob/master/CHANGE.md) for details. 
> - Bootstrap 4.x is supported in addition to Bootstrap 3.x since release v4.4.4. Refer the [CHANGE LOG](https://github.com/kartik-v/bootstrap-fileinput/blob/master/CHANGE.md) for details. 
> - You can use the [sass branch](https://github.com/kartik-v/bootstrap-fileinput/tree/sass) for installation using `bootstrap-sass` dependency.
The [master branch](https://github.com/kartik-v/bootstrap-fileinput/tree/master) can be used for installation using plain `bootstrap` dependency.

## Installation

### Using Bower
To install using the `bower` package manager run:

    bower install bootstrap-fileinput

### Using NPM
To install using the `npm` package manager run:

    npm install bootstrap-fileinput

### Using Composer
To install using the `composer` package manager run: 

    $ php composer.phar require kartik-v/bootstrap-fileinput ""@dev""

or add:

    ""kartik-v/bootstrap-fileinput"": ""@dev""

to your composer.json file

### Manual Install

You can also manually install the plugin easily to your project. Just download the source [ZIP](https://github.com/kartik-v/bootstrap-fileinput/zipball/master) or [TAR ball](https://github.com/kartik-v/bootstrap-fileinput/tarball/master) and extract the plugin assets (css and js folders) into your project.

## Usage

Step 1: Load the following assets on your page in the order mentioned. 

```html


















<!-- buffer.min.js and filetype.min.js are necessary in the order listed for advanced mime type parsing and more correct
     preview. This is a feature available since v5.5.0 and is needed if you want to ensure file mime type is parsed 
     correctly even if the local file's extension is named incorrectly. This will ensure more correct preview of the
     selected file (note: this will involve a small processing overhead in scanning of file contents locally). If you 
     do not load these scripts then the mime type parsing will largely be derived using the extension in the filename
     and some basic file content parsing signatures. -->



<!-- piexif.min.js is needed for auto orienting image files OR when restoring exif data in resized images and when you
    wish to resize images before upload. This must be loaded before fileinput.min.js -->


<!-- sortable.min.js is only needed if you wish to sort / rearrange files in initial preview. 
    This must be loaded before fileinput.min.js -->


<!-- bootstrap.bundle.min.js below is needed if you wish to zoom and preview file content in a detail modal
    dialog. bootstrap 5.x or 4.x is supported. You can also use the bootstrap js 3.3.x versions. -->










```
With v5.2.1, the plugin is able to automatically detect the bootstrap library version and deliver the relevant bootstrap specific functionality (if you have loaded the bootstrap.min.js before fileinput.min.js). In case of any issues - you can explicitly set the bootstrap version by setting the following variable before the plugin initialization script.

```js
// set this before initializing the fileinput plugin
$.fn.fileinputBsVersion = '3.4.1'; // for example if using bootstrap css 3.4.1 version
```

If you noticed, you need to load the `jquery.min.js` and `bootstrap.min.css` in addition to the `fileinput.min.css` and `fileinput.min.js`. The theme file `themes/fa/theme.js` can be optionally included for the font awesome icons styling. The locale file `.js` can be optionally included for translating for your language if needed.

**Optional Dependent Plugins**

- The `piexif.min.js` file is the source for the [Piexifjs plugin by hMatoba](https://github.com/hMatoba/piexifjs). It is required to be loaded before `fileinput.min.js` if you wish to use the image resize feature of the **bootstrap-fileinput** plugin. 
- The `sortable.min.js` file is the source for the [Sortable plugin by rubaxa](https://github.com/rubaxa/Sortable). It is required to be loaded before `fileinput.min.js` if you wish to sort the thumbnails in the initial preview.

For ease of access, the sources for the above plugins are included in the `js/plugins` folder of this project repository.

Step 2: Initialize the plugin on your page. For example,

```html
// HTML markup



$(document).ready(function() {
    // initialize with defaults
    $(""#input-id"").fileinput();

    // with plugin options
    $(""#input-id"").fileinput({'uploadUrl': '/path/to/your-upload-api', 'previewFileType': 'any'});
});

```

The `#input-id` is the identifier for the input (e.g. `type = file`) on your page, which is hidden automatically by the plugin. 

Alternatively, you can directly call the plugin options by setting data attributes to your input field. To auto initialize the plugin with just HTML markup - add the CSS class `file` to your file input markup element. 

```html

```

**NOTE:** When initializing the plugin via javascript (as mentioned earlier), do not add the CSS class `file` to the input markup (else you would get an erronaeous / inconsistent output).

## Contributors

### Code Contributors

This project exists thanks to all the people who contribute. [[Contribute](.github/CONTRIBUTING.md)].


### Financial Contributors

Become a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/bootstrap-fileinput/contribute)]

#### Individuals



#### Organizations

Support this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/bootstrap-fileinput/contribute)]












## License

**bootstrap-fileinput** is released under the BSD-3-Clause License. See the bundled `LICENSE.md` for details.
","'ajax-upload', 'bootstrap', 'bootstrap-fileinput', 'bower', 'chunk', 'chunked-uploads', 'css', 'filereader-api', 'html', 'html5', 'javascript', 'jquery', 'jquery-plugin', 'krajee', 'krajee-explorer-theme', 'resumable', 'resumable-upload', 'theme', 'upload', 'xhr'",2014-03-02T09:52:16Z,2024-04-09T03:32:19Z,150,128,5344,378,"('kartik-v', 1062), ('RobiNN1', 9), ('RobiNN', 7), ('rapomon', 7), ('CyanoFresh', 6), ('horkenw', 5), ('Kwaadpepper', 5), ('clq321', 5), ('H.Gökhan Sarı', 4), ('dragonfly4', 4), ('zolikonta', 3), ('evil0th', 3), ('loshmis', 3), ('MikaKarjunen', 3), ('Maks3w', 3), ('bamz3r', 3), ('koxu1996', 3), ('ziaenezhad', 2), ('salihklc', 2), ('sepehrr', 2), ('lourdas', 2), ('fizista', 2), ('alyushkasm', 2), ('franciscoaleixo', 2), ('kalevigit', 2), ('mikosu3', 2), ('yuta', 2), ('dheroefic', 2), ('DanielDanielDanielD', 2), ('dfisch', 2), ('akalongman', 2), ('Erik B', 2), ('lamoglia', 2), ('alphp', 2), ('DarkCompiled', 2), ('jespermjonsson', 2), ('klnjmm', 2), ('oadam', 2), ('Sensetivity', 2), ('zanysoft', 2), ('Juexin Wang', 2), ('Marcelo Garbin', 2), ('nekofar', 2), ('b00f', 2), ('Zeng-qh', 1), ('asikk', 1), ('an7oine', 1), ('zachabney', 1), ('sgrastar', 1), ('rdg7739', 1), ('Weldeasy', 1), ('Vladimír Náprstek', 1), ('Hawkeye1909', 1), ('TOLK-kz', 1), ('Jako', 1), ('LazyRichard', 1), ('sh0', 1), ('sdkakcy', 1), ('semihferik', 1), ('QuentinBellus', 1), ('piotrantosik', 1), ('Pedro Adame', 1), ('OBDE', 1), ('Norbert Fuksz', 1), ('Niktib', 1), ('escapeboy', 1), ('mortezakarimi', 1), ('Mithgol', 1), ('MindaugasVarkalys', 1), ('mertskaplan', 1), ('nurielmeni', 1), ('skarzi', 1), ('wy373226722', 1), ('upsite4k', 1), ('tchiotludo', 1), ('sergiohdez', 1), ('ps202', 1), ('phachon', 1), ('pavel', 1), ('pablogrela', 1), ('nox-4O4', 1), ('fabhed', 1), ('michalhary', 1), ('mapo80', 1), ('lglumine', 1), ('kv1dr', 1), ('kpodejma', 1), ('kcockerill', 1), ('kikonen', 1), ('kangqf', 1), ('jsleetw', 1), ('monkeywithacupcake', 1), ('ic-martin', 1), ('iaesaudi', 1), ('gabrielozaki', 1), ('duyvu1311', 1), ('dobrou', 1), ('mkalus', 1), ('gficher', 1), ('guillermo-varela', 1), ('lj19950508', 1), ('gael-wogenstahl', 1), ('mrgarciamanuel', 1), ('flo-sch', 1), ('Fellipe Lamoglia', 1), ('fatihdemirag', 1), ('s1lver', 1), ('stbn694', 1), ('Eng-Fouad', 1), ('EdwinRoestenburg', 1), ('doston92', 1), ('DoraYC', 1), ('Dmitriy', 1), ('DaveFerger', 1), ('MauMaGau', 1), ('dtagliavini', 1), ('haudan', 1), ('dcarreroc', 1), ('chaintng', 1), ('xversial', 1), ('bmois', 1), ('schneuwlybe', 1), ('arthurc', 1), ('Alex Solomaha', 1), ('choma', 1), ('maramal', 1), ('MartialSeron', 1), ('Marcos Coelho', 1), ('swolley', 1), ('morawskim', 1), ('garbinmarcelo', 1), ('Mads Jensen', 1), ('maxxer', 1), ('anothersoftware-lv', 1), ('Labilis', 1), ('kutera', 1), ('ert78gb', 1), ('Krakozaber', 1), ('KevinBeckers', 1), ('kenjebaev', 1), ('Johan Rönn', 1), ('JohJohan', 1), ('jeijei4', 1), ('JStika', 1), ('iqbalmalik89', 1), ('Illirgway', 1), ('iliak', 1), ('hugoj-goncalves', 1), ('thyseus', 1), ('hgeorgilas', 1)",106,91,
WebAssembly/binaryen,Optimizer and compiler/toolchain library for WebAssembly,"[![CI](https://github.com/WebAssembly/binaryen/workflows/CI/badge.svg?branch=main&event=push)](https://github.com/WebAssembly/binaryen/actions?query=workflow%3ACI)

# Binaryen

Binaryen is a compiler and toolchain infrastructure library for WebAssembly,
written in C++. It aims to make [compiling to WebAssembly] **easy, fast, and
effective**:

 * **Easy**: Binaryen has a simple [C API] in a single header, and can also be
   [used from JavaScript][JS_API]. It accepts input in [WebAssembly-like
   form][compile_to_wasm] but also accepts a general [control flow graph] for
   compilers that prefer that.

 * **Fast**: Binaryen's internal IR uses compact data structures and is designed
   for completely parallel codegen and optimization, using all available CPU
   cores. Binaryen's IR also compiles down to WebAssembly extremely easily and
   quickly because it is essentially a subset of WebAssembly.

 * **Effective**: Binaryen's optimizer has many passes (see an overview later
   down) that can improve code size and speed. These optimizations aim to make
   Binaryen powerful enough to be used as a [compiler backend][backend] by
   itself. One specific area of focus is on WebAssembly-specific optimizations
   (that general-purpose compilers might not do), which you can think of as
   wasm [minification], similar to minification for JavaScript, CSS, etc., all
   of which are language-specific.

Toolchains using Binaryen as a **component** (typically running `wasm-opt`) include:

  * [`Emscripten`](http://emscripten.org) (C/C++)
  * [`wasm-pack`](https://github.com/rustwasm/wasm-pack) (Rust)
  * [`J2CL`](https://j2cl.io/) (Java; [`J2Wasm`](https://github.com/google/j2cl/tree/master/samples/wasm))
  * [`Kotlin`](https://kotl.in/wasmgc) (Kotlin/Wasm)
  * [`Dart`](https://flutter.dev/wasm) (Flutter)

For more on how some of those work, see the toolchain architecture parts of
the [V8 WasmGC porting blogpost](https://v8.dev/blog/wasm-gc-porting).

Compilers using Binaryen as a **library** include:

 * [`AssemblyScript`](https://github.com/AssemblyScript/assemblyscript) which compiles a variant of TypeScript to WebAssembly
 * [`wasm2js`](https://github.com/WebAssembly/binaryen/blob/main/src/wasm2js.h) which compiles WebAssembly to JS
 * [`Asterius`](https://github.com/tweag/asterius) which compiles Haskell to WebAssembly
 * [`Grain`](https://github.com/grain-lang/grain) which compiles Grain to WebAssembly

Binaryen also provides a set of **toolchain utilities** that can

 * **Parse** and **emit** WebAssembly. In particular this lets you load
   WebAssembly, optimize it using Binaryen, and re-emit it, thus implementing a
   wasm-to-wasm optimizer in a single command.
 * **Interpret** WebAssembly as well as run the WebAssembly spec tests.
 * Integrate with **[Emscripten](http://emscripten.org)** in order to provide a
   complete compiler toolchain from C and C++ to WebAssembly.
 * **Polyfill** WebAssembly by running it in the interpreter compiled to
   JavaScript, if the browser does not yet have native support (useful for
   testing).

Consult the [contributing instructions](Contributing.md) if you're interested in
participating.

## Binaryen IR

Binaryen's internal IR is designed to be

 * **Flexible and fast** for optimization.
 * **As close as possible to WebAssembly** so it is simple and fast to convert
   it to and from WebAssembly.

There are a few differences between Binaryen IR and the WebAssembly language:

 * Tree structure
   * Binaryen IR [is a tree][binaryen_ir], i.e., it has hierarchical structure,
     for convenience of optimization. This differs from the WebAssembly binary
     format which is a stack machine.
   * Consequently Binaryen's text format allows only s-expressions.
     WebAssembly's official text format is primarily a linear instruction list
     (with s-expression extensions). Binaryen can't read the linear style, but
     it can read a wasm text file if it contains only s-expressions.
   * Binaryen uses Stack IR to optimize ""stacky"" code (that can't be
     represented in structured form).
   * When stacky code must be represented in Binaryen IR, such as with
     multivalue instructions and blocks, it is represented with tuple types that
     do not exist in the WebAssembly language. In addition to multivalue
     instructions, locals and globals can also have tuple types in Binaryen IR
     but not in WebAssembly. Experiments show that better support for
     multivalue could enable useful but small code size savings of 1-3%, so it
     has not been worth changing the core IR structure to support it better.
   * Block input values (currently only supported in `catch` blocks in the
     exception handling feature) are represented as `pop` subexpressions.
 * Types and unreachable code
   * WebAssembly limits block/if/loop types to none and the concrete value types
     (i32, i64, f32, f64). Binaryen IR has an unreachable type, and it allows
     block/if/loop to take it, allowing [local transforms that don't need to
     know the global context][unreachable]. As a result, Binaryen's default
     text output is not necessarily valid wasm text. (To get valid wasm text,
     you can do `--generate-stack-ir --print-stack-ir`, which prints Stack IR,
     this is guaranteed to be valid for wasm parsers.)
   * Binaryen ignores unreachable code when reading WebAssembly binaries. That
     means that if you read a wasm file with unreachable code, that code will be
     discarded as if it were optimized out (often this is what you want anyhow,
     and optimized programs have no unreachable code anyway, but if you write an
     unoptimized file and then read it, it may look different). The reason for
     this behavior is that unreachable code in WebAssembly has corner cases that
     are tricky to handle in Binaryen IR (it can be very unstructured, and
     Binaryen IR is more structured than WebAssembly as noted earlier). Note
     that Binaryen does support unreachable code in .wat text files, since as we
     saw Binaryen only supports s-expressions there, which are structured.
 * Blocks
   * Binaryen IR has only one node that contains a variable-length list of
     operands: the block. WebAssembly on the other hand allows lists in loops,
     if arms, and the top level of a function. Binaryen's IR has a single
     operand for all non-block nodes; this operand may of course be a block.
     The motivation for this property is that many passes need special code
     for iterating on lists, so having a single IR node with a list simplifies
     them.
   * As in wasm, blocks and loops may have names. Branch targets in the IR are
     resolved by name (as opposed to nesting depth). This has 2 consequences:
     * Blocks without names may not be branch targets.
     * Names are required to be unique. (Reading .wat files with duplicate names
       is supported; the names are modified when the IR is constructed).
   * As an optimization, a block that is the child of a loop (or if arm, or
     function toplevel) and which has no branches targeting it will not be
     emitted when generating wasm. Instead its list of operands will be directly
     used in the containing node. Such a block is sometimes called an ""implicit
     block"".
 * Reference Types
  * The wasm text and binary formats require that a function whose address is
    taken by `ref.func` must be either in the table, or declared via an
    `(elem declare func $..)`. Binaryen will emit that data when necessary, but
    it does not represent it in IR. That is, IR can be worked on without needing
    to think about declaring function references.
  * Binaryen IR allows non-nullable locals in the form that the wasm spec does,
    (which was historically nicknamed ""1a""), in which a `local.get` must be
    structurally dominated by a `local.set` in order to validate (that ensures
    we do not read the default value of null). Despite being aligned with the
    wasm spec, there are some minor details that you may notice:
    * A nameless `Block` in Binaryen IR does not interfere with validation.
      Nameless blocks are never emitted into the binary format (we just emit
      their contents), so we ignore them for purposes of non-nullable locals. As
      a result, if you read wasm text emitted by Binaryen then you may see what
      seems to be code that should not validate per the spec (and may not
      validate in wasm text parsers), but that difference will not exist in the
      binary format (binaries emitted by Binaryen will always work everywhere,
      aside for bugs of course).
    * The Binaryen pass runner will automatically fix up validation after each
      pass (finding things that do not validate and fixing them up, usually by
      demoting a local to be nullable). As a result you do not need to worry
      much about this when writing Binaryen passes. For more details see the
      `requiresNonNullableLocalFixups()` hook in `pass.h` and the
      `LocalStructuralDominance` class.
  * `br_if` output types are more refined in Binaryen IR: they have the type of
    the value, when a value flows in. In the wasm spec the type is that of the
    branch target, which may be less refined. Using the more refined type here
    ensures that we optimize in the best way possible, using all the type
    information, but it does mean that some roundtripping operations may look a
    little different. In particular, when we emit a `br_if` whose type is more
    refined in Binaryen IR then we emit a cast right after it, so that the
    output has the right type in the wasm spec. That may cause a few bytes of
    extra size in rare cases (we avoid this overhead in the common case where
    the `br_if` value is unused).
 * Strings
   * Binaryen allows string views (`stringview_wtf16` etc.) to be cast using
     `ref.cast`. This simplifies the IR, as it allows `ref.cast` to always be
     used in all places (and it is lowered to `ref.as_non_null` where possible
     in the optimizer). The stringref spec does not seem to allow this though,
     and to fix that the binary writer will replace `ref.cast` that casts a
     string view to a non-nullable type to `ref.as_non_null`. A `ref.cast` of a
     string view that is a no-op is skipped entirely.

As a result, you might notice that round-trip conversions (wasm => Binaryen IR
=> wasm) change code a little in some corner cases.

 * When optimizing Binaryen uses an additional IR, Stack IR (see
   `src/wasm-stack.h`). Stack IR allows a bunch of optimizations that are
   tailored for the stack machine form of WebAssembly's binary format (but Stack
   IR is less efficient for general optimizations than the main Binaryen IR). If
   you have a wasm file that has been particularly well-optimized, a simple
   round-trip conversion (just read and write, without optimization) may cause
   more noticeable differences, as Binaryen fits it into Binaryen IR's more
   structured format. If you also optimize during the round-trip conversion then
   Stack IR opts will be run and the final wasm will be better optimized.

Notes when working with Binaryen IR:

 * As mentioned above, Binaryen IR has a tree structure. As a result, each
   expression should have exactly one parent - you should not ""reuse"" a node by
   having it appear more than once in the tree. The motivation for this
   limitation is that when we optimize we modify nodes, so if they appear more
   than once in the tree, a change in one place can appear in another
   incorrectly.
 * For similar reasons, nodes should not appear in more than one functions.

### Intrinsics

Binaryen intrinsic functions look like calls to imports, e.g.,

```wat
(import ""binaryen-intrinsics"" ""foo"" (func $foo))
```

Implementing them that way allows them to be read and written by other tools,
and it avoids confusing errors on a binary format error that could happen in
those tools if we had a custom binary format extension.

An intrinsic method may be optimized away by the optimizer. If it is not, it
must be **lowered** before shipping the wasm, as otherwise it will look like a
call to an import that does not exist (and VMs will show an error on not having
a proper value for that import). That final lowering is *not* done
automatically. A user of intrinsics must run the pass for that explicitly,
because the tools do not know when the user intends to finish optimizing, as the
user may have a pipeline of multiple optimization steps, or may be doing local
experimentation, or fuzzing/reducing, etc. Only the user knows when the final
optimization happens before the wasm is ""final"" and ready to be shipped. Note
that, in general, some additional optimizations may be possible after the final
lowering, and so a useful pattern is to optimize once normally with intrinsics,
then lower them away, then optimize after that, e.g.:

```bash
wasm-opt input.wasm -o output.wasm -O --intrinsic-lowering -O
```

Each intrinsic defines its semantics, which includes what the optimizer is
allowed to do with it and what the final lowering will turn it to. See
[intrinsics.h](https://github.com/WebAssembly/binaryen/blob/main/src/ir/intrinsics.h)
for the detailed definitions. A quick summary appears here:

* `call.without.effects`: Similar to a `call_ref` in that it receives
  parameters, and a reference to a function to call, and calls that function
  with those parameters, except that the optimizer can assume the call has no
  side effects, and may be able to optimize it out (if it does not have a
  result that is used, generally).

## Tools

This repository contains code that builds the following tools in `bin/` (see the [building instructions](#building)):

 * **`wasm-opt`**: Loads WebAssembly and runs Binaryen IR passes on it.
 * **`wasm-as`**: Assembles WebAssembly in text format (currently S-Expression
   format) into binary format (going through Binaryen IR).
 * **`wasm-dis`**: Un-assembles WebAssembly in binary format into text format
   (going through Binaryen IR).
 * **`wasm2js`**: A WebAssembly-to-JS compiler. This is used by Emscripten to
   generate JavaScript as an alternative to WebAssembly.
 * **`wasm-reduce`**: A testcase reducer for WebAssembly files. Given a wasm file
   that is interesting for some reason (say, it crashes a specific VM),
   wasm-reduce can find a smaller wasm file that has the same property, which is
   often easier to debug. See the
   [docs](https://github.com/WebAssembly/binaryen/wiki/Fuzzing#reducing)
   for more details.
 * **`wasm-shell`**: A shell that can load and interpret WebAssembly code. It can
   also run the spec test suite.
 * **`wasm-emscripten-finalize`**: Takes a wasm binary produced by llvm+lld and
   performs emscripten-specific passes over it.
 * **`wasm-ctor-eval`**: A tool that can execute functions (or parts of functions)
   at compile time.
 * **`wasm-merge`**: Merges multiple wasm files into a single file, connecting
   corresponding imports to exports as it does so. Like a bundler for JS, but
   for wasm.
 * **`wasm-metadce`**: A tool to remove parts of Wasm files in a flexible way
   that depends on how the module is used.
 * **`binaryen.js`**: A standalone JavaScript library that exposes Binaryen methods for [creating and optimizing Wasm modules](https://github.com/WebAssembly/binaryen/blob/main/test/binaryen.js/hello-world.js). For builds, see [binaryen.js on npm](https://www.npmjs.com/package/binaryen) (or download it directly from [GitHub](https://raw.githubusercontent.com/AssemblyScript/binaryen.js/master/index.js) or [unpkg](https://unpkg.com/binaryen@latest/index.js)). Minimal requirements: Node.js v15.8 or Chrome v75 or Firefox v78.

All of the Binaryen tools are deterministic, that is, given the same inputs you should always get the same outputs. (If you see a case that behaves otherwise, please file an issue.)

Usage instructions for each are below.

## Binaryen Optimizations

Binaryen contains
[a lot of optimization passes](https://github.com/WebAssembly/binaryen/tree/main/src/passes)
to make WebAssembly smaller and faster. You can run the Binaryen optimizer by
using ``wasm-opt``, but also they can be run while using other tools, like
``wasm2js`` and ``wasm-metadce``.

* The default optimization pipeline is set up by functions like
  [`addDefaultFunctionOptimizationPasses`](https://github.com/WebAssembly/binaryen/blob/369b8bdd3d9d49e4d9e0edf62e14881c14d9e352/src/passes/pass.cpp#L396).
* There are various
  [pass options](https://github.com/WebAssembly/binaryen/blob/369b8bdd3d9d49e4d9e0edf62e14881c14d9e352/src/pass.h#L85)
  that you can set, to adjust the optimization and shrink levels, whether to
  ignore unlikely traps, inlining heuristics, fast-math, and so forth. See
  ``wasm-opt --help`` for how to set them and other details.

See each optimization pass for details of what it does, but here is a quick
overview of some of the relevant ones:

* **CoalesceLocals** - Key ""register allocation"" pass. Does a live range
  analysis and then reuses locals in order to minimize their number, as well as
  to remove copies between them.
* **CodeFolding** - Avoids duplicate code by merging it (e.g. if two `if` arms
  have some shared instructions at their end).
* **CodePushing** - ""Pushes"" code forward past branch operations, potentially
  allowing the code to not be run if the branch is taken.
* **DeadArgumentElimination** - LTO pass to remove arguments to a function if it
  is always called with the same constants.
* **DeadCodeElimination**
* **Directize** - Turn an indirect call into a normal call, when the table index
  is constant.
* **DuplicateFunctionElimination** - LTO pass.
* **Inlining** - LTO pass.
* **LocalCSE** - Simple local common subexpression elimination.
* **LoopInvariantCodeMotion**
* **MemoryPacking** - Key ""optimize data segments"" pass that combines segments,
  removes unneeded parts, etc.
* **MergeBlocks** - Merge a `block` to an outer one where possible, reducing
  their number.
* **MergeLocals** - When two locals have the same value in part of their
  overlap, pick in a way to help CoalesceLocals do better later (split off from
  CoalesceLocals to keep the latter simple).
* **MinifyImportsAndExports** - Minifies them to ""a"", ""b"", etc.
* **OptimizeAddedConstants** - Optimize a load/store with an added constant into
  a constant offset.
* **OptimizeInstructions** - Key peephole optimization pass with a constantly
  increasing list of patterns.
* **PickLoadSigns** - Adjust whether a load is signed or unsigned in order to
  avoid sign/unsign operations later.
* **Precompute** - Calculates constant expressions at compile time, using the
  built-in interpreter (which is guaranteed to be able to handle any constant
  expression).
* **ReReloop** - Transforms wasm structured control flow to a CFG and then goes
  back to structured form using the Relooper algorithm, which may find more
  optimal shapes.
* **RedundantSetElimination** - Removes a `local.set` of a value that is already
  present in a local. (Overlaps with CoalesceLocals; this achieves the specific
  operation just mentioned without all the other work CoalesceLocals does, and
  therefore is useful in other places in the optimization pipeline.)
* **RemoveUnsedBrs** - Key ""minor control flow optimizations"" pass, including
  jump threading and various transforms that can get rid of a `br` or `br_table`
  (like turning a `block` with a `br` in the middle into an `if` when possible).
* **RemoveUnusedModuleElements** - ""Global DCE"", an LTO pass that removes
  imports, functions, globals, etc., when they are not used.
* **ReorderFunctions** - Put more-called functions first, potentially allowing
  the LEB emitted to call them to be smaller (in a very large program).
* **ReorderLocals** - Put more-used locals first, potentially allowing the LEB
  emitted to use them to be smaller (in a very large function). After the
  sorting, it also removes locals not used at all.
* **SimplifyGlobals** - Optimizes globals in various ways, for example,
  coalescing them, removing mutability from a global never modified, applying a
  constant value from an immutable global, etc.
* **SimplifyLocals** - Key ""`local.get/set/tee`"" optimization pass, doing things
  like replacing a set and a get with moving the set’s value to the get (and
  creating a tee) where possible. Also creates `block/if/loop` return values
  instead of using a local to pass the value.
* **Vacuum** - Key ""remove silly unneeded code"" pass, doing things like removing
  an `if` arm that has no contents, a drop of a constant value with no side
  effects, a `block` with a single child, etc.

""LTO"" in the above means an optimization is Link Time Optimization-like in that
it works across multiple functions, but in a sense Binaryen is always ""LTO"" as
it usually is run on the final linked wasm.

Advanced optimization techniques in the Binaryen optimizer include
[SSAification](https://github.com/WebAssembly/binaryen/blob/main/src/passes/SSAify.cpp),
[Flat IR](https://github.com/WebAssembly/binaryen/blob/main/src/ir/flat.h), and
[Stack/Poppy IR](https://github.com/WebAssembly/binaryen/blob/main/src/ir/stack-utils.h).

See the
[Optimizer Cookbook wiki page](https://github.com/WebAssembly/binaryen/wiki/Optimizer-Cookbook)
for more on how to use the optimizer effectively.

Binaryen also contains various passes that do other things than optimizations,
like
[legalization for JavaScript](https://github.com/WebAssembly/binaryen/blob/main/src/passes/LegalizeJSInterface.cpp),
[Asyncify](https://github.com/WebAssembly/binaryen/blob/main/src/passes/Asyncify.cpp),
etc.

## Building

Binaryen uses git submodules (at time of writing just for gtest), so before you build you will have to initialize the submodules:

```bash
git submodule init
git submodule update
```

After that you can build with CMake:

```bash
cmake . && make
```

A C++17 compiler is required. On macOS, you need to install `cmake`, for example, via `brew install cmake`. Note that you can also use `ninja` as your generator: `cmake -G Ninja . && ninja`.

To avoid the gtest dependency, you can pass `-DBUILD_TESTS=OFF` to cmake.

Binaryen.js can be built using Emscripten, which can be installed via [the SDK](http://kripken.github.io/emscripten-site/docs/getting_started/downloads.html).

- Building for Node.js:
  ```bash
  emcmake cmake . && emmake make binaryen_js
  ```
- Building for the browser:
  ```bash
  emcmake cmake -DBUILD_FOR_BROWSER=ON . && emmake make
  ```

### Visual C++

1. Using the Microsoft Visual Studio Installer, install the ""Visual C++ tools for CMake"" component.

1. Generate the projects:

   ```bash
   mkdir build
   cd build
   ""%VISUAL_STUDIO_ROOT%\Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin\cmake.exe"" ..
   ```

   Substitute VISUAL_STUDIO_ROOT with the path to your Visual Studio
   installation. In case you are using the Visual Studio Build Tools, the path
   will be ""C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools"".

1. From the Developer Command Prompt, build the desired projects:

   ```bash
   msbuild binaryen.vcxproj
   ```

   CMake generates a project named ""ALL_BUILD.vcxproj"" for conveniently building all the projects.

## Releases

Builds are distributed by the various toolchains that use Binaryen, like
Emscripten, `wasm-pack`, etc. There are also official releases on GitHub:

https://github.com/WebAssembly/binaryen/releases

Currently builds of the following platforms are included:

 * `Linux-x86_64`
 * `Linux-arm64`
 * `MacOS-x86_64`
 * `MacOS-arm64`
 * `Windows-x86_64`
 * `Node.js` (experimental): A port of `wasm-opt` to JavaScript+WebAssembly.
   Run `node wasm-opt.js` as a drop-in replacement for a native build of
   `wasm-opt`, on any platform that Node.js runs on. Requires Node.js 18+ (for
   Wasm EH and Wasm Threads). (Note that this build may also run in Deno, Bun,
   or other JavaScript+WebAssembly environments, but is tested only on Node.js.)

## Running

### wasm-opt

Run

```bash
bin/wasm-opt [.wasm or .wat file] [options] [passes, see --help] [--help]
```

The wasm optimizer receives WebAssembly as input, and can run transformation
passes on it, as well as print it (before and/or after the transformations). For
example, try

```bash
bin/wasm-opt test/lit/passes/name-types.wast -all -S -o -
```

That will output one of the test cases in the test suite. To run a
transformation pass on it, try

```bash
bin/wasm-opt test/lit/passes/name-types.wast --name-types -all -S -o -
```

The `name-types` pass ensures each type has a name and renames exceptionally long type names. You can see
the change the transformation causes by comparing the output of the two commands.

It's easy to add your own transformation passes to the shell, just add `.cpp`
files into `src/passes`, and rebuild the shell. For example code, take a look at
the [`name-types` pass](https://github.com/WebAssembly/binaryen/blob/main/src/passes/NameTypes.cpp).

Some more notes:

 * See `bin/wasm-opt --help` for the full list of options and passes.
 * Passing `--debug` will emit some debugging info. Individual debug channels
   (defined in the source code via `#define DEBUG_TYPE xxx`) can be enabled by
   passing them as list of comma-separated strings. For example: `bin/wasm-opt
   --debug=binary`. These debug channels can also be enabled via the
   `BINARYEN_DEBUG` environment variable.

### wasm2js

Run

```bash
bin/wasm2js [input.wasm file]
```

This will print out JavaScript to the console.

For example, try

```bash
bin/wasm2js test/hello_world.wat
```

That output contains

```js
 function add(x, y) {
  x = x | 0;
  y = y | 0;
  return x + y | 0 | 0;
 }
```

as a translation of

```wat
 (func $add (; 0 ;) (type $0) (param $x i32) (param $y i32) (result i32)
  (i32.add
   (local.get $x)
   (local.get $y)
  )
 )
```

wasm2js's output is in ES6 module format - basically, it converts a wasm
module into an ES6 module (to run on older browsers and Node.js versions
you can use Babel etc. to convert it to ES5). Let's look at a full example
of calling that hello world wat; first, create the main JS file:

```js
// main.mjs
import { add } from ""./hello_world.mjs"";
console.log('the sum of 1 and 2 is:', add(1, 2));
```

The run this (note that you need a new enough Node.js with ES6 module
support):

```bash
$ bin/wasm2js test/hello_world.wat -o hello_world.mjs
$ node --experimental-modules main.mjs
the sum of 1 and 2 is: 3
```

Things keep to in mind with wasm2js's output:

 * You should run wasm2js with optimizations for release builds, using `-O`
   or another optimization level. That will optimize along the entire pipeline
   (wasm and JS). It won't do everything a JS minifer would, though, like
   minify whitespace, so you should still run a normal JS minifer afterwards.
 * It is not possible to match WebAssembly semantics 100% precisely with fast
   JavaScript code. For example, every load and store may trap, and to make
   JavaScript do the same we'd need to add checks everywhere, which would be
   large and slow. Instead, wasm2js assumes loads and stores do not trap, that
   int/float conversions do not trap, and so forth. There may also be slight
   differences in corner cases of conversions, like non-trapping float to int.

### wasm-ctor-eval

`wasm-ctor-eval` executes functions, or parts of them, at compile time.
After doing so it serializes the runtime state into the wasm, which is like
taking a ""snapshot"". When the wasm is later loaded and run in a VM, it will
continue execution from that point, without re-doing the work that was already
executed.

For example, consider this small program:

```wat
(module
 ;; A global variable that begins at 0.
 (global $global (mut i32) (i32.const 0))

 (import ""import"" ""import"" (func $import))

 (func ""main""
  ;; Set the global to 1.
  (global.set $global
   (i32.const 1))

  ;; Call the imported function. This *cannot* be executed at
  ;; compile time.
  (call $import)

  ;; We will never get to this point, since we stop at the
  ;; import.
  (global.set $global
   (i32.const 2))
 )
)
```

We can evaluate part of it at compile time like this:

```bash
wasm-ctor-eval input.wat --ctors=main -S -o -
```

This tells it that there is a single function that we want to execute (""ctor""
is short for ""global constructor"", a name that comes from code that is executed
before a program's entry point) and then to print it as text to `stdout`. The
result is this:

```bash
trying to eval main
  ...partial evalling successful, but stopping since could not eval: call import: import.import
  ...stopping
(module
 (type $none_=>_none (func))
 (import ""import"" ""import"" (func $import))
 (global $global (mut i32) (i32.const 1))
 (export ""main"" (func $0_0))
 (func $0_0
  (call $import)
  (global.set $global
   (i32.const 2)
  )
 )
)
```

The logging shows us managing to eval part of `main()`, but not all of it, as
expected: We can eval the first `global.get`, but then we stop at the call to
the imported function (because we don't know what that function will be when the
wasm is actually run in a VM later). Note how in the output wasm the global's
value has been updated from 0 to 1, and that the first `global.get` has been
removed: the wasm is now in a state that, when we run it in a VM, will seamlessly
continue to run from the point at which `wasm-ctor-eval` stopped.

In this tiny example we just saved a small amount of work. How much work can be
saved depends on your program. (It can help to do pure computation up front, and
leave calls to imports to as late as possible.)

Note that `wasm-ctor-eval`'s name is related to global constructor functions,
as mentioned earlier, but there is no limitation on what you can execute here.
Any export from the wasm can be executed, if its contents are suitable. For
example, in Emscripten `wasm-ctor-eval` is even run on `main()` when possible.

### wasm-merge

`wasm-merge` combines wasm files together. For example, imagine you have a
project that uses wasm files from multiple toolchains. Then it can be helpful to
merge them all into a single wasm file before shipping, since in a single wasm
file the calls between the modules become just normal calls inside a module,
which allows them to be inlined, dead code eliminated, and so forth, potentially
improving speed and size.

`wasm-merge` operates on normal wasm files. It differs from `wasm-ld` in that
respect, as `wasm-ld` operates on wasm *object* files. `wasm-merge` can help
in multi-toolchain situations where at least one of the toolchains does not use
wasm object files.

For example, imagine we have these two wasm files:

```wat
;; a.wasm
(module
  (import ""second"" ""bar"" (func $second.bar))

  (export ""main"" (func $func))

  (func $func
    (call $second.bar)
  )
)
```

```wat
;; b.wasm
(module
  (import ""outside"" ""log"" (func $log (param i32)))

  (export ""bar"" (func $func))

  (func $func
    (call $log
      (i32.const 42)
    )
  )
)
```

The filenames on your local drive are `a.wasm` and `b.wasm`, but for merging /
bundling purposes let's say that the first is known as `""first""` and the second
as `""second""`. That is, we want the first module's import of `""second.bar""` to
call the function `$func` in the second module. Here is a wasm-merge command for
that:

```bash
wasm-merge a.wasm first b.wasm second -o output.wasm
```

We give it the first wasm file, then its name, and then the second wasm file
and then its name. The merged output is this:

```wat
(module
  (import ""outside"" ""log"" (func $log (param i32)))

  (export ""main"" (func $func))
  (export ""bar"" (func $func_2))

  (func $func
    (call $func_2)
  )

  (func $func_2
    (call $log
      (i32.const 42)
    )
  )
)
```

`wasm-merge` combined the two files into one, merging their functions, imports,
etc., all while fixing up name conflicts and connecting corresponding imports to
exports. In particular, note how `$func` calls `$func_2`, which is exactly what
we want","'c-plus-plus', 'compilers', 'emscripten', 'hacktoberfest', 'webassembly'",2015-10-29T20:26:28Z,2024-06-18T06:45:18Z,168,161,7217,175,"('kripken', 4488), ('tlively', 805), ('sbc100', 323), ('aheejin', 279), ('jfbastien', 202), ('dschuff', 147), ('dcodeIO', 145), ('MaxGraey', 143), ('ashleynh', 52), ('juj', 48), ('sunfishcode', 39), ('jgravelle-google', 39), ('vouillon', 21), ('aardappel', 18), ('mbebenita', 17), ('yurydelendik', 17), ('alexcrichton', 16), ('froydnj', 14), ('martianboy', 12), ('Michael', 11), ('zm2he', 11), ('BSalita', 11), ('ddcc', 9), ('frank-emrich', 8), ('quantum5', 8), ('walkingeyerobot', 8), ('Paulo Matos', 7), ('rongjiecomputer', 7), ('jirutka', 7), ('gkdn', 7), ('brendandahl', 7), ('jayphelps', 6), ('phated', 5), ('rluble', 5), ('tzik', 4), ('caiiiycuk', 4), ('rathann', 4), ('tomayac', 4), ('pepyakin', 4), ('Ryooooooga', 4), ('loganchien', 4), ('bvibber', 4), ('Lichtso', 4), ('ngzhian', 3), ('mobsceneZ', 3), ('MI3Guy', 3), ('RReverser', 3), ('brakmic', 3), ('TerrorJack', 3), ('nokotan', 3), ('kateinoigakukun', 3), ('AndrewScheidecker', 3), ('dongAxis', 3), ('COFFEETALES', 3), ('vloppin', 3), ('Douglas Crosher', 3), ('bnjbvr', 2), ('willcohen', 2), ('williamstein', 2), ('yamt', 2), ('TheKK', 2), ('arsnyder16', 2), ('ashleygwilliams', 2), ('ericvergnaud', 2), ('sps-gold', 2), ('XMadrid', 2), ('backes', 2), ('JesseCodeBones', 2), ('bollu', 2), ('axic', 2), ('Beuc', 2), ('brmorr', 2), ('brson', 2), ('waywardmonkeys', 2), ('Changqing-JING', 2), ('TheGreatRambler', 2), ('Peter Jas', 2), ('pmatos', 2), ('data-ux', 2), ('DazWorrall', 2), ('ImmanuelHaffner', 2), ('irmen', 2), ('surma', 1), ('sohailsomani', 1), ('Seth Samuel', 1), ('chicoxyzzy', 1), ('sstangl', 1), ('flackr', 1), ('tanishiking', 1), ('DiamondLovesYou', 1), ('rsms', 1), ('psarna', 1), ('pfaffe', 1), ('Jeremy Day', 1), ('peblair', 1), ('chfast', 1), ('PaulAustin', 1), ('paolosevMSFT', 1), ('ospencer', 1), ('khitrin', 1), ('nbaksalyar', 1), ('nidin', 1), ('mmha', 1), ('SpecLad', 1), ('xndcn', 1), ('taylordotfish', 1), ('t4lz', 1), ('pjuftring', 1), ('pipcet', 1), ('osen', 1), ('mtb0x1', 1), ('moui0', 1), ('martinRenou', 1), ('magic-akari', 1), ('lqd', 1), ('jakobkummerow', 1), ('hobby8', 1), ('higher-performance', 1), ('chai2010', 1), ('buddhabrot', 1), ('winksaville', 1), ('wmaddox', 1), ('willglynn', 1), ('elliottt', 1), ('svenstaro', 1), ('jbeich', 1), ('eigenraven', 1), ('eyebrowsoffire', 1), ('Razican', 1), ('H-Plus-Time', 1), ('eholk', 1), ('dalcde', 1), ('d3dave', 1), ('curiousdannii', 1), ('ossy-szeged', 1), ('HerrCai0907', 1), ('Warchant', 1), ('binji', 1), ('turbolent', 1), ('dakenf', 1), ('ApsarasX', 1), ('wingo', 1), ('Akaricchi', 1), ('gskachkov', 1), ('alanmimms', 1), ('adam852', 1), ('MikeInnes', 1), ('janisozaur', 1), ('MichalStrehovsky', 1), ('Cellule', 1), ('maxkl', 1), ('MaxDesiatov', 1), ('MaulingMonkey', 1), ('zeroshade', 1), ('mnater', 1), ('mkustermann', 1), ('apoleon', 1), ('Markyparky56', 1), ('Marco Trivellato', 1), ('MATRIXKOO', 1), ('krisselden', 1), ('podsvirov', 1), ('kleisauke', 1), ('keithw', 1), ('kazuki', 1), ('cuviper', 1), ('jfoote', 1), ('kanaka', 1)",86,83,
Sutto/rubyflow,A gitified copy of Peter Cooper's Rubyflow website,"RUBYFLOW
========
_Developed by Peter Cooper - 2008_

All code developed by Peter Cooper within this project is in the public domain.
Plugins, Rails, and derivative code is licensed as it was originally (mostly MIT).

This code is entirely unsupported, lacks tests, and could well make your machine
explode. If you use it, you understand this and accept all the risks.


Getting Started
---------------
I have not tested these instructions, but from memory..

1. Rename config/database.yml.dist to database.yml and make the appropriate
configuration changes.

2. Run rake db:migrate to set up your database.
 
3. Configure your site-specific settings (see ""Multiple Sites"", below).

Multiple Sites
--------------

The RubyFlow code is designed to deal with multiple sites from one codebase (although not one installation).
The settings for a particular site are in config/[sitename].yml
The site name for the current installation is set on the first line of config/environment.rb
Current the setting is for ""rubyflow"", so config/rubyflow.yml is used.
Change the chosen site in config/environment.rb and create your own YML file.

Note that the chosen site name is added as a class to the BODY tag. This makes it easy to use the same
CSS file for multiple sites but apply site specific tweaks with BODY.sitename prefixes in the CSS!",,2008-07-23T12:40:32Z,2008-08-08T08:30:00Z,4,4,105,7,"('bryceroney', 11), ('Sutto', 7), ('Soleone', 7), ('technicalpickles', 7)",0,0,
douban/douban-utils,Douban's Utils,"## Douban Utils


#### Quick Start

```
1. virtualenv venv
2. . venv/bin/activate
3. python setup.py install
4. python setup.py test
```
",,2014-02-12T14:40:53Z,2014-02-12T15:21:17Z,2,2,59,17,"('xtao', 5), ('liluo', 3)",0,0,
bloominstituteoftechnology/ML-day_1,Day 1 of Lambda School's Machine Learning Mini Bootcamp,"
# Welcome to Lambda School Machine Learning

1. What is Lambda School
  * Intensive training
  * 45 * 26 hours
  * 15 * 52 hours
  * Application over Theory
  * Educational models
2. Who am I
2. What is the Machine Learning Course
  * A wide spectrum of topics in ML, AI, and data science
  * A focus on personal presentation and knowledge
  * A ML framework for producing results for businesses
  * A set of skills to compete in the ML world
  * A set of demos to showcase those skills
3. What is Machine Learning (ML)
  * ML is applied mathematics
  * ML is using numerical techniques to produce hidden information
  * ML is making predictions on data too vast for a human to analyzE
  * ML is data intuition, preparation, and sharing
4. What will I be teaching during the ML course
  * High level ML syllabus discussion
  * Computer science
  * Personal presentations
  * Advanced computer operation in support of ML
5. What's the point of learning ML
  * In demand
  * Producing more results than before
  * Many big names say it is only going to get more important
6. How do we get started?

# Assignment
Write `Why.md`, commit it to this repository, and push. Send me a pull
request to the original repository.

`Why.md`

You must answer the following question:
Why do you want to learn Machine Learning?

The following questions are to help you plan your response, but specifically
addressing each question is not required.
What is exciting about ML?  What do you think the best job opportunities are in ML? What do you think you need to do to make yourself employable in ML? What dangers are there in studying ML? Are the moral or ethical considerations that you will be responsible for?

",,2018-03-09T19:44:53Z,2018-11-03T23:41:10Z,1,1,23,9,"('thomcom', 1)",1,1,
b2evolution/b2evolution,b2evolution CMS: Multiblog/CMS content publishing + forums + email marketing + social network + more... b2evolution includes everything you need to run and maintain a modern website. Optimized for low maintenance with easy upgrades and effective antispam. Full RWD & bootstrap support.,"![b2evolution CMS](media/shared/global/logos/b2evolution_1016x208_wbg.png)

# b2evolution CMS

This is b2evolution CMS version **7.2.5-stable**.

## A complete engine for your website !

Multiblog/CMS + user community + email marketing + social network + more...
b2evolution includes everything you need to run and maintain a modern website.
Plus, it's optimized for low maintenance with easy upgrades and effective antispam. Full Bootstrap & RWD support.

More info: https://b2evolution.net

## Requirements

Basically, all you need is a standard [web hosting plan](https://b2evolution.net/web-hosting/cheap-plans/).

More specifically, your web server should support PHP 5.6+, MySQL 5.5.3+ & Apache 2+ (which is very common). More info about these requirements [here](https://b2evolution.net/man/installation-upgrade/system_requirements).

## Downloading

### With Bower

If you're familiar with bower, just type: `bower install b2evolution`

This will install the **latest** GitHub release of b2evolution (which may be a beta version).

### Manual Download

You can download releases either from GitHub or from b2evolution.net :

- https://github.com/b2evolution/b2evolution/releases
- https://b2evolution.net/downloads/

## Installation: Amazing 3-minute install ;)

Upload everything to your web server and call the installation script that you will find at `/install/index.php` on your website. Then you just need to enter your database connection details and the installer will take care of everything for you.

Now, you might ask for more details here... Totally legitimate! Please check out our [Getting Stated - Installation Guide](https://b2evolution.net/man/getting-started).

Hint: It is possible to install b2evolution in less than 3 minutes. Probably not the first time though. (And the same is true for anyone else claiming a 5 minute install process.)

## Upgrading

### Automatic upgrade

b2evolution includes an automatic upgrade feature which you can use to automatically download the lastest stable version and perform the upgrade operations.

### Manual upgrade

You can download any newer version (including beta releases), overwrite the files of your current installation (after backup) and then run the install script.

The installation script will detect that the b2evolution database is already installed (any version) and offer to upgrade it to the current version.

There are [several other upgrade options](https://b2evolution.net/man/upgrading).

## GitHub

All bug fixes and all new code are made available through GitHub before being packaged as releases. If you are interested in cutting-edge versions, we recommend you [follow us on GitHub](https://github.com/b2evolution/b2evolution).
",,2014-06-18T00:08:10Z,2022-12-06T19:28:38Z,70,22,173,33,"('yurabakhtin', 6442), ('fplanque', 5318), ('blueyed', 4056), ('winskie', 1725), ('Tblue', 443), ('Alex', 390), ('Attila', 335), ('miloszivojinovic', 203), ('Yabba', 157), ('MaximBV', 140), ('waltercruz', 139), ('vitaliy-dev', 126), ('utpoln', 98), ('midnight-studios', 90), ('starlightsys', 88), ('Afwas', 51), ('yledak', 41), ('mgsolipa', 35), ('Jeff Bearer', 34), ('r0nh', 26), ('halton', 24), ('efy-arrin', 21), ('lxndral', 21), ('efy-bogdan', 19), ('simo.attila', 19), ('marian', 18), ('slamp', 18), ('efy-james', 16), ('artashdev', 16), ('personman', 14), ('efy-eugene', 14), ('efy-sergey', 14), ('Francois Planque', 12), ('jwedgeco', 11), ('sakichan', 11), ('wmcroberts', 10), ('t3dworld', 10), ('smpdawg', 9), ('mfollett', 8), ('efy-sasha', 7), ('yurabakhtin', 7), ('keithbowes', 7), ('jmuto', 6), ('jupiterx', 6), ('gorgeb', 5), ('leeturner2701', 5), ('tswicegood', 5), ('tor_gisvold', 4), ('stephankn', 4), ('efy-isaias', 4), ('Rigo', 4), ('captsolo', 3), ('efy-abanipatra', 3), ('yafred', 2), ('wendall911', 2), ('uid126175', 2), ('tny', 2), ('hansreinders', 2), ('efy-hamesh', 2), ('efy-cantor', 2), ('edgester', 2), ('evojay', 2), ('davidnewcomb', 2), ('Manuel Garcia', 1), ('efy-khurram', 1), ('efy-vyacheslav', 1), ('isaacschlueter', 1), ('iznogoudmc', 1), ('matthiasmiller', 1), ('uid156866', 1)",7,0,
jacksu/utils4s,scala、spark使用过程中，各种测试用例以及相关资料整理,"utils4s

公众号：
![公众号](picture/datacube.jpg)

[![Build Status](https://travis-ci.org/jacksu/utils4s.svg?branch=master)](https://travis-ci.org/jacksu/utils4s)[![Join the chat at https://gitter.im/jacksu/utils4s](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/jacksu/utils4s?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

*   [utils4s](#id1)
    *   [scala语法学习](#id2)
    *   [common库](#id21)
    *   [BigData库](#id22)
        *   [Spark](#id221)
            *   [Spark core](#id2211)
            *   [Spark Streaming](#id2212)
            *   [Spark SQL](#id2213)
            *   [Spark 机器学习](#id2213)
            *   [Spark Zeppelin](#id2214)
            *   [Spark 其它](#id2215)
        *   [ES](#id222)
    *   [贡献代码步骤](#id23)
    *   [贡献者](#id24)

**Issues 中包含我们平时阅读的关于scala、spark好的文章，欢迎推荐**

utils4s包含各种scala通用、好玩的工具库demo和使用文档，通过简单的代码演示和操作文档，各种库信手拈来。

**同时欢迎大家贡献各种好玩的、经常使用的工具库。**

[开源中国地址](http://git.oschina.net/jack.su/utils4s)

QQ交流群 `432290475（已满），请加530066027`  或者点击上面gitter图标也可以参与讨论

[作者博客专注大数据、分布式系统、机器学习，欢迎交流](http://www.jianshu.com/users/92a1227beb27/latest_articles)

微博：[**jacksu_**](http://weibo.com/jack4s)

scala语法学习

说明：scala语法学习过程中，用例代码都放在scala-demo模块下。

[利用IntelliJ IDEA与Maven开始你的Scala之旅](https://www.jianshu.com/p/ecc6eb298b8f)

[快学scala电子书](http://vdisk.weibo.com/s/C7NmUN3g8gH46)(推荐入门级书)

[scala理解的比较深](http://hongjiang.info/scala/)

[scala99问题](http://aperiodic.net/phil/scala/s-99/)

[scala初学者指南](https://windor.gitbooks.io/beginners-guide-to-scala/content/introduction.html)(这可不是初学者可以理解的欧，还是写过一些程序后再看)

[scala初学者指南英文版](http://danielwestheide.com/scala/neophytes.html)

[scala学习用例](scala-demo)

[scala入门笔记](http://blog.djstudy.net/2016/01/24/scala-rumen-biji/)

[Databricks风格](https://github.com/databricks/scala-style-guide)

[scala/java 通过maven编译（Mixed Java/Scala Projects）](http://davidb.github.io/scala-maven-plugin/example_java.html)

common库

[日志操作](log-demo)（[log4s](https://github.com/Log4s/log4s)）

[单元测试](unittest-demo)（[scalatest](http://www.scalatest.org)）

[日期操作](lamma-demo)（[lama](http://www.lamma.io/doc/quick_start)）（注:只支持日期操作，不支持时间操作）

[日期时间操作](nscala-time-demo)（[nscala-time](https://github.com/nscala-time/nscala-time)）（注：没有每月多少天，每月最后一天，以及每年多少天）

[json解析](json4s-demo)（[json4s](https://github.com/json4s/json4s)）

[resources下文件加载用例](resources-demo)

[文件操作](file-demo)（[better-files](https://github.com/pathikrit/better-files)）

[单位换算](analysis-demo)（[squants](https://github.com/garyKeorkunian/squants)）

[线性代数和向量计算](breeze-demo)([breeze](https://github.com/scalanlp/breeze))

[分布式并行实现库akka](akka-demo)([akka](http://akka.io))

[Twitter工具库](twitter-util-demo)（[twitter util](https://github.com/twitter/util)）

[日常脚本工具](manger-tools)

BigData库

Spark

Spark core
[spark远程调试源代码](http://hadoop1989.com/2016/02/01/Spark-Remote-Debug/)

[spark介绍](http://litaotao.github.io/introduction-to-spark)

[一个不错的spark学习互动课程](http://www.hubwiz.com/class/5449c691e564e50960f1b7a9)

[spark 设计与实现](http://spark-internals.books.yourtion.com/index.html)

[aliyun-spark-deploy-tool](https://github.com/aliyun/aliyun-spark-deploy-tool)---Spark on ECS
Spark Streaming

[Spark Streaming使用Kafka保证数据零丢失](spark-knowledge/md/spark_streaming使用Kafka保证数据零丢失.md)

[spark streaming测试用例](sparkstreaming-demo)

[spark streaming源码解析](https://github.com/proflin/CoolplaySpark)

[基于spark streaming的聚合分析(Sparkta)](https://github.com/Stratio/Sparkta)

Spark SQL

[spark DataFrame测试用例](spark-dataframe-demo)

[Hive Json加载](hive-json-demo)

[SparkSQL架构设计和代码分析](https://github.com/marsishandsome/SparkSQL-Internal)

Spark 机器学习

[spark机器学习源码解析](https://github.com/endymecy/spark-ml-source-analysis)

[KeyStoneML](http://keystone-ml.org)
KeystoneML is a software framework, written in Scala, from the UC Berkeley AMPLab designed to simplify the construction of large scale, end-to-end, machine learning pipelines with Apache Spark.

[spark TS](spark-timeseries-demo)

Spark zeppelin

[**Z-Manager**](https://github.com/NFLabs/z-manager)--Simplify getting Zeppelin up and running

[**zeppelin**](https://github.com/apache/incubator-zeppelin)--a web-based notebook that enables interactive data analytics. You can make beautiful data-driven, interactive and collaborative documents with SQL, Scala and more.

[**helium**](http://s.apache.org/helium)--Brings Zeppelin to data analytics application platform

Spark 其它

[spark专题在简书](http://www.jianshu.com/collection/6157554bfdd9)

[databricks spark知识库](https://aiyanbo.gitbooks.io/databricks-spark-knowledge-base-zh-cn/content/)

[spark学习知识总结](spark-knowledge)

[Spark library for doing exploratory data analysis in a scalable way](https://github.com/vicpara/exploratory-data-analysis/)

[图处理(cassovary)](https://github.com/twitter/cassovary)

[基于spark进行地理位置分析(gagellan)](https://github.com/harsha2010/magellan)

[spark summit east 2016 ppt](http://vdisk.weibo.com/s/BP8uNBea_C2Af?from=page_100505_profile&wvr=6)

ES

[ES 非阻塞scala客户端](https://github.com/sksamuel/elastic4s)

Beam
[Apache Beam：下一代的数据处理标准](http://geek.csdn.net/news/detail/134167)
贡献代码步骤
1. 首先 fork 我的项目
2. 把 fork 过去的项目也就是你的项目 clone 到你的本地
3. 运行 git remote add jacksu git@github.com:jacksu/utils4s.git 把我的库添加为远端库
4. 运行 git pull jacksu master 拉取并合并到本地
5. coding
6. commit后push到自己的库( git push origin master )
7. 登陆Github在你首页可以看到一个 pull request 按钮,点击它,填写一些说明信息,然后提交即可。
1~3是初始化操作,执行一次即可。在coding前必须执行第4步同步我的库(这样避免冲突),然后执行5~7既可。

贡献者
[jjcipher](https://github.com/jjcipher)

","'akka', 'breeze', 'json4s', 'scala', 'scala-demo', 'scala-spark', 'spark', 'spark-streaming'",2015-09-24T09:15:03Z,2019-02-09T02:17:18Z,6,5,1085,130,"('jacksu', 220), ('jjcipher', 2), ('Cause Chung', 1), ('chiangqiqi', 1), ('gitter-badger', 1), ('GrayMissing', 1)",4,3,
boxen/puppet-boxen,Boxen's fundamental modules and types.,"# Boxen

[![Build Status](https://travis-ci.org/boxen/puppet-boxen.svg?branch=master)](https://travis-ci.org/boxen/puppet-boxen)

The Boxen puppet module for... Boxen.

# Required Modules for Boxen

Fundamental modules and types used by all of Boxen.

## Usage

```puppet
# We owe you examples. Sorry.
```

## Facts

Boxen loads facts from following locations:

 - `~/.boxen/config.json` (weight `-1`)
 - `$BOXEN_HOME/config/facts/*.json` (weight `-1`)
 - `$BOXEN_REPO_DIR/facts.d/` (weight [`EXTERNAL_FACT_WEIGHT + 1` = `10001`](https://github.com/puppetlabs/facter/blob/181c861f4ccc0919ecf3c58ee56fd9ed58930f95/lib/facter/util/directory_loader.rb#L31)) - various filetypes, see [documentation](https://docs.puppetlabs.com/facter/2.4/custom_facts.html#external-facts)
 - `_MODULEPATH_/_MODULE-NAME_/lib/facter/*.rb` (weight set by vendor or [default = number of `confines`](https://github.com/puppetlabs/facter/blob/beb4eb155c1b12346d8f3c7500fd335815a1a17d/lib/facter/core/suitable.rb#L103), no confines = `0`)

Facter itself also loads facts from environment variables with mask `FACTER_*` (weight [`1_000_000`](https://github.com/puppetlabs/facter/blob/beb4eb155c1b12346d8f3c7500fd335815a1a17d/lib/facter/util/loader.rb#L147)).

Default values:
 - [`_MODULEPATH_=$BOXEN_REPO_DIR/shared`](https://github.com/boxen/boxen/blob/242ff15da7a4822312fc18697e252dd756334b64/lib/boxen/puppeteer.rb#L105)
 - [`$BOXEN_REPO_DIR=Dir.pwd`](https://github.com/boxen/boxen/blob/535f66582e7f72ee070e48456081c9fbd22463ae/lib/boxen/config.rb#L220) - de facto root of this repository, typically cloned into `/opt/boxen/repo`

## Configuration

 - `ENV['BOXEN_HOME']/config/boxen/defaults.json`
   - Default [`$BOXEN_HOME = /opt/boxen`](https://github.com/boxen/boxen/blob/535f66582e7f72ee070e48456081c9fbd22463ae/lib/boxen/config.rb#L125)

## Development

Write code. Run `script/cibuild` to test it. Check the `script`
directory for other useful tools.
",,2012-10-03T02:49:31Z,2018-03-25T23:01:29Z,51,41,76,8,"('wfarr', 96), ('dgoodlad', 43), ('rafaelfranca', 18), ('indirect', 17), ('bleything', 16), ('Adam Ochonicki', 14), ('jacobbednarz', 12), ('Rafael Mendonça França', 10), ('skalnik', 8), ('mattheath', 5), ('tarebyte', 4), ('jbarnette', 4), ('tpetr', 4), ('n0ts', 4), ('salimane', 4), ('Morgan Delagrange', 4), ('Markus Mühlberger', 3), ('timtim123456', 3), ('rodjek', 3), ('grosser', 3), ('Drewzar', 2), ('ymendel', 2), ('cofyc', 2), ('tedkulp', 2), ('sprickly', 2), ('radeksimko', 2), ('MikeMcQuaid', 2), ('blackjid', 2), ('jhaals', 2), ('fromonesrc', 2), ('phinze', 1), ('hirocaster', 1), ('tommeier', 1), ('Tim Moore', 1), ('Soeren', 1), ('Sebastian Röder', 1), ('seanknox', 1), ('Ralph Tice', 1), ('rvora', 1), ('pbrit', 1), ('Paul Bailey', 1), ('nickpellant', 1), ('lstoll', 1), ('josh', 1), ('jdigger', 1), ('webflo', 1), ('eugeneius', 1), ('dieterdemeyer', 1), ('carlallen', 1), ('tecnobrat', 1), ('benja-M-1', 1)",21,16,
polarsys/b612,Eclipse B612,"# PolarSys B612 font family

B612 is an highly legible open source font family designed and tested to be used on aircraft cockpit screens.

Main characteristics are:

- Maximize the distance between the forms of the characters
- Respect the primitives of the different letters
- Harmonize the forms and their spacing

## The genesis of PolarSys B612

In 2010, Airbus initiated a research collaboration with [ENAC](http://www.enac.fr) and [Université de Toulouse III](http://www.univ-tlse3.fr/) on a prospective study to define and validate an “Aeronautical Font”: the challenge was to improve the display of information on the cockpit screens, in particular in terms of legibility and comfort of reading, and to optimize the overall homogeneity of the cockpit.

2 years later, [Airbus](https://www.airbus.com) came to find [Intactile DESIGN](https://intactile.com) to work on the design of the eight typographic variants of the font. This one, baptized B612 in reference to the imaginary asteroid of the aviator Saint‑Exupéry, benefited from a complete hinting on all the characters.

## Releasing a new version of the font

- Update the version number in the font info of the source files
- Make a copy of the source files
- Open the copies in Fontlab
- Run the merge intersection command on each file
- Generate the ttf files
- Run the build script from the scripts folder to fix digital signature

## Copyright

Copyright (c) 2012, AIRBUS (airbus-group.com). All rights reserved.

## License

This program and the accompanying materials are made available under the terms of the Eclipse Public License v2.0 and Eclipse Distribution License v1.0 and the SIL Open Font License v1.1 which accompanies this distribution. The Eclipse Public License is available at [https://www.eclipse.org/legal/epl-v20.html](https://www.eclipse.org/legal/epl-v20.html) and the Eclipse Distribution License is available at [https://www.eclipse.org/org/documents/edl-v10.php](https://www.eclipse.org/org/documents/edl-v10.php). The SIL Open Font License v1.1 is available at [https://scripts.sil.org/OFL](https://scripts.sil.org/OFL)
",,2018-04-10T14:30:46Z,2020-02-01T12:35:11Z,6,4,1050,24,"('Thomas Paillot', 50), ('LaurentSpaggiari', 11), ('davelab6', 2), ('m4rc1e', 2), ('sunpoet', 2), ('Alain BERNARD', 1)",1,0,
trimstray/the-book-of-secret-knowledge,"A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools and more.","
  
    
  


""Knowledge is powerful, be careful how you use it!""

A collection of inspiring lists, manuals, cheatsheets, blogs, hacks, one-liners, cli/web tools, and more.




  
    
  
  
    
  



  
    
  



  Created by
  trimstray and
  contributors




****

## :notebook_with_decorative_cover: &nbsp;What is it?

This repository is a collection of various materials and tools that I use every day in my work. It contains a lot of useful information gathered in one piece. It is an invaluable source of knowledge for me that I often look back on.

## :restroom: &nbsp;For whom?

For everyone, really. Here everyone can find their favourite tastes. But to be perfectly honest, it is aimed towards System and Network administrators, DevOps, Pentesters, and Security Researchers.

## :information_source: &nbsp;Contributing

If you find something which doesn't make sense, or something doesn't seem right, please make a pull request and please add valid and well-reasoned explanations about your changes or comments.

A few simple rules for this project:

- inviting and clear
- not tiring
- useful

These below rules may be better:

- easy to contribute to (Markdown + HTML ...)
- easy to find (simple TOC, maybe it's worth extending them?)

Url marked **\*** is temporary unavailable. Please don't delete it without confirming that it has permanently expired.

Before adding a pull request, please see the **[contributing guidelines](.github/CONTRIBUTING.md)**. You should also remember about this:

```diff
+ This repository is not meant to contain everything but only good quality stuff.
```

All **suggestions/PR** are welcome!

### Code Contributors

This project exists thanks to all the people who contribute.



### Financial Contributors


  
    
  
  
    
  


## :newspaper: &nbsp;RSS Feed & Updates

GitHub exposes an [RSS/Atom](https://github.com/trimstray/the-book-of-secret-knowledge/commits.atom) feed of the commits, which may also be useful if you want to be kept informed about all changes.

## :ballot_box_with_check: &nbsp;ToDo

- [ ] Add new stuff...
- [ ] Add useful shell functions
- [ ] Add one-liners for collection tools (eg. CLI Tools)
- [ ] Sort order in lists

New items are also added on a regular basis.

## :anger: &nbsp;Table of Contents

Only main chapters:

- **[CLI Tools](#cli-tools-toc)**
- **[GUI Tools](#gui-tools-toc)**
- **[Web Tools](#web-tools-toc)**
- **[Systems/Services](#systemsservices-toc)**
- **[Networks](#networks-toc)**
- **[Containers/Orchestration](#containersorchestration-toc)**
- **[Manuals/Howtos/Tutorials](#manualshowtostutorials-toc)**
- **[Inspiring Lists](#inspiring-lists-toc)**
- **[Blogs/Podcasts/Videos](#blogspodcastsvideos-toc)**
- **[Hacking/Penetration Testing](#hackingpenetration-testing-toc)**
- **[Your daily knowledge and news](#your-daily-knowledge-and-news-toc)**
- **[Other Cheat Sheets](#other-cheat-sheets-toc)**
- **[Shell One-liners](#shell-one-liners-toc)**
- **[Shell Tricks](#shell-tricks-toc)**
- **[Shell Functions](#shell-functions-toc)**

## :trident: &nbsp;The Book of Secret Knowledge (Chapters)

#### CLI Tools &nbsp;[[TOC]](#anger-table-of-contents)

##### :black_small_square: Shells


&nbsp;&nbsp; GNU Bash - is an sh-compatible shell that incorporates useful features from the Korn shell and C shell.
&nbsp;&nbsp; Zsh - is a shell designed for interactive use, although it is also a powerful scripting language.
&nbsp;&nbsp; tclsh - is a very powerful cross-platform shell, suitable for a huge range of uses.
&nbsp;&nbsp; bash-it - is a framework for using, developing and maintaining shell scripts and custom commands.
&nbsp;&nbsp; Oh My ZSH! - is the best framework for managing your Zsh configuration.
&nbsp;&nbsp; Oh My Fish - the Fishshell framework.
&nbsp;&nbsp; Starship - the cross-shell prompt written in Rust.
&nbsp;&nbsp; powerlevel10k - is a fast reimplementation of Powerlevel9k ZSH theme.


##### :black_small_square: Shell plugins


&nbsp;&nbsp; z - tracks the folder you use the most and allow you to jump, without having to type the whole path.
&nbsp;&nbsp; fzf - is a general-purpose command-line fuzzy finder.
&nbsp;&nbsp; zsh-autosuggestions - Fish-like autosuggestions for Zsh.
&nbsp;&nbsp; zsh-syntax-highlighting - Fish shell like syntax highlighting for Zsh.
&nbsp;&nbsp; Awesome ZSH Plugins - A list of frameworks, plugins, themes and tutorials for ZSH.


##### :black_small_square: Managers


&nbsp;&nbsp; Midnight Commander - is a visual file manager, licensed under GNU General Public License.
&nbsp;&nbsp; ranger - is a VIM-inspired filemanager for the console.
&nbsp;&nbsp; nnn - is a tiny, lightning fast, feature-packed file manager.
&nbsp;&nbsp; screen - is a full-screen window manager that multiplexes a physical terminal.
&nbsp;&nbsp; tmux - is a terminal multiplexer, lets you switch easily between several programs in one terminal.
&nbsp;&nbsp; tmux-cssh - is a tool to set comfortable and easy to use functionality tmux-sessions.


##### :black_small_square: Text editors


&nbsp;&nbsp; vi - is one of the most common text editors on Unix.
&nbsp;&nbsp; vim - is a highly configurable text editor.
&nbsp;&nbsp; emacs - is an extensible, customizable, free/libre text editor, and more.
&nbsp;&nbsp; micro - is a modern and intuitive terminal-based text editor.
&nbsp;&nbsp; neovim - is a free open source, powerful, extensible and usable code editor.
&nbsp;&nbsp; spacemacs - a community-driven Emacs distribution.
&nbsp;&nbsp; spacevim - a community-driven vim distribution.


##### :black_small_square: Files and directories


&nbsp;&nbsp; fd - is a simple, fast and user-friendly alternative to find.
&nbsp;&nbsp; ncdu - is an easy to use, fast disk usage analyzer.


##### :black_small_square: Network


&nbsp;&nbsp; PuTTY - is an SSH and telnet client, developed originally by Simon Tatham.
&nbsp;&nbsp; Mosh - is a SSH wrapper designed to keep a SSH session alive over a volatile connection.
&nbsp;&nbsp; Eternal Terminal - enables mouse-scrolling and tmux commands inside the SSH session.
&nbsp;&nbsp; nmap - is a free and open source (license) utility for network discovery and security auditing.
&nbsp;&nbsp; zmap - is a fast single packet network scanner designed for Internet-wide network surveys.
&nbsp;&nbsp; Rust Scan - to find all open ports faster than Nmap.
&nbsp;&nbsp; masscan - is the fastest Internet port scanner, spews SYN packets asynchronously.
&nbsp;&nbsp; pbscan - is a faster and more efficient stateless SYN scanner and banner grabber.
&nbsp;&nbsp; hping - is a command-line oriented TCP/IP packet assembler/analyzer.
&nbsp;&nbsp; mtr - is a tool that combines the functionality of the 'traceroute' and 'ping' programs in a single tool.
&nbsp;&nbsp; mylg - utility which combines the functions of the different network probes in one diagnostic tool.
&nbsp;&nbsp; netcat - utility which reads and writes data across network connections, using the TCP/IP protocol.
&nbsp;&nbsp; socat - utility which transfers data between two objects.
&nbsp;&nbsp; tcpdump - is a powerful command-line packet analyzer.
&nbsp;&nbsp; tshark - is a tool that allows us to dump and analyze network traffic (wireshark cli).
&nbsp;&nbsp; Termshark - is a simple terminal user-interface for tshark.
&nbsp;&nbsp; ngrep - is like GNU grep applied to the network layer.
&nbsp;&nbsp; netsniff-ng - is a Swiss army knife for your daily Linux network plumbing if you will.
&nbsp;&nbsp; sockdump - dump unix domain socket traffic.
&nbsp;&nbsp; stenographer - is a packet capture solution which aims to quickly spool all packets to disk.
&nbsp;&nbsp; tcpterm - visualize packets in TUI.
&nbsp;&nbsp; bmon - is a monitoring and debugging tool to capture networking related statistics and prepare them visually.
&nbsp;&nbsp; iptraf-ng - is a console-based network monitoring program for Linux that displays information about IP traffic.
&nbsp;&nbsp; vnstat - is a network traffic monitor for Linux and BSD.
&nbsp;&nbsp; iPerf3 - is a tool for active measurements of the maximum achievable bandwidth on IP networks.
&nbsp;&nbsp; ethr - is a Network Performance Measurement Tool for TCP, UDP & HTTP.
&nbsp;&nbsp; Etherate - is a Linux CLI based Ethernet and MPLS traffic testing tool.
&nbsp;&nbsp; echoip - is a IP address lookup service.
&nbsp;&nbsp; Nemesis - packet manipulation CLI tool; craft and inject packets of several protocols.
&nbsp;&nbsp; packetfu - a mid-level packet manipulation library for Ruby.
&nbsp;&nbsp; Scapy - packet manipulation library; forge, send, decode, capture packets of a wide number of protocols.
&nbsp;&nbsp; impacket - is a collection of Python classes for working with network protocols.
&nbsp;&nbsp; ssh-audit - is a tool for SSH server auditing.
&nbsp;&nbsp; aria2 - is a lightweight multi-protocol & multi-source command-line download utility.
&nbsp;&nbsp; iptables-tracer - observe the path of packets through the iptables chains.
&nbsp;&nbsp; inception - a highly configurable tool to check for whatever you like against any number of hosts.
&nbsp;&nbsp; mRemoteNG - a fork of mRemote, multi-tabbed PuTTy on steroids!


##### :black_small_square: Network (DNS)


&nbsp;&nbsp; dnsdiag - is a DNS diagnostics and performance measurement tools.
&nbsp;&nbsp; fierce - is a DNS reconnaissance tool for locating non-contiguous IP space.
&nbsp;&nbsp; subfinder - is a subdomain discovery tool that discovers valid subdomains for websites.
&nbsp;&nbsp; sublist3r - is a fast subdomains enumeration tool for penetration testers.
&nbsp;&nbsp; amass - is tool that obtains subdomain names by scraping data sources, crawling web archives, and more.
&nbsp;&nbsp; namebench - provides personalized DNS server recommendations based on your browsing history.
&nbsp;&nbsp; massdns - is a high-performance DNS stub resolver for bulk lookups and reconnaissance.
&nbsp;&nbsp; knock - is a tool to enumerate subdomains on a target domain through a wordlist.
&nbsp;&nbsp; dnsperf - DNS performance testing tools.
&nbsp;&nbsp; dnscrypt-proxy 2 - a flexible DNS proxy, with support for encrypted DNS protocols.
&nbsp;&nbsp; dnsdbq - API client providing access to passive DNS database systems.
&nbsp;&nbsp; grimd - fast dns proxy, built to black-hole internet advertisements and malware servers.
  &nbsp;&nbsp; dnstwist - detect typosquatters, phishing attacks, fraud, and brand impersonation.


##### :black_small_square: Network (HTTP)


&nbsp;&nbsp; curl - is a command line tool and library for transferring data with URLs.
&nbsp;&nbsp; kurly - is an alternative to the widely popular curl program, written in Golang.
&nbsp;&nbsp; HTTPie - is an user-friendly HTTP client.
&nbsp;&nbsp; wuzz - is an interactive cli tool for HTTP inspection.
&nbsp;&nbsp; h2spec - is a conformance testing tool for HTTP/2 implementation.
&nbsp;&nbsp; h2t - is a simple tool to help sysadmins to hardening their websites.
&nbsp;&nbsp; htrace.sh - is a simple Swiss Army knife for http/https troubleshooting and profiling.
&nbsp;&nbsp; httpstat - is a tool that visualizes curl statistics in a way of beauty and clarity.
&nbsp;&nbsp; httplab - is an interactive web server.
&nbsp;&nbsp; Lynx - is a text browser for the World Wide Web.
&nbsp;&nbsp; Browsh - is a fully interactive, real-time, and modern text-based browser.
&nbsp;&nbsp; HeadlessBrowsers - a list of (almost) all headless web browsers in existence.
&nbsp;&nbsp; ab - is a single-threaded command line tool for measuring the performance of HTTP web servers.
&nbsp;&nbsp; siege - is an http load testing and benchmarking utility.
&nbsp;&nbsp; wrk - is a modern HTTP benchmarking tool capable of generating significant load.
&nbsp;&nbsp; wrk2 - is a constant throughput, correct latency recording variant of wrk.
&nbsp;&nbsp; vegeta - is a constant throughput, correct latency recording variant of wrk.
&nbsp;&nbsp; bombardier - is a fast cross-platform HTTP benchmarking tool written in Go.
&nbsp;&nbsp; gobench - http/https load testing and benchmarking tool.
&nbsp;&nbsp; hey - HTTP load generator, ApacheBench (ab) replacement, formerly known as rakyll/boom.
&nbsp;&nbsp; boom - is a script you can use to quickly smoke-test your web app deployment.
&nbsp;&nbsp; SlowHTTPTest - is a tool that simulates some Application Layer Denial of Service attacks by prolonging HTTP.
&nbsp;&nbsp; gobuster - is a free and open source directory/file & DNS busting tool written in Go.
&nbsp;&nbsp; ssllabs-scan - command-line reference-implementation client for SSL Labs APIs.
&nbsp;&nbsp; http-observatory - Mozilla HTTP Observatory cli version.
&nbsp;&nbsp; Hurl - is a command line tool to run and test HTTP requests with plain text.


##### :black_small_square: SSL


&nbsp;&nbsp; openssl - is a robust, commercial-grade, and full-featured toolkit for the TLS and SSL protocols.
&nbsp;&nbsp; gnutls-cli - client program to set up a TLS connection to some other computer.
&nbsp;&nbsp; sslyze
 - fast and powerful SSL/TLS server scanning library.
&nbsp;&nbsp; sslscan - tests SSL/TLS enabled services to discover supported cipher suites.
&nbsp;&nbsp; testssl.sh - testing TLS/SSL encryption anywhere on any port.
&nbsp;&nbsp; cipherscan - a very simple way to find out which SSL ciphersuites are supported by a target.
&nbsp;&nbsp; spiped - is a utility for creating symmetrically encrypted and authenticated pipes between socket addresses.
&nbsp;&nbsp; Certbot - is EFF's tool to obtain certs from Let's Encrypt and (optionally) auto-enable HTTPS on your server.
&nbsp;&nbsp; mkcert - simple zero-config tool to make locally trusted development certificates with any names you'd like.
&nbsp;&nbsp; certstrap - tools to bootstrap CAs, certificate requests, and signed certificates.
&nbsp;&nbsp; Sublert - is a security and reconnaissance tool to automatically monitor new subdomains.
&nbsp;&nbsp; mkchain - open source tool to help you build a valid SSL certificate chain.
&nbsp;&nbsp; ssl-cert-check - SSL Certification Expiration Checker.


##### :black_small_square: Security


&nbsp;&nbsp; SELinux - provides a flexible Mandatory Access Control (MAC) system built into the Linux kernel.
&nbsp;&nbsp; AppArmor - proactively protects the operating system and applications from external or internal threats.
&nbsp;&nbsp; grapheneX - Automated System Hardening Framework.
&nbsp;&nbsp; DevSec Hardening Framework - Security + DevOps: Automatic Server Hardening.


##### :black_small_square: Auditing Tools


&nbsp;&nbsp; ossec - actively monitoring all aspects of system activity with file integrity monitoring.
&nbsp;&nbsp; auditd - provides a way to track security-relevant information on your system.
&nbsp;&nbsp; Tiger - is a security tool that can be use both as a security audit and intrusion detection system.
&nbsp;&nbsp; Lynis - battle-tested security tool for systems running Linux, macOS, or Unix-based operating system.
&nbsp;&nbsp; LinEnum - scripted Local Linux Enumeration & Privilege Escalation Checks.
&nbsp;&nbsp; Rkhunter - scanner tool for Linux systems that scans backdoors, rootkits and local exploits on your systems.
&nbsp;&nbsp; PE-sieve - is a light-weight tool that helps to detect malware running on the system.
&nbsp;&nbsp; PEASS - privilege escalation tools for Windows and Linux/Unix and MacOS.


##### :black_small_square: System Diagnostics/Debuggers


&nbsp;&nbsp; strace - diagnostic, debugging and instructional userspace utility for Linux.
&nbsp;&nbsp; DTrace - is a performance analysis and troubleshooting tool.
&nbsp;&nbsp; ltrace - is a library call tracer, used to trace calls made by programs to library functions.
&nbsp;&nbsp; ptrace-burrito - is a friendly wrapper around ptrace.
&nbsp;&nbsp; perf-tools - performance analysis tools based on Linux perf_events (aka perf) and ftrace.
&nbsp;&nbsp; bpftrace - high-level tracing language for Linux eBPF.
&nbsp;&nbsp; sysdig - system exploration and troubleshooting tool with first class support for containers.
&nbsp;&nbsp; Valgrind - is an instrumentation framework for building dynamic analysis tools.
&nbsp;&nbsp; gperftools - high-performance multi-threaded malloc() implementation, plus some performance analysis tools.
&nbsp;&nbsp; glances - cross-platform system monitoring tool written in Python.
&nbsp;&nbsp; htop - interactive text-mode process viewer for Unix systems. It aims to be a better 'top'.
&nbsp;&nbsp; bashtop - Linux resource monitor written in pure Bash.
&nbsp;&nbsp; nmon - a single executable for performance monitoring and data analysis.
&nbsp;&nbsp; atop - ASCII performance monitor. Includes statistics for CPU, memory, disk, swap, network, and processes.
&nbsp;&nbsp; lsof - displays in its output information about files that are opened by processes.
&nbsp;&nbsp; FlameGraph - stack trace visualizer.
&nbsp;&nbsp; lsofgraph - convert Unix lsof output to a graph showing FIFO and UNIX interprocess communication.
&nbsp;&nbsp; rr - is a lightweight tool for recording, replaying and debugging execution of applications.
&nbsp;&nbsp; Performance Co-Pilot - a system performance analysis toolkit.
&nbsp;&nbsp; hexyl - a command-line hex viewer.
&nbsp;&nbsp; Austin - Python frame stack sampler for CPython.


##### :black_small_square: Log Analyzers


&nbsp;&nbsp; angle-grinder - slice and dice log files on the command line.
&nbsp;&nbsp; lnav - log file navigator with search and automatic refresh.
&nbsp;&nbsp; GoAccess - real-time web log analyzer and interactive viewer that runs in a terminal.
&nbsp;&nbsp; ngxtop - real-time metrics for nginx server.


##### :black_small_square: Databases


&nbsp;&nbsp; usql - universal command-line interface for SQL databases.
&nbsp;&nbsp; pgcli - postgres CLI with autocompletion and syntax highlighting.
&nbsp;&nbsp; mycli - terminal client for MySQL with autocompletion and syntax highlighting.
&nbsp;&nbsp; litecli - SQLite CLI with autocompletion and syntax highlighting.
  &nbsp;&nbsp; mssql-cli - SQL Server CLI with autocompletion and syntax highlighting.
&nbsp;&nbsp; OSQuery - is a SQL powered operating system instrumentation, monitoring, and analytics framework.
&nbsp;&nbsp; pgsync - sync data from one Postgres database to another.
&nbsp;&nbsp; iredis - a terminal client for redis with autocompletion and syntax highlighting.
&nbsp;&nbsp; SchemaCrawler - generates an E-R diagram of your database.


##### :black_small_square: TOR


&nbsp;&nbsp; Nipe - script to make Tor Network your default gateway.
&nbsp;&nbsp; multitor - a tool that lets you create multiple TOR instances with a load-balancing.


##### :black_small_square: Messengers/IRC Clients


&nbsp;&nbsp; Irssi - is a free open source terminal based IRC client.
&nbsp;&nbsp; WeeChat - is an extremely extensible and lightweight IRC client.


##### :black_small_square: Productivity


&nbsp;&nbsp; taskwarrior - task management system, todo list 


##### :black_small_square: Other


&nbsp;&nbsp; sysadmin-util - tools for Linux/Unix sysadmins.
&nbsp;&nbsp; incron - is an inode-based filesystem notification technology.
&nbsp;&nbsp; lsyncd - synchronizes local directories with remote targets (Live Syncing Daemon).
&nbsp;&nbsp; GRV - is a terminal based interface for viewing Git repositories.
&nbsp;&nbsp; Tig - text-mode interface for Git.
&nbsp;&nbsp; tldr - simplified and community-driven man pages.
&nbsp;&nbsp; archiver - easily create and extract .zip, .tar, .tar.gz, .tar.bz2, .tar.xz, .tar.lz4, .tar.sz, and .rar.
&nbsp;&nbsp; commander.js - minimal CLI creator in JavaScript.
&nbsp;&nbsp; gron - make JSON greppable!
&nbsp;&nbsp; bed - binary editor written in Go.


#### GUI Tools &nbsp;[[TOC]](#anger-table-of-contents)

##### :black_small_square: Terminal emulators


&nbsp;&nbsp; Guake - is a dropdown terminal made for the GNOME desktop environment.
&nbsp;&nbsp; Terminator - is based on GNOME Terminal, useful features for sysadmins and other users.
&nbsp;&nbsp; Kitty - is a GPU based terminal emulator that supports smooth scrolling and images.
&nbsp;&nbsp; Alacritty - is a fast, cross-platform, OpenGL terminal emulator.


##### :black_small_square: Network


&nbsp;&nbsp; Wireshark - is the world’s foremost and widely-used network protocol analyzer.
&nbsp;&nbsp; Ettercap - is a comprehensive network monitor tool.
&nbsp;&nbsp; EtherApe - is a graphical network monitoring solution.
&nbsp;&nbsp; Packet Sender - is a networking utility for packet generation and built-in UDP/TCP/SSL client and servers.
&nbsp;&nbsp; Ostinato - is a packet crafter and traffic generator.
&nbsp;&nbsp; JMeter™ - open source software to load test functional behavior and measure performance.
&nbsp;&nbsp; locust - scalable user load testing tool written in Python.


##### :black_small_square: Browsers


&nbsp;&nbsp; TOR Browser - protect your privacy and defend yourself against network surveillance and traffic analysis.


##### :black_small_square: Password Managers


&nbsp;&nbsp; KeePassXC - store your passwords safely and auto-type them into your everyday websites and apps.
&nbsp;&nbsp; Bitwarden - open source password manager with built-in sync.
&nbsp;&nbsp; Vaultwarden - unofficial Bitwarden compatible server written in Rust.


##### :black_small_square: Messengers/IRC Clients


&nbsp;&nbsp; HexChat - is an IRC client based on XChat.
&nbsp;&nbsp; Pidgin - is an easy to use and free chat client used by millions.


##### :black_small_square: Messengers (end-to-end encryption)


&nbsp;&nbsp; Signal - is an encrypted communications app.
&nbsp;&nbsp; Wire - secure messaging, file sharing, voice calls and video conferences.
&nbsp;&nbsp; TorChat - decentralized anonymous instant messenger on top of Tor Hidden Services.
&nbsp;&nbsp; Matrix - an open network for secure, decentralized, real-time communication.


##### :black_small_square: Text editors


&nbsp;&nbsp; Sublime Text - is a lightweight, cross-platform code editor known for its speed, ease of use.
&nbsp;&nbsp; Visual Studio Code - an open-source and free source code editor developed by Microsoft.
&nbsp;&nbsp; Atom - a hackable text editor for the 21st Century.


#### Web Tools &nbsp;[[TOC]](#anger-table-of-contents)

##### :black_small_square: Browsers


&nbsp;&nbsp; SSL/TLS Capabilities of Your Browser - test your browser's SSL implementation.
&nbsp;&nbsp; Can I use - provides up-to-date browser support tables for support of front-end web technologies.
&nbsp;&nbsp; Panopticlick 3.0 - is your browser safe against tracking?
&nbsp;&nbsp; Privacy Analyzer - see what data is exposed from your browser.
&nbsp;&nbsp; Web Browser Security - it's all about Web Browser fingerprinting.
&nbsp;&nbsp; How's My SSL? - help a web server developer learn what real world TLS clients were capable of.
&nbsp;&nbsp; sslClientInfo - client test (incl TLSv1.3 information).


##### :black_small_square: SSL/Security


&nbsp;&nbsp; SSLLabs Server Test - performs a deep analysis of the configuration of any SSL web server.
&nbsp;&nbsp; SSLLabs Server Test (DEV) - performs a deep analysis of the configuration of any SSL web server.
&nbsp;&nbsp; ImmuniWeb® SSLScan - test SSL/TLS (PCI DSS, HIPAA and NIST).
&nbsp;&nbsp; SSL Check - scan your website for non-secure content.
&nbsp;&nbsp; SSL Scanner - analyze website security.
&nbsp;&nbsp; CryptCheck - test your TLS server configuration (e.g. ciphers).
&nbsp;&nbsp; urlscan.io - service to scan and analyse websites.
&nbsp;&nbsp; Report URI - monitoring security policies like CSP and HPKP.
&nbsp;&nbsp; CSP Evaluator - allows developers and security experts to check if a Content Security Policy.
&nbsp;&nbsp; Useless CSP - public list about CSP in some big players (might make them care a bit more).
&nbsp;&nbsp; Why No HTTPS? - top 100 websites by Alexa rank not automatically redirecting insecure requests.
&nbsp;&nbsp; TLS Cipher Suite Search- cipher suite search engine.
&nbsp;&nbsp; cipherli.st - strong ciphers for Apache, Nginx, Lighttpd, and more.*
&nbsp;&nbsp; dhtool - public Diffie-Hellman parameter service/tool.
&nbsp;&nbsp; badssl.com - memorable site for testing clients against bad SSL configs.
&nbsp;&nbsp; tlsfun.de - registered for various tests regarding the TLS/SSL protocol.
&nbsp;&nbsp; CAA Record Helper - generate a CAA policy.
&nbsp;&nbsp; Common CA Database - repository of information about CAs, and their root and intermediate certificates.
&nbsp;&nbsp; CERTSTREAM - real-time certificate transparency log update stream.
&nbsp;&nbsp; crt.sh - discovers certificates by continually monitoring all of the publicly known CT.
&nbsp;&nbsp; Hardenize - deploy the security standards.
&nbsp;&nbsp; Cipher suite compatibility - test TLS cipher suite compatibility.
&nbsp;&nbsp; urlvoid - this service helps you detect potentially malicious websites.
&nbsp;&nbsp; security.txt - a proposed standard (generator) which allows websites to define security policies.
&nbsp;&nbsp; ssl-config-generator - help you follow the Mozilla Server Side TLS configuration guidelines.
&nbsp;&nbsp; TLScan - pure python, SSL/TLS protocol and cipher scanner/enumerator.


##### :black_small_square: HTTP Headers & Web Linters


&nbsp;&nbsp; Security Headers - analyse the HTTP response headers (with rating system to the results).
&nbsp;&nbsp; Observatory by Mozilla - set of tools to analyze your website.
&nbsp;&nbsp; webhint - is a linting tool that will help you with your site's accessibility, speed, security, and more.


##### :black_small_square: DNS


&nbsp;&nbsp; ViewDNS - one source for free DNS related tools and information.
&nbsp;&nbsp; DNSLookup - is an advanced DNS lookup tool.
&nbsp;&nbsp; DNSlytics - online DNS investigation tool.
&nbsp;&nbsp; DNS Spy - monitor, validate and verify your DNS configurations.
&nbsp;&nbsp; Zonemaster - helps you to control how your DNS works.
&nbsp;&nbsp; Leaf DNS - comprehensive DNS tester.
&nbsp;&nbsp; Find subdomains online - find subdomains for security assessment penetration test.
&nbsp;&nbsp; DNSdumpster - dns recon & research, find & lookup dns records.
&nbsp;&nbsp; DNS Table online - search for DNS records by domain, IP, CIDR, ISP.
&nbsp;&nbsp; intoDNS - DNS and mail server health checker.
&nbsp;&nbsp; DNS Bajaj - check the delegation of your domain.
&nbsp;&nbsp; BuddyDNS Delegation LAB - check, trace and visualize delegation of your domain.
&nbsp;&nbsp; dnssec-debugger - DS or DNSKEY records validator.
&nbsp;&nbsp; PTRarchive.com - this site is responsible for the safekeeping of historical reverse DNS records.
&nbsp;&nbsp; xip.io - wildcard DNS for everyone.
&nbsp;&nbsp; nip.io - dead simple wildcard DNS for any IP Address.
&nbsp;&nbsp; dnslookup (ceipam) - one of the best DNS propagation checker (and not only).
&nbsp;&nbsp; What's My DNS - DNS propagation checking tool.
&nbsp;&nbsp; DNSGrep - quickly searching large DNS datasets.


##### :black_small_square: Mail


&nbsp;&nbsp; smtp-tls-checker - check an email domain for SMTP TLS support.
&nbsp;&nbsp; MX Toolbox - all of your MX record, DNS, blacklist and SMTP diagnostics in one integrated tool.
&nbsp;&nbsp; Secure Email - complete email test tools for email technicians.
&nbsp;&nbsp; blacklistalert - checks to see if your domain is on a Real Time Spam Blacklist.
&nbsp;&nbsp; MultiRBL - complete IP check for sending Mailservers.
&nbsp;&nbsp; DKIM SPF & Spam Assassin Validator - checks mail authentication and scores messages with Spam Assassin.


##### :black_small_square: Encoders/Decoders and Regex testing


&nbsp;&nbsp; URL Encode/Decode - tool from above to either encode or decode a string of text.
&nbsp;&nbsp; Uncoder - the online translator for search queries on log data.
&nbsp;&nbsp; Regex101 - online regex tester and debugger: PHP, PCRE, Python, Golang and JavaScript.
&nbsp;&nbsp; RegExr - online tool to learn, build, & test Regular Expressions (RegEx / RegExp).
&nbsp;&nbsp; RegEx Testing - online regex testing tool.
&nbsp;&nbsp; RegEx Pal - online regex testing tool + other tools.
&nbsp;&nbsp; The Cyber Swiss Army Knife - a web app for encryption, encoding, compression and data analysis.


##### :black_small_square: Net-tools


&nbsp;&nbsp; Netcraft - detailed report about the site, helping you to make informed choices about their integrity.*
&nbsp;&nbsp; RIPE NCC Atlas - a global, open, distributed Internet measurement platform.
&nbsp;&nbsp; Robtex - uses various sources to gather public information about IP numbers, domain names, host names, etc.
&nbsp;&nbsp; Security Trails - APIs for Security Companies, Researchers and Teams.
&nbsp;&nbsp; Online Curl - curl test, analyze HTTP Response Headers.
&nbsp;&nbsp; Online Tools for Developers - HTTP API tools, testers, encoders, converters, formatters, and other tools.
&nbsp;&nbsp; Ping.eu - online Ping, Traceroute, DNS lookup, WHOIS and others.
&nbsp;&nbsp; Network-Tools - network tools for webmasters, IT technicians & geeks.
&nbsp;&nbsp; BGPview - search for any ASN, IP, Prefix or Resource name.
&nbsp;&nbsp; Is BGP safe yet? - check BGP (RPKI) security of ISPs and other major Internet players.
&nbsp;&nbsp; Riseup - provides online communication tools for people and groups working on liberatory social change.
&nbsp;&nbsp; VirusTotal - analyze suspicious files and URLs to detect types of malware.


##### :black_small_square: Privacy


&nbsp;&nbsp; privacyguides.org - provides knowledge and tools to protect your privacy against global mass surveillance.
&nbsp;&nbsp; DNS Privacy Test Servers - DNS privacy recursive servers list (with a 'no logging' policy).


##### :black_small_square: Code parsers/playgrounds


&nbsp;&nbsp; ShellCheck - finds bugs in your shell scripts.
&nbsp;&nbsp; explainshell - get interactive help texts for shell commands.
&nbsp;&nbsp; jsbin - live pastebin for HTML, CSS & JavaScript, and more.
&nbsp;&nbsp; CodeSandbox - online code editor for web application development.
&nbsp;&nbsp; PHP Sandbox - test your PHP code with this code tester.
&nbsp;&nbsp; Repl.it - an instant IDE to learn, build, collaborate, and host all in one place.
&nbsp;&nbsp; vclFiddle - is an online tool for experimenting with the Varnish Cache VCL.
&nbsp;&nbsp; Haskell Dockerfile Linter - a smarter Dockerfile linter that helps you build best practice Docker images.


##### :black_small_square: Performance


&nbsp;&nbsp; GTmetrix - analyze your site’s speed and make it faster.
&nbsp;&nbsp; Sucuri loadtimetester - test here the
performance of any of your sites from across the globe.
&nbsp;&nbsp; Pingdom Tools - analyze your site’s speed around the world.
&nbsp;&nbsp; PingMe.io - run website latency tests across multiple geographic regions.
&nbsp;&nbsp; PageSpeed Insights - analyze your site’s speed and make it faster.
&nbsp;&nbsp; web.dev - helps developers like you learn and apply the web's modern capabilities to your own sites and apps.
&nbsp;&nbsp; Lighthouse - automated auditing, performance metrics, and best practices for the web.


##### :black_small_square: Mass scanners (search engines)


&nbsp;&nbsp; Censys - platform that helps information security practitioners discover, monitor, and analyze devices.
&nbsp;&nbsp; Shodan - the world's first search engine for Internet-connected devices.
&nbsp;&nbsp; Shodan 2000 - this tool looks for randomly generated data from Shodan.
&nbsp;&nbsp; GreyNoise - mass scanner such as Shodan and Censys.
&nbsp;&nbsp; ZoomEye - search engine for cyberspace that lets the user find specific network components.
&nbsp;&nbsp; netograph - tools to monitor and understand deep structure of the web.
&nbsp;&nbsp; FOFA - is a cyberspace search engine.
&nbsp;&nbsp; onyphe - is a search engine for open-source and cyber threat intelligence data collected.
&nbsp;&nbsp; IntelligenceX - is a search engine and data archive.
&nbsp;&nbsp; binaryedge - it scan the entire internet space and create real-time threat intelligence streams and reports.
&nbsp;&nbsp; Spyse - Internet assets registry: networks, threats, web objects, etc.
&nbsp;&nbsp; wigle - is a submission-based catalog of wireless networks. All the networks. Found by Everyone.
&nbsp;&nbsp; PublicWWW - find any alphanumeric snippet, signature or keyword in the web pages HTML, JS and ","'awesome', 'awesome-list', 'bsd', 'cheatsheets', 'devops', 'guidelines', 'hacking', 'hacks', 'howtos', 'linux', 'lists', 'manuals', 'one-liners', 'pentesters', 'resources', 'search-engines', 'security', 'security-researchers', 'sysops'",2018-06-23T10:43:14Z,2024-06-17T04:16:29Z,108,98,135184,2406,"('trimstray', 912), ('lbonanomi', 16), ('loweryaustin', 4), ('Marcos', 4), ('the4rchangel', 4), ('axrwl', 4), ('trevorbryant', 3), ('fabidick22', 3), ('rammanokar', 3), ('crypt0rr', 3), ('adhoc-king', 3), ('waysup', 2), ('shubhamrai1993', 2), ('it-praktyk', 2), ('Tom Nicklin', 2), ('tzx', 2), ('Snickasaurus', 2), ('sebres', 2), ('naeluh', 2), ('groosg', 2), ('fl0ppy-d1sk', 2), ('AvasDream', 2), ('alex3305', 2), ('remyabel2', 1), ('ThreeSevenths', 1), ('Vitalii Cherkashyn', 1), ('vladc', 1), ('wpjunior', 1), ('unhappychoice', 1), ('zacnomore', 1), ('Zinkuth', 1), ('acxz', 1), ('alterwolf', 1), ('zachvalenta', 1), ('tomstoneham', 1), ('pswapneel', 1), ('sualeh', 1), ('pstavirs', 1), ('todestoast', 1), ('Sahith02', 1), ('Jarvizx', 1), ('r0mflip', 1), ('PrinceSumberia', 1), ('pawroman', 1), ('PabloLec', 1), ('wilfredinni', 1), ('villu164', 1), ('robcerda', 1), ('ramdinagar', 1), ('pylipp', 1), ('proclnas', 1), ('pratik-devkota', 1), ('ParvJain', 1), ('oSumAtrIX', 1), ('lucasgonze', 1), ('jwbensley', 1), ('julienmiclo', 1), ('jonasc', 1), ('jcamiel', 1), ('iddoeldor', 1), ('fuzzfree', 1), ('eblis', 1), ('digitalmine', 1), ('cbois-maxxing', 1), ('bryce-ebp', 1), ('amnkh', 1), ('monkeywithacupcake', 1), ('JakeConnors376W', 1), ('J0hnnnn', 1), ('Himura2la', 1), ('GantMan', 1), ('P403n1x87', 1), ('feruzoripov', 1), ('DivyeshPuri', 1), ('d-pollard', 1), ('dannagle', 1), ('Cookizza', 1), ('creyD', 1), ('Cloud User', 1), ('caarlos0', 1), ('camilonova', 1), ('caverav', 1), ('jarun', 1), ('Belphemur', 1), ('Serif-7', 1), ('armujahid', 1), ('0xflotus', 1), ('Nick Moy', 1), ('Myo Soe', 1), ('mikemaxey', 1), ('Meir017', 1), ('maxt3r', 1), ('MartinSeeler', 1), ('MartinMuzatko', 1), ('MarkusZoppelt', 1), ('Luci-d', 1), ('mentix02', 1), ('b3z', 1), ('radiantly', 1), ('kbirkeland', 1), ('eioo', 1), ('Julien-Broyard', 1), ('JosiahRaySmith', 1), ('JoshCrozier', 1), ('jony4', 1), ('cesarosum', 1), ('unixorn', 1), ('jobintweets', 1)",85,79,
LevelbossMike/ember-deploy-s3,ember-deploy assets-adapter for amazon s3,"# Ember-deploy-s3 [![Build Status](https://travis-ci.org/LevelbossMike/ember-deploy-s3.svg?branch=master)](https://travis-ci.org/LevelbossMike/ember-deploy-s3)

![](https://ember-cli-deploy.github.io/ember-cli-deploy-version-badges/plugins/ember-deploy-github.svg)


**WARNING: This plugin is only compatible with ember-cli-deploy versions < 0.5.0 and deprecated in favor of [ember-cli-deploy-s3](https://github.com/ember-cli-deploy/ember-cli-deploy-s3). Please consider upgrading to an up to date version of [ember-cli-deploy](https://github.com/ember-cli/ember-cli-deploy) when using in production**


This is the s3-adapter implementation to use [s3](aws.amazon.com/s3/) with
[ember-deploy](https://github.com/levelbossmike/ember-deploy).

# Minimum S3 Policy Requirements

```
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""s3:ListAllMyBuckets""
            ],
            ""Resource"": [
                ""arn:aws:s3:::*""
            ]
        },
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""s3:GetBucketLocation"",
                ""s3:ListBucket""
            ],
            ""Resource"": [
                ""arn:aws:s3:::""
            ]
        },
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""s3:DeleteObject"",
                ""s3:GetObject"",
                ""s3:GetObjectAcl"",
                ""s3:PutObject"",
                ""s3:PutObjectAcl""
            ],
            ""Resource"": [
                ""arn:aws:s3:::/*""
            ]
        }
    ]
}
```

# A note about deployments and `buildEnv`

[ember-cli-deploy](https://www.github.com/ember-cli/ember-cli-deploy) gives you an option called `buildEnv` in `config/deploy.js`. This option is meant to be used for production-like environments like for example `staging` that should behave like production (concatenate js files, minify build, fingerprint assets) but are using other settings than production specified in `config/environment.js` in your Ember application.

The `buildEnv` option is used to to pass the respective environment to the `ember build`-command that ember-cli-deploy is using to build your application before uploading files. If `buildEnv` is not specified `ember-cli-deploy` will use `production` as the default setting.

Though you could in theory specify a buildEnv `development` in your `deploy.js` it is encouraged not to do so. There are multiple reasons for this.

1. When you want to deploy your application you want assets to be concatenated, minified and fingerprinted which will not be done when building for the `development` environment.
2. Deploying your application is not part of your development workflow. When you want to try out stuff in your ember application you should do so when developing locally on your development machine.
3. If you want to have specific logging output in different environments or different api-hosts across environments there is `config/environment.js` to create a production-like environment and [Ember.Logger](http://emberjs.com/api/classes/Ember.Logger.html) to do any logging that you need to be doing.
4. Because assets are not fingerprinted and `ember-deploy-s3` will upload your assets with basically a 'cache-forever' setting you will not get the latest assets served to your browser after deploying your application to s3. This is annoying to debug and will cost you lots of time if you decide to use a `buildEnv` 'development' (You have been warned ;))

Instead what you should be doing when the need for multiple different deployable environments arises is to create `production-like` environments for these environments. There's a section in the [ember-cli-deploy docs](http://ember-cli.github.io/ember-cli-deploy/docs/v0.4.x/fingerprinting-options-and-staging-environments/) how to do this. In the provided example you would also need to pass `staging` as the `buildEnv` option if you wanted to use different api-hosts for `production` and `staging` provided from `environment.js`.

# Known Issues

Uploads tend to hang when you don't specify the region your bucket is located in in `config/deploy.js` it is thus recommended to add the region your bucket is located in to your S3 configuration:

```
// config/deploy.js
module.exports = {
  //...

   production: {
    // ...
    assets: {
      accessKeyId: '',
      secretAccessKey: process.env['AWS_ACCESS_KEY'],
      bucket: '',
      region: ''
    }
  }
};
```
",,2015-01-06T16:15:55Z,2017-01-24T07:28:19Z,7,7,19,4,"('LevelbossMike', 22), ('tim-evans', 2), ('bantic', 1), ('jherdman', 1), ('wagenet', 1), ('ZenCocoon', 1), ('ember-tomster', 1)",5,5,
zhuxinqimac/B-CNN,Sample code of B-CNN paper  (https://arxiv.org/abs/1709.09890) written in Python3+.,"---------------------------------------------------------------
Author: Xinqi ZHU
---------------------------------------------------------------
This directory contains sample code of B-CNN paper 
(https://arxiv.org/abs/1709.09890) written in Python3+.

Please ensure you have installed TensorFlow and Keras.

Please make directories metioned in each program
before running them. These directories are used to store 
trained weights and TensorBoard logs.
---------------------------------------------------------------
Files:

CIFAR_10_keras_medium.py: model Base B in the paper 
running on CIFAR-10 dataset

CIFAR_10_keras_medium_dynamic.py: model B-CNN B in 
the paper running on CIFAR-10 dataset

CIFAR_100_keras_vgg16.py: model Base C in 
the paper running on CIFAR-100 dataset

CIFAR_100_keras_vgg16_hierarchy_dynamic.py: model B-CNN C in 
the paper running on CIFAR-100 dataset
---------------------------------------------------------------
To run:

Just type:
python CIFAR_10_keras_medium.py

etc.
---------------------------------------------------------------
",,2017-10-05T06:43:54Z,2021-07-29T07:22:18Z,1,1,53,6,"('zhuxinqimac', 12)",0,0,
TideSec/BypassAntiVirus,远控免杀系列文章及配套工具，汇总测试了互联网上的几十种免杀工具、113种白名单免杀方式、8种代码编译免杀、若干免杀实战技术，并对免杀效果进行了一一测试，为远控的免杀和杀软对抗免杀提供参考。,"# BypassAntiVirus

**本文为Tide安全团队成员`重剑无锋`原创文章，转载请声明出处！**

**郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担！**

**本专题文章在线文库：[http://wiki.tidesec.com/docs/bypassav](http://wiki.tidesec.com/docs/bypassav)** 

**潮影在线免杀平台：[http://bypass.tidesec.com/](http://bypass.tidesec.com/)** 

---

一直从事web安全多一些，对waf绕过还稍微有些研究，但是对远控免杀的认知还大约停留在ASPack、UPX加壳、特征码定位及修改免杀的年代。近两年随着hw和红蓝对抗的增多，接触到的提权、内网渗透、域渗透也越来越多。攻击能力有没有提升不知道，但防护水平明显感觉提升了一大截，先不说防护人员的技术水平如果，最起码各种云WAF、防火墙、隔离设备部署的多了，服务器上也经常能见到安装了杀软、软waf、agent等等，特别是某数字杀软在国内服务器上尤为普及。这个时候，不会点免杀技术就非常吃亏了。

但web狗一般对逆向和二进制都不大熟，编译运行别人的代码都比较费劲，这时候就只能靠现成的工具来曲线救国了。为此，我从互联网上搜集了大约20款知名度比较高的免杀工具研究免杀原理及免杀效果测试，后面还学习了一下各种语言编译加载shellcode的各种姿势，又补充了一些白名单加载payload的常见利用，于是就有了这一个远控免杀的系列文章。

- **工具篇内容**：msf自免杀、Veil、Venom、Shellter、BackDoor-Factory、Avet、TheFatRat、Avoidz、Green-Hat-Suite、zirikatu、AVIator、DKMC、Unicorn、Python-Rootkit、ASWCrypter、nps_payload、GreatSCT、HERCULES、SpookFlare、SharpShooter、CACTUSTORCH、Winpayload等。

- **代码篇内容**：C/C++、C#、python、powershell、ruby、go等。

- **白名单内容**：总计涉及113个白名单程序，包括Rundll32.exe、Msiexec.exe、MSBuild.exe、InstallUtil.exe、Mshta.exe、Regsvr32.exe、Cmstp.exe、CScript.exe、WScript.exe、Forfiles.exe、te.exe、Odbcconf.exe、InfDefaultInstall.exe、Diskshadow.exe、PsExec.exe、Msdeploy.exe、Winword.exe、Regasm.exe、Regsvcs.exe、Ftp.exe、pubprn.vbs、winrm.vbs、slmgr.vbs、Xwizard.exe、Compiler.exe、IEExec.exe、MavInject32、Presentationhost.exe、Wmic.exe、Pcalua.exe、Url.dll、zipfldr.dll、Syncappvpublishingserver.vbs等。

- **其他内容**：在整个免杀系列文章编写过程中，还穿插写了几篇免杀实践的文章，比如shellcode免杀实践、cs免杀实践、mimikatz免杀实践等几篇文章，水平比较一般，各位小伙伴凑合着看吧。

**已完成的免杀文章及相关软件下载：[`https://github.com/TideSec/BypassAntiVirus`](https://github.com/TideSec/BypassAntiVirus)**

**远控免杀系列文章打包及配套工具百度网盘下载**：
链接: [https://pan.baidu.com/s/1YKbNHzWudMwjGx-3_7KZxw](https://pan.baidu.com/s/1YKbNHzWudMwjGx-3_7KZxw) 提取码: 5q5q
解压密码为www.tidesec.com

# 免杀能力一览表


**1、表中标识 √ 说明相应杀毒软件未检测出病毒，也就是代表了Bypass。**

**2、为了更好的对比效果，大部分测试payload均使用msf的`windows/meterperter/reverse_tcp`模块生成。**

**3、由于本机测试时只是安装了360全家桶和火绒，所以默认情况下360和火绒杀毒情况指的是静态+动态查杀。360杀毒版本`5.0.0.8160`(2020.01.01)，火绒版本`5.0.34.16`(2020.01.01)，360安全卫士`12.0.0.2002`(2020.01.01)。**

**4、其他杀软的检测指标是在`virustotal.com`（简称VT）上在线查杀，所以可能只是代表了静态查杀能力，数据仅供参考，不足以作为杀软查杀能力或免杀能力的判断指标。**

**5、完全不必要苛求一种免杀技术能bypass所有杀软，这样的技术肯定是有的，只是没被公开，一旦公开第二天就能被杀了，其实我们只要能bypass目标主机上的杀软就足够了。**

**6、由于白名单程序加载payload的免杀测试需要杀软的行为检测才合理，静态查杀payload或者查杀白名单程序都没有任何意义，所以这里对白名单程序的免杀效果不做评判。**

![screenshot](images/msnl01.png)
![screenshot](images/msnl02.png)

# 文章导航

1.远控免杀专题(1)-基础篇：[https://mp.weixin.qq.com/s/3LZ_cj2gDC1bQATxqBfweg](https://mp.weixin.qq.com/s/3LZ_cj2gDC1bQATxqBfweg)

2.远控免杀专题(2)-msfvenom隐藏的参数：[https://mp.weixin.qq.com/s/1r0iakLpnLrjCrOp2gT10w](https://mp.weixin.qq.com/s/1r0iakLpnLrjCrOp2gT10w)

3.远控免杀专题(3)-msf自带免杀(VT免杀率35/69)：[https://mp.weixin.qq.com/s/A0CZslLhCLOK_HgkHGcpEA](https://mp.weixin.qq.com/s/A0CZslLhCLOK_HgkHGcpEA)

4.远控免杀专题(4)-Evasion模块(VT免杀率12/71)：[https://mp.weixin.qq.com/s/YnnCM7W20xScv52k_ubxYQ](https://mp.weixin.qq.com/s/YnnCM7W20xScv52k_ubxYQ)

5.远控免杀专题(5)-Veil免杀(VT免杀率23/71):[https://mp.weixin.qq.com/s/-PHVIAQVyU8QIpHwcpN4yw](https://mp.weixin.qq.com/s/-PHVIAQVyU8QIpHwcpN4yw)

6.远控免杀专题(6)-Venom免杀(VT免杀率11/71):[https://mp.weixin.qq.com/s/CbfxupSWEPB86tBZsmxNCQ](https://mp.weixin.qq.com/s/CbfxupSWEPB86tBZsmxNCQ)

7.远控免杀专题(7)-Shellter免杀(VT免杀率7/69)：[https://mp.weixin.qq.com/s/ASnldn6nk68D4bwkfYm3Gg](https://mp.weixin.qq.com/s/ASnldn6nk68D4bwkfYm3Gg)

8.远控免杀专题(8)-BackDoor-Factory免杀(VT免杀率13/71)：[https://mp.weixin.qq.com/s/A30JHhXhwe45xV7hv8jvVQ](https://mp.weixin.qq.com/s/A30JHhXhwe45xV7hv8jvVQ)

9.远控免杀专题(9)-Avet免杀(VT免杀率14/71)：[https://mp.weixin.qq.com/s/EIfqAbMC8HoC6xcZP9SXpA](https://mp.weixin.qq.com/s/EIfqAbMC8HoC6xcZP9SXpA)

10.远控免杀专题(10)-TheFatRat免杀(VT免杀率22/70)：[https://mp.weixin.qq.com/s/zOvwfmEtbkpGWWBn642ICA](https://mp.weixin.qq.com/s/zOvwfmEtbkpGWWBn642ICA)

11.远控免杀专题(11)-Avoidz免杀(VT免杀率23/71)：[https://mp.weixin.qq.com/s/TnfTXihlyv696uCiv3aWfg](https://mp.weixin.qq.com/s/TnfTXihlyv696uCiv3aWfg)

12.远控免杀专题(12)-Green-Hat-Suite免杀(VT免杀率23/70)：[https://mp.weixin.qq.com/s/MVJTXOIqjgL7iEHrnq6OJg](https://mp.weixin.qq.com/s/MVJTXOIqjgL7iEHrnq6OJg)

13.远控免杀专题(13)-zirikatu免杀(VT免杀率39/71)：[https://mp.weixin.qq.com/s/5xLuu5UfF4cQbCq_6JeqyA](https://mp.weixin.qq.com/s/5xLuu5UfF4cQbCq_6JeqyA)

14.远控免杀专题(14)-AVIator免杀(VT免杀率25/69)：[https://mp.weixin.qq.com/s/JYMq_qHvnslVlqijHNny8Q](https://mp.weixin.qq.com/s/JYMq_qHvnslVlqijHNny8Q)

15.远控免杀专题(15)-DKMC免杀(VT免杀率8/55)：[https://mp.weixin.qq.com/s/UZqOBQKEMcXtF5ZU7E55Fg](https://mp.weixin.qq.com/s/UZqOBQKEMcXtF5ZU7E55Fg)

16.远控免杀专题(16)-Unicorn免杀(VT免杀率29/56)：[https://mp.weixin.qq.com/s/y7P6bvHRFes854EAHAPOzw](https://mp.weixin.qq.com/s/y7P6bvHRFes854EAHAPOzw)

17.远控免杀专题(17)-Python-Rootkit免杀(VT免杀率7/69)：[https://mp.weixin.qq.com/s/OzO8hv0pTX54ex98k96tjQ](https://mp.weixin.qq.com/s/OzO8hv0pTX54ex98k96tjQ)

18.远控免杀专题(18)-ASWCrypter免杀(VT免杀率19/57)：[https://mp.weixin.qq.com/s/tT1i55swRWIYiEdxEWElSQ](https://mp.weixin.qq.com/s/tT1i55swRWIYiEdxEWElSQ)

19.远控免杀专题(19)-nps_payload免杀(VT免杀率3/57)：[https://mp.weixin.qq.com/s/XmSRgRUftMV3nmD1Gk0mvA](https://mp.weixin.qq.com/s/XmSRgRUftMV3nmD1Gk0mvA)

20.远控免杀专题(20)-GreatSCT免杀(VT免杀率14/56)：[https://mp.weixin.qq.com/s/s9DFRIgpvpE-_MneO0B_FQ](https://mp.weixin.qq.com/s/s9DFRIgpvpE-_MneO0B_FQ)

21.远控免杀专题(21)-HERCULES免杀(VT免杀率29/70)：[https://mp.weixin.qq.com/s/Rkr9lixzL4tiL89r10ndig](https://mp.weixin.qq.com/s/Rkr9lixzL4tiL89r10ndig)

22.远控免杀专题(22)-SpookFlare免杀(VT免杀率16/67)：[https://mp.weixin.qq.com/s/LfuQ2XuD7YHUWJqMRUmNVA](https://mp.weixin.qq.com/s/LfuQ2XuD7YHUWJqMRUmNVA)

23.远控免杀专题(23)-SharpShooter免杀(VT免杀率22/57)：[https://mp.weixin.qq.com/s/EyvGfWXLbxkHe7liaNFhGg](https://mp.weixin.qq.com/s/EyvGfWXLbxkHe7liaNFhGg)

24.远控免杀专题(24)-CACTUSTORCH免杀(VT免杀率23/57)：[https://mp.weixin.qq.com/s/g0CYvFMsrV7bHIfTnSUJBw](https://mp.weixin.qq.com/s/g0CYvFMsrV7bHIfTnSUJBw)

25.远控免杀专题(25)-Winpayloads免杀(VT免杀率18/70)：[https://mp.weixin.qq.com/s/YTXT31mCOWhMZEbCg4Jt0w](https://mp.weixin.qq.com/s/YTXT31mCOWhMZEbCg4Jt0w)


26.远控免杀专题(26)-C、C++加载免杀(上)(VT免杀率9-70)：[https://mp.weixin.qq.com/s/LftwV4bpuikDklIjuRw2LQ](https://mp.weixin.qq.com/s/LftwV4bpuikDklIjuRw2LQ)

27.远控免杀专题(27)-C、C++加载免杀(中)(VT免杀率8-70)：[https://mp.weixin.qq.com/s/McVWP386q5in6cQ8hRxwdA](https://mp.weixin.qq.com/s/McVWP386q5in6cQ8hRxwdA)

28.远控免杀专题(28)-C、C++加载免杀(下)(VT免杀率3-71)：[https://mp.weixin.qq.com/s/Kw3-fdyHyiettYn44WNZQw](https://mp.weixin.qq.com/s/Kw3-fdyHyiettYn44WNZQw)

29.远控免杀专题(29)-C#加载免杀-5种方式(VT免杀率8-70)：[https://mp.weixin.qq.com/s/Kvhfb13d2_D6m-Bu9Darog](https://mp.weixin.qq.com/s/Kvhfb13d2_D6m-Bu9Darog)

30.远控免杀专题(30)-Python加载免杀-8种方式(VT免杀率10-69)：[https://mp.weixin.qq.com/s/HyBSqrF_kl2ARaCYAMefgA](https://mp.weixin.qq.com/s/HyBSqrF_kl2ARaCYAMefgA)

31.远控免杀专题(31)-powershell加载-4种方式(VT免杀率5-58)：[https://mp.weixin.qq.com/s/Tw-FAduHMVzek_YxIErQDQ](https://mp.weixin.qq.com/s/Tw-FAduHMVzek_YxIErQDQ)

32.远控免杀专题(32)-Go加载免杀-3种方式(VT免杀率7-70)：[https://mp.weixin.qq.com/s/TmfDQgRfEp2qg9SKbD0Quw](https://mp.weixin.qq.com/s/TmfDQgRfEp2qg9SKbD0Quw)

33.远控免杀专题(33)-Ruby加载免杀(VT免杀率0-58)：[https://mp.weixin.qq.com/s/2eF6LklvdGetgbhYWdaFIg](https://mp.weixin.qq.com/s/2eF6LklvdGetgbhYWdaFIg)

34.远控免杀专题(34)-白名单MSBuild.exe(VT免杀率4-57)：[https://mp.weixin.qq.com/s/1WEglPXm1Q5n6T-c4OhhXA](https://mp.weixin.qq.com/s/1WEglPXm1Q5n6T-c4OhhXA)

35.远控免杀专题(35)-白名单Msiexec.exe(VT免杀率27-60)：[https://mp.weixin.qq.com/s/XPrBK1Yh5ggO-PeK85mqcg](https://mp.weixin.qq.com/s/XPrBK1Yh5ggO-PeK85mqcg)

36.远控免杀专题(36)-白名单InstallUtil.exe(VT免杀率3-68)：[https://mp.weixin.qq.com/s/gN2p3ZHODZFia2761BVSzg](https://mp.weixin.qq.com/s/gN2p3ZHODZFia2761BVSzg)

37.远控免杀专题(37)-白名单Mshta.exe(VT免杀率26-58)：[https://mp.weixin.qq.com/s/oBr-syv2ef5IjeGFrs7sHg](https://mp.weixin.qq.com/s/oBr-syv2ef5IjeGFrs7sHg)

38.远控免杀专题(38)-白名单Rundll32.exe(VT免杀率22-58)：[https://mp.weixin.qq.com/s/rmC4AWC6HmcphozfEZhRGA](https://mp.weixin.qq.com/s/rmC4AWC6HmcphozfEZhRGA)

39.远控免杀专题(39)-白名单Regsvr32.exe(VT免杀率18-58)：[https://mp.weixin.qq.com/s/6v8w2YZLxHJFnXb-IbnYAA](https://mp.weixin.qq.com/s/6v8w2YZLxHJFnXb-IbnYAA)

40.远控免杀专题(40)-白名单Cmstp.exe(VT查杀率为21-57)：[https://mp.weixin.qq.com/s/tgtvOMDGlKFwdRQEnKJf5Q](https://mp.weixin.qq.com/s/tgtvOMDGlKFwdRQEnKJf5Q)

41.远控免杀专题(41)-白名单Ftp.exe：[https://mp.weixin.qq.com/s/rnmCIx5oxA9z-0OfjoUAVw](https://mp.weixin.qq.com/s/rnmCIx5oxA9z-0OfjoUAVw)

42.远控免杀专题(42)-白名单Regasm/Regsvcs.exe：[https://mp.weixin.qq.com/s/MCMjxPdUNdwV8is04AklLA](https://mp.weixin.qq.com/s/MCMjxPdUNdwV8is04AklLA)

43.远控免杀专题(43)-白名单Compiler.exe：[https://mp.weixin.qq.com/s/Sm_3cJlSk6Pud1CLp-eAEQ](https://mp.weixin.qq.com/s/Sm_3cJlSk6Pud1CLp-eAEQ)

44.远控免杀专题(44)-白名单MavInject.exe：[https://mp.weixin.qq.com/s/dPOGj1VLhqwxJ0e-gOs8vA](https://mp.weixin.qq.com/s/dPOGj1VLhqwxJ0e-gOs8vA)

45.远控免杀专题(45)-白名单presentationhost.exe：[https://mp.weixin.qq.com/s/r9l5Lh6MHv-Ece2DFr3EsA](https://mp.weixin.qq.com/s/r9l5Lh6MHv-Ece2DFr3EsA)

46.远控免杀专题(46)-白名单IEexec.exe：[https://mp.weixin.qq.com/s/wVbFrU9cE3hCYAENjmnSUQ](https://mp.weixin.qq.com/s/wVbFrU9cE3hCYAENjmnSUQ)

47.远控免杀专题(47)-白名单winrm.vbs、slmgr.vbs：[https://mp.weixin.qq.com/s/B3oiMrEB98jtm4DvD2t2tQ](https://mp.weixin.qq.com/s/B3oiMrEB98jtm4DvD2t2tQ)

48.远控免杀专题(48)-白名单pubprn.vbs：[https://mp.weixin.qq.com/s/btiaVMBPxfxG4oXPa7__kw](https://mp.weixin.qq.com/s/btiaVMBPxfxG4oXPa7__kw)

49.远控免杀专题(49)-白名单Xwizard.exe：[https://mp.weixin.qq.com/s/8gaweOqkOrT77riaevvFUg](https://mp.weixin.qq.com/s/8gaweOqkOrT77riaevvFUg)

50.远控免杀专题(50)-白名单winword.exe：[https://mp.weixin.qq.com/s/qXWK5i2cDaletSzkAEzL3w](https://mp.weixin.qq.com/s/qXWK5i2cDaletSzkAEzL3w)

51.远控免杀专题(51)-白名单msdeloy.exe：[https://mp.weixin.qq.com/s/1oEzadXZxd3JukrBhNxxyw](https://mp.weixin.qq.com/s/1oEzadXZxd3JukrBhNxxyw)

52.远控免杀专题(52)-白名单psexec.exe：[https://mp.weixin.qq.com/s/JdOmlqif67GcSqZuuGPz0Q](https://mp.weixin.qq.com/s/JdOmlqif67GcSqZuuGPz0Q)

53.远控免杀专题(53)-白名单WMIC.exe：[https://mp.weixin.qq.com/s/QNqM8Vdlu-SOP7ZqnRWY3w](https://mp.weixin.qq.com/s/QNqM8Vdlu-SOP7ZqnRWY3w)

54.远控免杀专题(54)-白名单SyncAppvPublishingServer.vbs：[https://mp.weixin.qq.com/s/Ud7TbeMJb8fsRlaGHWhBww](https://mp.weixin.qq.com/s/Ud7TbeMJb8fsRlaGHWhBww)

55.远控免杀专题(55)-白名单Pcalua.exe：[https://mp.weixin.qq.com/s/Aj9A5_LRS_uX8XN1rdUobQ](https://mp.weixin.qq.com/s/Aj9A5_LRS_uX8XN1rdUobQ)

56.远控免杀专题(56)-白名单zipfldr.dll：[https://mp.weixin.qq.com/s/-qPVenI_lk-ZnMA4j9XNRQ](https://mp.weixin.qq.com/s/-qPVenI_lk-ZnMA4j9XNRQ)

57.远控免杀专题(57)-白名单Url.dll：[https://mp.weixin.qq.com/s/GzoYvfj7NkXe_nc8eOVEBQ](https://mp.weixin.qq.com/s/GzoYvfj7NkXe_nc8eOVEBQ)

58.远控免杀专题(58)-白名单DiskShadow.exe：[https://mp.weixin.qq.com/s/pr0KYjk80YIk4qJO5h3Yaw](https://mp.weixin.qq.com/s/pr0KYjk80YIk4qJO5h3Yaw)

59.远控免杀专题(59)-白名单Odbcconf.exe：[https://mp.weixin.qq.com/s/uOwqbW0nkG776zZz6O_WFA](https://mp.weixin.qq.com/s/uOwqbW0nkG776zZz6O_WFA)

60.远控免杀专题(60)-白名单Forfiles.exe：[https://mp.weixin.qq.com/s/1-HyeNrd4IXQYsyG6dHQkw](https://mp.weixin.qq.com/s/1-HyeNrd4IXQYsyG6dHQkw)

61.远控免杀专题(61)-白名单Te.exe：[https://mp.weixin.qq.com/s/m37wm620qQ1xw4BN2hGOpg](https://mp.weixin.qq.com/s/m37wm620qQ1xw4BN2hGOpg)

62.远控免杀专题(62)-白名单CScript.exe-WScript.exe：[https://mp.weixin.qq.com/s/jzWHq7Yc1UjOwnXulIAPKQ](https://mp.weixin.qq.com/s/jzWHq7Yc1UjOwnXulIAPKQ)

63.远控免杀专题(63)-白名单InfDefaultInstall.exe：[https://mp.weixin.qq.com/s/mrtX4ayCXJJ1LPfBlSuvHw](https://mp.weixin.qq.com/s/mrtX4ayCXJJ1LPfBlSuvHw)

64.远控免杀专题(64)-Msf自编译免杀补充：[https://mp.weixin.qq.com/s/HsIqUKl7j1WJ4yyYzXdPZg](https://mp.weixin.qq.com/s/HsIqUKl7j1WJ4yyYzXdPZg)

65.远控免杀专题(65)-shellcode免杀实践补充：[https://mp.weixin.qq.com/s/J78CPtHJX5ouN6fxVxMFgg](https://mp.weixin.qq.com/s/J78CPtHJX5ouN6fxVxMFgg)

66.远控免杀专题(66)-工具篇总结：[https://mp.weixin.qq.com/s/WdErH1AOaI3B5Kptu7DK5Q](https://mp.weixin.qq.com/s/WdErH1AOaI3B5Kptu7DK5Q)

67.远控免杀专题(67)-白名单篇总结：[https://mp.weixin.qq.com/s/2bC5otYgIgGnod-cXwkfqw](https://mp.weixin.qq.com/s/2bC5otYgIgGnod-cXwkfqw)

68.远控免杀专题(68)-Mimikatz免杀实践(上)：[https://mp.weixin.qq.com/s/CiOaMnJBcEQfZXV_hopzLw](https://mp.weixin.qq.com/s/CiOaMnJBcEQfZXV_hopzLw)

69.远控免杀专题(69)-Mimikatz免杀实践(下)：[https://mp.weixin.qq.com/s/0p88rj-tWClLa_geKMkPgw](https://mp.weixin.qq.com/s/0p88rj-tWClLa_geKMkPgw)

70.远控免杀专题(70)-终结篇：[https://mp.weixin.qq.com/s/4shT8tP-Gu3XX7fnWKQHAA](https://mp.weixin.qq.com/s/4shT8tP-Gu3XX7fnWKQHAA)

71.远控免杀专题(71)-Donut免杀任意可执行文件： [https://mp.weixin.qq.com/s/DoWRTIIBwuvzRd59wIWpXw](https://mp.weixin.qq.com/s/DoWRTIIBwuvzRd59wIWpXw)

72.远控免杀专题(72)-sRDI反射型DLL注入免杀: [https://mp.weixin.qq.com/s/GeR1Uc2zmdoHUD1m4PUPkA](https://mp.weixin.qq.com/s/GeR1Uc2zmdoHUD1m4PUPkA)

73.远控免杀专题(73)-使用stager.dll的多种免杀方式: [https://mp.weixin.qq.com/s/23fZTmpT7YVkguvHfXC57Q](https://mp.weixin.qq.com/s/23fZTmpT7YVkguvHfXC57Q)

74.远控免杀专题(74)-基于Go的条件触发式免杀: [https://mp.weixin.qq.com/s/td9_TFaM8svEmq4uBWxBXg](https://mp.weixin.qq.com/s/td9_TFaM8svEmq4uBWxBXg)

75.远控免杀专题(75)-基于Go的沙箱检测: [https://mp.weixin.qq.com/s/I04c944ED0UBWY8_Hq0t0g](https://mp.weixin.qq.com/s/I04c944ED0UBWY8_Hq0t0g)

76.远控免杀专题(76)-基于Go的各种API免杀测试: [https://mp.weixin.qq.com/s/c4LkV7PdzaXYH7H1Ix6mcA](https://mp.weixin.qq.com/s/c4LkV7PdzaXYH7H1Ix6mcA)

77.远控免杀专题(77)-基于Go的免杀总结: [https://mp.weixin.qq.com/s/yxDYccGRgUayd4XeHkrNQg](https://mp.weixin.qq.com/s/yxDYccGRgUayd4XeHkrNQg)

78.潮影在线免杀平台上线:  [https://mp.weixin.qq.com/s/nuUg8lOdghdcI5egMqzD0A](https://mp.weixin.qq.com/s/nuUg8lOdghdcI5egMqzD0A)

**完结！撒花~**

# 关于Tide安全团队

Tide安全团队致力于分享高质量原创文章，研究方向覆盖网络攻防、Web安全、移动终端、安全开发、IoT/物联网/工控安全等多个领域，对安全感兴趣的小伙伴可以关注或加入我们。

Tide安全团队自研开源多套安全平台，如Tide(潮汐)网络空间搜索平台、潮启移动端安全管控平台、分布式web扫描平台WDScanner、Mars网络威胁监测平台、潮汐指纹识别系统、潮巡自动化漏洞挖掘平台、工业互联网安全监测平台、漏洞知识库、代理资源池、字典权重库、内部培训系统等等。

Tide安全团队自建立之初持续向CNCERT、CNVD、漏洞盒子、补天、各大SRC等漏洞提交平台提交漏洞，在漏洞盒子先后组建的两支漏洞挖掘团队在全国300多个安全团队中均拥有排名前十的成绩。团队成员在FreeBuf、安全客、安全脉搏、t00ls、简书、CSDN、51CTO、CnBlogs等网站开设专栏或博客，研究安全技术、分享经验技能。

对安全感兴趣的小伙伴可以关注Tide安全团队Wiki：[http://paper.TideSec.com](http://paper.TideSec.com) 或团队公众号。



",,2019-12-16T06:26:32Z,2024-01-12T01:28:21Z,1,1,4359,95,"('TideSec', 81)",0,0,
UCodeUStory/S-MVP,"🔥🔥优化版MVP,使用注解泛型简化代码编写，使用模块化协议方便维护，APT过程使用注解解析器利用JavaPoet🌝完成重复模块的编写，利用ASpect+GradlePlugin 完成横向AOP编程+Javassist动态字节码注入+Tinker实现热修复+Retrofit实现优雅网络操作+RxJava轻松玩转数据处理","

  





![Language](https://img.shields.io/badge/language-Java-EE0000.svg)
![](https://img.shields.io/badge/QQ-1483888222-green.svg)
![SDK](https://img.shields.io/badge/SDK-14%2B-orange.svg) 
[![License](https://img.shields.io/apm/l/vim-mode.svg)](https://github.com/UCodeUStory/S-MVP/blob/master/LICENSE)



### 引言

-  **MVC时代**：在MVC模型里，更关注的Model的不变，业务需求通常是Model不变，同时有多个对Model的不同显示，即View。所以，在MVC模型里，Model不依赖于View，但是View是依赖于Model的。
不仅如此，因为有一些业务逻辑在View里实现了，导致要更改View也是比较困难的，至少那些业务逻辑是无法重用的。

-  **MVP时代**：在MVP里，Presenter完全把Model和View进行了分离，主要的程序逻辑在Presenter里实现。而且，Presenter与具体的View是没有直接关联的，而是通过定义好的接口进行交互（单独测试时我们只需要按照接口传递参数即可），从而使得在变更View时候可以保持Presenter的不变，即重用！ 不仅如此，我们还可以编写测试用的View，模拟用户的各种操作，从而实现对Presenter的测试--而不需要使用自动化的测试工具

- **MVP解耦View时代**：以往我们的V层是一个Activity或Frament实现，大多数情况下，我们的一个页面布局很复杂,包含很多个ViewGroup,而不是简单的一个ListView、GridView，按照之前的会发现一个Activity中有很多Presenter来维护和很多的回调，有时我们只需要改动其中的一个ViewGroup内容逻辑，却不能很好的区分，所以我们要让每个View或者ViewGroup实现MVP，这样不管这个View放在哪(Activity/Fragment/ViewGroup)都能够很好的移植，并且修改某一个的时候也会互相不影响，所以通过LifeCycle和组件化View可以很好解决上面问题

#### QQ群 806248089
### 内容

- #### 1.通过模块化减少了类的创建

  常见写法：接口一个类，实现一个类，这样的MVP中就会出现6个类
  
  优化写法：Contract类管理接口,这样的MVP中只会出现4个类
  
- #### 2.通过注解，隐藏Presenter创建，减少代码

  常见写法：需要在每个Activity中创建一个Presenter
  
  优化写法：在父类里拿到子类的名字进行创建，创建过程通过在要创建的Presenter添加上注解标识，在编译器动态生成代码

- #### 3.添加Gradle插件使用Aspectj编译器

- #### 4.通过Aspectj 实现TimeLog耗时打印，自定义Buidlconfig实现开关

- #### 5.添加Lru缓存切片通过使用@MemoryCache注解

- #### 6.添加登陆缓存切片用来检测是否登陆

- #### 7.添加异常捕获，打印，保证程序不崩溃

- #### 8.自定义BindView框架，通过@$(R.id.abc)作用在public类型的变量
    1. 通过InjectView.bind();实现绑定
    2. 通过InjectView.unbind();实现解绑
    3. 支持在Activity和View中进行绑定

- #### 9.通过javassist修改字节码的方式，可以生成类，也可以在某些特定方法注入代码，在保证不修改源码的情况，完成aop，避免代码碎片化

- #### 10.通常我们一个页面需要不止一个请求，并且这些请求是异步的，这样可以得到很好的用户体验，往往我们还需要，等待这些请求都完成后做一些处理

   这里封装一个Asynctask
   
   - 使用方法：
      1. 创建一个SmartTaskManager,调用put方法传递一个要同步的线程数量，和指定一个key
      2. 其他文件通过key获取Asynctask对象，在各线程执行完后调用Asynctask对象一个onFinish()方法
      3. SmartTaskManager获取调用toEnd传递一个Runnable，当两个线程执行完后就会回调这个方法
      4. 最后页面退出的时候移除这个task,SmartTaskManager.remove(key);
   - 例子
          
           smartTaskManager = SmartTaskManager.as();
           smartTaskManager.put(""initTask"",2);
           smartTaskManager.put(""init"");
           smartTaskManager.getAsyncTask(""initTask"").toEnd(new Runnable() {
               @Override
               public void run() {
                   Toast.makeText(getApplicationContext(),""页面全部初始化完成"",Toast.LENGTH_SHORT).show();
               }
           });
     
- #### 11.业务中我们需要一个请求后调用另一个请求再调用其他请求，这种串行请求我们通常使用嵌套的形式，缺点很不好维护，如果要有需求要改变顺序，那需要改动很多的代码
   
   封装一个SyncTask
   
   - 使用方法：
     1. 创建一个SmartTaskManager,调用put方法传递一个要同步的线程数量，和指定一个key
     2. 其他文件通过key获取Synctask对象，在各线程执行完后调用Synctask对象一个onFinish(param)方法传递参数给下一个
     3. 通过这个Synctask对象我们调用onNext，添加任务，添加的任务顺序，就是执行顺序
     4. 调用start方法开始执行请求
     5. 最后页面退出的时候移除这个task,SmartTaskManager.remove(key);
   
   - 例子：
   
         SyncTask stk = smartTaskManager.getSyncTask(""init"");
         stk.onNext(obj -> initModel2.request_1())
                 .onNext(obj -> initModel2.request_2((String)obj))
                 .onNext(obj -> initModel2.request_3((String) obj, msg -> Toast.makeText(getApplicationContext(),msg,Toast.LENGTH_SHORT).show()));

         stk.start();
   #### SmartTask结构
   ![image](https://github.com/UCodeUStory/S-MVP/blob/master/smartManager.png)
   
- #### 12.添加LifeCycle实现组件化View开发
    1. moudle下build.gradle 添加：
   
              compile ""android.arch.lifecycle:runtime:1.0.0-alpha4""
              compile ""android.arch.lifecycle:extensions:1.0.0-alpha4""
              annotationProcessor ""android.arch.lifecycle:compiler:1.0.0-alpha4""
              
    2. 项目工程下build.gradle 添加：
   
           allprojects {
               repositories {
                   jcenter()
                   google()
                   mavenCentral()
               }
           }
           
- #### 13.以测试驱动开发应用程序,开发中先在AndroidTest编写好单元测试

- #### 14.不建议使用DataBinding 因为会增加对布局的耦合，布局复用性就差了

#### 架构图






#### 我的相关技术仓库

 Repository | Repository | Repository | Repository
---|---|---|---
[组件化开发框架](https://github.com/UCodeUStory/ComponentDevelopment)  | [插件化开发框架](https://github.com/UCodeUStory/AndroidPluginFramework) | [Gradle插件开发](https://github.com/UCodeUStory/GradlePlugin)|[Tinker热修复例子](https://github.com/UCodeUStory/TinkerDemo)
[事件状态机处理](https://github.com/UCodeUStory/StateMachine) | [MVVM设计](https://github.com/UCodeUStory/MVVM) | [JavaPoet](https://github.com/UCodeUStory/JavaPoetSample)| [Relax](https://github.com/UCodeUStory/Relax)

#### Library

1. [Retrofit](https://github.com/square/retrofit)
2. [OKHttp](https://github.com/square/okhttp)
3. [GSON](https://github.com/google/gson)
4. [RxJava](https://github.com/ReactiveX/RxJava)
5. [Glide](https://github.com/bumptech/glide)
6. [LeakCanary](https://github.com/square/leakcanary)
7. [Aspect](http://mvnrepository.com/artifact/org.aspectj/aspectjtools)


****
#### **框架待优化**


3.使用Javassist注入字节码,这是一个很好的字节码编辑工具，提供在JVM运行期前修改的api

4.路由实现简单的跳转，路由器也是用来解耦的，增加后台可配置性

5.添加日志缓存框架,日志统一配置

6.不是用RXjava情况下 处理取消网络请求，参数获取封装$(),封装Log

7、性能监控：性能日志


#### 处理流程
 1. 在build 过程我们可以通过apt 生成java文件,再通过Aspectj解析，编织成class,最后我们还可以通过Javassist修改class和jar文件，最终打包成dex 到 apk


 
#### 友情链接
 - [fly803/BaseProject](https://github.com/fly803/BaseProject) 
","'android', 'apt', 'aspectj', 'gradle', 'hook', 'javassist', 'javassist-aop', 'lifecycle', 'mvp', 'retrofit2', 'rxjava'",2017-10-11T02:47:47Z,2019-08-23T08:21:00Z,1,1,1084,49,"('UCodeUStory', 113)",0,0,
java-aodeng/hope-boot,🌱 一款现代化的脚手架项目,"Hope-Boot

> 🌱 Hope-Boot 一款现代化的脚手架项目，给爱学习的同学多一个选择。








------------------------------

## 简介

**Hope** [ˈامید ہے]，意为希望。

用于企业开发，技术学习等。🍻🍻

> [关于作者](http://ilovey.live/s/about) | [QQ 交流群](https://jq.qq.com/?_wv=1027&k=574chhz) | [Telegram 交流群](https://t.me/joinchat/LSsyBxVKLGEkF5MtIhg6TQ) | [微博](https://weibo.com/aodeng520?is_all=1) | [公众号](http://image.ilovey.live/image/9c2edb9f57037c89f52d757e3cf79683.jpg) 

微信：如果需要和我交流的话可以加我私人微信，有问题的话也可以问，我会尽量回答大家

![微信图片_20200329114547](http://image.ilovey.live/image/0d6ff0bf2d7d51cc9839bd17c7c9b746.png)

## 文档

| 版本     |    文档 | Code Branches |
| ---------- |-------------|--------|
| SpringBoot基础版 | [开始使用](https://github.com/hope-for/hope-boot/wiki/1.SpringBoot%E5%9F%BA%E7%A1%80%E7%89%88.%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E) |[1.0.0-release](https://github.com/hope-for/hope-boot/tree/1.0.0-release)|
| Dubbo分布式精简版 | 开发中 |开发中|

## 许可证

[![license](https://img.shields.io/github/license/java-aodeng/hope.svg?style=flat-square)](https://github.com/hope-for/hope-boot/blob/master/LICENSE)

> Hope-Boot 使用 GPL-v3.0 协议开源，请尽量遵守开源协议，即便是在中国。

## 捐赠

>如果 Hope-Boot 对你有帮助，可以请作者吃个肉夹馍 :)

![](https://i.loli.net/2018/12/31/5c29d3b18826d.png)

## 预览图

![banner](https://i.loli.net/2019/11/13/BkoDw3SMh14p7JO.png)

![](https://i.loli.net/2019/05/01/5cc930100d298.png)

![](https://i.loli.net/2019/05/01/5cc9300612ca5.png)

![](https://i.loli.net/2019/05/01/5cc9300d45a92.png)

![](https://i.loli.net/2019/05/01/5cc9300d62006.png)

![](https://i.loli.net/2019/05/01/5cc9300d8fb70.png)

![](https://i.loli.net/2019/05/01/5cc9300bc316d.png)

![](https://i.loli.net/2019/05/01/5cc93003ef3d6.png)

![](https://i.loli.net/2019/05/01/5cc932128cc07.png)
","'druid', 'flyway', 'hope', 'mapper', 'maven', 'mybatis', 'redis', 'shiro', 'shiro-redis', 'spring-boot', 'sso', 'swagger', 'thymeleaf'",2018-10-17T07:50:48Z,2022-06-17T02:00:49Z,6,3,3252,91,"('java-aodeng', 373), ('低调小熊猫', 29), ('ImgBotApp', 4), ('cjim8889', 1), ('fengguicheng', 1), ('java-aodeng', 1)",3,1,
basscss/basscss,Low-level CSS Toolkit – the original Functional/Utility/Atomic CSS library,"# Basscss

Low-level CSS toolkit – the original [Functional CSS][functional-css] library 

[![Build Status](https://travis-ci.org/basscss/basscss.svg)](https://travis-ci.org/basscss/basscss)
[![npm version](https://badge.fury.io/js/basscss.svg)](https://badge.fury.io/js/basscss)

## Lightning-Fast Modular CSS with No Side Effects

Basscss is a lightweight collection of immutable utilities designed for speed, clarity, performance, and scalability.

## Stable

Basscss v8 is the final version of Basscss, which means no major, breaking changes will be introduced.
Minor features and patches may be added, but
due to the nature of this CSS approach, there are virtually no bugs in Basscss.

---

## Features

### Code with Confidence

Using clear, humanized naming conventions, Basscss is quick to internalize
and easy to reason about while speeding up development time with more scalable,
more readable code.

### No Side Effects

Things behave exactly as expected with immutable utilities
and styles that follow the open/closed principle
to help prevent common pitfalls with CSS.

### Composable

Reusable, interoperable styles
work like building blocks to lay the foundation for any stylesheet
and can be mixed and matched in any number of combinations.

## Designed for Design

Basscss strikes a balance between consistency and flexibility
to allow for rapid prototyping and quick iterative changes
when designing in the browser.

## Responsive by Default

Basscss provides lightweight, performant styles
and flexible utilities to design for any device
and to help reduce boilerplate in stylesheets.

## Unassuming

Modular and customizable typography and layout styles don’t dictate
what things should look like and play well with other stylesheets and frameworks.

[Read More](https://basscss.com)

---

## Other Packages

### Base styles

The core Basscss package does not include any base element styles.
For an out-of-the-box solution, see:

https://github.com/basscss/basic

### Addons

In addition to the core modules, optional modules,
including responsive margin, padding, layout, and typography styles, can be found here:

https://github.com/basscss/addons

### Ace.css

For a bundle with the core Basscss and all optional modules, see:

https://github.com/basscss/ace

---

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md)

## Related

- [Tachyons][tachyons]
- [Buzzfeed Solid][solid]
- [OOCSS][oocss]

## Thanks

This library was largely inspired and influenced by the following people

- [Nicole Sullivan](https://twitter.com/stubbornella)
- [Nicolas Gallagher](https://twitter.com/necolas)
- [Adam Morse](https://twitter.com/mrmrs_)
- [Jessica Harllee](https://twitter.com/harllee)
- [Zack Sears](https://twitter.com/zacksears)
- [Diana Mounter](https://twitter.com/broccolini)
- [John Otander](https://twitter.com/4lpine)

---

[MIT license](LICENSE.md)

[functional-css]: https://jon.gold/2015/07/functional-css/
[tachyons]: http://tachyons.io
[solid]: https://solid.buzzfeed.com
[oocss]: https://github.com/stubbornella/oocss/wiki
","'atomic-css', 'basscss', 'css', 'design-system', 'functional-css', 'oocss', 'utility', 'utility-css'",2013-10-19T19:20:49Z,2022-12-30T17:37:47Z,28,24,5836,105,"('jxnblk', 883), ('Brent Jackson', 93), ('jxnblk', 31), ('0xflotus', 6), ('n-kort', 3), ('mrmrs', 3), ('cvrebert', 2), ('johno', 2), ('luizbills', 2), ('tylerhowarth', 2), ('AndrewGardhouse', 1), ('anselmbradford', 1), ('coliff', 1), ('cerisier', 1), ('broccolini', 1), ('maxfenton', 1), ('max', 1), ('myobie', 1), ('olimart', 1), ('prayagverma', 1), ('rafaelrinaldi', 1), ('chibicode', 1), ('camelburrito', 1), ('Steven Nguyen', 1), ('teddyzetterlund', 1), ('clintonhalpin', 1), ('dependabotbot', 1), ('npmcdn-to-unpkg-bot', 1)",18,17,
xernyuii/cellularAutomataModelOfTransportation,MCM/ICM 2017 B,"# cellularAutomataModelOfTransportation

2017 MCM/ICM B
Cellular automata model

##pic

![](1.png)

##link

[comap](https://www.comap.com/undergraduate/contests/)",,2017-01-22T04:05:34Z,2017-01-29T14:07:38Z,1,1,10,3,"('xernyuii', 9)",0,0,
dabeaz/curio,Good Curio!,"Curio
=====

Curio is a coroutine-based library for concurrent Python systems
programming using async/await.  It provides standard programming
abstractions such as tasks, sockets, files, locks, and queues as
well as some advanced features such as support for structured
concurrency. It works on Unix and Windows and has zero dependencies.
You'll find it to be familiar, small, fast, and fun.

Important Notice: October 25, 2022
----------------------------------
The Curio project is no longer making package releases.  I'm more than
happy to accept bug reports and may continue to work on it from time
to time as the mood strikes.  If you want the absolute latest version, you
should vendor the source code from here. Curio has no dependencies
other than the Python standard library.  --Dave

Curio is Different
------------------
One of the most important ideas from software architecture is the
""separation of concerns.""  This can take many forms such as utilizing
abstraction layers, object oriented programming, aspects, higher-order
functions, and so forth.  However, another effective form of it exists
in the idea of separating execution environments.  For example, ""user
mode"" versus ""kernel mode"" in operating systems.  This is the
underlying idea in Curio, but applied to ""asynchronous"" versus
""synchronous"" execution.

A fundamental problem with asynchronous code is that it involves a
completely different evaluation model that doesn't compose well with
ordinary applications or with other approaches to concurrency such as
thread programing.  Although the addition of ""async/await"" to Python
helps clarify such code, ""async"" libraries still tend to be a confused
mess of functionality that mix asynchronous and synchronous
functionality together in the same environment--often bolting it all
together with an assortment of hacks that try to sort out all of
associated API confusion.

Curio strictly separates asynchronous code from synchronous code.
Specifically, *all* functionality related to the asynchronous
environment utilizes ""async/await"" features and syntax--without
exception.  Moreover, interactions between async and sync code is
carefully managed through a small set of simple mechanisms such as
events and queues.  As a result, Curio is small, fast, and
significantly easier to reason about.

A Simple Example
-----------------

Here is a concurrent TCP echo server directly implemented using sockets:

.. code:: python

    # echoserv.py
    
    from curio import run, spawn
    from curio.socket import *
    
    async def echo_server(address):
        sock = socket(AF_INET, SOCK_STREAM)
        sock.setsockopt(SOL_SOCKET, SO_REUSEADDR, 1)
        sock.bind(address)
        sock.listen(5)
        print('Server listening at', address)
        async with sock:
            while True:
                client, addr = await sock.accept()
                await spawn(echo_client, client, addr, daemon=True)
    
    async def echo_client(client, addr):
        print('Connection from', addr)
        async with client:
             while True:
                 data = await client.recv(100000)
                 if not data:
                     break
                 await client.sendall(data)
        print('Connection closed')

    if __name__ == '__main__':
        run(echo_server, ('',25000))

If you've done network programming with threads, it looks almost
identical. Moreover, it can handle thousands of clients even though no
threads are being used inside.

Core Features
-------------

Curio supports standard synchronization primitives (events, locks,
recursive locks, semaphores, and condition variables), queues,
subprocesses, as well as running tasks in threads and processes.  The
task model fully supports cancellation, task groups, timeouts,
monitoring, and other features critical to writing reliable code.

Read the `official documentation `_ for
more in-depth coverage.  The `tutorial
`_ is a good
starting point.  The `howto
`_ describes how to
carry out common programming tasks.

Talks Related to Curio
----------------------

Concepts related to Curio's design and general issues related to async
programming have been described by Curio's creator, `David Beazley `_, in
various conference talks and tutorials:

* `Build Your Own Async `_, Workshop talk by David Beazley at PyCon India, 2019.

* `The Other Async (Threads + Asyncio = Love) `_, Keynote talk by David Beazley at PyGotham, 2017.

* `Fear and Awaiting in Async `_, Keynote talk by David Beazley at PyOhio 2016.

* `Topics of Interest (Async) `_, Keynote talk by David Beazley at Python Brasil 2015.

* `Python Concurrency from the Ground Up (LIVE) `_, talk by David Beazley at PyCon 2015.

Questions and Answers
---------------------

**Q: What is the point of the Curio project?**

A: Curio is async programming, reimagined as something smaller, faster, and easier 
to reason about. It is meant to be both educational and practical.

**Q: Is Curio implemented using asyncio?**

A: No. Curio is a standalone library directly created from low-level I/O primitives.

**Q: Is Curio meant to be a clone of asyncio?**

A: No. Although Curio provides a significant amount of overlapping
functionality, the API is different.  Compatibility with other
libaries is not a goal.

**Q: Is Curio meant to be compatible with other async libraries?**

A: No. Curio is a stand-alone project that emphasizes a certain
software architecture based on separation of environments.  Other
libraries have largely ignored this concept, preferring to simply
provide variations on the existing approach found in asyncio.

**Q: Can Curio interoperate with other event loops?**

A: It depends on what you mean by the word ""interoperate.""  Curio's
preferred mechanism of communication with the external world is a
queue.  It is possible to communicate between Curio, threads, and
other event loops using queues.  

**Q: How fast is Curio?**

A: Curio's primary goal is to be an async library that is minimal and
understandable. Performance is not the primary concern.  That said, in
rough benchmarking of a simple echo server, Curio is more than twice
as fast as comparable code using coroutines in ``asyncio`` or
``trio``.  This was last measured on OS-X using Python 3.9.  Keep in
mind there is a lot more to overall application performance than the
performance of a simple echo server so your mileage might
vary. However, as a runtime environment, Curio doesn't introduce a lot of
extra overhead. See the ``examples/benchmark`` directory for various
testing programs.

**Q: What is the future of Curio?**

A: Curio should be viewed as a library of basic programming
primitives.  At this time, it is considered to be
feature-complete--meaning that it is not expected to sprout many new
capabilities.  It may be updated from time to time to fix bugs or
support new versions of Python.

**Q: Can I contribute?**

A: Curio is not a community-based project seeking developers
or maintainers.  However, having it work reliably is important. If you've
found a bug or have an idea for making it better, please 
file an `issue `_. 

Contributors
------------

The following people contributed ideas to early stages of the Curio project:
Brett Cannon, Nathaniel Smith, Alexander Zhukov, Laura Dickinson, and Sandeep Gupta.

Who
---
Curio is the creation of David Beazley (@dabeaz) who is also
responsible for its maintenance.  http://www.dabeaz.com

P.S.
----
If you want to learn more about concurrent programming more generally, you should
come take a `course `_!

.. |--| unicode:: U+2013   .. en dash
.. |---| unicode:: U+2014  .. em dash, trimming surrounding whitespace
   :trim:



",,2015-10-11T14:02:00Z,2024-04-11T15:02:26Z,60,49,4005,146,"('dabeaz', 756), ('brettcannon', 36), ('njsmith', 24), ('ZhukovAlexander', 19), ('GeeTransit', 11), ('giampaolo', 11), ('Fuyukai', 9), ('tds333', 6), ('donspaulding', 5), ('John Gill', 5), ('alexchamberlain', 5), ('vsajip', 4), ('zoidyzoidzoid', 4), ('agronholm', 3), ('jab', 3), ('awesomo4000', 2), ('Don Spaulding', 2), ('hugovk', 2), ('bobrik', 2), ('JMSwag', 2), ('Keith Dart', 2), ('Stephen Harding', 2), ('adontz', 2), ('liormizr', 2), ('Adam Chainz', 1), ('Adam Englander', 1), ('andersea', 1), ('benburrill', 1), ('cjrh', 1), ('carlwgeorge', 1), ('clchiou', 1), ('davidbrochart', 1), ('dlech', 1), ('David Pravec', 1), ('dbuse', 1), ('gliptak', 1), ('idlesign', 1), ('dutc', 1), ('bauerj', 1), ('John Sterling', 1), ('Jordan Pittier', 1), ('justinmoon', 1), ('ltricot', 1), ('likern', 1), ('nikhilro', 1), ('sobolevn', 1), ('obestwalter', 1), ('princemaple', 1), ('sam-bristow', 1), ('Sandeep Gupta', 1), ('Tinche', 1), ('avamsi', 1), ('crubier', 1), ('Zaharid', 1), ('caimaoy', 1), ('drewja', 1), ('daidai21', 1), ('therumbler', 1), ('yarko', 1), ('zed', 1)",36,30,
mitchellkrogza/apache-ultimate-bad-bot-blocker,"Apache Block Bad Bots, (Referer) Spam Referrer Blocker, Vulnerability Scanners, Malware, Adware, Ransomware, Malicious Sites, Wordpress Theme Detectors and Fail2Ban Jail for Repeat Offenders","

| REPO | BECOME A SPONSOR |
| :--: | :--: |
| [![DUB](https://img.shields.io/dub/l/vibe-d.svg)](https://github.com/mitchellkrogza/nginx-ultimate-bad-bot-blocker/blob/master/LICENSE.md) | Your logo and link to your domain will appear here if you become a sponsor. Simply email me on mitchellkrog@gmail.com if you would like to sponsor this project as South Africa is not supported yet under the Github sponsor program. |
 | Help Support Me at https://ko-fi.com/mitchellkrog |

# Apache Bad Bot and User-Agent Blocker, Spam Referrer Blocker, Bad IP Blocker and Wordpress Theme Detector Blocker
##### The Ultimate Apache (2.2 > 2.4+) Bad Bot, User-Agent, Spam Referrer Blocker, Adware, Malware and Ransomware Blocker, Clickjacking Blocker, Click Re-Directing Blocker, SEO Companies and Bad IP Blocker with Anti DDOS System, Nginx Rate Limiting and Wordpress Theme Detector Blocking. Stop and Block all kinds of bad internet traffic from ever reaching your web sites. [PLEASE SEE: Definition of Bad Bots](#define-bad-bots)

_______________
#### Version: V3.2024.06.1947
#### Bad Referrer Count: [7104](https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/_generator_lists/bad-referrers.list)
#### Bad Bot Count: [655](https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/_generator_lists/bad-user-agents.list)
#### Fake Googlebots: [217](https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/_generator_lists/fake-googlebots.list)
____________________

- Created by: https://github.com/mitchellkrogza
- Copyright Mitchell Krog 

****************************************************************
## Two Versions of the Blocker ? PLEASE TAKE NOTE :exclamation:

:exclamation:**There are now two distinctly different versions of this blocker.**:exclamation:

**Apache 2.2 > 2.4+ (access_compat)  [  TESTED ON APACHE 2.2 > 2.4.27  ]**
****************************************************************
```
A Version for Apache 2.2 > 2.4 + which requires the module access_compat and uses the older 
Order Allow,Deny Access Control Methods. 

This is the ORIGINAL VERSION of the blocker and is now located in the folder Apache_2.2 at:
https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/tree/master/Apache_2.2
```
****************************************************************

**Apache 2.4+ ONLY  [  TESTED ON APACHE 2.4 > 2.4.34  ]**
****************************************************************
``` 
A new version for Apache 2.4+ only which uses new the Access Control Structures of 
 and . 

Anyone using Apache 2.4 should be using this new version as it fully complies with the new Access 
Control Methods of Apache and does not require the access_compat module to be loaded. 

This new version is at: 
https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/tree/master/Apache_2.4
```
****************************************************************

### For Support, Contributions & Idea Sharing

Please make sure you are subscribed to Github Notifications to be notified when the blocker is updated or when any important or mission critical (potentially breaking) changes may take place.

##### Also follow me on twitter @ubuntu101za 



## Help Support This Project 

[](https://ko-fi.com/mitchellkrog)

****************************************************************

# CONFIGURATION OF THE APACHE BAD BOT BLOCKER:

- CPANEL Users read - https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/blob/master/_CPanel_Instructions/README.md
- Users Unable to run the full Bot Blocker read - https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/blob/master/_htaccess_versions/README.md
- Includes the creation of a google-exclude.txt file for creating filters / segments in Google Analytics (see instructions lower down)
- Includes the creation of a google-disavow.txt file for use in Google Webmaster Tools (see instructions lower down)
- Includes .htaccess and robots.txt files for users without root access to their Apache Servers.



************************************************


**COPY THE GLOBALBLACKLIST.CONF FILE FROM THE REPO**
$APACHE_CONF is generally located at /etc/apache2 or /etc/httpd depending on OS

Copy the contents of **globalblacklist.conf** into your $APACHE_CONF/custom.d folder. 
e.g. /etc/apache2/custom.d on Ubuntu/Debian
     /etc/httpd on RHEL/centos
**You need to create this folder.**

The following directions use /etc/apache2 as an example.

`sudo mkdir /etc/apache2/custom.d`

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/globalblacklist.conf -O /etc/apache2/custom.d/globalblacklist.conf`

If your Linux distribution does not have wget you can replace the wget commands using curl as follows:

`curl -sL https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/globalblacklist.conf -o /etc/apache2/custom.d/globalblacklist.conf`

************************************************


**WHITELIST ALL YOUR OWN DOMAIN NAMES AND IP ADDRESSES**

Whitelist all your own domain names and IP addresses. **Please note important changes**, this is now done using include files so that you do not have to keep reinserting your whitelisted domains and IP addresses every time you update.

:exclamation: :exclamation: :exclamation: WARNING: Please do NOT ever use 127.0.0.1 as a whitelisted IP address in whitelist-ips.conf it will cause the blocker to stop functioning.

- copy the whitelist-ips.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/whitelist-ips.conf -O /etc/apache2/custom.d/whitelist-ips.conf`


- copy the whitelist-domains.conf file into the same folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/whitelist-domains.conf -O /etc/apache2/custom.d/whitelist-domains.conf`

Use nano, vim or any other text editor to edit both whitelist-ips.conf and whitelist-domains.conf to include all your own domain names and IP addresses that you want to specifically whitelist from the blocker script. 

When pulling any future updates now you can simply pull the latest globalblacklist.conf file and it will automatically include your whitelisted domains and IP addresses. No more remembering having to do this yourself.

************************************************


**DOWNLOAD CUSTOM BLACKLIST INCLUDE FILE FOR IP ADDRESS AND IP RANGE BLOCKING**

Blacklist any IP addresses or Ranges you wish to keep out of your servers. **Please note important changes**, this is now done using include files so that you have full control over what IP addresses and IP Ranges and blocked from your Apache Server.

- copy the blacklist-ips.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/blacklist-ips.conf -O /etc/apache2/custom.d/blacklist-ips.conf`


Use nano, vim or any other text editor to edit the blacklist-ips.conf file as you like. 

When pulling any future updates now your custom IP blacklist will not be overwritten.

************************************************


**DOWNLOAD CUSTOM BAD REFERRER WORDS INCLUDE FILE FOR CUSTOMIZED SCANNING OF BAD WORDS**

Scan for any bad referrer words you wish to keep out of your servers. **Please note important changes**, this is now done using include files so that you have full control over what IP addresses and IP Ranges and blocked from your Apache Server.

- copy the bad-referrer-words.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/bad-referrer-words.conf -O /etc/apache2/custom.d/bad-referrer-words.conf`


Use nano, vim or any other text editor to edit the bad-referrer-words.conf file as you like. 

When pulling any future updates now your custom bad referrer words list will not be overwritten.

************************************************


**DOWNLOAD CUSTOM BLACKLIST USER-AGENTS INCLUDE FILE FOR CUSTOMIZED BLOCKING OF USER AGENTS**

Allows you to add your own custom list of user agents with this new include file.

- copy the blacklist-user-agents.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/blacklist-user-agents.conf -O /etc/apache2/custom.d/blacklist-user-agents.conf`

**NOTE:** On the Apache Blocker if you want to over-ride any of the whitelisted bots you can add them to this include file and the previously whitelisted bots in the blocker will be over-ridden by this include file. So let's say for some ""obscure"" reason you really do not want any search engines like Googlebot or Bingbot to ever access or index your site, you add them to your blacklist-user-agents.conf and they will be over-ridden from the earlier whitelisting in the blocker. This now gives users total control over the blocker without every having to try and modify the globalblacklist.conf file. So now you can customize all your include files and you can still pull the daily updates of globalblacklist.conf and it will not touch any of your custom include files.

************************************************


**INCLUDE THE GLOBALBLACKLIST.CONF**

Include the globalblacklist.conf file in the beginning of a directory block just after your opening Options statements and before the rest of your host config example below. **Remove the ""<<<<<< This needs to be added"" part**

```

	ServerName local.dev
	DocumentRoot /var/www/html
	ErrorLog /tmp/error.log

	
	Options +Includes
	Options +FollowSymLinks -Indexes
	Include custom.d/globalblacklist.conf
	

```

You can include globalblacklist.conf globally (for all virtual hosts) if you put the following configuration after virtual host configuration.

```
# ######################################
# GLOBAL! deny bad bots and IP addresses
# ######################################
#
# should be set after s see https://httpd.apache.org/docs/2.4/sections.html#merging

	# AND-combine with preceding configuration sections  
	AuthMerging And
	# include black list
	Include custom.d/globalblacklist.conf

```

************************************************


**TEST YOUR APACHE CONFIGURATION**

Do an Apache2 Config Test

`sudo apache2ctl configtest`

If you get no errors then you followed my instructions so now you can make the blocker go live with a simple.

`sudo service apache2 reload`

or

`sudo service httpd reload`

The blocker is now active and working so now you can run some simple tests from another linux machine to make sure it's working.

************************************************


*TESTING**

Run the following commands one by one from a terminal on another linux machine against your own domain name. 
**substitute yourdomain.com in the examples below with your REAL domain name**

`curl -A ""googlebot"" http://yourdomain.com`

Should respond with 200 OK

`curl -A ""80legs"" http://yourdomain.com`

`curl -A ""masscan"" http://yourdomain.com`

Should respond with 403 Forbidden

`curl -I http://yourdomain.com -e http://100dollars-seo.com`

`curl -I http://yourdomain.com -e http://zx6.ru`

Should respond with 403 Forbidden

The Apache Ultimate Bot Blocker is now WORKING and PROTECTING your web sites !!!

************************************************


**UPDATING THE APACHE BAD BOT BLOCKER** is now easy thanks to the automatic includes for whitelisting your own domain names.

Updating to the latest version is now as simple as:

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.2/custom.d/globalblacklist.conf -O /etc/apache2/custom.d/globalblacklist.conf`

`sudo apache2ctl configtest`

`sudo service apache2 reload` 

And you will be up to date with all your whitelisted domains included automatically for you now. 

************************************************
# AUTO UPDATING WITH CRON:

See the latest auto updater bash script for Apache 2.2 and 2.4 contributed by Luke Taylor @lutaylor at:

https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/blob/master/update-apacheblocker.sh

Relax now and sleep better at night knowing your site is telling all those baddies FORBIDDEN !!!



************************************************


**COPY THE GLOBALBLACKLIST.CONF FILE FROM THE REPO**
$APACHE_CONF is generally located at /etc/apache2 or /etc/httpd depending on OS

Copy the contents of **globalblacklist.conf** into your $APACHE_CONF/custom.d folder. 
e.g. /etc/apache2/custom.d on Ubuntu/Debian
     /etc/httpd on RHEL/centos
**You need to create this folder.**

The following directions use /etc/apache2 as an example.

`sudo mkdir /etc/apache2/custom.d`

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/globalblacklist.conf -O /etc/apache2/custom.d/globalblacklist.conf`

If your Linux distribution does not have wget you can replace the wget commands using curl as follows:

`curl -sL https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/globalblacklist.conf -o /etc/apache2/custom.d/globalblacklist.conf`

************************************************


**WHITELIST ALL YOUR OWN DOMAIN NAMES AND IP ADDRESSES**

Whitelist all your own domain names and IP addresses. **Please note important changes**, this is now done using include files so that you do not have to keep reinserting your whitelisted domains and IP addresses every time you update.

:exclamation: :exclamation: :exclamation: WARNING: Please do NOT ever use 127.0.0.1 as a whitelisted IP address in whitelist-ips.conf it will cause the blocker to stop functioning.

- copy the whitelist-ips.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/whitelist-ips.conf -O /etc/apache2/custom.d/whitelist-ips.conf`


- copy the whitelist-domains.conf file into the same folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/whitelist-domains.conf -O /etc/apache2/custom.d/whitelist-domains.conf`

Use nano, vim or any other text editor to edit both whitelist-ips.conf and whitelist-domains.conf to include all your own domain names and IP addresses that you want to specifically whitelist from the blocker script. 

When pulling any future updates now you can simply pull the latest globalblacklist.conf file and it will automatically include your whitelisted domains and IP addresses. No more remembering having to do this yourself.

************************************************


**DOWNLOAD CUSTOM BLACKLIST INCLUDE FILE FOR IP ADDRESS AND IP RANGE BLOCKING**

Blacklist any IP addresses or Ranges you wish to keep out of your servers. **Please note important changes**, this is now done using include files so that you have full control over what IP addresses and IP Ranges and blocked from your Apache Server.

- copy the blacklist-ips.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/blacklist-ips.conf -O /etc/apache2/custom.d/blacklist-ips.conf`


Use nano, vim or any other text editor to edit the blacklist-ips.conf file as you like. 

When pulling any future updates now your custom IP blacklist will not be overwritten.

************************************************


**DOWNLOAD CUSTOM BAD REFERRER WORDS INCLUDE FILE FOR CUSTOMIZED SCANNING OF BAD WORDS**

Scan for any bad referrer words you wish to keep out of your servers. **Please note important changes**, this is now done using include files so that you have full control over what IP addresses and IP Ranges and blocked from your Apache Server.

- copy the bad-referrer-words.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/bad-referrer-words.conf -O /etc/apache2/custom.d/bad-referrer-words.conf`


Use nano, vim or any other text editor to edit the bad-referrer-words.conf file as you like. 

When pulling any future updates now your custom bad referrer words list will not be overwritten.

************************************************


**DOWNLOAD CUSTOM BLACKLIST USER-AGENTS INCLUDE FILE FOR CUSTOMIZED BLOCKING OF USER AGENTS**

Allows you to add your own custom list of user agents with this new include file.

- copy the blacklist-user-agents.conf file into that folder

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/blacklist-user-agents.conf -O /etc/apache2/custom.d/blacklist-user-agents.conf`

**NOTE:** On the Apache Blocker if you want to over-ride any of the whitelisted bots you can add them to this include file and the previously whitelisted bots in the blocker will be over-ridden by this include file. So let's say for some ""obscure"" reason you really do not want any search engines like Googlebot or Bingbot to ever access or index your site, you add them to your blacklist-user-agents.conf and they will be over-ridden from the earlier whitelisting in the blocker. This now gives users total control over the blocker without every having to try and modify the globalblacklist.conf file. So now you can customize all your include files and you can still pull the daily updates of globalblacklist.conf and it will not touch any of your custom include files.

************************************************


**INCLUDE THE GLOBALBLACKLIST.CONF**

Include the globalblacklist.conf file in the beginning of a directory block just after your opening Options statements and before the rest of your host config example below. **Remove the ""<<<<<< This needs to be added"" part**

```


	ServerName local.dev
    ServerAlias www.local.dev
	DocumentRoot /var/www/html
	ErrorLog ${APACHE_LOG_DIR}/error.log
	CustomLog ${APACHE_LOG_DIR}/access.log combined

		
    		AllowOverride All
    		Options FollowSymLinks
			Include custom.d/globalblacklist.conf
  		



# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
```

You can include globalblacklist.conf globally (for all virtual hosts) if you put the following configuration after virtual host configuration.

```
# ######################################
# GLOBAL! deny bad bots and IP addresses
# ######################################
#
# should be set after s see https://httpd.apache.org/docs/2.4/sections.html#merging

	# AND-combine with preceding configuration sections  
	AuthMerging And
	# include black list
	Include custom.d/globalblacklist.conf

```

************************************************


**TEST YOUR APACHE CONFIGURATION**

Do an Apache2 Config Test

`sudo apache2ctl configtest`

If you get no errors then you followed my instructions so now you can make the blocker go live with a simple.

`sudo service apache2 reload`

or

`sudo service httpd reload`

The blocker is now active and working so now you can run some simple tests from another linux machine to make sure it's working.

************************************************


*TESTING**

Run the following commands one by one from a terminal on another linux machine against your own domain name. 
**substitute yourdomain.com in the examples below with your REAL domain name**

`curl -A ""googlebot"" http://yourdomain.com`

Should respond with 200 OK

`curl -A ""80legs"" http://yourdomain.com`

`curl -A ""masscan"" http://yourdomain.com`

Should respond with 403 Forbidden

`curl -I http://yourdomain.com -e http://100dollars-seo.com`

`curl -I http://yourdomain.com -e http://zx6.ru`

Should respond with 403 Forbidden

The Apache Ultimate Bot Blocker is now WORKING and PROTECTING your web sites !!!

************************************************


**UPDATING THE APACHE BAD BOT BLOCKER** is now easy thanks to the automatic includes for whitelisting your own domain names.

Updating to the latest version is now as simple as:

`sudo wget https://raw.githubusercontent.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/master/Apache_2.4/custom.d/globalblacklist.conf -O /etc/apache2/custom.d/globalblacklist.conf`

`sudo apache2ctl configtest`

`sudo service apache2 reload` 

And you will be up to date with all your whitelisted domains included automatically for you now. 

************************************************
# AUTO UPDATING WITH CRON:

See the latest auto updater bash script for Apache 2.2 and 2.4 contributed by Luke Taylor @lutaylor at:

https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/blob/master/update-apacheblocker.sh

Relax now and sleep better at night knowing your site is telling all those baddies FORBIDDEN !!!


************************************************
# WHY BLOCK BAD BOTS ?


Definition of Bad Bots


##### Bad bots are:

-    Bad Referrers 
-    Bad User-Agent Strings
-    Spam Referrers
-    Spam Bots and Bad Bots
-    Nuisance or Unwanted Bots
-    Sites Linked to Lucrative Malware, Adware and Ransomware Clickjacking Campaigns
-    Vulnerability scanners
-    Gambling and Porn Web Sites
-    E-mail harvesters
-    Content scrapers
-    Link Ranking Bots
-    Aggressive bots that scrape content
-    Image Hotlinking Sites and Image Thieves
-    Bots or Servers linked to viruses or malware
-    Government surveillance bots
-    Botnet Attack Networks (Mirai)
-    Known Wordpress Theme Detectors (Updated Regularly)
-    SEO companies that your competitors use to try improve their SEO
-    Link Research and Backlink Testing Tools
-    Stopping Google Analytics Ghost Spam
-    Browser Adware and Malware (Yontoo etc)

************************************************
### To contribute your own bad referers 

please add them into the
https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/blob/master/Pull%20Requests%20Here%20Please/badreferers.list
file and then send a Pull Request (PR). 
All additions will be checked for accuracy before being merged.

************************************************
### Issues:

Log any issues regarding incorrect listings on the issues system and they will be investigated
and removed if necessary.

************************************************
### No root access to your Apache server and Unable to run this blocker?

Version 2.2017.03 introduced .htaccess versions of the spam referrer for those unable to run the full Apache Bad Bot Blocker look inside the https://github.com/mitchellkrogza/apache-ultimate-bad-bot-blocker/tree/master/_htaccess_versions folder in this repo for instructions.

************************************************
## Help Support This Project 

[](https://ko-fi.com/mitchellkrog)

Bots attempt to make themselves look like other software or web sites by disguising their user agent. 
Their user agent names may look harmless, perfectly legitimate even. 

For example, ""^Java"" but according to Project Honeypot, it's actually one of the most dangerous BUT a lot of
legitimate bots out there have ""Java"" in their user agent string so the approach taken by many to block is 
not only ignorant but also blocking out very legitimate crawlers including some of Google's and Bing's.

# Welcome to the Ultimate Bad Bot and Referer Blocker for Apache Web Server 2.4.x

************************************************
### THE METHOD IN MY MADNESS

This bot blocker list is designed to be an Apache include file and uses the apache
BrowserMatchNoCase directive. This way the .conf file can be loaded 
once into memory by Apache and be available to all web sites that you operate.
You simply need to use an Include statement (example below)

I personally find the BrowserMatchNoCase Directive to be more accurate than using 
SetEnvIfNoCase User-Agent because BrowserMatchNoCase is not case sensitive and
from my tests is more accurate that SetEnvIfNoCase.

My method also results in a cleaner file to maintain that requires no complex regex
other than the Name of the Bot. BrowserMatchNoCase will do the rest. You can use Regex
if you like but it's NOT needed and I proved it by testing with the Chrome extension
User-Agent Switcher for Chrome. 

- The user agent ""Aboundex"" is found without using ""^Aboundex"" ... much simpler for anyone 
to maintain than other lists using Regex.

- Likewise it is unnecessary to have ""Download\ Demon"" instead you now just have
""Download Demon"". 

- Additionally if we have a rule, like below ""Image Stripper"" and a bot
decides to change its User-Agent string to ""NOT Image Stripper I Promise"" he is picked
up regardless and blocked immediately. 

I only capitalise bot names in my list for ease of reading and maintenance, remember its 
not case-sensitive so will catch any combination like ""Bot"" ""bOt"" and ""bOT"".

So for those of you who SUCK with Regex my Apache Bad Bot Blocker is your saviour !!!

************************************************
### IT'S CENTRALISED:

The beauty of this is that it is one central file used by all your web sites.
This means there is only place to make amendments ie. adding new bots that you
discover in your log files. Any changes are applied immediately to all sites after
a simple ""sudo service apache2 reload"". 

************************************************
### IT IS TINY AND LIGHTWEIGHT

The file is tiny in size. At the time of this writing and the first public commit of this
the file size including all the commenting ""which Apache ignores"" is a mere 212 kb in size.
It is so lightweight that Apache does not even know it's there. It already contains thousands
of entries.

************************************************
### NO COMPLICATED REWRITE RULES:

This also does not use ReWrite Rules and Conditions which also put overhead onto
Apache, this sends a simple 403 Forbidden Response and DONE !!!

************************************************
### APACHE WILL LOVE YOU FOR IT !!!!

This approach also makes this very lightweight on Apache versus the usual .htaccess
approach that many choose. The .htaccess approach is a little clumsy because every site
has to have its own one and every time someone requests your web site the .htaccess gets
hit and has to be checked, this is unnecessary overhead for Apache and not to mention
a pain when it comes to maintenance and updating your ruleset.

.htaccess just sucks full stop. One reason after 9 years I have moved everything to
Nginx but will continue to keep this file updated as it is solid and it works.

************************************************
## FEATURES OF THE APACHE ULTIMATE BAD BOT BLOCKER:

- Extensive Lists of Bad and Known Bad Bots and Scrapers (updated almost daily)
- Blocking of Spam Referrer Domains and Web Sites
- Blocking of SEO data collection companies like Semalt.com, Builtwith.com, WooRank.com and many others (updated regularly)
- Blocking of clickjacking Sites linked to Adware, Malware and Ransomware
- Blocking of Porn and Gambling Web Sites who use Lucrative Ways to Earn Money through Serving Ads by hopping off your domain names and web sites.
- Blocking of Bad Domains and IP's that you cannot even see in your Nginx Logs. Thanks to the Content Security Policy (CSP) on all my SSL sites I can see things trying to pull resources off my sites before they even get to Nginx and get blocked by the CSP.
- Anti DDOS Filter and Rate Limiting of Agressive Bots
- Alphabetically ordered for easier maintenance (Pull Requests Welcomed)
- Commented sections of certain important bots to be sure of before blocking
- Includes the IP range of Cyveillance who are known to ignore robots.txt rules
  and snoop around all over the Internet.
- Whitelisting of Google, Bing and Cloudflare IP Ranges
- Whitelisting of your own IP Ranges that you want to avoid blocking by mistake.
- Ability to add other IP ranges and IP blocks that you want to block out.
- If its out there and it's bad it's already in here and BLOCKED !!

************************************************
### UNDERSTANDS PUNYCODE / IDN DOMAIN NAMES
A lot of lists out there put funny domains into their hosts file. Your hosts file and DNS will not understand this. This list uses converted domains which are in the correct DNS format to be understood by any operating system. **Avoid using lists** that do not put the correctly formatted domain structure into their lists.

For instance
The domain:

`lifehacĸer.com` (note the K)

actually translates to:

`xn--lifehacer-1rb.com`

You can do an nslookup on any operating system and it will resolve correctly.

`nslookup xn--lifehacer-1rb.com`

```xn--lifehacer-1rb.com
	origin = dns1.yandex.net
	mail addr = iskalko.yandex.ru
	serial = 2016120703
	refresh = 14400
	retry = 900
	expire = 1209600
	minimum = 14400
xn--lifehacer-1rb.com	mail exchanger = 10 mx.yandex.net.
Name:	xn--lifehacer-1rb.com
Address: 78.110.60.230
xn--lifehacer-1rb.com	nameserver = dns2.yandex.net.
xn--lifehacer-1rb.com	text = ""v=spf1 redirect=_spf.yandex.net""
xn--lifehacer-1rb.com	nameserver = dns1.yandex.net.
```

- Look at: https://www.charset.org/punycode for more info on this.

************************************************
## WARNING:

 Please understand why you are using the Apache Bad Bot Blocker before you even use this.
 Please do not simply copy and paste without understanding what this is doing.
 Do not become a copy and paste Linux ""Guru"", learn things properly before you use them
 and always test everything you do one step at a time.

************************************************
## MONITOR WHAT YOU ARE DOING:

 MAKE SURE to monitor your web site logs after implementing this. I suggest you first
 load this into one site and monitor it for any possible false positives before putting
 this into production on all your web sites.
 
 Also monitor your logs daily for new bad referers and user-agent strings that you
 want to block. Your best source of adding to this list is your own server logs, not mine.

************************************************
## HOW TO MONITOR YOUR APACHE LOGS DAILY (The Easy Way):

With great thanks and appreciation to https://blog.nexcess.net/2011/01/21/one-liners-for-apache-log-files/

To monitor your top referer's for a web site's log file's on a daily basis use the following simple
cron jobs which will email you a list of top referer's / user agents every morning from a particular web site's log
files. This is an example for just one cron job for one site. Set up multiple one's for each one you
want to monitor. Here is a cron that runs at 8am every morning and emails me the stripped down log of
referers. When I say stripped down, the domain of the site and other referers like Google and Bing are
stripped from the results. Of course you must change the log file name, domain name and your email address in
the examples below. The second cron for collecting User agents does not do any stripping out of any referers but you
can add that functionality if you like copying the awk statement !~ from the first example.

##### Cron for Monitoring Daily Referers on Apache

`00 08 * * * tail -10000 /var/log/apache/mydomain-access.log | awk '$11 !~ /google|bing|yahoo|yandex|mywebsite.com/' | awk '{print $11}' | tr -d '""' | sort | uniq -c | sort -rn | head -1000 | mail -s ""Top 1000 Referers for Mydomain.com"" me@mydomain.com`

##### Cron for Monitoring Daily User Agents on Apache

`00 08 * * * tail -50000 /var/log/apache/mydomain-access.log | awk '{print $12}' | tr -d '""' | sort | uniq -c | sort -rn | head -1000 | mail -s ""Top 1000 Agents for Mydomain.com"" me@mydomain.com`


************************************************
# EASY CONFIGURATION INSTRUCTIONS FOR STOPPING GOOGLE ANALYTICS ""GHOST"" SPAM

Simply using the Apache blocker does not stop G","'apache', 'apache2', 'bad-words', 'badwords', 'bot-blocker', 'bots', 'gambling-filter', 'porn-filter', 'referer-blocker', 'rogue', 'scanners', 'security', 'spam-blocker', 'spam-filtering', 'spam-prevention', 'spam-protection', 'spam-referers', 'spam-referrer-blocker', 'spambot-security', 'vulnerability-scanners'",2016-07-21T17:07:48Z,2024-06-18T10:11:43Z,16,12,768,63,"('mitchellkrogza', 2854), ('Mitchell Krog', 21), ('davcpas1234', 17), ('lutaylor', 12), ('GervaisdeM', 9), ('ddarbyson', 6), ('spithash', 6), ('Mitchell Krog', 5), ('thezoggy', 3), ('UB1', 3), ('aszilagyi', 1), ('cypx', 1), ('ScrewLooseDan', 1), ('angel333', 1), ('Ronny', 1), ('blackcoat77', 1)",6,5,
hongyangAndroid/baseAdapter,"Android 万能的Adapter for ListView,RecyclerView,GridView等，支持多种Item类型的情况。","# base-adapter
Android 万能的Adapter for ListView,RecyclerView,GridView等，支持多种Item类型的情况。


## 引入

### ForRecyclerView

```
compile 'com.zhy:base-rvadapter:3.0.3'
```

### ForListView

```
compile 'com.zhy:base-adapter:3.0.3'
```


## 使用

##（1）简单的数据绑定(ListView与其使用方式一致)

首先看我们最常用的单种Item的书写方式：

```
mRecyclerView.setAdapter(new CommonAdapter(this, R.layout.item_list, mDatas)
{
    @Override
    public void convert(ViewHolder holder, String s)
    {
        holder.setText(R.id.id_item_list_title, s);
    }
});
```
是不是相当方便，在convert方法中完成数据、事件绑定即可。


只需要简单的将Adapter继承CommonAdapter，复写convert方法即可。省去了自己编写ViewHolder等大量的重复的代码。

* 可以通过holder.getView(id)拿到任何控件。
* ViewHolder中封装了大量的常用的方法，比如holder.setText(id,text)，holder.setOnClickListener(id,listener)等，可以支持使用。

效果图：



##（2）多种ItemViewType(ListView与其使用方式一致)

对于多中itemviewtype的处理参考：https://github.com/sockeqwe/AdapterDelegates ，具有极高的扩展性。


```
MultiItemTypeAdapter adapter = new MultiItemTypeAdapter(this,mDatas);
adapter.addItemViewDelegate(new MsgSendItemDelagate());
adapter.addItemViewDelegate(new MsgComingItemDelagate());
```

每种Item类型对应一个ItemViewDelegete，例如：

```
public class MsgComingItemDelagate implements ItemViewDelegate
{

    @Override
    public int getItemViewLayoutId()
    {
        return R.layout.main_chat_from_msg;
    }

    @Override
    public boolean isForViewType(ChatMessage item, int position)
    {
        return item.isComMeg();
    }

    @Override
    public void convert(ViewHolder holder, ChatMessage chatMessage, int position)
    {
        holder.setText(R.id.chat_from_content, chatMessage.getContent());
        holder.setText(R.id.chat_from_name, chatMessage.getName());
        holder.setImageResource(R.id.chat_from_icon, chatMessage.getIcon());
    }
}
```

贴个效果图：






##(3) 添加HeaderView、FooterView

```
mHeaderAndFooterWrapper = new HeaderAndFooterWrapper(mAdapter);

TextView t1 = new TextView(this);
t1.setText(""Header 1"");
TextView t2 = new TextView(this);
t2.setText(""Header 2"");
mHeaderAndFooterWrapper.addHeaderView(t1);
mHeaderAndFooterWrapper.addHeaderView(t2);

mRecyclerView.setAdapter(mHeaderAndFooterWrapper);
mHeaderAndFooterWrapper.notifyDataSetChanged();
```

类似装饰者模式，直接将原本的adapter传入，初始化一个HeaderAndFooterWrapper对象，然后调用相关API添加。

##(4) 添加LoadMore

```
mLoadMoreWrapper = new LoadMoreWrapper(mOriginAdapter);
mLoadMoreWrapper.setLoadMoreView(R.layout.default_loading);
mLoadMoreWrapper.setOnLoadMoreListener(new LoadMoreWrapper.OnLoadMoreListener()
{
    @Override
    public void onLoadMoreRequested()
    {
    }
});

mRecyclerView.setAdapter(mLoadMoreWrapper);

```
直接将原本的adapter传入，初始化一个LoadMoreWrapper对象，然后调用相关API即可。

##(5)添加EmptyView

```
mEmptyWrapper = new EmptyWrapper(mAdapter);
mEmptyWrapper.setEmptyView(R.layout.empty_view);

mRecyclerView.setAdapter(mEmptyWrapper );

```

直接将原本的adapter传入，初始化一个EmptyWrapper对象，然后调用相关API即可。


支持链式添加多种功能，示例代码：

```
mAdapter = new EmptyViewWrapper(
	new LoadMoreWrapper(
	new HeaderAndFooterWrapper(mOriginAdapter)));
```


## 一些回调

### onViewHolderCreated

```
mListView.setAdapter(new CommonAdapter(this, R.layout.item_list, mDatas)
{
    @Override
    public void convert(ViewHolder holder, String o, int pos)
    {
        holder.setText(R.id.id_item_list_title, o);
    }

    @Override
    public void onViewHolderCreated(ViewHolder holder, View itemView)
    {
        super.onViewHolderCreated(holder, itemView);
       //AutoUtil.autoSize(itemView)
    }
});
```


## 感谢


* [https://github.com/JoanZapata/base-adapter-helper](https://github.com/JoanZapata/base-adapter-helper)

    应该是我所知道的最早的对listview,gridview封装的adapter了，参考了其中很多，比如在`ViewHolder.setXXX`类的辅助方法。

* [https://github.com/sockeqwe/AdapterDelegates](https://github.com/sockeqwe/AdapterDelegates)
	
	参考该库多种ItemType绑定数据方式

* [https://github.com/ragunathjawahar/simple-section-adapter](https://github.com/ragunathjawahar/simple-section-adapter)

    `SectionAdapter`对其进行了参考。


",,2015-08-03T02:55:51Z,2021-10-13T10:21:40Z,3,1,4722,160,"('hongyangAndroid', 10), ('Zhang', 1), ('hongyangAndroid', 1)",2,1,
imperial-crystalline-recursion/abtestgen,An Android library for generating simple A/B tests,"# An A/B Testing Library for Android...
...that makes writing simple tests simpler by using annotations.

[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-abtestgen-green.svg?style=true)](https://android-arsenal.com/details/1/4301)  [![](https://jitpack.io/v/imperial-crystalline-recursion/abtestgen.svg)](https://jitpack.io/#imperial-crystalline-recursion/abtestgen)


## How it works 
Currently you can use two different annotations: `@TextTest` and `@ResourceTest`. `@TextTest` is for plugging Strings into a generated test; `@ResourceTest` is for plugging resource IDs. Example usage may be as follows:

```java
@TextTest(testName=""firstTest"", method=""setText"", values={""hello"", ""howdy""})
TextView helloTextView;
```
    
which will automatically generate a class which you can run by calling `ABTester.with(activity).run(""firstTest"");`. Or, if you're running the test from outside of an Activity, `ABTester.with()` can also take a second Object parameter where you've put in the annotations. 

You can also cover multiple fields in the same test, as follows: 
```java
@TextTest(testName=""firstTest"", method=""setText"", values={""hello"", ""howdy""})
TextView helloTextView;

@ResourceTest(testName=""firstTest"", method=""setText"", values={R.string.yo, R.string.sup})
TextView otherTextView;

@TextTest(testName=""firstTest"", method=""setText"", values={""world"", ""globe""})
TextView thirdTextView;
```
And that will generate a class which will create two tests that will cover those three TextViews. 


There's also a `CustomTest` class which allows you to define more complex tests that may not be possible to generate with the annotation processor.

By default, tests will be weighted to have an equal chance to be selected. However, by extending the `TestPicker` class you can weight the tests however you like. 

## To obtain...
You'll want to include
```groovy
maven { url ""https://jitpack.io"" }
```
    
in either your `allprojects.repositories`  or your module's `repositories` section. Whatever you like!

You will also need the APT plugin, so you will want to put this into your root build.gradle's `buildscript.dependencies`:
```groovy
classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
```
and apply this plugin to the modules you're doing your tests in:
```groovy
apply plugin: 'com.neenbedankt.android-apt'
```
Then, you'll want to bang these bad boys into your `build.gradle`s' dependencies:
```groovy
apt 'com.github.imperial-crystalline-recursion.abtestgen:ab-compiler:0.4.1'
compile 'com.github.imperial-crystalline-recursion.abtestgen:ab-annotations:0.4.1'
compile 'com.github.imperial-crystalline-recursion.abtestgen:ab-lib:0.4.1'
```
","'ab-test', 'ab-testing', 'ab-tests', 'android', 'annotation-processing', 'annotation-processor', 'annotations', 'annotations-processor', 'java', 'multivariate', 'multivariate-testing', 'processor', 'testing'",2016-05-22T10:23:14Z,2017-12-21T12:00:07Z,2,2,48,2,"('imperial-crystalline-recursion', 39), ('mcpotter', 24)",0,0,
InsightDataScience/h1b_statistics,,"# Table of Contents
1. [Problem](README.md#problem)
2. [Input Dataset](README.md#input-dataset)
3. [Instructions](README.md#instructions)
4. [Output](README.md#output)
5. [Tips on getting an interview](README.md#tips-on-getting-an-interview)
6. [Instructions to submit your solution](README.md#instructions-to-submit-your-solution)
7. [FAQ](README.md#faq)
8. [Questions?](README.md#questions?)

# Problem

A newspaper editor was researching immigration data trends on H1B(H-1B, H-1B1, E-3) visa application processing over the past years, trying to identify the occupations and states with the most number of approved H1B visas. She has found statistics available from the US Department of Labor and its [Office of Foreign Labor Certification Performance Data](https://www.foreignlaborcert.doleta.gov/performancedata.cfm#dis). But while there are ready-made reports for [2018](https://www.foreignlaborcert.doleta.gov/pdf/PerformanceData/2018/H-1B_Selected_Statistics_FY2018_Q4.pdf) and [2017](https://www.foreignlaborcert.doleta.gov/pdf/PerformanceData/2017/H-1B_Selected_Statistics_FY2017.pdf), the site doesn’t have them for past years. 

As a data engineer, you are asked to create a mechanism to analyze past years data, specificially calculate two metrics: **Top 10 Occupations** and **Top 10 States** for **certified** visa applications.

Your code should be modular and reusable for future. If the newspaper gets data for the year 2019 (with the assumption that the necessary data to calculate the metrics are available) and puts it in the `input` directory, running the `run.sh` script should produce the results in the `output` folder without needing to change the code.

# Input Dataset

Raw data could be found [here](https://www.foreignlaborcert.doleta.gov/performancedata.cfm) under the __Disclosure Data__ tab (i.e., files listed in the __Disclosure File__ column with "".xlsx"" extension). 
For your convenience we converted the Excel files into a semicolon separated ("";"") format and placed them into this Google drive [folder](https://drive.google.com/drive/folders/1Nti6ClUfibsXSQw5PUIWfVGSIrpuwyxf?usp=sharing). However, do not feel limited to test your code on only the files we've provided on the Google drive 

**Note:** Each year of data can have different columns. Check **File Structure** docs before development. 

# Instructions

We designed this coding challenge to assess your coding skills and your understanding of computer science fundamentals. They are both prerequisites of becoming a data engineer. To solve this challenge you might pick a programing language of your choice (preferably Python, Scala, Java, or C/C++ because they are commonly used and will help us better assess you), but you are only allowed to use the default data structures that come with that programming language (you may use I/O and other standard libraries). For example, you can code in Python, **but you should not use Pandas or other external libraries**. 

***The objective here is to see if you can implement the solution using basic data structure building blocks and software engineering best practices (by writing clean, modular, and well-tested code).*** 

# Output 

Your program must create 2 output files:
* `top_10_occupations.txt`: Top 10 occupations for certified visa applications
* `top_10_states.txt`: Top 10 states for certified visa applications

Each line holds one record and each field on each line is separated by a semicolon (;).

Each line of the `top_10_occupations.txt` file should contain these fields in this order:
1. __`TOP_OCCUPATIONS`__: Use the occupation name associated with an application's Standard Occupational Classification (SOC) code
2. __`NUMBER_CERTIFIED_APPLICATIONS`__: Number of applications that have been certified for that occupation. An application is considered certified if it has a case status of `Certified`
3. __`PERCENTAGE`__: % of applications that have been certified for that occupation compared to total number of certified applications regardless of occupation. 

The records in the file must be sorted by __`NUMBER_CERTIFIED_APPLICATIONS`__, and in case of a tie, alphabetically by __`TOP_OCCUPATIONS`__.

Each line of the `top_10_states.txt` file should contain these fields in this order:
1. __`TOP_STATES`__: State where the work will take place
2. __`NUMBER_CERTIFIED_APPLICATIONS`__: Number of applications that have been certified for work in that state. An application is considered certified if it has a case status of `Certified`
3. __`PERCENTAGE`__: % of applications that have been certified in that state compared to total number of certified applications regardless of state.

The records in this file must be sorted by __`NUMBER_CERTIFIED_APPLICATIONS`__ field, and in case of a tie, alphabetically by __`TOP_STATES`__. 

Depending on the input (e.g., see the example below), there may be fewer than 10 lines in each file. There, however, should not be more than 10 lines in each file. In case of ties, only list the top 10 based on the sorting instructions given above.

Percentages also should be rounded off to 1 decimal place. For instance, 1.05% should be rounded to 1.1% and 1.04% should be rounded to 1.0%. Also, 1% should be represented by 1.0%

## Example
If you are given the input file, `./input/h1b_input.csv` with the following data:
```
;CASE_NUMBER;CASE_STATUS;CASE_SUBMITTED;DECISION_DATE;VISA_CLASS;EMPLOYMENT_START_DATE;EMPLOYMENT_END_DATE;EMPLOYER_NAME;EMPLOYER_BUSINESS_DBA;EMPLOYER_ADDRESS;EMPLOYER_CITY;EMPLOYER_STATE;EMPLOYER_POSTAL_CODE;EMPLOYER_COUNTRY;EMPLOYER_PROVINCE;EMPLOYER_PHONE;EMPLOYER_PHONE_EXT;AGENT_REPRESENTING_EMPLOYER;AGENT_ATTORNEY_NAME;AGENT_ATTORNEY_CITY;AGENT_ATTORNEY_STATE;JOB_TITLE;SOC_CODE;SOC_NAME;NAICS_CODE;TOTAL_WORKERS;NEW_EMPLOYMENT;CONTINUED_EMPLOYMENT;CHANGE_PREVIOUS_EMPLOYMENT;NEW_CONCURRENT_EMP;CHANGE_EMPLOYER;AMENDED_PETITION;FULL_TIME_POSITION;PREVAILING_WAGE;PW_UNIT_OF_PAY;PW_WAGE_LEVEL;PW_SOURCE;PW_SOURCE_YEAR;PW_SOURCE_OTHER;WAGE_RATE_OF_PAY_FROM;WAGE_RATE_OF_PAY_TO;WAGE_UNIT_OF_PAY;H1B_DEPENDENT;WILLFUL_VIOLATOR;SUPPORT_H1B;LABOR_CON_AGREE;PUBLIC_DISCLOSURE_LOCATION;WORKSITE_CITY;WORKSITE_COUNTY;WORKSITE_STATE;WORKSITE_POSTAL_CODE;ORIGINAL_CERT_DATE
0;I-200-18026-338377;CERTIFIED;2018-01-29;2018-02-02;H-1B;2018-07-28;2021-07-27;MICROSOFT CORPORATION;;1 MICROSOFT WAY;REDMOND;WA;98052;UNITED STATES OF AMERICA;;4258828080;;N;"","";;;SOFTWARE ENGINEER;15-1132;""SOFTWARE DEVELOPERS, APPLICATIONS"";51121.0;1;0;1;0;0;0;0;Y;112549.0;Year;Level II;OES;2017.0;OFLC ONLINE DATA CENTER;143915.0;0.0;Year;N;N;;;;REDMOND;KING;WA;98052;
1;I-200-17296-353451;CERTIFIED;2017-10-23;2017-10-27;H-1B;2017-11-06;2020-11-06;ERNST & YOUNG U.S. LLP;;200 PLAZA DRIVE;SECAUCUS;NJ;07094;UNITED STATES OF AMERICA;;2018723003;;Y;""BRADSHAW, MELANIE"";TORONTO;;TAX SENIOR;13-2011;ACCOUNTANTS AND AUDITORS;541211.0;1;0;0;0;0;1;0;Y;79976.0;Year;Level II;OES;2017.0;OFLC ONLINE DATA CENTER;100000.0;0.0;Year;N;N;;;;SANTA CLARA;SAN JOSE;CA;95110;
2;I-200-18242-524477;CERTIFIED;2018-08-30;2018-09-06;H-1B;2018-09-10;2021-09-09;LOGIXHUB LLC;;320 DECKER DRIVE;IRVING;TX;75062;UNITED STATES OF AMERICA;;2145419305;;N;"","";;;DATABASE ADMINISTRATOR;15-1141;DATABASE ADMINISTRATORS;541511.0;1;0;0;0;0;1;0;Y;77792.0;Year;Level II;OES;2018.0;OFLC ONLINE DATA CENTER;78240.0;0.0;Year;N;N;;;;IRVING;DALLAS;TX;75062;
3;I-200-18070-575236;CERTIFIED;;2018-03-30;H-1B;2018-09-10;2021-09-09;""HEXAWARE TECHNOLOGIES, INC."";;101 WOOD AVENUE SOUTH;ISELIN;NJ;08830;UNITED STATES OF AMERICA;;6094096950;;Y;""DUTOT, CHRISTOPHER"";TROY;MI;SOFTWARE ENGINEER;15-1132;""SOFTWARE DEVELOPERS, APPLICATIONS"";541511.0;5;5;0;0;0;0;0;Y;84406.0;Year;Level II;OES;2017.0;OFLC ONLINE DATA CENTER;84406.0;85000.0;Year;Y;N;Y;;;NEW CASTLE;NEW CASTLE;DE;19720;
4;I-200-18243-850522;CERTIFIED;2018-08-31;2018-09-07;H-1B;2018-09-07;2021-09-06;""ECLOUD LABS,INC."";;120 S WOOD AVENUE;ISELIN;NJ;08830;UNITED STATES OF AMERICA;;7327501323;;Y;""ALLEN, THOMAS"";EDISON;NJ;MICROSOFT DYNAMICS CRM APPLICATION DEVELOPER;15-1132;""SOFTWARE DEVELOPERS, APPLICATIONS"";541511.0;1;0;0;0;0;0;1;Y;87714.0;Year;Level III;OES;2018.0;OFLC ONLINE DATA CENTER;95000.0;0.0;Year;Y;N;Y;Y;;BIRMINGHAM;SHELBY;AL;35244;
5;I-200-18142-939501;CERTIFIED;2018-05-22;2018-05-29;H-1B;2018-05-29;2021-05-28;OBERON IT;;1404 W WALNUT HILL LN;IRVING;TX;75038;UNITED STATES OF AMERICA;;8666609190;;Y;""GARRITSON, JAMES"";RICHARDSON;TX;SENIOR SYSTEM ARCHITECT;15-1132;""SOFTWARE DEVELOPERS, APPLICATIONS"";541511.0;1;0;0;0;0;0;1;Y;71864.0;Year;Level II;Other;2017.0;OFLC ONLINE DATA CENTER;74000.0;0.0;Year;Y;N;Y;;;SUNRISE;BROWARD;FL;33323;
6;I-200-18121-552858;CERTIFIED;2018-05-01;2018-05-07;H-1B;2018-05-02;2018-10-26;ICONSOFT INC.;;101 CAMBRIDGE STREET SUITE 360;BURLINGTON;MA;01803;UNITED STATES OF AMERICA;;8882054614;1;N;"","";;;SENIOR ORACLE ADF DEVELOPER;15-1132;""SOFTWARE DEVELOPERS, APPLICATIONS"";541511.0;1;0;1;0;0;0;0;Y;92331.0;Year;Level III;Other;2017.0;OFLC ONLINE DATA CENTER;114000.0;0.0;Year;Y;N;Y;;;JACKSONVILLE;DUVAL COUNTY;FL;32202;
7;I-200-18215-849606;CERTIFIED;2018-08-03;2018-08-09;H-1B;2018-08-11;2021-08-11;COGNIZANT TECHNOLOGY SOLUTIONS US CORP;;211 QUALITY CIRCLE;COLLEGE STATION;TX;77845;UNITED STATES OF AMERICA;;2019661249;;N;"","";;;SENIOR SYSTEMS ANALYST JC60;15-1121;COMPUTER SYSTEMS ANALYST;541512.0;1;0;1;0;0;0;0;Y;80579.0;Year;Level II;OES;2018.0;OFLC ONLINE DATA CENTER;80579.0;0.0;Year;Y;N;Y;;;OWINGS MILLS;BALTIMORE;MD;21117;
8;I-201-17339-472823;CERTIFIED;2017-12-08;2017-12-14;H-1B1 Chile;2017-12-08;2019-06-07;ISHI SYSTEMS INC;;185 HUDSON STREET;JERSEY CITY;NJ;07311;UNITED STATES OF AMERICA;;2013326900;;N;"","";;;ASSOCIATE PRODUCT MANAGER(15-1199.09);15-1199;""COMPUTER OCCUPATIONS, ALL OTHER"";541511.0;1;0;1;0;0;0;0;Y;88317.0;Year;Level III;OES;2017.0;OFLC ONLINE DATA CENTER;90000.0;0.0;Year;;;;;;JERSEY CITY;HUDSON;NJ;07311;
9;I-200-18233-239931;CERTIFIED;2018-08-21;2018-08-27;H-1B;2018-09-05;2021-09-04;""WB SOLUTIONS, LLC"";;7320 E FLETCHER AVE;TAMPA;FL;33637;UNITED STATES OF AMERICA;;8133300099;;Y;""KIDAMBI, VAMAN"";TRUMBULL;CT;SENIOR JAVA DEVELOPER;15-1132;""SOFTWARE DEVELOPERS, APPLICATIONS"";541511.0;1;0;0;0;0;1;0;Y;104790.0;Year;Level III;OES;2018.0;OFLC ONLINE DATA CENTER;105000.0;0.0;Year;Y;N;Y;Y;;ALPHARETTA;FULTON;GA;30005;
```

then your output files would be:

`./output/top_10_occupations.txt`:
```
TOP_OCCUPATIONS;NUMBER_CERTIFIED_APPLICATIONS;PERCENTAGE
SOFTWARE DEVELOPERS, APPLICATIONS;6;60.0%
ACCOUNTANTS AND AUDITORS;1;10.0%
COMPUTER OCCUPATIONS, ALL OTHER;1;10.0% 
COMPUTER SYSTEMS ANALYST;1;10.0%
DATABASE ADMINISTRATORS;1;10.0%
```
`./output/top_10_states.txt`:
```
TOP_STATES;NUMBER_CERTIFIED_APPLICATIONS;PERCENTAGE
FL;2;20.0%
AL;1;10.0%
CA;1;10.0%
DE;1;10.0%
GA;1;10.0%
MD;1;10.0%
NJ;1;10.0%
TX;1;10.0%
WA;1;10.0%
``` 

# Tips on getting an interview

## What we are looking at
As a data engineer, it’s important that you write clean, well-tested, well-documented code that scales for a large amount of data. For this reason, it’s important to ensure that your solution works well for a large number of records.
Your solution should safisfy the following requirements:
* Repo follows the required repo directory structure
* `run.sh` script works as is in our environment and correct results are generated. If your code needs to be compilied before being executed, you must modify this script to include both compiling and executing your code
* The code is well-commented
* `README.md` contains Problem, Approach and Run instructions sections

You may write your solution in any mainstream programming language, such as C, C++, C#, Go, Java, Python, Ruby, or Scala. 
Once your solution satisfies all requirements listed above, submit a link of your Github or Bitbucket repo with your source code.


## Repo directory structure

The directory structure for your repo should look like this:
```
      ├── README.md 
      ├── run.sh
      ├── src
      │   └──h1b_counting.py
      ├── input
      │   └──h1b_input.csv
      ├── output
      |   └── top_10_occupations.txt
      |   └── top_10_states.txt
      ├── insight_testsuite
          └── run_tests.sh
          └── tests
              └── test_1
              |   ├── input
              |   │   └── h1b_input.csv
              |   |__ output
              |   |   └── top_10_occupations.txt
              |   |   └── top_10_states.txt
              ├── your-own-test_1
                  ├── input
                  │   └── h1b_input.csv
                  |── output
                  |   |   └── top_10_occupations.txt
                  |   |   └── top_10_states.txt
```
**Don't fork this repo** and don't use this `README` instead of your own. The content of `src` does not need to be a single file called `h1b-counting.py`, which is only an example. Instead, you should include your own source files and give them expressive names.

## Testing your directory structure and output format

To make sure that your code has the correct directory structure and the format of the output files are correct, we have included a test script called `run_tests.sh` in the `insight_testsuite` folder.

The tests files are stored in `.csv` format under the `insight_testsuite/tests` folder. Each test should have a separate folder with an `input` folder and `h1b_input.csv` file and an `output` folder with the two requested output files.

You can run the test with the following command from within the `insight_testsuite` folder:

    insight_testsuite~$ ./run_tests.sh 

On a failed test, the output of `run_tests.sh` should look like:

    [FAIL]: test_1
    [Thu Mar 30 16:28:01 PDT 2017] 0 of 1 tests passed

On success:

    [PASS]: test_1
    [Thu Mar 30 16:25:57 PDT 2017] 1 of 1 tests passed


One test has been provided as a way to check your formatting and simulate how we will be running tests when you submit your solution. We urge you to write your own additional tests. `test_1` is only intended to alert you if the directory structure or the output for this test is incorrect.

Your submission must pass at least the provided test in order to pass the coding challenge.

For a limited time we also are making available a website that will allow you to simulate the environment in which we will test your code. It has been primarily tested on Python code but could be used for Java and C++ repos. Keep in mind that if you need to compile your code (e.g., javac, make), that compilation needs to happen in the run.sh file of your code repository. For Python programmers, you are able to use Python2 or Python3 but if you use the later, specify python3 in your run.sh script.

# Instructions to submit your solution
* To submit your entry please use the link you received in your coding challenge invite email
* You will only be able to submit through the link one time 
* Do NOT attach a file - we will not admit solutions which are attached files 
* Use the submission box to enter the link to your GitHub or Bitbucket repo ONLY
* Link to the specific repo for this project, not your general profile
* Put any comments in the `README.md` inside your project repo, not in the submission box
* We are unable to accept coding challenges that are emailed to us 

# FAQ

**Which Github link should I submit?**
You should submit the URL for the top-level root of your repository. For example, this repo would be submitted by copying the URL https://github.com/InsightDataScience/h1b_statistics into the appropriate field on the application. Do NOT try to submit your coding challenge using a pull request, which would make your source code publicly available.

**Do I need a private Github repo?**
No, you may use a public repo, there is no need to purchase a private repo. You may also submit a link to a Bitbucket repo if you prefer.

**May I use R, Matlab, or other analytics programming languages to solve the challenge?**
No. It's important that your implementation scales to handle large amounts of data. While many of our Fellows have experience with R and Matlab, applicants have found that these languages are unable to process data in a scalable fashion, so you must consider another language.

**May I use distributed technologies like Hadoop or Spark?**
No. Your code will be tested on a single machine, so using these technologies will negatively impact your solution. We're not testing your knowledge on distributed computing, but rather on computer science fundamentals and software engineering best practices.

**What sort of system should I use to run my program on (Windows, Linux, Mac)?**
You may write your solution on any system, but your source code should be portable and work on all systems. Additionally, your run.sh must be able to run on either Unix or Linux, as that's the system that will be used for testing. Linux machines are the industry standard for most data engineering teams, so it is helpful to be familiar with this. If you're currently using Windows, we recommend installing a virtual Unix environment, such as VirtualBox or VMWare, and using that to develop your code. Otherwise, you also could use tools, such as Cygwin or Docker, or a free online IDE such as Cloud9.

**How fast should my program run?**
While there are no strict performance guidelines to this coding challenge, we will consider the amount of time your program takes when grading the challenge. Therefore, you should design and develop your program in the optimal way (i.e. think about time and space complexity instead of trying to hit a specific run time value).

**Will you email me if my code doesn't run?**
Unfortunately, we receive hundreds of submissions in a very short time and are unable to email individuals if their code doesn't compile or run. We will do everything we can to properly test your code, but this requires good documentation. More so, we have provided a test suite so you can confirm that your directory structure and format are correct.

**Can I use a database engine?**
While a database engine can be used to complete this coding challenge, we are looking to see how well you program so please do not submit code that relies on a database engine for this challenge. 

**What should the format of the output be?**
In order to be tested correctly, you must use the format described above. You can ensure that you have the correct format by using the testing suite we've included.

**Should I check if the files in the input directory are text files or non-text files(binary)?**
No, for simplicity you may assume that all of the files in the input directory are text files, with the format as described above.

**Can I use an IDE like Eclipse or IntelliJ to write my program?**
Yes, you can use whatever tools you want - as long as your run.sh script correctly runs the relevant target files and creates the expected files in the output directory.

**What should be in the input directory?**
You can put any text file you want in the directory since our testing suite will replace it. Indeed, using your own input files would be quite useful for testing. The file size limit on Github is 100 MB so you won't be able to include the larger sample input files in your input directory.

**How long will it take for me to hear back from you about my submission?**
We receive hundreds of submissions and try to evaluate them all in a timely manner. We try to get back to all applicants within two or three weeks of submission, but if you have a specific deadline that requires expedited review, please email us at cc@insightdataengineering.com.

# Questions?
Re-read this README first and if you can't find an answer to your question, Email us at cc@insightdataengineering.com
",,2018-10-18T20:46:07Z,2018-10-23T21:19:11Z,2,2,13,15,"('Samariya57', 2), ('emhoa', 1)",1,1,
startupengine/startupengine,"An open-source platform for startups with integrated CMS, analytics, and A/B testing.","
Startup Engine
A beautiful & open-source platform for launching startups.
    




# Key Features

- [x] Publish & sell software/content subscriptions.
- [x] Completely plug-and-play. Coding is optional.
- [x] Supports any workflow, architecture, or framework.
- [x] JSON API allows you integrate with external sites/apps.
- [x] Completely open-source.
- [x] 1-Click Install.

# Documentation
Documentation is available at [https://www.startupengine.io/docs](https://www.startupengine.io/docs).

# Deployment

Click the button below to deploy a new instance of Startup Engine to Heroku instantly.

[![Deploy](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/luckyrabbitllc/StartupEngine)

# Contact Us

### E-mail
Have suggestions, concerns, or feature requests? [Send us an e-mail](mailto:inbox-w8agf2hymzpvnw4zcudlfwpa@inbound.productboard.com).

### Code Support
Found a bug? [Submit an issue.](https://github.com/startupengine/startupengine/issues)


# License

Startup Engine is open-sourced software licensed under the [MIT license](http://opensource.org/licenses/MIT).","'api', 'blog', 'cms', 'docker', 'documentation', 'faq', 'help', 'heroku', 'landing-page', 'laravel', 'laravel-apps', 'php', 'startup', 'startup-engineering'",2017-07-03T07:09:10Z,2022-12-09T08:18:23Z,5,3,136,19,"('huntercarter', 927), ('MythicAI', 380), ('startupengine', 30), ('laravel-shift', 8), ('huntercarter', 1)",1,0,
marcuswestin/WebViewJavascriptBridge,An iOS/OSX bridge for sending messages between Obj-C and JavaScript in UIWebViews/WebViews,"WebViewJavascriptBridge
=======================

[![Circle CI](https://img.shields.io/circleci/project/github/marcuswestin/WebViewJavascriptBridge.svg)](https://circleci.com/gh/marcuswestin/WebViewJavascriptBridge)

An iOS/OSX bridge for sending messages between Obj-C and JavaScript in WKWebViews, UIWebViews & WebViews.

Migration Guide
---------------

When upgrading from v5.0.x to 6.0.x you will have to update the `setupWebViewJavascriptBridge` javascript snippet. See https://github.com/marcuswestin/WebViewJavascriptBridge#usage part 4).

Who uses WebViewJavascriptBridge?
---------------------------------
WebViewJavascriptBridge is used by a range of companies and projects. This is a small and incomplete sample list:

- [Facebook Messenger](https://www.facebook.com/mobile/messenger)
- [Facebook Paper](https://facebook.com/paper)
- [Yardsale](http://www.getyardsale.com/)
- [EverTrue](http://www.evertrue.com/)
- [Game Insight](http://www.game-insight.com/)
- [Sush.io](http://www.sush.io)
- [Imbed](http://imbed.github.io/)
- [CareZone](https://carezone.com)
- [Hemlig](http://www.hemlig.co)
- [Altralogica](http://www.altralogica.it)
- [鼎盛中华](https://itunes.apple.com/us/app/ding-sheng-zhong-hua/id537273940?mt=8)
- [FRIL](https://fril.jp)
- [留白·WHITE](http://liubaiapp.com)
- [BrowZine](http://thirdiron.com/browzine/)
- ... & many more!

Installation (iOS & OSX)
------------------------

### Installation with CocoaPods
Add this to your [podfile](https://guides.cocoapods.org/using/getting-started.html) and run `pod install` to install:

```ruby
pod 'WebViewJavascriptBridge', '~> 6.0'
```

### Manual installation

Drag the `WebViewJavascriptBridge` folder into your project.

In the dialog that appears, uncheck ""Copy items into destination group's folder"" and select ""Create groups for any folders"".

Examples
--------

See the `Example Apps/` folder. Open either the iOS or OSX project and hit run to see it in action.

To use a WebViewJavascriptBridge in your own project:

Usage
-----

1) Import the header file and declare an ivar property:

```objc
#import ""WebViewJavascriptBridge.h""
```

...

```objc
@property WebViewJavascriptBridge* bridge;
```

2) Instantiate WebViewJavascriptBridge with a WKWebView, UIWebView (iOS) or WebView (OSX):

```objc
self.bridge = [WebViewJavascriptBridge bridgeForWebView:webView];
```

3) Register a handler in ObjC, and call a JS handler:

```objc
[self.bridge registerHandler:@""ObjC Echo"" handler:^(id data, WVJBResponseCallback responseCallback) {
	NSLog(@""ObjC Echo called with: %@"", data);
	responseCallback(data);
}];
[self.bridge callHandler:@""JS Echo"" data:nil responseCallback:^(id responseData) {
	NSLog(@""ObjC received response: %@"", responseData);
}];
```

4) Copy and paste `setupWebViewJavascriptBridge` into your JS:
	
```javascript
function setupWebViewJavascriptBridge(callback) {
	if (window.WebViewJavascriptBridge) { return callback(WebViewJavascriptBridge); }
	if (window.WVJBCallbacks) { return window.WVJBCallbacks.push(callback); }
	window.WVJBCallbacks = [callback];
	var WVJBIframe = document.createElement('iframe');
	WVJBIframe.style.display = 'none';
	WVJBIframe.src = 'https://__bridge_loaded__';
	document.documentElement.appendChild(WVJBIframe);
	setTimeout(function() { document.documentElement.removeChild(WVJBIframe) }, 0)
}
```

5) Finally, call `setupWebViewJavascriptBridge` and then use the bridge to register handlers and call ObjC handlers:

```javascript
setupWebViewJavascriptBridge(function(bridge) {
	
	/* Initialize your app here */

	bridge.registerHandler('JS Echo', function(data, responseCallback) {
		console.log(""JS Echo called with:"", data)
		responseCallback(data)
	})
	bridge.callHandler('ObjC Echo', {'key':'value'}, function responseCallback(responseData) {
		console.log(""JS received response:"", responseData)
	})
})
```

Automatic reference counting (ARC)
----------------------------------
This library relies on ARC, so if you use ARC in you project, all works fine.
But if your project have no ARC support, be sure to do next steps:

1) In your Xcode project open project settings -> 'Build Phases'

2) Expand 'Compile Sources' header and find all *.m files which are belongs to this library. Make attention on the 'Compiler Flags' in front of each source file in this list

3) For each file add '-fobjc-arc' flag

Now all WVJB files will be compiled with ARC support.

Contributors & Forks
--------------------
Contributors: https://github.com/marcuswestin/WebViewJavascriptBridge/graphs/contributors

Forks: https://github.com/marcuswestin/WebViewJavascriptBridge/network/members

API Reference
-------------

### ObjC API

##### `[WebViewJavascriptBridge bridgeForWebView:(WKWebVIew/UIWebView/WebView*)webview`

Create a javascript bridge for the given web view.

Example:

```objc	
[WebViewJavascriptBridge bridgeForWebView:webView];
```

##### `[bridge registerHandler:(NSString*)handlerName handler:(WVJBHandler)handler]`

Register a handler called `handlerName`. The javascript can then call this handler with `WebViewJavascriptBridge.callHandler(""handlerName"")`.

Example:

```objc
[self.bridge registerHandler:@""getScreenHeight"" handler:^(id data, WVJBResponseCallback responseCallback) {
	responseCallback([NSNumber numberWithInt:[UIScreen mainScreen].bounds.size.height]);
}];
[self.bridge registerHandler:@""log"" handler:^(id data, WVJBResponseCallback responseCallback) {
	NSLog(@""Log: %@"", data);
}];

```

##### `[bridge callHandler:(NSString*)handlerName data:(id)data]`
##### `[bridge callHandler:(NSString*)handlerName data:(id)data responseCallback:(WVJBResponseCallback)callback]`

Call the javascript handler called `handlerName`. If a `responseCallback` block is given the javascript handler can respond.

Example:

```objc
[self.bridge callHandler:@""showAlert"" data:@""Hi from ObjC to JS!""];
[self.bridge callHandler:@""getCurrentPageUrl"" data:nil responseCallback:^(id responseData) {
	NSLog(@""Current UIWebView page URL is: %@"", responseData);
}];
```

#### `[bridge setWebViewDelegate:(id)webViewDelegate]`

Optionally, set a `WKNavigationDelegate/UIWebViewDelegate` if you need to respond to the [web view's lifecycle events](https://developer.apple.com/reference/uikit/uiwebviewdelegate).

##### `[bridge disableJavscriptAlertBoxSafetyTimeout]`

UNSAFE. Speed up bridge message passing by disabling the setTimeout safety check. It is only safe to disable this safety check if you do not call any of the javascript popup box functions (alert, confirm, and prompt). If you call any of these functions from the bridged javascript code, the app will hang.

Example:

	[self.bridge disableJavscriptAlertBoxSafetyTimeout];



### Javascript API

##### `bridge.registerHandler(""handlerName"", function(responseData) { ... })`

Register a handler called `handlerName`. The ObjC can then call this handler with `[bridge callHandler:""handlerName"" data:@""Foo""]` and `[bridge callHandler:""handlerName"" data:@""Foo"" responseCallback:^(id responseData) { ... }]`

Example:

```javascript
bridge.registerHandler(""showAlert"", function(data) { alert(data) })
bridge.registerHandler(""getCurrentPageUrl"", function(data, responseCallback) {
	responseCallback(document.location.toString())
})
```


##### `bridge.callHandler(""handlerName"", data)`
##### `bridge.callHandler(""handlerName"", data, function responseCallback(responseData) { ... })`

Call an ObjC handler called `handlerName`. If a `responseCallback` function is given the ObjC handler can respond.

Example:

```javascript
bridge.callHandler(""Log"", ""Foo"")
bridge.callHandler(""getScreenHeight"", null, function(response) {
	alert('Screen height:' + response)
})
```


##### `bridge.disableJavscriptAlertBoxSafetyTimeout()`

Calling `bridge.disableJavscriptAlertBoxSafetyTimeout()` has the same effect as calling `[bridge disableJavscriptAlertBoxSafetyTimeout];` in ObjC.

Example:

```javascript
bridge.disableJavscriptAlertBoxSafetyTimeout()
```
",,2011-08-28T02:25:27Z,2023-10-21T05:47:56Z,62,55,14263,510,"('marcuswestin', 316), ('lokimeyburg', 23), ('Peyton Randolph', 14), ('oakho', 9), ('mbishop-fiksu', 8), ('psineur', 7), ('stringbean', 4), ('milesmatthias', 4), ('javache', 4), ('sergiocampama', 4), ('vontio', 4), ('chrisvariety', 3), ('yiplee', 3), ('jberkman', 3), ('eJamesLin', 2), ('ddovod', 2), ('yas375', 2), ('tanis2000', 2), ('XiaoJianXiaoXu', 2), ('ruslanskorb', 2), ('nolanw', 2), ('Kamil Burczyk', 2), ('lbj96347', 2), ('bastibense', 2), ('pushpak', 1), ('Sebastian Waisbrot', 1), ('Terrillo Walls', 1), ('yukimunet', 1), ('coderyi', 1), ('cutmail', 1), ('wenluma', 1), ('gotomanners', 1), ('imrazor', 1), ('kingiol', 1), ('raxcat', 1), ('shuizhongyueming', 1), ('smoothdvd', 1), ('wrlqwe', 1), ('xzeror', 1), ('yirenjun', 1), ('liuwin7', 1), ('Anomymouse', 1), ('远尘', 1), ('originme', 1), ('euanchan', 1), ('hhgz9527', 1), ('gurre', 1), ('Hugo Schouman', 1), ('jspencer', 1), ('joao', 1), ('lgo', 1), ('kanflo', 1), ('kelp404', 1), ('koenpunt', 1), ('lefex', 1), ('LisztGitHub', 1), ('yasoob', 1), ('agnosticdev', 1), ('maxcampolo', 1), ('mortonfox', 1), ('netputer', 1), ('pj4533', 1)",38,33,
greenrobot/EventBus,"Event bus for Android and Java that simplifies communication between Activities, Fragments, Threads, Services, etc. Less code, better quality.","EventBus
========
[EventBus](https://greenrobot.org/eventbus/) is a publish/subscribe event bus for Android and Java.


[![Build Status](https://github.com/greenrobot/EventBus/actions/workflows/gradle.yml/badge.svg)](https://github.com/greenrobot/EventBus/actions)
[![Follow greenrobot on Twitter](https://img.shields.io/twitter/follow/greenrobot_de.svg?style=flat-square&logo=twitter)](https://twitter.com/greenrobot_de)

EventBus...

 * simplifies the communication between components
    * decouples event senders and receivers
    * performs well with Activities, Fragments, and background threads
    * avoids complex and error-prone dependencies and life cycle issues
 * makes your code simpler
 * is fast
 * is tiny (~60k jar)
 * is proven in practice by apps with 1,000,000,000+ installs
 * has advanced features like delivery threads, subscriber priorities, etc.

EventBus in 3 steps
-------------------
1. Define events:

    ```java  
    public static class MessageEvent { /* Additional fields if needed */ }
    ```

2. Prepare subscribers:
    Declare and annotate your subscribing method, optionally specify a [thread mode](https://greenrobot.org/eventbus/documentation/delivery-threads-threadmode/):  

    ```java
    @Subscribe(threadMode = ThreadMode.MAIN)  
    public void onMessageEvent(MessageEvent event) {
        // Do something
    }
    ```
    Register and unregister your subscriber. For example on Android, activities and fragments should usually register according to their life cycle:

   ```java
    @Override
    public void onStart() {
        super.onStart();
        EventBus.getDefault().register(this);
    }
 
    @Override
    public void onStop() {
        super.onStop();
        EventBus.getDefault().unregister(this);
    }
    ```

3. Post events:

   ```java
    EventBus.getDefault().post(new MessageEvent());
    ```

Read the full [getting started guide](https://greenrobot.org/eventbus/documentation/how-to-get-started/).

There are also some [examples](https://github.com/greenrobot-team/greenrobot-examples).

**Note:** we highly recommend the [EventBus annotation processor with its subscriber index](https://greenrobot.org/eventbus/documentation/subscriber-index/).
This will avoid some reflection related problems seen in the wild.  

Add EventBus to your project
----------------------------


Available on Maven Central.

Android projects:
```groovy
implementation(""org.greenrobot:eventbus:3.3.1"")
```

Java projects:
```groovy
implementation(""org.greenrobot:eventbus-java:3.3.1"")
```
```xml

    org.greenrobot
    eventbus-java
    3.3.1

```

R8, ProGuard
------------

If your project uses R8 or ProGuard this library ships [with embedded rules](/eventbus-android/consumer-rules.pro).

Homepage, Documentation, Links
------------------------------
For more details please check the [EventBus website](https://greenrobot.org/eventbus). Here are some direct links you may find useful:

[Features](https://greenrobot.org/eventbus/features/)

[Documentation](https://greenrobot.org/eventbus/documentation/)

[Changelog](https://github.com/greenrobot/EventBus/releases)

[FAQ](https://greenrobot.org/eventbus/documentation/faq/)

License
-------
Copyright (C) 2012-2021 Markus Junginger, greenrobot (https://greenrobot.org)

EventBus binaries and source code can be used according to the [Apache License, Version 2.0](LICENSE).

Other projects by greenrobot
============================
[__ObjectBox__](https://objectbox.io/) ([GitHub](https://github.com/objectbox/objectbox-java)) is a new superfast object-oriented database.

[__Essentials__](https://github.com/greenrobot/essentials) is a set of utility classes and hash functions for Android & Java projects.
",,2012-07-16T16:55:40Z,2024-02-21T18:18:34Z,26,20,24616,1043,"('greenrobot', 395), ('greenrobot-team', 90), ('PerfectCarl', 24), ('friederbluemle', 6), ('mormih', 5), ('andob', 4), ('Rick Brock', 3), ('Alex Nixon', 2), ('Evan Baker', 2), ('nbeloglazov', 2), ('william-ferguson-au', 2), ('talklittle', 1), ('Leandros', 1), ('heinrichreimer', 1), ('jnagels', 1), ('JoanZapata', 1), ('justintuchek', 1), ('Marc Reichelt', 1), ('mikosik', 1), ('Pingan Yi', 1), ('f2prateek', 1), ('stefanhoth', 1), ('chthai64', 1), ('guoci', 1), ('matthias', 1), ('zsoltvilagos', 1)",15,12,
boto/boto3,AWS SDK for Python,"===============================
Boto3 - The AWS SDK for Python
===============================

|Version| |Python| |License|

Boto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for
Python, which allows Python developers to write software that makes use
of services like Amazon S3 and Amazon EC2. You can find the latest, most
up to date, documentation at our `doc site`_, including a list of
services that are supported.

Boto3 is maintained and published by `Amazon Web Services`_.

Boto (pronounced boh-toh) was named after the fresh water dolphin native to the Amazon river. The name was chosen by the author of the original Boto library, Mitch Garnaat, as a reference to the company.

Notices
-------

On 2023-12-13, support for Python 3.7 ended for Boto3. This follows the
Python Software Foundation `end of support `__
for the runtime which occurred on 2023-06-27.
For more information, see this `blog post `__.

.. _boto: https://docs.pythonboto.org/
.. _`doc site`: https://boto3.amazonaws.com/v1/documentation/api/latest/index.html
.. _`Amazon Web Services`: https://aws.amazon.com/what-is-aws/
.. |Python| image:: https://img.shields.io/pypi/pyversions/boto3.svg?style=flat
    :target: https://pypi.python.org/pypi/boto3/
    :alt: Python Versions
.. |Version| image:: http://img.shields.io/pypi/v/boto3.svg?style=flat
    :target: https://pypi.python.org/pypi/boto3/
    :alt: Package Version
.. |License| image:: http://img.shields.io/pypi/l/boto3.svg?style=flat
    :target: https://github.com/boto/boto3/blob/develop/LICENSE
    :alt: License

Getting Started
---------------
Assuming that you have a supported version of Python installed, you can first
set up your environment with:

.. code-block:: sh

    $ python -m venv .venv
    ...
    $ . .venv/bin/activate

Then, you can install boto3 from PyPI with:

.. code-block:: sh

    $ python -m pip install boto3

or install from source with:

.. code-block:: sh

    $ git clone https://github.com/boto/boto3.git
    $ cd boto3
    $ python -m pip install -r requirements.txt
    $ python -m pip install -e .


Using Boto3
~~~~~~~~~~~~~~
After installing boto3

Next, set up credentials (in e.g. ``~/.aws/credentials``):

.. code-block:: ini

    [default]
    aws_access_key_id = YOUR_KEY
    aws_secret_access_key = YOUR_SECRET

Then, set up a default region (in e.g. ``~/.aws/config``):

.. code-block:: ini

   [default]
   region=us-east-1

Other credential configuration methods can be found `here `__

Then, from a Python interpreter:

.. code-block:: python

    >>> import boto3
    >>> s3 = boto3.resource('s3')
    >>> for bucket in s3.buckets.all():
            print(bucket.name)

Running Tests
~~~~~~~~~~~~~
You can run tests in all supported Python versions using ``tox``. By default,
it will run all of the unit and functional tests, but you can also specify your own
``pytest`` options. Note that this requires that you have all supported
versions of Python installed, otherwise you must pass ``-e`` or run the
``pytest`` command directly:

.. code-block:: sh

    $ tox
    $ tox -- unit/test_session.py
    $ tox -e py26,py33 -- integration/

You can also run individual tests with your default Python version:

.. code-block:: sh

    $ pytest tests/unit


Getting Help
------------

We use GitHub issues for tracking bugs and feature requests and have limited
bandwidth to address them. Please use these community resources for getting
help:

* Ask a question on `Stack Overflow `__ and tag it with `boto3 `__
* Open a support ticket with `AWS Support `__
* If it turns out that you may have found a bug, please `open an issue `__


Contributing
------------

We value feedback and contributions from our community. Whether it's a bug report, new feature, correction, or additional documentation, we welcome your issues and pull requests. Please read through this `CONTRIBUTING `__ document before submitting any issues or pull requests to ensure we have all the necessary information to effectively respond to your contribution.


Maintenance and Support for SDK Major Versions
----------------------------------------------

Boto3 was made generally available on 06/22/2015 and is currently in the full support phase of the availability life cycle.

For information about maintenance and support for SDK major versions and their underlying dependencies, see the following in the AWS SDKs and Tools Shared Configuration and Credentials Reference Guide:

* `AWS SDKs and Tools Maintenance Policy `__
* `AWS SDKs and Tools Version Support Matrix `__


More Resources
--------------

* `NOTICE `__
* `Changelog `__
* `License `__
","'aws', 'aws-sdk', 'cloud', 'cloud-management', 'python'",2014-10-03T21:38:03Z,2024-06-17T21:56:21Z,155,132,8792,239,"('aws-sdk-python-automation', 4020), ('awstools', 580), ('kyleknap', 306), ('danielgtaylor', 266), ('jamesls', 200), ('nateprewitt', 124), ('JordonPhillips', 115), ('joguSD', 34), ('AWS', 34), ('rayluo', 23), ('shepazon', 17), ('SCalwas', 15), ('mtdowling', 14), ('sweta', 14), ('jonathan343', 14), ('kdaily', 13), ('tim-finnigan', 12), ('stealthycoin', 11), ('jschwarzwalder', 10), ('thomas-barton', 10), ('shigemk2', 8), ('dependabotbot', 8), ('dstufft', 7), ('aBurmeseDev', 7), ('dlm6693', 5), ('jimhorng', 4), ('jdufresne', 4), ('swetashre', 4), ('jonemo', 4), ('sir-sigurd', 3), ('Paul Cornell', 3), ('Laren-AWS', 3), ('jonathanwcrane', 3), ('hyandell', 3), ('mrburrito', 3), ('pkulev', 2), ('mattsb42-aws', 2), ('DenverJ', 2), ('bstrand', 2), ('kellertk', 2), ('timgates42', 2), ('stobrien89', 2), ('ScriptSmith', 2), ('SamRemis', 2), ('sanyer', 2), ('adamatan', 2), ('alanyee', 2), ('BastianZim', 2), ('chadwhitacre', 2), ('bisdavid', 2), ('felixonmars', 2), ('jvirtanen', 2), ('kmosher', 2), ('mbarrien', 2), ('rochacon', 2), ('sgillies', 1), ('sblauman', 1), ('siddhantgoel', 1), ('simonw', 1), ('SomayaB', 1), ('Steven Richards', 1), ('Teun Zengerink', 1), ('timoteostewart', 1), ('orf', 1), ('tschoonj', 1), ('rybaktomasz', 1), ('tyldavis', 1), ('vselvarajijay', 1), ('SamRemis', 1), ('Sam-Martin', 1), ('ryansonshine', 1), ('RyanFitzSimmonsAK', 1), ('rvandegrift', 1), ('Robert Devereux', 1), ('robbiet480', 1), ('ronin13', 1), ('pspoffice', 1), ('ClimbsRocks', 1), ('prayagverma', 1), ('patrickpierson', 1), ('tobhai', 1), ('stealthycoin', 1), ('skillup', 1), ('pgajdos', 1), ('nishigori', 1), ('nago3', 1), ('moalexmonk', 1), ('jonathancrane', 1), ('jcarlyl', 1), ('ittus', 1), ('illtellyoulater', 1), ('hrchu', 1), ('hpchrist', 1), ('densikat', 1), ('cfernhout', 1), ('axptwig', 1), ('zdutta', 1), ('yoshiken', 1), ('yoichi', 1), ('bungoume', 1), ('EndermanAPM', 1), ('wleftwich', 1), ('Vladislav Kaverin', 1), ('vlad-ro', 1), ('savelevvo', 1), ('frasern', 1), ('fwessels', 1), ('emmanuel-ferdman', 1), ('Eder Ruiz Maria', 1), ('Doug-AWS', 1), ('davidschreiber', 1), ('David Huntsperger', 1), ('Irishsmurf', 1), ('daniloakamine', 1), ('frewsxcv', 1), ('cxong', 1), ('charleswhchan', 1), ('Cariad Eccleston', 1), ('bpandola', 1), ('bschoenfeld', 1), ('beckandros', 1), ('Arhell', 1), ('gruebel', 1), ('kislyuk', 1), ('amosshapira', 1), ('alencar', 1), ('Posnet', 1), ('Adam Chainz', 1), ('Adam Bloomston', 1), ('achinthagunasekara', 1), ('glerb', 1), ('garnaat', 1), ('D3X', 1), ('mcepl', 1), ('mdavis-xyz', 1), ('marios-zindilis', 1), ('msabramo', 1), ('mijdavis2', 1), ('ltm', 1), ('Kevin P. Fleming', 1), ('glasnt', 1), ('createchange', 1), ('homeworkprod', 1), ('jrobertson69', 1), ('James E. Blair', 1), ('eltociear', 1), ('imadill', 1), ('hugovk', 1), ('hramezani', 1), ('hansrajdas', 1), ('gliptak', 1), ('Grey Baker', 1), ('gnott', 1), ('quiver', 1), ('garrettheel', 1)",100,81,
sitewards/B2BProfessional,The Sitewards B2B Extension extends your webshop with some essential functions to realize a B2B Store,"Sitewards B2B Professional
==========================

[![Build Status](https://travis-ci.org/sitewards/B2BProfessional.png?branch=master)](https://travis-ci.org/sitewards/B2BProfessional)
[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/sitewards/B2BProfessional/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/sitewards/B2BProfessional/?branch=master)

The Sitewards B2B Extension extends your webshop with some essential functions to realize a business-to-business store. Product prices and add-to-cart functions are only available for registered customer accounts that were approved by the site administrator. All other product details remain visible for non-registered users.

Features
------------------
* Customers can register, but have to be approved to see product prices and to order products
* Prices of all product types and options are only visible for approved customers
* Consequently, the Shopping Cart and Checkout are only available for approved customers
* Multi-store: The extension can be activated for each store/view separately
* Create both, B2B and B2C stores in one Magento installation
* Optional info message (e.g. ""Please login to see price"") in place of price
* Multilanguage support (German and English installed, extendible to other languages)
* Activation for specific product categories
* Activation for specific customer groups
* Require login to access store
* Set page to redirect user to when they are not logged in

Contact
------------------
magento@sitewards.com

License: OSL 3.0

Contribution is appreciated, even new issues!",,2013-01-16T13:03:01Z,2017-09-11T06:39:06Z,23,10,69,47,"('dmanners', 161), ('airbone42', 36), ('osvarychevskyi', 34), ('jhoelzl', 26), ('mryvlin', 26), ('homecoded', 15), ('andrewhowdencom', 11), ('Tobias Zander', 9), ('Michael Ryvlin', 8), ('coderbyheart', 4), ('root', 3), ('Marc Päpper', 2), ('Svetlin Kalendzhiev', 2), ('Tobias', 2), ('Daniel Kämmerling', 1), ('David Manners', 1), ('franx', 1), ('joshk', 1), ('Oleksii Svarychevskyi', 1), ('Sitewards', 1), ('homecoded', 1), ('skalenji', 1), ('unknown', 1)",9,3,
pimoroni/bme680-python,"Python library for the BME680 gas, temperature, humidity and pressure sensor.","# BME680

[![Build Status](https://img.shields.io/github/actions/workflow/status/pimoroni/bme680-python/test.yml?branch=main)](https://github.com/pimoroni/bme680-python/actions/workflows/test.yml)
[![Coverage Status](https://coveralls.io/repos/github/pimoroni/bme680-python/badge.svg?branch=main)](https://coveralls.io/github/pimoroni/bme680-python?branch=main)
[![PyPi Package](https://img.shields.io/pypi/v/bme680.svg)](https://pypi.python.org/pypi/bme680)
[![Python Versions](https://img.shields.io/pypi/pyversions/bme680.svg)](https://pypi.python.org/pypi/bme680)

https://shop.pimoroni.com/products/bme680

The state-of-the-art BME680 breakout lets you measure temperature, pressure, humidity, and indoor air quality.

## Installing

### Full install (recommended):

We've created an easy installation script that will install all pre-requisites and get your BME680
up and running with minimal efforts. To run it, fire up Terminal which you'll find in Menu -> Accessories -> Terminal
on your Raspberry Pi desktop, as illustrated below:

![Finding the terminal](http://get.pimoroni.com/resources/github-repo-terminal.png)

In the new terminal window type the command exactly as it appears below (check for typos) and follow the on-screen instructions:

```bash
git clone https://github.com/pimoroni/bme680-python
cd bme680-python
./install.sh
```

**Note** Libraries will be installed in the ""pimoroni"" virtual environment, you will need to activate it to run examples:

```
source ~/.virtualenvs/pimoroni/bin/activate
```

### Development:

If you want to contribute, or like living on the edge of your seat by having the latest code, you can install the development version like so:

```bash
git clone https://github.com/pimoroni/bme680-python
cd bme680-python
./install.sh --unstable
```

In all cases you will have to enable the i2c bus:

```
sudo raspi-config nonint do_i2c 0
```

## Documentation & Support

* Guides and tutorials - https://learn.pimoroni.com/bme680-breakout
* Get help - http://forums.pimoroni.com/c/support

","'air-quality', 'pypi-package', 'python', 'python-library', 'raspberry-pi', 'sensor'",2017-10-15T10:28:37Z,2024-05-10T10:51:55Z,12,12,259,32,"('Gadgetoid', 81), ('sandyjmacdonald', 11), ('ayeks', 4), ('helgibbons', 2), ('imgrant', 2), ('NicolaiSoeborg', 2), ('davea', 2), ('gkluoe', 1), ('giampiero7', 1), ('melvinmajor', 1), ('lowflyerUK', 1), ('thirdr', 1)",5,5,
bigpipe/bigpipe,BigPipe is a radical new modular web pattern for Node.js,"# BigPipe

[![Version npm][version]](http://browsenpm.org/package/bigpipe)[![Build Status][build]](https://travis-ci.org/bigpipe/bigpipe)[![Dependencies][david]](https://david-dm.org/bigpipe/bigpipe)[![Coverage Status][cover]](https://coveralls.io/r/bigpipe/bigpipe?branch=master)

[version]: http://img.shields.io/npm/v/bigpipe.svg?style=flat-square
[build]: http://img.shields.io/travis/bigpipe/bigpipe/master.svg?style=flat-square
[david]: https://img.shields.io/david/bigpipe/bigpipe.svg?style=flat-square
[cover]: http://img.shields.io/coveralls/bigpipe/bigpipe/master.svg?style=flat-square

BigPipe is a radical new web framework for Node.JS. The general idea is to
decompose web pages into small re-usable chunks of functionality called
`Pagelets` and pipeline them through several execution stages inside web
servers and browsers. This allows progressive rendering at the front-end and
results in exceptional front-end performance.

Most web frameworks are based on a request and response pattern, a request comes
in, we process the data and output a template. But before we can output the
template we have to wait until all data has been received in order for the
template to be processed. This doesn't make any sense for Node.js applications
where everything is done asynchronously. When receiving your first batch
of data, why not send it directly to the browser so it can start downloading the
required CSS, JavaScript and render it.

BigPipe is made up over 20 modules whose current status is available at: [HEALTH.md](HEALTH.md)

## Installation

BigPipe is distributed through the node package manager (npm) and is written
against Node.js 0.10.x.

```
npm install --save bigpipe
```

## Versioning

To keep track of cross module compatibility, the imported components will be synced
on minor releases. For example, `bigpipe@0.5.0` will always be compatible with
`pagelet@0.5.0` and `pipe.js@0.5.0`.

## Support

Got stuck? Or can't wrap your head around a concept or just want some feedback,
we got a dedicated IRC channel for that on Freenode:

- **IRC Server**: `irc.freenode.net`
- **IRC Room**: `#bigpipe`

Still stuck? Create an issue. Every question you have is a bug in our
documentation and that should be corrected. So please, don't hesitate to create
issues, many of them.

## Table of Contents

**BigPipe**
- [Getting started](#getting-started)
- [BigPipe.createServer()](#bigpipecreateserver)
- [new BigPipe()](#new-bigpipe)
- [BigPipe.version](#bigpipeversion)
- [BigPipe.define()](#bigpipedefine)
- [BigPipe.before()](#bigpipebefore)
- [BigPipe.remove()](#bigpiperemove)
- [BigPipe.disable()](#bigpipedisable)
- [BigPipe.enable()](#bigpipeenable)
- [BigPipe.use()](#bigpipeuse)

### Getting started

In all of these example we assume that your file is setup as:

```js
'use strict';

var BigPipe = require('bigpipe');
```

### BigPipe.createServer()

**public**, _returns BigPipe_.

To create a BigPipe powered server can simply call the `createServer` method.
This creates an HTTP or HTTPS server based on the options provided.

```js
var bigpipe = BigPipe.createServer(8080, {
  pagelets: __dirname +'/pagelets',
  dist:  __dirname +'/dist'
});
```

The first argument in the function call is port number you want the server to
listen on. The second argument is an object with the configuration/options of the
BigPipe server. The following options are supported:

- **cache** A cache which is used for storing URL lookups. This cache instance
  should have a `.get(key)` and `.set(key, value)` method. Defaults to `false`
- **dist** The location of our folder where we can store our compiled CSS and
  JavaScript to disk. If the path or folder does not exist it will be
  automatically created. Defaults to `working dir/dist`.
- **pagelets** A directory that contains your Pagelet definitions or an array of Pagelet
  constructors. Defaults to `working dir/pagelets`. If you don't provide Pages it
  will serve a 404 page for every request.
- **parser** The message parser we should use for our real-time communication.
  See [Primus] for the available parsers. Defaults to `JSON`.
- **pathname** The root path of an URL that we can use our real-time
  communication. This path should not be used by your Pages. Defaults to
  `/pagelet`
- **transformer** The transformer or real-time framework we want to use for the
  real-time communication. We're bundling and using `ws` by default. See [Primus]
  for the supported transformers. Please note that you do need to add the
  transformer dependency to your `package.json` when you choose something other
  than `ws`.
- **redirect** When creating a HTTPS server you could automatically start an HTTP
  server which redirects all traffic to the HTTPS equiv. The value is the port
  number on which this server should be started. Defaults to `false`.

In addition to the options above, all HTTPS server options are also
supported.  When you provide a server with cert and key files or set the
port number to `443`, it assumes you want to setup up a HTTPS server instead.

```js
var bigpipe = BigPipe.createServer(443, {
  key: fs.readFileSync(__dirname +'/ssl.key', 'utf-8'),
  cert: fs.readFileSync(__dirname +'/ssl.cert', 'utf-8')
});
```

When you're creating an HTTPS server you got to option to also setup a simple
HTTP server which redirects all content to HTTPS instead. This is done by
supplying the `redirect` property in the options. The value of this property
should be the port number you want this HTTP server to listen on:

```js
var bigpipe = BigPipe.createServer(443, {
  ..

  key: fs.readFileSync(__dirname +'/ssl.key', 'utf-8'),
  cert: fs.readFileSync(__dirname +'/ssl.cert', 'utf-8'),
  redirect: 80
});
```

### new BigPipe()

**public**, _returns BigPipe_.

If you want more control over the server creation process you can manually
create a HTTP or HTTPS server and supply it to the BigPipe constructor.

```js
'use strict';

var server = require('http').createServer()
  , BigPipe = require('bigpipe');

var bigpipe = new BigPipe(server, { options });
```

If you are using this pattern to create a BigPipe server instance you need to
use the `bigpipe.listen` method to listen to the server. When this is called,
BigPipe starts compiling all assets, attach the correct listeners to the
supplied server, attach event listeners and finally listen on the server. The
first argument of this method is the port number you want to listen on, the
second argument is an optional callback function that should be called when
server starts listening for requests.

```js
bigpipe.listen(8080, function listening() {
  console.log('hurray, we are listening on port 8080');
});
```

### BigPipe.version

**public**, _returns string_.

```js
bigpipe.version;
```

The current version of the BigPipe framework that is running.

### BigPipe.define()

**public**, _returns BigPipe_.

```js
bigpipe.define(pagelets, callback);
```

Merge pagelet(s) in the collection of existing pagelets. If given a string it
will search that directory for the available Pagelet files. After all dependencies
have been compiled the supplied, the callback is called.

```js
bigpipe.define('../pagelets', function done(err) {

});

bigpipe.define([Pagelet, Pagelet, Pagelet], function done(err) {

}).define('../more/pagelets', function done(err) {

});
```

### BigPipe.before()

**public**, _returns BigPipe_.

```js
bigpipe.before(name, fn, options);
```

BigPipe has two ways of extending it's build-in functionality, we have plugins
but also middleware layers. The important difference between these is that
middleware layers allow you to modify the incoming requests **before** they
reach BigPipe.

There are 2 different kinds of middleware layers, **async** and **sync**. The
main difference is that the **sync** middleware doesn't require a callback. It's
completely optional and ideal for just introducing or modifying the properties
on a request or response object.

All middleware layers need to be named, this allows you to enable, disable or
remove the middleware layers. The supplied middleware function can either be a
pre-configured function that is ready to modify the request and responses:

```js
bigpipe.before('foo', function (req, res) {
  req.foo = 'bar';
});
```

Or an unconfigured function. We assume that a function is unconfigured if the
supplied function has less than **2** arguments. When we detect such a function
we automatically call it with the context that is set to `BigPipe` and
the supplied options object and assume that it returns a configured middleware
layer.

```js
bigpipe.before('foo', function (configure) {
  return function (req, res) {
    res.foo = configure.foo;
  };
}, { foo: 'bar' });
```

If you're building async middleware layers, you simply need to make sure that
your function accepts 3 arguments:

- **req** The incoming HTTP request.
- **res** The outgoing HTTP response.
- **next** The continuation callback function. This function follows the error
  first callback pattern.

```js
bigpipe.before('foo', function (req, res, next) {
  asyncthings(function (err, data) {
    req.foo = data;
    next(err);
  });
});
```

### BigPipe.remove()

**public**, _returns BigPipe_.

```js
bigpipe.remove(name);
```

Removes a middleware layer from the stack based on the given name.

```js
bigpipe.before('layer', function () {});
bigpipe.remove('layer');
```

### BigPipe.disable()

**public**, _returns BigPipe_.

```js
bigpipe.disable(name);
```

Temporarily disables a middleware layer. It's not removed from the stack but it's
just skipped when we iterate over the middleware layers. A disabled middleware layer
can be re-enabled.

```js
bigpipe.before('layer', function () {});
bigpipe.disable('layer');
```

### BigPipe.enable()

**public**, _returns BigPipe_.

```js
bigpipe.enable(name);
```

Re-enable a previously disabled module.

```js
bigpipe.disable('layer');
bigpipe.enable('layer');
```

### BigPipe.use()

**public**, _returns BigPipe_.

```js
bigpipe.use(name, plugin);
```

Plugins can be used to extend the functionality of BigPipe itself. You can
control the client code as well as the server side code of BigPipe using the
plugin interface.

```js
bigpipe.use('ack', {
  //
  // Only run on the server.
  //
  server: function (bigpipe, options) {
     // do stuff
  },

  //
  // Runs on the client, it's automatically bundled.
  //
  client: function (bigpipe, options) {
     // do client stuff
  },

  //
  // Optional library that needs to be bundled on the client (should be a string)
  //
  library: '',

  //
  // Optional plugin specific options, will be merged with Bigpipe.options
  //
  options: {}
});
```

## Pagelets

Pagelets are part of the bigpipe/pagelet module and more information is available at: https://github.com/bigpipe/pagelet

## Events

Everything in BigPipe is build upon the EventEmitter interface. It's either a
plain EventEmitter or a proper stream. This a summary of the events we emit:

Event                 | Usage       | Location      | Description
----------------------|-------------|---------------|-------------------------------
`log`                 | public      | server        | A new log message
`transform::pagelet`  | public      | server        | Transform a Pagelet
`listening`           | public      | server        | The server is listening
`error`               | public      | server        | The HTTP server received an error
`pagelet::configure`  | public      | server        | A new pagelet has been configured

## Debugging

The library makes use of the `diagnostics` module and has all it's internals namespaced
to `bigpipe:`. These debug messages can be trigged by starting your application
with the `DEBUG=` env variable. In order to filter out all messages except
BigPipe's message run your server with the following command:

```bash
DEBUG=bigpipe:* node 
```

The following `DEBUG` namespaces are available:

- `bigpipe:server` The part that handles the request dispatching, page / pagelet
  transformation and more.
- `bigpipe:pagelet` Pagelet generation.
- `bigpipe:compiler` Asset compilation.
- `bigpipe:primus` BigPipe Primus setup.
- `pagelet:primus` Pagelet and Primus interactions
- `pagelet` Pagelet interactions

## Testing

Tests are automatically run on [Travis CI] to ensure that everything is
functioning as intended. For local development we automatically install a
[pre-commit] hook that runs the `npm test` command every time you commit changes.
This ensures that we don't push any broken code into this project.

## Inspiration

Bigpipe is inspired by the concept behind Facebook's BigPipe. For more details
read their blog post: [Pipelining web pages for high performance][blog].


## License

BigPipe is released under MIT.

[Travis CI]: http://travisci.org
[pre-commit]: http://github.com/observing/pre-commit
[Primus]: https://github.com/primus/primus
[temper]: https://github.com/bigpipe/temper
[blog]: https://www.facebook.com/notes/facebook-engineering/bigpipe-pipelining-web-pages-for-high-performance/389414033919
",,2013-03-27T08:02:08Z,2016-11-16T20:42:51Z,14,10,1178,63,"('3rd-Eden', 549), ('Swaagie', 343), ('Martijn Swaagman', 8), ('jcrugzz', 5), ('adrian-chang', 4), ('DamonOehlman', 2), ('benjaminparnell', 1), ('jaredmdobson', 1), ('lholmquist', 1), ('mbonaci', 1), ('Prinzhorn', 1), ('seanewest', 1), ('Sequoia', 1), ('Vinit', 1)",8,6,
presidentbeef/brakeman,A static analysis security vulnerability scanner for Ruby on Rails applications,"[![Brakeman Logo](http://brakemanscanner.org/images/logo_medium.png)](http://brakemanscanner.org/)

[![Build Status](https://circleci.com/gh/presidentbeef/brakeman.svg?style=svg)](https://circleci.com/gh/presidentbeef/brakeman)
[![Test Coverage](https://api.codeclimate.com/v1/badges/1b08a5c74695cb0d11ec/test_coverage)](https://codeclimate.com/github/presidentbeef/brakeman/test_coverage)
[![Gitter](https://badges.gitter.im/presidentbeef/brakeman.svg)](https://gitter.im/presidentbeef/brakeman)

# Brakeman

Brakeman is a static analysis tool which checks Ruby on Rails applications for security vulnerabilities.

# Installation

Using RubyGems:

    gem install brakeman

Using Bundler:

```ruby
group :development do
  gem 'brakeman'
end
```

Using Docker:

    docker pull presidentbeef/brakeman

Using Docker to build from source:

    git clone https://github.com/presidentbeef/brakeman.git
    cd brakeman
    docker build . -t brakeman

# Usage

#### Running locally

From a Rails application's root directory:

    brakeman

Outside of Rails root:

    brakeman /path/to/rails/application

#### Running with Docker

From a Rails application's root directory:

    docker run -v ""$(pwd)"":/code presidentbeef/brakeman

With a little nicer color:

    docker run -v ""$(pwd)"":/code presidentbeef/brakeman --color

For an HTML report:

    docker run -v ""$(pwd)"":/code presidentbeef/brakeman -o brakeman_results.html

Outside of Rails root (note that the output file is relative to path/to/rails/application):

    docker run -v 'path/to/rails/application':/code presidentbeef/brakeman -o brakeman_results.html

# Compatibility

Brakeman should work with any version of Rails from 2.3.x to 7.x.

Brakeman can analyze code written with Ruby 2.0 syntax and newer, but requires at least Ruby 3.0.0 to run.

# Basic Options

For a full list of options, use `brakeman --help` or see the [OPTIONS.md](OPTIONS.md) file.

To specify an output file for the results:

    brakeman -o output_file

The output format is determined by the file extension or by using the `-f` option. Current options are: `text`, `html`, `tabs`, `json`, `junit`, `markdown`, `csv`, `codeclimate`, and `sonar`.

Multiple output files can be specified:

    brakeman -o output.html -o output.json

To output to both a file and to the console, with color:

    brakeman --color -o /dev/stdout -o output.json

To suppress informational warnings and just output the report:

    brakeman -q

Note all Brakeman output except reports are sent to stderr, making it simple to redirect stdout to a file and just get the report.

To see all kinds of debugging information:

    brakeman -d

Specific checks can be skipped, if desired. The name needs to be the correct case. For example, to skip looking for default routes (`DefaultRoutes`):

    brakeman -x DefaultRoutes

Multiple checks should be separated by a comma:

    brakeman -x DefaultRoutes,Redirect

To do the opposite and only run a certain set of tests:

    brakeman -t SQL,ValidationRegex

If Brakeman is running a bit slow, try

    brakeman --faster

This will disable some features, but will probably be much faster (currently it is the same as `--skip-libs --no-branching`). *WARNING*: This may cause Brakeman to miss some vulnerabilities.

By default, Brakeman will return a non-zero exit code if any security warnings are found or scanning errors are encountered. To disable this:

    brakeman --no-exit-on-warn --no-exit-on-error

To skip certain files or directories that Brakeman may have trouble parsing, use:

    brakeman --skip-files file1,/path1/,path2/

To compare results of a scan with a previous scan, use the JSON output option and then:

    brakeman --compare old_report.json

This will output JSON with two lists: one of fixed warnings and one of new warnings.

Brakeman will ignore warnings if configured to do so. By default, it looks for a configuration file in `config/brakeman.ignore`.
To create and manage this file, use:

    brakeman -I

# Warning information

See [warning\_types](docs/warning_types) for more information on the warnings reported by this tool.

# Warning context

The HTML output format provides an excerpt from the original application source where a warning was triggered. Due to the processing done while looking for vulnerabilities, the source may not resemble the reported warning and reported line numbers may be slightly off. However, the context still provides a quick look into the code which raised the warning.

# Confidence levels

Brakeman assigns a confidence level to each warning. This provides a rough estimate of how certain the tool is that a given warning is actually a problem. Naturally, these ratings should not be taken as absolute truth.

There are three levels of confidence:

 + High - Either this is a simple warning (boolean value) or user input is very likely being used in unsafe ways.
 + Medium - This generally indicates an unsafe use of a variable, but the variable may or may not be user input.
 + Weak - Typically means user input was indirectly used in a potentially unsafe manner.

To only get warnings above a given confidence level:

    brakeman -w3

The `-w` switch takes a number from 1 to 3, with 1 being low (all warnings) and 3 being high (only highest confidence warnings).

# Configuration files

Brakeman options can be stored and read from YAML files.

To simplify the process of writing a configuration file, the `-C` option will output the currently set options:

```sh
$ brakeman -C --skip-files plugins/
---
:skip_files:
- plugins/
```

Options passed in on the commandline have priority over configuration files.

The default config locations are `./config/brakeman.yml`, `~/.brakeman/config.yml`, and `/etc/brakeman/config.yml`

The `-c` option can be used to specify a configuration file to use.

# Continuous Integration

There is a [plugin available](http://brakemanscanner.org/docs/jenkins/) for Jenkins/Hudson.

For even more continuous testing, try the [Guard plugin](https://github.com/guard/guard-brakeman).

There are a couple [GitHub Actions](https://github.com/marketplace?type=actions&query=brakeman) available.

# Building

    git clone git://github.com/presidentbeef/brakeman.git
    cd brakeman
    gem build brakeman.gemspec
    gem install brakeman*.gem

# Who is Using Brakeman?

* [Code Climate](https://codeclimate.com/)
* [GitHub](https://github.com/)
* [Groupon](http://www.groupon.com/)
* [New Relic](http://newrelic.com)
* [Twitter](https://twitter.com/)

[..and more!](http://brakemanscanner.org/brakeman_users)

# Homepage/News

Website: http://brakemanscanner.org/

Twitter: https://twitter.com/brakeman

Chat: https://gitter.im/presidentbeef/brakeman

# License

Brakeman is free for non-commercial use.

See [COPYING](COPYING.md) for details.
","'brakeman', 'rails', 'ruby', 'security', 'security-audit', 'security-tools', 'security-vulnerability', 'static-analysis', 'vulnerabilities'",2010-08-27T00:00:58Z,2024-06-14T18:45:54Z,164,133,6929,165,"('presidentbeef', 2795), ('Justin Collins', 432), ('Justin Collins', 155), ('Justin Collins', 132), ('oreoshake', 60), ('ptoomey3', 24), ('escheiner', 12), ('barttenbrinke', 11), ('mastahyeti', 11), ('andyw8', 10), ('themetric', 9), ('zlx', 9), ('bethanyr', 9), ('JacobEvelyn', 9), ('Dave Worth', 9), ('David Lanner', 8), ('codeferret', 8), ('jsyeo', 7), ('noahd1', 6), ('grosser', 6), ('adamnengland', 5), ('eliblock', 5), ('btoews', 5), ('Neil Matatall', 5), ('wfleming', 5), ('fsword', 4), ('jeffrafter', 4), ('phene', 4), ('Clint Gibler', 4), ('Chad Dollins', 4), ('abedra', 4), ('ElMassimo', 3), ('klausbadelt', 3), ('ssendev', 3), ('pocke', 3), ('joernchen', 3), ('bfish510', 3), ('ABaldwinHunter', 3), ('ctaintor', 3), ('Deepak Kumar', 3), ('dblandin', 3), ('gdiggs', 3), ('Ian Ehlert', 3), ('Jeff Yip', 3), ('artplan1', 2), ('ojab', 2), ('gazayas', 2), ('Zander Mackie', 2), ('tejasbubane', 2), ('swinton', 2), ('stsc3000', 2), ('philipturnbull', 2), ('ShockwaveNN', 2), ('Owen Davies', 2), ('bradparker', 2), ('Casey West', 2), ('cjlarose', 2), ('dlanner', 2), ('c0va23', 2), ('gregose', 2), ('finnigja', 2), ('jaredbeck', 2), ('Fryguy', 2), ('joevin-slq-docto', 2), ('linosgian', 2), ('sqbell', 2), ('RubyBrewsday', 2), ('olleolleolle', 1), ('Paul Tetreau', 1), ('pedropb', 1), ('phildionne', 1), ('pdx91', 1), ('xulaus', 1), ('flyerhzm', 1), ('Rob Fletcher', 1), ('Robin Aguilar', 1), ('ron-shinall', 1), ('roryokane', 1), ('wonda-tea-coffee', 1), ('nikolalsvk', 1), ('ngan', 1), ('Neil Matatall', 1), ('Neer Sighted', 1), ('Neal Harris', 1), ('naokikimura', 1), ('Naoki Kimura', 1), ('mario-areias', 1), ('arkadyan', 1), ('mhickman', 1), ('Markus Nölle', 1), ('lucasmazza', 1), ('wangxz', 1), ('vividmuimui', 1), ('turekt', 1), ('tubaxenor', 1), ('swamp09', 1), ('spcoder', 1), ('masarakki', 1), ('kru0096', 1), ('enomotodev', 1), ('deevis', 1), ('antn', 1), ('aj0strow', 1), ('vfonic', 1), ('BuonOmo', 1), ('toddmazierski', 1), ('imtayadeway', 1), ('TheSpartan1980', 1), ('tamgrosser', 1), ('saghaulor', 1), ('soutaro', 1), ('stoivo', 1), ('seangransee', 1), ('ryankemper', 1), ('zenspider', 1), ('invernizzi', 1), ('oggy', 1), ('gavingmiller', 1), ('sobrinho', 1), ('gquadros', 1), ('evrone-opensource', 1), ('elia', 1), ('gyndav', 1), ('dwbutler', 1), ('Capncavedan', 1), ('cschramm', 1), ('cmkoller', 1), ('montdidier', 1), ('caniszczyk', 1), ('jethroo', 1), ('brynary', 1), ('Benoit Côté-Jodoin', 1), ('bf4', 1), ('aglushkov', 1), ('Skipants', 1), ('abrom', 1), ('pointlessone', 1), ('aianus', 1), ('adamkiczula', 1), ('HonoreDB', 1), ('lubert', 1), ('louim', 1), ('lsylvester', 1), ('koic', 1), ('kjg', 1), ('kbrock', 1), ('KarlGl', 1), ('Justin Collins', 1), ('Justin', 1), ('Jonathan Cheatham', 1), ('jpignata', 1), ('jrafanie', 1), ('JeremiahChurch', 1), ('jjarmoc', 1), ('JasonBarnabe', 1), ('jrusnack', 1), ('jamgregory', 1), ('jwilk', 1), ('0xjmp', 1), ('JR Richardson', 1), ('IgorPolyakov', 1), ('iwz', 1), ('hugocorbucci', 1), ('grstearns', 1)",97,81,
iEverX/ieverx.github.com_bk,Ever's personal blog,"# EverCoding.net

A static blog built with [Jekyll][] on github pages

**EverCoding.net** is my domain.

Anyone can fork this repository, and please change the information in `_config.yml`. Don't forget change the Google Analysis and Baidu Tongji code. All my articles need to be removed.

---

With this blog, I will write something about programming, programmers and some of my life  
I hope I would not give up updating this blog

**Always not be fickle in a fickle day!**  
**Having Dream, Heart Live**

[Jekyll]: http://jekyllrb.com
",'blog',2012-08-05T08:54:36Z,2017-08-21T14:12:13Z,26,21,15,6,"('iEverX', 265), ('plusjade', 79), ('studiomohawk', 10), ('e', 7), ('Andrea Schiavini', 4), ('vattay', 3), ('koomar', 2), ('jogjayr', 2), ('nolith', 1), ('alishutc', 1), ('philips', 1), ('daz', 1), ('Ever', 1), ('fleeting', 1), ('jcn', 1), ('koriroys', 1), ('LukasKnuth', 1), ('mjpieters', 1), ('Matt Swanson', 1), ('SegFaultAX', 1), ('pradeep1288', 1), ('sstarr', 1), ('sdball', 1), ('tommyblue', 1), ('xtine', 1), ('unknown', 1)",18,15,
JakeWharton/ActionBarSherlock,[DEPRECATED] Action bar implementation which uses the native action bar on Android 4.0+ and a custom implementation on pre-4.0 through a single API and theme.,"# DEPRECATED

ActionBarSherlock is deprecated. No more development will be taking place. For an up-to-date action bar backport
use [AppCompat](http://android-developers.blogspot.com/2014/10/appcompat-v21-material-design-for-pre.html).

Thanks for all your support!


ActionBarSherlock
=================

ActionBarSherlock is an standalone library designed to facilitate the use of
the action bar design pattern across all versions of Android through a single
API.

The library will automatically use the [native ActionBar][2] implementation on
Android 4.0 or later. For previous versions which do not include ActionBar, a
custom action bar implementation based on the sources of Ice Cream Sandwich
will automatically be wrapped around the layout. This allows you to easily
develop an application with an action bar for every version of Android from 2.x
and up.

**See http://actionbarsherlock.com for more information.**

![Example Image][3]

Try out the sample applications on the Android Market: [Feature Demos][4],
[Fragments][5], and [RoboGuice][6].

Continuous integration is provided by [Travis CI][7].



Developed By
============

* Jake Wharton - 



License
=======

    Copyright 2012 Jake Wharton

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.





 [1]: http://android-developers.blogspot.com/2011/03/fragments-for-all.html
 [2]: http://developer.android.com/guide/topics/ui/actionbar.html
 [3]: http://actionbarsherlock.com/static/feature.png
 [4]: https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.demos
 [5]: https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.fragments
 [6]: https://play.google.com/store/apps/details?id=com.actionbarsherlock.sample.roboguice
 [7]: https://travis-ci.org/JakeWharton/ActionBarSherlock
",,2011-03-07T17:28:54Z,2015-12-17T17:54:50Z,66,49,7107,765,"('JakeWharton', 1343), ('Chris Banes', 21), ('SimonVT', 15), ('Prototik', 7), ('Alexandr Tereshchuk', 5), ('googolmo', 5), ('zhen9ao', 5), ('gabrielittner', 4), ('scottkennedy', 3), ('Vandalko', 2), ('alexander-mironov', 2), ('zachlipton', 2), ('veeti', 2), ('UweTrottmann', 2), ('Steve Lhomme', 2), ('xperimental', 2), ('Michael Yin', 2), ('matthewmichihara', 2), ('mrenouf', 2), ('jgilfelt', 2), ('Digipom', 2), ('mernen', 2), ('ChrisSmith', 2), ('yanchenko', 2), ('pierrre', 1), ('hameno', 1), ('Mike Burton', 1), ('appamatto', 1), ('mattkranzler5', 1), ('2m', 1), ('mkonecny', 1), ('Mark Renouf', 1), ('loganj', 1), ('Aleksander Pyszny', 1), ('cuu508', 1), ('Sergey Shatunov', 1), ('Simon Vig Therkildsen', 1), ('tarkeshwar', 1), ('androidmoney', 1), ('gentlecat', 1), ('arusahni', 1), ('bbcallen', 1), ('hahnjo', 1), ('nacitar', 1), ('wlowe', 1), ('CoatedMoose', 1), ('Andrew Gaul', 1), ('avram', 1), ('ChristianKatzmann', 1), ('orrc', 1), ('Cristian', 1), ('Cristian C.', 1), ('Cristian Castiblanco', 1), ('imminent', 1), ('wuman', 1), ('scompt', 1), ('felixb', 1), ('franklinharper', 1), ('Ikram', 1), ('jacobcrigby', 1), ('Jake Wharton', 1), ('Jonathan Steele', 1), ('ksperling', 1), ('kevinsawicki', 1), ('wellsie1116', 1), ('aectann', 1)",42,30,
AlexCeleste/ybc,Compiler for the B programming language,"
 YBC: a compiler for B
=======================

**About:**

YBC (""Yasha's B Compiler"") is a compiler for the B Programming Language, as specified in [Ken Thompson's B Manual](http://cm.bell-labs.com/cm/cs/who/dmr/kbman.html) and [Brian Kernighan's tutorial](http://cm.bell-labs.com/cm/cs/who/dmr/btut.html), or as close to it as possible. The compiler produces x86 code (32-bit only) which should be ABI-compatible with C.

The compiler is made available under the MIT/X11 licence, see [LICENSE file](LICENSE).

You will not (ever) be able to use this compiler to build antique B programs from the 70s. Fundamental differences (see below) make such a task impossible - this is a toy, intended for getting the feel of B (or, if you're a maniac, writing new programs).

The compiler outputs GAS assembly and assumes the existence of GCC (or Clang on Mac OS X) to assemble it.

[download for Mac OS X](https://github.com/Leushenko/ybc/releases/tag/v0.5-mac)  
[download for Linux](https://github.com/Leushenko/ybc/releases/tag/v0.5-linux)  
[download for Windows](https://github.com/Leushenko/ybc/releases/tag/v0.5-win)  


**Building:**

YBC is written in [BlitzMax](http://www.blitzbasic.com/Home/_index_.php). Prebuilt BlitzMax binaries can be downloaded from the Blitz Research homepage after creating an account, or obtained as source from [GitHub](https://github.com/blitz-research/blitzmax). Once BlitzMax is installed, compile the main YBC file `ybc.bmx` as a console application from the IDE (or with `bmk makeapp -a -o ybc ybc.bmx`).

You will also need a GNU-compatible assembler and linker. GCC and Clang work best. Alternative assembler or linker programs can be passed to YBC with the `--as` or `--ld` command line options.


**Usage:**

    USAGE: ybc [options] 
    OPTIONS:
      -?, --help  Display this message
      -v          Show the compiler version
      -o          Set the name of the output executable (default 'a.out')
      -c          Produce separate .o files instead of an executable
      -s          Keep text assembly .s files
      -S          Only produce text assembly, do not assemble binaries
      --as        Set the command to use as the assembler
      --ld        Set the command to use as the linker
      --as-opt    Add an option to pass to the assembler (can repeat)
      --ld-opt    Add an option to pass to the linker (can repeat)
      --tree      Display the AST of the program source instead of compiling
      -w          Silence warnings
      --werr      Convert warnings to errors
      --warn      Notify but do not halt on warnings (default)

To produce a working executable/library, the produced .s or .o files must be linked with `b-lib.o`, which provides a few critical functions.


**Language:**

The language provided by the compiler falls as close as possible to the one described in the documents mentioned above (and to a lesser extent, the MH-TSS Reference). The descriptions of the language are somewhat vague and occasionally contradictory, but hopefully this is at least a vaguely faithful presentation.

1.  Major differences from the original:  
    - The original B was designed for a platform that addressed whole words. x86 doesn’t do this. Therefore on x86 it is not possible to have both `v[1]` refer to the second word element of a vector, *and* for `a[b] == b[a] == *(a + b)` to hold. As a result, the latter - despite being kept as a core principle of C - **does not apply** to this implementation; instead, the following rule holds:
    
            a[b] == *(a + b * WORD_SIZE)
    
        With no type information made available in the language at all, it simply isn’t possible to know what an argument represents and convert the pointer arithmetic accordingly (this also means that `*++p != p[1]`).
    
        (a fix would involve marshalling between B and the rest of the universe, which is too much effort)
    
    - There is also no library provided (except for the `char` function), on the grounds that you can just use libc instead.
    
    - This compiler currently doesn't support inconsistent short-circuiting behaviour of `&` and `|`; it isn't yet clear whether it should do so.

2.  Extension features:
    - The `break` and `default` keywords from the tutorial are present in the language.
    - It is possible to declare `auto` vectors with, or without, square brackets, suiting both documents.
    - Global functions do not need to be declared with `extrn` if they are only being invoked (if being used as a value they do need to be declared)
    - GCC-style computed `goto`s/labels-as-values are supported, insofar as a label can be used as a value, and `goto` accepts any expression as its argument (the manual is unclear on whether this is supposed to be allowed, so it is)
    - Single-statement functions do not need braces around the body (again, unclear, so permitted)
    - Functions automatically return the last value evaluated. Combined with the above, this means cute one-liners can be written in a more equational style:
    
            add(a, b) a + b;

3.  Pitfalls and differences from C
    - famously, compound assignment operators are the ""wrong way around"" in B:
    
            a =- 2;  /* Decrements a by 2, does not set it to -2 */
    
      So put spaces around your operators.
    - There is essentially no global scope in B. To use global variables, they must be redeclared *inside* the function body, with `extrn`. As an exception, this is not necessary for global names that appear only in the call position (so you don’t need to redeclare `printf` everywhere).
    - As above with the lack of pointer arithmetic, the complete lack of type information means that values do not ""decay"" where you might expect. Specifically, to take the address of a global function, you *must* use the `&` operator:
    
            auto f, mem; extrn malloc;
            f = &malloc;
            mem = f(256);
    
    - Don’t call function pointers stored in global *variables* (as opposed to their base global definitions) without either dereferencing them (with `*`) or storing them in a local variable (local variables can be called ""bare"", like in C - do not dereference manually).
    - Goes without saying but do not attempt to `goto` a function, to invoke a label, or to `goto` a label from outside its function. This will certainly break.
    - Do not attempt to assign to a function...
    - Names are allowed to include the dot character `.`, since it isn't in use otherwise (no floats, no structs). In fact, since it counts as a letter, you can have a function named `...` if you want.
    - The escape character in strings and char constants is `*`, not the backslash. (However, the string terminator is still `0`, for easy interop with libc. `'*e'` is unused.)

-------

Happy coding! (and please report any bugs)



Copyright (c) 2014 Alex Gilding
",,2014-08-27T01:39:21Z,2015-11-28T15:41:49Z,3,1,110,13,"('Leushenko', 16), ('Leushenko', 2), ('AlexCeleste', 1)",1,1,
gedex/preview-github-readme.md,Preview your local github's Readme.md.,"Preview Github README.md
========================

The preview mimics repo homepage in Github.

## Requirements ##
* PHP 5.3+
* curl enabled
* Internet connection to send POST request to Github API

## How to use ##
You have project that need to be published onto Github and you're not
sure about how the README.md will render in your repository's homepage.

### Using CLI ###

```
$ ./preview_github_readme README.md
```

or you can pipe it to browser:

```
$ ./preview_github_readme README.md | browser
````

In daily use, it's worth to alias this long script's name:

```
alias gmd='/path/to/cloned-repo/preview_github_readme'
```

### Using webserver ####

Assuming your local development is accessible via `http://localhost/`
and you're cloning this preview scripts into the docroot of your localhost.
Now you can preview your local README.md:

```
http://localhost/preview_github_readme.php
```

or you can use PHP built-in server:

```
php -S localhost:8080
```

and open above url with specified port.

## How it Works

`preview_github_readme.php` looks for readme file and
if the file exists, send it to Github Markdown's API, otherwise lookup README.md,
Readme.md, or readme.md file in root directory.

The markup and stylesheet for previewing are copied from Github.
",,2012-10-20T01:37:34Z,2013-05-03T18:46:38Z,1,0,11,4,"('Akeda Bagus', 4)",0,0,
envato-archive/react-ab-experiment,A/B Experiment React Component,"# A/B Experiment React Component

A/B Experiment for React.js

## Installation

```sh
$ npm install react-ab-experiment
```

## Usage

### Minimal required props

The default behaviour is that a variant will be randomly chosen, within our react component, and rendered. When a user is enrolled into a variant it will call the `onEnrolment` callback which contains your code to report the enrolment to your ab-testing analytics program (eg: Google Analytics).

The variant is not cached, so on a new page render and new variant will be chosen.

For example:
```js
import React from 'react'
import {Experiment, Variant} from 'react-ab-experiment'

class myApp extends React.Component {
  handleEnrolment (experimentId, variantName) {
    // send enrollment data to AB test reporting tool, eg: Google Analytics
    ga('set', 'expId', experimentId)
    ga('set', 'expVar', variantName)
    ga('send', 'pageview')
  }

  render () {
    return(
      
        
          Variant 0
        
        
          Variant 1
        
        
          Variant 2
        
      
    )
  }
}
```

### Include caching
If we want to cache the chosen variant for a user, we can set the `cache` props with a javascript object which has a `get` and `set` functions.
On the first load, the user will be enrolled in a variant and the variant name will be cached. On subsuqent requests, we will get that variant name out of the cache.

Using localStorage for example:
```js
import React from 'react'
import {Experiment, Variant} from 'react-ab-experiment'

const LocalStorageCache  = {
  get:  (key) => {
    return window.localStorage.getItem(key)
  },
  set: (key, value) => {
    return window.localStorage.setItem(key, value)
  }
}

class myApp extends React.Component {
  handleEnrolment (experimentId, variantName) {
    ...
  }

  render () {
    return(
      
        
          Variant 0
        
        
          Variant 1
        
        
          Variant 2
        
      
    )
  }
}
```

### Fetching variants from a Remote Server
If you would like to get the variant a user is enrolled to using a remote server we can set the `fetchVariantName` props. This expects a `promise` to be returned with the variant name as the resolved value.

For example:

```js
import React from 'react'
import {Experiment, Variant} from 'react-ab-experiment'
import 'whatwg-fetch'

class myApp extends React.Component {
  handleEnrolment (experimentId, variantName) {
    ...
  }

  fetchVariantName (experimentId) {
    return fetch(`https://my-ab-test-server.com/experiments/${experimentId}/variant`, {
      credentials: 'include' })
      .then(response => response.json())
      .then(response => response.variant)
  }

  render () {
    return(
      
        
          Variant 0
        
        
          Variant 1
        
        
          Variant 2
        
      
    )
  }
}
```

## API

### Experiment
Required component which defines the ab experiment.

**id**

Required string which defines the id of the experiment.

**onEnrolment(experimentId, variantName)**

Required callback function which is used to log the variant a user has been enrolled into for the experiment.

**cache**

Optional object with a `get` and `set` function. This is how you define if variants should be cached in `localStorage`, `cookies`, in memory etc.

eg:
```js
localStorageCache = {
  get: (key) => {
    return window.localStorage.getItem(key)
  },
  set: (key, value) => {
    return window.localStorage.setItem(key, value)
  }
}
```

**fetchVariantName(experimentId)**

Optional callback function which fetches the variant the user is enrolled into for the experiment, from a remote server. It requires the return value to be a `Promise`.

#### Variant
Required component which defines the different variants of the ab experiment.

**name**

Required string which defines the name of the variant.

## Examples

Checkout the example app in the following [github repo](https://github.com/envato/react-ab-experiment-example) and on the [example website.](https://react-ab-experiment.herokuapp.com)
","'ab-testing', 'react'",2017-04-18T01:39:56Z,2023-01-24T18:31:16Z,3,1,18,49,"('Toan Nguyen', 48), ('Tanya Fonina', 3), ('tanyafn', 3)",0,0,
square/okhttp,"Square’s meticulous HTTP client for the JVM, Android, and GraalVM.","OkHttp
======

See the [project website][okhttp] for documentation and APIs.

HTTP is the way modern applications network. It’s how we exchange data & media. Doing HTTP
efficiently makes your stuff load faster and saves bandwidth.

OkHttp is an HTTP client that’s efficient by default:

 * HTTP/2 support allows all requests to the same host to share a socket.
 * Connection pooling reduces request latency (if HTTP/2 isn’t available).
 * Transparent GZIP shrinks download sizes.
 * Response caching avoids the network completely for repeat requests.

OkHttp perseveres when the network is troublesome: it will silently recover from common connection
problems. If your service has multiple IP addresses, OkHttp will attempt alternate addresses if the
first connect fails. This is necessary for IPv4+IPv6 and services hosted in redundant data
centers. OkHttp supports modern TLS features (TLS 1.3, ALPN, certificate pinning). It can be
configured to fall back for broad connectivity.

Using OkHttp is easy. Its request/response API is designed with fluent builders and immutability. It
supports both synchronous blocking calls and async calls with callbacks.


Get a URL
---------

This program downloads a URL and prints its contents as a string. [Full source][get_example].

```java
OkHttpClient client = new OkHttpClient();

String run(String url) throws IOException {
  Request request = new Request.Builder()
      .url(url)
      .build();

  try (Response response = client.newCall(request).execute()) {
    return response.body().string();
  }
}
```


Post to a Server
----------------

This program posts data to a service. [Full source][post_example].

```java
public static final MediaType JSON = MediaType.get(""application/json"");

OkHttpClient client = new OkHttpClient();

String post(String url, String json) throws IOException {
  RequestBody body = RequestBody.create(json, JSON);
  Request request = new Request.Builder()
      .url(url)
      .post(body)
      .build();
  try (Response response = client.newCall(request).execute()) {
    return response.body().string();
  }
}
```

Further examples are on the [OkHttp Recipes page][recipes].


Requirements
------------

OkHttp works on Android 5.0+ (API level 21+) and Java 8+.

OkHttp depends on [Okio][okio] for high-performance I/O and the [Kotlin standard library][kotlin]. Both are small libraries with strong backward-compatibility.

We highly recommend you keep OkHttp up-to-date. As with auto-updating web browsers, staying current
with HTTPS clients is an important defense against potential security problems. [We
track][tls_history] the dynamic TLS ecosystem and adjust OkHttp to improve connectivity and
security.

OkHttp uses your platform's built-in TLS implementation. On Java platforms OkHttp also supports
[Conscrypt][conscrypt], which integrates [BoringSSL](https://github.com/google/boringssl) with Java. OkHttp will use Conscrypt if it is
the first security provider:

```java
Security.insertProviderAt(Conscrypt.newProvider(), 1);
```

The OkHttp `3.12.x` branch supports Android 2.3+ (API level 9+) and Java 7+. These platforms lack
support for TLS 1.2 and should not be used.


Releases
--------

Our [change log][changelog] has release history.

The latest release is available on [Maven Central](https://search.maven.org/artifact/com.squareup.okhttp3/okhttp/4.12.0/jar).

```kotlin
implementation(""com.squareup.okhttp3:okhttp:4.12.0"")
```

Snapshot builds are [available][snap]. [R8 and ProGuard][r8_proguard] rules are available.

Also, we have a [bill of materials (BOM)][bom] available to help you keep OkHttp artifacts up to date and be sure about version compatibility.

```kotlin
    dependencies {
       // define a BOM and its version
       implementation(platform(""com.squareup.okhttp3:okhttp-bom:4.12.0""))

       // define any required OkHttp artifacts without version
       implementation(""com.squareup.okhttp3:okhttp"")
       implementation(""com.squareup.okhttp3:logging-interceptor"")
    }
```

MockWebServer
-------------

OkHttp includes a library for testing HTTP, HTTPS, and HTTP/2 clients.

The latest release is available on [Maven Central](https://search.maven.org/artifact/com.squareup.okhttp3/mockwebserver/4.12.0/jar).

```kotlin
testImplementation(""com.squareup.okhttp3:mockwebserver:4.12.0"")
```

GraalVM Native Image
--------------------

Building your native images with Graal https://www.graalvm.org/ should work automatically.
This is not currently in a final released version, so `5.0.0-alpha.2` should be used.
Please report any bugs or workarounds you find.

See the okcurl module for an example build.

```shell
$ ./gradlew okcurl:nativeImage
$ ./okcurl/build/graal/okcurl https://httpbin.org/get
```

License
-------

```
Copyright 2019 Square, Inc.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

 [bom]: https://docs.gradle.org/6.2/userguide/platforms.html#sub:bom_import
 [changelog]: https://square.github.io/okhttp/changelog/
 [conscrypt]: https://github.com/google/conscrypt/
 [get_example]: https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/GetExample.java
 [kotlin]: https://kotlinlang.org/
 [okhttp3_pro]: https://raw.githubusercontent.com/square/okhttp/master/okhttp/src/main/resources/META-INF/proguard/okhttp3.pro
 [okhttp_312x]: https://github.com/square/okhttp/tree/okhttp_3.12.x
 [okhttp]: https://square.github.io/okhttp/
 [okio]: https://github.com/square/okio
 [post_example]: https://raw.github.com/square/okhttp/master/samples/guide/src/main/java/okhttp3/guide/PostExample.java
 [r8_proguard]: https://square.github.io/okhttp/features/r8_proguard/
 [recipes]: https://square.github.io/okhttp/recipes/
 [snap]: https://s01.oss.sonatype.org/content/repositories/snapshots/
 [tls_history]: https://square.github.io/okhttp/tls_configuration_history/
","'android', 'graalvm', 'java', 'kotlin'",2012-07-23T13:42:55Z,2024-06-12T06:47:04Z,319,258,45420,1631,"('swankjesse', 2775), ('JakeWharton', 773), ('yschimke', 694), ('renovatebot', 294), ('Adrian Cole', 116), ('Adrian Cole', 94), ('amirlivneh', 73), ('nfuller', 56), ('dave-r12', 55), ('Goooler', 54), ('oldergod', 33), ('limpbizkit@gmail.com', 25), ('monkey-mas', 24), ('mescortes', 21), ('TangHuaiZhe', 20), ('adriancole', 19), ('NightlyNexus', 19), ('ShaishavGandhi', 18), ('15characterlimi', 13), ('jessewilson@google.com', 11), ('pforhan', 11), ('Egor Andreevich', 10), ('narayank', 10), ('lingmingyb', 10), ('Marcelo Cortes', 9), ('ZacSweers', 7), ('ChristianKatzmann', 6), ('cketti', 6), ('edenman', 6), ('artem-zinnatullin', 6), ('Jawnnypoo', 5), ('Kristopher Wuollett', 5), ('Michael Benedict', 5), ('ericaschulz', 5), ('Egorand', 4), ('Steve Lhomme', 4), ('jeremy-techson', 4), ('ean5533', 4), ('galderz', 3), ('erikghonyan', 3), ('aahlenst', 3), ('Andre601', 3), ('edenman', 3), ('rtyley', 3), ('rbygrave', 3), ('rjrjr', 3), ('iagreen', 3), ('tony-root', 3), ('adrw', 3), ('Alex Klyubin', 3), ('talklittle', 2), ('vanniktech', 2), ('nfukuzaki', 2), ('rburgstaller', 2), ('raskasa', 2), ('romkavt', 2), ('tasomaniac', 2), ('satoshun', 2), ('SimonMarquis', 2), ('StefMa', 2), ('venilnoronha', 2), ('naturalwarren', 2), ('mostleg', 2), ('Yuri Schimke', 2), ('boxme', 2), ('realDuYuanChao', 2), ('rupertbates', 2), ('alokmenghrajani', 2), ('candrews', 2), ('Adrian Cole', 2), ('aried3r', 2), ('Vampire', 2), ('Carter Kozak', 2), ('0xced', 2), ('electrum', 2), ('EricEdens', 2), ('felipecsl', 2), ('mgp', 2), ('MegatronKing', 2), ('lcolitti', 2), ('staktrace', 2), ('moltak', 2), ('franmontiel', 2), ('gjoseph', 2), ('jaredsburrows', 2), ('jgilfelt', 2), ('joschi', 2), ('positron', 1), ('prashantjois', 1), ('quinnjn', 1), ('ralph-bergmann', 1), ('Reinhard Naegele', 1), ('(no author)', 1), ('Reinhard Nägele', 1), ('seato', 1), ('Richard Thai', 1), ('rfc2822', 1), ('robmoore-i', 1), ('russell-shizhen', 1), ('romeara', 1), ('saket', 1), ('bryant1410', 1), ('sullis', 1), ('sebkur', 1), ('sschuberth', 1), ('fred84', 1), ('Serj Lotutovici', 1), ('swimmesberger', 1), ('esivakumar26', 1), ('JarvisGG', 1), ('kullfar', 1), ('Stephen Barlow', 1), ('robUx4', 1), ('sneivandt', 1), ('TaoZang', 1), ('Taylor H. Perkins', 1), ('Syhids', 1), ('mreichelt', 1), ('szpak', 1), ('markhobson', 1), ('datayja', 1), ('Mauin', 1), ('mattsheppard', 1), ('elevenfive', 1), ('shafirov', 1), ('marenzo', 1), ('intrications', 1), ('MichaelEvans', 1), ('Miguel Lavigne', 1), ('MinhDang685', 1), ('Nash Lincoln', 1), ('Khang-NT', 1), ('ansman', 1), ('cortinico', 1), ('niqueco', 1), ('Norman Maurer', 1), ('oliveroneill', 1), ('snodnipper', 1), ('pyricau', 1), ('kilink', 1), ('pau101', 1), ('peknudsen', 1), ('PaulWoitaschek', 1), ('chuchuva', 1), ('PhilGlass', 1), ('iamdanfox', 1), ('ittzik', 1), ('jjshanks', 1), ('julian-goettingen', 1), ('lburgazzoli', 1), ('inorichi', 1), ('lingming', 1), ('longbai', 1), ('luuillu', 1), ('marcinbak', 1), ('mattlogan', 1), ('mic-', 1), ('mike castleman', 1), ('mrajesh09', 1), ('mruddy', 1), ('nithasha-samad', 1), ('nmittler', 1), ('nxtstep', 1), ('okiolover', 1), ('olg', 1), ('panmingwei', 1), ('raskasa', 1), ('rattanshiv12', 1), ('shaunkawano', 1), ('utsavoza', 1), ('vladdoster', 1), ('vvb2060', 1), ('luozhenyu', 1), ('fanofxiaofeng', 1), ('teresakrause', 1), ('realdadfish', 1), ('G00fY2', 1), ('Tolriq', 1), ('Tom Reznik', 1), ('tomrozb', 1), ('autonomousapps', 1), ('Tyler Barber', 1), ('Usmann Khan', 1), ('vbuberen', 1), ('Voytovich, Mike', 1), ('wezley', 1), ('whenSunSet', 1), ('WhiskeyBravo', 1), ('yallam08', 1), ('ychescale9', 1), ('yelinaung', 1), ('AlexBeggs', 1), ('ahulyk', 1), ('anderius', 1), ('austynmahoney', 1), ('based2', 1), ('bdc@google.com', 1), ('chhsiao90', 1), ('circlespainter', 1), ('congwu.wang', 1), ('packetpilot', 1), ('edenman@gmail.com', 1), ('gkimbwala', 1), ('Brennan Taylor', 1), ('BrianOdisho', 1), ('chadbrubaker', 1), ('ChenRenJie', 1), ('ccunniff', 1), ('lathspell', 1), ('Christoph Sitter', 1), ('Christopher Kocel', 1), ('Christopher Orr', 1), ('clementdessoude', 1), ('cloewen8', 1), ('dansanduleac', 1), ('danielgindi', 1), ('Wopple', 1), ('Danstahrg', 1), ('David Robertson', 1), ('DavidJRobertson', 1), ('Dimitris+Jake', 1), ('ddz', 1), ('reisub', 1), ('dmitry-timofeev', 1), ('zlogic', 1), ('DracoBlue', 1), ('thescouser89', 1), ('eddumelendez', 1), ('Egor Andreevici', 1), ('grimreaper', 1), ('mageddo', 1), ('emilianbold', 1), ('ajalt', 1), ('a-k-g', 1), ('aerb', 1), ('medavox', 1), ('adamsp', 1), ('adstro', 1), ('taftster', 1), ('Adrian Cole and Jesse Wilson', 1), ('Adrian Cole and Josh Humphries and Scott Blum', 1), ('ADI1133', 1), ('ahmedre', 1), ('sashashura', 1), ('AlexSzlavik', 1), ('alexrwegener', 1), ('lexer', 1), ('Amin Cheloh', 1), ('Eric-Jalal', 1), ('amygbui', 1), ('gaul', 1), ('adennie', 1), ('AntStephenson', 1), ('Anton Rutkevich', 1), ('arlolra', 1), ('ArloL', 1), ('malltshik', 1), ('tyilo', 1), ('atticoos', 1), ('Austyn Mahoney', 1), ('baldur', 1), ('jbornemann', 1), ('JemarJones', 1), ('jthurne', 1), ('johan12345', 1), ('jrodbx', 1), ('jonan', 1), ('Jon Watson', 1), ('jhalterman', 1), ('JLLeitschuh', 1), ('iNoles', 1), ('jwendell', 1), ('dmgd', 1), ('Joshua Shanks', 1), ('shiroyuki', 1), ('rengwuxian', 1), ('Kasra Bigdeli', 1), ('seratch', 1), ('kruton', 1), ('Kevinrob', 1), ('Kiran + Kenji', 1), ('Kirill Boyarshinov', 1), ('chaitanyajun12', 1), ('lavong', 1), ('bitwiseman', 1), ('Lin Wang', 1), ('lalbuquerque', 1), ('drlue', 1), ('mg6maciej', 1), ('Zer0bee', 1), ('emrecosar', 1), ('Endeavour233', 1), ('Eric Denman', 1), ('ericgribkoff', 1), ('EricKuck', 1), ('etoews', 1), ('fsbarata', 1), ('afaucogney', 1), ('framiere', 1), ('friederbluemle', 1), ('MGaetan89', 1), ('gstaykov', 1), ('gmarques33', 1), ('goncalossilva', 1), ('desseim', 1), ('guillerodriguez', 1), ('hearsilent', 1), ('hermanliang', 1), ('HugoGresse', 1), ('l2hyunwoo', 1), ('nacx', 1), ('ifedorenko', 1), ('Isira-Seneviratne', 1), ('James Tucker', 1), ('holmes', 1), ('jasper-vandemalle', 1), ('jjestrel', 1), ('JayNewstrom', 1), ('Jaye Pitzeruse', 1)",232,185,
canidae/saiph,S* AI Playing netHack,"About:
------
saiph - [Stupid|Silly|Smart|Superior]* AI Playing netHack.
* use a descriptive word beginning with ""S"".

The project is MIT licensed.


Fetch code:
-----------
Given that you're reading this document there's a fair chance you've already
downloaded the code, but nevertheless, fetch it with Git here:
git clone git://github.com/canidae/saiph.git

Alternative mirror:
git clone http://projects.exent.net/saiph.git


Keeping your repo updated:
--------------------------
You should pull regularly with this command:
 git pull canidae master
Replace ""canidae"" if you used another name for that repo.


Building & running:
-------------------
If you are running on a public server, you will need to create a file named
"".account"" in the directory where you run saiph; it must have three lines,
consisting of the host name, the dgamelaunch user name, and the password,
like so:
nethack.alt.org
saiph


Furthermore, you will need to pass the -t option to saiph to run on a public
server.

Connecting to non-dgamelaunch-based servers, such as the ones that run the
/dev/null tournament, will not work. Patches welcome.

You'll also need a terminal that's capable of displaying at least 160x50
characters.

Then build & start the bot:
 mkdir build
 cd build
 cmake ..
 make
 ./saiph


People who are working on or have contributed to saiph:
-------------------------------------------------------
Vidar Wahlberg , aka. canidae
Stefan O'Rear , aka. sorear
Ryan Karl , aka. rawrmage
Patric Mueller , aka. bhaak
Adrien Panhaleux , aka. DainDwarf
Kenny Root , aka. kroot
Jeffrey Bosboom , aka. DrSunglasses
",,2009-02-03T17:30:30Z,2013-03-10T21:15:43Z,15,6,37,10,"('canidae', 1375), ('sorear', 198), ('Jeffrey Bosboom', 93), ('Vidar Wahlberg', 71), ('kruton', 66), ('Vidar Wahlberg', 54), ('Ryan Karl', 39), ('Vidar Wahlberg', 31), ('brightcloudy', 25), ('Vidar Wahlberg', 22), ('DrSunglasses', 10), ('Jeffrey', 7), ('Dain', 5), ('cheryl', 4), ('Ryan K', 1)",1,0,
TriumphLLC/Blend4Web,Blend4Web is a tool for interactive 3D visualization on the Internet,"****************************************
Blend4Web: Award-Winning 3D Web Solution
****************************************

Blend4Web is a tool for creating interactive, web-based 3D content. The framework can be used for showcasing products, e-learning, game development, advertising and web design.

Why Blend4Web?

* It works right in the web browser without installing any plug-ins (thanks to WebGL);
* Not only does it render 3D graphics but it also integrates realistic physics and spatial audio;
* It is extremely simple to use because it is based on Blender in which 3D scenes can be made and then directly exported, even as a standalone web page;
* It is available as a fully functional open source version or as under a paid commercial license.
* It does not depend on any non-free components or cloud services.

This repo mirrors the community edition SDK distribution which can also be `downloaded from the official site `_.

-----

|latest_version| |compatible_blender_version| |license|

-----

=====
Demos
=====

|planetarium| |mi-34_hermit| |dairy_plant|
|capri_begins| |azure_grotto| |the_fountain|
|the_watch| |naturemorte| |the_farm|
|fashion_show| |the_island| |victory_day_2015|
|new_year_2015|

=========
Tutorials
=========

|jungle_outpost| |sunglasses| |pyatigors_tale|
|playroom| |webmasters| |cloth_workflow|
|tortoise| |visualizing_grass| |simple_app|
|machinima| |soffit| |beach_umbrella|

===============
Getting Started
===============

You need a compatible version of Blender installed in order to use Blend4Web.

---------------------------------
Step 1 - Specify the Scripts Path
---------------------------------

* Run Blender, load the default scene **File > New**;
* Open the user preferences window **File > User Preferences...**;
* Go to the **File** tab, choose the path to the **blender_scripts** directory in the **Scripts** field;
* Click **Save User Settings** and *restart Blender*.

.. image:: https://www.blend4web.com/doc/en/_images/user_preferences_sdk_path.png
    :alt: Specifying Blender Scripts Path
    :align: center

--------------------------
Step 2 - Enable the Add-on
--------------------------

* Again load the default scene;
* Open the user preferences window;
* Go to the **Add-ons** tab and select **Import-Export**. Turn on the **Import-Export: Blend4Web** checkbox;
* Click **Save User Settings**.

.. image:: https://www.blend4web.com/doc/en/_images/user_preferences_enable_addon.png
    :alt: Enabling the Add-on
    :align: center


===================
What's Next. Basics
===================

To reveal the engine settings, select Blend4Web from the upper panel menu.

------------
Fast Preview
------------

Preview scenes using **Fast Preview** button, located both at the bottom of the 3D View window and under the **Render** tab. In this case the scene will be exported inside some temporary storage and opened with the Scene Viewer.

------
Export
------

Select either **Blend4Web (.html)** or **Blend4Web (.json)** option from the **File > Export** menu.

Exported HTML files are self-contained and can be opened with a generic browser right away. On the other hand, exported JSON (together with BIN) files should be opened with the stock Web Player or loaded into your own 3D web app. See this `tutorial `_ for more info.

--------------
SDK Index Page
--------------

Under the **Render** tab click **SDK Index**. The SDK index page will be opened in the default browser. Look through the demos, read the docs, run the Project Manager.


=======
Support
=======

We are always glad to answer your questions on the `Blend4Web forums `_. We also offer assistance for Blend4Web PRO owners with any technical issues which may arise (more `here `_).


.. |latest_version| image:: https://img.shields.io/badge/latest%20version-18.05-blue.svg
    :target: https://www.blend4web.com/en/downloads/
    :alt: Latest Version of Blend4Web

.. |compatible_blender_version| image:: https://img.shields.io/badge/compatible%20with%20Blender-2.79-orange.svg
    :target: https://www.blend4web.com/blender/release/Blender2.79/
    :alt: Compatible Blender Version

.. |license| image:: https://img.shields.io/badge/license-GPLv3-lightgrey.svg
    :target: https://www.blend4web.com/en/services/
    :alt: License


.. |planetarium| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/planetarium.min50.jpg
    :target: https://www.blend4web.com/apps/webplayer/webplayer.html?load=../../assets/interactivity/solar_system/solar_system_en.json
    :alt: Planetarium
    :width: 100 px

.. |dairy_plant| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/dairy_plant.min50.png
    :target: https://www.blend4web.com/en/demo/dairy_plant/
    :alt: Dairy Plant

.. |mi-34_hermit| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/helicopter.min50.png
    :target: https://www.blend4web.com/apps/webplayer/webplayer.html?load=../../assets/capri/vehicles/mi_34s1/mi_34s1_demo_scene.json&autorotate&compressed_textures
    :alt: Mi-34 Hermit

.. |capri_begins| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/capri_begins.min50.png
    :target: https://www.blend4web.com/apps/webplayer/webplayer.html?load=../../assets/capri/capri_intro.json&compressed_textures
    :alt: Capri Begins

.. |azure_grotto| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/azure_grotto.min50.png
    :target: https://www.blend4web.com/apps/webplayer/webplayer.html?load=../../assets/capri/vehicles/boat_pf28/boat_pf28.json&autorotate&compressed_textures
    :alt: Azure Grotto

.. |the_fountain| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/fountain.min50.png
    :target: https://www.blend4web.com/apps/webplayer/webplayer.html?load=../../assets/capri/buildings/fountain_elephants/fountain_elephants.json&autorotate&compressed_textures
    :alt: The Fountain

.. |the_watch| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/watch.min50.png
    :target: https://www.blend4web.com/apps/webplayer/webplayer.html?load=../../assets/capri/props/watch_scene/watch_scene.json&autorotate&compressed_textures
    :alt: The Watch

.. |naturemorte| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/naturemorte.min50.png
    :target: https://www.blend4web.com/en/demo/naturemorte/
    :alt: Nature Morte

.. |the_farm| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/farm.min50.png
    :target: https://www.blend4web.com/en/demo/farm/
    :alt: The Farm

.. |fashion_show| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/fashion.min50.png
    :target: https://www.blend4web.com/en/demo/fashion/
    :alt: Fashion Show

.. |the_island| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/island.min50.png
    :target: https://www.blend4web.com/apps/flight/flight.html
    :alt: The Island

.. |victory_day_2015| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/greetcard_victory_day_2015.min50.png
    :target: https://www.blend4web.com/apps/victory_day_2015/victory_day_2015.html?lang=en
    :alt: V-Day 70th Anniversary

.. |new_year_2015| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/greetcard_happy_new_year_2015.min50.png
    :target: https://www.blend4web.com/en/demo/greetcard_happy_new_year_2015/
    :alt: Happy New Year 2015!

.. |jungle_outpost| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_jungle_outpost.min50.png
    :target: https://www.blend4web.com/en/demo/tut_jungle_outpost/
    :alt: Jungle Outpost

.. |sunglasses| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_sunglasses.min50.png
    :target: https://www.blend4web.com/en/article/81
    :alt: Making Sunglasses

.. |pyatigors_tale| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_pyatigors_tale.min50.png
    :target: https://www.blend4web.com/en/demo/tut_pyatigors_tale/
    :alt: Pyatigor's Tale

.. |playroom| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_playroom.min50.png
    :target: https://www.blend4web.com/en/demo/tut_playroom/
    :alt: Furnishing a Room

.. |webmasters| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_balloons.min50.png
    :target: https://www.blend4web.com/en/demo/tut_balloons/
    :alt: Webmasters!

.. |cloth_workflow| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_cloth_workflow.min50.png
    :target: https://www.blend4web.com/en/article/48
    :alt: Cloth Simulation Workflow

.. |tortoise| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_tortoise.min50.png
    :target: https://www.blend4web.com/en/demo/tut_tortoise/
    :alt: Tortoise

.. |visualizing_grass| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_grass.min50.png
    :target: https://www.blend4web.com/en/article/28
    :alt: Visualizing Grass

.. |simple_app| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_simple_webapp.min50.png
    :target: https://www.blend4web.com/en/article/23
    :alt: Simple App

.. |machinima| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_machinima.min50.png
    :target: https://www.blend4web.com/en/demo/tut_machinima/
    :alt: Machinima

.. |soffit| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_soffit.min50.png
    :target: https://www.blend4web.com/en/demo/tut_soffit/
    :alt: Soffit

.. |beach_umbrella| image:: https://www.blend4web.com/static/blend4web/images/demos/github_icons/tut_beach_umbrella.min50.png
    :target: https://www.blend4web.com/en/demo/tut_beach_umbrella/
    :alt: Beach Umbrella

",,2014-03-26T15:14:49Z,2022-12-20T17:56:11Z,7,3,771,96,"('Alexander Kovelenov', 37), ('Yuri Kovelenov', 19), ('dalduba', 3), ('Ivan Lyubovnikov', 2), ('kkhomyakov3d', 2), ('D504', 1), ('YuriKovelenov', 1)",2,1,
hibernate/hibernate-orm,Hibernate's core Object/Relational Mapping functionality,"Hibernate ORM is a powerful object/relational mapping solution for Java, and makes it easy to develop persistence logic for applications, libraries, and frameworks.

Hibernate implements JPA, the standard API for object/relational persistence in Java, but also offers an extensive set of features and APIs which go beyond the specification.

See https://hibernate.org/orm/[Hibernate.org] for more information.

image:https://ci.hibernate.org/job/hibernate-orm-pipeline/job/main/badge/icon[Build Status,link=https://ci.hibernate.org/job/hibernate-orm-pipeline/job/main/]
image:https://img.shields.io/badge/Revved%20up%20by-Develocity-06A0CE?logo=Gradle&labelColor=02303A[link=https://ge.hibernate.org/scans]

== Continuous Integration

Hibernate uses both https://jenkins-ci.org[Jenkins] and https://github.com/features/actions[GitHub Actions]
for its CI needs. See

* https://ci.hibernate.org/view/ORM/[Jenkins Jobs]
* https://github.com/hibernate/hibernate-orm/actions[GitHub Actions Jobs]

== Building from sources

The build requires at least Java 11 and at most Java 17.

Hibernate uses https://gradle.org[Gradle] as its build tool. See the _Gradle Primer_ section below if you are new to
Gradle.

Contributors should read the link:CONTRIBUTING.md[Contributing Guide].

See the guides for setting up https://hibernate.org/community/contribute/intellij-idea/[IntelliJ] or
https://hibernate.org/community/contribute/eclipse-ide/[Eclipse] as your development environment.

== Gradle Primer

The Gradle build tool has amazing documentation.  2 in particular that are indispensable:

* https://docs.gradle.org/current/userguide/userguide_single.html[Gradle User Guide] is a typical user guide in that
it follows a topical approach to describing all of the capabilities of Gradle.
* https://docs.gradle.org/current/dsl/index.html[Gradle DSL Guide] is unique and excellent in quickly
getting up to speed on certain aspects of Gradle.

We will cover the basics developers and contributors new to Gradle need to know to get productive quickly.

NOTE: The project defines a https://docs.gradle.org/current/userguide/gradle_wrapper.html[Gradle Wrapper].
The rest of the section will assume execution through the wrapper.

=== Executing Tasks

Gradle uses the concept of build tasks (equivalent to Ant targets or Maven phases/goals). You can get a list of
available tasks via 

----
gradle tasks
----

To execute a task across all modules, simply perform that task from the root directory. Gradle will visit each
sub-project and execute that task if the sub-project defines it. To execute a task in a specific module you can
either:

. `cd` into that module directory and execute the task
. name the ""task path"". For example, to run the tests for the _hibernate-core_ module from the root directory
you could say `gradle hibernate-core:test`

=== Common tasks

The common tasks you might use in building Hibernate include:

* _build_ - Assembles (jars) and tests this project
* _compile_ - Performs all compilation tasks including staging resources from both main and test
* _jar_ - Generates a jar archive with all the compiled classes
* _test_ - Runs the tests
* _publishToMavenLocal_ - Installs the project jar to your local maven cache (aka ~/.m2/repository). Note that Gradle
never uses this, but it can be useful for testing your build with other local Maven-based builds.
* _clean_ - Cleans the build directory

== Testing and databases

Testing against a specific database can be achieved in 2 different ways:

=== Using the ""Matrix Testing Plugin"" for Gradle.

Coming later…

=== Using ""profiles""

The Hibernate build defines several database testing ""profiles"" in `databases.gradle`. These
profiles can be activated by name using the `db` build property which can be passed either as
a JVM system prop (`-D`) or as a Gradle project property (`-P`). Examples below use the Gradle
project property approach.

----
gradle clean build -Pdb=pgsql
----

To run a test from your IDE, you need to ensure the property expansions happen.
Use the following command:

----
gradle clean compile -Pdb=pgsql
----

__NOTE: If you are running tests against a JDBC driver that is not available via Maven central be sure to
add these drivers to your local Maven repo cache (~/.m2/repository) or (better) add it to a personal Maven repo server__

=== Running database-specific tests from the IDE using ""profiles""

You can run any test on any particular database that is configured in a `databases.gradle` profile.

All you have to do is run the following command:

----
./gradlew setDataBase -Pdb=pgsql
----

or you can use the shortcut version: 

----
./gradlew sDB -Pdb=pgsql
----

You can do this from the module which you are interested in testing or from the `hibernate-orm` root folder.

Afterward, just pick any test from the IDE and run it as usual. Hibernate will pick the database configuration from the `hibernate.properties`
file that was set up by the `setDataBase` Gradle task.

=== Starting test databases locally as docker containers

You don't have to install all databases locally to be able to test against them in case you have docker available.
The script `docker_db.sh` allows you to start a pre-configured database which can be used for testing.

All you have to do is run the following command:

----
./docker_db.sh postgresql
----

omitting the argument will print a list of possible options.

When the database is properly started, you can run tests with special profiles that are suffixed with `_ci`
e.g. `pgsql_ci` for PostgreSQL. By using the system property `dbHost` you can configure the IP address of your docker host.

The command for running tests could look like the following:

----
./gradlew test -Pdb=pgsql_ci ""-DdbHost=192.168.99.100""
----

The following table illustrates a list of commands for various databases that can be tested locally.

|===
|Database |`docker_db.sh` |Gradle command

|H2
|-
|`./gradlew test -Pdb=h2`

|HSQLDB
|-
|`./gradlew test -Pdb=hsqldb`

|Apache Derby
|-
|`./gradlew test -Pdb=derby`

|MySQL
|`./docker_db.sh mysql`
|`./gradlew test -Pdb=mysql_ci`

|MariaDB
|`./docker_db.sh mariadb`
|`./gradlew test -Pdb=mariadb_ci`

|PostgreSQL
|`./docker_db.sh postgresql`
|`./gradlew test -Pdb=pgsql_ci`

|EnterpriseDB
|`./docker_db.sh edb`
|`./gradlew test -Pdb=edb_ci`

|Oracle
|`./docker_db.sh oracle`
|`./gradlew test -Pdb=oracle_ci`

|DB2
|`./docker_db.sh db2`
|`./gradlew test -Pdb=db2_ci`

|SQL Server
|`./docker_db.sh mssql`
|`./gradlew test -Pdb=mssql_ci`

|Sybase ASE (jTDS)
|`./docker_db.sh sybase`
|`./gradlew test -Pdb=sybase_ci`

|Sybase ASE (jConnect)
|`./docker_db.sh sybase`
|`./gradlew test -Pdb=sybase_jconn_ci`

|SAP HANA
|`./docker_db.sh hana`
|`./gradlew test -Pdb=hana_ci`

|CockroachDB
|`./docker_db.sh cockroachdb`
|`./gradlew test -Pdb=cockroachdb`

|TiDB
|`./docker_db.sh tidb`
|`./gradlew test -Pdb=tidb`

|Informix
|`./docker_db.sh informix`
|`./gradlew test -Pdb=informix`
|===

To stop a container started by `docker`, use the command

[source]
----
docker stop $container_name
----

NOTE:: Substitute `podman` command for `docker` if using `podman`

E.g., to stop the mariadb container

[source]
----
docker stop mariadb
----
","'database', 'envers', 'gradle', 'hibernate', 'java', 'java8', 'java8-times', 'jdbc', 'jpa', 'orm', 'unitofwork'",2010-10-04T16:15:52Z,2024-06-18T14:10:01Z,698,372,5804,304,"('sebersole', 3563), ('gavinking', 2132), ('dreab8', 2123), ('beikov', 1157), ('Sanne', 1052), ('Gail Badner', 862), ('mbladel', 589), ('stliu', 581), ('vladmihalcea', 542), ('brmeyer', 487), ('yrodiere', 465), ('hferentschik', 457), ('Naros', 401), ('emmanuelbernard', 315), ('Guillaume Smet', 246), ('jrenaat', 243), ('adamw', 211), ('lukasz-antoniak', 188), ('maesenka', 164), ('NathanQingyangXu', 154), ('bstansberry', 111), ('scottmarlow', 109), ('Galder Zamarreño', 98), ('barreiro', 97), ('DavideD', 82), ('rvansa', 65), ('Hibernate-CI', 63), ('Diego Plentz', 59), ('jpav', 53), ('gunnarmorling', 51), ('marko-bekhta', 48), ('cigaly', 47), ('fax4ever', 46), ('dependabotbot', 42), ('quaff', 42), ('Juraci Krohling', 41), ('breglerj', 38), ('loiclefevre', 36), ('pb00068', 29), ('simkam', 25), ('edalquist', 24), ('xhuang', 23), ('kadishmal', 22), ('valotas', 22), ('jwgmeligmeyling', 19), ('Michal Skowronek', 18), ('Erik-Berndt Scheper', 17), ('Misty Stanley-Jones', 17), ('Vladimír Kuruc', 17), ('jmartisk', 15), ('sharathjreddy', 15), ('Zuchos', 15), ('davidmc24', 14), ('marschall', 14), ('alexsnaps', 14), ('Bawany Satgunanathan', 13), ('Hernan', 13), ('janario', 12), ('David Mansfield', 12), ('reda-alaoui', 11), ('dreis2211', 11), ('FroMage', 11), ('Felix Feisst', 10), ('johnaohara', 10), ('pferraro', 10), ('rworsnop', 10), ('Shawn Clowater', 10), ('gtoison', 10), ('bvarner', 9), ('candrews', 9), ('EtienneMiret', 9), ('koentsje', 9), ('mrotteveel', 9), ('Ståle W. Pedersen', 9), ('andrigtmiller', 9), ('golovnin', 9), ('fabioueno', 8), ('whitingjr', 8), ('Kamii', 8), ('The-Huginn', 8), ('MarcGiffing', 7), ('manuelbernhardt', 7), ('gastaldi', 7), ('Cédric Tabin', 7), ('Atgoogat', 7), ('boris-unckel', 6), ('thegeekyasian', 6), ('stuartwdouglas', 6), ('pierrickrouxel', 6), ('Nikolay Shestakov', 6), ('Manik Surtani', 6), ('James Gilbertson', 6), ('hchanfreau', 6), ('famod', 6), ('dk2k', 6), ('Chris Bredesen', 6), ('aepedraza', 6), ('renjunyan', 5), ('hailtondecastro', 5), ('Zbyněk Roubalík', 5), ('coladict', 5), ('simeonmalchev', 5), ('nohn', 5), ('Richard Wilding', 5), ('raphw', 5), ('olilo', 5), ('OBreidenbach', 5), ('Oliver Breidenbach', 5), ('johnlinp', 5), ('jpyeron', 5), ('Georg Echterling', 5), ('galovics', 5), ('rillig-ite', 4), ('rsvato', 4), ('theigl', 4), ('Vincent Bouthinon', 4), ('wburns', 4), ('asutosh936', 4), ('fmusolino', 4), ('randymay', 4), ('jmax01', 4), ('Mobe91', 4), ('Matej Pucihar', 4), ('markusheiden', 4), ('Hynek Svabek', 4), ('Felix Feisst', 4), ('karmann-dm', 4), ('David Ellingsworth', 4), ('csaboka', 4), ('gmshake', 3), ('Viefhaus', 3), ('ctomc', 3), ('Tomasz Blachowicz', 3), ('Thorsten Schäfer', 3), ('Svein', 3), ('Turini', 3), ('findepi', 3), ('showuon', 3), ('akotlyarov', 3), ('franz1981', 3), ('jcibik', 3), ('nikowitt', 3), ('nrodrigues', 3), ('syeeuns', 3), ('younjungpark', 3), ('papegaaij', 3), ('KaiSuchomel', 3), ('awallgren', 3), ('Adrodoc', 3), ('blafond', 3), ('bwaldvogel', 3), ('BogdanStirbat', 3), ('Darren Evenson', 3), ('drepshas', 3), ('Loniks', 3), ('elefeint', 3), ('dohertyfjatl', 3), ('geoand', 3), ('gregrluck', 3), ('henri-tremblay', 3), ('jprinet', 3), ('JongDae Kim', 3), ('jottinger', 3), ('kamilszymanski', 3), ('ljacomet', 3), ('petteripitkanen', 2), ('Rapenok, Ivan', 2), ('ratulSharker', 2), ('rpgingerbarnes', 2), ('Rob Worsnop', 2), ('rkurucz9', 2), ('runeks', 2), ('csware', 2), ('tjoneslo', 2), ('Timo Verhoeven', 2), ('tomas-c', 2), ('Tomas Lamr', 2), ('Peter Holvenstot', 2), ('panossot', 2), ('oliversaggau', 2), ('runningcode', 2), ('mustafau', 2), ('MilovdZee', 2), ('Michael Rudolf', 2), ('javaprog', 2), ('Martin Eisenhardt', 2), ('martijnblankestijn', 2), ('malcolmtaylor', 2), ('dadoonet', 2), ('velo', 2), ('lalmeras', 2), ('karlvr', 2), ('kinow', 2), ('barnabycourt', 2), ('Akshit97', 2), ('yinzara', 2), ('seregamorph', 2), ('s.vasilyev', 2), ('rhart', 2), ('nandina', 2), ('JooHyukKim', 2), ('JohnNiang', 2), ('info@kawoolutions.com', 2), ('codecracker2014', 2), ('icidel', 2), ('cristhiank', 2), ('clementdenis', 2), ('bb7133', 2), ('amkad', 2), ('datavisortedyu', 2), ('Yosef Yona', 2), ('Walter White', 2), ('Vyacheslav Dimitrov', 2), ('ghostd', 2), ('vkochnev', 2), ('dariush-moshiri', 2), ('daniel-shuy', 2), ('mensinda', 2), ('codylerum', 2), ('Christian Bauer', 2), ('chrisdennis', 2), ('cash', 2), ('caristu', 2), ('Bryan Turner', 2), ('Brian Parker', 2), ('Brad Koehn', 2), ('VEINHORN', 2), ('Benoit GUERIN', 2), ('sj', 2), ('barney2k7', 2), ('archiecobbs', 2), ('antonmarsden', 2), ('aguibert', 2), ('aclemons', 2), ('A Garcia', 2), ('andrei-ivanov', 2), ('cristatus', 2), ('asolntsev', 2), ('adembo', 2), ('Ladislav Kulhanek', 2), ('Lars Karlström', 2), ('Ken Schosinsky', 2), ('laurent-r', 2), ('kkoniuszy', 2), ('karge-itestra', 2), ('Juergen Zimmermann', 2), ('jerepenttinen', 2), ('jaikiran', 2), ('hendriks73', 2), ('BOOTMGR', 2), ('HJK181', 2), ('bdshadow', 2), ('Dmitry Geraskov', 2), ('Dmitry Panov', 2), ('domtoupin', 2), ('Dustin Schultz', 2), ('educhastenier', 2), ('ejannett', 2), ('moriarty-s3a', 2), ('fgsofis', 2), ('FelixDes', 2), ('froque', 2), ('H-Lo', 2), ('fheck', 2), ('Steve Dighans', 1), ('Stevo Slavic', 1), ('Stoty', 1), ('Sven Haster', 1), ('Sylvain Dusart', 1), ('Tair Sabirgaliev', 1), ('Taras', 1), ('The-Arne', 1), ('Thomas Bürli', 1), ('Thomas Einwaller', 1), ('Thomas Reinhardt', 1), ('amaeda', 1), ('Stephanie Miller', 1), ('Staffan Hörke', 1), ('SirWayne', 1), ('Simon StJohn-Green', 1), ('Simon Convent', 1), ('Shaun Appleton', 1), ('Sergiu Dumitriu', 1), ('Sergey Ponomarev', 1), ('Sergey Morgunov', 1), ('Sergey Chernolyas', 1), ('Sergey Astakhov', 1), ('Selaron', 1), ('Sande Gilda', 1), ('Owen Farrell', 1), ('aisensiy', 1), ('ageery', 1), ('a.vasilev', 1), ('a.navrotskiy', 1), ('Yash Jain', 1), ('Yann Diorcet', 1), ('Xavier Dury', 1), ('VyacheslavRarata', 1), ('Vootele Rotov', 1), ('Vlado Kuruc', 1), ('Vlad Kuznetsov', 1), ('Vishavjeet Thakur', 1), ('Vincent Stradiot', 1), ('Vincent Stradiot', 1), ('Vincent Jansen', 1), ('Vincent Cornet', 1), ('Victor Bonnier', 1), ('Vedran Prišćan', 1), ('Utku Gultopu', 1), ('Ulrich Bestfleisch', 1), ('U-MateusPimenta\\Mateus Pimenta', 1), ('Troeger, Martin (K-SIPB-1/3)', 1), ('Trask Stalnaker', 1), ('Torsten Schöne', 1), ('Tommy Knowlton', 1), ('Timofey Gorshkov', 1), ('Tim Ward', 1), ('Tiger Wang', 1), ('Oliver Kopp', 1), ('Oleksii Klochko', 1), ('Oleksandr_Ierenkov', 1), ('Oleh Faizulin', 1), ('Ocean-Blue', 1), ('Nikolay Shestakov', 1), ('Nikita', 1), ('Nicolas MAUTI', 1), ('Nicolai Parlog', 1), ('Nick', 1), ('Nicholas Kim', 1), ('Neon Ngo', 1), ('Nazarii Bardiuk', 1), ('Mykola Pavluchynskyi', 1), ('Mykhaylo Gnylorybov', 1), ('Mohammad Yasin Sadeghi', 1), ('Michael Spahn', 1), ('Michael Schnell', 1), ('Michael Hum', 1), ('Michael Edgar', 1), ('Maximilian Zellhofer', 1), ('mfalaize', 1), ('wrungel', 1), ('cute-panda-baby', 1), ('matias-santurio', 1), ('backslash47', 1), ('Samuel Andersson', 1), ('Sam De Block', 1), ('Safeer Ansari', 1), ('Russ Tennant', 1), ('RunninglVlan', 1), ('Romain Moreau', 1), ('Romain Fromi', 1), ('Rokko11', 1), ('Robin Anil', 1), ('Robert Richter', 1), ('Robert Rettig', 1), ('Rico Neubauer', 1), ('Richard Yhip', 1), ('Richard Tingstad', 1), ('Richard Bradley', 1), ('Raja Kolli', 1), ('Rafi Shamim', 1), ('Rafał Osiecki', 1), ('Rafael Lillo', 1), ('Ptits de Barbe', 1), ('Prasanth Mathialagan', 1), ('PrairieLoneWolf', 1), ('Piotr Bobinski', 1), ('Peter Holvenstot', 1), ('Peter', 1), ('Paweł Stawicki', 1), ('Paul Lysak', 1), ('宁培培', 1), ('rmartinc', 1), ('rgarcia', 1), ('qinxi', 1), ('petar.tahchiev', 1), ('ouzned', 1), ('opporancisis', 1), ('og151037', 1), ('norbert_wirges', 1), ('nicklas.wallgren', 1), ('mutazkabashi', 1), ('mukhanov', 1), ('msymonov', 1), ('msvticket', 1), ('msulima', 1), ('mrizzi', 1), ('mnachmia31', 1), ('minman', 1), ('mimmoz81', 1), ('michiel.hendriks', 1), ('michal', 1), ('mharray', 1), ('mgrenonville', 1), ('mgarcia.devinuesa', 1), ('mdebeljuh', 1), ('marekchodak', 1), ('mam', 1), ('magdalena', 1), ('姜禹', 1), ('Губанов Станислав', 1), ('zinzoddari', 1), ('yuanhang zheng', 1), ('wonwoo', 1), ('waahhh', 1), ('w1ida', 1), ('vydn', 1), ('varun.shrivastava', 1), ('tscz', 1), ('timpeeters', 1), ('thymepuns', 1), ('taghizadeh87', 1), ('sujl95', 1), ('subijayb', 1), ('stonio', 1), ('stasal', 1), ('sreekarareddy', 1), ('soldierkam', 1), ('sndyuk', 1), ('skis', 1), ('shin-mallang', 1), ('shen dongsheng', 1), ('sajad', 1), ('rustem.yagudin', 1), ('rreynolds', 1), ('romainmoreau', 1), ('lukawski-adrian', 1), ('echunca', 1), ('dodgex', 1), ('dkublik', 1), ('dionis', 1), ('dgh', 1), ('dewarder', 1), ('dcebotarenco', 1), ('davidmuzik', 1), ('datazuul', 1), ('danielsmith1995', 1), ('cmuchinsky', 1), ('chris-manning', 1), ('carnusj', 1), ('bradbalogh', 1), ('bleporini', 1), ('bernd hopp', 1), ('benoit', 1), ('begmandev', 1), ('beamerblvd', 1), ('bdragan', 1), ('bbodnar', 1), ('bananan', 1), ('ballm', 1), ('ats1999', 1), ('ankiaga', 1), ('andreas', 1), ('ammachado', 1), ('lsiu', 1), ('lrcuhuh', 1), ('lpradel', 1), ('lining', 1), ('lgathy', 1), ('leonliao', 1), ('ldelima', 1), ('kubo', 1), ('koisyu', 1), ('katiforis', 1), ('k abram', 1), ('jvdvTechno', 1), ('justinsubert', 1), ('jonathan', 1), ('jmoore', 1), ('jiangHZ', 1), ('jfb', 1), ('jeonjonghyeok', 1), ('java4dev@', 1), ('hugo-syn', 1), ('helloztt', 1), ('harikantverma', 1), ('graemerocher', 1), ('george-007', 1), ('geonhee.lee', 1), ('fernando', 1), ('ettavolt', 1), ('mkurz', 1), ('Lingo93', 1), ('dfa1', 1), ('David Tombs', 1), ('zeitiger', 1), ('dmlloyd', 1), ('dstephan99', 1), ('dariush624', 1), ('Danny02', 1), ('dpcasady', 1), ('daninsky1', 1), ('DanielYWoo', 1), ('Daniel Mensinger', 1), ('beatngu13', 1), ('gredler', 1), ('damienhollis', 1), ('TheCodePope', 1), ('coheigea', 1), ('CodingFabian', 1), ('cescoffier', 1), ('Christian Thiel', 1), ('cschneider', 1), ('ChristianHoesel', 1), ('carstenartur', 1), ('cklab', 1), ('GChapel', 1), ('Burkhard Graves', 1), ('bsofiato', 1), ('Francoisvandelft', 1), ('TFyre', 1), ('flozano', 1), ('Francesco Marino', 1), ('f-lopes', 1), ('florianhof', 1), ('minicuts', 1), ('tufgupmi', 1), ('fjuma', 1), ('Evandro Pires da Silva', 1), ('eseverson', 1), ('macjohnny', 1), ('eskil-vidispine', 1), ('ebullient', 1), ('Emanuele Gesuato', 1), ('ed0906', 1), ('EUROPE\\cdhib', 1), ('bertiepinnock', 1), ('DrBAXA', 1), ('okutane', 1), ('dmitrygusev', 1), ('Dionis Argiri', 1), ('Dimitris Mandalidis', 1), ('dimitrisli', 1), ('diegolovison', 1), ('Didier Villevalois', 1), ('dgray16', 1), ('arcivanov', 1), ('selliera', 1), ('Anthony Richir', 1), ('Anthony Patricio', 1), ('cbm-afoulfoin', 1), ('Andy2003', 1), ('csirkeee', 1), ('Andrew Lee Rubinger', 1), ('judsona', 1), ('Andrei Badea', 1), ('rasenderhase', 1), ('aspan', 1), ('andreazevedo', 1), ('andersonbr', 1), ('alek-sys', 1), ('Alexander-Dukhno', 1), ('Iskuskov', 1), ('neoasket', 1), ('alex-bel', 1), ('sashashura', 1), ('lazarotti', 1), ('alesj', 1), ('aleksabl', 1), ('aleksandarsusnjar', 1), ('huzejrovicalbert', 1), ('abryzak', 1), ('10urshin', 1), ('Bruce Brown', 1), ('Brian Peterson', 1), ('bplump', 1), ('bplies', 1), ('bdhess', 1), ('bbyk', 1), ('Bolek Ziobrowski', 1), ('Bogdan Calmac', 1), ('bobobobo', 1), ('Vampire', 1), ('benoit-lateltin', 1), ('ben-arbitrage', 1), ('Benjamin Hartmann', 1), ('Benedikt Biallowons', 1), ('belev', 1), ('beccagaspard', 1), ('batbileg289', 1), ('bjansen-caps', 1), ('Baptiste Mathus', 1), ('Baptiste Mathus', 1), ('batmat', 1), ('aurimasniekis', 1), ('alostale', 1), ('asirvinskas', 1), ('ArloL', 1), ('Axinet', 1), ('arend-von-reinersdorff', 1), ('ljnelson', 1), ('Ladicek', 1), ('Labi0', 1), ('Laabidi Raissi', 1), ('Krzysztof Debski', 1), ('kristofferlundberg', 1), ('Kristian Marinkovic', 1), ('kkuegler', 1), ('knutwannheden', 1), ('Klauswk', 1), ('kirill-vlasov', 1), ('62mkv', 1), ('kimhanse', 1), ('Keshavan Santhanam', 1), ('kedar-joshi', 1), ('kankt', 1), ('kaja-mohideen', 1), ('JustinKSU', 1), ('Julien Herr', 1), ('jfourment', 1), ('julbrs', 1), ('Joël Marty', 1), ('jcmoreira', 1), ('Jorgen Rydenius', 1), ('jonasfugedi', 1), ('johnou', 1), ('pf-john-hardin', 1), ('mattdrees', 1), ('martin-v', 1), ('bountin', 1), ('Mark Robinson', 1), ('Marius Klein', 1), ('Marek Šabo', 1), ('marcus-nl', 1), ('Marco Pelagatti', 1), ('marcobehler', 1), ('marcellor', 1), ('P6lS5gytpES99y9TvSg4', 1), ('marceloverdijk', 1), ('manouti', 1), ('maciejwalkowiak', 1), ('ahmedmohiduet', 1), ('lukaseder', 1), ('lhirales', 1), ('Libor Ondrusek', 1), ('LeonardoMeireles55', 1), ('Lemongrass3110', 1), ('Legohuman', 1), ('Leuteris', 1), ('ElTav', 1), ('laurentschoelens', 1), ('laurentmartelli', 1), ('klockla', 1), ('Lars Storm', 1), ('Himavanth', 1), ('Higor Tavares', 1), ('henrikdeluxe', 1), ('xehonk', 1), ('Henady Zakalusky', 1), ('Elab4d1', 1), ('123Haynes', 1), ('hgcummings', 1), ('jonenst', 1), ('gwenneg', 1), ('guyv', 1), ('Gustavo Adolfo Rodríguez Libreros', 1), ('ggam', 1), ('ghusta', 1), ('guilhermesilveira', 1), ('gregoriopalama', 1), ('gregjones60', 1), ('Gittenburg', 1), ('Giovanni Lovato', 1), ('Giovanni Lovato', 1), ('geoscan-builder', 1), ('juja0', 1), ('ribafish', 1), ('garyolsen', 1), ('belingueres', 1), ('Furkan Kamaci', 1), ('FreekDB', 1), ('johannes-link', 1), ('Johannes Kümmel', 1), ('jonnybbb', 1), ('JoeyGaoSap', 1), ('JockiHendry', 1), ('Jezza', 1), ('jsight', 1), ('jensborrmann', 1), ('jay-paulsen', 1), ('siahsang', 1), ('jasonex7', 1), ('jhyoty', 1), ('Jan Šimek', 1), ('JBodkin', 1), ('Jaanus Hansen', 1), ('hradecek', 1), ('Ivaylo Mitrev', 1), ('istraka', 1), ('Ivan Sopov', 1), ('Ihar Sadounikau', 1), ('ivaynberg', 1), ('Igor Dmitriev', 1), ('idelpivnitskiy', 1), ('Icemap', 1), ('hyeonisism', 1), ('Holger', 1), ('hanohrs', 1)",434,171,
ChenglongChen/Kaggle_Walmart-Recruiting-Store-Sales-Forecasting,R code for Kaggle's Walmart Recruiting - Store Sales Forecasting,"# Kaggle's Walmart Recruiting - Store Sales Forecasting

This is the R code I used to make my submission to Kaggle's Walmart Recruiting - Store Sales Forecasting competition.

My score on the private leaderboard is WMAE = 2561.94597 (with a public LB WMAE=2487.81778), ranking 16th out of 708. The code itself contains lots of comments. So, you'd better see there for details.

This code uses the observation that for the same dept, the weekly sales are very similar despite of different magnitudes across all the stores. To see this, use file visualize_weekly_sales.R or have a look into the visualization folder.

I generates a few features using preprocess_data_v1.R/preprocess_data_v2.R and then train a gbm to model the ts data using train_gbm_cross_store_v1.R/train_gbm_cross_store_v2.R. However, I find my gbm model (version 1.0) can not well capture the periodic pattern of some depts, e.g., dept=1. So, I think there are still room for this approach. Some useful discussions about other competitors' approaches and adjustment can be found on the forum: http://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/forums/t/8023/thank-you-and-2-rank-model, http://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/forums/t/8028/a-key-adjustment


## Requirements

You should have gbm/geoR/Hmisc installed in R.


## Instructions

* download data from competition website: http://www.kaggle.com/c/walmart-recruiting-store-sales-forecasting/data/
* put all the data into ./data dir
 - ./data/train.csv
 - ./data/test.csv
 - ./data/features.csv
 - ./data/stores.csv
 - ./data/sampleSubmission.csv
* my features can take a while to generate, so I'd suggest you download it from this repo and put then in ./data dir
* run train_gbm_cross_store_v1.R",,2014-05-06T00:55:28Z,2014-05-06T02:19:46Z,1,1,42,9,"('ChenglongChen', 8)",0,0,
gunthercox/ChatterBot,"ChatterBot is a machine learning, conversational dialog engine for creating chat bots","![ChatterBot: Machine learning in Python](https://i.imgur.com/b3SCmGT.png)

# ChatterBot

ChatterBot is a machine-learning based conversational dialog engine build in
Python which makes it possible to generate responses based on collections of
known conversations. The language independent design of ChatterBot allows it
to be trained to speak any language.

[![Package Version](https://img.shields.io/pypi/v/chatterbot.svg)](https://pypi.python.org/pypi/chatterbot/)
[![Python 3.6](https://img.shields.io/badge/python-3.6-blue.svg)](https://www.python.org/downloads/release/python-360/)
[![Django 2.0](https://img.shields.io/badge/Django-2.0-blue.svg)](https://docs.djangoproject.com/en/2.1/releases/2.0/)
[![Requirements Status](https://requires.io/github/gunthercox/ChatterBot/requirements.svg?branch=master)](https://requires.io/github/gunthercox/ChatterBot/requirements/?branch=master)
[![Build Status](https://travis-ci.org/gunthercox/ChatterBot.svg?branch=master)](https://travis-ci.org/gunthercox/ChatterBot)
[![Documentation Status](https://readthedocs.org/projects/chatterbot/badge/?version=stable)](http://chatterbot.readthedocs.io/en/stable/?badge=stable)
[![Coverage Status](https://img.shields.io/coveralls/gunthercox/ChatterBot.svg)](https://coveralls.io/r/gunthercox/ChatterBot)
[![Code Climate](https://codeclimate.com/github/gunthercox/ChatterBot/badges/gpa.svg)](https://codeclimate.com/github/gunthercox/ChatterBot)
[![Join the chat at https://gitter.im/chatterbot/Lobby](https://badges.gitter.im/chatterbot/Lobby.svg)](https://gitter.im/chatterbot/Lobby?utm_source=badge&utm_medium=badge&utm_content=badge)

An example of typical input would be something like this:

> **user:** Good morning! How are you doing?  
> **bot:**  I am doing very well, thank you for asking.  
> **user:** You're welcome.  
> **bot:** Do you like hats?  

## How it works

An untrained instance of ChatterBot starts off with no knowledge of how to communicate. Each time a user enters a statement, the library saves the text that they entered and the text that the statement was in response to. As ChatterBot receives more input the number of responses that it can reply and the accuracy of each response in relation to the input statement increase. The program selects the closest matching response by searching for the closest matching known statement that matches the input, it then returns the most likely response to that statement based on how frequently each response is issued by the people the bot communicates with.

## Installation

This package can be installed from [PyPi](https://pypi.python.org/pypi/ChatterBot) by running:

```
pip install chatterbot
```

## Basic Usage

```
from chatterbot import ChatBot
from chatterbot.trainers import ChatterBotCorpusTrainer

chatbot = ChatBot('Ron Obvious')

# Create a new trainer for the chatbot
trainer = ChatterBotCorpusTrainer(chatbot)

# Train the chatbot based on the english corpus
trainer.train(""chatterbot.corpus.english"")

# Get a response to an input statement
chatbot.get_response(""Hello, how are you today?"")
```

# Training data

ChatterBot comes with a data utility module that can be used to train chat bots.
At the moment there is training data for over a dozen languages in this module.
Contributions of additional training data or training data
in other languages would be greatly appreciated. Take a look at the data files
in the [chatterbot-corpus](https://github.com/gunthercox/chatterbot-corpus)
package if you are interested in contributing.

```
from chatterbot.trainers import ChatterBotCorpusTrainer

# Create a new trainer for the chatbot
trainer = ChatterBotCorpusTrainer(chatbot)

# Train based on the english corpus
trainer.train(""chatterbot.corpus.english"")

# Train based on english greetings corpus
trainer.train(""chatterbot.corpus.english.greetings"")

# Train based on the english conversations corpus
trainer.train(""chatterbot.corpus.english.conversations"")
```

**Corpus contributions are welcome! Please make a pull request.**

# [Documentation](https://chatterbot.readthedocs.io/)

View the [documentation](https://chatterbot.readthedocs.io/)
for ChatterBot on Read the Docs.

To build the documentation yourself using [Sphinx](http://www.sphinx-doc.org/), run:

```
sphinx-build -b html docs/ build/
```

# Examples

For examples, see the [examples](https://github.com/gunthercox/ChatterBot/tree/master/examples)
directory in this project's git repository.

There is also an example [Django project using ChatterBot](https://github.com/gunthercox/ChatterBot/tree/master/examples), as well as an example [Flask project using ChatterBot](https://github.com/chamkank/flask-chatterbot).

# History

See release notes for changes https://github.com/gunthercox/ChatterBot/releases

# Development pattern for contributors

1. [Create a fork](https://help.github.com/articles/fork-a-repo/) of
   the [main ChatterBot repository](https://github.com/gunthercox/ChatterBot) on GitHub.
2. Make your changes in a branch named something different from `master`, e.g. create
   a new branch `my-pull-request`.
3. [Create a pull request](https://help.github.com/articles/creating-a-pull-request/).
4. Please follow the [Python style guide for PEP-8](https://www.python.org/dev/peps/pep-0008/).
5. Use the projects [built-in automated testing](https://chatterbot.readthedocs.io/en/latest/testing.html).
   to help make sure that your contribution is free from errors.

# License

ChatterBot is licensed under the [BSD 3-clause license](https://opensource.org/licenses/BSD-3-Clause).
","'bot', 'chatbot', 'chatterbot', 'conversation', 'language', 'machine-learning', 'python'",2014-09-28T14:49:00Z,2024-04-24T19:01:00Z,103,82,13947,544,"('gunthercox', 1462), ('davizucon', 56), ('Mallikarjunarao Kosuri', 45), ('DarkmatterVale', 31), ('manoelrui', 25), ('lesleslie', 19), ('rmdort', 19), ('navyad', 14), ('Martmists-GH', 13), ('rafak360', 10), ('JulianoEngineer', 8), ('vkosuri', 5), ('gabru-md', 5), ('tiagotmc', 5), ('sumn2u', 5), ('Hobson Lane', 4), ('mohan08p', 4), ('co-sty', 3), ('Robson Targz', 3), ('chamkank', 3), ('Alkalit', 3), ('zxsimple', 2), ('wwj718', 2), ('sgoblin', 2), ('sgoblin', 2), ('minjae1025', 2), ('yangl', 2), ('ThomasKoscheck', 2), ('Sourab Jha', 2), ('Raja Simon', 2), ('nihal111', 2), ('MiaranaDIY', 2), ('Marin Barisa', 2), ('Achimh3011', 2), ('anuragvickey', 2), ('apoorv-mishra', 2), ('Christian Petersson', 2), ('Davide Pataracchia', 2), ('emijrp', 2), ('Ender', 2), ('HarshGrandeur', 2), ('ivanmoreau', 2), ('JacoGuerra', 2), ('alekaizer', 2), ('lucasqiu', 2), ('bloodywing', 1), ('atchoum31', 1), ('adamsandwich', 1), ('Zacharilius', 1), ('Hacker-VP', 1), ('tfschultz', 1), ('TimPchelintsev', 1), ('Thomas Lee Wai Kwong', 1), ('gitter-badger', 1), ('WizzyGeek', 1), ('srevinsaju', 1), ('Shashwat Bhatt', 1), ('Shashank Kumar', 1), ('larkinscott', 1), ('ryancollingwood', 1), ('davideboschetto', 1), ('dieterwarson', 1), ('gsingers', 1), ('justindomingue', 1), ('louiscochin', 1), ('mpv35', 1), ('philipobrien', 1), ('sevenguin', 1), ('spocot', 1), ('leif-waldner', 1), ('yusuf-celik', 1), ('zan-kusterle', 1), ('ekuvardin', 1), ('이연리', 1), ('dragfire', 1), ('meain', 1), ('a-elhaddad', 1), ('iwas108', 1), ('Alex Stovbur', 1), ('alxmamaev', 1), ('thesprockee', 1), ('Ballardin', 1), ('CK', 1), ('bibliotechy', 1), ('dannofx', 1), ('Danil Yarancev', 1), ('deenaik', 1), ('chellem', 1), ('florimondmanca', 1), ('Gaboose', 1), ('petasis', 1), ('Jason-Cooke', 1), ('jghyllebert', 1), ('kevin-brown', 1), ('LeonLenclos', 1), ('mayankkushal', 1), ('shaikmoeed', 1), ('ad3n', 1), ('oliviaguest', 1), ('Orfeo', 1), ('primoz-k', 1), ('quan-nh', 1), ('rileyjshaw', 1)",58,49,
mariusv/nginx-badbot-blocker,"Block bad, possibly even malicious web crawlers (automated bots) using Nginx","Nginx Bad Bot Blocker
===============

**223 (and growing) Nginx rules to block bad bots.**

Bad bots are defined as:

- E-mail harvesters
- Content scrapers
- Spam bots
- Vulnerability scanners
- Aggressive bots that provide little value
- Bots linked to viruses or malware
- Government surveillance bots
- ~~~Russian search engine Yandex~~~ (Per users request Yandex was removed)
- Chinese search engine Baidu
- Spamhaus IP list block


## Installation

If you have a bizarre or complicated setup, be sure to look everything
over before installing. However, for anyone with a fairly straightforward Nginx installation, this should work without any issues. 

**Step 1.)** Clone the Nginx Bad Bot Blocker repository into your Nginx directory.

```
cd /etc/nginx
git clone https://github.com/mariusv/nginx-badbot-blocker.git
```

**Step 2.)** Edit `/etc/nginx/nginx.conf` and add the following at the end of the `http` block, before the closing `}`

```
##
# Nginx Bad Bot Blocker
##
include nginx-badbot-blocker/blacklist.conf;
include nginx-badbot-blocker/blockips.conf;
```

**Step 3.)** Run the following command to verify your Nginx configuration is valid. (*Note: You may need to prepend sudo to this command.*)

```
nginx -t
```

You should get an output that looks something like this:

```
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf test is successful
```

**Step 4.)** Reload Nginx and you're all set!

```
sudo service nginx reload
```

---

## Further information

### Baidu

Unless your website is written in Chinese, you probably don't
get any traffic from them. They mostly just waste bandwidth and consume resources.


### Bots Are Liars

Bots try to make themselves look like other software by disguising their
useragent. Their useragents may look harmless, perfectly legitimate even.
For example, ""^Java"" but according to
[Project Honeypot](https://www.projecthoneypot.org/harvester_useragents.php),
it's actually one of the most dangerous.


### Spamhaus IP Block

Block Spamhaus Lasso Drop Spam IP Address. (I'll keep this list updated)

***UPDATED 16/01/2018***

",,2014-04-01T21:28:30Z,2020-09-03T06:43:17Z,11,6,858,71,"('mitchellkrogza', 400), ('mariusv', 37), ('Mitchell Krog', 9), ('Allan Bomfim', 4), ('anthonyjfio', 2), ('Doug Beney', 1), ('herrbischoff', 1), ('Infern1', 1), ('dinhnv', 1), ('maxime', 1), ('root', 1)",6,3,
Baekalfen/PyBoy,Game Boy emulator written in Python,"



__If you have any questions, or just want to chat, [join us on Discord](https://discord.gg/Zrf2nyH).__

[![Discord](https://img.shields.io/discord/584149554132418570?style=for-the-badge&logo=Discord&label=PyBoy)](https://discord.gg/Zrf2nyH)

<!---
Generate GIF with the layout and captions
-->

  
    
      Train RL agents to play Pokemon Red
      
      Rewind any game
      
    
    
      
        
        
        
         -->
        
        
         -->
        
      
      
        
      
    
    
      Play the classics
      
      Create your own AI
      
      Beat world records with AI
      
    
    
      
        
      
      
        
      
      
        
      
    
  


Getting Started
===============
The instructions are simple:

```sh
$ pip install pyboy
```

For details, see [installation instructions](https://github.com/Baekalfen/PyBoy/wiki/Installation).

Now you're ready! Either use PyBoy directly from the terminal
```sh
$ pyboy game_rom.gb
```

Or use it in your Python scripts:
```python
from pyboy import PyBoy
pyboy = PyBoy('game_rom.gb')
while pyboy.tick():
    pass
pyboy.stop()
```

<!-- Or using the context manager:
```python
from pyboy import PyBoy
with PyBoy('game_rom.gb') as pyboy:
    while pyboy.tick():
        pass
``` -->


The API
=======

If you are looking to make a bot or AI, then these resources are a good place to start:
 * [PyBoy API Documentation](https://baekalfen.github.io/PyBoy/index.html)
 * [Wiki Pages](https://github.com/Baekalfen/PyBoy/wiki/)
   * [Using PyBoy with Gym](https://github.com/Baekalfen/PyBoy/wiki/Using-PyBoy-with-Gym)
   * [Example: Kirby](https://github.com/Baekalfen/PyBoy/wiki/Example-Kirby)
   * [Example: Tetris](https://github.com/Baekalfen/PyBoy/wiki/Example-Tetris)
   * [Example: Super Mario Land](https://github.com/Baekalfen/PyBoy/wiki/Example-Super-Mario-Land)
   * [Code Examples](https://github.com/Baekalfen/PyBoy/tree/master/extras/examples)
 * [Discord](https://discord.gg/Zrf2nyH)


When the emulator is running, you can easily access [PyBoy's API](https://baekalfen.github.io/PyBoy/index.html):
```python
pyboy.set_emulation_speed(0) # No speed limit
pyboy.button('down')
pyboy.button('a')
pyboy.tick() # Process at least one frame to let the game register the input
value_of_interest = pyboy.memory[0xC345]

pil_image = pyboy.screen.image
pil_image.save('screenshot.png')
```

The [Wiki](https://github.com/Baekalfen/PyBoy/wiki) shows how to interface with PyBoy from your own project.

Performance
===========

Performance is a priority for PyBoy, to make your AI training and scripts as fast as possible.

The easiest way to improve your performance, is to skip rendering of unnecessary frames. If you know your
character takes X frames to move, or the game doesn't take input every frame, you can skip those to potentially triple
your performance. All game logic etc. will still process.

Here is a simple comparison of rendering every frame, rendering every 15th frame, and not rendering any frames (higher is better). See [`pyboy.tick`](https://docs.pyboy.dk/#pyboy.PyBoy.tick) for how it works. Your performance will depend on the game.


  
    
      
        Full rendering
      
      
        Frame-skip 15
      
      
        No rendering
      
    
    
      
      x124 realtime
      
      
      x344 realtime
      
      
      x395 realtime
      
    
 


```python
for _ in range(target):
    pyboy.tick()

```



```python
for _ in range(target//15):
    pyboy.tick(15, True)

```



```python
pyboy.tick(target)

```


  


The Game Boy was originally running at 60 frames per second, so a speed-up of 100x realtime is 6,000 frames per
second. And trivially from the table above, simulating 395 hours of gameplay can be done in 1 hour with no rendering.

It's also recommended to be running multiple instances of PyBoy in parallel. On an 8-core machine, you could potentially
do 3160 hours of gameplay in 1 hour.

Contributing
============
Any contribution is appreciated. The currently known problems are tracked in [the Issues tab](https://github.com/Baekalfen/PyBoy/issues). Feel free to take a swing at any one of them. If you have something original in mind, come and [discuss it on on Discord](https://discord.gg/Zrf2nyH).

[![Discord](https://img.shields.io/discord/584149554132418570?style=for-the-badge&logo=Discord&label=PyBoy)](https://discord.gg/Zrf2nyH)

For the more major features, there are the following that you can give a try. They are also described in more detail in the [project list in the Wiki](https://github.com/Baekalfen/PyBoy/wiki/Student-Projects):
* Hacking games
* Link Cable
* Debugger (VSCode, GDB, terminal or otherwise)
* AI - [use the `api`](https://baekalfen.github.io/PyBoy/index.html) or game wrappers to train a neural network
* Game Wrappers - make wrappers for popular games

If you want to implement something which is not on the list, feel free to do so anyway. If you want to merge it into our repo, then just send a pull request and we will have a look at it.
","'cython', 'emulator', 'gameboy', 'gameboy-emulator', 'gameboy-emulator-library', 'pypy', 'python'",2015-05-29T11:58:11Z,2024-06-12T18:43:26Z,33,27,4492,75,"('Baekalfen', 576), ('krs013', 51), ('troelsy', 16), ('Thomas Li Fredriksen', 10), ('NicoleFaye', 9), ('nicoeps', 6), ('Thomas Fredriksen', 6), ('MathisFederico', 5), ('thatguy11325', 4), ('stillinbeta', 3), ('naclander', 3), ('grungi-ankhfire', 2), ('FKatenbrink', 2), ('Nathan Aclander', 2), ('Ramon Moraes', 2), ('cmacrae', 1), ('Fieoner', 1), ('jardiacaj', 1), ('JonathanMurray', 1), ('LittleNyima', 1), ('MaciekBaron', 1), ('stangerm2', 1), ('kr1tzy', 1), ('owen-crook', 1), ('posixpascal', 1), ('PWhiddy', 1), ('sofianedjerbi', 1), ('thomafred', 1), ('marginalhours', 1), ('eugeneyjy', 1), ('rkaufusi', 1), ('thatguy', 1), ('thatguy11325', 1)",18,16,
mozilla/BrowserQuest,DEPRECATED - A HTML5/JavaScript multiplayer game experiment,"BrowserQuest
============

BrowserQuest is a HTML5/JavaScript multiplayer game experiment.


Documentation
-------------

Documentation is located in client and server directories.


License
-------

Code is licensed under MPL 2.0. Content is licensed under CC-BY-SA 3.0.
See the LICENSE file for details.


Credits
-------
Created by [Little Workshop](http://www.littleworkshop.fr):

* Franck Lecollinet - [@whatthefranck](http://twitter.com/whatthefranck)
* Guillaume Lecollinet - [@glecollinet](http://twitter.com/glecollinet)","'abandoned', 'unmaintained'",2011-09-30T18:47:48Z,2023-07-14T00:56:50Z,4,4,9229,591,"('sork', 81), ('glecollinet', 62), ('mkrecny', 8), ('bnoordhuis', 2)",0,0,
ClassicOldSong/bPlayer,A great replacement for audio elements,"bPlayer
========

[![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square)](https://raw.githubusercontent.com/ClassicOldSong/bPlayer/master/LICENSE) [![npm](https://img.shields.io/npm/dt/bplayer.svg?style=flat-square)](https://www.npmjs.com/package/bplayer)

[Demo](http://bplayer.js.org)

bPlayer - A great replacement for audio elements

No need for jQuery, with lots of original audio api maintained, together with title, artists and cover supported in addition. Much more pretty than the browser's default audio player!

Aimed at replacing the default audio player of any modern browser, brining you a united experience of audio playing.

---

***Very Important!!!***
------------
Since v0.2.0-alpha.1, the behavior of bPlayer differs form v0.1.0!! Behavior changed from append to ***replace the attached element directly***! All attributes are maintained and can be accessed as before!

MUST BE CAREFUL WHEN YOU UPDATE!!

Installation
------------

	git clone https://github.com/classicoldsong/bPlayer.git

or

	npm install bplayer

then

	

or

	import bPlayer from 'bplayer';

### Configuration and usage

Include bplayer.js, put an audio element with 'controls' attribute, use `bPlayer.scan()` to scan the document after dom content is loaded, and it's all done~ Otherwise you can attach to an element manually.

Here's a simple example:

~~~ javascript

	window.onload = function(){
		var bplayer1 = new bPlayer(""#bp1"");
		bplayer.color(""/*Theme color*/"").src(""/*Audio URL*/"").title(""/*Title1*/"").artist(""/*Artist*/"").cover(""/*Cover URL*/"");
		var bp2 = document.querySelector('#bp2')
		var bplayer2 = new bPlayer(bp2, {
			cover: ""/*Cover URL*/"",
			title: ""/*Title2*/"",
			artist: ""/*Artist*/"",
			autoplay: false /*Bool, whether play the music when created*/,
			slim: true, /*Bool, whether enable 'slim mode'*/
		});
		bPlayer.scan();
	}

...




~~~

When the web page finished loading you will see:

~~~ javascript
...
...
...
~~~

**Notice 1:** *After loaded bPlayer, all audio nodes will be scanned if you execute `bPlayer.scan()`, and then all audio nodes with `'controls=""bplayer""'` attribute will be turned into bplayer nodes. All attributes of the original audio node will be maintained, including id, class and style.*

**Notice 2:** *When manually attached an audio node, the original audio element will be used as the audio source.*

### API

##### Default method

~~~ javascript
bPlayer.version; // Get the version of bPlayer
bPlayer.scan(); // Scan the page for 'audio' tags with 'controls' attribute and replace them to bPlayer
var bplayer = new bPlayer([Node]);
~~~
+ `bplayer.data([JSON]) // Set ALL options of the player, leave empty will givebackJSON data which describes the music`
+ `bplayer.slim([bool]) // Whether enable 'slim mode'`
+ `bplayer.src([url]) // Set the src to audio source, leave empty will giveback current value`
+ `bplayer.cover([url]) // Set the url of cover, leave empty will giveback current value`
+ `bplayer.title([string]) // Set the title, leave empty will giveback current value`
+ `bplayer.artist([string]) // Set the artist, leave empty will giveback current value`
+ `bplayer.color([color]) // Set the color of progress bar and volme bar, leave empty will giveback current value`
+ `bplayer.volume([number 0 ~ 1]) // Set volume, leave empty will giveback current value`
+ `bplayer.muted([bool]) // Set muted, leave empty will giveback current value`
+ `bplayer.autoplay([bool]) // Set whether play automatically when new audio is loaded, leave empty will giveback current value, if you would like to play immediately after creation, please set this property before 'src'`
+ `bplayer.loop([bool]) // Set whether loop automatically, leave empty will giveback current value`
+ `bplayer.play() // Play`
+ `bplayer.pause() // Pause`
+ `bplayer.paused() // Acquire the playing status`
+ `bplayer.addListener(type, listener[, useCapture]) // Add an event listener to this player`
+ `bplayer.removeListener(type, listener[, useCapture]) // Remove an event listener from this player`

##### Using JSON for creation
~~~ javascript
var bplayer = new bPlayer(""#bplayer""/* CSS selector or node object */, {
	src: ""aaa.mp3"", // String
	title: ""Title"", // String
	artist: ""artist"", // String
	color: ""color"", // String
	volume: 1, // Number, [0~1]
	muted: false, // Bool
	autoplay: false, // Bool
	loop: false, // Bool
	slim: false // Bool
});
~~~

*No need for bplayer.init() when using JSON for creation. Key `element` must exist while others can be left unset*

##### BPLAYER Tag
As to those elements that have been turned into bplayer, you can still access them just like the original audio element, such as `element.src = 'aaa.mp3'`, supported features are listed below:
+ `element.bp` Get bplayer object of this element
+ `element.play()`
+ `element.pause()`
+ `element.data`
+ `element.slim`
+ `element.src`
+ `element.cover`
+ `element.title`
+ `element.artist`
+ `element.color`
+ `element.volume`
+ `element.muted`
+ `element.autoplay`
+ `element.loop`
+ `element.paused`
+ `element.addListener(...)`
+ `element.removeListener(...)`

## TBD

- [ ] ~~Lyric~~ (Abandoned)
- [ ] ~~Playlist~~ (Abandoned)
- [x] Events API

License: MIT
-------

Any questions or suggestions please submit an Issue or make a PullRequest or contact my E-mail syqlds@126.com

And visiting my blog [Dimension C](https://ccoooss.com) is also welcomed.

**All copyrights of audios used in DEMO are reserved by original authors**


bPlayer
========

[Demo演示](https://classicoldsong.github.io/bPlayer)

bPlayer - 原生音频播放器的绝佳替代品

无需jQuery且保留了大量原生audio元素的api，同时增加了歌曲名称、艺术家和专辑封面的显示

旨在取代各浏览器的原生播放器以带来更丰富的操作以及更统一的体验

---

***非常重要！！***
------------
bPlayer 自 v0.2.0-alpha.1 起，行为与 v0.1.0 时不同！！由原先的append到绑定的元素的末尾改为了***直接替换被绑定的元素***！替换后原先元素的所有attribute全部保留，可以与替换之前一样操作！

更新请务必注意！！！

安装
------------

	git clone https://github.com/classicoldsong/bPlayer.git

或者

	npm install bplayer

然后

	

或者

	import bPlayer from 'bplayer';

### 配置及使用

引入bplayer.js，丢个带controls的audio标签在页面里，页面加载完毕后使用`bPlayer.scan();`扫描页面，然后就搞定了~或者手动绑定元素也可以的说

下面是一个简单的示例：

~~~ javascript

	window.onload = function(){
		var bplayer1 = new bPlayer(""#bp1"");
		bplayer.color(""/*进度条颜色*/"").src(""/*歌曲链接*/"").title(""/*歌曲名称1*/"").artist(""/*艺术家*/"").cover(""/*专辑封面链接*/"");
		var bp2 = document.querySelector('#bp2')
		var bplayer2 = new bPlayer(bp2, {
			cover: ""/*专辑封面链接*/"",
			title: ""/*歌曲名称2*/"",
			artist: ""/*艺术家*/"",
			autoplay: false /*Bool, 是否自动播放*/,
			slim: true, /*Bool, 是否苗条模式*/
		});
		bPlayer.scan();
	}

...




~~~

页面加载完毕后你看到的是：

~~~ javascript
...
...
...
~~~

**注意1：** *引入bPlayer后，会在您执行`bPlayer.scan()`以后扫描页面内的所有audio节点，并将含有`controls=""bplayer""`属性的audio节点转换为bplayer节点。原audio节点的所有attribute保留。*

**注意2：** *手动绑定audio标签时将使用原audio标签作为音频来源。*

### API

##### 链式操作法

~~~ javascript
bPlayer.version; // 获取bPlayer版本
bPlayer.scan(); // 扫描页面内带有'controls'属性的'audio'标签并将它们转化为bPlayer
var bplayer = new bPlayer([Node]);
~~~
+ `bplayer.data([JSON]) // 通过JSON刷新所有选项，留空返回当前歌曲信息`
+ `bplayer.slim([bool]) // 设定是否开启苗条模式`
+ `bplayer.src([url]) // 设定歌曲链接，留空返回当前值`
+ `bplayer.cover([url]) // 设定封面链接，留空返回当前值`
+ `bplayer.title([string]) // 设定标题，留空返回当前值`
+ `bplayer.artist([string]) // 设定艺术家，留空返回当前值`
+ `bplayer.color([color]) // 设定进度条颜色，留空返回当前值`
+ `bplayer.volume([number 0 ~ 1]) // 设定音量，留空返回当前值`
+ `bplayer.muted([bool]) // 设定静音，留空返回当前值`
+ `bplayer.autoplay([bool]) // 设定自动播放，留空返回当前值，若希望创建后立即播放请在src前设置此项`
+ `bplayer.loop([bool]) // 设定循环动播放，留空返回当前值`
+ `bplayer.play() // 播放`
+ `bplayer.pause() // 暂停`
+ `bplayer.paused() // 获取播放状态`
+ `bplayer.addListener(type, listener[, useCapture]) // 绑定事件`
+ `bplayer.removeListener(type, listener[, useCapture]) // 解绑事件`

##### JSON传入法
~~~ javascript
var bplayer = new bPlayer({
	element: ""#bplayer"" // CSS选择器或者Node对象
	src: ""aaa.mp3"", // String, 歌曲链接地址
	title: ""Title"", // String, 歌曲标题
	artist: ""artist"", // String, 歌曲艺术家
	color: ""color"", // String, 颜色代码
	volume: 1, // Number, [0~1], 音量大小
	muted: false, // Bool, 是否静音
	autoplay: false, // Bool, 是否自动播放
	loop: false, // Bool, 是否开启循环
	slim: false // Bool, 是否开启苗条模式
});
~~~

*使用JSON传入法时无需使用bplayer.init()进行初始化，创建bplayer时将自动处理完毕。选项允许缺省，但是`element`字段必须存在*

##### BPLAYER标签
对于已经被attach的元素，可以直接在元素上操作，操作方式与原生audio大同小异，比如`element.src = 'aaa.mp3'`，目前支持的有：
+ `element.bp` 获取当前元素的bPlayer对象
+ `element.play()`
+ `element.pause()`
+ `element.data`
+ `element.slim`
+ `element.src`
+ `element.cover`
+ `element.title`
+ `element.artist`
+ `element.color`
+ `element.volume`
+ `element.muted`
+ `element.autoplay`
+ `element.loop`
+ `element.paused`
+ `element.addListener(...)`
+ `element.removeListener(...)`

## TBD

- [ ] ~~歌词~~（已放弃，下个播放器见）
- [ ] ~~播放列表~~（已放弃，下个播放器见）
- [x] 原生事件API

许可证：MIT
-------

如有疑问或者建议欢迎提Issue或者PullRequest或者联系我的邮箱 syqlds@126.com

当然也欢迎访问我的博客 [C次元](https://ccoooss.com)

**DEMO中使用的音乐版权归原作者所有**
","'audio-player', 'bplayer', 'enhancement', 'js'",2016-02-11T20:08:52Z,2017-08-24T08:45:46Z,3,1,67,5,"('ClassicOldSong', 97), ('Myer921', 1), ('tcdw', 1)",2,0,
lets-blade/blade,:rocket: Lightning fast and elegant mvc framework for Java8,"
    

Based on Java8 + Netty4 to create a lightweight, high-performance, simple and elegant Web framework 😋
Spend 1 hour to learn it to do something interesting, a tool in addition to the other available frameworks.

    🐾 Quick Start |
    🌚 Documentation |
    :green_book: Guidebook |
    💰 Donate |
    🇨🇳 简体中文


    
    
    
    
    
    


***

## What Is Blade?

`Blade` is a pursuit of simple, efficient Web framework, so that `JavaWeb` development becomes even more powerful, both in performance and flexibility.
If you like to try something interesting, I believe you will love it.
If you think it's good, you can support it with a [star](https://github.com/lets-blade/blade/stargazers) or by [donating](https://ko-fi.com/hellokaton) :blush:

## Features

* [x] A new generation MVC framework that doesn't depend on other libraries
* [x] Get rid of SSH's bloated, modular design
* [x] Source is less than `500kb`, learning it is also simple
* [x] RESTful-style routing design
* [x] Template engine support, view development more flexible
* [x] High performance, 100 concurrent qps 20w/s
* [x] Run the `JAR` package to open the web service
* [x] Streams-style API
* [x] `CSRF` and `XSS` defense
* [x] `Basic Auth` and `Authorization`
* [x] Supports plug-in extensions
* [x] Support webjars resources
* [x] Tasks based on `cron` expressions
* [x] Built-in a variety of commonly used middleware
* [x] Built-in Response output
* [x] JDK8 +

## Overview

» Simplicity: The design is simple, easy to understand and doesn't introduce many layers between you and the standard library. The goal of this project is that the users should be able to understand the whole framework in a single day.
» Elegance: `blade` supports the RESTful style routing interface, has no invasive interceptors and provides the writing of a DSL grammar.
» Easy deploy: supports `maven` package `jar` file running.

## Quick Start

Create a basic `Maven` or `Gradle` project.

> Do not create a `webapp` project, Blade does not require much trouble.

Run with `Maven`:

```xml

    com.hellokaton
    blade-core
    2.1.2.RELEASE

```

or `Gradle`:

```sh
compile 'com.hellokaton:blade-core:2.1.2.RELEASE'
```

Write the `main` method and the `Hello World`:

```java
public static void main(String[] args) {
    Blade.create().get(""/"", ctx -> ctx.text(""Hello Blade"")).start();
}
```

Open http://localhost:9000 in your browser to see your first `Blade` application!

## Contents

- [**`Register Route`**](#register-route)
    - [**`HardCode`**](#hardCode)
    - [**`Controller`**](#controller)
- [**`Request Parameter`**](#request-parameter)
    - [**`URL Parameter`**](#URL-parameter)
    - [**`Form Parameter`**](#form-parameter)
    - [**`Path Parameter`**](#path-parameter)
    - [**`Body Parameter`**](#body-parameter)
    - [**`Parse To Model`**](#parse-to-model)
- [**`Get Environment`**](#get-environment)
- [**`Get Header`**](#get-header)
- [**`Get Cookie`**](#get-cookie)
- [**`Static Resource`**](#static-resource)
- [**`Upload File`**](#upload-file)
- [**`Download File`**](#download-file)
- [**`Set Session`**](#set-session)
- [**`Render To Browser`**](#render-to-browser)
    - [**`Render Response`**](#render-json)
    - [**`Render Text`**](#render-text)
    - [**`Render Html`**](#render-html)
- [**`Render Template`**](#render-template)
    - [**`Default Template`**](#default-template)
    - [**`Jetbrick Template`**](#jetbrick-template)
- [**`Redirects`**](#redirects)
- [**`Write Cookie`**](#write-cookie)
- [**`Web Hook`**](#web-hook)
- [**`Logging`**](#logging)
- [**`Basic Auth`**](#basic-auth)
- [**`Change Server Port`**](#change-server-port)
- [**`Configuration SSL`**](#configuration-ssl)
- [**`Custom Exception Handler`**](#custom-exception-handler)

## Register Route

### HardCode

```java
public static void main(String[] args) {
    // Create multiple routes GET, POST, PUT, DELETE using Blade instance
    Blade.create()
        .get(""/user/21"", getting)
        .post(""/save"", posting)
        .delete(""/remove"", deleting)
        .put(""/putValue"", putting)
        .start();
}
```

### `Controller`

```java
@Path
public class IndexController {

    @GET(""/login"")
    public String login(){
        return ""login.html"";
    }
    
    @POST(value = ""/login"", responseType = ResponseType.JSON)
    public RestResponse doLogin(RouteContext ctx){
        // do something
        return RestResponse.ok();
    }

}
```

## Request Parameter

### URL Parameter

**Using RouteContext**

```java
public static void main(String[] args) {
    Blade.create().get(""/user"", ctx -> {
        Integer age = ctx.queryInt(""age"");
        System.out.println(""age is:"" + age);
    }).start();
}
```

**Using `@Query` annotation**

```java
@GET(""/user"")
public void savePerson(@Query Integer age){
  System.out.println(""age is:"" + age);
}
```

Test it with sample data from the terminal

```bash
curl -X GET http://127.0.0.1:9000/user?age=25
```

### Form Parameter

Here is an example:

**Using RouteContext**

```java
public static void main(String[] args) {
    Blade.create().get(""/user"", ctx -> {
        Integer age = ctx.fromInt(""age"");
        System.out.println(""age is:"" + age);
    }).start();
}
```

**Using `@Form` Annotation**

```java
@POST(""/save"")
public void savePerson(@Form String username, @Form Integer age){
  System.out.println(""username is:"" + username + "", age is:"" + age);
}
```

Test it with sample data from the terminal

```bash
curl -X POST http://127.0.0.1:9000/save -F username=jack -F age=16
```

### Path Parameter

**Using RouteContext**

```java
public static void main(String[] args) {
    Blade blade = Blade.create();
    // Create a route: /user/:uid
    blade.get(""/user/:uid"", ctx -> {
        Integer uid = ctx.pathInt(""uid"");
        ctx.text(""uid : "" + uid);
    });

    // Create two parameters route
    blade.get(""/users/:uid/post/:pid"", ctx -> {
        Integer uid = ctx.pathInt(""uid"");
        Integer pid = ctx.pathInt(""pid"");
        String msg = ""uid = "" + uid + "", pid = "" + pid;
        ctx.text(msg);
    });
    
    // Start blade
    blade.start();
}
```

**Using `@PathParam` Annotation**

```java
@GET(""/users/:username/:page"")
public void userTopics(@PathParam String username, @PathParam Integer page){
    System.out.println(""username is:"" + usernam + "", page is:"" + page);
}
```

Test it with sample data from the terminal

```bash
curl -X GET http://127.0.0.1:9000/users/hellokaton/2
```

### Body Parameter

```java
public static void main(String[] args) {
    Blade.create().post(""/body"", ctx -> {
        System.out.println(""body string is:"" + ctx.bodyToString());
    }).start();
}
```

**Using `@Body` Annotation**

```java
@POST(""/body"")
public void readBody(@Body String data){
    System.out.println(""data is:"" + data);
}
```

Test it with sample data from the terminal

```bash
curl -X POST http://127.0.0.1:9000/body -d '{""username"":""hellokaton"",""age"":22}'
```

### Parse To Model

This is the `User` model.

```java
public class User {
    private String username;
    private Integer age;
    // getter and setter
}
```

**By Annotation**

```java
@POST(""/users"")
public void saveUser(@Form User user) {
    System.out.println(""user => "" + user);
}
```

Test it with sample data from the terminal

```bash
curl -X POST http://127.0.0.1:9000/users -F username=jack -F age=16
```

**Custom model identification**

```java
@POST(""/users"")
public void saveUser(@Form(name=""u"") User user) {
    System.out.println(""user => "" + user);
}
```

Test it with sample data from the terminal

```bash
curl -X POST http://127.0.0.1:9000/users -F u[username]=jack -F u[age]=16
```

**Body Parameter To Model**

```java
@POST(""/body"")
public void body(@Body User user) {
    System.out.println(""user => "" + user);
}
```

Test it with sample data from the terminal

```bash
curl -X POST http://127.0.0.1:9000/body -d '{""username"":""hellokaton"",""age"":22}'
```

## Get Environment

```java
Environment environment = WebContext.blade().environment();
String version = environment.get(""app.version"", ""0.0.1"");
```

## Get Header

**By Context**

```java
@GET(""header"")
public void readHeader(RouteContext ctx){
    System.out.println(""Host => "" + ctx.header(""Host""));
    // get useragent
    System.out.println(""UserAgent => "" + ctx.userAgent());
    // get client ip
    System.out.println(""Client Address => "" + ctx.address());
}
```

**By Annotation**

```java
@GET(""header"")
public void readHeader(@Header String host){
    System.out.println(""Host => "" + host);
}
```

## Get Cookie

**By Context**

```java
@GET(""cookie"")
public void readCookie(RouteContext ctx){
    System.out.println(""UID => "" + ctx.cookie(""UID""));
}
```

**By Annotation**

```java
@GET(""cookie"")
public void readCookie(@Cookie String uid){
    System.out.println(""Cookie UID => "" + uid);
}
```

## Static Resource

Blade builds a few static resource catalog, as long as you will save the resource file in the static directory under the classpath, and then browse http://127.0.0.1:9000/static/style.css

If you want to customize the static resource URL

```java
Blade.create().addStatics(""/mydir"");
```

Of course you can also specify it in the configuration file. `application.properties` (location in classpath)

```bash
mvc.statics=/mydir
```

## Upload File

**By Request**

```java
@POST(""upload"")
public void upload(Request request){
    request.fileItem(""img"").ifPresent(fileItem -> {
        fileItem.moveTo(new File(fileItem.getFileName()));
    });
}
```

**By Annotation**

```java
@POST(""upload"")
public void upload(@Multipart FileItem fileItem){
    // Save to new path
    fileItem.moveTo(new File(fileItem.getFileName()));
}
```

## Download File

```java
@GET(value = ""/download"", responseType = ResponseType.STREAM)
public void download(Response response) throws IOException {
    response.write(""abcd.pdf"", new File(""146373013842336153820220427172437.pdf""));
}
```

**If you want to preview certain files in your browser**

```java
@GET(value = ""/preview"", responseType = ResponseType.PREVIEW)
public void preview(Response response) throws IOException {
    response.write(new File(""146373013842336153820220427172437.pdf""));
}
```

## Set Session

The session is disabled by default, you must enable the session.

```java
Blade.create()
     .http(HttpOptions::enableSession)
     .start(Application.class, args);
```

> 💡 It can also be enabled using a configuration file，`http.session.enabled=true` 

```java
public void login(Session session){
    // if login success
    session.attribute(""login_key"", SOME_MODEL);
}
```

## Render To Browser

### Render Response

**By Context**

```java
@GET(""users/json"")
public void printJSON(RouteContext ctx){
    User user = new User(""hellokaton"", 18);
    ctx.json(user);
}
```

**By Annotation**

This form looks more concise 😶

```java
@GET(value = ""/users/json"", responseType = ResponseType.JSON)
public User printJSON(){
    return new User(""hellokaton"", 18);
}
```

### Render Text

```java
@GET(""text"")
public void printText(RouteContext ctx){
    ctx.text(""I Love Blade!"");
}
```

or

```java
@GET(value = ""/text"", responseType = ResponseType.TEXT)
public String printText(RouteContext ctx){
    return ""I Love Blade!"";
}
```

### Render Html

```java
@GET(""html"")
public void printHtml(RouteContext ctx){
    ctx.html(""I Love Blade!"");
}
```

or

```java
@GET(value = ""/html"", responseType = ResponseType.HTML)
public String printHtml(RouteContext ctx){
    return ""I Love Blade!"";
}
```

## Render Template

By default all template files are in the templates directory; in most of the cases you do not need to change it.

### Default Template

By default, Blade uses the built-in template engine, which is very simple. In a real-world web project, you can try several other extensions.

```java
public static void main(String[] args) {
    Blade.create().get(""/hello"", ctx -> {
        ctx.attribute(""name"", ""hellokaton"");
        ctx.render(""hello.html"");
    }).start(Hello.class, args);
}
```

The `hello.html` template

```html



    
    Hello Page



    Hello, ${name}



```

### Jetbrick Template

**Config Jetbrick Template**

Create a `BladeLoader` class and load some config

```java
@Bean
public class TemplateConfig implements BladeLoader {

    @Override
    public void load(Blade blade) {
        blade.templateEngine(new JetbrickTemplateEngine());
    }

}
```

Write some data for the template engine to render

```java
public static void main(String[] args) {
    Blade.create().get(""/hello"", ctx -> {
        User user = new User(""hellokaton"", 50);
        ctx.attribute(""user"", user);
        ctx.render(""hello.html"");
    }).start(Hello.class, args);
}
```

The `hello.html` template

```html



    
    Hello Page



    Hello, ${user.username}

    #if(user.age > 18)
        Good Boy!
    #else
        Gooood Baby!
    #end



```

[Render API](http://static.javadoc.io/com.hellokaton/blade-core/2.1.2.RELEASE/com/hellokaton/blade/mvc/http/Response.html#render-com.ModelAndView-)

## Redirects

```java
@GET(""redirect"")
public void redirectToGithub(RouteContext ctx){
    ctx.redirect(""https://github.com/hellokaton"");
}
```

[Redirect API](http://static.javadoc.io/com.hellokaton/blade-core/2.1.2.RELEASE/com/hellokaton/blade/mvc/http/Response.html#redirect-java.lang.String-)

## Write Cookie

```java
@GET(""write-cookie"")
public void writeCookie(RouteContext ctx){
    ctx.cookie(""hello"", ""world"");
    ctx.cookie(""UID"", ""22"", 3600);
}
```

[Cookie API](http://static.javadoc.io/com.hellokaton/blade-core/2.1.2.RELEASE/com/hellokaton/blade/mvc/http/Response.html#cookie-java.lang.String-java.lang.String-)

## Web Hook

`WebHook` is the interface in the Blade framework that can be intercepted before and after the execution of the route.

```java
public static void main(String[] args) {
    // All requests are exported before execution before
    Blade.create().before(""/*"", ctx -> {
        System.out.println(""before..."");
    }).start();
}
```

## Logging

Blade uses slf4j-api as logging interface, the default implementation of a simple log package (modified from simple-logger); if you need complex logging you can also use a custom library, you only need to exclude the `blade-log` from the dependencies.

```java
private static final Logger log = LoggerFactory.getLogger(Hello.class);

public static void main(String[] args) {
    log.info(""Hello Info, {}"", ""2017"");
    log.warn(""Hello Warn"");
    log.debug(""Hello Debug"");
    log.error(""Hello Error"");
}
```

## Basic Auth

Blade includes a few middleware, like Basic Authentication; of course, it can also be customized to achieve more complex goals.

```java
public static void main(String[] args) {
    Blade.create().use(new BasicAuthMiddleware()).start();
}
```

Specify the user name and password in the `application.properties` configuration file.

```bash
http.auth.username=admin
http.auth.password=123456
```

## Change Server Port

There are three ways to modify the port: hard coding it, in a configuration file, and through a command line parameter.

**Hard Coding**

```java
Blade.create().listen(9001).start();
```

**Configuration For `application.properties`**

```bash
server.port=9001
```

**Command Line**

```bash
java -jar blade-app.jar --server.port=9001
```

## Configuration SSL

**Configuration For `application.properties`**

```bash
server.ssl.enable=true
server.ssl.cert-path=cert.pem
server.ssl.private-key-path=private_key.pem
server.ssl.private-key-pass=123456
```
** Configuration using INettySslCustomizer **

```bash
#Specify any properties your customizer needs, for example
server.ssl.enable=true
server.keystore.path=fully qualified path
server.keystore.type=PKCS12
server.keystore.password=mypass
server.keystore.alias=optional alias
```

* Create your implementation of INettySslCustomizer
* Register it with Blade class

```java
	   MyNettySslCustomizer nc = new MyNettySslCustomizer();	
		Blade.create()
			.setNettySslCustomizer(nc)
			.start(App.class, args);
		}
```

Sample implementation of INettySslCustomizer

```java
public class MyNettySSLCustomizer implements INettySslCustomizer {

	public SslContext getCustomSslContext(Blade blade) {
		SslContext sslctx = null;

		// get my custom properties from the environment
		String keystoreType = blade.getEnv(""server.keystore.type"", null);
		String keystorePath = blade.getEnv(""server.keystore.path"", null);
		String keystorePass = blade.getEnv(""server.keystore.password"", null);

		if (verifyKeystore(keystoreType, keystorePath, keystorePass)) {

			try (FileInputStream instream = new FileInputStream(new File(keystorePath))) {

				// verify I can load store and password is valid
				KeyStore keystore = KeyStore.getInstance(keystoreType);
				char[] storepw = keystorePass.toCharArray();
				keystore.load(instream, storepw);
				
				KeyManagerFactory kmf = KeyManagerFactory.getInstance(KeyManagerFactory.getDefaultAlgorithm());
				kmf.init(keystore, storepw);
				sslctx = SslContextBuilder.forServer(kmf).build();
				
			} catch (Exception ex) {
				log.error(""Keystore validation failed "" + ex.getMessage());
			}
			
		} else {
			log.error(""Unable to load keystore, sslContext creation failed."");
		}

		return sslctx;
	}
```

## Custom Exception Handler

Blade has an exception handler already implemented by default; if you need to deal with custom exceptions, you can do it like follows.

```java
@Bean
public class GlobalExceptionHandler extends DefaultExceptionHandler {
    
    @Override
    public void handle(Exception e) {
        if (e instanceof CustomException) {
            CustomException customException = (CustomException) e;
            String code = customException.getCode();
            // do something
        } else {
            super.handle(e);
        }
    }

}
```

Besides looking easy, the features above are only the tip of the iceberg, and there are more surprises to see in the documentation and sample projects:

+ [Blade Demos](https://github.com/lets-blade/blade-demos)
+ [Awesome Blade](https://github.com/lets-blade/awesome-blade)

## Change Logs

[See Here](https://lets-blade.com/about/change-logs)

## Contact

- Twitter: [hellokaton](https://twitter.com/hellokaton)
- Mail: hellokaton@gmail.com

## Contributors

Thanks goes to these wonderful people

![contributors.svg](https://opencollective.com/blade/contributors.svg?width=890&button=false)

Contributions of any kind are welcome!

## Licenses

Please see [Apache License](LICENSE)
","'blade', 'java8', 'mvc-framework', 'netty4', 'restful', 'template-engine'",2015-06-10T03:35:49Z,2024-06-17T01:05:42Z,36,30,5824,285,"('hellokaton', 776), ('ydq', 18), ('psh686868', 14), ('chenchen42', 11), ('dependabotbot', 7), ('dongm2ez', 7), ('yuxino', 5), ('vzardlloo', 5), ('wuma2020', 4), ('jflourno', 4), ('Frederick-S', 4), ('andrea-ligios', 4), ('crossoverJie', 3), ('DQinYuan', 3), ('seguri', 2), ('UnAfraid', 2), ('dragon', 2), ('itszhengkun', 2), ('fishlikewater', 1), ('Kuangcp', 1), ('otuta', 1), ('LittleStrokesFellGreatOaks', 1), ('windbelike', 1), ('schneems', 1), ('stqp', 1), ('strogiyotec', 1), ('zaoangod', 1), ('eddie', 1), ('Rugved0103', 1), ('yai-dev', 1), ('Paul Kent', 1), ('Linuxea', 1), ('Kugin', 1), ('eas5', 1), ('Darren Royle', 1), ('aimerneige', 1)",18,15,
candycat1992/Unity_Shaders_Book,:book: 书籍《Unity Shader入门精要》源代码,"# 《Unity Shader入门精要》源代码

本项目是书籍《Unity Shader入门精要》的配套源代码。最新版本请移步本项目的Github页面。

# 源码下载

我们推荐您从Github上clone项目源码并及时检查更新。如果下载速度过慢可以移步百度网盘地址。

纸质版书籍可在以下链接购买：亚马逊、当当、京东

# 随书彩图

我们提供了包含书中所有插图的彩色版插图集锦：HTML，PDF。

# 2019年新增：改版后的第十八章

当年乐观地以为自己有时间写第二版，是我太年轻了…… 第一版由于我能力有限的确有很多问题，感谢大家一直以来的支持。当年在我有时间的时候曾经花了一些时间重写了第18章，本来是想要放到第二版里的，但是目前第二版遥遥无期，索性直接把改版后的第18章直接放出来，希望能让读者有新的收获：改版后的第18章。

# 第四章勘误

由于数学章是全书的重要基础，我们决定把第四章公开，来及时让读者获取最新的第四章数学章的内容：PDF。

**注意**：我们可能会根据读者勘误随时更新该文档，内容和页号可能会与读者手中的版本不同，实体书中的勘误会在每次重印时进行修正。

# 读者反馈和勘误

尽管我们在本书的编写过程中多次检查内容的正确性，但不可避免书中仍然会出现一些错误，欢迎读者批评指正。任何关于本书内容、源码等方面的问题，欢迎读者反映到本书源码所在的Github讨论页，也可以发邮件（lelefeng1992@gmail.com）联系笔者。

关于目前**已发现的错误**我们会及时在网上更新：勘误列表。

我们也维护了读者反馈的问题列表：FAQ。

# Unity版本

我们**推荐使用Unity 5.0以上的版本来编译本项目**。如果你打算**使用更低版本的Unity，那么在学习本书时可能就会遇到一些问题**：

* 你可能发现会有些菜单或变量在你的Unity中找不到，这可能就是由于Unity版本不同造成的。绝大多数情况下，本书的代码和指令仍然可以工作良好，但在一些特殊情况下，Unity可能会更改底层的实现细节，造成同样的代码会得到不一样的效果（例如，在非统一缩放时对法线进行变换）。

* 还有一些问题是Unity提供的内置变量、宏和函数，例如我们在书中经常会使用UnityObjectToWorldNormal内置函数把法线从模型空间变换到世界空间中，但这个函数是在Unity 5中才被引入的，因此如果读者使用的是Unity 5之前的版本就会报错。类似的情况还有和阴影相关的宏和变量等。

* 和Unity 4.x版本相比，Unity 5.x最大的变化之一就是很多以前只有在专业版才支持的功能，在免费版也同样提供了。因此，如果读者使用的是Unity 4.x免费版，可能会发现本书中的某些材质会出错。

## Unity 5.3及其以下Unity 5.x版本

**分支链接**：[master](https://github.com/candycat1992/Unity_Shaders_Book/tree/master)

在本书编写时，我们使用的版本是Unity 5.3，因此使用这些Unity版本的读者请使用本项目[master](https://github.com/candycat1992/Unity_Shaders_Book/tree/master)分支的相关代码。

## Unity 5.4及其以上Unity 5.x版本

**分支链接**：[unity_5_4](https://github.com/candycat1992/Unity_Shaders_Book/tree/unity_5_4)

Unity 5.4对Shader部分进行了一些比较大的更新，比较明显的变化有：

* 使用了unity_XXX来代替原有的XXX变换矩阵，例如_Object2World被替换成了unity_ObjectToWorld，_World2Object被替换成了unity_WorldToObject（均在UnityShaderVariables.cginc文件中被声明），_LightMatrix0被替换成了unity_WorldToLight（在AutoLight.cginc文件中被声明）。

* 使用了一些内置函数来代替某些运算，例如mul(UNITY_MATRIX_MVP,*)相关计算被替换成了UnityObjectToClipPos(*)。

在学习本书时，读者需要注意代码中一些由于更新造成的变化。

### 升级Unity 5.5

从Unity 5.5开始，Unity在某些平台（如DX11、DX12、PS4、Xbox One、Metal）等平台对深度缓存进行了反转操作，使得在近平面处的深度值为1，而远平面处为0。这样做的原因主要是为了更加充分得利用浮点深度缓存，具体原因可以参见NVIDIA的相关博客[Depth Precision Visualized](https://developer.nvidia.com/content/depth-precision-visualized)。Unity在[Upgrading to Unity 5.5](https://docs.unity3d.com/Manual/UpgradeGuide55.html)和[Platform-specific rendering differences](https://docs.unity3d.com/Manual/SL-PlatformDifferences.html)文档中对此进行了说明。

在本书代码中，我们在第13章用到了深度纹理，其中对于使用了Linear01Depth、LinearEyeDepth等Unity内置函数的部分不受此变化影响，但我们在Chapter13-MotionBlurWithDepthTexture中直接访问了深度值来计算世界空间下的坐标：


```
// Get the depth buffer value at this pixel.
float d = SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture, i.uv_depth);
```

这使得在反转深度缓存的情况下会得到错误的结果。为了解决这个问题，我们可以使用内置宏来判断深度是否已被反转，并据此来做出相应的计算。变化后的代码如下：


```
// Get the depth buffer value at this pixel.
float d = SAMPLE_DEPTH_TEXTURE(_CameraDepthTexture, i.uv_depth);
#if defined(UNITY_REVERSED_Z)
	d = 1.0 - d;
#endif
```

## 截止到目前的Unity 2017版本

**分支链接**：[unity_2017_1](https://github.com/candycat1992/Unity_Shaders_Book/tree/unity_2017_1)

Unity 2017对Shader部分没有较大更新，我们主要做了以下更改来消除升级造成的Shader Warning信息：

* 使用内置的UnityObjectToViewPos(*)函数来代替mul(UNITY_MATRIX_MV, *)对顶点进行变换。

在学习本书时，读者需要注意代码中一些由于更新造成的变化。

# 使用说明

本书源码的组织方式大多按资源类型和章节进行划分，主要包含了以下关键文件夹：

| 文件夹 | 说明 | 
| ------------- |:-------------| 
|Assets/Scenes|包含了各章对应的场景，每个章节对应一个子文件夹，例如第七章所有场景所在的子文件夹为Assets/Scenes/Chapter7。每个场景的命名方式为Scene_章号_小节号_次小节号，例如7.2.3节对应的场景名为Scene_7_2_3。如果同一个小节包含了多个场景，那么会使用英文字母作为后缀依次表示，例如7.1.2节包含了两个场景Scene_7_1_2_a和Scene_7_1_2_b。|
|Assets/Shaders|包含了各章实现的Unity Shader文件，每个章节对应一个子文件夹，例如第七章实现的所有Unity Shader所在的子文件夹为Assets/Shaders/Chapter7。每个Unity Shader的命名方式为ChapterX-功能，例如第七章使用渐变纹理的Unity Shader名为Chapter7-RampTexture。|
|Assets/Materials|包含了各章对应的材质，每个章节对应一个子文件夹，例如第七章所有材质所在的子文件夹为Assets/Materials/Chapter7。每个材质的命名方式与它使用的Unity Shader名称相匹配，并以Mat作为后缀，例如使用名为Chapter7-RampTexture的Unity Shader的材质名称是RampTextureMat。|
|Assets/Scripts|包含了各章对应的C#脚本，每个章节对应一个子文件夹，例如第五章所有脚本所在的子文件夹为Assets/Scripts/Chapter5。|
|Assets/Textures|包含了各章使用的纹理贴图，每个章节对应一个子文件夹，例如第七章使用的所有纹理所在的子文件夹为Assets/Textures/Chapter7。|

除了上述文件夹外，源码中还包含了一些辅助文件夹，例如Assets/Editor文件夹中包含了一些需要在编辑器状态下运行的脚本，Assets/Prefabs文件夹下包含了各章使用的预设模型和其他常用预设模型等。


",,2015-08-22T14:52:54Z,2023-02-23T08:30:23Z,2,2,5315,261,"('candycat1992', 49), ('gary9716', 1)",1,1,
learn-co-students/js-beatles-loops-lab-bootcamp-prep-000,,"# Beatles Loops

## Objectives

* Build a for loop
* Build a while loop
* Build a do-while loop

## Instructions

Make sure you run the tests with `learn`.

1. Create a function `theBeatlesPlay`, which accepts two parameters--an array of
   musicians and an array of instruments. 

    * Create a variable with an empty array.
    * Use a `for loop`, which iterates over the array of musicians. Be careful
      about what value you set your `counter` variable to store. (Hint: Think
      about what the first index of an array is). 
    * The first time through the loop, it should create a string using the _first_
      index of the musicians array **and** the first index of the instruments
      array: `""John Lennon plays guitar""`. 
    * Add this string to the empty array you created. The loop should make the
      same sentence for every member of the musicians array. 
    * The function should return the array of new strings containing what
      instruments each musician plays.

2. Create a function `johnLennonFacts`. 

    * This function will accept one argument, an array of facts about John
      Lennon (note that it might not be exactly the following facts):

    ```js
    const facts = [
      ""He was the last Beatle to learn to drive"",
      ""He was never a vegetarian"",
      ""He was a choir boy and boy scout"",
      ""He hated the sound of his own voice""
    ];
    ```

    * Use a while loop to loop over the facts array and add `""!!!""` to the end of
    every fact.

    * Return an array of strings with exclamation points.

3. Create a function `iLoveTheBeatles` which accepts a number as a parameter. 

    * The function should create a variable that stores an empty array. 
    * Implement a do-while loop inside the function that adds `""I love the
      Beatles!""` to the empty array. 
    * The loop should then increment the number passed in as a parameter. The
      condition of the loop should check to see that the parameter number is
      less than `15`. It should contain a number of strings that represents the
      difference between the input number and `15`.
    * Return the array with the strings `""I love the Beatles!""`.
",,2016-08-22T22:34:06Z,2021-06-12T06:30:45Z,13,11,3,16,"('pletcher', 7), ('maxwellbenton', 7), ('maxwell', 6), ('victhevenot', 5), ('dependabotbot', 4), ('drakeltheryuujin', 4), ('ihollander', 3), ('ipc103', 2), ('lizbur10', 2), ('Adam Jonas', 1), ('ivalentine', 1), ('JessRudder', 1), ('alpha-convert', 1)",4,3,
wagiro/BurpBounty,"Burp Bounty (Scan Check Builder in BApp Store) is a extension of Burp Suite that allows you, in a quick and simple way, to improve the active and passive scanner by means of personalized rules through a very intuitive graphical interface.","
[![GitHub release](https://img.shields.io/github/release/wagiro/BurpBounty.svg)](https://github.com/wagiro/BurpBounty/releases) 
[![GitHub issues](https://img.shields.io/github/issues/wagiro/BurpBounty.svg)](https://github.com/wagiro/BurpBounty/issues) 
[![GitHub Downloads](https://img.shields.io/github/downloads/wagiro/BurpBounty/total.svg)]() 
[![Github Stars](https://img.shields.io/github/stars/wagiro/BurpBounty.svg?style=social&label=Stars)](https://github.com/wagiro/BurpBounty/) 
[![GitHub Followers](https://img.shields.io/github/followers/wagiro.svg?style=social&label=Follow)](https://github.com/wagiro/BurpBounty/)
[![Follow on Twitter](https://img.shields.io/twitter/follow/burpbounty.svg?style=social&label=Follow)](https://twitter.com/intent/follow?screen_name=burpbounty)


# Burp Bounty Free - Scan Check Builder (BApp Store)

This Burp Suite extension allows you, in a quick and simple way, to improve the active and passive burpsuite scanner by means of personalized rules through a very intuitive graphical interface. Through an advanced search of patterns and an improvement of the payload to send, we can create our own issue profiles both in the active scanner and in the passive.

Download releases:

* https://github.com/wagiro/BurpBounty/releases/



If you need more power, I invite you to try the new Burp Bounty Pro, which gives you more power and automation during your manual pentests.

More information at: [https://burpbounty.net](https://burpbounty.net) and [Burp Bounty Pro vs Free](https://burpbounty.net/burp-bounty-pro-vs-free/). 


## Usage

* Go to [Usage](https://github.com/wagiro/BurpBounty/wiki/usage) section or the slides of [Ekoparty Security Conference](https://burpbounty.net/burp-bounty-ekoparty-2020/).

## Profiles

* Thanks to [Six2dez1](https://github.com/six2dez) for collect all of the Burp Bounty profiles and also share their own. You can find the collection [HERE](https://github.com/wagiro/BurpBounty/tree/master/profiles/)

* Also thanks to: 

	- [Xer0Days](https://twitter.com/Xer0Days)
	- [Gocha](https://twitter.com/GochaOqradze)
	- [Sy3Omda](https://twitter.com/Sy3Omda) 
	- [Syed](https://twitter.com/syed__umar) 
	- [n00py1](https://twitter.com/n00py1)
	- [legik](https://github.com/legik)

All of them have contributed by sharing their Burp Bounty profiles


### For example videos please visit our youtube channel:

* [YouTube](https://www.youtube.com/channel/UCSq4R2o9_nGIMHWZ4H98GkQ/videos)




**Blind RCE with BurpBounty using Burp Collaborator**

[![Blind RCE with BurpBounty using Burp Collaborator](https://img.youtube.com/vi/kcyUueb56aM/0.jpg)](https://www.youtube.com/watch?v=kcyUueb56aM)





## Special Thanks

* Thanks to [Nexsus](https://twitter.com/Nexsus1985) for helping me to detect errors in the extension and thus be able to solve them.

","'bug-bounty', 'bugbounty', 'burp-extensions', 'burpsuite', 'vulnerability-detection', 'vulnerability-scanner'",2018-05-30T12:51:50Z,2024-04-26T01:17:17Z,16,10,1631,58,"('Eduardo Garcia', 93), ('pajswigger', 22), ('wagiro', 21), ('Hannah-PortSwigger', 6), ('Eduardo Garcia', 4), ('Temporal', 4), ('EC2 Default User', 3), ('Anon-Exploiter', 3), ('legik', 3), ('six2dez', 3), ('PortSwiggerSupport', 2), ('ayadim', 2), ('Sy3Omda', 1), ('System Administrator', 1), ('n00py', 1), ('test', 1)",4,2,
minikomi/Bootstrap-Form-Builder,Web app for drag drop building bootstrap forms.,"# Bootstrap Form Builder

## Warning: Currently using Bootstrap `v. 2.3.1` :dolphin:  (Not Bootstrap 3 ready.)

## What's this?

A Drag-and-drop form builder for [twitter bootstrap](http://twitter.github.com/bootstrap/). 

## Where can I see it in action?

It's hosted on github pages [here](http://minikomi.github.io/Bootstrap-Form-Builder/).

### Notes

* For development & debugging change the data-main for the require script tag in `index.html` 
  to point at `assets/js/main.js`. (Look just before the closing `` tag!)

* Once done, change it back to  build for production using the `build.js` script in the `assets/js/lib`
  folder and [r.js](https://github.com/jrburke/r.js/). Then revert to `assets/js/main-built.js`

* The full command is `r.js -o assets/js/lib/build.js` which should be run from the base directory.

### Adding new form elements

* In the [js/data/ folder](https://github.com/minikomi/Bootstrap-Form-Builder/tree/gh-pages/assets/js/data/) are yaml files, each of which corresponds to a tab in the form builder.
* If you just want to add a new element you need to:
  - describe it in one of these files
  - parse the yaml to json using parse.rb in the same folder
  - create a corresponding template in the [templates/snippet directory](https://github.com/minikomi/Bootstrap-Form-Builder/tree/gh-pages/assets/js/templates/snippet)
  - add the template to [snippet-templates.js](https://github.com/minikomi/Bootstrap-Form-Builder/blob/gh-pages/assets/js/templates/snippet/snippet-templates.js)
* If you want to add a new tab, you'll also need to adjust the [app.js file](https://github.com/minikomi/Bootstrap-Form-Builder/blob/gh-pages/assets/js/app.js) to make sure the tab is loaded.

Don't forget to switch to main.js rather than main-built.js, or the changes you make before compiling with require.js won't show up!
",,2012-06-18T02:44:55Z,2017-09-22T23:18:48Z,8,4,2117,223,"('minikomi', 143), ('Moore Adam', 6), ('msurguy', 3), ('Boris Rutkowski', 1), ('Christophe Tafani-Dereeper', 1), ('Craig Hooghiem', 1), ('IonicaBizau', 1), ('nfvs', 1)",5,2,
baikalminer/GB,Baikal Giant B Miner,"# GB
Blake256r8, Blake256r14, Blake2b, Lbry, Pascal Asic Miner
",,2018-01-13T07:59:46Z,2022-02-04T23:52:01Z,1,1,9,15,"('baikalminer', 6)",0,0,
luke-jr/bfgminer,"Modular ASIC/FPGA miner written in C, featuring overclocking, monitoring, fan speed control and remote interface capabilities.","BFGMiner:
St. Barbara's Faithfully Glorified Mining Initiative Naturally Exceeding Rivals
or Basically a Freaking Good Miner

This is a multi-threaded, multi-blockchain, multi-pool ASIC, FPGA, GPU and CPU
miner with dynamic clocking, monitoring, and fanspeed support for bitcoin.

This code is provided entirely free of charge by the programmer in his spare
time so donations would be greatly appreciated. Please consider donating to the
address below.

Luke-Jr 
1QATWksNFGeUJCWBrN4g6hGM178Lovm7Wh

DOWNLOADS:

http://luke.dashjr.org/programs/bitcoin/files/bfgminer

GIT TREE:

https://github.com/luke-jr/bfgminer

Bug reports:

https://github.com/luke-jr/bfgminer/issues

IRC Channel:

irc://irc.freenode.net/eligius

License: GPLv3.  See COPYING for details.

SEE ALSO README.ASIC, README.FPGA, README.GPU, README.RPC, AND README.scrypt FOR
MORE INFORMATION ON EACH.

---

EXECUTIVE SUMMARY ON USAGE:

Single pool:

bfgminer -o http://pool:port -u username -p password

Multiple pools:

bfgminer -o http://pool1:port -u pool1username -p pool1password -o http://pool2:port -u pool2usernmae -p pool2password

Multiple blockchains:

bfgminer -o http://pool1:port -u pool1username -p pool1password --pool-goal default -o http://pool2:port -u pool2usernmae -p pool2password --pool-goal freicoin

Single pool with a standard http proxy:

bfgminer -o http://pool:port -x http://proxy:port -u username -p password

Single pool with a socks5 proxy:

bfgminer -o http://pool:port -x socks5://proxy:port -u username -p password

The list of proxy types are:
 http:    standard http 1.1 proxy
 socks4:  socks4 proxy
 socks5:  socks5 proxy
 socks4a: socks4a proxy
 socks5h: socks5 proxy using a hostname

Proxy support requires cURL version 7.21.7 or newer.

If you specify the --socks-proxy option to BFGMiner, it will only be applied to
all pools that don't specify their own proxy setting like above


After saving configuration from the menu ([S],[W]) you do not need to give
BFGMiner any arguments, it will load your configuration instead.

Any configuration file may also contain a single
	""include"" : ""filename""
to recursively include another configuration file.
Writing the configuration will save all settings from all files to the output
configuration file.


---
BUILDING BFGMINER

Everything you probably want, condensed:
	build-essential autoconf automake libtool pkg-config libcurl4-gnutls-dev
	libjansson-dev uthash-dev libncursesw5-dev libudev-dev libusb-1.0-0-dev
	libevent-dev libmicrohttpd-dev libhidapi-dev

Dependencies:
	autoconf             http://www.gnu.org/software/autoconf/
	automake             http://www.gnu.org/software/automake/
	libtool              http://www.gnu.org/software/libtool/
	pkg-config           http://www.freedesktop.org/wiki/Software/pkg-config
	...or pkgconf        https://github.com/pkgconf/pkgconf

	libcurl4-gnutls-dev  http://curl.haxx.se/libcurl/

	libjansson-dev 2.0+  http://www.digip.org/jansson/
	
	uthash-dev 1.9.4+    http://troydhanson.github.io/uthash/

Optional Dependencies:
	Text-User-Interface (TUI): curses dev library; any one of:
	  libncurses5-dev    http://www.gnu.org/software/ncurses/ (Linux and Mac)
	  libncursesw5-dev       ^ same
	  libpdcurses        http://pdcurses.sourceforge.net/ (Linux/Mac/Windows)

	Multiple ASIC/FPGA autodetection: any one of:
	  sysfs              (built-in to most Linux kernels, just mount on /sys)
	  libudev-dev        http://www.freedesktop.org/software/systemd/libudev/
	
	HashBuster Nano & NanoFury USB devices:
	  libhidapi-dev      https://github.com/signal11/hidapi
	
	getwork server for Block Erupter Blades:
	  libmicrohttpd-dev 0.9.5+  http://www.gnu.org/software/libmicrohttpd/
	
	Stratum proxy:
	  libevent 2.0.3+    http://libevent.org/

	KnCMiner SHA2 miners:
	  libi2c-dev         https://i2c.wiki.kernel.org/index.php/I2C_Tools
	
	HashBuster Micro, Klondike, X6500 and ZTEX FPGA boards:
	  libusb-1.0-0-dev   http://www.libusb.org/

	Video card GPU mining (free):
	  llvm 3.3+          http://llvm.org/
	  clang 3.3+         http://clang.llvm.org/
	  libclc             http://libclc.llvm.org/
	  Mesa 9.2.0+        http://www.mesa3d.org/
	  libsensors4-dev    https://github.com/groeck/lm-sensors
	
	ATi/AMD video card GPU mining (non-free):
	  AMD APP SDK        http://developer.amd.com/tools/heterogeneous-computing/amd-accelerated-parallel-processing-app-sdk/

	CPU mining optimized assembly algorithms:
	  yasm 1.0.1+        http://yasm.tortall.net/


BFGMiner driver configuration options:
	--disable-other-drivers Build without drivers by default unless explicitly
	                        enabled
	--enable-broad-udevrules
	                        Include udev rules for ambiguous devices which may
	                        not be miners
	--enable-alchemist      Compile support for AlcheMist (default disabled)
	--disable-avalon        Compile support for Avalon (default enabled)
	--disable-avalonmm      Compile support for Avalon2/3 (default enabled)
	--enable-bfsb           Compile support for BFSB (default disabled)
	--disable-bfx           Compile support for BFx2 (default enabled)
	--disable-bifury        Compile support for Bi*Fury (default enabled)
	--disable-bigpic        Compile support for Big Picture Mining USB (default
	                        enabled)
	--disable-bitforce      Compile support for BitForce (default enabled)
	--disable-bitfury       Compile support for Bitfury (default enabled)
	--enable-bitmain        Compile support for Bitmain Antminer S* series
	                        (default disabled)
	--disable-cointerra     Compile support for CoinTerra (default enabled)
	--enable-cpumining      Compile support for CPU mining (default disabled)
	--disable-drillbit      Compile support for DrillBit (default enabled)
	--disable-dualminer     Compile support for DualMiner (default enabled)
	--disable-gridseed      Compile support for GridSeed (default enabled)
	--disable-hashbuster    Compile support for HashBuster Nano (default
	                        enabled)
	--disable-hashbusterusb Compile support for HashBuster Micro (default
	                        enabled)
	--disable-hashfast      Compile support for HashFast (default enabled)
	--disable-icarus        Compile support for Icarus (default enabled)
	--enable-jingtian       Compile support for JingTian (default disabled)
	--disable-klondike      Compile support for Klondike (default enabled)
	--enable-knc            Compile support for KnC (default disabled)
	--enable-kncasic        Compile support for KnC gen 2 (default disabled)
	--disable-littlefury    Compile support for LittleFury (default enabled)
	--enable-metabank       Compile support for Metabank (default disabled)
	--enable-minergate      Compile support for Spondoolies minergate interface
	                        (default disabled)
	--enable-minion         Compile support for Minion (default disabled)
	--disable-modminer      Compile support for ModMiner (default enabled)
	--disable-nanofury      Compile support for NanoFury (default enabled)
	--enable-opencl         Compile support for OpenCL (default disabled)
	--disable-adl           Build without ADL monitoring (default enabled)
	--disable-rockminer     Compile support for RockMiner (default enabled)
	--enable-titan          Compile support for KnC Titan (default disabled)
	--disable-twinfury      Compile support for Twinfury (default enabled)
	--disable-x6500         Compile support for X6500 (default enabled)
	--disable-zeusminer     Compile support for ZeusMiner (default enabled)
	--disable-ztex          Compile support for ZTEX (default enabled)

BFGMiner algorithm configuration option:
	--enable-keccak         Compile support for Keccak (default disabled)
	--disable-sha256d       Compile support for SHA256d (default enabled)
	--enable-scrypt         Compile support for scrypt (default disabled)

BFGMiner dependency configuration options:
	--without-curses        Compile support for curses TUI (default enabled)
	--without-libevent      Compile support for libevent stratum server (default
	                        enabled)
	--without-libmicrohttpd Compile support for libmicrohttpd getwork server
	                        (default enabled)
	--without-libudev       Autodetect FPGAs using libudev (default enabled)
	--without-libusb        Compile using libusb (default enabled)
	--without-sensors       Build with libsensors monitoring (default enabled)
	--without-system-libbase58
	                        Use bundled libbase58 rather than system one
	--with-system-libblkmaker
	                        Use system libblkmaker rather than bundled one
	                        (default disabled)
	--with-udevrulesdir=DIR Install udev rules into this directory
	--with-udevrules-group=groupname
	                        Configure mining devices to be owned by a specific
	                        group (default `video')
	--without-uio           Compile support for PCI devices via Linux UIO
	                        interface (default enabled)
	--without-vfio          Compile support for PCI devices via Linux VFIO
	                        interface (default enabled)

Basic *nix build instructions:

./autogen.sh    # only needed if building from git repo
./configure  # list configuration options here
make

No installation is necessary. You may run BFGMiner from the build directory
directly.

On Mac OS X, you can use Homebrew to install the dependency libraries. When you
are ready to build BFGMiner, you may need to point the configure script at one
or more pkg-config paths. For example:
	./configure PKG_CONFIG_PATH=/usr/local/opt/curl/lib/pkgconfig:/usr/local/opt/jansson/lib/pkgconfig

Native WIN32 build instructions: see windows-build.txt

If you build BFGMiner from source, it is recommended that you run it from the
build directory. On *nix, you will usually need to prepend your command with a
path like this (if you are in the bfgminer directory already): ./bfgminer
To install system wide run 'sudo make install' or 'make install' as root. You
can then run from any terminal.

---

Usage instructions:  Run ""bfgminer --help"" to see options:

Usage: bfgminer [-DdElmpPQqUsTouOchnV]

Options for both config file and command line:
--api-allow         Allow API access (if enabled) only to the given list of [W:]IP[/Prefix] address[/subnets]
                    This overrides --api-network and you must specify 127.0.0.1 if it is required
                    W: in front of the IP address gives that address privileged access to all api commands
--api-description   Description placed in the API status header (default: BFGMiner version)
--api-groups        API one letter groups G:cmd:cmd[,P:cmd:*...]
                    See README.RPC for usage
--api-listen        Listen for API requests (default: disabled)
                    By default any command that does not just display data returns access denied
                    See --api-allow to overcome this
--api-mcast         Enable API Multicast listener, default: disabled
--api-mcast-addr  API Multicast listen address (default: ""224.0.0.75"")
--api-mcast-code  Code expected in the API Multicast message, don't use '-' (default: ""FTW"")
--api-mcast-des   Description appended to the API Multicast reply, default: ''
--api-mcast-port  API Multicast listen port (default: 4028)
--api-network       Allow API (if enabled) to listen on/for any address (default: only 127.0.0.1)
--api-port          Port number of miner API (default: 4028)
--balance           Change multipool strategy from failover to even share balance
--benchmark         Run BFGMiner in benchmark mode - produces no shares
--benchmark-intense Run BFGMiner in intensive benchmark mode - produces no shares
--chroot-dir   Chroot to a directory right after startup
--cmd-idle     Execute a command when a device is allowed to be idle (rest or wait)
--cmd-sick     Execute a command when a device is declared sick
--cmd-dead     Execute a command when a device is declared dead
--coinbase-check-addr  A list of address to check against in coinbase payout list received from the previous-defined pool, separated by ','
--coinbase-check-total  The least total payout amount expected in coinbase received from the previous-defined pool
--coinbase-check-percent  The least benefit percentage expected for the sum of addr(s) listed in --cbaddr argument for previous-defined pool
--coinbase-sig  Set coinbase signature when possible
--compact           Use compact display without per device statistics
--debug|-D          Enable debug output
--debuglog          Enable debug logging
--device-protocol-dump Verbose dump of device protocol-level activities
--device|-d    Enable only devices matching pattern (default: all)
--disable-rejecting Automatically disable pools that continually reject shares
--http-port    Port number to listen on for HTTP getwork miners (-1 means disabled) (default: -1)
--expiry       Upper bound on how many seconds after getting work we consider a share from it stale (w/o longpoll active) (default: 120)
--expiry-lp    Upper bound on how many seconds after getting work we consider a share from it stale (with longpoll active) (default: 3600)
--failover-only     Don't leak work to backup pools when primary pool is lagging
--failover-switch-delay  Delay in seconds before switching back to a failed pool (default: 300)
--generate-to  Set an address to generate to for solo mining
--force-dev-init    Always initialize devices when possible (such as bitstream uploads to some FPGAs)
--kernel-path  Specify a path to where bitstream and kernel files are
--load-balance      Change multipool strategy from failover to quota based balance
--log|-l       Interval in seconds between log output (default: 20)
--log-file|-L  Append log file for output messages
--log-microseconds  Include microseconds in log output
--monitor|-m   Use custom pipe cmd for output messages
--net-delay         Impose small delays in networking to avoid overloading slow routers
--no-gbt            Disable getblocktemplate support
--no-getwork        Disable getwork support
--no-hotplug        Disable hotplug detection
--no-local-bitcoin  Disable adding pools for local bitcoin RPC servers
--no-longpoll       Disable X-Long-Polling support
--no-pool-redirect  Ignore pool requests to redirect to another server
--no-restart        Do not attempt to restart devices that hang
--no-stratum        Disable Stratum detection
--no-submit-stale   Don't submit shares if they are detected as stale
--no-unicode        Don't use Unicode characters in TUI
--noncelog     Create log of all nonces found
--pass|-p      Password for bitcoin JSON-RPC server
--per-device-stats  Force verbose mode and output per-device statistics
--pool-goal    Named goal for the previous-defined pool
--pool-priority  Priority for just the previous-defined pool
--pool-proxy|-x     Proxy URI to use for connecting to just the previous-defined pool
--protocol-dump|-P  Verbose dump of protocol-level activities
--queue|-Q     Minimum number of work items to have queued (0 - 10) (default: 1)
--quiet|-q          Disable logging output, display status and errors
--quit-summary  Summary printed when you quit: none/devs/procs/detailed
--quota|-U     quota;URL combination for server with load-balance strategy quotas
--real-quiet        Disable all output
--request-diff  Request a specific difficulty from pools (default: 1.0)
--retries      Number of times to retry failed submissions before giving up (-1 means never) (default: -1)
--rotate       Change multipool strategy from failover to regularly rotate at N minutes (default: 0)
--round-robin       Change multipool strategy from failover to round robin on failure
--scan|-S      Configure how to scan for mining devices
--scan-time    Upper bound on time spent scanning current work, in seconds (default: 60)
--sched-start  Set a time of day in HH:MM to start mining (a once off without a stop time)
--sched-stop   Set a time of day in HH:MM to stop mining (will quit without a start time)
--scrypt            Use the scrypt algorithm for mining (non-bitcoin)
--set-device|--set  Set default parameters on devices; eg, NFY:osc6_bits=50, bfl:voltage=, compac:clock=
--setuid       Username of an unprivileged user to run as
--sharelog     Append share log to file
--shares       Quit after mining 2^32 * N hashes worth of shares (default: unlimited)
--show-processors   Show per processor statistics in summary
--skip-security-checks  Skip security checks sometimes to save bandwidth; only check 1/th of the time (default: never skip)
--socks-proxy  Set socks proxy (host:port) for all pools without a proxy specified
--stratum-port  Port number to listen on for stratum miners (-1 means disabled) (default: -1)
--submit-threads    Minimum number of concurrent share submissions (default: 64)
--syslog            Use system log for output messages (default: standard error)
--temp-hysteresis  Set how much the temperature can fluctuate outside limits when automanaging speeds (default: 3)
--text-only|-T      Disable ncurses formatted screen output
--unicode           Use Unicode characters in TUI
--url|-o       URL for bitcoin JSON-RPC server
--user|-u      Username for bitcoin JSON-RPC server
--verbose           Log verbose output to stderr as well as status output
--weighed-stats     Display statistics weighed to difficulty 1
--userpass|-O  Username:Password pair for bitcoin JSON-RPC server
--worktime                     Display extra work time debug information
Options for command line only:
--config|-c    Load a JSON-format configuration file
See example.conf for an example configuration.
--no-default-config Inhibit loading default config file
--default-config    Always load the default config file
--help|-h           Print this message
--version|-V        Display version and exit


GPU only options:

--gpu-map      Map OpenCL to ADL device order manually, paired CSV (e.g. 1:0,2:1 maps OpenCL 1 to ADL 0, 2 to 1)
--gpu-platform  Select OpenCL platform ID to use for GPU mining
--gpu-reorder       Attempt to reorder GPU devices according to PCI Bus ID
--no-adl            Disable the ATI display library used for monitoring and setting GPU parameters

GPU mining is disabled by default for SHA256d if you have any dedicated mining
devices, but can be enabled explicitly specifying the -S opencl:auto option.

See README.GPU for more information regarding GPU mining.
See README.scrypt for more information regarding (non-bitcoin) scrypt mining.


To use ASICs or FPGAs, you will need to be sure the user BFGMiner is running as
has appropriate permissions. This varies by operating system.
On Linux, with BFGMiner's udev rules: sudo usermod  -a -G video
Note that on GNU/Linux systems, you will usually need to login again before
group changes take effect.

By default, BFGMiner will scan for autodetected devices. If you want to prevent
BFGMiner from doing this, you can use ""-S noauto"". If you want to probe all
serial ports, you can use ""-S all""; note that this may write data to non-mining
devices which may then behave in unexpected ways!

On Linux,  is usually of the format /dev/ttyUSBn
On Mac OS X,  is usually of the format /dev/cu.usb*
On Windows,  is usually of the format \\.\COMn
(where n = the correct device number for the device)

The official supplied binaries are compiled with support for all ASICs/FPGAs.
To force the code to only attempt detection with a specific driver,
prepend the argument with the driver name followed by an ""at"" symbol.
For example, ""icarus@/dev/ttyUSB0"" or ""bitforce@\\.\COM5""
or using the short name: ""ica@/dev/ttyUSB0"" or ""bfl@\\.\COM5""

Some FPGAs do not have non-volatile storage for their bitstreams and must be
programmed every power cycle, including first use. To use these devices, you
must download the proper bitstream from the vendor's website and copy it to the
""bitstreams"" directory into your BFGMiner application directory.

See README.ASIC and README.FPGA for more information regarding these.

See README.CPU for information regarding CPU mining.

---

WHILE RUNNING:

The following options are available while running with a single keypress:

[M]anage devices [P]ool management [S]ettings [D]isplay options  [H]elp [Q]uit

M gives you something like:

Select processor to manage using up/down arrow keys
 BFL 0a: 78.0C |  3.64/ 3.70/ 2.91Gh/s | A:46 R:0+0(none) HW:  2/none
  BitFORCE SHA256 SC from Butterfly Labs
Serial: FTWN6T67

[D]isable
Or press Enter when done


P gives you:

Current pool management strategy: Failover
[F]ailover only disabled
[A]dd pool [R]emove pool [D]isable pool [E]nable pool
[C]hange management strategy [S]witch pool [I]nformation


S gives you:

[L]ongpoll: On
[Q]ueue: 1
[S]cantime: 60
[E]xpiry: 120
[R]etries: -1
[W]rite config file
[B]FGMiner restart


D gives you:

[N]ormal [C]lear [S]ilent mode (disable all output)
[D]ebug:off
[P]er-device:off
[Q]uiet:off
[V]erbose:off
[R]PC debug:off
[W]orkTime details:off
co[M]pact: off
[L]og interval:5


Q quits the application.


The running log shows output similar to that below:

 [2013-02-13 00:26:30] Accepted 1758e8df BFL 0  pool 0 Diff 10/1
 [2013-02-13 00:26:32] Accepted 1d9a2199 MMQ 0a pool 0 Diff 8/1
 [2013-02-13 00:26:33] Accepted b1304924 ZTX 0  pool 0 Diff 1/1
 [2013-02-13 00:26:33] Accepted c3ad22f4 XBS 0b pool 0 Diff 1/1

The 8 byte hex value are the 2nd set of 32 bits from the share submitted to the
pool. The 2 diff values are the actual difficulty target that share reached
followed by the difficulty target the pool is currently asking for.

---
Also many issues and FAQs are covered in the forum threads
dedicated to this program,
	https://bitcointalk.org/?topic=78192
	https://bitcointalk.org/?topic=168174

If you are mining on a single pool, the pool display shows:
 Pool 0: ...s.m.eligius.st   Diff:16  +Strtm  LU:[03:26:16]  User:1QATWksNFGeUJCWBrN4g6hGM178Lovm7Wh

This tells you which pool you're using, as well as its current share difficulty,
protocol, and last explicit work update. If BFGMiner has a working block
notification source, the protocol will be prefixed by a plus sign. If not, a
minus sign.

If you are mining on multiple pools at once, the pool display instead shows:
 Pools: 2 (0,1)              Diff:4-16  +  LU:[03:25:30]

You get the total number of working pools, the pool numbers for each of those,
the range of current share difficulties, whether block notification is working
(plus/minus), and the oldest explicit work update currently being used for new
work.

The block display shows:
Block #217364: ...1b89f8d3  Diff:7.67M (54.93T)  Started: [17:17:22]  I:12.99mBTC/hr

This shows a short stretch of the next block's height, the current block,
difficulty (including the network hashrate that difficulty represents), when the
search for the new block started, and finally expected Income, calculated by
actual shares submitted in 100% PPS value (assumes Bitcoin, does not account for
altcoin conversions!).

The BFGMiner status line shows:
 ST:1  F:0  NB:1  AS:0  BW:[ 75/241 B/s]  E:2.42  BS:2.71k

ST is STaged work items (ready to use).
F  is network Failure occasions (server down or slow to provide work)
NB is New Blocks detected on the network
AS is Active Submissions (shares in the process of submitting)
BW is BandWidth usage on the network (received/sent)
E  is Efficiency defined as number of shares accepted (multiplied by their
          difficulty) per 2 KB of bandwidth
BS is the all time Best Share difficulty you've found

The totals line shows the following:
 6/32   75.0C | 171.3/170.8/171.2Gh/s | A:729 R:8+0(.01%) HW:0/.81%

Each column is as follows:
  The number of devices and processors currently mining
  Hottest temperature reported by any processor
  20 second exponentially decaying average hash rate (configurable with --log
      option)
  An all time average hash rate
  An all time average hash rate based on actual nonces found, adjusted for pool
      reject and stale rate
  The number of Accepted shares
  The number of Rejected shares and stale shares discarded (never submitted),
      and the percentage these are of total found.
  The number of HardWare errors, and percentage invalid of nonces returned

Each device shows:
 BFL 2: 74.0C | 51.97/58.90/57.17Gh/s | A:847 R:15+0(.54%) HW:496/.91%

Columns are the same as in the totals line.


---
MULTIPOOL

FAILOVER STRATEGIES WITH MULTIPOOL:
A number of different strategies for dealing with multipool setups are
available. Each has their advantages and disadvantages so multiple strategies
are available by user choice, as per the following list:

FAILOVER:
The default strategy is failover. This means that if you input a number of
pools, it will try to use them as a priority list, moving away from the 1st
to the 2nd, 2nd to 3rd and so on. If any of the earlier pools recover, it will
move back to the higher priority ones.

ROUND ROBIN:
This strategy only moves from one pool to the next when the current one falls
idle and makes no attempt to move otherwise.

ROTATE:
This strategy moves at user-defined intervals from one active pool to the next,
skipping pools that are idle.

LOAD BALANCE:
This strategy sends work to all the pools on a quota basis. By default, all
pools are allocated equal quotas unless specified with --quota. This
apportioning of work is based on work handed out, not shares returned so is
independent of difficulty targets or rejected shares. While a pool is disabled
or dead, its quota is dropped until it is re-enabled. Quotas are forward
looking, so if the quota is changed on the fly, it only affects future work.
If all pools are set to zero quota or all pools with quota are dead, it will
fall back to a failover mode. See quota below for more information.

The failover-only flag has special meaning in combination with load-balance
mode and it will distribute quota back to priority pool 0 from any pools that
are unable to provide work for any reason so as to maintain quota ratios
between the rest of the pools.

BALANCE:
This strategy monitors the amount of difficulty 1 shares solved for each pool
and uses it as a basis for trying to doing the same amount of work for each
pool.


---
SOLO MINING

BFGMiner supports solo mining with any GBT-compatible bitcoin node (such as
bitcoind). To use this mode, you need to specify the URL of your bitcoind node
using the usual pool options (--url, --userpass, etc), and the --generate-to
option to specify the Bitcoin address you wish to receive the block rewards
mined. When you run Bitcoin Core on the same computer as your miner, the pool
itself will be automatically configured for you (on the default goal). Please be
aware that solo mining via GBT is at this time only supported for Bitcoin.

IMPORTANT: If you are solo mining with more than one instance of BFGMiner (or
any other software) per payout address, you must also specify data using the
--coinbase-sig option to ensure each miner is working on unique work. Note
that this data will be publicly seen if your miner finds a block using any
GBT-enabled pool, even when not solo mining (such as failover).

If your bitcoin node does not support longpolling (for example, bitcoind 0.8.x),
you should consider setting up a failover pool to provide you with block
notifications. Note that solo mining does not use shares, so BFGMiner's adjusted
hashrate (third column) may suddenly drop to zero if a block you submit is
rejected; this does not indicate that it has stopped mining.

Example solo mining usage:

bfgminer -o http://localhost:8332 -u username -p password \
    --generate-to 1QATWksNFGeUJCWBrN4g6hGM178Lovm7Wh \
    --coinbase-sig ""rig1: This is Joe's block!""

If you want to solo mine on multiple GBT-compatible Bitcoin blockchains, you can
specify --generate-to multiple times with a goal name prefix followed by a
colon. Note that at this time, the coinbase sig is always shared across all
goals/pools.

Example multi-blockchain solo mining usage:

bfgminer -o http://localhost:8332 -u username -p password \
    --generate-to 1QATWksNFGeUJCWBrN4g6hGM178Lovm7Wh \
    -o http://localhost:7221 -u user2 -p password --pool-goal mychain \
    --generate-to mychain:1QATWksNFGeUJCWBrN4g6hGM178Lovm7Wh \
    --coinbase-sig ""rig1: This is Joe's block!""


---
QUOTAS

The load-balance multipool strategy works off a quota based scheduler. The
quotas handed out by default are equal, but the user is allowed to specify any
arbitrary ratio of quotas. For example, if all the quota values add up to 100,
each quota value will be a percentage, but if 2 pools are specified and pool0
is given a quota of 1 and pool1 is given a quota of 9, pool0 will get 10% of
the work and pool1 will get 90%. Quotas can be changed on the fly with RPC,
and do not act retrospectively. Setting a quota to zero will effectively
disable that pool unless all other pools are disabled or dead. In that
scenario, load-balance falls back to regular failover priority-based strategy.
While a pool is dead, it loses its quota and no attempt is made to catch up
when it comes back to life.

To specify quotas on the command line, pools should be specified with a
semicolon separated --quota(or -U) entry instead of --url. Pools specified with
--url are given a nominal quota value of 1 and entries can be mixed.

For example:
--url poolA:portA -u usernameA -p passA --quota ""2;poolB:portB"" -u usernameB -p passB
Will give poolA 1/3 of the work and poolB 2/3 of the work.

Writing configuration files with quotas is likewise supported. To use the above
quotas in a configuration file they would be specified thus:

""pools"" : [
        {
                ""url"" : ""poolA:portA"",
                ""user"" : ""usernameA"",
                ""pass"" : ""passA""
        },
        {
                ""quota"" : ""2;poolB:portB"",
                ""user"" : ""usernameB"",
                ""pass"" : ""passB""
        }
]


---
LOGGING

BFGMiner will log to stderr if it detects stderr is being redirected to a file.
To enable logging simply add 2>logfile.txt to your command line and logfile.txt
will contain the logged output at the log level you specify (normal, verbose,
debug etc.)

In other words if you would normally use:
./bfgminer -o xxx -u yyy -p zzz
if you use
./bfgminer -o xxx -u yyy -p zzz 2>logfile.txt
it will log to a file called logfile.txt and otherwise work the same.

There is also the -m option on linux which will spawn a command of your choice
and pipe the output directly to that command.

The WorkTime details 'debug' option adds details on the end of each line
displayed for Accepted or Rejected work done. An example would be:

 <-00000059.ed4834a3 M:X D:1.0 G:17:02:38:0.405 C:1.855 (2.995) W:3.440 (0.000) S:0.461 R:17:02:47

The first 2 hex codes are the previous block hash, the rest are reported in
seconds unless stated otherwise:
The previous hash is followed by the getwork mode used M:X where X is one of
P:Pool, T:Test Pool, L:LP or B:Benchmark,
then D:d.ddd is the difficulty required to get a share from the work,
then G:hh:mm:ss:n.nnn, which is when the getwork or LP was sent to the pool and
the n.nnn is how long it took to reply,
followed by 'O' on its own if it is an original getwork, or 'C:n.nnn' if it was
a clone with n.nnn stating how long after the work was recieved that it was
cloned, (m.mmm) is how long from when the original work was received until work
started,
W:n.nnn is how long the work took to process until it was ready to submit,
(m.mmm) is how long from ready to submit to actually doing the submit, this is
usually 0.000 unless there was a problem with submitting the work,
S:n.nnn is how long it took to submit the completed work and await the reply,
R:hh:mm:ss is the actual time the work submit reply was received

If you start BFGMiner with the --sharelog option, you can get detailed
information for each share found. The argument to the option may be ""-"" for
standard output (not advisable with the ncurses UI), any valid positive number
for that file descriptor, or a filena",,2012-04-26T11:29:32Z,2023-06-18T05:30:49Z,123,92,1812,221,"('luke-jr', 6331), ('ckolivas', 4315), ('kanoi', 943), ('Jeff Garzik', 135), ('xiangfu', 130), ('Vitalii Demianets', 126), ('pshep', 105), ('nwoolls', 97), ('pellenilsson', 50), ('nelisky', 46), ('Philip Kaufmann', 36), ('denis2342', 34), ('ycros', 25), ('neocogent', 22), ('Znort 987', 20), ('aauer1', 13), ('Graeme Humphries', 11), ('someone42', 11), ('legkodymov', 11), ('Peter Stuge', 10), ('Graeme Humphries', 8), ('James Z.M. Gao', 8), ('corrideat', 8), ('pooler', 8), ('wizkid057', 8), ('rustyrussell', 7), ('projectgus', 6), ('setkeh', 6), ('blinkier', 5), ('nushor', 5), ('fleger', 5), ('Krellan', 5), ('gzm55', 5), ('4tar', 5), ('hno', 5), ('Con Kolivas', 5), ('Adrian Port', 5), ('berendt', 4), ('isghe', 4), ('asm', 4), ('jstefanop', 4), ('bluemurder', 4), ('zefir', 3), ('bondus', 3), ('anajavi', 3), ('Viktor-KN', 3), ('geekmug', 3), ('roybadami', 3), ('Red-Wolf-2', 3), ('HashBuster team', 3), ('Diogo Franco', 3), ('iongchun', 3), ('root', 2), ('csjones', 2), ('capa66', 2), ('zefir-k', 2), ('dvitas', 2), ('zenwheel', 2), ('JesseMoll', 2), ('letoams', 2), ('Paul Sheppard', 2), ('MaStr', 2), ('hocuscapocus', 2), ('alexxy', 2), ('bhaible', 2), ('chrissicool', 2), ('Graeme Nordgren', 2), ('jaketri', 2), ('jameshilliard', 2), ('Ascendion', 2), ('chromicant', 2), ('Kalroth', 2), ('blinky', 1), ('bdev', 1), ('UukGoblin', 1), ('Tydus', 1), ('trini', 1), ('farproc', 1), ('Zuikkis', 1), ('Steve Brecher', 1), ('ohhmm', 1), ('Raulo', 1), ('Phraust', 1), ('Pavel Semjanov', 1), ('ylatuya', 1), ('drizzt', 1), ('ec2-user', 1), ('mhren', 1), ('holymonson', 1), ('nanofury', 1), ('navyxliu', 1), ('ouɐɹɔs ʞɹɐɯ', 1), ('p2k', 1), ('sharky112065', 1), ('slax0r', 1), ('tbartlett0', 1), ('lapoigne', 1), ('Серёга', 1), ('Andreas Auer', 1), ('ludi', 1), ('chris-pcguy', 1), ('CyberLeo', 1), ('macterra', 1), ('gades', 1), ('asfin', 1), ('DrYak', 1), ('EskimoBob', 1), ('xiru', 1), ('forrestv', 1), ('cradle', 1), ('nylen', 1), ('Jason Hughes', 1), ('LiveJay', 1), ('kiyominer', 1), ('clbr', 1), ('lukem512', 1), ('mfontani', 1), ('mibe', 1), ('Midnight Magic', 1), ('friedpenguin', 1), ('nehalvpatel', 1), ('Nico Oelgart', 1), ('lano1106', 1)",51,39,
RentTheRunway/alchemy,A/B experiments service,"

#Alchemy

**a framework for running A/B experiments -- fast and ops-friendly!**


![alt alchemy-logo](docs/images/alchemy.jpg ""Alchemy"")



It's written using Dropwizard, a *simple* and *lightweight* REST service framework composed of *stable* and *mature* libraries from the Java ecosystem.
 
- Table of Contents
  * [Manual](docs/manual.md)
  * [About](docs/about.md)

","'github-helpers', 'growth-team', 'managed-by-terraform'",2014-03-26T17:02:29Z,2024-06-17T22:06:40Z,21,12,32,120,"('gtrog', 111), ('dependabotbot', 78), ('rtr-deploy', 66), ('carlo-rtr', 30), ('Fabiana Sagrera', 11), ('MatthewRyanRead', 10), ('Timothy Sweetser', 9), ('Fabiana Scala', 8), ('Falcon Taylor-Carter', 6), ('rtr-terraform', 6), ('rdlf0', 5), ('davidinjc', 3), ('KK', 3), ('cfries3', 3), ('hd313', 2), ('dspeele', 2), ('AlanC5', 1), ('skamille', 1), ('Falcon Taylor-Carter', 1), ('U-DESKTOP-R7OP0O0\\Gene Trog', 1), ('eternal0', 1)",5,2,
bioconda/bioconda-recipes,Conda recipes for the bioconda channel.,"![](https://raw.githubusercontent.com/bioconda/bioconda-recipes/master/logo/bioconda_monochrome_small.png
 ""Bioconda"")

# The bioconda channel

[![Gitter](https://badges.gitter.im/bioconda/bioconda-recipes.svg)](https://gitter.im/bioconda/Lobby?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)

[Conda](http://anaconda.org) is a platform- and language-independent package
manager that supports easy distribution, installation and version management of
software. The [bioconda channel](https://anaconda.org/bioconda) is a Conda
channel providing bioinformatics related packages for **Linux** and **Mac OS**.
This repository hosts the corresponding recipes.

## User guide

Please visit https://bioconda.github.io for details. 

## Developer guide

Please visit the new docs at https://bioconda.github.io/contributor/index.html for details.

","'bioinformatics', 'conda', 'hacktoberfest', 'package-management'",2015-09-12T20:33:30Z,2024-06-18T14:40:54Z,2378,366,1597,96,"('BiocondaBot', 14754), ('bgruening', 3162), ('druvus', 1501), ('johanneskoester', 1410), ('daler', 1325), ('bioconda-bot', 1113), ('epruesse', 1014), ('dpryan79', 872), ('chapmanb', 840), ('jerowe', 644), ('tomkinsc', 595), ('acaprez', 519), ('cbrueffer', 480), ('bebatut', 397), ('ArneKr', 375), ('abretaud', 297), ('MathiasHaudgaard', 262), ('Jason Travis', 237), ('cokelaer', 237), ('martin-g', 227), ('PauAndrio', 227), ('kyleabeauchamp', 214), ('mencian', 211), ('matthdsm', 204), ('lecorguille', 188), ('pvanheus', 185), ('gbayarri', 179), ('roryk', 178), ('brentp', 176), ('npavlovikj', 166), ('yhoogstrate', 164), ('nsoranzo', 158), ('mbargull', 158), ('marcelm', 156), ('sebastian-luna-valero', 153), ('holtgrewe', 150), ('simonvh', 148), ('ostrokach', 148), ('dyusuf', 148), ('shenwei356', 138), ('lpantano', 136), ('bernt-matthias', 134), ('rpetit3', 129), ('ThomasWollmann', 124), ('HassanAmr', 109), ('Martin Mann', 105), ('percyfal', 103), ('joachimwolff', 103), ('mictadlo', 96), ('karel-brinda', 96), ('armintoepfer', 95), ('dfornika', 93), ('mmiladi', 92), ('apeltzer', 91), ('notestaff', 91), ('pirovc', 89), ('Christopher Dunn', 89), ('molpopgen', 86), ('mvdbeek', 86), ('gregvonkuster', 85), ('lcoombe', 84), ('pinin4fjords', 84), ('jpuritz', 83), ('rvalieris', 80), ('apcamargo', 76), ('telatin', 74), ('tiagoantao', 73), ('s-will', 70), ('zachcp', 67), ('thanhleviet', 67), ('pb-dseifert', 65), ('Daniel Maticzka', 64), ('peterjc', 64), ('heuermh', 62), ('davebx', 62), ('rhpvorderman', 61), ('jfallmann', 60), ('tobiasrausch', 57), ('corneliusroemer', 57), ('endrebak', 56), ('rob-p', 54), ('johnlees', 54), ('blankclemens', 53), ('Slugger70', 53), ('runner', 52), ('Devon Ryan', 52), ('glormph', 51), ('huidongchen', 51), ('jmarshall', 50), ('mtw', 49), ('eggzilla', 47), ('jj-umn', 47), ('micknudsen', 47), ('Natasha Pavlovikj', 47), ('milot-mirdita', 46), ('tseemann', 46), ('althonos', 45), ('maickrau', 45), ('martin-raden', 45), ('nathanweeks', 45), ('zwanli', 44), ('keuv-grvl', 44), ('Takadonet', 44), ('Karel Břinda', 43), ('nick-youngblut', 43), ('cmonjeau', 42), ('runner', 42), ('runner', 42), ('saketkc', 42), ('sunqian2116', 41), ('mjsteinbaugh', 41), ('Mataivic', 41), ('kepbod', 40), ('pditommaso', 40), ('Juke34', 39), ('prihoda', 39), ('lparsons', 38), ('ericenns', 38), ('DavyCats', 38), ('dlaehnemann', 38), ('Hualin Liu', 38), ('luispedro', 38), ('ewels', 38), ('asntech', 37), ('nh13', 37), ('ozagordi', 37), ('aymanm', 37), ('jodyphelan', 36), ('ZimmerA', 36), ('EricR86', 35), ('JenCabral', 35), ('RJMW', 34), ('CarlosHorro', 34), ('wdecoster', 34), ('cristhomas', 34), ('jeromekelleher', 33), ('nturaga', 33), ('HenningTimm', 33), ('zachcp', 33), ('asmariyaz23', 33), ('natir', 33), ('joshmoore', 32), ('pcm32', 32), ('vineetbansal', 32), ('cmonjeau', 32), ('zhengzhenxian', 32), ('AndreaGuarracino', 32), ('SilasK', 31), ('mbhall88', 31), ('kbessonov1984', 31), ('Julian de Ruiter', 31), ('jamesabbott', 31), ('colinbrislawn', 30), ('Nick Harding', 30), ('simonbray', 30), ('EdHarry', 29), ('matuskosut', 29), ('visze', 29), ('runner', 29), ('raphenya', 28), ('stuber', 28), ('aaronmussig', 28), ('mdehollander', 28), ('luizirber', 28), ('gallardoalba', 28), ('remimarenco', 27), ('Christian Roth', 27), ('Francesco Beghini', 27), ('jfy133', 27), ('JinfengChen', 27), ('runner', 27), ('vladsavelyev', 26), ('xileF1337', 26), ('karl616', 26), ('marc-sturm', 26), ('runner', 26), ('nickp60', 26), ('siebrenf', 26), ('chambm', 26), ('RobertKleinkauf', 25), ('runner', 25), ('runner', 25), ('Maarten-vd-Sande', 25), ('lldelisle', 25), ('dariober', 24), ('lijinbio', 24), ('Joe Brown', 24), ('Rob Patro', 24), ('gbouras13', 23), ('nvnieuwk', 23), ('DrYak', 23), ('r78v10a07', 23), ('PertuyF', 23), ('jvolkening', 23), ('Jonathan Manning', 23), ('rhysnewell', 23), ('eseiler', 23), ('Will Rowe', 23), ('winni2k', 23), ('runner', 23), ('Zhuoqing Fang', 23), ('alexpreynolds', 23), ('runner', 23), ('guillaumecharbonnier', 22), ('bogemad', 22), ('standage', 22), ('emilhaegglund', 22), ('Joerg Fallmann', 22), ('pbordron', 22), ('jenzopr', 22), ('FelixMoelder', 22), ('runner', 22), ('akikuno', 21), ('davidliwei', 21), ('jbelyeu', 21), ('nextgenusfs', 21), ('samuelecancellieri', 21), ('yihming', 21), ('NickSto', 21), ('runner', 21), ('holmrenser', 21), ('peterk87', 20), ('runner', 20), ('a-solovyev12', 20), ('Cristel Thomas', 20), ('nextstrain-bot', 20), ('brainstorm', 20), ('blankenberg', 20), ('James Johnson', 20), ('gavinmdouglas', 20), ('dirkjanvw', 20), ('adamhospital', 19), ('advaitb', 19), ('wwood', 19), ('bkille', 19), ('lh3', 19), ('innovate-invent', 19), ('scwatts', 19), ('aemiol', 19), ('bow', 19), ('cjw85', 19), ('zach powers', 19), ('nh3', 18), ('ypriverol', 18), ('rfarouni', 18), ('Caleb Easterly', 18), ('David Koppstein', 18), ('pavanvidem', 18), ('Adam Cribbs', 18), ('vodkatad', 17), ('dkoppstein', 17), ('jayramr', 17), ('rwdavies', 17), ('runner', 17), ('kakatoh', 17), ('jianshu93', 17), ('robomics', 17), ('pjbriggs', 17), ('nvictus', 16), ('sachalau', 16), ('mcornwell1957', 16), ('maarten-k', 16), ('eschen42', 16), ('alienzj', 16), ('astrovsky01', 16), ('mjohnpayne', 16), ('aliciaaevans', 16), ('AndreasHeger', 16), ('andrewprzh', 16), ('davidechicco', 16), ('cumbof', 16), ('hechth', 16), ('iwohlers', 16), ('jdblischak', 16), ('ccwang002', 16), ('marksantcroos', 16), ('oschwengers', 16), ('yesimon', 16), ('sjanssen2', 16), ('tfenne', 16), ('raivivek', 16), ('lowandrew', 16), ('mirand863', 16), ('liberjul', 15), ('jmeppley', 15), ('dakl', 15), ('linsalrob', 15), ('RomainFeron', 15), ('scottgigante', 15), ('victorlin', 15), ('ajaypanyala', 15), ('qiagu', 15), ('Will Rowe', 15), ('asafpr', 15), ('johnne', 15), ('decrevi', 15), ('fenderglass', 15), ('kostrykin', 15), ('runner', 15), ('rababerladuseladim', 15), ('llegregam', 15), ('andrewdavidsmith', 14), ('foellmelanie', 14), ('brantfaircloth', 14), ('CicoZhang', 14), ('ernfrid', 14), ('skoren', 14), ('fgypas', 14), ('guillermo-carrasco', 14), ('mgopez', 14), ('loraine-gueguen', 14), ('hsgweon', 14), ('hasindu2008', 14), ('jmattick', 14), ('maxibor', 14), ('runner', 14), ('runner', 14), ('zeeev', 14), ('skarunan', 14), ('pabloaledo', 13), ('ning-y', 13), ('marcelmat12', 13), ('hjulienne', 13), ('xialiu71', 13), ('StevenVerbruggen', 13), ('apetkau', 13), ('0xaf1f', 13), ('andersgs', 13), ('Bengt Sennblad', 13), ('c-mertes', 13), ('tstrnity', 13), ('clemaitre', 13), ('EricKutschera', 13), ('reid-wagner', 13), ('ramprasadn', 13), ('michauhl', 13), ('martin-steinegger', 13), ('kristyhoran', 13), ('khaled196', 13), ('kcleal', 13), ('jonasscheid', 13), ('hainm', 13), ('scholtalbers', 12), ('ssnn-airr', 12), ('runner', 12), ('pbordron', 12), ('moshi4', 12), ('mcfrith', 12), ('cpockrandt', 12), ('biocondabotbot', 12), ('wclose', 12), ('grst', 12), ('linzhi2013', 12), ('grenaud', 12), ('Guowei He', 12), ('kbseah', 12), ('bsipos', 12), ('jluebeck', 12), ('kurtwheeler', 12), ('malloryfreeberg', 12), ('shaomingfu', 12), ('Owen Solberg', 12), ('robert-ervin-jones', 12), ('longr', 12), ('souravsingh', 12), ('stschiff', 12), ('tfursten', 12), ('camillescott', 11), ('simonhtausch', 11), ('SooLee', 11), ('stevecassidy', 11), ('tsibley', 11), ('tprodanov', 11), ('veitveit', 11), ('vinisalazar', 11), ('adlerpriit', 11), ('benzoid', 11), ('duxan', 11), ('runner', 11), ('BenoitMorel', 11), ('fasnicar', 11), ('gtonkinhill', 11), ('guilhermesena1', 11), ('Jacques Dainat', 11), ('LorenzoMerotto', 11), ('marcus1487', 11), ('buchkovm', 11), ('mtekman', 11), ('mkirsche', 11), ('PedroMTQ', 11), ('pchaumeil', 11), ('RalfG', 11), ('Redmar-van-den-Berg', 11), ('Tobias Andermann', 10), ('Thom Griffioen', 10), ('Thiseas C. Lamnidis', 10), ('sguizard', 10), ('j-4', 10), ('unode', 10), ('rasmusagren', 10), ('Olivier Inizan', 10), ('adamrtalbot', 10), ('Tom Harrop', 10), ('Tyghe Vallard', 10), ('Yasuhiro Tanizawa', 10), ('amos', 10), ('fredericlemoine', 10), ('ljq12697', 10), ('michalk8', 10), ('sureshhewa', 10), ('svletana', 10), ('tlacroix', 10), ('Adamtaranto', 10), ('AlessioMilanese', 10), ('Anne Fouilloux', 10), ('ODiogoSilva', 10), ('DonFreed', 10), ('drewjbeh', 10), ('emarinier', 10), ('fwhelan', 10), ('gwct', 10), ('moskalenko', 10), ('klugem', 10), ('berkelem', 10), ('lucventurini', 10), ('Lenbok', 10), ('PelzKo', 10), ('sujunhao', 10), ('huddlej', 10), ('brwnj', 10), ('jamorrison', 10), ('sfiligoi', 10), ('Xiangyang1984', 9), ('Xi Chen', 9), ('Usman Rashid', 9), ('Simon Guest', 9), ('Shaun Jackman', 9), ('Shahab Sarmashghi', 9), ('Sergey Naumenko', 9), ('Sebastian Roskosch', 9), ('Ryan Raaum', 9), ('Rick', 9), ('Ray', 9), ('Raony Guimaraes', 9), ('Zhuoqing Fang', 9), ('akrinos', 9), ('cjandrasits', 9), ('eseiler', 9), ('kdc10', 9), ('kli28', 9), ('mzytnicki', 9), ('nickjcroucher', 9), ('nikostr', 9), ('richard-burhans', 9), ('runner', 9), ('stekaz', 9), ('24349', 9), ('Alexander Junge', 9), ('Alexander Lenail', 9), ('Avi Srivastava', 9), ('Baraa Orabi /baraːʔ ʕraːbi/', 9), ('Christopher Schröder', 9), ('Darian', 9), ('Fidel Ramirez', 9), ('GuillaumeG', 9), ('Gus Dunn', 9), ('Iain Milne', 9), ('Istvan Albert', 9), ('Prashant Kumar Kuntala', 9), ('Pavel V. Dimens', 9), ('Oana Enache', 9), ('Michael Roach', 9), ('Michael Hall', 9), ('Mehrdad Bakhtiari', 9), ('Leonardo de Oliveira Martins', 9), ('João Sequeira', 9), ('Jover Lee', 9), ('Jonathan Manning', 9), ('Jim Procter', 9), ('Jared Simpson', 9), ('Tobias Neumann', 8), ('Thomas N Lawson', 8), ('Thomas Gregory', 8), ('Stephan Flemming', 8), ('Samuel Aroney', 8), ('Ricardo A. Vialle', 8), ('Peter Diakumis', 8), ('Oliver Schwengers', 8), ('Morteza Hosseini', 8), ('Max Brown', 8), ('Martin Steinegger', 8), ('Martin Cech', 8), ('Mark Grivainis', 8), ('Liam Keegan', 8), ('Tunc Kayikcioglu', 8), ('Wolfgang Maier', 8), ('Wolfgang Maier', 8), ('Yunxi Liu', 8), ('alexeigurevich', 8), ('chaklim', 8), ('farchaab', 8), ('jbaaijens', 8), ('jean-marie burel', 8), ('kenza12', 8), ('philres', 8), ('runner', 8), ('sseth', 8), ('Alex Petty', 8), ('Andreas Sjödin', 8), ('Anne Guichard', 8), ('Aroon Chande', 8), ('BarryDigby', 8), ('Carl Mathias Kobel', 8), ('Chad Laing', 8), ('CicyYeung', 8), ('Daniel Mapleson', 8), ('Daniel McDonald', 8), ('Dr. K. D. Murray', 8), ('Edgardo M. Ortiz', 8), ('Fernando Meyer', 8), ('Leo Biscassi', 8), ('Lee Katz', 8), ('Ka Ming Nip', 8), ('Jonathan Manning', 8), ('John Greeley', 8), ('Joerg Fallmann', 8), ('Jin Lee', 8), ('Jasmijn', 8), ('Ilya Flyamer', 8), ('Hugo Varet', 8), ('Hualin Liu (刘华林)', 8), ('Hai Nguyen', 8), ('Florian Zwagemaker', 8), ('Florian Eggenhofer', 8), ('Robert Vaser', 7), ('Shunhua Han', 7), ('Sinan Uğur Umu', 7), ('Stian Soiland-Reyes', 7), ('Timo Sachsenberg', 7), ('Tobias Andermann', 7), ('Travis Wrightsman', 7), ('Vijini Mallawaarachchi', 7), ('Wout Bittremieux', 7), ('simojoe', 7), ('RJMW', 7), ('Pierrick Roger', 7), ('Philipp Rescheneder', 7), ('Philip Reiner Kensche', 7), ('Parham Kazemi', 7), ('Niko Pinter', 7), ('Niema Moshiri', 7), ('Nathan Weeks', 7), ('Mike Tisza', 7), ('runner', 7), ('rspreafico', 7), ('rdmorin', 7), ('pbasting', 7), ('mworkentine', 7), ('maarten-k', 7), ('luobiny', 7), ('leoisl', 7), ('lecorguille', 7), ('jiarong', 7), ('james hadfield', 7), ('fgiacomoni', 7), ('entzian', 7), ('chrisBioInf', 7), ('cguyomar', 7), ('bolduc', 7), ('Yuri Pirola', 7), ('Yin Lu', 7), ('Michael Uhl', 7), ('Florian G. Pflug', 7), ('Esteban', 7), ('Ed Lui', 7), ('David Heller', 7), ('Clemens Schmid', 7), ('Christopher Lowe', 7), ('Christiam Camacho', 7), ('Chenkai Li', 7), ('Carlos P Cantalapiedra', 7), ('Brad Langhorst', 7), ('Bertrand Néron', 7), ('Arun Patil', 7), ('Ariel Erijman', 7), ('Alexandra Weisberg', 7), ('Alan Amossé', 7), ('Agnieszka Danek', 7), ('Adam Gayoso', 7), ('Aaron Petkau', 7), ('Michael R. Crusoe', 7), ('Michael Cormier', 7), ('Mattias de Hollander', 7), ('Matthew Fogel', 7), ('Matej Troják', 7), ('Marco Galardini', 7), ('MarWoes', 7), ('Malte Petersen', 7), ('Maciek Wójcikowski', 7), ('LiterallyUniqueLogin', 7), ('Leon Kuchenbecker', 7), ('Kathy Chen', 7), ('Kai Blin', 7), ('Julianus Pfeuffer', 7), ('Jacques van Helden', 7), ('Jacques Dainat', 7), ('Geni Silva', 7), ('Galen Xing', 7), ('Olivier Sallou', 6), ('Peter Diakumis', 6), ('Pierrick ROGER', 6), ('Rone Charles', 6), ('Salvatore Cosentino', 6), ('Sara Monzón', 6), ('Serguei Sokol', 6), ('Thanh Lê', 6), ('Thimothee Virgoulay', 6), ('Tim Hsiau', 6), ('Tobias Marschall', 6), ('Vladimir Mikryukov', 6), ('Nuno Fonseca', 6), ('Noah Fahlgren', 6), ('Moritz', 6), ('Mitchell Robert Vollger', 6), ('Michal Stolarczyk', 6), ('Matthew Nguyen', 6), ('Martin Larralde', 6), ('Marilisa Montemurro', 6), ('Marco Notaro', 6), ('Marc Jones', 6), ('Manuel Holtgrewe', 6), ('Žiga Avsec', 6), ('Özcan Esen', 6), ('xzt41', 6), ('xuzhougeng', 6), ('wernerkrampl', 6), ('upendrak', 6), ('tina', 6), ('tgjohnst', 6), ('runner', 6), ('runner', 6), ('rhuebler', 6), ('psj1997', 6), ('nickloman', 6), ('mjsull', 6), ('migun', 6), ('kpepper', 6), ('jiangweiyao', 6), ('jhl667', 6), ('guilledufort', 6), ('camytran', 6), ('andvides', 6), ('Yekai Zhou', 6), ('Will Fondrie', 6), ('David Emms', 6), ('Daniel McDonald', 6), ('Dan Sun', 6), ('Damien Marsic', 6), ('Christoph Püthe', 6), ('Casey Dunn', 6), ('BugWriter', 6), ('Botond Sipos', 6), ('Boris Yamrom', 6), ('Benjamin Linard', 6), ('Benedetto Polimeni', 6), ('AtaJadidAhari', 6), ('Arya Massarat', 6), ('Antoine Limasset', 6), ('Alexander Lenail', 6), ('Alexander Junge', 6), ('Alexander Dilthey', 6), ('Alex Fraser', 6), ('Alan Collins', 6), ('Afif Elghraoui', 6), ('Adrian Altenhoff', 6), ('Adam Rivers', 6), ('Adam Cribbs', 6), ('Manish Goel', 6), ('Mani Arumugam', 6), ('Luobin', 6), ('Luca Venturini', 6), ('Luca Pinello', 6), ('Leon Rauschning', 6), ('Kyle Beauchamp', 6), ('Keith Suderman', 6), ('Johannes Alneberg', 6), ('James Taylor', 6), ('Jakub', 6), ('David Příhoda', 6), ('DrYak', 6), ('Edgar', 6), ('Erik Kastman', 6), ('Eugene79', 6), ('Florian Plaza Oñate', 6), ('Gisela Gabernet', 6), ('Greg Way', 6), ('Hannes Pétur Eggertsson', 6), ('Harshil Patel', 6), ('Hayden Sun', 6), ('Ivan Sovic', 6), ('Sander Bollen', 5), ('Santiago Lacalle', 5), ('Saskia Hiltemann', 5), ('Seth', 5), ('Shifu Chen', 5), ('Simon C Chu', 5), ('Simon Pearce', 5), ('Steven Weaver', 5), ('Tham Cheng Yong', 5), ('Thomas Weber', 5), ('Tom L Kaufmann', 5), ('Tomás Di Domenico', 5), ('Tomás Di Domenico', 5), ('Torsten Seemann', 5), ('Travis Wrightsman', 5), ('xfengnefx', 5), ('Salomé Brunon', 5), ('Sakkayaphab Piwluang', 5), ('Sabrina Krakau', 5), ('Sabrina Krakau', 5), ('Ryan Wick', 5), ('Ryan James Kennedy', 5), ('Ruibang Luo', 5), ('Ronny Lorenz', 5), ('Romain Lopez', 5), ('RolandFaure', 5), ('Robin Andeer', 5), ('Rauf Salamzade', 5), ('Qi ZHAO', 5), ('Praveen Kumar', 5), ('Philipp Rescheneder', 5), ('Peter Menzel', 5), ('suhrig', 5), ('runner', 5), ('runner', 5), ('qibebt-bioinfo', 5), ('pmjklemm', 5), ('paulzierep', 5), ('lspindler2509', 5), ('lonsbio', 5), ('leobiscassi', 5), ('jaidevjoshi83', 5), ('hsinnan', 5), ('fgiacomoni', 5), ('fanninpm', 5), ('duboism', 5), ('derekwbarnett', 5), ('cruk-mi', 5), ('brendanf', 5), ('boukn', 5), ('asetGem', 5), ('andrefaure', 5), ('anatskiy', 5), ('almiheenko', 5), ('aaguinal', 5), ('Zhou ZJ', 5), ('YuSugihara', 5), ('Yining Liu', 5), ('Yan Gao', 5), ('Xianjie Huang', 5), ('Vivek Rai', 5), ('Vivek Bhardwaj', 5), ('Vincent Darbot', 5), ('Jingyuan Hu', 5), ('Jingwen Ren', 5), ('Jim Shaw', 5), ('Jiarong Guo', 5), ('Jesper Eisfeldt', 5), ('Jeltje', 5), ('Jean Mainguy', 5), ('Hyeshik Chang', 5), ('Hadrien Gourlé', 5), ('Gherman V. Uritskiy', 5), ('Francesco Rubino', 5), ('Erik Clarke', 5), ('Eaton Lab', 5), ('DuyenLe2000', 5), ('Derek Croote', 5), ('David Seifert', 5), ('Clint Valentine', 5), ('Chen Ying', 5), ('Benjamin Wingfield', 5), ('Bengt Sennblad', 5), ('Ben J Woodcroft', 5), ('Bede Constantinides', 5), ('Augustine (Gus) Dunn', 5), ('Arya Kaul', 5), ('Arafat Rahman', 5), ('AllenWLynch', 5), ('Alistair Miles', 5), ('AlexTate', 5), ('Aaron Ragsdale', 5), ('A. Murat Eren', 5), ('', 5), ('Peter Edge', 5), ('Pablo Riesgo-Ferreiro', 5), ('Ozan Özışık', 5), ('Nathan Roach', 5), ('Nathan Boley', 5), ('Murilo Machado', 5), ('Mike Axtell', 5), ('Michal Lorenc', 5), ('Michael Alonge', 5), ('Matt Higgins', 5), ('Mateus Bernabe Fiamenghi', 5), ('Mark Polster', 5), ('Mark Abraham', 5), ('Maria Bernard', 5), ('Marcus D Sherman', 5), ('John Didion', 5), ('Johnathan Wong', 5), ('Jonas Fuchs', 5), ('Jonathan Manning', 5), ('Julian Trachsel', 5), ('Justin Fear', 5), ('Keuv Grvl', 5), ('Le (Lena) Huang', 5), ('Li Song', 5), ('Lidong', 5), ('Lightning Auriga', 5), ('Lili Blumenberg', 5), ('Linelle', 5), ('Lucas van Dijk', 5), ('Léo Biscassi', 5), ('Manuel Prinz', 5), ('Simon Dirmeier', 4), ('Shunhua Han', 4), ('Shujun Ou', 4), ('Shubham Chandak', 4), ('Shuai WANG', 4), ('SegawaTenta', 4), ('SchwarzMarek', 4), ('SantiagoSanchezF', 4), ('Sam Hunter', 4), ('Sam Horsfield', 4), ('Roman Briskine', 4), ('Sébastien Besson', 4), ('TPOB', 4), ('Thomas McGowan', 4), ('Tobias Baril', 4), ('Vimalkumar Velayudhan', 4), ('Vini Salazar', 4), ('Volodimir Olexiouk', 4), ('Wibowo Arindrarto', 4), ('Wolfgang Kopp', 4), ('jowong4', 4), ('Mylène Mariana Gonzales André', 4), ('Nadolina', 4), ('Nate Coraor', 4), ('Nathan Edwards', 4), ('Nils Hoffmann', 4), ('Patrick R. Wright', 4), ('Paul', 4), ('Peng Jia', 4), ('Peter Pruisscher', 4), (""Peter van 't Hof"", 4), ('Piero Dalle Pezze', 4), ('Pierre Marijon', 4), ('Pierre Pouchin', 4), ('Rachel Chan', 4), ('Rafael Mamede', 4), ('Renesh Bedre', 4), ('René Warren', 4), ('Robert Leach', 4), ('Robert Oldroyd', 4), ('Roberto Spreafico', 4), ('Roberto Spreafico', 4), ('jpfeuffer', 4), ('kowallus', 4), ('ljmciver', 4), ('marekkokot', 4), ('mblue9', 4), ('nickeener', 4), ('pedronachtigall', 4), ('pedroscampoy', 4), ('richard morris', 4), ('rplanel', 4), ('runner', 4), ('runner', 4), ('runner', 4), ('simroux', 4), ('singerj', 4), ('sunqian2002', 4), ('suwangbio', 4), ('vlieu', 4), ('volcano1998', 4), ('wjunLu', 4), ('Woosub-Kim', 4), ('Xavier Garnier', 4), ('Yatish Turakhia', 4), ('Youngmok Jung', 4), ('Yu Sugihara', 4), ('Yue Yin', 4), ('Zhengtao xiao', 4), ('Zilong-Li', 4), ('akmorrow13', 4), ('andrewjpage', 4), ('anjaf', 4), ('beardymcjohnface', 4), ('bvalot', 4), ('bvalot', 4), ('clottaz', 4), ('daydream-boost', 4), ('dpellow', 4), ('gmat', 4), ('huangnengCSU', 4), ('jasper1918', 4), ('jhay-epcc', 4), ('joshuailevy', 4), ('Elmar Pruesse', 4), ('Enrico Seiler', 4), ('Eric Talevich', 4), ('Erinija', 4), ('Felix Hartkopf', 4), ('Felix Krueger', 4), ('Felix Wiegand', 4), ('Filipe G. Vieira', 4), ('Florian De Temmerman', 4), ('Gautier RICHARD', 4), ('Gil Freund', 4), ('Greg Boratyn', 4), ('Greg Von Kuster', 4), ('Hassan Gamaleldin', 4), ('Hayden Metsky', 4), ('Henry Zhang', 4), ('Hirak Sarkar', 4), ('ITBE-Lab', 4), ('Ilia Minkin', 4), ('Ino de Bruijn', 4), ('Adam Diehl', 4), ('Ahmed M Moustafa', 4), ('Alejandro Gonzales-Irribarren', 4), ('Ali Ghaffaari', 4), ('Amanda Cooksey', 4), ('Angie Hinrichs', 4), ('Anton Goloborodko', 4), ('Benedikt Reiz', 4), ('Bianca', 4), ('Boas van der Putten', 4), ('Brian Haas', 4), ('Cameron Palmer', 4), ('Cedric', 4), ('Christian Diener', 4), ('Christopher Mohr', 4), ('Cole Lyman', 4), ('Daniel Chang', 4), ('Daniel Cooke', 4), ('Daniel DW Kim', 4), ('Daniel Schreyer', 4), ('Dylan Aïssi', 4), ('Kendell Clement', 4), ('Kristian Ullrich', 4), ('LSTUGA', 4), ('LYC-vio', 4), ('Leighton Pritchard', 4), ('Liang-Bo Wang', 4), ('Luca Denti', 4), ('Marco Matthies', 4), ('Marek Cmero', 4), ('Marius Wöste', 4), ('Markus Fleischauer', 4), ('Markus Sommer', 4), ('Martin Rippin', 4), ('Matt Holt', 4), ('Max Linke', 4), ('Maxim Skoryk', 4), ('Mehmet Tekman', 4), ('Mette Bentsen', 4), ('Mian Umair Ahsan', 4), ('Michael Roach', 4), ('Mylène Mariana Gonzales André', 4), ('Isaac Virshup', 4), ('Jaebeom Kim', 4), ('Jake Lehle', 4), ('Jakob McBroome', 4), ('James A. Fellows Yates', 4), ('James Johnson', 4), ('Jared Lumpe', 4), ('Jasmin F', 4), ('Jasper Hu', 4), ('Jean-Marie Burel', 4), ('KenSung-Lab', 4), ('Keith Hughitt', 4), ('Kai Blin', 4), ('Jules Kreuer', 4), ('John Davey', 4), ('JiangTao', 4), ('Jeremy Leipzig', 4), ('Jeffrey Thiessen', 4), ('Jeffrey Regier', 4), ('Jeffrey Barrick', 4), ('Jeff Hussmann', 4), ('Thomas A. Christensen II', 3), ('Tetiana Khotiaintseva', 3), ('TGatter', 3), ('Stephen Turner', 3), ('Stephen Shank', 3), ('Stephen Nayfach', 3), ('Simon Heumos', 3), ('Siavash Mirarab', 3), ('Samuel Blanck', 3), ('Sam W', 3), ('Ryan Morrison', 3), ('Rutger Vos', 3), ('Romain Feron', 3), ('Thomas A. Christensen II', 3), ('Thomas Duigou', 3), ('Till Hartmann', 3), ('Tim Webster', 3), ('Tom Kuipers', 3), ('Tom Smith', 3), ('Tyler Funnell', 3), ('Upendra Kumar Devisetty', 3), ('Urminder Singh', 3), ('Vineet Bansal', 3), ('Vivek Rai', 3), ('Vladimir Nikolić', 3), ('Willem', 3), ('Winni Kretzschmar', 3), ('Charlotte Capitanchik', 3), ('Nate Olson', 3), ('Nick Harding', 3), ('Nico Trummer', 3), ('Niek de Jonge', 3), ('Nikos Pappas', 3), ('Oliver Cheng', 3), ('Olivier Sallou', 3), ('Oscar Wilkins', 3), ('Owen Solberg', 3), ('Patrick Blumenkamp', 3), ('Patrick Hüther', 3), ('Patrick Sodré', 3), ('Paul De Geest', 3), ('Pavel V. Dimens', 3), ('Peng Ni', 3), ('Peter Peneder', 3), ('Philip Tzou', 3), ('Pierre Pericard', 3), ('Pierrick ROGER', 3), ('Prete', 3), ('Qiyun Zhu', 3), ('RNieuwenhuis', 3), ('Rei Kajitani', 3), ('Rich Stanton', 3), ('Rlibouban', 3), ('Rob Patro', 3), ('Roger Volden', 3), ('matthieujung', 3), ('mencian', 3), ('mwykes', 3), ('ok-gitr', 3), ('ptlcc', 3), ('qdu-bioinfo', 3), ('quito418', 3), ('reneechou123', 3), ('runner', 3), ('runner', 3), ('runner', 3), ('ruqianl', 3), ('sblanck', 3), ('seryrzu', 3), ('simozacca', 3), ('sseth', 3), ('tlkaufmann', 3), ('trishorts', 3), ('vpepe', 3), ('xgaia', 3), ('xingma', 3), ('yamato', 3), ('yanyew', 3), ('ydLiu-HIT', 3), ('yodeng', 3), ('yoglo', 3), ('zhanxw', 3), ('zslastman', 3), ('Winni Kretzschmar', 3), ('Xin Zhou', 3), ('Yan Gao', 3), ('Yannick Boursin', 3), ('Zechen Chong', 3), ('Zhi-Jie Cao', 3), ('alex2cris', 3), ('andriesfeder', 3), ('anne-gcd', 3), ('antonisdim', 3), ('antonisdim', 3), ('arihueb', 3), ('balajtimate', 3), ('benzoid', 3), ('biocondabotbot', 3), ('coeit', 3), ('david-castillo', 3), ('drramki', 3), ('fgiacomoni', 3), ('frytime32', 3), ('hag007', 3), ('idfarbanecha', 3), ('jcbioinformatics', 3), ('jennifer-bio', 3), ('jesvedberg', 3), ('jupollet', 3), ('karentherkelsen', 3), ('lemene', 3), ('Chien-Chi Lo', 3), ('Chris Saunders', 3), ('Chris Ulpinnis', 3), ('Christoph Stahl', 3), ('Chuanyi Zhang', 3), ('Connor Morgan-Lang', 3), ('Daniel Cameron', 3), ('Daniel Danciu', 3), ('Daniel Doerr', 3), ('Dejan Knežević', 3), ('Diogo Macedo', 3), ('Douglas Slotta', 3), ('Ehsan Haghshenas', 3), ('Emma Hobbs', 3), ('Erik Fasterius', 3), ('Erkin Alacamli', 3), ('Etienne Camenen', 3), ('Evan Bolyen', 3), ('Fatih Karaoglanoglu', 3), ('Fei Zhao', 3), ('Florian Wuennemann', 3), ('Forest Dussault', 3), ('Francesco Asnicar', 3), ('FriederikeHanssen', 3), ('Fu Yilei', 3), ('Gianluca Corrado', 3), ('Giorgio Gonnella', 3), ('(JR) Ray Sajulga', 3), ('000CU000', 3), ('ANGSD', 3), ('Aaron Pfennig', 3), ('Adrián Diaz', 3), ('Aldert Zomer', 3), ('Aleksei Korzhenkov', 3), ('Alexander', 3), ('Alexey Kozlov', 3), ('Amirhossein Afshinfard', 3), ('Anders Sune Pedersen', 3), ('Ankit Arni', 3), ('AntonS-bio', 3), ('Antonio Fernandez-Guerra', 3), ('Anže Starič', 3), ('Aroon Chande', 3), ('Arthur Eschenlauer', 3), ('Augustine (Gus) Dunn', 3), ('Bede Constantinides', 3), ('Benjamin Buchfink', 3), ('Bhavya Papudeshi', 3), ('Bob', 3), ('Brian J Arnold', 3), ('Brian Weitzner', 3), ('Cameron Hyde', 3), ('Cameron Roots', 3), ('Catherine Chahrour', 3), ('Cedrick Agaser', 3), ('Josh Levy', 3), ('João Vitor', 3), ('Julian Uszkoreit', 3), ('Katy Brown', 3), ('Kimmo Palin', 3), ('KyleL1998', 3), ('Leily Rabbani', 3), ('Lucas van Dijk', 3), ('Lucpen', 3), ('Maarten Kooyman', 3), ('Maggie Steiner', 3), ('Malte Petersen', 3), ('Manuel Tognon', 3), ('Mark Chaisson', 3), ('Mark Esler', 3), ('Martin Proks', 3), ('Mateusz Warowny', 3), ('Matt Workentine', 3), ('Matthew Dillon', 3), ('Matthias Blanke', 3), ('Mengwei Shi', 3), ('Mesh89', 3), ('Michael Shaffer', 3), ('Michael X. Wang', 3), ('Moray Smith', 3), ('Morgane Terezol', 3), ('Moritz E. Beber', 3), ('NaNg', 3), ('Gosuke Shibahara', 3), ('Graham Gower', 3), ('Guy Assa', 3), ('Hadi', 3), ('Hadrien Gourlé', 3), ('Hao Hou', 3), ('Helena Rasche', 3), ('Henry Miller', 3), ('Ian Fiddes', 3), ('Ignacio Eguinoa', 3), ('James Ashmore', 3), ('James Chuang', 3), ('Jamshed Khan', 3), ('Jan van Haarst', 3), ('Jorge Miguel Silva', 3), ('Joon Klaps', 3), ('Jonghun Park', 3), ('Jonathan Ott', 3), ('John Sundh', 3), ('Johan Nylander', 3), ('Joelle Mbatchou', 3), ('Joe Wirth', 3), ('Jim Downie', 3), ('Jianyu Yang', 3), ('Jens-Uwe Ulrich', 3), ('Jeff S Jasper', 3), ('Jason Chin', 3), ('Jappy', 3), ('Stephen Rudd', 2), ('Subazini TK', 2), ('Sudaraka Mallawaarachchi', 2), ('SusiJo', 2), ('Susie Grigson', 2), ('Sveinn Einarsson', 2), ('Søren Heidelbach', 2), ('Taher Mun', 2), ('Tessa Pierce', 2), ('Thomas Krannich', 2), ('ThomasWollmann', 2), ('Xiangjiang Wang', 2), ('Stas', 2), ('Simon Ye', 2), ('Simon P Shen', 2), ('Sigmar Stefansson', 2), ('ShunOuchi', 2), ('Shubham Chandak', 2), ('Shaojun Xie', 2), ('Seung-been ""Steven"" Lee', 2), ('Serka-M', 2), ('Sergio Arredondo', 2), ('Semidán Robaina, Ph.D', 2), ('Sebastian Schmeier', 2), ('Wolfgang Maier', 2), ('William Rowell', 2), ('William Matlock', 2), ('Wenbin Zhou', 2), ('Wen Harold Chen', 2), ('W. Harold Chen', 2), ('W. Harold Chen', 2), ('Vivaswat Shastry', 2), ('Vinzenz', 2), ('Vinh Tran', 2), ('Vincent Ranwez', 2), ('Viliam Simko', 2), ('Viktoria Isabel Schwarz', 2), ('Veit Schwämmle', 2), ('Vedanth Ramji', 2), ('Vang Le', 2), ('ValentinMarcon', 2), ('Valentin Marcon', 2), ('Trestan Pillonel', 2), ('Timothy R. Fallon', 2), ('Timo Sachsenberg', 2), ('Tim15-tech', 2), ('Tim Stickland', 2), ('Sebastian Canzler', 2), ('Pierrick ROGER', 2), ('Pierre Morisse', 2), ('Pierre Barbera', 2), ('Philipp A', 2), ('Phil Ewels', 2), ('Peng Jia', 2), ('Paweł', 2), ('Parnal Joshi', 2), ('Paimon Goulart', 2), ('Oana Enache', 2), ('Nuwan Goonasekera', 2), ('Ningshan Li', 2), ('Nina Murrell', 2), ('Nils Hoffmann', 2), ('Nick Gabry', 2), ('Nathan Roach', 2), ('Nancy F. Hansen', 2), ('Máté Balajti', 2), ('Mohsen Taheri', 2), ('Mohammed Alshehri', 2), ('MitraDarja', 2), ('Mikhail Karasikov', 2), ('Mike Smith', 2), ('SeaneryChang', 2), ('Sean Solari', 2), ('Santi Villalba', 2), ('SantaMcCloud', 2), ('Sam Nicholls', 2), ('Sam Lambert', 2), ('Ryan Velazquez', 2), ('Ryan Miller', 2), ('Ryan Gutenkunst', 2), ('Ron Fechtner', 2), ('Roman Feldbauer', 2), ('Robert Vaser', 2), ('Rick Kim', 2), ('Rhys Newell', 2), ('Remi-Andre Olsen', 2), ('Ravin Poudel', 2), ('Rajeeva Musunuri', 2), ('Qian Alvin Qin', 2), ('Qi-Maria', 2), ('Pontus Höjer', 2), ('Polina', 2), ('Po-E Li', 2), ('Pierrick Roger Mele', 2), ('春日部来的', 2), ('runner', 2), ('runner', 2), ('runner', 2), ('runner', 2), ('runner', 2), ('richjstark', 2), ('pimarin', 2), ('phue', 2), ('oinizan', 2), ('obenno', 2), ('nickhsmith', 2), ('mwaldl', 2), ('mpiersonsmela', 2), ('momocoding', 2), ('mmcguffi', 2), ('mjram0s', 2), ('miguelteixeira', 2), ('miasteinberg', 2), ('mcarrara', 2), ('maxried', 2), ('mattsoup', 2), ('massiddaMT', 2), ('lweber21', 2), ('Ümit Akköse', 2), ('znerp', 2), ('ziyewang', 2), ('zhouyangwang', 2), ('zhangjuncsu', 2), ('zachcp', 2), ('yyminmax', 2), ('ylf9811', 2), ('yao-qiuming', 2), ('y4nnick8', 2), ('tomiles', 2), ('tloka', 2), ('tina', 2), ('thom', 2), ('therealgenna', 2), ('teresa-m', 2), ('tamuanand', 2), ('sneumann', 2), ('simone-pignotti', 2), ('sarahbuzz', 2), ('samsonweiner', 2), ('runner', 2), ('runner', 2), ('liamcheney', 2), ('cgirardot', 2), ('ccameron', 2), ('cbrackley', 2), ('biocodz', 2), ('betsig', 2), ('arvkevi', 2), ('alexandregilardet', 2), ('alek0991', 2), ('aguus8', 2), ('abishara', 2), ('Zhuoqing Fang', 2), ('Zhuoqing Fang', 2), ('Zhixing Feng', 2), ('Zaher Wanli', 2), ('Yujie Guo', 2), ('Yue Jiang', 2), ('Yue Jiang', 2), ('Young', 2), ('Yongze Yin', 2), ('Yanxiao Zhang', 2), ('Yanhai Gong', 2), ('Xiao Chen', 2), ('XiangjiangWang', 2), ('lgpdevtools', 2), ('knutwa-ext', 2), ('kdcurry', 2), ('jrober84', 2), ('jlduan', 2), ('jimmyliu1326', 2), ('jashapiro', 2), ('jaroslav-kubin', 2), ('ignasrum', 2), ('igcbioinformatics', 2), ('gwaygenomics', 2), ('guozhicong', 2), ('gennadyFauna', 2), ('ericaenjoy3', 2), ('elilarson', 2), ('ekushele', 2), ('eead-csic-compbio', 2), ('dvintache', 2), ('dbeisser', 2), ('compbiofan', 2), ('colinhercus', 2), ('chhylp123', 2), ('chengjun109', 2), ('Hamdiye Uzuner', 2), ('Eoghan Harrington', 2), ('Eike Steinig', 2), ('Ehsan Haghshenas', 2), ('Edmund Miller', 2), ('EbmeyerSt', 2), ('Douglas Lowe', 2), ('Dominik Lux', 2), ('Diego Rubert', 2), ('Derek Benson', 2), ('DennisHeck', 2), ('Denis Puthier', 2), ('Davide Cozzi', 2), ('David Koes', 2), ('David Johnson', 2), ('Daniel Mapleson', 2), ('Daniel Lundin', 2), ('Daniel Danciu', 2), ('Dan Leehr', 2), ('Clemens Messerschmidt', 2), ('Clay McLeod', 2), ('Christophe Antoniewski', 2), ('Christian Heide', 2), ('Christian Atallah', 2), ('Hajime Suzuki', 2), ('Hajime Suzuki', 2), ('HN', 2), ('HBrendy', 2), ('Guillaume Rizk', 2), ('Griffan(Fan Zhang)', 2), ('Gioele La Manno', 2), ('Gianvito Urgese', 2), ('George', 2), ('Galen Xing', 2), ('Fredrik Boulund', 2), ('Frederik Delaere', 2), ('Francesco Beghini', 2), ('Florian Huber', 2), ('FelixBecker', 2), ('Felix Becker', 2), ('Felix', 2), ('Federico Marini', 2), ('Fabrice Touzain', 2), ('Fabian Egli', 2), ('F. H', 2), ('Evgeny Anatskiy', 2), ('Evan Rees', 2), ('Chris-Lowe-Integrity', 2), ('Aurélien Ginolhac', 2), ('Arjun Prasad', 2), ('April Shen', 2), ('Anton Korobeynikov', 2), ('Anna Syme', 2), ('Andrew Perry', 2), ('Andreas Wilm', 2), ('Andreas Grigorjew', 2), ('Anders Jemt', 2), ('Allen Zhang', 2), ('Alex Makunin', 2), ('Ales Varabyou', 2), ('Aleksey Zimin', 2), ('Alejandro Gonzales-Irribarren', 2), ('Alastair Smith', 2), ('Alan McCulloch', 2), ('Ai Okada', 2), ('Ahmad Nuruddin Khoiri', 2), ('Adelme Bazin', 2), ('Adam Gudyś', 2), ('Abdallah Meknas', 2), ('Aaron Ragsdale', 2), ('A. R. Shajii', 2), ('Chris Wymant', 2), ('Cheng-Hung Tsai', 2), ('Chen Li', 2), ('Chaz Reid', 2), ('Chase Mateusiak', 2), ('Charlie', 2), ('Caroline Öhrman', 2), ('Can Firtina', 2), ('C. Titus Brown', 2), ('Bruno Grande', 2), ('Brian Fulton-Howard', 2), ('Bo', 2), ('Bithiah Yuan', 2), ('Bianca Stöcker', 2), ('Bert Droesbeke', 2), ('Bernhard Reuter', 2), ('Benjamin Redelings', 2), ('Benjamin M. Gyori', 2), ('Benjamin Istace', 2), ('Benedikt Obermayer', 2), ('Ben Jackson', 2), ('Ben Ainscough', 2), ('Basel Abu Jamous', 2), ('Michael Sauria', 2), ('Maggie Steiner', 2), ('Maciej', 2), ('Lukas Jansen', 2), ('Luca Nanni', 2), ('Luca Beltrame', 2), ('Louis LE NEZET', 2), ('Liam Shaw', 2), ('Liam Brown', 2), ('LiFj', 2), ('Lexi Morrissey', 2), ('Leon-Bichmann', 2), ('Len Trigg', 2), ('LeilyR', 2), ('Leandro Lima', 2), ('Le Huang', 2), ('Lawrence Du', 2), ('LaraFuhrmann', 2), ('Kurt Hanel', 2), ('Kuan-Hao, Chao', 2), ('Krzysztof Polanski', 2), ('Krischan', 2), ('Kirill Kryukov', 2), ('Kim', 2), ('Michael Milton', 2), ('Michael Milton', 2), ('Michael Chambers', 2), ('Michael', 2), ('Mervin Fansler', 2), ('Max Skoryk', 2), ('Maux82', 2), ('Matthias Zepper', 2), ('Matthias Munz', 2), ('Matthew Bendall', 2), ('Matt Shirley', 2), ('Matt Olm', 2), ('Mathieu Dubois', 2), ('MaryamZaheri', 2), ('Martin Cech', 2), ('Mark Chaisson', 2), ('Marcus Stoiber', 2), ('Marco Rossi', 2), ('Marco Galardini', 2), ('Marco Galardini', 2), ('Marc Zimmermann', 2), ('ManuelTgn', 2), ('Magnus G. Jespersen', 2), ('Kevin Murray', 2), ('Jennifer Tran', 2), ('Jennifer Hammelman', 2), ('Jennifer Fouquier', 2), ('Jeff Tratner', 2), ('Jeb Rosen', 2), ('Jeb Rosen', 2), ('Jason Stajich', 2), ('Jan Strauss', 2), ('Jan Forster', 2), ('James Johnson', 2), ('Jake VanCampen', 2), ('Jack Eakle', 2), ('J. de Cler', 2), ('Isaac Overcast', 2), ('Institute of Medical Genetics and A",788,0,
SummerRC/BiLiBiLi,网上搜集的Android客户端源码（非最新版，可以运行，可看视频）,"# BiLiBiLi

[![Gitter](https://badges.gitter.im/SummerRC/BiLiBiLi.svg)](https://gitter.im/SummerRC/BiLiBiLi?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![Build Status](https://travis-ci.org/SummerRC/BiLiBiLi.svg?branch=master)](https://travis-ci.org/SummerRC/BiLiBiLi)


Android客户端源码（非最新版，可以运行，可看视频）",,2015-12-02T10:50:38Z,2019-05-15T07:51:39Z,2,2,307,26,"('SummerRC', 5), ('gitter-badger', 1)",1,1,
terrylao/PascalContainer,"advanced data structure in Pascal, include  B-Tree,B+-Tree,B*-Tree,T-Tree,HashMap,priority queue,red-black-Tree,AVL-tree,Quad-Tree,SkipList,Sortable Single Linklist,Sort Function,LockFreeQueue,nth_element,M-tree,PDQSort","# PascalContainer
high performance generic data structures and algorithms in freepascal.
B-Tree,
B+-Tree,
B*-Tree,
T-Tree,
HashMap,
priority queue, 
red-black-Tree,
AVL-tree,
Quad-Tree,
SkipList,
Sortable Single Linklist,
Sort Function,
LockFreeQueue.
2023/08/28 加入: nth_element. port from RUST version https://github.com/frjnn/floydrivest with fixed
一個C++ 的類 STL nth_element, 有用到的人有用囉。 
2023/09/22 加入: M-tree. port from 一個非常漂亮的code https://github.com/starkdg/mtree
2023/12/19 加入: PDQSort. port from Orson Peters' PDQSort algorithm.
                 PDQSort has problem in segmented sort an array, but its full array sort is faster than quicksort.

contributor: gcarreno  at github 

基本上都夠用的。
Sort function 的測試：
測試參數： -O3
測試量：10M integer 
測試結果：DualPivotQuickSort 1680ms > quicksort3PivotBasic 1700ms > quicksort 1770ms > IterativequickSort 1800ms > mergesort 2260ms >  Iterativemergesort 3120ms。
generic QuickSort 與非 generic 的慢約500ms ，
非generic Quicksort 的 FPC 與 GCC 同樣開 -O3 ，FPC 慢約100ms。
 在1M Integer 的 PDQSort 比我的QuickSort 快最多50ms。



源碼以BSD LICENSE 發佈：
BSD開源協議是一個給於使用者很大自由的協議。基本上使用者可以""為所欲為"",可以自由的使用，修改源代碼，也可以將修改後的代碼作為開源或者專有軟件再發佈。

但""為所欲為""的前提當你發佈使用了BSD協議的代碼，或則以BSD協議代碼為基礎做二次開發自己的產品時，需要滿足三個條件：

如果再發佈的產品中包含源代碼，則在源代碼中必須帶有原來代碼中的BSD協議。
如果再發佈的只是二進制類庫/軟件，則需要在類庫/軟件的文檔和版權聲明中包含原來代碼中的BSD協議。
不可以用開源代碼的作者/機構名字和原來產品的名字做市場推廣。
BSD 代碼鼓勵代碼共享，但需要尊重代碼作者的著作權。BSD由於允許使用者修改和重新發佈代碼，也允許使用或在BSD代碼上開發商業軟件發佈和銷售，因此是對 商業集成很友好的協議。而很多的公司企業在選用開源產品的時候都首選BSD協議，因為可以完全控制這些第三方的代碼，在必要的時候可以修改或者二次開發。
","'advanced-data', 'b-pl', 'b-t', 'm-tree', 'quad-tree', 'queue', 'skiplist', 'sorting-algorithms'",2019-12-30T11:07:38Z,2024-01-19T12:15:06Z,2,2,37,8,"('terrylao', 90), ('gcarreno', 5)",0,0,
voxpupuli/beaker,Puppet Acceptance Testing Harness,"# Beaker

[![License](https://img.shields.io/github/license/voxpupuli/beaker.svg)](https://github.com/voxpupuli/beaker/blob/master/LICENSE)
[![Test](https://github.com/voxpupuli/beaker/actions/workflows/test.yml/badge.svg)](https://github.com/voxpupuli/beaker/actions/workflows/test.yml)
[![codecov](https://codecov.io/gh/voxpupuli/beaker/branch/master/graph/badge.svg?token=Mypkl78hvK)](https://codecov.io/gh/voxpupuli/beaker)
[![Release](https://github.com/voxpupuli/beaker/actions/workflows/release.yml/badge.svg)](https://github.com/voxpupuli/beaker/actions/workflows/release.yml)
[![RubyGem Version](https://img.shields.io/gem/v/beaker.svg)](https://rubygems.org/gems/beaker)
[![RubyGem Downloads](https://img.shields.io/gem/dt/beaker.svg)](https://rubygems.org/gems/beaker)
[![Donated by Puppet Inc](https://img.shields.io/badge/donated%20by-Puppet%20Inc-fb7047.svg)](#transfer-notice)

Beaker is a test harness focused on acceptance testing via interactions between multiple (virtual) machines. It provides platform abstraction between different Systems Under Test (SUTs), and it can also be used as a virtual machine provisioner - setting up machines, running any commands on those machines, and then exiting.

Beaker runs tests written in Ruby, and provides additional Domain-Specific Language (DSL) methods.  This gives you access to all standard Ruby along with acceptance testing specific commands.

# Installation

See [Beaker Installation](docs/tutorials/installation.md).

# Documentation

Documentation for Beaker can be found in this repository in
[the docs/ folder](docs/README.md).

## Table of Contents

- [Tutorials](docs/tutorials) take you by the hand through the steps to setup a beaker run. Start here if you’re new to Beaker or test development.
- [Concepts](docs/concepts) discuss key topics and concepts at a fairly high level and provide useful background information and explanation.
- [Rubydocs](http://rubydoc.info/github/puppetlabs/beaker/frames) contains the technical reference for APIs and other aspects of Beaker. They describe how it works and how to use it but assume that you have a basic understanding of key concepts.
- [How-to guides](docs/how_to) are recipes. They guide you through the steps involved in addressing key problems and use-cases. They are more advanced than tutorials and assume some knowledge of how Beaker works.

# Beaker Libraries

Beaker functionality has been extended through the use of libraries available as gems. See the [complete list](docs/concepts/beaker_libraries.md) for available gems. See the [beaker-template documentation](https://github.com/puppetlabs/beaker-template/blob/master/README.md) for documentation on creating beaker-libraries.

# Support & Issues

Please log tickets and issues at our [Beaker Issue Tracker](https://tickets.puppetlabs.com/issues/?jql=project%20%3D%20BKR). In addition there is an active #puppet-dev channel on Freenode.

For additional information on filing tickets, please check out our [CONTRIBUTOR doc](CONTRIBUTING.md), and for ticket lifecycle information, check out our [ticket process doc](docs/concepts/ticket_process.md).

# Contributing

If you'd like to contribute improvements to Beaker, please see [CONTRIBUTING](CONTRIBUTING.md).

# Maintainers

For information on project maintainers, please check out our [CODEOWNERS doc](CODEOWNERS).

## Transfer Notice

This plugin was originally authored by [Puppet Inc](http://puppet.com).
The maintainer preferred that Puppet Community take ownership of the module for future improvement and maintenance.
Existing pull requests and issues were transferred over, please fork and continue to contribute here.

Previously: https://github.com/puppetlabs/beaker

## License

This gem is licensed under the Apache-2 license.

## Release information

To make a new release, please do:
* update the version in the gemspec file
* Install gems with `bundle install --with release --path .vendor`
* generate the changelog with `bundle exec rake changelog`
* Check if the new version matches the closed issues/PRs in the changelog
* Create a PR with it
* After it got merged, push a tag. GitHub actions will do the actual release to rubygems and GitHub Packages
",'hacktoberfest',2013-08-16T17:57:03Z,2024-06-04T07:53:29Z,276,172,368,201,"('kevpl', 607), ('justinstoller', 556), ('Alice Nodelman', 442), ('djm68', 395), ('alice nodelman', 339), ('Branan Purvine-Riley', 259), ('Dominic Maraglia', 249), ('bastelfreak', 241), ('puppetlabs-jenkins', 167), ('ekohl', 154), ('tvpartytonight', 147), ('colinPL', 111), ('jes5199', 108), ('Jeff McCune', 82), ('joshcooper', 81), ('sschneid', 66), ('nicklewis', 65), ('Jenkins', 41), ('Michael Higgins', 41), ('rishijavia', 41), ('Wayne', 41), ('petems', 41), ('vindir', 39), ('slippycheeze', 39), ('Dakta', 36), ('John Duarte', 35), ('kbarber', 31), ('waynr', 31), ('Matt Robinson', 30), ('rick', 30), ('cprice404', 30), ('trevor-vaughan', 29), ('jpartlow', 28), ('Daniel Pittman', 28), ('electrical', 27), ('Dan Bode', 26), ('hunner', 26), ('MarkusQ', 25), ('liamjbennett', 23), ('Doug Rosser', 22), ('haus', 21), ('Iristyle', 20), ('Travis Fields', 20), ('highb', 20), ('Brandon High', 20), ('Tony Vu', 19), ('Dan Bode', 18), ('Eric Thompson', 18), ('madAndroid', 17), ('Fergal Gribben', 16), ('mchllweeks', 16), ('smcelmurry', 15), ('dependabotbot', 14), ('Max Martin', 13), ('Paul Berry', 12), ('ericwilliamson', 12), ('mhashizume', 11), ('jhelwig', 11), ('Michelle Schuknecht', 10), ('mcanevet', 10), ('sarah-thompson', 10), ('Brandon High', 10), ('sebastian-miclea', 10), ('pcarlisle', 9), ('gimmyxd', 9), ('mattkirby', 9), ('branan', 9), ('lucywyman', 9), ('zaphod42', 9), ('LuvCurves', 8), ('Michael Smith', 8), ('Sarah Thompson', 8), ('Simon Murray', 8), ('yachub', 8), ('melissa', 8), ('genebean', 8), ('DavidS', 8), ('vrthra', 8), ('samwoods1', 7), ('adrienthebo', 7), ('caseywilliams', 7), ('ghoneycutt', 7), ('ferventcoder', 7), ('Roger Ignazio', 7), ('grimradical', 7), ('Samuel', 7), ('mykhyggz', 7), ('chromatic', 6), ('ferglor', 6), ('mattkirby', 6), ('nanliu', 6), ('Ciprian Badescu', 6), ('briancain', 6), ('GabrielNagy', 6), ('bkero', 6), ('fiddyspence', 6), ('mihaibuzgau', 6), ('nwolfe', 5), ('azhurbilo', 5), ('bstopp', 5), ('ipcrm', 5), ('erikPrime', 5), ('Spencer McElmurry', 5), ('smortex', 5), ('Kelsey Hightower', 5), ('Andrei Filipovici', 5), ('alexjfisher', 5), ('cdenneen', 4), ('james-stocks', 4), ('Samuel Beaulieu', 4), ('rbrw', 4), ('richardc', 4), ('stahnma', 4), ('LuvCurves', 4), ('Geoff Williams', 4), ('er0ck', 4), ('Dylan Ratcliffe', 4), ('Dan Bode', 4), ('bodepd', 4), ('chris-reeves', 4), ('Phil Mocek', 3), ('rwaffen', 3), ('Ryan Gard', 3), ('Samuel', 3), ('Thomas-Franklin', 3), ('patrobinson', 3), ('Sharpie', 3), ('glennsarti', 3), ('jkroepke', 3), ('aaronbbrown', 3), ('ody', 3), ('logicminds', 3), ('jstremick', 3), ('Kelsey Hightower', 3), ('KevinCorcoran', 3), ('Kurt Wall', 3), ('Kylo Ginsberg', 3), ('nmburgan', 3), ('barrymw', 3), ('MikaelSmith', 3), ('Moses Mendoza', 2), ('Moses Mendoza', 2), ('MosesMendoza', 2), ('Nathan R Valentine', 2), ('developerinlondon', 2), ('Neil Hemingway', 2), ('Pieter van de Bruggen', 2), ('Taylan Develioglu', 2), ('thallgren', 2), ('timhughes', 2), ('Tony Vu', 2), ('donoghuc', 2), ('lmayorga1980', 2), ('paschdan', 2), ('Sukanyade2014', 2), ('alexharv074', 2), ('gunzl1ng3r', 2), ('speedofdark', 2), ('sathlan', 2), ('Andrew Hayes', 2), ('leoc', 2), ('apchamberlain', 2), ('rooneyshuman', 2), ('demophoon', 2), ('carlossg', 2), ('Carlos Sanchez', 2), ('simonswine', 2), ('cthorn42', 2), ('dsbaars', 2), ('Dominic Cleal', 2), ('Dylan Ratcliffe', 2), ('Glenn Matthews', 2), ('Graham Bleach', 2), ('John McCabe', 2), ('Magisus', 2), ('Morgan Haskel', 2), ('maage', 2), ('mwaggett', 2), ('pvande', 1), ('raphink', 1), ('reinh', 1), ('Roger Ignazio', 1), ('Rudikza', 1), ('Russell Mull', 1), ('mullr', 1), ('span786', 1), ('ScottGarman', 1), ('Scott McClellan', 1), ('theshanx', 1), ('ptomulik', 1), ('Oana Tanasoiu', 1), ('Morgan Rhodes', 1), ('igalic', 1), ('apollo-io', 1), ('Michelle Schuknecht', 1), ('Michael Kincaid', 1), ('bodgit', 1), ('Matt Callaway', 1), ('mmckinst', 1), ('myoung34', 1), ('Lindsey', 1), ('geoffnichols', 1), ('skyamgarp', 1), ('randomvariable', 1), ('puppetlabs-jenkins', 1), ('objectverbobject', 1), ('michael-creed', 1), ('mchllweeks', 1), ('jonathannewman', 1), ('gdippolito', 1), ('erosa', 1), ('cassiano', 1), ('barriserloth', 1), ('jay7x', 1), ('Spredzy', 1), ('wilson208', 1), ('Trey Dockendorf', 1), ('Travis Fields', 1), ('tlehman', 1), ('vinzent', 1), ('traylenator', 1), ('steveax', 1), ('Stefan Mortensen', 1), ('spjmurray', 1), ('s12v', 1), ('mcdonaldseanp', 1), ('seangriff', 1), ('florianfa', 1), ('eputnam', 1), ('EmilienM', 1), ('biemond', 1), ('iridian-ks', 1), ('davemcdonnell', 1), ('da-ar', 1), ('derdanne', 1), ('Dan Lidral-Porter', 1), ('aperiodic', 1), ('cmurphy', 1), ('op-ct', 1), ('Chris Price', 1), ('bmjen', 1), ('Britt Gresham', 1), ('Branan Riley', 1), ('Bogdan Irimie', 1), ('Bert Hajee', 1), ('Ashley Penney', 1), ('ashish1099', 1), ('Artur Gadelshin', 1), ('Ajedi32', 1), ('Filipovici-Andrei', 1), ('mwhahaha', 1), ('leoarnold', 1), ('Kurt Wall', 1), ('KarolisL', 1), ('Justin May', 1), ('jlambert121', 1), ('Joshua Spence', 1), ('Josh Samuelson', 1), ('jrwesolo', 1), ('jordane', 1), ('jonnytdevops', 1), ('jtopper', 1), ('johnduarte', 1), ('jhaals', 1), ('camlow325', 1), ('h0tw1r3', 1), ('Jeff Weiss', 1), ('jalvarezsamayoa', 1), ('jantman', 1), ('Jamey Owens', 1), ('jamtur01', 1), ('James Stocks', 1), ('James Powis', 1), ('Heath Seals', 1), ('Heath Seals', 1), ('hamidnazari', 1)",98,62,
OpenMathLib/OpenBLAS,OpenBLAS is an optimized BLAS library based on GotoBLAS2 1.13 BSD version. ,"# OpenBLAS

[![Join the chat at https://gitter.im/xianyi/OpenBLAS](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/xianyi/OpenBLAS?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

Travis CI: [![Build Status](https://travis-ci.com/xianyi/OpenBLAS.svg?branch=develop)](https://travis-ci.com/xianyi/OpenBLAS)

AppVeyor: [![Build status](https://ci.appveyor.com/api/projects/status/09sohd35n8nkkx64/branch/develop?svg=true)](https://ci.appveyor.com/project/xianyi/openblas/branch/develop)

Cirrus CI: [![Build Status](https://api.cirrus-ci.com/github/xianyi/OpenBLAS.svg?branch=develop)](https://cirrus-ci.com/github/xianyi/OpenBLAS)



[![Build Status](https://dev.azure.com/xianyi/OpenBLAS/_apis/build/status/xianyi.OpenBLAS?branchName=develop)](https://dev.azure.com/xianyi/OpenBLAS/_build/latest?definitionId=1&branchName=develop)

OSUOSL POWERCI [![Build Status](https://powerci.osuosl.org/buildStatus/icon?job=OpenBLAS_gh%2Fdevelop)](http://powerci.osuosl.org/job/OpenBLAS_gh/job/develop/)

OSUOSL IBMZ-CI [![Build Status](http://ibmz-ci.osuosl.org/buildStatus/icon?job=OpenBLAS-Z%2Fdevelop)](http://ibmz-ci.osuosl.org/job/OpenBLAS-Z/job/develop/)
## Introduction

OpenBLAS is an optimized BLAS (Basic Linear Algebra Subprograms) library based on GotoBLAS2 1.13 BSD version.

Please read the documentation on the OpenBLAS wiki pages: .

For a general introduction to the BLAS routines, please refer to the extensive documentation of their reference implementation hosted at netlib:
. On that site you will likewise find documentation for the reference implementation of the higher-level library LAPACK - the **L**inear **A**lgebra **Pack**age that comes included with OpenBLAS. If you are looking for a general primer or refresher on Linear Algebra, the set of six
20-minute lecture videos by Prof. Gilbert Strang on either MIT OpenCourseWare  or Youtube  may be helpful.

## Binary Packages

We provide official binary packages for the following platform:

  * Windows x86/x86_64

You can download them from [file hosting on sourceforge.net](https://sourceforge.net/projects/openblas/files/) or from the Releases section of the github project page, [https://github.com/xianyi/OpenBLAS/releases](https://github.com/xianyi/OpenBLAS/releases).

## Installation from Source

Download from project homepage, https://xianyi.github.com/OpenBLAS/, or check out the code
using Git from https://github.com/xianyi/OpenBLAS.git. (If you want the most up to date version, be
sure to use the develop branch - master is several years out of date due to a change of maintainership.)
Buildtime parameters can be chosen in Makefile.rule, see there for a short description of each option.
Most can also be given directly on the make or cmake command line.

### Dependencies

Building OpenBLAS requires the following to be installed:

* GNU Make
* A C compiler, e.g. GCC or Clang
* A Fortran compiler (optional, for LAPACK)
* IBM MASS (optional, see below)

### Normal compile

Simply invoking `make` (or `gmake` on BSD) will detect the CPU automatically.
To set a specific target CPU, use `make TARGET=xxx`, e.g. `make TARGET=NEHALEM`.
The full target list is in the file `TargetList.txt`, other build optionss are documented in Makefile.rule and
can either be set there (typically by removing the comment character from the respective line), or used on the
`make` command line. 
Note that when you run `make install` after building, you need to repeat all command line options you provided to `make`
in the build step, as some settings like the supported maximum number of threads are automatically derived from the
build host by default, which might not be what you want.
For building with `cmake`, the usual conventions apply, i.e. create a build directory either underneath the toplevel
OpenBLAS source directory or separate from it, and invoke `cmake` there with the path to the source tree and any 
build options you plan to set.

### Cross compile

Set `CC` and `FC` to point to the cross toolchains, and set `HOSTCC` to your host C compiler.
The target must be specified explicitly when cross compiling.

Examples:

* On an x86 box, compile this library for a loongson3a CPU:
  ```sh
  make BINARY=64 CC=mips64el-unknown-linux-gnu-gcc FC=mips64el-unknown-linux-gnu-gfortran HOSTCC=gcc TARGET=LOONGSON3A
  ```
  or same with the newer mips-crosscompiler put out by Loongson that defaults to the 32bit ABI:
  ```sh
  make HOSTCC=gcc CC='/opt/mips-loongson-gcc7.3-linux-gnu/2019.06-29/bin/mips-linux-gnu-gcc -mabi=64' FC='/opt/mips-loongson-gcc7.3-linux-gnu/2019.06-29/bin/mips-linux-gnu-gfortran -mabi=64' TARGET=LOONGSON3A
  ```

* On an x86 box, compile this library for a loongson3a CPU with loongcc (based on Open64) compiler:
  ```sh
  make CC=loongcc FC=loongf95 HOSTCC=gcc TARGET=LOONGSON3A CROSS=1 CROSS_SUFFIX=mips64el-st-linux-gnu-   NO_LAPACKE=1 NO_SHARED=1 BINARY=32
  ```

### Debug version

A debug version can be built using `make DEBUG=1`.

### Compile with MASS support on Power CPU (optional)

The [IBM MASS](https://www.ibm.com/support/home/product/W511326D80541V01/other_software/mathematical_acceleration_subsystem) library consists of a set of mathematical functions for C, C++, and Fortran applications that are tuned for optimum performance on POWER architectures.
OpenBLAS with MASS requires a 64-bit, little-endian OS on POWER.
The library can be installed as shown:

* On Ubuntu:
  ```sh
  wget -q http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/public.gpg -O- | sudo apt-key add -
  echo ""deb http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/ubuntu/ trusty main"" | sudo tee /etc/apt/sources.list.d/ibm-xl-compiler-eval.list
  sudo apt-get update
  sudo apt-get install libxlmass-devel.8.1.5
  ```

* On RHEL/CentOS:
  ```sh
  wget http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/rhel7/repodata/repomd.xml.key
  sudo rpm --import repomd.xml.key
  wget http://public.dhe.ibm.com/software/server/POWER/Linux/xl-compiler/eval/ppc64le/rhel7/ibm-xl-compiler-eval.repo
  sudo cp ibm-xl-compiler-eval.repo /etc/yum.repos.d/
  sudo yum install libxlmass-devel.8.1.5
  ```

After installing the MASS library, compile OpenBLAS with `USE_MASS=1`.
For example, to compile on Power8 with MASS support: `make USE_MASS=1 TARGET=POWER8`.

### Install to a specific directory (optional)

Use `PREFIX=` when invoking `make`, for example

```sh
make install PREFIX=your_installation_directory
```
(along with all options you added on the `make` command line in the preceding build step)
The default installation directory is `/opt/OpenBLAS`.

## Supported CPUs and Operating Systems

Please read `GotoBLAS_01Readme.txt` for older CPU models already supported by the 2010 GotoBLAS.

### Additional supported CPUs

#### x86/x86-64

- **Intel Xeon 56xx (Westmere)**: Used GotoBLAS2 Nehalem codes.
- **Intel Sandy Bridge**: Optimized Level-3 and Level-2 BLAS with AVX on x86-64.
- **Intel Haswell**: Optimized Level-3 and Level-2 BLAS with AVX2 and FMA on x86-64.
- **Intel Skylake-X**: Optimized Level-3 and Level-2 BLAS with AVX512 and FMA on x86-64.
- **Intel Cooper Lake**: as Skylake-X with improved BFLOAT16 support.
- **AMD Bobcat**: Used GotoBLAS2 Barcelona codes.
- **AMD Bulldozer**: x86-64 ?GEMM FMA4 kernels. (Thanks to Werner Saar)
- **AMD PILEDRIVER**: Uses Bulldozer codes with some optimizations.
- **AMD STEAMROLLER**: Uses Bulldozer codes with some optimizations.
- **AMD ZEN**: Uses Haswell codes with some optimizations for Zen 2/3 (use SkylakeX for Zen4)

#### MIPS32

- **MIPS 1004K**: uses P5600 codes
- **MIPS 24K**: uses P5600 codes

#### MIPS64

- **ICT Loongson 3A**: Optimized Level-3 BLAS and the part of Level-1,2.
- **ICT Loongson 3B**: Experimental

#### ARM

- **ARMv6**: Optimized BLAS for vfpv2 and vfpv3-d16 (e.g. BCM2835, Cortex M0+)
- **ARMv7**: Optimized BLAS for vfpv3-d32 (e.g. Cortex A8, A9 and A15)

#### ARM64

- **ARMv8**: Basic ARMV8 with small caches, optimized Level-3 and Level-2 BLAS
- **Cortex-A53**: same as ARMV8 (different cpu specifications)
- **Cortex-A55**: same as ARMV8 (different cpu specifications)
- **Cortex A57**: Optimized Level-3 and Level-2 functions
- **Cortex A72**: same as A57 ( different cpu specifications)
- **Cortex A73**: same as A57 (different cpu specifications)
- **Cortex A76**: same as A57 (different cpu specifications)
- **Falkor**: same as A57 (different cpu specifications)
- **ThunderX**: Optimized some Level-1 functions
- **ThunderX2T99**: Optimized Level-3 BLAS and parts of Levels 1 and 2
- **ThunderX3T110**
- **TSV110**: Optimized some Level-3 helper functions
- **EMAG 8180**: preliminary support based on A57
- **Neoverse N1**: (AWS Graviton2) preliminary support
- **Neoverse V1**: (AWS Graviton3) optimized Level-3 BLAS
- **Apple Vortex**: preliminary support based on ThunderX2/3
- **A64FX**:  preliminary support, optimized Level-3 BLAS
- **ARMV8SVE**: any ARMV8 cpu with SVE extensions 

#### PPC/PPC64

- **POWER8**: Optimized BLAS, only for PPC64LE (Little Endian), only with `USE_OPENMP=1`
- **POWER9**: Optimized Level-3 BLAS (real) and some Level-1,2. PPC64LE with OpenMP only. 
- **POWER10**: Optimized Level-3 BLAS including SBGEMM and some Level-1,2.

- **AIX**: Dynamic architecture with OpenXL and OpenMP.
  ```sh
  make CC=ibm-clang_r FC=xlf_r TARGET=POWER7 BINARY=64 USE_OPENMP=1 INTERFACE64=1 DYNAMIC_ARCH=1 USE_THREAD=1
  ```

#### IBM zEnterprise System

- **Z13**: Optimized Level-3 BLAS and Level-1,2
- **Z14**: Optimized Level-3 BLAS and (single precision) Level-1,2

#### RISC-V

- **C910V**: Optimized Level-3 BLAS (real) and Level-1,2 by RISC-V Vector extension 0.7.1.
  ```sh
  make HOSTCC=gcc TARGET=C910V CC=riscv64-unknown-linux-gnu-gcc FC=riscv64-unknown-linux-gnu-gfortran
  ```
  (also known to work on C906 as long as you use only single-precision functions - its instruction set support appears to be incomplete in double precision)

- **x280**: Level-3 BLAS and Level-1,2 are optimized by RISC-V Vector extension 1.0.
  ```sh
  make HOSTCC=gcc TARGET=x280 NUM_THREADS=8 CC=riscv64-unknown-linux-gnu-clang FC=riscv64-unknown-linux-gnu-gfortran
  ```

- **ZVL???B**: Level-3 BLAS and Level-1,2 including vectorised kernels targeting generic RISCV cores with vector support with registers of at least the corresponding width; ZVL128B and ZVL256B are available.
e.g.:
  ```sh
    make TARGET=RISCV64_ZVL256B CFLAGS=""-DTARGET=RISCV64_ZVL256B"" \
    BINARY=64 ARCH=riscv64 CC='clang -target riscv64-unknown-linux-gnu' \
    AR=riscv64-unknown-linux-gnu-ar AS=riscv64-unknown-linux-gnu-gcc \
    LD=riscv64-unknown-linux-gnu-gcc FC=riscv64-unknown-linux-gnu-gfortran \
    HOSTCC=gcc HOSTFC=gfortran -j
  ```

### Support for multiple targets in a single library

OpenBLAS can be built for multiple targets with runtime detection of the target cpu by specifiying `DYNAMIC_ARCH=1` in Makefile.rule, on the gmake command line or as `-DDYNAMIC_ARCH=TRUE` in cmake.

For **x86_64**, the list of targets this activates contains Prescott, Core2, Nehalem, Barcelona, Sandybridge, Bulldozer, Piledriver, Steamroller, Excavator, Haswell, Zen, SkylakeX, Cooper Lake, Sapphire Rapids. For cpu generations not included in this list, the corresponding older model is used. If you also specify `DYNAMIC_OLDER=1`, specific support for Penryn, Dunnington, Opteron, Opteron/SSE3, Bobcat, Atom and Nano is added. Finally there is an option `DYNAMIC_LIST` that allows to specify an individual list of targets to include instead of the default.

`DYNAMIC_ARCH` is also supported on **x86**, where it translates to Katmai, Coppermine, Northwood, Prescott, Banias,
Core2, Penryn, Dunnington, Nehalem, Athlon, Opteron, Opteron_SSE3, Barcelona, Bobcat, Atom and Nano.

On **ARMV8**, it enables support for CortexA53, CortexA57, CortexA72, CortexA73, Falkor, ThunderX, ThunderX2T99, TSV110 as well as generic ARMV8 cpus. If compiler support for SVE is available at build time, support for NeoverseN2, NeoverseV1 as well as generic ArmV8SVE targets is also enabled.

For **POWER**, the list encompasses POWER6, POWER8 and POWER9. POWER10 is additionally available if a sufficiently recent compiler is used for the build.

on **ZARCH** it comprises Z13 and Z14 as well as generic zarch support.

The `TARGET` option can be used in conjunction with `DYNAMIC_ARCH=1` to specify which cpu model should be assumed for all the
common code in the library, usually you will want to set this to the oldest model you expect to encounter.
Please note that it is not possible to combine support for different architectures, so no combined 32 and 64 bit or x86_64 and arm64 in the same library.

### Supported OS

- **GNU/Linux**
- **MinGW or Visual Studio (CMake)/Windows**: Please read .
- **Darwin/macOS/OSX/iOS**: Experimental. Although GotoBLAS2 already supports Darwin, we are not OSX/iOS experts.
- **FreeBSD**: Supported by the community. We don't actively test the library on this OS.
- **OpenBSD**: Supported by the community. We don't actively test the library on this OS.
- **NetBSD**: Supported by the community. We don't actively test the library on this OS.
- **DragonFly BSD**: Supported by the community. We don't actively test the library on this OS.
- **Android**: Supported by the community. Please read .
- **AIX**: Supported on PPC up to POWER10
- **Haiku**: Supported by the community. We don't actively test the library on this OS.
- **SunOS**: Supported by the community. We don't actively test the library on this OS.
- **Cortex-M**: Supported by the community. Please read .

## Usage

Statically link with `libopenblas.a` or dynamically link with `-lopenblas` if OpenBLAS was
compiled as a shared library.

### Setting the number of threads using environment variables

Environment variables are used to specify a maximum number of threads.
For example,

```sh
export OPENBLAS_NUM_THREADS=4
export GOTO_NUM_THREADS=4
export OMP_NUM_THREADS=4
```

The priorities are `OPENBLAS_NUM_THREADS` > `GOTO_NUM_THREADS` > `OMP_NUM_THREADS`.

If you compile this library with `USE_OPENMP=1`, you should set the `OMP_NUM_THREADS`
environment variable; OpenBLAS ignores `OPENBLAS_NUM_THREADS` and `GOTO_NUM_THREADS` when
compiled with `USE_OPENMP=1`.

### Setting the number of threads at runtime

We provide the following functions to control the number of threads at runtime:

```c
void goto_set_num_threads(int num_threads);
void openblas_set_num_threads(int num_threads);
```
Note that these are only used once at library initialization, and are not available for
fine-tuning thread numbers in individual BLAS calls. 
If you compile this library with `USE_OPENMP=1`, you should use the above functions too.

## Reporting bugs

Please submit an issue in https://github.com/xianyi/OpenBLAS/issues.

## Contact

* OpenBLAS users mailing list: https://groups.google.com/forum/#!forum/openblas-users
* OpenBLAS developers mailing list: https://groups.google.com/forum/#!forum/openblas-dev

## Change log

Please see Changelog.txt to view the differences between OpenBLAS and GotoBLAS2 1.13 BSD version.

## Troubleshooting

* Please read the [FAQ](https://github.com/xianyi/OpenBLAS/wiki/Faq) first.
* Please use GCC version 4.6 and above to compile Sandy Bridge AVX kernels on Linux/MinGW/BSD.
* Please use Clang version 3.1 and above to compile the library on Sandy Bridge microarchitecture.
  Clang 3.0 will generate the wrong AVX binary code.
* Please use GCC version 6 or LLVM version 6 and above to compile Skylake AVX512 kernels.
* The number of CPUs/cores should be less than or equal to 256. On Linux `x86_64` (`amd64`),
  there is experimental support for up to 1024 CPUs/cores and 128 numa nodes if you build
  the library with `BIGNUMA=1`.
* OpenBLAS does not set processor affinity by default.
  On Linux, you can enable processor affinity by commenting out the line `NO_AFFINITY=1` in
  Makefile.rule. However, note that this may cause
  [a conflict with R parallel](https://stat.ethz.ch/pipermail/r-sig-hpc/2012-April/001348.html).
* On Loongson 3A, `make test` may fail with a `pthread_create` error (`EAGAIN`).
  However, it will be okay when you run the same test case on the shell.

## Contributing

1. [Check for open issues](https://github.com/xianyi/OpenBLAS/issues) or open a fresh issue
   to start a discussion around a feature idea or a bug.
2. Fork the [OpenBLAS](https://github.com/xianyi/OpenBLAS) repository to start making your changes.
3. Write a test which shows that the bug was fixed or that the feature works as expected.
4. Send a pull request. Make sure to add yourself to `CONTRIBUTORS.md`.

## Donation

Please read [this wiki page](https://github.com/xianyi/OpenBLAS/wiki/Donation).
","'blas', 'lapack', 'lapacke'",2011-01-24T06:34:44Z,2024-06-18T09:22:19Z,328,268,6094,206,"('martin-frbg', 4546), ('xianyi', 926), ('wernsaar', 817), ('hpanderson', 109), ('wjc404', 108), ('guowangy', 74), ('XiWeiGu', 72), ('Ashwin Sekhar T K', 71), ('isuruf', 67), ('wangqian', 65), ('Rajalakshmi Srinivasaraghavan', 64), ('brada4', 64), ('ChipKerchner', 61), ('binebrank', 51), ('quickwritereader', 39), ('fenrus75', 38), ('mhillenbrand', 37), ('maamountki', 37), ('Ashwin Sekhar T K', 35), ('jeromerobert', 29), ('zchothia', 24), ('thrasibule', 22), ('xoviat', 20), ('Qiyu8', 20), ('Mousius', 20), ('imzhuhl', 18), ('kseniyazaytseva', 18), ('mseminatore', 17), ('bartoldeman', 16), ('TiborGY', 15), ('yancheng', 15), ('jakirkham', 14), ('mmuetzel', 14), ('sva-img', 14), ('CNClareChen', 14), ('xsacha', 14), ('KaustubhIMG', 13), ('FlyGoat', 12), ('Martin Köhler', 12), ('ararslan', 11), ('User User-User', 11), ('kavanabhat', 11), ('austinpagan', 11), ('HellerZheng', 10), ('staticfloat', 10), ('TimothyGu', 10), ('honno', 10), ('sergei-lewis', 10), ('m-brow', 9), ('oon3m0oo', 9), ('buffer51', 8), ('pkubaj', 8), ('wuanjun 00447568', 8), ('shengyang-3390', 8), ('rafaelcfsousa', 8), ('OMaghiarIMG', 8), ('notaz', 8), ('xiegengxin', 8), ('embray', 8), ('Zeyiii', 7), ('svillemot', 7), ('yinshiyou', 7), ('ogrisel', 7), ('nolta', 7), ('lotheac', 7), ('Guobing-Chen', 7), ('grisuthedragon', 6), ('MehdiChinoune', 6), ('xantares', 6), ('pengxu', 6), ('maomao194313', 6), ('jayfely@qq.com', 6), ('barracuda156', 6), ('Tim Moon', 6), ('rgommers', 6), ('mattip', 6), ('marxin', 6), ('jirutka', 6), ('AGSaidi', 6), ('larsmans', 5), ('RevySR', 5), ('张丹枫', 5), ('martin', 5), ('gxw', 5), ('catap', 5), ('insertinterestingnamehere', 5), ('Flamefire', 5), ('sharkcz', 5), ('Christoph Conrads', 5), ('neilsh-msft', 5), ('niyas-sait', 5), ('tylerjereddy', 5), ('leezu', 4), ('Keno', 4), ('luzpaz', 4), ('kiwifb', 4), ('gcp', 4), ('theoractice', 4), ('Pengzhou0810', 4), ('steppi', 4), ('jijiwawa', 4), ('', 4), ('alexhenrie', 4), ('angsch', 4), ('eschnett', 4), ('ev-br', 4), ('Explorer09', 4), ('felixonmars', 4), ('h-vetinari', 4), ('jcowgill', 4), ('Ralph Campbell', 4), ('River Dillon', 4), ('Sylvestre Ledru', 4), ('frjohnst', 4), ('j-bo', 3), ('zhaofengli', 3), ('kencu', 3), ('kortschak', 3), ('craft-zhang', 3), ('Wang, Long', 3), ('liujingjue', 3), ('lilh9598', 3), ('shivammonaka', 3), ('antonblanchard', 3), ('ZuoQ3', 3), ('ayappanec', 3), ('sh-zheng', 3), ('fengrl', 3), ('damonyu1989', 3), ('dloghin', 3), ('apinski-cavium', 3), ('e4t', 3), ('imciner2', 3), ('danluu', 3), ('zbeekman', 3), ('AndreySokolovSC', 3), ('sashashura', 3), ('jerryz123', 3), ('klho', 3), ('Martin Koehler', 3), ('mtreinish', 3), ('Nursultan Zarlyk', 3), ('Rajalakshmi Srinivasaraghavan', 3), ('rengolin', 3), ('stevengj', 3), ('tkelman', 3), ('vladimir-ch', 3), ('zelong-1024', 2), ('jiahaipeng', 2), ('cianciosa', 2), ('chenxuqiang', 2), ('Zhiyong Dang', 2), ('yuyichao', 2), ('Vicente Olivert Riera', 2), ('VFerrari', 2), ('epsilon-0', 2), ('uniontech-lilinjie', 2), ('pnp', 2), ('lianghongq', 2), ('s00548429', 2), ('HecaiYuan', 2), ('zhangdanfeng', 2), ('AlessioZanga', 2), ('haampie', 2), ('vtjnash', 2), ('dev-zero', 2), ('yetist', 2), ('albertziegenhagel', 2), ('aeberspaecher', 2), ('Aleksey Kuleshov', 2), ('ashwinyes', 2), ('Ashwin Sekhar T K', 2), ('btracey', 2), ('cenewcombe', 2), ('Daniel Cohen Gindi', 2), ('dmikushin', 2), ('erikbs', 2), ('ggouaillardet', 2), ('susilehtola', 2), ('wsttiger', 2), ('pawosm-arm', 2), ('pablorcum', 2), ('michaellass', 2), ('markdryan', 2), ('Isaac Dunham', 2), ('Jehan', 2), ('ahojnnes', 2), ('jonaszhou1', 2), ('juliantaylor', 2), ('kadler', 2), ('siko1056', 2), ('sharvil', 1), ('STCE2023', 1), ('StefanKarpinski', 1), ('snadampal', 1), ('Sbte', 1), ('gitter-badger', 1), ('Thomas Anderson', 1), ('patrickdepinguin', 1), ('AdamNiederer', 1), ('twmr', 1), ('Ton van den Heuvel', 1), ('Usui, Tetsuzo', 1), ('Viral B. Shah', 1), ('Wang,Long', 1), ('wyphan', 1), ('MikaelUrankar', 1), ('giordano', 1), ('Neutron3529', 1), ('dnoan', 1), ('oviradoi', 1), ('ioraff', 1), ('pv', 1), ('hawkinsp', 1), ('peterph', 1), ('pbo-linaro', 1), ('tttapa', 1), ('RashmicaG', 1), ('Ray Glover', 1), ('rcoscali', 1), ('seberg', 1), ('Michael Foster', 1), ('sfabbro', 1), ('k.dunikowski', 1), ('linouxis9', 1), ('lucasb-eyer', 1), ('mdong', 1), ('nishidha@us.ibm.com', 1), ('njutcz', 1), ('powderluv', 1), ('sl1pkn07', 1), ('unknown', 1), ('wlbksy', 1), ('xctan', 1), ('y00512012', 1), ('yamazakimitsufumi', 1), ('yieldthought', 1), ('zhiyong.dang', 1), ('ismail', 1), ('LYP951018', 1), ('wi24rd', 1), ('Wu Zhigang', 1), ('Xianyi Zhang', 1), ('codeworm96', 1), ('yurivict', 1), ('Zaheer Chothia', 1), ('Zhang Xiianyi', 1), ('Zoltán Böszörményi', 1), ('extrowerk', 1), ('caiyu', 1), ('cyk2018', 1), ('cyyever', 1), ('drhpc', 1), ('fengruilin', 1), ('haanhvu', 1), ('nk521', 1), ('j00520245', 1), ('jgillis', 1), ('jianghesong', 1), ('byzhang', 1), ('Celelibi', 1), ('yu-chen-surf', 1), ('cicku', 1), ('CodesWithWolves', 1), ('wattoc', 1), ('dpfoose', 1), ('Darkness303', 1), ('darshanp4', 1), ('davidanthoff', 1), ('SoapGentoo', 1), ('goplanid', 1), ('steckdenis', 1), ('Diazonium', 1), ('Dirreke', 1), ('EGuesnet', 1), ('Edison Gustavo Muenz', 1), ('boomanaiden154', 1), ('amodra', 1), ('alnsn', 1), ('Neumann-A', 1), ('commodo', 1), ('amritahs-ibm', 1), ('aarnez', 1), ('andreasnoack', 1), ('andreas-schwab', 1), ('theAeon', 1), ('amrox', 1), ('antonio-rojas', 1), ('Arda Aytekin', 1), ('TAAPArthur', 1), ('aurel32', 1), ('bapt', 1), ('benedikt-huber', 1), ('epipping', 1), ('Jeff Baylor', 1), ('jinboson', 1), ('JohannesBuchner', 1), ('biddisco', 1), ('Joshua-Ashton', 1), ('jussienko', 1), ('boegel', 1), ('kevinji', 1), ('ericlars', 1), ('mine260309', 1), ('intelmy', 1), ('MacChen02', 1), ('mikejuliet13', 1), ('mtbrandy', 1), ('matthew-brett', 1), ('maxlevesque', 1), ('Mayank-Raj3', 1), ('eshelman', 1), ('ffontaine', 1), ('fabioperez', 1), ('hartzell', 1), ('glennpj', 1), ('Gordon Fossum', 1), ('Guodong Xu', 1), ('hjl-tools', 1), ('howard0su', 1), ('jip', 1), ('ilayn', 1), ('ihnorton', 1), ('ivan-pi', 1), ('intelfx', 1), ('IvanUkhov', 1), ('jake-arkinstall', 1), ('jake-arkinstall-quantinuum', 1)",137,109,
react-boilerplate/react-boilerplate,":fire: A highly scalable, offline-first foundation with the best developer experience and a focus on performance and best practices.","



Start your next react project in seconds
A highly scalable, offline-first foundation with the best DX and a focus on performance and best practices




  
  
    
  
  
  
    
  
  
  
    
  
  
  
    
  
  
  




    
  
    
  
      
  
    
  
  
    
  





  Created by Max Stoiber and maintained with ❤️ by an amazing team of developers.


## Features


  Quick scaffolding
  Create components, containers, routes, selectors and sagas - and their tests - right from the CLI!

  Instant feedback
  Enjoy the best DX (Developer eXperience) and code your app at the speed of thought! Your saved changes to the CSS and JS are reflected instantaneously without refreshing the page. Preserve application state even when you update something in the underlying code!

  Predictable state management
  Unidirectional data flow allows for change logging and time travel debugging.

  Next generation JavaScript
  Use template strings, object destructuring, arrow functions, JSX syntax and more.

  Next generation CSS
  Write composable CSS that's co-located with your components for complete modularity. Unique generated class names keep the specificity low while eliminating style clashes. Ship only the styles that are on the page for the best performance.

  Industry-standard routing
  It's natural to want to add pages (e.g. `/about`) to your application, and routing makes this possible.

  Industry-standard i18n internationalization support
  Scalable apps need to support multiple languages, easily add and support multiple languages with `react-intl`.

  Offline-first
  The next frontier in performant web apps: availability without a network connection from the instant your users load the app.

  Static code analysis
  Focus on writing new features without worrying about formatting or code quality. With the right editor setup, your code will automatically be formatted and linted as you work.

  SEO
  We support SEO (document head tags management) for search engines that support indexing of JavaScript content. (eg. Google)


But wait... there's more!

- _The best test setup:_ Automatically guarantee code quality and non-breaking
  changes. (Seen a react app with 100% test coverage before?)
- _Native web app:_ Your app's new home? The home screen of your users' phones.
- _The fastest fonts:_ Say goodbye to vacant text.
- _Stay fast_: Profile your app's performance from the comfort of your command
  line!
- _Catch problems:_ AppVeyor and TravisCI setups included by default, so your
  tests get run automatically on Windows and Unix.

There’s also a fantastic video on how to structure your React.js apps with scalability in mind. It provides rationale for the majority of boilerplate's design decisions.

Keywords: React.js, Redux, Hot Reloading, ESNext, Babel, react-router, Offline First, ServiceWorker, `styled-components`, redux-saga, FontFaceObserver

## Quick start

1.  Make sure that you have Node.js v8.15.1 and npm v5 or above installed.
2.  Clone this repo using `git clone --depth=1 https://github.com/react-boilerplate/react-boilerplate.git `
3.  Move to the appropriate directory: `cd `.
4.  Run `npm run setup` in order to install dependencies and clean the git repo.
    _At this point you can run `npm start` to see the example app at `http://localhost:3000`._
5.  Run `npm run clean` to delete the example app.

Now you're ready to rumble!

> Please note that this boilerplate is **production-ready and not meant for beginners**! If you're just starting out with react or redux, please refer to https://github.com/petehunt/react-howto instead. If you want a solid, battle-tested base to build your next product upon and have some experience with react, this is the perfect start for you.

## Documentation

- [**The Hitchhiker's Guide to `react-boilerplate`**](docs/general/introduction.md): An introduction for newcomers to this boilerplate.
- [Overview](docs/general): A short overview of the included tools
- [**Commands**](docs/general/commands.md): Getting the most out of this boilerplate
- [Testing](docs/testing): How to work with the built-in test harness
- [Styling](docs/css): How to work with the CSS tooling
- [Your app](docs/js): Supercharging your app with Routing, Redux, simple
  asynchronicity helpers, etc.
- [**Troubleshooting**](docs/general/gotchas.md): Solutions to common problems faced by developers.

## Contributors

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):



Max Stoiber💻 📖 🤔 👀 ⚠️Julien Benchetrit💻 💬 📖 👀 🚧Sara Federico💻 👀 💬 📖 🚧Justin Greenberg💻 👀Jon Winn💻 👀Johan Meester💻 ⚠️ 📖Yaroslav Kiliba💻Glen Ihrig💻Somasundaram Ayyappan💻Oliver Turner💻Samuel Sharpe💻Mihir Karandikar💻Vaibhav Verma💻Sébastien Dubois💻Chainarong Tangsurakit💻Amila Welihinda💻



This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!


## Supporters

This project would not be possible without the support of these amazing folks. [**Become a sponsor**](https://opencollective.com/react-boilerplate) to get your company in front of thousands of engaged react developers and help us out!












---












## License

This project is licensed under the MIT license, Copyright (c) 2019 Maximilian
Stoiber. For more information see `LICENSE.md`.
","'i18n', 'immer', 'offline-first', 'react', 'react-boilerplate', 'redux', 'redux-saga', 'scaffolding', 'styled-components', 'webpack4'",2015-02-18T14:36:32Z,2023-03-23T21:35:09Z,222,183,29408,528,"('mxstbr', 599), ('julienben', 98), ('justingreenberg', 59), ('gihrig', 48), ('SilentCicero', 41), ('oliverturner', 31), ('jwinn', 24), ('jbinto', 21), ('gretzky', 21), ('somus', 19), ('7rulnik', 19), ('Dattaya', 18), ('chaintng', 13), ('greenkeeperio-bot', 13), ('samit4me', 13), ('philihp', 13), ('grabbou', 12), ('benjaminlgt-littlelives', 11), ('datapimp', 11), ('Nick Dodson', 11), ('rog', 10), ('okonet', 9), ('sedubois', 9), ('glennreyes', 9), ('David Le Jolly', 8), ('NekR', 6), ('jurekbarth', 6), ('raksonibs', 6), ('ngtan', 6), ('FezVrasta', 6), ('suhaotian', 5), ('gonzochic', 5), ('mihir0x69', 5), ('maxmantz', 5), ('outdooricon', 5), ('amilajack', 5), ('eddiewang', 4), ('brotzky', 4), ('lvarayut', 4), ('rikkert', 4), ('piamancini', 4), ('kachkaev', 4), ('callumlocke', 3), ('chungchiehlun', 3), ('David Le Jolly', 3), ('jstockwin', 3), ('kelsonic', 3), ('brousalis', 3), ('tbash', 3), ('rcholic', 3), ('Vadorequest', 2), ('Ustin Zarubin', 2), ('T. Brandon Ashley', 2), ('Simon Selg', 2), ('sethmcleod', 2), ('ulshv', 2), ('kraffslol', 2), ('raychouio', 2), ('peter-mouland', 2), ('Winston Hearn', 2), ('fireantik', 2), ('robertaird', 2), ('tomazy', 2), ('2manyvcos', 2), ('ZhuGongpu', 2), ('ccorcos', 2), ('shobhitchittora', 2), ('mjhost', 2), ('bt', 2), ('spawnia', 2), ('alexeyraspopov', 2), ('Andy Kenward', 2), ('Bing Fan', 2), ('Brandon Dail', 2), ('Bigbrd', 2), ('clessg', 2), ('edsu', 2), ('nikgraf', 2), ('Nick Krambousanos', 2), ('Manish Jangir', 2), ('lesykos', 2), ('kxxoling', 2), ('Erick Bazán', 2), ('JP Tissot', 2), ('JCB-K', 2), ('harijoe', 2), ('JulienMelissas', 2), ('olapersson', 1), ('Oliver Turner', 1), ('oliviertassinari', 1), ('pyjac', 1), ('agamemnus', 1), ('paulxuca', 1), ('pavlin-policar', 1), ('petrhanak', 1), ('Pierrick TURELIER', 1), ('prasadsilva', 1), ('Robert Bue', 1), ('rubenmoya', 1), ('ryanswrt', 1), ('sahat', 1), ('sduquej', 1), ('Andarist', 1), ('mjbvz', 1), ('autechr3', 1), ('jk2K', 1), ('michaelgmcd', 1), ('webdesserts', 1), ('zalmoxisus', 1), ('mkhazov', 1), ('mciastek', 1), ('Mr. Outis', 1), ('n4cr', 1), ('naz', 1), ('biznickman', 1), ('nicogreenarry', 1), ('Ndpnt', 1), ('Nikita Shulipa', 1), ('Nikita Shulipa', 1), ('nappels', 1), ('haikyuu', 1), ('bobkocisko', 1), ('bsr', 1), ('howardya', 1), ('jskorepa', 1), ('lyuehh', 1), ('mengxy', 1), ('norraell', 1), ('p10ns11y', 1), ('paulogdm', 1), ('simonacca', 1), ('swordsreversed', 1), ('vonkanehoffen', 1), ('mydearxym', 1), ('xoxoxo', 1), ('yangchuan', 1), ('stern-shawn', 1), ('shrynx', 1), ('sbraconnier', 1), ('simobasso', 1), ('sotayamashita', 1), ('spen', 1), ('stevenspiel', 1), ('skosno', 1), ('FedjaVitko', 1), ('episage', 1), ('vigzmv', 1), ('Virsaviya', 1), ('vvozibic', 1), ('w01fgang', 1), ('Yan Takushevich', 1), ('ochanje210', 1), ('adjnor', 1), ('abemedia', 1), ('kerryboyko', 1), ('bnhovde', 1), ('supergicko', 1), ('Can-Sahin', 1), ('cheickmec', 1), ('raizyr', 1), ('christianvuerings', 1), ('cornedor', 1), ('curran', 1), ('daniel-liuzzi', 1), ('sdtsui', 1), ('marr', 1), ('davidnguyen11', 1), ('moeriki', 1), ('diwakar-s-maurya', 1), ('aaronabramov', 1), ('doaboa', 1), ('sheerun', 1), ('Al-un', 1), ('GGAlanSmithee', 1), ('holoiii', 1), ('jeggett', 1), ('avdeev', 1), ('andregoncalvesdev', 1), ('akarve', 1), ('ankitduseja', 1), ('GoldAnna', 1), ('ansumanshah', 1), ('jamakase', 1), ('acharlop', 1), ('BraunreutherA', 1), ('bradparks', 1), ('brandonlilly', 1), ('Brent S.A. Cowgill', 1), ('JohnMostlyR', 1), ('jemgold', 1), ('Jordan', 1), ('j-rooks', 1), ('Juan', 1), ('Juan Soto', 1), ('khayyamsaleem', 1), ('kunal-mandalia', 1), ('Larry', 1), ('lsanders', 1), ('luandro', 1), ('lucasqiu', 1), ('marcdel', 1), ('nshimiye', 1), ('MariusRumpf', 1), ('malixsys', 1), ('Hotell', 1), ('Dominik Garcia', 1), ('EmmaRamirez', 1), ('Eugene Hlushko', 1), ('fanixk', 1), ('zavan', 1), ('Glenn Reyes', 1), ('thegrammarnazi', 1), ('Hans Scheuren', 1), ('Henrik Feldt', 1), ('hosmelq', 1), ('ifedotov', 1), ('ishg', 1), ('jperasmus', 1), ('jcano', 1), ('RebootJeff', 1), ('jeremyadavis', 1), ('jimmyheaddon', 1)",135,112,
Ray512512/JavaProject.Base,基于SpringBoot快速构建项目基本架构，后续可直接clone进行快速开发，边学习边补全项目内容,,'s',2018-04-04T06:32:35Z,2018-05-15T07:14:55Z,1,1,83,2,"('Ray512512', 7)",0,0,
SpiderMate/B-XSSRF,"Toolkit to detect and keep track on Blind XSS, XXE & SSRF","
  
  
  
  B-XSSRF
  


Toolkit to detect and keep track on Blind XSS, XXE & SSRF


  
    
  
  
    
  
    
    
  




### SETUP
- Upload the files to your server.
- Create a Database and upload database.sql file to it.
- Change the DB Credentials in db.php file.
- Ready.

### USAGE
BLIND XSS 

```


```
BLIND XXE

```

<!DOCTYPE root [
 %ext;
]>

```
SSRF

```
GET /testssrf.php=http://mysite.com/bxssrf/request.php

```
### DEFAULT CREDENTIALS
```
USER : admin@test.com
PASS : 123456
```
",,2019-08-23T05:23:42Z,2019-08-23T10:50:05Z,1,1,294,6,"('SpiderMate', 33)",0,0,
ENCMP100/LEC-2020-B3,This is a repository of scripts developed as part of the 2020 ENCMP100 Section B3 lecture taught at University of Alberta.,,,2020-01-07T05:26:13Z,2020-04-02T07:32:37Z,1,1,10,18,"('KamalRanaweera', 45)",0,0,
kurttheviking/simple-hipchat-py,Python client fo HipChat's v1 API,"Python Client for HipChat v1
============================

Description
-----------

Easy peasy wrapper for the `HipChat API v1 `_. Exposes core URI endpoint wrapper and some basic methods for common integrations.


Dependencies
------------
None beyond the Python standard library.


Usage
-----

Install::

    pip install python-simple-hipchat

Instantiate::

    import hipchat
    hipster = hipchat.HipChat(token=YourHipChatToken)

Request a URI endpoint as described in the HipChat API docs::

    hipster.method(url='method/url/', method=""GET/POST"", parameters={'name':'value', })

Example::

    # List rooms
    hipster.method('rooms/list')

    # Post a message to a HipChat room
    hipster.method('rooms/message', method='POST', parameters={'room_id': 8675309, 'from': 'HAL', 'message': 'All your base...'})


API Sugar
---------

To send a message to a room, either a Notification or Admin token can be used. All other methods require an Admin token. See `HipChat's auth docs `_ for more information.

**Send a message to a room**::

    room_id = 8675309
    from_name = 'HAL'
    message = 'All your base...'

    hipster.message_room(room_id, from_name, message)

    # per HipChat, color can be ""yellow"", ""red"", ""green"", ""purple"", ""gray"", or ""random""
    message_color = 'gray'
    hipster.message_room(room_id, from_name, message, color=message_color)

    # notify users in the room
    message_color = 'red'
    hipster.message_room(room_id, from_name, message, color=message_color, notify=True)

**List rooms**::

    hipster.list_rooms()

**Find room by name**::

    room = hipster.find_room('Room Name')
    print ""Room Name has room id = %s"" % (room['room_id'])

**List users**::

    hipster.list_users()

**Find user by name**::

    user = hipster.find_user('Raleigh Becket')
    print ""Raleigh Becket's status is = %s"" % (user['status'])



Changelog
---------

**v0.4.x**

- `Added shortcut method for single room info `_ (thanks @claudyus)
- Renamed GitHub repo

**v0.3.x**

- Added shortcut method for listing users (thanks @Raizex)
- Added shortcut method for finding user by name (thanks @Raizex)
- Added shortcut method for finding room by name (thanks @Raizex)
- `Added trove classifiers `_ (thanks @ghickman)

**v0.2.x**

- `Added Python 3 support without losing support for Python 2 `_ (thanks @pimterry)
- `Expose timeout for safer synchronous use `_ (thanks @zachsnow)

**v0.1.x**

- Added shortcut method for messaging a room
- Added shortcut method for listing rooms
",,2012-08-03T23:48:40Z,2015-11-09T16:58:11Z,10,7,85,6,"('kurttheviking', 15), ('Raizex', 12), ('kurttheviking', 8), ('kurttheviking', 7), ('ghickman', 3), ('Kurt Ericson', 3), ('claudyus', 1), ('mwarkentin', 1), ('zachsnow', 1), ('pimterry', 1)",4,4,
bjyoungblood/BjyAuthorize,,"# BjyAuthorize - Acl security for ZF2

## Deprecated

This package is now officially deprecated and will not receive any future updates or bug fixes.

As long-term support for Zend Framework 2 ended on 2018-03-31, any users who currently rely on this package are heavily encouraged to migrate to Zend Framework 3 or another framework.

***

[![Build Status](https://travis-ci.org/bjyoungblood/BjyAuthorize.png?branch=master)](https://travis-ci.org/bjyoungblood/BjyAuthorize)
[![Coverage Status](https://coveralls.io/repos/bjyoungblood/BjyAuthorize/badge.png?branch=master)](https://coveralls.io/r/bjyoungblood/BjyAuthorize)
[![Total Downloads](https://poser.pugx.org/bjyoungblood/bjy-authorize/downloads.png)](https://packagist.org/packages/bjyoungblood/bjy-authorize)
[![Latest Stable Version](https://poser.pugx.org/bjyoungblood/bjy-authorize/v/stable.png)](https://packagist.org/packages/bjyoungblood/bjy-authorize)
[![Latest Unstable Version](https://poser.pugx.org/bjyoungblood/bjy-authorize/v/unstable.png)](https://packagist.org/packages/bjyoungblood/bjy-authorize)
[![Dependency Status](https://www.versioneye.com/package/php--bjyoungblood--bjy-authorize/badge.png)](https://www.versioneye.com/package/php--bjyoungblood--bjy-authorize)

This module is designed to provide a facade for `Zend\Permissions\Acl` that will
ease its usage with modules and applications. By default, it provides simple
setup via config files or by using `Zend\Db` or Doctrine ORM/ODM (via ZfcUserDoctrineORM).

## What does BjyAuthorize do?

BjyAuthorize adds event listeners to your application so that you have a ""security"" or ""firewall"" that disallows
unauthorized access to your controllers or routes.

This is what a normal `Zend\Mvc` application workflow would look like:

![Zend Mvc Application workflow](http://yuml.me/diagram/plain;/activity/%28start%29-%3E%28route%29%2C%20%28route%29-%3E%28get%20controller%29%2C%20%28get%20controller%29-%3E%28dispatch%29%2C%20%28dispatch%29-%3E%28end%29)

And here's how it would look like with BjyAuthorize enabled:

![Zend Mvc Application workflow with BjyAuthorize](http://yuml.me/diagram/plain;/activity/%28start%29-%3E%28route%29%2C%20%28route%29-%3E%3Ca%3E-no%20route%20guard%3E%28get%20controller%29%2C%20%3Ca%3E-%3E%28route%20guard%29%2C%20%28route%20guard%29-%3E%3Cb%3E-authorized%3E%28get%20controller%29%2C%20%3Cb%3Eunauthorized-%3E%28error%29%2C%20%28get%20controller%29-%3E%3Cc%3E-no%20controller%20guard%3E%28dispatch%29%2C%20%3Cc%3E-%3E%28controller%20guard%29%2C%20%28controller%20guard%29-%3E%3Cd%3E-authorized%3E%28dispatch%29%2C%20%3Cd%3Eunauthorized-%3E%28error%29%2C%20%28error%29-%3E%28end%29%2C%20%28dispatch%29-%3E%28end%29)

## Requirements

 * [Zend Framework 2](https://github.com/zendframework/zf2)
 * [ZfcUser](https://github.com/ZF-Commons/ZfcUser) (optional)
 * [ZfcUserDoctrineORM](https://github.com/ZF-Commons/ZfcUserDoctrineORM) (optional)

## Installation

### Composer

The suggested installation method is via [composer](http://getcomposer.org/):

```sh
php composer.phar require bjyoungblood/bjy-authorize:1.4.*
php composer.phar require zf-commons/zfc-user:0.1.*
```

## Configuration

Following steps apply if you want to use `ZfcUser` with `Zend\Db`. If you want to use Doctrine ORM/ODM, you should
also check the [doctrine documentation](https://github.com/bjyoungblood/BjyAuthorize/blob/master/docs/doctrine.md).

 1. Ensure that following modules are enabled in your `application.config.php` file in the this order:
     * `ZfcBase`
     * `ZfcUser`
     * `BjyAuthorize`
 3. Import the SQL schema located in `./vendor/BjyAuthorize/data/schema.sql`.
 4. Create a `./config/autoload/bjyauthorize.global.php` file and fill it with
    configuration variable values as described in the following annotated example.

Here is an annotated sample configuration file: 

```php
<?php

// For PHP <= 5.4, you should replace any ::class references with strings
// remove the first \ and the ::class part and encase in single quotes

return [
    'bjyauthorize' => [

        // set the 'guest' role as default (must be defined in a role provider)
        'default_role' => 'guest',

        /* this module uses a meta-role that inherits from any roles that should
         * be applied to the active user. the identity provider tells us which
         * roles the ""identity role"" should inherit from.
         * for ZfcUser, this will be your default identity provider
        */
        'identity_provider' => \BjyAuthorize\Provider\Identity\ZfcUserZendDb::class,

        /* If you only have a default role and an authenticated role, you can
         * use the 'AuthenticationIdentityProvider' to allow/restrict access
         * with the guards based on the state 'logged in' and 'not logged in'.
         *
         * 'default_role'       => 'guest',         // not authenticated
         * 'authenticated_role' => 'user',          // authenticated
         * 'identity_provider'  => \BjyAuthorize\Provider\Identity\AuthenticationIdentityProvider::class,
         */

        /* role providers simply provide a list of roles that should be inserted
         * into the Zend\Acl instance. the module comes with two providers, one
         * to specify roles in a config file and one to load roles using a
         * Zend\Db adapter.
         */
        'role_providers' => [

            /* here, 'guest' and 'user are defined as top-level roles, with
             * 'admin' inheriting from user
             */
            \BjyAuthorize\Provider\Role\Config::class => [
                'guest' => [],
                'user'  => ['children' => [
                    'admin' => [],
                ]],
            ],

            // this will load roles from the user_role table in a database
            // format: user_role(role_id(varchar], parent(varchar))
            \BjyAuthorize\Provider\Role\ZendDb::class => [
                'table'                 => 'user_role',
                'identifier_field_name' => 'id',
                'role_id_field'         => 'role_id',
                'parent_role_field'     => 'parent_id',
            ],

            // this will load roles from
            // the 'BjyAuthorize\Provider\Role\ObjectRepositoryProvider' service
            \BjyAuthorize\Provider\Role\ObjectRepositoryProvider::class => [
                // class name of the entity representing the role
                'role_entity_class' => 'My\Role\Entity',
                // service name of the object manager
                'object_manager'    => 'My\Doctrine\Common\Persistence\ObjectManager',
            ],
        ],

        // resource providers provide a list of resources that will be tracked
        // in the ACL. like roles, they can be hierarchical
        'resource_providers' => [
            \BjyAuthorize\Provider\Resource\Config::class => [
                'pants' => [],
            ],
        ],

        /* rules can be specified here with the format:
         * [roles (array], resource, [privilege (array|string], assertion])
         * assertions will be loaded using the service manager and must implement
         * Zend\Acl\Assertion\AssertionInterface.
         * *if you use assertions, define them using the service manager!*
         */
        'rule_providers' => [
            \BjyAuthorize\Provider\Rule\Config::class => [
                'allow' => [
                    // allow guests and users (and admins, through inheritance)
                    // the ""wear"" privilege on the resource ""pants""
                    [['guest', 'user'], 'pants', 'wear'],
                ],

                // Don't mix allow/deny rules if you are using role inheritance.
                // There are some weird bugs.
                'deny' => [
                    // ...
                ],
            ],
        ],

        /* Currently, only controller and route guards exist
         *
         * Consider enabling either the controller or the route guard depending on your needs.
         */
        'guards' => [
            /* If this guard is specified here (i.e. it is enabled], it will block
             * access to all controllers and actions unless they are specified here.
             * You may omit the 'action' index to allow access to the entire controller
             */
            \BjyAuthorize\Guard\Controller::class => [
                ['controller' => 'index', 'action' => 'index', 'roles' => ['guest','user']],
                ['controller' => 'index', 'action' => 'stuff', 'roles' => ['user']],
                // You can also specify an array of actions or an array of controllers (or both)
                // allow ""guest"" and ""admin"" to access actions ""list"" and ""manage"" on these ""index"",
                // ""static"" and ""console"" controllers
                [
                    'controller' => ['index', 'static', 'console'],
                    'action' => ['list', 'manage'],
                    'roles' => ['guest', 'admin'],
                ],
                [
                    'controller' => ['search', 'administration'],
                    'roles' => ['staffer', 'admin'],
                ],
                ['controller' => 'zfcuser', 'roles' => []],
                // Below is the default index action used by the ZendSkeletonApplication
                // ['controller' => 'Application\Controller\Index', 'roles' => ['guest', 'user']],
            ],

            /* If this guard is specified here (i.e. it is enabled], it will block
             * access to all routes unless they are specified here.
             */
            \BjyAuthorize\Guard\Route::class => [
                ['route' => 'zfcuser', 'roles' => ['user']],
                ['route' => 'zfcuser/logout', 'roles' => ['user']],
                ['route' => 'zfcuser/login', 'roles' => ['guest']],
                ['route' => 'zfcuser/register', 'roles' => ['guest']],
                // Below is the default index action used by the ZendSkeletonApplication
                ['route' => 'home', 'roles' => ['guest', 'user']],
            ],
        ],
    ],
];
```

## Helpers and Plugins

There are view helpers and controller plugins registered for this module.
In either a controller or a view script, you can call
```$this->isAllowed($resource[, $privilege])```, which will query the ACL
using the currently authenticated (or default) user's roles.

Whenever you need to stop processing your action you can throw an UnAuthorizedException and users will see you message on a 403 page.

```php
function cafeAction() {
    if (!$this->isAllowed('alcohol', 'consume')) {
        throw new \BjyAuthorize\Exception\UnAuthorizedException('Grow a beard first!');
    }

    // party on ...
}
```

## License
Released under the MIT License. See file [LICENSE](https://github.com/bjyoungblood/BjyAuthorize/blob/master/LICENSE)
included with the source code for this project for a copy of the licensing terms.
",,2012-06-22T14:47:40Z,2018-05-14T16:31:02Z,57,46,276,43,"('Ocramius', 142), ('bjyoungblood', 69), ('steverhoades', 12), ('Adam Lundrigan', 9), ('iwalz', 7), ('Gamempire', 6), ('Oskar Bley', 5), ('neeckeloo', 4), ('Tom Oram', 4), ('delboy1978uk', 3), ('localheinz', 3), ('tawfekov', 3), ('Miles8of9', 3), ('ftdebugger', 3), ('EvanDotPro', 3), ('ossinkine', 2), ('chateaux', 2), ('TomHAnderson', 2), ('srayner', 2), ('remy-theroux', 2), ('UFOMelkor', 2), ('hussfelt', 2), ('mehl321', 2), ('Gabriel Baker', 2), ('basz', 2), ('samsonasik', 2), ('Kevin', 1), ('Martin Shwalbe', 1), ('matwright', 1), ('olavocneto', 1), ('bacinsky', 1), ('shipleyr', 1), ('websafe', 1), ('ToetX2', 1), ('vadim-skorba', 1), ('RWOverdijk', 1), ('sasezaki', 1), ('messyOne', 1), ('mutrox', 1), ('nXqd', 1), ('sing88', 1), ('tomphp', 1), ('kabirbaidhya', 1), ('jhuet', 1), ('ggarcia24', 1), ('edi9999', 1), ('Freeaqingme', 1), ('tuxbrain', 1), ('davidquintard', 1), ('David Kidd', 1), ('Danielss89', 1), ('cbergau', 1), ('Chionsas', 1), ('bertrandgauthier', 1), ('Ben Youngblood', 1), ('drdev', 1), ('sirshurf', 1)",31,25,
demogorgonz/RaspberryPi-CPUMiner,"CPUMiner for RaspberryPi Zero, Pi 3, Pi 2, B+, A+","# RaspberryPi-CPUMiner + CPUMiner with new algorithms (check bellow)
CPUMiner for RaspberryPi Zero, Pi 3, Pi 2, B+, A+.


Clone of: [pooler](https://github.com/pooler/cpuminer)

# Instructions for PiZero:
Download minerd to your PiZero, make it executable & run: 

**# wget https://github.com/demogorgonz/RaspberryPi-CPUMiner/raw/master/minerd**

**# chmod +x minerd**

**# ./minerd -h**

# Or

Download minerd.tar.bz2 archive, extract & run:

**# wget https://github.com/demogorgonz/RaspberryPi-CPUMiner/releases/download/v.1.0/minerd.tar.bz2**

**# tar xjf minerd.tar.bz2**

**# ./minerd -h**


# Build it yourself for Pi 3, Pi 2, B+, A+ :
There is auto build script which will install dependencies to your Raspberry and build ""minerd"" - see ""cpuminer-source"" folder and locate build.sh file.

**cd cpuminer-source/**

**sudo bash build.sh**

_____________________________________________________

# CPUMiner with new algorithms (EXPERIMENTAL)

clone of [lucasjones](https://github.com/lucasjones/cpuminer-multi)

Download page: [Releases v1.1](https://github.com/demogorgonz/RaspberryPi-CPUMiner/releases/tag/v.1.1)

# Build it yourself for Pi 3, Pi 2, B+, A+ :

**cd cpuminer-newalgorithms**

**sudo bash build.sh**

# Donate:

**Bitcoin: 1KWVA9qBfTHmzPMvDw4ociqnk71FoLm1mp**

![btc](http://i.imgur.com/FeRpxAb.png)
","'cpuminer', 'minerd', 'pizero', 'raspberry', 'raspberry-pi', 'raspberrypi-cpuminer'",2016-08-26T18:34:52Z,2017-11-07T21:27:24Z,2,1,86,16,"('demogorgonz', 17), ('Demogorgon', 1)",1,0,
ContinuumIO/tutorials,Continuum's public tutorial repository,"Tutorials & Examples
====================

Topics
------

*   Intro to Numpy
*   Intro to Scipy
*   Intro to Pandas
*   Map-Reduce Examples
*   Bitly Log Files
*   Wiki Log Files
*   Time Series (Glucose)
*   Image Processing
*   Text Analysis
*   Scikit-learn (Ipython Notebook)
*   

License
=======

For private personal or commercial use; not to be reproduced without 
permission from Continuum Analytics.  If you would like to use these
(e.g. for teaching a small class), or if you would like to include these in
a work meant for redistribution, please let us know by 
emailing info@continuum.io.
",,2013-02-19T03:19:09Z,2013-04-04T11:40:50Z,4,3,48,94,"('quasiben', 22), ('teoliphant', 9), ('bryevdv', 2), ('pzwang', 1)",1,0,
HappyPorch/uSplit,A/B Testing plugin for Umbraco,"*UPDATE: uSplit is no longer fully functioning. Google have discontinued content experiments and have moved to Google Optimize. Unfortunately Optimise doesn't have a fully featured management API- which limits the functionality uSplit can provide.  If you are interested in helping with the future of uSplit see this issue https://github.com/HappyPorch/uSplit/issues/25.*

---

# uSplit - A/B Testing package for Umbraco

This repository contains the source code of uSplit, an Umbraco plugin that removes all technical barriers to A/B testing.

The information in this readme is inteded for developers wishing to discuss and contribute to the project.

#### uSpit user documentation

For supplementary information visit the [uSplit product page](http://endzonesoftware.com/usplit-ab-testing-for-umbraco/), where you can also learn about various support packages that are available. We have also made an [installation guide](http://endzonesoftware.com/installing-usplit/) available, and a tutorial on how to [run your first experiment](http://endzonesoftware.com/running-ab-experiments-like-pro-usplit/). These topics were also covered and demoed on a recent [uHangout episode](https://www.youtube.com/watch?v=WQysVNLyQM8).  

## Distribution

uSplit is available via [NuGet](https://www.nuget.org/packages/Endzone.uSplit) (the preffered way of installation) and is also listed on the [Umbraco package repository](https://our.umbraco.org/projects/website-utilities/usplit/).

### NuGet

Currently there are two parallel versions of this plugin available. `1.0.x` for Umbraco <= 7.5 and `1.6.x` for Umbraco 7.6+. Despite the minor version increase these two versions contain the same functionality. Pick one that matches your Umbraco version.

Our CI server builds every commit and all successful builds are automatically packaged and published on [NuGet](https://www.nuget.org/packages/Endzone.uSplit).

```
PM> Install-Package Endzone.uSplit
```

#### NuGet gotchas (versoin 1.0.x; Umbraco <= 7.5 only)

The [Google Analytics Expriments C# Libraries](https://github.com/google/google-api-dotnet-client) have a dependcy on a strongly-signed log4net library version 1.2.13. Up until 7.5 Umbraco was built against and distributed an older unsigned library - version 1.2.11. Due to the signing mismatch [both versions need to be provided to the application](http://i386.com/2015/02/umbraco-and-log4net-using-two-different-versions-of-a-dll-in-asp-net/).

To do so, uSplit places the library Umbraco looks for into `bin/log4net/1.2.11.0/log4net.dll`. The following has to be added to Web.config (under `//configuration/runtime/assemblyBinding`) to make the library discoverable:

```

  
  
     
```

### Umbraco package repository

We also manually release new versions on the [Umbraco package repository](https://our.umbraco.org/projects/website-utilities/usplit/). Since this is a manual process these updates are available later than via NuGet, and not all versions might be released here.

#### Umbraco package repository gotchas (versoin 1.0.x; Umbraco <= 7.5 only)

This method of installation does not update any NuGet packages. uSplit however requires `Newtonsoft.Json` version 7 or above.

`Newtonsoft.Json` version 7 is therefore packaged with uSplit `1.0.x` and will get copied over into the target bin folder when you install the pacakge. If you by any chance used a newer version than the one we distribute make sure to place it back!

Target site needs to update the assembly binding redirect to point to version 7 (unless it is using a newer version):

```

  
  

```

uSplit version `1.6.x` targetting Umbraco `7.6.0` does not distribute this library as version 10 is pulled down as a dependency on `Umbraco.Core`.

## Contributions

Pull requests are more than welcome! Fixed a bug or improved the editorial experience? Share your code with the rest of the community! We do not have official coding standards, just try to keep the code consistent.

Feel free to use the issue tracker to report any problems you encounter. Unless you have a support contract with us, we do not provide any SLAs.

### Dev Resources

- An example [Google API ASP.NET MVC integration with OAuth 2.0](https://developers.google.com/api-client-library/dotnet/guide/aaa_oauth#web-applications-aspnet-mvc)
",,2015-06-22T09:07:34Z,2022-12-07T17:35:06Z,6,5,11,9,"('ondrejpialek', 99), ('hakon-knowit', 11), ('filipesousa20', 8), ('barryokane', 2), ('Marc van de Wert', 1), ('ptilsed', 1)",2,1,
nnhoa/akGroupPlus,Strategic Solution for Optimizing the Concurrent Queries on Large-Scale Dynamic Graph,"This paper presents our strategic solution in order to optimize the concurrent queries on a large-scale directed, dynamic graph such as a social network. For this kind of big graphs, edges can be dynamically added or removed while a user asks to determine the shortest path between two vertices. Based on the ideas of the previous working groups in the SigMod Programming Contest 2016, we propose a strategic solution in order to solve this challenge. This strategic solution is based on (i) an appropriate data structure, (ii) the optimized update actions (insertions and deletions) and (iii) by improving the performance of query processing by both reducing the searching space and computing in multithreaded parallel. 
Thus, graph is globally organized by the adjacent lists in order to improve the cache hit ratio and the update action performance. The reduction of searching space is based on the way of calculating the potential enqueued vertices. Cilkplus method is chosen to takes a lot of advantages of the capabilities of modern computer architectures such as multi-threads, multi-cores. It allows to parallelize the consecutive queries efficiently. Our experimental results are also outstanding compared to others existing solutions by using popular datasets such SigMod Contest 2016 and SNAP DataSet Collections.

This project is built for the paper ""Towards a Strategic Solution for Optimizing the Concurrent Queries on Large-Scale Dynamic Graph"".

To get the datasets,please surf at the following pages:

    For Pokec social network: https://snap.stanford.edu/data/soc-pokec.html
    For LiveJournal social network: https://snap.stanford.edu/data/soc-LiveJournal1.html 
    
The SigMod dataset was uploaded in the ""corpus"" folder.
",'s',2017-06-11T10:12:44Z,2017-06-11T14:56:27Z,1,0,0,2,"('nnhoa', 5)",0,0,
jenkinsci/bitbucket-branch-source-plugin,Bitbucket Branch Source Plugin,"# Bitbucket Branch Source Plugin

[![Build](https://ci.jenkins.io/job/Plugins/job/bitbucket-branch-source-plugin/job/master/badge/icon)](https://ci.jenkins.io/job/Plugins/job/bitbucket-branch-source-plugin/job/master/)
[![GitHub release](https://img.shields.io/github/release/jenkinsci/bitbucket-branch-source-plugin.svg?label=release)](https://github.com/jenkinsci/bitbucket-branch-source-plugin/releases/latest)
[![Jenkins Plugin Installs](https://img.shields.io/jenkins/plugin/i/cloudbees-bitbucket-branch-source?color=blue)](https://plugins.jenkins.io/cloudbees-bitbucket-branch-source)
[![Contributors](https://img.shields.io/github/contributors/jenkinsci/bitbucket-branch-source-plugin.svg)](https://github.com/jenkinsci/bitbucket-branch-source-plugin/contributors)
[![Join the chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/jenkinsci/bitbucket-branch-source-plugin?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

## User Guide

[Browse the user guide here](docs/USER_GUIDE.adoc)

## Notes

* Unlike GitHub, in Bitbucket, [team admins do not have access to forks](https://bitbucket.org/site/master/issues/4828/team-admins-dont-have-read-access-to-forks).
This means that when you have a private repository, or a private fork of a public repository, the team admin will not be able to see the PRs within the fork.

## How-to run and test with Bitbucket Server locally

* [Install the Atlassian SDK on Linux or Mac](https://developer.atlassian.com/server/framework/atlassian-sdk/install-the-atlassian-sdk-on-a-linux-or-mac-system/) or [on Windows](https://developer.atlassian.com/server/framework/atlassian-sdk/install-the-atlassian-sdk-on-a-windows-system/)
* To run 5.2.0 server: `atlas-run-standalone -u 6.3.0 --product bitbucket --version 5.2.0 --data-version 5.2.0`
","'bitbucket', 'jenkins-plugin', 'scm'",2016-03-11T18:28:58Z,2024-06-10T12:17:55Z,127,114,215,32,"('stephenc', 207), ('dependabotbot', 133), ('jetersen', 97), ('amuniz', 54), ('darxriggs', 38), ('vivek', 28), ('bitwiseman', 27), ('twz123', 24), ('jsoref', 17), ('rsandell', 16), ('vault', 14), ('Benoit Guerin', 14), ('Eernie', 11), ('lifeofguenter', 10), ('Pldi23', 7), ('nfalco79', 7), ('andrey-fomin', 6), ('jglick', 6), ('falkena', 5), ('kjonick1', 5), ('michelzanini', 5), ('mindfulmonk', 4), ('sams-gleb', 4), ('car-roll', 4), ('Dohbedoh', 4), ('batterseapower', 3), ('tarioch', 3), ('dwnusbaum', 3), ('Thomas Kalmar', 3), ('maocorte', 3), ('KalleOlaviNiemitalo', 3), ('basil', 3), ('pixman20', 3), ('jimklimov', 2), ('tempora-mutantur', 2), ('witokondoria', 2), ('ssc327', 2), ('jmguillaume', 2), ('timja', 2), ('r-kok', 2), ('olamy', 2), ('olivierdagenais', 2), ('Mixaill', 2), ('zigarn', 2), ('iongchun', 2), ('cyprianno', 2), ('hein-2improveit', 2), ('heincouwet', 2), ('Hugo Fonseca', 2), ('jasonfield', 2), ('joseblas', 2), ('cronik', 2), ('MarkEWaite', 2), ('michaelneale', 2), ('ca-stefan-cordes', 1), ('sheldonrong', 1), ('IronSean', 1), ('sjjarvi', 1), ('rickard-n', 1), ('Raúl Arabaolaza Barquin', 1), ('rahulsom', 1), ('pniederlag', 1), ('PatrikSchalin', 1), ('pascallap', 1), ('oliverlockwood', 1), ('nilsmahlstaedt', 1), ('viceice', 1), ('HackAttack', 1), ('MrCitron', 1), ('melvyndekort', 1), ('Melvyn de Kort', 1), ('Mattias', 1), ('lukasz-lesiak', 1), ('yoerg', 1), ('thomas-boehm-tractive', 1), ('seb-lie', 1), ('recena', 1), ('mlasevich', 1), ('adammitchellplaytech', 1), ('mikecirioli', 1), ('lgtm-combot', 1), ('kurddt', 1), ('drg2', 1), ('LinuxSuRen', 1), ('Xander Dumaine', 1), ('wilreichert', 1), ('tball-dev', 1), ('tommysdk', 1), ('timpeeters', 1), ('Ted Xiao', 1), ('sghill-rewrite', 1), ('fonsecas72', 1), ('fbelzunc', 1), ('Seros', 1), ('eduwei01', 1), ('scddev', 1), ('duemir', 1), ('dee-kryvenko', 1), ('daspilker', 1), ('Christian Ewald', 1), ('Hubble1942', 1), ('behoyh', 1), ('aneveux', 1), ('Andrew Pixley', 1), ('alexey-pelykh', 1), ('alexanderrtaylor', 1), ('NotMyFault', 1), ('AlbanAndrieu', 1), ('ellieayla', 1), ('martinmigasiewicz-tomtom', 1), ('MartinHelwig', 1), ('marcus-held', 1), ('recena', 1), ('LukasInnerhofer', 1), ('LuisPiedra', 1), ('Bkocsan', 1), ('kylec32', 1), ('kmadel', 1), ('jlbernal', 1), ('redfive', 1), ('jfroche', 1), ('JeanChristopheMorinPerso', 1), ('janithjeewantha', 1), ('James William Dumay', 1), ('James Dumay', 1), ('i386', 1), ('ghunteranderson', 1)",73,63,
daxnet/ByteartRetail,一个演示.NET企业应用开发技术以及领域驱动设计的案例代码，业务背景是一个简单的在线零售系统。,"Byteart Retail项目简介
======================
从2007年至今，我一直关注着与领域驱动设计相关的软件开发过程与技术，在这几年中，我坚持不懈地学习、实践，在总结自己实践经验的基础上，设计并开发了一套基于.NET的面向领域驱动的企业应用程序开发框架，沿用我以前开发的一个松耦合架构实验原型，为之取名为Apworks。为了向社区展示Apworks在企业级应用开发上给开发人员带来的便捷，我也针对Apworks框架开发了一套面向CQRS架构的案例程序：Tiny Library CQRS。随着Apworks的不断发展，Tiny Library CQRS也先后更新了两个版本，毋庸置疑，第二版更为成熟，更贴近于实际项目应用。

然而，社区对Tiny Library CQRS的反馈却不是那么积极，分析原因，我觉得有三个方面：首先，基于事件溯源（Event Sourcing）机制的CQRS架构本身就非常复杂，套用世界级软件架构大师Udi Dahan对CQRS架构的总结，就是：“简单，但不容易（Simple, but not easy）”，要让一个对企业级软件架构设计不太熟悉的开发人员掌握好CQRS相关的知识，是一件困难的事情，即使有现成的案例，也会让人感觉无从下手；其次，目前大多数应用程序还远没达到需要使用CQRS架构的规模，在项目中应用CQRS，只能把简单问题复杂化；再次，由于个人时间能力有限，Tiny Library CQRS案例本身也没有提供太多的文档与说明，加上该案例直接使用了Apworks框架，所以很多后台运行机制就变得不那么明朗，这对希望研究CQRS架构的开发人员造成了一定的困难。因此，Tiny Library CQRS感觉就与真实项目的实践脱节，自然关注的人就不多了。所以我打算暂时搁置Tiny Library CQRS的更新，让其也成为一个CQRS架构设计的参考原型，供有兴趣的朋友参观学习。

于是，从今年4月开始，我就着手开发并发展了另一个面向领域驱动的.NET企业级应用架构设计案例：Byteart Retail。与Tiny Library CQRS不同的是，Byteart Retail采用了面向领域驱动的经典分层架构，并且为了展示微软.NET技术在企业级应用开发中的应用，它所使用的第三方组件也几乎都是微软提供的：Entity Framework、ASP.NET MVC、Unity IoC、Unity AOP、Enterprise Library Caching等（用于记录日志的log4net除外，但log4net本身也是众所周知的框架），所以，开发人员只需要打开Byteart Retail的源程序，就能够很清楚地看到系统的各个组件是如何组织在一起并协同工作的。经典分层架构的采用，也为实际项目带来了参考和指导的价值。

![Byteart Retail Version 3](http://images.cnblogs.com/cnblogs_com/daxnet/201211/201211081523197376.png)

Byteart Retail演示体验
============
目前，Byteart Retail已被部署到了Windows Azure，请通过[http://daxnetsvr.cloudapp.net/ByteartRetailWeb/](http://daxnetsvr.cloudapp.net/ByteartRetailWeb/ ""Byteart Retail"")访问演示站点。

**郑重声明：在体验的过程中，如需注册新用户，请确保不要用自己的常用密码进行注册，因为为了简化演示和平时的开发调试，Byteart Retail没有对密码进行任何加密处理（数据库明文存储），如果使用自己的常用密码，势必会带来一定的安全隐患。由此导致的密码泄露我本人可不负责哦！另外，我偷懒了，部署的时候直接用的SqlLocalDB，而不是SQL Express。众所周知SqlLocalDB是一个开发版，因此在体验的过程中万一遇到了数据库挂掉的错误，还恳请大家多多包涵！**


Byteart Retail所使用的技术
==========================
Byteart Retail项目使用或涵盖了以下Microsoft技术：
- Microsoft Entity Framework 5 Code First（包括Repository模式的实现、枚举类型的支持以及分页功能的实现）
- ASP.NET MVC 4
- WCF
- Microsoft Patterns & Practices Unity Application Block
- Microsoft Patterns & Practices Unity Policy Injection Extension
- Microsoft Patterns & Practices Caching Application Block
- Microsoft Appfabric Caching
- 使用AutoMapper实现DTO与领域对象映射
- T4自动化代码生成
- 基于Unity的AOP拦截
- 使用log4net记录拦截的Exception详细信息

Byteart Retail所演示的模式和设计思想
==================================
Byteart Retail项目演示或涵盖了以下模式和设计思想：
- 实体、值对象、领域服务
- 规约、仓储、仓储上下文
- 领域事件、事件聚合器、事件总线
- 事务协调器
- 服务定位器模式、工作单元模式、分离接口模式、数据传输对象模式、层超类型模式、传输对象组装器模式


运行Byteart Retail案例
======================
先决条件
--------
从V3开始，本案例使用Visual Studio 2012开发，因此，要编译本案例的源代码程序，则需要首先安装Visual Studio 2012。由于数据库采用了SQL Server Express LocalDB，因此，这部分组件也需要正确安装（如果是选择完整安装Visual Studio 2012，则可以忽略LocalDB的安装）。
另外，Byteart Retail提供了两种事件总线（Event Bus）的实现：一种是面向事件聚合器（Event Aggregator）的，它将把所获得的事件通过聚合器派发到一个或多个事件处理器上；另一种是面向微软MSMQ的，它将把所获得的事件直接派发到MSMQ队列中，如果采用这种事件总线，则需要在机器上安装和配置MSMQ组件，并确保新建的队列是事务型队列。
此外，无需安装其它组件。

编译运行
--------
克隆源代码资源库，或者直接下载zip压缩包，然后在Microsoft Visual Studio 2012中打开ByteartRetail.sln文件，再将ByteartRetail.Web项目设置为启动项目后，直接按F5（或者Debug –> Start Debugging菜单项）运行本案例即可。注意：
- 如果不打算以Debug的方式启动本案例，那就需要首先展开ByteartRetail.Services项目，任选其中一个.svc的服务文件（比如UserService.svc）然后点击右键选择View In Browser菜单项，以便启动服务端的ASP.NET Development Server；最后再直接启动ByteartRetail.Web项目
- 由于Byteart Retail V3的数据库采用的是SQL Server 2012 Express LocalDB（默认实例），在程序连接LocalDB数据库时，LocalDB需要创建/初始化数据库实例，因此在首次启动时有可能会出现数据库连接超时的异常，如果碰到这类问题，则请稍等片刻然后再重试
- 如果以上述第一点的方式运行ByteartRetail.Web项目并出现与WCF绑定相关的错误时，这表示WCF服务并没有完全启动，请重新启动ByteartRetail.Services项目，然后再启动ByteartRetail.Web项目

登录账户
--------
启动成功后，就可以单击页面右上角的“登录”链接进行账户登录。默认的登录账户有（用户名/密码）：
- admin/admin：以管理员角色登录，可以对站点进行管理
- sales/sales：以销售人员角色登录，可以查看系统中订单信息并进行发货等操作
- buyer/buyer：以采购人员角色登录，可以管理商品分类和商品信息
- daxnet/daxnet：普通用户角色，不能对系统进行任何管理操作

解决方案结构
------------
ByteartRetail.sln包含以下项目：
- ByteartRetail.Design：包含一些设计相关的图画文件，仅供参考，没有实际意义
- ByteartRetail.Application：应用层
- ByteartRetail.DataObjects：数据传输对象及其类型扩展
- ByteartRetail.Domain：领域层
- ByteartRetail.Domain.Repositories：仓储的具体实现（目前是基于Entity Framework 5.0的实现）
- ByteartRetail.Events：事件相关的事件处理器、事件总线和事件聚合器的定义
- ByteartRetail.Events.Handlers：具体的事件处理器定义
- ByteartRetail.Infrastructure：基础结构层
- ByteartRetail.Infrastructure.Caching：位于基础结构层的缓存实现
- ByteartRetail.ServiceContracts：基于WCF的服务契约
- ByteartRetail.Services：WCF服务
- ByteartRetail.Web：基于ASP.NET MVC的站点程序（表示层） 

以下是各项目之间的依赖关系：
![Byteart Retail Version 3项目间依赖关系](https://github.com/daxnet/ByteartRetail/blob/master/Documents/ByteartRetailAssemblyDependency.png?raw=true)

总结
====
热烈欢迎爱好Microsoft.NET技术以及领域驱动设计的读者朋友对本案例进行深入讨论。同时也欢迎访问我的.NET/DDD架构经验分享交流网站：[http://sunnycoding.cn](http://sunnycoding.cn ""sunnycoding.cn"")
",,2012-11-08T00:58:05Z,2019-01-11T01:33:50Z,1,1,310,68,"('daxnet', 47)",0,0,
fython/BilibiliAPIDocs,哔哩哔哩开放接口第三方文档（仅提供官方曾公开接口）,"# Bilibili API 第三方文档
绝大部分内容根据 http://docs.bilibili.cn/wiki 官方文档进行编写
> 哔哩哔哩开放平台为第三方提供了简便的合作模式，满足了网站、手机和平板电脑用户随时随地观看哔哩哔哩的需求。哔哩哔哩开放平台提供相关接口，以实现第三方WAP站和客户端等多种应用的接入。

### API 分类

[作者推荐](./API.author_recommend.md)；
[番剧](./API.bangumi.md)；
[弹幕](./API.comment.md)；
[动态](./API.dynamic.md)；

[视频/专题收藏、关注](./API.favourite.md)；
[视频评论](./API.feedback.md)；
[好友/悄悄关注/黑名单](./API.friend.md)；

[历史记录](./API.history.md)；
[批量获取排行信息(首页)](./API.index.md)；
[获取视频排行信息](./API.list.md)；

[登录行为记录](./API.log.md)；
[第三方登录](./API.login.3rd.md)；
[登录](./API.login.md)；

[我的信息](./API.myinfo.md)；
[通知](./API.notify.md)；
[视频推荐](./API.recommend.md)；
[搜索](./API.search.md)；
[读取/创建专题](./API.sp.md)；

[番剧专题](./API.spview.md)；
[搜索关键词](./API.suggest.md)；
[标签](./API.tags.md)；
[用户信息](./API.userinfo.md)；
[获取视频信息](./API.view.md)。


### 注意事项

##### 关于滥用
以下这些，但并不限于以下这些行为都被视为滥用：
a.短时间内大量操作API用于采集。
b.测试帐号及密码
c.其它没有提到的，但会给系统带来压力的请求行为。

##### 禁止登录

如果账号尝试登录错误次数在 30 分钟内超过 5 次则会被禁止登录一个小时，写程序的时候特别是 客户端的时候必须判断是否登录成功，如果不成功必须马上停止尝试。

##### 关于封禁

由于滥用 API 将会导致 API 被封禁，但并不影响在官方网站上的使用，封禁一定的时间后会自动解除，一般需要一个小时后才会解封，所以请小心操作，不要拿 API 进行大量测试

##### 请求地址

请求的地址为 http://api.bilibili.com/ 开头的地址

##### 请求方法

只支持 GET 方法请求数据，用其它方法会提示相关错误。

##### 关于编码

请用 UTF-8 编码进行数据传输，返回的数据也是 UTF-8 编码的。

##### 关于 UserAgent

请求的时候必须设置 UserAgent，如果不设置或者设置为不合法的（比如设置为浏览器的）也会导致账号被封禁 API。 UserAgent 的格式必须为：程序英文名称/版本 (联系邮箱) 比如：BiLiBiLi WP Client/1.0.0 (orz@loli.my)


### 通用调用参数

|字段|必选|类型|说明|
|----|----|----|----|
|type|false|string (json/xml/jsonp)|返回数据方式 默认json|
|appkey|true|string|应用appkey|
|ts|true|int|当前时间截 (UNIX TIMESTAMP)|
|sign|true|string|应用校验密匙|
|callback|false|string|JSONp调用方式时回调函数名称|
|access_key|false|string|应用在用户申请登陆后获取到的access_key 可以此access_key访问需要用户权限的操作|
|platform|false|string (android/ios)|客户端平台适配及统计用|

### 通用错误代码

|代码|说明|
|----|----|
|-1|应用程序不存在或已被封禁|
|-2|Access key错误|
|-3|API校验密匙错误|
|-101|帐号未登陆|
|-102|帐号被封停|
|-103|积分不足|
|-104|硬币不足|
|-105|验证码错误|
|-106|帐号未激活|
|-107|帐号非正式会员或在适应期|
|-108|应用沒有存取相应功能的权限|
|-400|请求有误|
|-403|权限不足|
|-404|文档不存在|
|-500|服务器内部错误|
|-503|调用速度过快|

### 签名(sign)生成方式

把接口所需所有参数拼接，如utk=xx&time=xx，按参数名称排序，最后再拼接上密钥App-Secret，做md5加密 (callback不需要参与sign校检)

##### 代码示例

PHP 版本:

```
/**
 * @param $params array 参数列表
 * @param $key 加密密钥
 * @return array sign:加密校验串,params:参数拼接串
 */
 function get_sign($params, $key) {
  $_data = array();
  ksort($params);
  reset($params);
  foreach ($params as $k => $v) {
  // rawurlencode 返回的转义数字必须为大写( 如%2F )
  $_data[] = $k . '=' . rawurlencode($v);
  }
  $_sign = implode('&', $_data);
  return array(
    'sign' => strtolower(md5($_sign . $key)),
    'params' => $_sign,
  );
 }
 define(""APP_SECRET"",""abcdef123456"");
 get_sign(array(""type""=>""json""),APP_SECRET);
```

JS 版本:

```
/script>
 function get_sign(params, key)
 {
 	var s_keys = [];
 	for (var i in params)
 	{
 		s_keys.push(i);
 	}
 	s_keys.sort();
 	var data = """";
 	for (var i = 0; i < s_keys.length; i++)
 	{
 		// encodeURIComponent 返回的转义数字必须为大写( 如 %2F )
 		data+=(data ? ""&"" : """")+s_keys[i]+""=""+encodeURIComponent(params[s_keys[i]]);
 	}
 	return {
 		""sign"":hex_md5(data+key),
 		""params"":data
 	};
 }
```
","'bilibili-api', 'documentation'",2015-07-21T16:34:02Z,2020-09-05T01:06:35Z,3,3,2388,86,"('fython', 11), ('Qixingchen', 7), ('Yinzo', 1)",1,1,
nixzhu/dev-blog,翻译、开发心得或学习笔记,"dev-blog
========

翻译、开发心得或学习笔记

- [AutoLayout Tips](https://github.com/nixzhu/dev-blog/blob/main/posts/autolayout-tips.md)
- 翻译：[GCD 深入理解：第一部分](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-19-grand-central-dispatch-in-depth-part-1.md)
- 翻译：[为一个 iOS 应用编写一个简单的 Node.js/MongoDB Web 服务](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-21-write-a-simple-nodejs-mongodb-web-service-for-an-ios-app.md)
- 翻译：[研究 UIActivityViewController](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-22-uiactivityviewcontroller.md)
- 翻译：[开发使用 iBeacon 的 iOS 7 应用](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-23-ios7-ibeacons-tutorial.md)
- 翻译：[iOS 应用的国际化（2014）](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-24-internationalization-tutorial-for-ios-2014.md)
- 翻译：[制作一个可以滑动操作的 Table View Cell](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-26-make-swipeable-table-view-cell-actions-without-going-nuts-scroll-views.md)
- 翻译：[编写一个使用 Node.js/MongoDB Web 服务的 iOS 应用](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-04-29-write-ios-app-uses-node-jsmongodb-web-service.md)
- 翻译：[创建自定义 AngularJS 指令，第一部分，基础知识](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-05-03-creating-custom-angularjs-directives-part-1-the-fundamentals.md)
- 翻译：[自定义 Layer 属性的动画](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-05-10-animating-custom-layer-properties.md)
- 翻译：[GCD 深入理解：第二部分](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-05-14-grand-central-dispatch-in-depth-part-2.md)
- 翻译：[在 iOS 上捕捉签名](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-05-27-capture-a-signature-on-ios.md)
- 翻译：[Flipboard 在 iOS 上怎样播放 GIF 动画](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-06-01-animated-gif.md)
- 翻译：[介绍 MVVM](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-06-10-mvvm.md)
- 翻译：[使用 Swift 和 Xcode 6 制作超棒的 UI 组件](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-06-10-make-awesome-ui-components-ios-8-using-swift-xcode-6.md)
- [分析一个有趣的 Swift 项目：LTBouncyPlaceholder](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-06-12-ltbouncyplaceholder.md)
- 翻译：[用 Quartz Composer 和 Origami 制作一个简单的按钮动画](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-06-22-quartz-composer-and-origami-tutorial-button-animation.md)
- [检测是否通过点击通知来启动App](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-09-30-detect-launch-from-notification.md)
- 翻译：[使用 Swift 构建自定义（且“可设计”的）控件](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-11-20-build-custom-control-in-swift.md)
- 翻译：[AsyncDisplayKit 教程：达到 60 FPS 的滚动帧率](https://github.com/nixzhu/dev-blog/blob/main/posts/2014-11-22-asyncdisplaykit-tutorial-achieving-60-fps-scrolling.md)
- [生成自适应图表图片的秘密](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-04-08-adaptive-chart.md)
- [使用状态机的好处](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-04-23-state-machine.md)
- [用 Swift 实现轻量的属性监听系统](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-04-30-property-listener.md)
- [区别 iPhone 做布局](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-05-18-screen-model.md)
- [再造虫洞：一次 Objective-C 到 Swift 的改写之旅](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-05-27-wormhole.md)
- [处理键盘通知](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-07-27-keyboard-man.md)
- [对函数式编程的一点理解](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-07-30-functional-programming.md)
- [国产 SDK](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-09-18-monkey-king.md)
- [一种头像缓存策略](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-10-08-navi.md)
- 翻译：[Swift 包管理器](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-12-04-swift-package-manager.md)
- [NSCache 源码分析](https://github.com/nixzhu/dev-blog/blob/main/posts/2015-12-09-nscache.md)
- [防止点击 Cell 时 ViewController 被重复 Push]( https://github.com/nixzhu/dev-blog/blob/main/posts/2016-01-04-duplicate-push.md)
- [自定义 UITextView 关键字高亮与点击检测](https://github.com/nixzhu/dev-blog/blob/main/posts/2016-01-14-mention-in-textview.md)
- [在 GitHub 上贡献开源项目的一般步骤](https://github.com/nixzhu/dev-blog/blob/main/posts/2016-02-17-contribute-on-github.md)
- [制作一个苦力](https://github.com/nixzhu/dev-blog/blob/main/posts/2016-06-29-coolie.md)
- [能偶尔用上的 awk](https://github.com/nixzhu/dev-blog/blob/main/posts/2016-08-11-awk.md)
- [解析器组合子](https://github.com/nixzhu/dev-blog/blob/main/posts/2017-04-12-json-parser.md)
- [基于栈的 HTML 解析器](https://github.com/nixzhu/dev-blog/blob/main/posts/2017-05-22-stack-based-html-parser.md)
- 翻译：[入门 GraphQL & Apollo](https://github.com/nixzhu/dev-blog/blob/main/posts/2017-06-01-GraphQL-Apollo.md)
- [App 的环境](https://github.com/nixzhu/dev-blog/blob/main/posts/2017-07-05-app-environment.md)
- 翻译：[测试五要素](https://github.com/nixzhu/dev-blog/blob/main/posts/2017-08-31-five-factor-testing.md)
- [让 preferredStatusBarStyle 真的工作（iOS 10以后）](https://github.com/nixzhu/dev-blog/blob/main/posts/2017-10-20-preferredstatusbarstyle.md)
- [自定义 Share Extension](https://github.com/nixzhu/dev-blog/blob/main/posts/2018-04-18-custom-share-extension.md)
- [ARC：我捕捉它了吗？](https://github.com/nixzhu/dev-blog/blob/main/posts/2018-06-04-arc.md)
- [使用 xcodeproj](https://github.com/nixzhu/dev-blog/blob/main/posts/2019-01-09-xcodeproj.md)
- 翻译：[使用 Swift 实现 Promise](https://github.com/nixzhu/dev-blog/blob/main/posts/2019-01-21-implementing-promises-in-swift.md)
- 翻译：[使用 Swift 的 async/await 构建一个图片加载器](https://github.com/nixzhu/dev-blog/blob/main/posts/2021-09-28-using-swifts-async-await-to-build-an-image-loader.md)
- 翻译：[Swift 中 Actor 的重入问题](https://github.com/nixzhu/dev-blog/blob/main/posts/2021-09-28-actor-reentrancy-problem.md)

---

有任何想法，欢迎[用邮件和我交流](mailto:zhuhongxu@gmail.com)。

同时欢迎购买我开发的几个 [app](https://nixzhu.dev/apps/)，其中帮助开发者从 JSON 生成模型以节省时间的 [Ducky Model Editor](https://apps.apple.com/cn/app/ducky-model-editor/id1525505933) 你很可能用得着。

","'algorithms', 'gcd', 'ios', 'parser', 'parser-combinators', 'state-machine', 'swift'",2014-04-16T12:04:45Z,2024-05-08T10:07:06Z,12,10,3936,286,"('nixzhu', 346), ('100mango', 2), ('feng.lee', 2), ('CodeEagle', 1), ('alfredcc', 1), ('nnabuuu', 1), ('Tinghui', 1), ('kira1928', 1), ('orangle', 1), ('tyeen', 1), ('evenluo', 1), ('张栋', 1)",9,8,
feffi/iOS-Ingress,Google's AR Game Ingress port for iOS,"iOS Ingress
===========

Google's AR Game Ingress port for iOS

Getting map data from API
-------------------------

I have big problems with this part. Ingress uses cell/tile IDs for getting data from API and I don't know how it works. Few examples from Czech republic are implemented by default in [API cellsAsHex]. Help with this would be nice.

You can get cellsIDs by catching Android app's communication.

Storyboard
----------

You need to install font **Coda-Regular.ttf** to open Storyboard.

Choosing faction
----------------

    API
        - (void)chooseFaction:(NSString *)faction completionHandler:(void (^)(void))handler;
        
        ""ALIENS""        = enlightened
        ""RESISTANCE""    = resistance

Screenshots
-----------

![Screenshot 1](http://i.imgur.com/Od5sVxh.jpg)
![Screenshot 2](http://i.imgur.com/r21wnTc.png)
![Screenshot 3](http://i.imgur.com/FIYe6bm.png)
![Screenshot 4](http://i.imgur.com/V1r6eER.png)
![Screenshot 5](http://i.imgur.com/Joik8Qe.png)

Attribution & License
---------------------

This project is licensed under the permissive ISC license. Parts imported from other projects remain under their respective licenses.
",,2013-04-14T19:58:04Z,2013-04-14T17:02:39Z,2,1,26,5,"('alex-alex', 22), ('Alex Studnicka', 1)",1,0,
3ofcoins/chef-cookbook-hostname,Chef cookbook to set node's hostname and FQDN.,"# hostname cookbook

[![Build Status](https://travis-ci.org/3ofcoins/chef-cookbook-hostname.svg?branch=master)](https://travis-ci.org/3ofcoins/chef-cookbook-hostname)
[![Chef cookbook](https://img.shields.io/cookbook/v/hostname.svg)](https://supermarket.chef.io/cookbooks/hostname)
## Description

Sets hostname and FQDN of the node. The latest code is hosted at
https://github.com/3ofcoins/chef-cookbook-hostname

### Important

Setting hostname on FQDN is not (and won't be) supported. Unfortunately, using dots in the hostname can cause
[inconsistent results for any system that consumes DNS](http://serverfault.com/questions/229331/can-i-have-dots-in-a-hostname)
and [is not allowed by RFC952](http://tools.ietf.org/html/rfc952). If a user
needs additional info in their shell prompt, they can change PS1 in etc/profile
to include the FQDN together with any information they find useful (such as
the customer, the environment, etc).

## Attributes

- `node['set_fqdn']` - FQDN to set.

The asterisk character will be replaced with `node.name`. This way,
you can add this to base role:

```ruby
default_attributes :set_fqdn => '*.project-domain.com'
```

and have node set its FQDN and hostname based on its chef node name
(which is provided on `chef-client` first run's command line).

- `node['hostname_cookbook']['hostsfile_ip']` -- IP used in
  `/etc/hosts` to correctly set FQDN (default: `127.0.1.1`)
- `node['hostname_cookbook']['hostsfile_aliases']` -- list of aliases used in
  `/etc/hosts` for the ip set above (default: [`hostname`])
- `node['hostname_cookbook']['hostsfile_include_hostname_in_aliases']` -- whether to include the hostname
  at the end of the aliases list above (default: true)

- `node['hostname_cookbook']['append_hostsfile_ip']` -- Set to `false` to
  prevent an entry for the node's hostname from being appended in `/etc/hosts` (default: `true`)

## Recipes

* `hostname::default` -- will set node's FQDN to value of `set_fqdn` attribute,
and hostname to its host part (up to first dot).
* `hostname::vmware` -- sets hostname automatically using vmtoolsd.
You do not need to set `node[""set_fqdn""]`.

## Author

Author: Maciej Pasternacki maciej@3ofcoins.net
",,2012-08-29T14:23:27Z,2023-05-10T16:45:15Z,20,15,41,8,"('xamebax', 40), ('mpasternacki', 31), ('mburns', 18), ('shortdudey123', 15), ('Jonathan Serafini', 4), ('Maciej Pasternacki', 3), ('mattkasa', 3), ('Michael Burns', 3), ('tily', 3), ('mmrwoods', 2), ('msilvey', 2), ('Alan Wilhelm', 1), ('brenttheisen', 1), ('chulkilee', 1), ('danieljimenez', 1), ('Daniel Steen', 1), ('guilhem', 1), ('JeanMertz', 1), ('joelmoss', 1), ('timurb', 1)",9,7,
opensourceBIM/BIMserver,The open source BIMserver platform,"BIMserver
=========

The Building Information Model server (short: BIMserver) enables you to store and manage the information of a construction (or other building related) project. Data is stored in the open data standard IFC. The BIMserver is not a fileserver, but it uses a model-driven architecture approach. This means that IFC data is stored as objects. You could see BIMserver as an IFC database, with special extra features like model checking, versioning, project structures, merging, etc. The main advantage of this approach is the ability to query, merge and filter the BIM-model and generate IFC output (i.e. files) on the fly.

Thanks to its multi-user support, multiple people can work on their own part of the dataset, while the complete dataset is updated on the fly. Other users can get notifications when the model (or a part of it) is updated. 

BIMserver is built for developers. We've got a great wiki on https://github.com/opensourceBIM/BIMserver/wiki and are very active supporting developers on https://github.com/opensourceBIM/BIMserver/issues 

(C) Copyright by the contributers / BIMserver.org

Licence: GNU Affero General Public License, version 3 (see http://www.gnu.org/licenses/agpl-3.0.html)
Beware: this project makes intensive use of several other projects with different licenses. Some plugins and libraries are published under a different license.
","'bim', 'bim-applications', 'bim-bots', 'bim-server', 'bimserver', 'buildingsmart', 'ifc', 'java', 'openbim'",2013-05-08T14:55:01Z,2024-03-25T18:21:38Z,43,22,1514,191,"('rubendel', 4553), ('hlg', 67), ('PeterWillems', 64), ('Ruben de Laat', 59), ('Leon van Berlo', 44), ('rehno-lindeque', 37), ('dependabotbot', 19), ('Ruben de Laat', 15), ('lirmont', 15), ('Ruben de Laat', 9), ('dlabz', 8), ('BryanDeNijs', 7), ('Ruben de Laat', 7), ('Ruben de Laat', 6), ('berlotti', 6), ('Léon van Berlo', 5), ('Ruben de Laat', 5), ('Ruben de Laat', 4), ('Ruben de Laat', 4), ('aothms', 4), ('ruben', 3), ('ruben', 3), ('jakob-beetz', 3), ('Ruben de Laat', 3), ('Ruben de Laat', 3), ('Ako Tulu', 2), ('GuusLieben', 2), ('Marcin Koziuk', 2), ('WeltWeitBau', 2), ('root', 2), ('Gorynych', 1), ('no_author', 1), ('klokoy', 1), ('jakob-beetz', 1), ('greensi', 1), ('vinnividivicci', 1), ('theoryshaw', 1), ('Ruben de Laat', 1), ('Ruben de Laat', 1), ('pimvdh', 1), ('JLLeitschuh', 1), ('saufrecht', 1), ('garethm', 1)",13,9,
jhollingworth/bootstrap-wysihtml5,"Simple, beautiful wysiwyg editor","**This repo is no longer maintained. ""bootstrap3-wysiwyg"":https://github.com/bootstrap-wysiwyg/bootstrap3-wysiwyg is much better**

h1. Overview

Bootstrap-wysihtml5 is a javascript plugin that makes it easy to create simple, beautiful wysiwyg editors with the help of ""wysihtml5"":https://github.com/xing/wysihtml5 and ""Twitter Bootstrap"":http://twitter.github.com/bootstrap/.

h1. Examples

* ""http://jhollingworth.github.com/bootstrap-wysihtml5"":http://jhollingworth.github.com/bootstrap-wysihtml5/

h1. Quick Start

If you are using rails use the ""bootstrap-wysihtml5-rails gem"":http://rubygems.org/gems/bootstrap-wysihtml5-rails.


gem install bootstrap-wysihtml5-rails


Otherwise, download ""the latest version of bootstrap-wysihtml5"":https://github.com/jhollingworth/bootstrap-wysihtml5/downloads.

h2. Files to reference










h2. Usage




	$('#some-textarea').wysihtml5();



You can get the html generated by getting the value of the text area, e.g. 


$('#some-textarea').val();


h1. Advanced

h2. Options

An options object can be passed in to .wysihtml5() to configure the editor:


$('#some-textarea').wysihtml5({someOption: 23, ...})


h3. Buttons

To override which buttons to show, set the appropriate flags:


$('#some-textarea').wysihtml5({
	""font-styles"": true, //Font styling, e.g. h1, h2, etc. Default true
	""emphasis"": true, //Italics, bold, etc. Default true
	""lists"": true, //(Un)ordered lists, e.g. Bullets, Numbers. Default true
	""html"": false, //Button which allows you to edit the generated HTML. Default false
	""link"": true, //Button to insert a link. Default true
	""image"": true, //Button to insert an image. Default true,
	""color"": false //Button to change color of font  
});


h3. Custom Templates for Toolbar Buttons

To define custom templates for buttons, you can submit a customTemplates hash with the new definitions.  Each entry should be a function which expects 'locale' and optional 'options' to manage the translations.

For example, the default template used for the editHtml mode button looks like this (with size fetched from the optional 'options')



  
    ""
  



You can change it to not use the pencil icon (for example) by defining the custom template like this:


var myCustomTemplates = {
  html : function(locale) {
    return """" +
           """" +
           ""HTML"" +
           """" +
           """";
  }
}

// pass in your custom templates on init
$('#some-textarea').wysihtml5({
   customTemplates: myCustomTemplates
});



This will override only the toolbar template for html, and all others will use the default.


h3. Stylesheets

It is possible to supply a number of stylesheets for inclusion in the editor ``:


$('#some-textarea').wysihtml5({
	""stylesheets"": [""/path/to/editor.css""]
});


h3. Events

Wysihtml5 exposes a ""number of events"":https://github.com/xing/wysihtml5/wiki/Events. You can hook into these events when initialising the editor:


$('#some-textarea').wysihtml5({
	""events"": {
		""load"": function() { 
			console.log(""Loaded!"");
		},
		""blur"": function() { 
			console.log(""Blured"");
		}
	}
});


h3. Shallow copy by default, deep on request

Options you pass in will be added to the defaults via a shallow copy.  (see ""jQuery.extend()"":http://api.jquery.com/jQuery.extend/ for details). You can use a deep copy instead (which is probably what you want if you're adding tags or classes to parserRules) via 'deepExtend', as in the parserRules example below.

h3. Parser Rules

If you find the editor is stripping out tags or attributes you need, then you'll want to extend (or replace) parserRules.  This example extends the defaults to allow the  and  tags, and the class ""middle"":


$('#some-textarea').wysihtml5('deepExtend', {
  parserRules: {
    classes: {
      ""middle"": 1
    },
    tags: {
      strong: {},
      em: {}
    }
  }
});


There's quite a bit that can be done with parserRules; see ""wysihtml5's advanced parser ruleset"":https://github.com/xing/wysihtml5/blob/master/parser_rules/advanced.js for details.  bootstrap-wysihtml5's default parserRules can be found ""in the source"":https://github.com/jhollingworth/bootstrap-wysihtml5/blob/master/src/bootstrap-wysihtml5.js (just search for 'parserRules' in the file).

h3. Defaults

You can change bootstrap-wysihtml5's defaults by altering:


$.fn.wysihtml5.defaultOptions


This object has the same structure as the options object you pass in to .wysihtml5().  You can revert to the original defaults by calling:


$(this).wysihtml5('resetDefaults') 
 

Operations on the defaults are not thread-safe; if you're going to change the defaults, you probably want to do it only once, after you load the bootstrap-wysihtml plugin and before you start instantiating your editors.

h2. The underlying wysihtml5 object

You can access the ""wysihtml5 editor object"":https://github.com/xing/wysihtml5 like this:


var wysihtml5Editor = $('#some-textarea').data(""wysihtml5"").editor;
wysihtml5Editor.composer.commands.exec(""bold"");



h2. I18n

You can use Bootstrap-wysihtml5 in other languages. There are some translations available in the src/locales directory. You can include your desired one after the plugin and pass its key to the editor. Example:




  $('#some-textarea').wysihtml5({locale: ""pt-BR""});



It is possible to use custom translations as well. Just add a new key to $.fn.wysihtml5.locale before calling the editor constructor.
",,2012-03-19T22:26:50Z,2020-04-14T20:13:56Z,73,52,4146,174,"('jhollingworth', 135), ('edslocomb', 15), ('bunnymatic', 11), ('robashton', 6), ('Daniel Garcia', 5), ('James Hollingworth', 4), ('volmer', 4), ('ajeliuc', 2), ('RodrigoPereyraDiaz', 2), ('hermansc', 2), ('hinrik', 2), ('thet', 2), ('Koroban', 2), ('Marco Cervellin', 2), ('martin-g', 2), ('Martynas Barzda', 2), ('marvindv', 2), ('camelmasa', 2), ('OpenShift guest', 2), ('nanego', 2), ('cocoaine', 2), ('A-F1V3', 1), ('alekseyev', 1), ('Amephist', 1), ('Aubrey Holland', 1), ('boh1996', 1), ('Brammm', 1), ('ir-carlos', 1), ('cblock', 1), ('Christoph Schiessl', 1), ('tiff', 1), ('Conrad Buck', 1), ('Dan Ring', 1), ('buzzedword', 1), ('inadarei', 1), ('James Hollingworth', 1), ('James Lamont', 1), ('Jan Paul', 1), ('jfd', 1), ('jrallison', 1), ('jspaper', 1), ('deepwell', 1), ('mininaim', 1), ('mozahran', 1), ('omninonsense', 1), ('olofsj', 1), ('palodelincak', 1), ('Paul-Emile MINY', 1), ('RaMin0', 1), ('Ricard Forniol', 1), ('rbarrigav', 1), ('weotch', 1), ('Rodrigo Z Arthuso', 1), ('Serkan Algur', 1), ('tarjei', 1), ('Tarjei Huse', 1), ('tim-vandecasteele', 1), ('yrashk', 1), ('zzack', 1), ('bednar', 1), ('cosmolen', 1), ('d42f', 1), ('elzos', 1), ('glundgren', 1), ('haganbt', 1), ('metisigor', 1), ('jdoud', 1), ('jpadvo', 1), ('Gr0mic', 1), ('roymax', 1), ('shaunfreeman', 1), ('vitalets', 1), ('volmer', 1)",52,37,
x893/SX1231,SX1231 Starter Kit B,,,2014-01-31T09:41:58Z,2014-05-07T16:54:23Z,1,1,10,5,"('x893', 8)",0,0,
CameraKit/blurkit-android,The missing Android blurring library. Fast blur-behind layout that parallels iOS.,"
    



    
        
    
    
        
    


## What Is BlurKit?
BlurKit is an extraordinarily easy to use and performant utility to render real time blur effects in Android.


    


## Perfomance

BlurKit is faster than other blurring libraries due to a number of bitmap retrieval and drawing optimizations. We've been logging benchmarks for the basic high-intensity tasks for a 300dp x 100dp BlurView:

| Task                      | BlurKit time       | Avg. time without BlurKit |
| --------------------------| -------------------| -----------------------   |
| Retrieve source bitmap    | 1-2 ms             | 8-25 ms                   |
| Blur and draw to BlurView | 1-2 ms             | 10-50ms                   |

This results in an average work/frame time of 2-4ms, which will be a seamless experience for most users and apps.

## Setup
Add __BlurKit__ to the dependencies block of the app level `build.gradle`:
```groovy
dependencies {
    implementation 'io.alterac.blurkit:blurkit:1.1.0'
}
```

## Usage
### BlurLayout
Add a `BlurLayout` to your XML layout just like any other view.

```xml
<io.alterac.blurkit.BlurLayout
    android:id=""@+id/blurLayout""
    android:layout_width=""150dp""
    android:layout_height=""150dp""/>
```
In the `Main_Activity.java` you need to override the `onStart()` and `onStop()` methods to include the `BlurLayout` functionality.
```java
BlurLayout blurLayout;

@Override
protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
    setContentView(R.layout.activity_main);
    blurLayout = findViewById(R.id.blurLayout);
}

@Override
protected void onStart() {
    super.onStart();
    blurLayout.startBlur();
}

@Override
protected void onStop() {
    blurLayout.pauseBlur();
    super.onStop();
}
```

The layout background will continuously blur the content behind it. If you know your background content will be somewhat static, you can set the layout `fps` to `0`. At any time you can re-blur the background content by calling `invalidate()` on the `BlurLayout`. 

```xml
<io.alterac.blurkit.BlurLayout
    android:id=""@+id/blurLayout""
    android:layout_width=""150dp""
    android:layout_height=""150dp""
    blurkit:blk_fps=""0"" />
```

Other attributes you can configure are the blur radius and the downscale factor. Getting these to work together well can take some experimentation. The downscale factor is a performance optimization; the bitmap for the background content will be downsized by this factor before being drawn and blurred.

```xml
<io.alterac.blurkit.BlurLayout
    android:id=""@+id/blurLayout""
    android:layout_width=""150dp""
    android:layout_height=""150dp""
    blurkit:blk_blurRadius=""12""
    blurkit:blk_downscaleFactor=""0.12""
    blurkit:blk_fps=""60"" />
```

### Creating BlurKit Outside Of A Layout
You can use the `BlurKit` class which has a few useful blurring utilities. Before using this class outside of a `BlurLayout`, you need to initialize `BlurKit`.

```java
public class MyApplication extends Application {
    @Override
    public void onCreate() {
        BlurKit.init(this);
    }
}
```

You can blur a `View`, or a `Bitmap` directly.

```java
// View
BlurKit.getInstance().blur(View src, int radius);

// Bitmap
BlurKit.getInstance().blur(Bitmap src, int radius);
```

You can also __fastBlur__ a `View`. This optimizes the view blurring process by allocating a downsized bitmap and using a `Matrix` with the bitmaps `Canvas` to prescale the drawing of the view to the bitmap.

```java
BlurKit.getInstance().fastBlur(View src, int radius, float downscaleFactor);
```



## Upcoming Features
- [ ] `SurfaceView` support
- [ ] Support for use outside of an `Activity` (dialogs, etc.)
- [ ] Enhance retrieval of background content to only include views drawn behind the `BlurLayout`.

## License
BlurKit is [MIT licensed](https://github.com/CameraKit/blurkit-android/blob/master/LICENSE).

---
 Blurkit is a sister project of [CameraKit](https://github.com/CameraKit/camerakit-android) and maintained by the CameraKit team.
","'android', 'android-library', 'blurkit-android', 'blurring-libraries', 'java'",2016-11-06T03:14:58Z,2021-04-03T23:18:57Z,8,6,3716,77,"('Dylan McIntyre', 37), ('emersoncloud', 34), ('austinkettner', 9), ('Ben Sandee', 2), ('Gregliest', 1), ('linroid', 1), ('omerfarukyilmaz', 1), ('vararg', 1)",4,4,
1000hz/bootstrap-validator,A user-friendly HTML5 form validation jQuery plugin for Bootstrap 3,"# Validator, for Bootstrap 3
The Validator plugin offers automatic form validation configurable via mostly HTML5 standard attributes.
It also provides an unobtrusive user experience, because nobody likes a naggy form.

## Features
- Configurable via data-api and standard HTML5 attributes
- Patient to inform user of errors and eager to let them know the errors have been resolved
- Submit is disabled until the form is valid and all required fields are complete
- Customizable error messages
- Custom validator functions
- Validation of an input field via AJAX

## Installation
* CDN on [CDNJS](https://cdnjs.com): https://cdnjs.com/libraries/1000hz-bootstrap-validator
* Clone the repo: `git clone https://github.com/1000hz/bootstrap-validator.git`.
* Install with [Bower](http://bower.io): `bower install bootstrap-validator`.
* Install with [npm](https://www.npmjs.com): `npm install bootstrap-validator`.

## Documentation

See the project docs at http://1000hz.github.io/bootstrap-validator

## Contributing
#### Found an issue?
Be sure to include a reproducible test case on JS Bin with your report. Here's a [template](http://jsbin.com/fopaposaci/1/edit?html,js,output) to get started.
#### Submitting a pull request?
Fork this repo and create a new branch for your patch.
Try to adhere to the code style of Bootstrap 3's JS as much as possible.
Be sure to add any relevant unit tests.
Make sure everything's still ok by running `grunt test`.
Lastly, don't pollute your patch branch with any unrelated changes.

## Donating
If you've found this project particularly useful and feel like giving a little back, you can donate what you want via PayPal or Square Cash.





## Author

**Cina Saffary**
- http://twitter.com/1000hz
- http://github.com/1000hz

Thanks to  [@mdo](https://github.com/mdo) and [@fat](https://github.com/fat) for [Bootstrap](http://getbootstrap.com). <3

## Copyright and license
Copyright 2016 Cina Saffary under the MIT license.
",,2013-11-16T23:01:54Z,2019-12-12T14:01:20Z,15,11,2379,114,"('1000hz', 115), ('Cina Saffary', 44), ('Cina Saffary', 16), ('marten-seemann', 7), ('mrDinckleman', 6), ('r0ro', 3), ('balcsida', 3), ('Cina S', 2), ('n3t', 2), ('Chris Hunter', 1), ('chrislawes', 1), ('ptica', 1), ('nelson6e65', 1), ('desfero', 1), ('PeterDaveHello', 1)",6,5,
valekhz/m4b-converter,Simple python script to convert m4b audio books to a group of mp3 files split by chapter.,"# m4b.py

This is a simple python script to convert and split m4b audio books into mp3 files.


## Requirements

* [Python](http://www.python.org/download/) (tested with v2.7)
* ffmpeg
* [mp4v2](http://code.google.com/p/mp4v2/downloads/detail?name=mp4v2-1.9.1.tar.bz2&can=2&q=) (v1.9.1)


## Installation

### Windows

1. Install python 2.7.
2. Download [ffmpeg](http://ffmpeg.arrozcru.org/autobuilds/) and place `ffmpeg.exe` in this directory or your `PATH`.
3. Download [libmp4v2.dll](https://github.com/valekhz/libmp4v2-dll/zipball/v0.1) or [compile](http://code.google.com/p/mp4v2/wiki/BuildSource) your
own dll, then place it in this directory.

### Ubuntu 10.10

1. Install packages: `sudo apt-get install python2.7 ffmpeg libavcodec-extra-52`
2. Download mp4v2 then [compile](http://code.google.com/p/mp4v2/wiki/BuildSource) and install.

## Usage

There are two ways to use this script:

1. Drag your `.m4b` file(s) onto `m4b.py`.
2. Using the command line which also offers more advanced options.


### Command Line Help

    usage: m4b.py [-h] [-o DIR] [--custom-name ""STR""] [--ffmpeg BIN]
                  [--encoder BIN] [--encode-opts ""STR""] [--ext EXT] [--pipe-wav]
                  [--skip-encoding] [--no-mp4v2] [--debug]
                  filename [filename ...]

    Split m4b audio book by chapters.

    positional arguments:
      filename              m4b file(s) to be converted

    optional arguments:
      -h, --help            show this help message and exit
      -o DIR, --output-dir DIR
                            directory to store encoded files
      --custom-name ""STR""   customize chapter filenames (see README)
      --ffmpeg BIN          path to ffmpeg binary
      --encoder BIN         path to encoder binary (default: ffmpeg)
      --encode-opts ""STR""   custom encoding string (see README)
      --ext EXT             extension of encoded files
      --pipe-wav            pipe wav to encoder
      --skip-encoding       do not encode audio (keep as .mp4)
      --no-mp4v2            use ffmpeg to retrieve chapters (not recommended)
      --debug               output debug messages and save to log file

#### Chapter filenames

You can customize the chapter filenames with `--custom-name ""STR""` where `STR` is a valid python [format string](http://docs.python.org/library/stdtypes.html#string-formatting-operations).

Default (""My Title.mp3""):

    --custom-name ""%(title)s""

Chapter number (""3 - My Title.mp3""):

    --custom-name ""%(num)d - %(title)s""

Chapter number with leading zero (""03 - My Title.mp3""):

    --custom-name ""%(num)02d - %(title)s""

#### Encoding

By default the audio will be encoded with the lame mp3 codec using [ffmpeg](http://www.ffmpeg.org/ffmpeg-doc.html). The bit rate and sampling freq will be the same as the source file.
If you wish to use other settings you can specify your own encoding options with `--encode-opts ""STR""`. `STR` will be passed to the encoder (`--encoder` or skip to use ffmpeg). Variables available:

    %(outfile)s - output filename (required)
    %(infile)s - .m4b file
    %(bit_rate)d - bit rate of .m4b file
    %(sample_rate)d - sampling rate of .m4b file


### Examples

Convert multiple audio books (you can also drag multiple m4b files onto `m4b.py`):

    python m4b.py myfile.m4b otherfile.m4b

Include chapter number in the generated filenames: (example: ""Chapter 10 - Some Title.mp3"")

    python m4b.py --custom-name ""Chapter %(num)d - %(title)s"" myfile.m4b

If you rather want .mp4 files you can skip encoding to speed up the conversion process:

    python m4b.py --skip-encoding myfile.m4b

Force sampling freq to 22050 Hz and bit rate to 128 kbit/s:

    python m4b.py --encode-opts ""-y -i %(infile)s -acodec libmp3lame -ar 22050 -ab 128k %(outfile)s"" myfile.m4b

Encode with lame.exe:

    python m4b.py --encoder lame.exe --pipe-wav --encode-opts ""-V 3 -h - %(outfile)s"" myfile.m4b
",,2010-12-03T23:40:54Z,2020-10-01T07:50:48Z,1,1,85,8,"('valekhz', 27)",0,0,
cjl3080434008/book,学习笔记,"#学习笔记

如果您发现笔记中的错漏，请及时与我联系，以便修正。谢谢！

",,2012-12-24T00:56:49Z,2012-12-23T11:50:25Z,1,1,27,6,"('qyuhen', 4)",0,0,
jasonkarns/css-reset,Customization of Eric Meyer's CSS Reset,"CSS Reset
=========

Essentially [Eric Meyer's reset](http://meyerweb.com/eric/tools/css/reset/), I've made a few tweaks that make his reset more palatable to my tastes. I've also [blogged](http://jasonkarns.com/blog/2010/02/15/css-reset/) about this project.

Changes
-------

### :focus { outline:none; }
The only rule of Meyer's reset that I consider actually harmful to the end user experience, the original rule disabled the browser default dotted outline on focused items.
Removing the default outline makes keyboard navigation almost impossible. Meyer even notes in the comments that developers should remember to override the rule with custom styles for focused items. But who actually does that?
Patrick Lauke found a method for alleviating the most annoying parts of the focus outline: [http://24ways.org/2009/dont-lose-your-focus](http://24ways.org/2009/dont-lose-your-focus)

### font-size: 100%;
While this rule doesn't affect the end user all that much, the rule's selector matches almost every element. Additionally, the font-size property is inherited. This means the property is both inherited *and* directly applied to nearly every element in your HTML.
For ardent Firebug users, this renders the style pane almost 99% noise as the same rule is inherited and then overridden at every level of the DOM tree. No thanks.

Questionable
------------

I haven't yet removed these items from the reset but I seriously question their utility. Among the following rules, think back to how often they would have actually been helpful on your projects. Not that often?

1. `border:0;` &ndash; on anything besides `img`, `abbr`, `acronym`?
2. `outline:0;` &ndash; what has outline by default?
3. `vertical-align: baseline;` &ndash; isn't that already the default?
4. `background: transparent;` &ndash; isn't that already the default?
5. `blockquote, q {quotes:none;}` &ndash; `blockquote` doesn't get quotation marks by default, and who actually uses `q`? If you ask me, quotation marks are just like punctuation&mdash;they should be part of the content, not the markup.
6. `ins` and `del` &ndash; I think the default style is fine. If not, it would get overridden by my main design anyway.
",,2010-02-08T16:08:50Z,2017-12-17T19:28:19Z,3,2,75,12,"('jasonkarns', 9), ('laryro', 1), ('unknown', 1)",2,1,
rocketeers/docs,Rocketeer's documentation,,,2014-08-16T16:49:59Z,2017-06-21T08:49:32Z,27,25,7,6,"('Anahkiasen', 135), ('stefandroog', 5), ('Lance Pioch', 4), ('0x2206', 3), ('driesvints', 3), ('Chronophobe', 3), ('inverse', 2), ('alexw23', 2), ('chadwithuhc', 2), ('andreaskweber', 1), ('Bilge', 1), ('katzefudder', 1), ('hassankhan', 1), ('JanisE', 1), ('jveldboom', 1), ('LewisMcMahon', 1), ('nilansanjaya', 1), ('opb', 1), ('ryanhalliday', 1), ('Schlaefer', 1), ('swalkinshaw', 1), ('stedaniels', 1), ('tbreuss', 1), ('Tomáš Votruba', 1), ('austenc', 1), ('ervinb', 1), ('helmut', 1)",18,17,
hitherejoe/Android-Boilerplate,"Android Boilerplate project using RxJava, Dagger 2, Espresso, Mockito + more!","Android Boilerplate [![Build Status](https://travis-ci.org/hitherejoe/Android-Boilerplate.svg?branch=master)](https://travis-ci.org/hitherejoe/Android-Boilerplate)
===================


    



A simple boilerplate application which demonstrates the downloading, persisting and syncing of data - displayed with a common layout used amongst applications.

The project is setup using:

- Functional tests with [Espresso](http://google.github.io/android-testing-support-library/docs/espresso)
- Unit tests with [Mockito](http://mockito.org/) and [Robolectric](http://robolectric.org/) 
- [RxJava](https://github.com/ReactiveX/RxJava) and [RxAndroid](https://github.com/ReactiveX/RxAndroid) 
- [Retrofit](http://square.github.io/retrofit/) and [OkHttp](https://github.com/square/okhttp)
- [Dagger 2](http://google.github.io/dagger/)
- [Butterknife](https://github.com/JakeWharton/butterknife)
- [Timber] (https://github.com/JakeWharton/timber)
- [Mockito](http://mockito.org/)
- [Glide](https://github.com/bumptech/glide)


    



Requirements
------------

 - [Android SDK](http://developer.android.com/sdk/index.html).
 - Android [6.0 (API 23) ](http://developer.android.com/tools/revisions/platforms.html#6.0).
 - Android SDK Tools
 - Android SDK Build tools 23.0.2
 - Android Support Repository
 - Android Support library

Building
--------

To build, install and run a debug version, run this from the root of the project:

    ./gradlew installRunDebug
    
Testing
--------

For Android Studio to use syntax highlighting for Automated tests and Unit tests you **must** switch the Build Variant to the desired mode.

To run **pmd**, **checkstyle** and **findbug** checks on your machine:

    ./gradlew check

To run **unit** tests on your machine:

    ./gradlew testDebugUnitTest
    
To run **automated** tests on connected devices:

    ./gradlew connectedDebugAndroidTest

Thanks
--------

Thanks to the following for contributions!

[ivacf] (https://github.com/ivacf)  
[Jawnnypoo] (https://github.com/Jawnnypoo)

Attributions
------------

Thanks to the following for use of icons off of Noun Project:

[Iconoci](https://thenounproject.com/iconoci)
",,2015-04-03T10:04:38Z,2020-10-24T03:51:07Z,4,4,1873,86,"('hitherejoe', 51), ('Jawnnypoo', 4), ('joebowbeer', 2), ('utwyko', 1)",1,1,
AXErunners/axe_hash,Python module for AXE's X11 hashing,"AXE Hash
===========================

Python module for AXE's X11 hashing.


Install
-------

Python 2.7+ or 3.5+ is required as well as a gcc.

    $ sudo python setup.py install


Test
-------

After installation, test hash.

    $ python test.py

Credits
-------

* Module written by @chaeplin https://github.com/chaeplin/xcoin-hash
* Module maintained by @eduffield https://github.com/darkcoinproject/xcoin-hash
* Module maintained by @flare https://github.com/nightlydarkcoin/xcoin-hash
* Module maintained by @vertoe https://github.com/vertoe/darkcoin_hash
","'hashing', 'x11'",2018-02-09T20:22:51Z,2018-07-30T20:14:34Z,1,1,7,4,"('charlesrocket', 60)",0,0,
kmkingsbury/raspberrypi-weather-station,Weather Sensor/program for the Raspberry Pi B+ ,"# raspberry-pi-weatherstation

Rebuild of a Pi powered weather station. The origial I did an instructable for (https://www.instructables.com/id/Complete-DIY-Raspberry-Pi-Weather-Station-with-Sof/) this one uses all off the self parts.

And wrote up a few thoughts about the project on my blog as well: 
https://spaceman-labs.com/2018/07/raspberry-pi-weather-station-mk2/

Uses a few standard sensors to track weather data:
- Temperature - comes from 2 sensors the BMP and the DHT.
- Soil temperature
- Soil humidity
- Light - via a photoresistor. The Higher the number the darker out.
- Pressure
- Humidity
- 2 Air sensors - One does more dust and smoke, air quality. The other looks for gases like propane and butane.
- Wind speed
- Wind dir
- Rain Gauge
- Lightning detector - Currently having issues so commented out.

The analog sensors run through the MCP3008 chip to get converted to a digital reading.

The wiring and circuit boards are in the schematics directory and is a Fritzing file. There are also PDFs I used to print the PCB to thermal transfer paper and burn the Copper circuit boards. There are two boards: 1 in the main station for the MCP3008 A/D converter and photo resistor, and the 2nd is a ""remote"" unit that goes in the Amrite housing and does the air sensing, pressure, temp, and humidity, via 2 air sensors, the DHT, and the BMP.

Data is logged to a postgres table as well as a CSV file and the CSV file is rotated out nightly. The log file also contains some of the data and other debug statements.

Some frontend code is supplied to display/graph the data using Google Charts. This uses PHP to write javascript code, so it's far from ideal.
Also needs more reusable code, since a bug or change needs to go across all the pages and I've currently not been fixing that. Timeframes are roughly 24 hrs and 7-days (for the files ending in 2). Currently very buggy and titles/labels aren't very accurate (months in javascript start at 0 not 1). Will probably rewrite the frontend to something like NodeJS that will integrate easier with Google Charts (or another plotting package)

I used Gitlab and gitlab pipelines to do some automated CI and testing so the gitlab-ci is provided for some of that.


# Contents
Name | Description
-----|------------
`bom.md` | Bill of Materials - List of parts, counts, approximate prices and where to find.
`schematics/`| Fritzing Schematics for electronics
`station-code/`| Python3 Code.
`station-code/collectweather.py`| Main code for collecting weather data.
`README.md`|This file
`LICENSE`|Apache 2.0 License
`frontend/`| Docker container from running PHP scripts to display the data.
`structure.sql` | Postgresql Data schema.



# Pi Setup
- apt-get update
- apt-get upgrade
- apt-get dist-upgrade
- apt-get autoremove
- Turn on Interfacing Options:
    - SPI
    - I2C
    - 1-wire


# Python Packages
- sudo apt-get install libyaml-dev
- pip3 install pyyaml
- pip3 install structlog
- pip3 install numpy
- sudo apt-get install build-essential python-dev python3-dev
- sudo pip install psycopg2

# Postgresql Setup
- sudo apt-get install postgresql-9.6
- apt install postgresql libpq-dev postgresql-client postgresql-client-common
- sudo update-rc.d postgresql enable
- sudo su postgres
- createuser weatherstation -P --interactive
- createdb weatherstation
- create table using structure.sql
- GRANT ALL PRIVILEGES ON TABLE weatherdata TO weatherstation;
- https://www.howtoforge.com/tutorial/postgresql-replication-on-ubuntu-15-04/

# 3rd Party Sensor Modules:
Add SSH key:
```
eval $(ssh-agent -s)
ssh-add ~/.ssh/other_id_rsa
```
Checkout Modules, run sudo python setup.py install
```
git clone https://github.com/PrzemoF/bmp183.git
git clone git://gist.github.com/3151375.git
git clone https://github.com/adafruit/Adafruit_Python_DHT.git
git clone https://github.com/adafruit/Adafruit_Python_GPIO.git
git clone https://github.com/adafruit/Adafruit_Python_MCP3008.git
```

Docker testing image:
```
docker build -t gitlab:4567/lab-projects/raspberry-pi-weatherstation .
```

# Components
- Leverages gitlab and pipelines to do tasks
- Started with Database is Postgresql and the pgadmin interface to get GUI
representation.



# License and Authors

Author:: Kevin Kingsbury ([@kmkingsbury](https://twitter.com/kmkingsbury))

Apache 2.0
",,2015-03-28T01:53:44Z,2018-07-02T18:04:06Z,2,1,200,42,"('kmkingsbury', 84), ('Kevin Kingsbury', 5)",0,0,
mmistakes/jekyll-theme-skinny-bones,A Jekyll starter with a variety of flexible layouts and components.,"# Skinny Bones Jekyll Starter

Just a little something I'm using to jump start a site refresh. I like to think of it as a starter for building your own Jekyll site. I purposely keep the styling minimal and bare to make it easier to add your own flare and markup.

![screenshot of Skinny Bones](http://mmistakes.github.io/jekyll-theme-skinny-bones/images/skinny-bones-theme-feature.jpg)

---

## Notable Features

* Jekyll 3.x and GitHub Pages compatible.
* Stylesheet built using Sass.
* Data files for easier customization of the site navigation/footer and for supporting multiple authors.
* Optional Disqus comments, table of contents, social sharing links, and Google AdSense ads.
* And more.

## More Jekyll Themes

Check out my more popular Jekyll themes, available as Ruby gems and 100% GitHub Pages compatible.

* [Minimal Mistakes](https://github.com/mmistakes/minimal-mistakes)
* [So Simple](https://github.com/mmistakes/so-simple-theme)
* [Basically Basic](https://github.com/mmistakes/jekyll-theme-basically-basic)
","'jekyll', 'jekyll-theme'",2014-06-02T13:25:37Z,2019-08-27T20:12:19Z,9,5,801,35,"('mmistakes', 106), ('yonojoy', 8), ('powersj', 1), ('Marc-Antoine Thevenet', 1), ('Satyam Satyarthi', 1), ('Varmint', 1), ('wpietri', 1), ('katafrakt', 1), ('unknown', 1)",7,3,
blup/bootstrap.stylus,Twitter's bootstrap ported to stylus,"
# bootstrap.stylus (v2.0.1)

  Twitter's [Bootstrap](https://github.com/twitter/bootstrap) for [Stylus](https://github.com/learnboost/stylus).


## Installation

 Bootstrap uses [nib](https://github.com/visionmedia/nib) for transparent CSS3 support and helpful mixins, but you simply need to `.use()` `bootstrap`, which in turn exposes `@import ""bootstrap""`.

```js
var stylus = require('stylus')
  , bootstrap = require('bootstrap')
  , fs = require('fs');

var styl = fs.readFileSync(__dirname + '/example.styl', 'utf8');

var css = stylus(styl)
  .use(bootstrap())
  .set('filename', 'example.styl')
  .set('compress', true)
  .render(function(err, css){
    if (err) throw err;
    console.log(css);
  });
```

Then you can __@import__ all or portions of the library:

```css
// everything
@import 'bootstrap'

// only config and forms
@import 'bootstrap/config'
@import 'bootstrap/forms'
```

## Configuration

You can variables before the configuration is __@import__ed:

```css
radius = 5px
@import 'bootstrap'
```

Copyright and License
---------------------

Copyright 2011 Twitter, Inc.

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this work except in compliance with the License.
You may obtain a copy of the License in the LICENSE file, or at:

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
",,2011-09-03T19:22:03Z,2012-03-08T12:22:04Z,4,1,84,4,"('tj', 27), ('Javier Vizoso', 1), ('Viz', 1), ('blup', 1)",3,0,
saysky/ForestBlog,一个简单漂亮的SSM(Spring+SpringMVC+Mybatis)博客系统,"最新消息，博主已开通B站账号：[Java刘哥](https://space.bilibili.com/160340478)
## 博主开发的其他博客或论坛项目全部在这里
**[全部原创项目](https://liuyanzhao.com/shop.html)**   
**[https://liuyanzhao.com/shop.html?k=博客](https://liuyanzhao.com/shop.html?k=博客)**   
**[https://liuyanzhao.com/shop.html?k=论坛](https://liuyanzhao.com/shop.html?k=论坛)** 	
- ------------------------------------------------------------
# 关于项目
该博客是基于SSM实现的个人博客系统，适合初学SSM和个人博客制作的同学学习。
博主已写了一篇该项目的毕业论文和录制了2个小时的代码讲解可以供大家学习，需要的可以联系博主，微信847064370。

主要涉及技术包括的包括 Maven、Spring、SpringMVC、MyBatis、JSP、MySQL等。 
详细介绍：[https://liuyanzhao.com/6347.html](https://liuyanzhao.com/6347.html) 
预览地址：[http://forestblog.liuyanzhao.com](http://forestblog.liuyanzhao.com) 

前台效果图  
![image](uploads/home.png)

后台效果图  
![image](uploads/admin.png)

后台地址：/admin 或者 /login 


## 使用注意
#### 1.开发工具的选择
请使用 IntelliJ IDEA, 尽量不要用 Eclipse/MyEclipse，使用前者项目起不来我可以帮忙解决，后者直接忽视(理论上可以起)

#### 2.确保你安装了 Maven
从官网下载 Maven，并配置阿里云镜像，IDEA 或 Eclipse 里需要设置 Maven 的 settings.xml 。

#### 3.请安装 Lombok 插件
代码中多次使用 `@Data` 注解，请确保你的 IDE 安装了 `Lombok` 插件，否则找不到 getter/setter 方法。如果你的 lombok 无效，可能是 pom.xml 里的 lombok 版本和你安装的lombok 版本相差较大。
无论是 Eclipse 还是 IDEA 都需要安装 lombok。

#### 4.项目首页没有文件夹名称
确保 tomcat 配置中 `application context` 是 /，而不是 /ForestBlog。这是导致你们首页css样式全无的原因，因为引用css路径都是 /xxx/xxx.css
![image](https://github.com/saysky/ForestBlog/blob/master/uploads/tomcat.png)


## 使用步骤
任何问题都可以联系我 
简单的我可以直接口头回复你，复杂的可以有偿远程帮你。
Q Q：847064370 
微信：847064370 
在线留言：[https://liuyanzhao.com/message.html](https://liuyanzhao.com/message.html)

#### 1、克隆项目  
克隆或者下载项目到本地，解压，主要分为三个部分：ForestBlog、uploads 和 forest_blog.sql 
ForestBlog: 完整项目源码, 可以使用 IDEA 导入或者打开，记得要导入里面那个 ForestBlog项目，即 pom.xml所在的父目录。  
uploads: 上传图片的目录，与源码分离开来，可以放到物理磁盘某一目录，如D盘某目录，后面会讲 
forest_blog.sql: 数据库文件，请先创建数据库，然后以运行sql文件方式导入 

#### 2.使用 IDEA 导入Maven项目
确保你安装了 Maven，导入项目时，选择已存在的项目，类型是 Maven 项目。
等待Maven下载完依赖，或者手动点击刷新，如果无法下载请检查 Maven 配置和切换网络，多次尝试。 
导入完成后，如果出现Java类里红色报错，多半是 Lombok 插件没有安装。


#### 3、 导入数据库   
新建数据库 `forest_blog`，导入数据库（即forest_blog.sql）。注意，数据库的编码和排序规则是utf-8和utf-8_general_ci  


#### 4、修改项目中的数据库连接信息   
修改 `db.properties` 文件，该文件很容易找到，在 src/main/resources 中
里面有 MySQL, 请确保已安装和启动 MySQL 
注意修改数据库地址、表名、用户名和密码。
否则项目无法启动

 
#### 5、配置 tomcat 和 uploads 目录   
该项目是 SSM 项目，没有启动类，需要通过 tomcat 来运行。无论是 Eclipse 还是 IDEA 都很容易。
这里主要说一下上传目录映射问题：
该项目中，文件上传是传到本地，且和项目文件夹不在一起，就是说是源码和上传目录是分离的。 
比如我们把 uploads 目录放到 E盘根目录(建议直接把我的那个uploads文件夹拷贝到D盘根目录)，比如有一张图片路径是 `D:/uploads/2017/10/avatar.jpg`, 我们想在项目中以 `http://loclahost:8080/uploads/2017/10/avatar.jpg ` 方式访问，需要以下两步：

1、 修改 UploadFileController.java 中上传路径，需要修改 rootPath 为你指定的 uploads 目录，如 `String rootPath =""D:/uploads/"";` 
如果不修改，会出现无法上传失败；

2、为 tomcat 设置 uploads 映射。
-  IDEA 操作如下：
在 tomcat 配置中 Deployment 里面添加，如图
![image](uploads/tomcat.png)
![image](uploads/tomcat2.png)

- Eclispe 操作如下：
在 Server/server.xml 的  前面添加
```


```
- Linux 服务器环境部署

在 tomcat/conf/server.xml 的 Host 标签内添加如下代码 
```


```

如果不修改，会出现uploads的图片无法加载，无法显示上传目录的图片

 
## 下载地址：
Github地址：https://github.com/saysky/ForestBlog
（如果可以帮忙点一次Star和Fork）
 
## 更新记录
- 2021年02月25日
- 第三次大更，修复部分Bug，新增用户注册、用户管理等功能

- 2018年11月26日
- 第二次大更，重新规范了代码，完善了注释

- 2017年10月10日
- 首次完整提交

## 广告
插条广告：博主长期接毕设定制，软件定制，Java问题解决 
具体查看[有偿服务](https://liuyanzhao.com/notice/my-service.html)  
博主付费商品：[https://liuyanzhao.com/shop.html](https://liuyanzhao.com/shop.html)


","'blog', 'java', 'ssm', 'ssm-maven'",2017-10-08T15:27:47Z,2024-06-17T12:20:40Z,1,1,4410,70,"('saysky', 99)",0,0,
sudz123/happy_hacking,Let's have a productive Hacktoberfest,"# :tada::tada::smile: Hacking :smile::tada::tada:

Let's have a productive Hacktoberfest! Submit 5 PRs to this account after registering yourself [here](https://hacktoberfest.digitalocean.com/).

# :construction_worker: About

My name is Sudarshan Kamath and I am hosting this repository for the month of October 2018. The idea is to create a website over the month, about Open-Source Programming. This site is open to all forms of suggestions. Happy contributing!

The project follows the following [Code of Conduct](CODE_OF_CONDUCT.md).

If you want to see what the site looks like, you can do so through GitHub. All you need to do is click the HTML file you want to view, click the button Raw, and then change the URL. You need to remove "".githubusercontent"" and replace it with just ""git"" so the link looks like this - https://rawgit.com

If you want to continue using the rawgit trick on another project, you might need to switch to just using githack. As with using gitraw, all you need to do is change ""githubusercontent"" for ""githack"" instead.  The link now looks like this - https://raw.githack.com/ 

Here is what our homepage looks like!
https://rawgit.com/sudz123/Happy_Hacking/master/src/home.html
https://raw.githack.com/sudz123/Happy_Hacking/master/src/home.html
(both show the same thing, one using rawgit and the other using githack)

# :bookmark: Looking for more advanced projects? :bookmark:

If you are looking for something a little more advanced, checkout the Optimizer project at the link below.

https://github.com/sudz123/Optimizer

# :bookmark: IMPORTANT :bookmark:

Since this repository is gaining some momentum, We expect good grammar in all PRs. We also expect proper comments in the code. The code could be trivial with a small change, that is totally fine.

**When making changes in the existing files, make sure you do not add more than one feature or change more than one component in a PR!**

Also, these file descriptions should be helpful:

- [_src_](./src): contains all the code.
- _.html_ files like these should not have CSS or JavaScript code inside them, ideally. If they do then remove it and add to respective folders.
- [_styles_](./src/style): Please put all the CSS files in this folder with proper nomenclature.
- [_Images_](./img): Please put all images within sub-folders of this folder, according to the page they are on.
- **THE MORE STRUCTURED YOUR CODE IS, THE EASIER IT IS FOR US TO REVIEW, THE HIGHER CHANCES THAT IT WILL BE MERGED**.

## :building_construction: How it works

:white_check_mark:
Check for open issues [here](https://github.com/search?q=label:hacktoberfest+state:open+type:issue)

:white_check_mark:
Fork the repo containing the issue you want to work on.

:white_check_mark:
Make some edits on your own copy that fixes the issues.

:white_check_mark:
Create a pull request that will be merged into the main repo.
(**Remember to indicate what issue you're fixing**)

:rotating_light:
**Don't forget to add your name to Contributors.md(AN EASY PR)**:rotating_light:

:white_check_mark:\_You can check your progress here after every merged PR* : https://hacktoberfest.digitalocean.com/stats

:white_check_mark: Your code will be reviewed and approved.

:white_check_mark: If you have questions on any issue, kindly use the comment.

## :pencil2::pencil2:Important Links:pencil2::pencil2:

Here are some important links for learning the basics of web & further understanding of code. We hope this comforts you. Stay motivated!

1. [Learn HTML](https://www.w3schools.com/html/)
2. [Learn CSS](https://www.w3schools.com/Css/)
3. [Learn Javascript](https://www.w3schools.com/js/)
4. [Learn PHP](https://www.w3schools.com/php/)
5. [Learn Bootstrap](https://www.w3schools.com/bootstrap/)
6. [Learn how to make pull request on github](https://help.github.com/articles/creating-a-pull-request/)
7. [Learn how to fork a repository on github](https://help.github.com/articles/fork-a-repo/)

A few other tutorial links:

1. [Build a website](https://www.w3schools.com/howto/howto_website.asp)
2. [Hosting the website](https://gist.github.com/TylerFisher/6127328)
3. [Point a Domain Name to Your Website](https://www.thesitewizard.com/domain/point-domain-name-website.shtml)

## Additional Resources

- [Running HTML pages](./src/README-HTML.md)
- [Styling with CSS](./src/style/README-CSS.md)
- [Functionality with JavaScript](./src/scripts/README-JS.md)
- [Functionality with php](./src/php/README.md)
- [CSS Tips and tricks](https://css-tricks.com)
- [Learn HTML and CSS](https://www.oreilly.com)
- [Mozilla Developer Docs](https://developer.mozilla.org/en-US/docs/Learn)
- [Design Patterns](https://github.com/kamranahmedse/design-patterns-for-humans)
- [Freecodecamp](https://www.freecodecamp.org/)

## HALL OF FAME

We would like to heartily thank **[Sarah D. Perea](https://github.com/sarahperea)** for her contributions to this repository! She has helped in creating an amazing homepage and her contributions have helped us grow and spread the art of Open Sourcing. Happy Hacking ;):v:
",,2018-10-03T07:56:45Z,2022-10-08T11:14:52Z,310,271,47,4,"('sudz123', 485), ('diptanshu-sopho', 101), ('sarahperea', 41), ('Orrison', 15), ('lancelot1337', 14), ('DillonSimeone', 13), ('vjs3', 11), ('vinnyA3', 10), ('nibiru2O12', 9), ('abisummers', 7), ('bhefty', 6), ('FlamesRunner', 6), ('DJilanov', 5), ('akki-akshat', 5), ('parthpandyappp', 5), ('sarthak-trivedi', 5), ('shariffnour', 4), ('mathagician', 4), ('pirate', 4), ('jason carney', 4), ('alangordon', 4), ('rohit6205', 4), ('grusha02', 4), ('enjeck', 4), ('chamibc', 4), ('Alberto Bonvicin', 4), ('ishanisri', 3), ('yurichandra', 3), ('siarhei-bahdanovich', 3), ('jonathanzhang53', 3), ('jeojhx', 3), ('gormleymark', 3), ('TimoPurzner', 3), ('Yusadolat', 3), ('yashgandhe666', 3), ('ashishpatelcs', 3), ('rpop67', 3), ('Adam Kuhn', 3), ('dulcetti', 3), ('Ivilili', 3), ('Vashtamyty', 3), ('Sriram S. Nair', 3), ('shnibl', 3), ('rebeccaeilering', 3), ('Marvin Auler', 3), ('jacobc1204', 3), ('attaradev', 2), ('Muskan-goyal6', 2), ('njncalub', 2), ('notnavindu', 2), ('ORVISOFT-SULEMA\\Salman', 2), ('pasanjayawickrama', 2), ('rahuls360', 2), ('szabolcsnagy', 2), ('Tushar Nitave', 2), ('Udit1999', 2), ('vonralls', 2), ('agampreetsingh', 2), ('drgrimshaw', 2), ('engrinzamam', 2), ('eosti', 2), ('guido97', 2), ('haloriyan', 2), ('mufti1', 2), ('pixidust724', 2), ('ruwanmadhusanka', 2), ('sekab', 2), ('vidban', 2), ('bamsarts', 2), ('GomuGilad6', 2), ('IRanaFaisal', 2), ('amrs-tech', 2), ('Alokpro1', 2), ('ALTIMETRIK\\clizano', 2), ('Platyka', 2), ('Ananthu-Gopi', 2), ('kaffikaffi', 2), ('jChris85', 2), ('conradfitzgerald', 2), ('DESKTOP-A2GIOQ9\\lenni', 2), ('diogoalexsmachado', 2), ('DuskyPrawn', 2), ('FedericoCenturioni', 2), ('FEglese', 2), ('MarkKrutik', 2), ('Mattia', 2), ('Manjulika77', 2), ('ManiacalBilby', 2), ('lmeikle', 2), ('LordofPotatoes', 2), ('Irvandoval', 2), ('irshadjsr21', 2), ('IMughees', 2), ('heggrik', 2), ('harshranpariya', 2), ('AlithAnar', 2), ('gagan-bhullar-tech', 2), ('Xander Grzywinski', 1), ('vyshnavy', 1), ('vamisola', 1), ('venushaamarathunga', 1), ('vpul', 1), ('Utkarsh1c', 1), ('UmmeAmmaraa', 1), ('Adioosin', 1), ('confixyu', 1), ('tombraul', 1), ('TohaAssegaf', 1), ('Timtech4u', 1), ('DanielXSantos', 1), ('Yohanan Baruchel', 1), ('ravitej', 1), ('aditya', 1), ('adnanpak', 1), ('amirfazamin', 1), ('aniketdvd', 1), ('ankitsuman4', 1), ('annasamer3', 1), ('axux', 1), ('ayushg162', 1), ('beattie282', 1), ('bhojaksmith', 1), ('bribarry', 1), ('pankajgoyal1', 1), ('graypj826', 1), ('b0sk', 1), ('paulokenza', 1), ('Philip Plagge', 1), ('Piyu0423', 1), ('kaushikpraveen', 1), ('RafaGrey', 1), ('Rajani169', 1), ('rickysukma', 1), ('rodolfoip', 1), ('ronishz', 1), ('rjjuina', 1), ('Rpsheffield', 1), ('bluejay2011', 1), ('Sagar2366', 1), ('Sazazezer', 1), ('sebastiaanspeck', 1), ('SheiUn', 1), ('shreysahgal', 1), ('Shubhajit01', 1), ('iamsid2', 1), ('Stephanie Velazquez', 1), ('sudhanshu4441', 1), ('surayyayousaf', 1), ('ted850914', 1), ('twhite96', 1), ('mmursaleen', 1), ('Mohit17067', 1), ('PogrammerEdison', 1), ('muhammadawaishaider', 1), ('n0anilsson', 1), ('nabeelravians', 1), ('naulluan', 1), ('navindu amarakoon', 1), ('nir099', 1), ('phyushin', 1), ('PixoDev', 1), ('plaistos', 1), ('1995Pradeep', 1), ('prateek552', 1), ('prekshajagetiya123', 1), ('quangpro1610', 1), ('rahma-ba', 1), ('rakeshub4', 1), ('rohangaonk', 1), ('sarthak1995', 1), ('shanmuhammad786', 1), ('sushmaunnibhavi', 1), ('tabeeliqbal', 1), ('Muhammad-Rehan1', 1), ('vatsalvv', 1), ('yarkalyba', 1), ('felicia-goh', 1), ('bradleybudach', 1), ('camilo andres ibarra yepes', 1), ('ChameeraD', 1), ('czakarian', 1), ('darioulin', 1), ('darkdog555', 1), ('deshanjali', 1), ('diptag', 1), ('elisa_lau', 1), ('faisalmalik932', 1), ('filipiakp', 1), ('gigishan', 1), ('h-a-r-s-h-a', 1), ('HemangiS', 1), ('ifahs1', 1), ('inasinghal17', 1), ('jakrzus', 1), ('jamescalixto', 1), ('jameslongs37', 1), ('joshuaGlass808', 1), ('kasunSameera', 1), ('klaudiakp', 1), ('maliknaveed6200', 1), ('masihtamsoy', 1), ('melvinabraham', 1), ('michaelmatherson', 1), ('michaelp12345', 1), ('dsdeeptisharma', 1), ('dskiba', 1), ('divayg', 1), ('flechnical', 1), ('Donishka', 1), ('drailanjohngss', 1), ('edumlauer', 1), ('edwinfrancis002', 1), ('FaiqaShafqat79', 1), ('farzanfa00', 1), ('farzanfa', 1), ('Felicia Goh', 1), ('frankles12', 1), ('geeknik', 1), ('gillesigot', 1), ('Giulio Carlassare', 1), ('TexasBullet26', 1), ('CNIAngel', 1), ('haiderkhaleel23', 1), ('Hamid Reside', 1), ('Haqverdi', 1), ('Harindu973', 1), ('hasykes', 1), ('CallmeHenry', 1), ('Hoch3007', 1), ('Matheus Rocha Vieira', 1), ('003random', 1), ('chamithopatha', 1), ('nitrocoder234', 1), ('Quarantinex', 1), ('adamfr33man', 1), ('DataSapient', 1), ('aa-deet-eeya', 1), ('Akshama', 1), ('Amanchouhan192', 1), ('amulyagaur', 1), ('anders2410', 1), ('andrewhong2001', 1), ('KashyapAnkur', 1), ('Antonio Djigo', 1), ('Apoorva Dhawan', 1), ('ArpitaGanatra', 1), ('sinAshish', 1), ('ashishyadav400', 1), ('Zenithcoder', 1), ('Ball-Man', 1), ('BennyCarlsson', 1), ('BinaryCrochet', 1), ('bolaram', 1), ('CHARITH1995', 1), ('cassmtnr', 1), ('colinschindler', 1), ('dMilluh', 1), ('mattrmurphy', 1), ('MaxWienold', 1), ('MikeCapps2006', 1), ('Vivega-MV', 1), ('ilham', 1), ('mon555', 1), ('HaaloMC', 1), ('mounika0210', 1), ('MudassarNazeer1', 1), ('designsbyali', 1), ('Babarbwn123', 1), ('mshoaib85', 1), ('itkidunya', 1), ('mvillan10', 1), ('gofornaman', 1), ('natchkebiailia', 1), ('eeearl', 1), ('navdeep300', 1), ('Nayan942', 1), ('neilchauhan2', 1), ('NeoAnoman', 1), ('nickhuangClimax', 1), ('NikhilShrivastava', 1), ('niklasmtj', 1), ('nuntjw', 1), ('Orasz', 1), ('howieandersen', 1), ('HectorHernandez19', 1), ('IIShadowRiderII', 1), ('jackhhao', 1), ('JaerenTredway', 1), ('jeremyruffell', 1), ('JessicaMP', 1), ('jhosellRod', 1), ('jibijohndavid', 1), ('bonez0607', 1), ('JohJohan', 1), ('johanreji', 1), ('jivison', 1), ('Jono20201', 1), ('Josh Glass', 1), ('athuljayaram', 1), ('Kami001', 1), ('Karan Reddy', 1), ('Kartikeya99', 1), ('Kaustubhprabhu98', 1), ('vnxx', 1), ('lildev', 1), ('Kostas Liberopoulos', 1), ('SwiftPolar', 1), ('Malvikabhalla99', 1), ('manoela-reis', 1), ('mgeorgiou', 1)",213,189,
ngalongc/bug-bounty-reference,"Inspired by https://github.com/djadmin/awesome-bug-bounty, a list of bug bounty write-up that is categorized by the bug nature","# Bug Bounty Reference

A list of bug bounty write-up that is categorized by the bug nature, this is inspired by https://github.com/djadmin/awesome-bug-bounty

# Introduction

I have been reading for Bug Bounty write-ups for a few months, I found it extremely useful to read relevant write-up when I found a certain type of vulnerability that I have no idea how to exploit. Let say you found a RPO (Relativce Path Overwrite) in a website, but you have no idea how should you exploit that, then the perfect place to go would be [here](http://blog.innerht.ml/rpo-gadgets/). Or you have found your customer is using oauth mechanism but you have no idea how should we test it, the other perfect place to go would be [here](https://whitton.io/articles/obtaining-tokens-outlook-office-azure-account/)

My intention is to make a full and complete list of common vulnerability that are publicly disclosed bug bounty write-up, and let Bug Bounty Hunter to use this page as a reference when they want to gain some insight for a particular kind of vulnerability during Bug Hunting, feel free to submit pull request. Okay, enough for chit-chatting, let's get started. 


- [XSSI](#xssi)
- [Cross-Site Scripting (XSS)](#cross-site-scripting-xss)
- [Brute Force](#brute-force)
- [SQL Injection (SQLi)](#sql-injection)
- [External XML Entity Attack (XXE)](#xxe)
- [Remote Code Execution (RCE)](#remote-code-execution)
  - [Deserialization](#deserialization)
  - [Image Tragick](#image-tragick)
- [Cross-Site Request Forgery (CSRF)](#csrf)
- [Insecure Direct Object Reference (IDOR)](#direct-object-reference-idor)
- [Stealing Access Token](#stealing-access-token)
  - [Google Oauth Login Bypass](#google-oauth-bypass)
- [Server Side Request Forgery (SSRF)](#server-side-request-forgery-ssrf)
- [Unrestricted File Upload](#unrestricted-file-upload)
- [Race Condition](#race-condition)
- [Business Logic Flaw](#business-logic-flaw)
- [Authentication Bypass](#authentication-bypass)
- [HTTP Header Injection](#http-header-injection)
- [Email Related](#email-related)
- [Money Stealing](#money-stealing)
- [Miscellaneous](#miscellaneous)

### Cross-Site Scripting (XSS)

- [Sleeping stored Google XSS Awakens a $5000 Bounty](https://blog.it-securityguard.com/bugbounty-sleeping-stored-google-xss-awakens-a-5000-bounty/) by Patrik Fehrenbach
- [RPO that lead to information leakage in Google](http://blog.innerht.ml/rpo-gadgets/) by filedescriptor
- [God-like XSS, Log-in, Log-out, Log-in](https://whitton.io/articles/uber-turning-self-xss-into-good-xss/) in Uber by Jack Whitton   
- [An XSS on Facebook via PNGs & Wonky Content Types](https://whitton.io/articles/xss-on-facebook-via-png-content-types/) by Jack Whitton
  - he is able to make stored XSS from a irrelevant domain to main facebook domain 
- [Stored XSS in *.ebay.com](https://whitton.io/archive/persistent-xss-on-myworld-ebay-com/) by Jack Whitton
- [Complicated, Best Report of Google XSS](https://sites.google.com/site/bughunteruniversity/best-reports/account-recovery-xss) by Ramzes
- [Tricky Html Injection and Possible XSS in sms-be-vip.twitter.com](https://hackerone.com/reports/150179) by secgeek
- [Command Injection in Google Console](http://www.pranav-venkat.com/2016/03/command-injection-which-got-me-6000.html) by Venkat S
- [Facebook's Moves - OAuth XSS](http://www.paulosyibelo.com/2015/12/facebooks-moves-oauth-xss.html) by PAULOS YIBELO
- [Stored XSS in Google Docs (Bug Bounty)](http://hmgmakarovich.blogspot.hk/2015/11/stored-xss-in-google-docs-bug-bounty.html) by Harry M Gertos
- [Stored XSS on developer.uber.com via admin account compromise in Uber](https://hackerone.com/reports/152067) by James Kettle (albinowax)
- [Yahoo Mail stored XSS](https://klikki.fi/adv/yahoo.html) by Klikki Oy
- [Abusing XSS Filter: One ^ leads to XSS(CVE-2016-3212)](http://mksben.l0.cm/2016/07/xxn-caret.html) by Masato Kinugawa
- [Youtube XSS](https://labs.detectify.com/2015/06/06/google-xss-turkey/) by fransrosen
- [Best Google XSS again](https://sites.google.com/site/bughunteruniversity/best-reports/openredirectsthatmatter) - by Krzysztof Kotowicz
- [IE & Edge URL parsin Problem](https://labs.detectify.com/2016/10/24/combining-host-header-injection-and-lax-host-parsing-serving-malicious-data/) - by detectify
- [Google XSS subdomain Clickjacking](http://sasi2103.blogspot.sg/2016/09/combination-of-techniques-lead-to-dom.html)
- [Google Japan Book XSS](http://nootropic.me/blog/en/blog/2016/09/20/%E3%82%84%E3%81%AF%E3%82%8A%E3%83%8D%E3%83%83%E3%83%88%E3%82%B5%E3%83%BC%E3%83%95%E3%82%A3%E3%83%B3%E3%82%92%E3%81%97%E3%81%A6%E3%81%84%E3%81%9F%E3%82%89%E3%81%9F%E3%81%BE%E3%81%9F%E3%81%BEgoogle/) 
- [Flash XSS mega nz](https://labs.detectify.com/2013/02/14/how-i-got-the-bug-bounty-for-mega-co-nz-xss/) - by frans
- [xss in google IE, Host Header Reflection](http://blog.bentkowski.info/2015/04/xss-via-host-header-cse.html)
- [Years ago Google xss](http://conference.hitb.org/hitbsecconf2012ams/materials/D1T2%20-%20Itzhak%20Zuk%20Avraham%20and%20Nir%20Goldshlager%20-%20Killing%20a%20Bug%20Bounty%20Program%20-%20Twice.pdf)
- [xss in google by IE weird behavior](http://blog.bentkowski.info/2015/04/xss-via-host-header-cse.html)
- [xss in Yahoo Fantasy Sport](https://web.archive.org/web/20161228182923/http://dawgyg.com/2016/12/07/stored-xss-affecting-all-fantasy-sports-fantasysports-yahoo-com-2/)
- [xss in Yahoo Mail Again, worth $10000](https://klikki.fi/adv/yahoo2.html) by Klikki Oy
- [Sleeping XSS in Google](https://blog.it-securityguard.com/bugbounty-sleeping-stored-google-xss-awakens-a-5000-bounty/) by securityguard
- [Decoding a .htpasswd to earn a payload of money](https://blog.it-securityguard.com/bugbounty-decoding-a-%F0%9F%98%B1-00000-htpasswd-bounty/) by securityguard
- [Google Account Takeover](http://www.orenh.com/2013/11/google-account-recovery-vulnerability.html#comment-form)
- [AirBnb Bug Bounty: Turning Self-XSS into Good-XSS #2](http://www.geekboy.ninja/blog/airbnb-bug-bounty-turning-self-xss-into-good-xss-2/) by geekboy
- [Uber Self XSS to Global XSS](https://httpsonly.blogspot.hk/2016/08/turning-self-xss-into-good-xss-v2.html)
- [How I found a $5,000 Google Maps XSS (by fiddling with Protobuf)](https://medium.com/@marin_m/how-i-found-a-5-000-google-maps-xss-by-fiddling-with-protobuf-963ee0d9caff#.cktt61q9g) by Marin MoulinierFollow
- [Airbnb – When Bypassing JSON Encoding, XSS Filter, WAF, CSP, and Auditor turns into Eight Vulnerabilities](https://buer.haus/2017/03/08/airbnb-when-bypassing-json-encoding-xss-filter-waf-csp-and-auditor-turns-into-eight-vulnerabilities/) by Brett 
- [XSSI, Client Side Brute Force](http://blog.intothesymmetry.com/2017/05/cross-origin-brute-forcing-of-saml-and.html)  
- [postMessage XSS Bypass](https://hackerone.com/reports/231053)
- [XSS in Uber via Cookie](http://zhchbin.github.io/2017/08/30/Uber-XSS-via-Cookie/) by zhchbin
- [Stealing contact form data on www.hackerone.com using Marketo Forms XSS with postMessage frame-jumping and jQuery-JSONP](https://hackerone.com/reports/207042) by frans
- [XSS due to improper regex in third party js Uber 7k XSS](http://zhchbin.github.io/2016/09/10/A-Valuable-XSS/) 
- [XSS in TinyMCE 2.4.0](https://hackerone.com/reports/262230) by Jelmer de Hen
- [Pass uncoded URL in IE11 to cause XSS](https://hackerone.com/reports/150179)
- [Twitter XSS by stopping redirection and javascript scheme](http://blog.blackfan.ru/2017/09/devtwittercom-xss.html) by Sergey Bobrov 
- [Auth DOM Uber XSS](http://stamone-bug-bounty.blogspot.hk/2017/10/dom-xss-auth_14.html)
- [XSS in www.yahoo.com](https://www.youtube.com/watch?v=d9UEVv3cJ0Q&feature=youtu.be) 
- [Stored XSS, and SSRF in Google using the Dataset Publishing Language](https://s1gnalcha0s.github.io/dspl/2018/03/07/Stored-XSS-and-SSRF-Google.html)
- [Stored XSS on Snapchat](https://medium.com/@mrityunjoy/stored-xss-on-snapchat-5d704131d8fd)
- [Researching Polymorphic Images for XSS on Google Scholar](https://blog.doyensec.com/2020/04/30/polymorphic-images-for-xss.html)
- [OLX Bug Bounty: Reflected XSS in 404 Page](https://medium.com/@abaykandotcom/olx-bug-bounty-reflected-xss-adb3095cd525)

### Brute Force
- [Web Authentication Endpoint Credentials Brute-Force Vulnerability](https://hackerone.com/reports/127844) by Arne Swinnen
- [InstaBrute: Two Ways to Brute-force Instagram Account Credentials](https://www.arneswinnen.net/2016/05/instabrute-two-ways-to-brute-force-instagram-account-credentials/) by Arne Swinnen
- [How I Could Compromise 4% (Locked) Instagram Accounts](https://www.arneswinnen.net/2016/03/how-i-could-compromise-4-locked-instagram-accounts/) by Arne Swinnen
- [Possibility to brute force invite codes in riders.uber.com](https://hackerone.com/reports/125505) by r0t
- [Brute-Forcing invite codes in partners.uber.com](https://hackerone.com/reports/144616) by Efkan Gökbaş (mefkan)

### SQL Injection
- [SQL injection in Wordpress Plugin Huge IT Video Gallery in Uber](https://hackerone.com/reports/125932) by glc
- [SQL Injection on sctrack.email.uber.com.cn](https://hackerone.com/reports/150156) by Orange Tsai
- [Yahoo – Root Access SQL Injection – tw.yahoo.com](http://buer.haus/2015/01/15/yahoo-root-access-sql-injection-tw-yahoo-com/) by Brett Buerhaus
- [Multiple vulnerabilities in a WordPress plugin at drive.uber.com](https://hackerone.com/reports/135288) by Abood Nour (syndr0me)
- [GitHub Enterprise SQL Injection](http://blog.orange.tw/2017/01/bug-bounty-github-enterprise-sql-injection.html) by Orange
- [Yahoo SQL Injection to Remote Code Exection to Root Privilege](http://www.sec-down.com/wordpress/?p=494) by Ebrahim Hegazy

### Stealing Access Token
- [Facebook Access Token Stolen](https://whitton.io/articles/stealing-facebook-access-tokens-with-a-double-submit/) by Jack Whitton - 
- [Obtaining Login Tokens for an Outlook, Office or Azure Account](https://whitton.io/articles/obtaining-tokens-outlook-office-azure-account/) by Jack Whitton

- [Bypassing Digits web authentication's host validation with HPP](https://hackerone.com/reports/114169) by filedescriptor
- [Bypass of redirect_uri validation with /../ in GitHub](http://homakov.blogspot.hk/2014/02/how-i-hacked-github-again.html?m=1) by Egor Homakov
- [Bypassing callback_url validation on Digits](https://hackerone.com/reports/108113) by filedescriptor
- [Stealing livechat token and using it to chat as the user - user information disclosure](https://hackerone.com/reports/151058) by Mahmoud G. (zombiehelp54)
- [Change any Uber user's password through /rt/users/passwordless-signup - Account Takeover (critical)](https://hackerone.com/reports/143717) by mongo (mongo)
- [Internet Explorer has a URL problem, on GitHub](http://blog.innerht.ml/internet-explorer-has-a-url-problem/) by filedescriptor.
- [How I made LastPass give me all your passwords](https://labs.detectify.com/2016/07/27/how-i-made-lastpass-give-me-all-your-passwords/) by labsdetectify
- [Steal Google Oauth in Microsoft](http://blog.intothesymmetry.com/2015/06/on-oauth-token-hijacks-for-fun-and.html)
- [Steal FB Access Token](http://blog.intothesymmetry.com/2014/04/oauth-2-how-i-have-hacked-facebook.html)
- [Paypal Access Token Leaked](http://blog.intothesymmetry.com/2016/11/all-your-paypal-tokens-belong-to-me.html?m=1)
- [Steal FB Access Token](http://homakov.blogspot.sg/2013/02/hacking-facebook-with-oauth2-and-chrome.html) 
- [Appengine Cool Bug](https://proximasec.blogspot.hk/2017/02/a-tale-about-appengines-authentication.html)
- [Slack post message real life experience](https://labs.detectify.com/2017/02/28/hacking-slack-using-postmessage-and-websocket-reconnect-to-steal-your-precious-token/)
- [Bypass redirect_uri](http://nbsriharsha.blogspot.in/2016/04/oauth-20-redirection-bypass-cheat-sheet.html) by nbsriharsha
- [Stealing Facebook Messenger nonce worth 15k](https://stephensclafani.com/2017/03/21/stealing-messenger-com-login-nonces/) 
- [Steal Oculus Nonce and Oauth Flow Bypass](https://medium.com/@lokeshdlk77/bypass-oauth-nonce-and-steal-oculus-response-code-faa9cc8d0d37)

#### Google oauth bypass

- [Bypassing Google Authentication on Periscope's Administration Panel](https://whitton.io/articles/bypassing-google-authentication-on-periscopes-admin-panel/) By Jack Whitton

### CSRF

- [Messenger.com CSRF that show you the steps when you check for CSRF](https://whitton.io/articles/messenger-site-wide-csrf/) by Jack Whitton 
- [Paypal bug bounty: Updating the Paypal.me profile picture without consent (CSRF attack)](https://hethical.io/paypal-bug-bounty-updating-the-paypal-me-profile-picture-without-consent-csrf-attack/) by Florian Courtial
- [Hacking PayPal Accounts with one click (Patched)](http://yasserali.com/hacking-paypal-accounts-with-one-click/) by Yasser Ali
- [Add tweet to collection CSRF](https://hackerone.com/reports/100820) by vijay kumar
- [Facebookmarketingdevelopers.com: Proxies, CSRF Quandry and API Fun](http://philippeharewood.com/facebookmarketingdevelopers-com-proxies-csrf-quandry-and-api-fun/) by phwd
- [How i Hacked your Beats account ? Apple Bug Bounty](https://aadityapurani.com/2016/07/20/how-i-hacked-your-beats-account-apple-bug-bounty/) by @aaditya_purani
- [FORM POST JSON: JSON CSRF on POST Heartbeats API](https://hackerone.com/reports/245346) by Dr.Jones
- [Hacking Facebook accounts using CSRF in Oculus-Facebook integration](https://www.josipfranjkovic.com/blog/hacking-facebook-oculus-integration-csrf)


### Remote Code Execution
- [JDWP Remote Code Execution in PayPal](https://www.vulnerability-lab.com/get_content.php?id=1474) by Milan A Solanki
- [XXE in OpenID: one bug to rule them all, or how I found a Remote Code Execution flaw affecting Facebook's servers](http://www.ubercomp.com/posts/2014-01-16_facebook_remote_code_execution) by Reginaldo Silva
- [How I Hacked Facebook, and Found Someone's Backdoor Script](http://devco.re/blog/2016/04/21/how-I-hacked-facebook-and-found-someones-backdoor-script-eng-ver/) by Orange Tsai
- [How I Chained 4 vulnerabilities on GitHub Enterprise, From SSRF Execution Chain to RCE!](http://blog.orange.tw/2017/07/how-i-chained-4-vulnerabilities-on.html) by Orange Tsai
- [uber.com may RCE by Flask Jinja2 Template Injection](https://hackerone.com/reports/125980) by Orange Tsai
- [Yahoo Bug Bounty - *.login.yahoo.com Remote Code Execution](http://blog.orange.tw/2013/11/yahoo-bug-bounty-part-2-loginyahoocom.html) by Orange Tsai (Sorry its in Chinese Only)
- [How we broke PHP, hacked Pornhub and earned $20,000](https://www.evonide.com/how-we-broke-php-hacked-pornhub-and-earned-20000-dollar/) by Ruslan Habalov
  - *Alert*, God-like Write-up, make sure you know what is ROP before clicking, which I don't =(
- [RCE deal to tricky file upload](https://www.secgeek.net/bookfresh-vulnerability/) by secgeek
- [WordPress SOME bug in plupload.flash.swf leading to RCE in Automatic](https://hackerone.com/reports/134738) by Cure53 (cure53)
- [Read-Only user can execute arbitraty shell commands on AirOS](https://hackerone.com/reports/128750) by 93c08539 (93c08539)
- [Remote Code Execution by impage upload!](https://hackerone.com/reports/158148) by Raz0r (ru_raz0r)
- [Popping a shell on the Oculus developer portal](https://bitquark.co.uk/blog/2014/08/31/popping_a_shell_on_the_oculus_developer_portal) by Bitquark
- [Crazy! PornHub RCE AGAIN!!! How I hacked Pornhub for fun and profit - 10,000$](https://5haked.blogspot.sg/) by 5haked
- [PayPal Node.js code injection (RCE)](http://artsploit.blogspot.hk/2016/08/pprce2.html) by Michael Stepankin
- [eBay PHP Parameter Injection lead to RCE](http://secalert.net/#ebay-rce-ccs)
- [Yahoo Acqusition RCE](https://seanmelia.files.wordpress.com/2016/02/yahoo-remote-code-execution-cms1.pdf)
- [Command Injection Vulnerability in Hostinger](http://elladodelnovato.blogspot.hk/2017/02/command-injection-vulnerability-in.html?spref=tw&m=1) by @alberto__segura
- [RCE in Airbnb by Ruby Injection](http://buer.haus/2017/03/13/airbnb-ruby-on-rails-string-interpolation-led-to-remote-code-execution/) by buerRCE
- [RCE in Imgur by Command Line](https://hackerone.com/reports/212696)
- [RCE in git.imgur.com by abusing out dated software](https://hackerone.com/reports/206227) by Orange Tsai
- [RCE in Disclosure](https://hackerone.com/reports/213558)
- [Remote Code Execution by struct2 Yahoo Server](https://medium.com/@th3g3nt3l/how-i-got-5500-from-yahoo-for-rce-92fffb7145e6)
- [Command Injection in Yahoo Acquisition](http://samcurry.net/how-i-couldve-taken-over-the-production-server-of-a-yahoo-acquisition-through-command-injection/)
- [$50k RCE in JetBrains IDE](http://blog.saynotolinux.com/blog/2016/08/15/jetbrains-ide-remote-code-execution-and-local-file-disclosure-vulnerability-analysis/)
- [Telekom.de Remote Command Execution!](http://www.sec-down.com/wordpress/?p=581) by Ebrahim Hegazy
- [Magento Remote Code Execution Vulnerability!](http://www.sec-down.com/wordpress/?p=578) by Ebrahim Hegazy
- [Yahoo! Remote Command Execution Vulnerability](http://www.sec-down.com/wordpress/?p=87) by Ebrahim Hegazy


####  Deserialization
  - [Java Deserialization in manager.paypal.com](http://artsploit.blogspot.hk/2016/01/paypal-rce.html) by Michael Stepankin
  - [Instagram's Million Dollar Bug](http://www.exfiltrated.com/research-Instagram-RCE.php) by Wesley Wineberg 
  - [(Ruby Cookie Deserialization RCE on facebooksearch.algolia.com](https://hackerone.com/reports/134321) by Michiel Prins (michiel)
  - [Java deserialization](https://seanmelia.wordpress.com/2016/07/22/exploiting-java-deserialization-via-jboss/) by meals

####  Image Tragick
  - [Exploiting ImageMagick to get RCE on Polyvore (Yahoo Acquisition)](http://nahamsec.com/exploiting-imagemagick-on-yahoo/) by NaHamSec
  - [Exploting ImageMagick to get RCE on HackerOne](https://hackerone.com/reports/135072) by c666a323be94d57
  - [Trello bug bounty: Access server's files using ImageTragick](https://hethical.io/trello-bug-bounty-access-servers-files-using-imagetragick/) by Florian Courtial 
  - [40k fb rce](4lemon.ru/2017-01-17_facebook_imagetragick_remote_code_execution.html)
  - [Yahoo Bleed 1](https://scarybeastsecurity.blogspot.hk/2017/05/bleed-continues-18-byte-file-14k-bounty.html)
  - [Yahoo Bleed 2](https://scarybeastsecurity.blogspot.hk/2017/05/bleed-more-powerful-dumping-yahoo.html)

### Direct Object Reference (IDOR)
- [Trello bug bounty: The websocket receives data when a public company creates a team visible board](https://hethical.io/trello-bug-bounty-the-websocket-receives-data-when-a-public-company-creates-a-team-visible-board/) by Florian Courtial 
- [Trello bug bounty: Payments informations are sent to the webhook when a team changes its visibility](https://hethical.io/trello-bug-bounty-payments-informations-are-sent-to-the-webhook-when-a-team-changes-its-visibility/) by Florian Courtial
- [Change any user's password in Uber](https://hackerone.com/reports/143717) by mongo
- [Vulnerability in Youtube allowed moving comments from any video to another](https://www.secgeek.net/youtube-vulnerability/) by secgeek
  - It's *Google* Vulnerability, so it's worth reading, as generally it is more difficult to find Google vulnerability
- [Twitter Vulnerability Could 
Credit Cards from Any Twitter Account](https://www.secgeek.net/twitter-vulnerability/) by secgeek
- [One Vulnerability allowed deleting comments of any user in all Yahoo sites](https://www.secgeek.net/yahoo-comments-vulnerability/) by secgeek
- [Microsoft-careers.com Remote Password Reset](http://yasserali.com/microsoft-careers-com-remote-password-reset/) by Yaaser Ali
- [How I could change your eBay password](http://yasserali.com/how-i-could-change-your-ebay-password/) by Yaaser Ali
- [Duo Security Researchers Uncover Bypass of PayPal’s Two-Factor Authentication](https://duo.com/blog/duo-security-researchers-uncover-bypass-of-paypal-s-two-factor-authentication) by Duo Labs
- [How I got access to millions of [redacted] accounts](https://bitquark.co.uk/blog/2016/02/09/how_i_got_access_to_millions_of_redacted_accounts)
- [All Vimeo Private videos disclosure via Authorization Bypass with Excellent Technical Description](https://hackerone.com/reports/137502) by Enguerran Gillier (opnsec)
- [Urgent: attacker can access every data source on Bime](https://hackerone.com/reports/149907) by Jobert Abma (jobert)
- [Downloading password protected / restricted videos on Vimeo](https://hackerone.com/reports/145467) by Gazza (gazza)
- [Get organization info base on uuid in Uber](https://hackerone.com/reports/151465) by Severus (severus)
- [How I Exposed your Primary Facebook Email Address (Bug worth $4500)](http://roy-castillo.blogspot.hk/2013/07/how-i-exposed-your-primary-facebook.html) by Roy Castillo
- [DOB disclosed using “Facebook Graph API Reverse Engineering”](https://medium.com/@rajsek/my-3rd-facebook-bounty-hat-trick-chennai-tcs-er-name-listed-in-facebook-hall-of-fame-47f57f2a4f71#.9gbtbv42q) by Raja Sekar Durairaj
- [Change the description of a video without publish_actions permission in Facebook](http://philippeharewood.com/change-the-description-of-a-video-without-publish_actions-permission/) by phwd
- [Response To Request Injection (RTRI)](https://www.bugbountyhq.com/front/latestnews/dWRWR0thQ2ZWOFN5cTE1cXQrSFZmUT09/) by ?, be honest, thanks to this article, I have found quite a few bugs because of using his method, respect to the author!
- [Leak of all project names and all user names , even across applications on Harvest](https://hackerone.com/reports/152696) by Edgar Boda-Majer (eboda)
- [Changing paymentProfileUuid when booking a trip allows free rides at Uber](https://hackerone.com/reports/162809) by Matthew Temmy (temmyscript)
- [View private tweet](https://hackerone.com/reports/174721)
- ~~[Hacking Facebook’s Legacy API, Part 1: Making Calls on Behalf of Any User](http://stephensclafani.com/2014/07/08/hacking-facebooks-legacy-api-part-1-making-calls-on-behalf-of-any-user/) by Stephen Sclafani~~
- ~~[Hacking Facebook’s Legacy API, Part 2: Stealing User Sessions](http://stephensclafani.com/2014/07/29/hacking-facebooks-legacy-api-part-2-stealing-user-sessions/) by Stephen Sclafani~~
- [Delete FB Video](https://danmelamed.blogspot.hk/2017/01/facebook-vulnerability-delete-any-video.html)
- [Delete FB Video](https://pranavhivarekar.in/2016/06/23/facebooks-bug-delete-any-video-from-facebook/)
- [Viewing private Airbnb Messages](http://buer.haus/2017/03/31/airbnb-web-to-app-phone-notification-idor-to-view-everyones-airbnb-messages/) 
- [IDOR tweet as any user](http://kedrisec.com/twitter-publish-by-any-user/) by kedrisec
- [Mass Assignment, Response to Request Injection, Admin Escalation](https://seanmelia.wordpress.com/2017/06/01/privilege-escalation-in-a-django-application/) by sean
- [Getting any Facebook user's friend list and partial payment card details](https://www.josipfranjkovic.com/blog/facebook-friendlist-paymentcard-leak)
- [Manipulation of ETH balance](https://www.vicompany.nl/magazine/from-christmas-present-in-the-blockchain-to-massive-bug-bounty)


### XXE
- [How we got read access on Google’s production servers](https://blog.detectify.com/2014/04/11/how-we-got-read-access-on-googles-production-servers/) by  detectify
- [Blind OOB XXE At UBER 26+ Domains Hacked](http://nerdint.blogspot.hk/2016/08/blind-oob-xxe-at-uber-26-domains-hacked.html) by Raghav Bisht
- [XXE through SAML](https://seanmelia.files.wordpress.com/2016/01/out-of-band-xml-external-entity-injection-via-saml-redacted.pdf)
- [XXE in Uber to read local files](https://httpsonly.blogspot.hk/2017/01/0day-writeup-xxe-in-ubercom.html)

### Unrestricted File Upload
- [File Upload XSS in image uploading of App in mopub](https://hackerone.com/reports/97672) by vijay kumar 
- [RCE deal to tricky file upload](https://www.secgeek.net/bookfresh-vulnerability/) by secgeek
- [File Upload XSS in image uploading of App in mopub in Twitter](https://hackerone.com/reports/97672) by vijay kumar (vijay_kumar1110)

### Server Side Request Forgery (SSRF)
- [ESEA Server-Side Request Forgery and Querying AWS Meta Data](http://buer.haus/2016/04/18/esea-server-side-request-forgery-and-querying-aws-meta-data/) by Brett Buerhaus
- [SSRF to pivot internal network](https://seanmelia.files.wordpress.com/2016/07/ssrf-to-pivot-internal-networks.pdf)
- [SSRF to LFI](https://seanmelia.wordpress.com/2015/12/23/various-server-side-request-forgery-issues/)
- [SSRF to query google internal server](https://www.rcesecurity.com/2017/03/ok-google-give-me-all-your-internal-dns-information/)
- [SSRF by using third party Open redirect](https://buer.haus/2017/03/09/airbnb-chaining-third-party-open-redirect-into-server-side-request-forgery-ssrf-via-liveperson-chat/) by Brett BUERHAUS
- [SSRF tips from BugBountyHQ of Images](https://twitter.com/BugBountyHQ/status/868242771617792000)
- [SSRF to RCE](http://www.kernelpicnic.net/2017/05/29/Pivoting-from-blind-SSRF-to-RCE-with-Hashicorp-Consul.html)
- [XXE at Twitter](https://hackerone.com/reports/248668)
- [Blog post: Cracking the Lens: Targeting HTTP’s Hidden Attack-Surface ](http://blog.portswigger.net/2017/07/cracking-lens-targeting-https-hidden.html)
- [Plotly AWS Metadata SSRF (and a stored XSS)](https://ysx.me.uk/a-pair-of-plotly-bugs-stored-xss-and-aws-metadata-ssrf/)

### Race Condition

- [Race conditions on Facebook, DigitalOcean and others (fixed)](http://josipfranjkovic.blogspot.hk/2015/04/race-conditions-on-facebook.html) by Josip Franjković
- [Race Conditions in Popular reports feature in HackerOne](https://hackerone.com/reports/146845) by Fábio Pires (shmoo)
- [Hacking Starbuck for unlimited money](https://sakurity.com/blog/2015/05/21/starbucks.html) by Egor Homakov

### Business Logic Flaw
- [How I Could Steal Money from Instagram, Google and Microsoft](https://www.arneswinnen.net/2016/07/how-i-could-steal-money-from-instagram-google-and-microsoft/) by Arne Swinnen
- [Facebook - bypass ads account's roles vulnerability 2015](http://blog.darabi.me/2015/03/facebook-bypass-ads-account-roles.html) by POUYA DARABI
- [Uber Eat for Free](https://t.co/MCOM7j2dWX) by 

### Authentication Bypass
- [OneLogin authentication bypass on WordPress sites via XMLRPC in Uber](https://hackerone.com/reports/138869) by Jouko Pynnönen (jouko)
- [2FA PayPal Bypass](https://henryhoggard.co.uk/blog/Paypal-2FA-Bypass) by henryhoggard
- [SAML Bug in Github worth 15000](http://www.economyofmechanism.com/github-saml.html)  
- [Authentication bypass on Airbnb via OAuth tokens theft](https://www.arneswinnen.net/2017/06/authentication-bypass-on-airbnb-via-oauth-tokens-theft/)
- [Administrative Panel Access](http://c0rni3sm.blogspot.hk/2017/08/accidentally-typo-to-bypass.html?m=1) by c0rni3sm
- [Flickr Oauth Misconfiguration](https://mishresec.wordpress.com/2017/10/12/yahoo-bug-bounty-exploiting-oauth-misconfiguration-to-takeover-flickr-accounts/) by mishre
- [Slack SAML authentication bypass](http://blog.intothesymmetry.com/2017/10/slack-saml-authentication-bypass.html) by Antonio Sanso
- [Shopify admin authentication bypass using partners.shopify.com](https://hackerone.com/reports/270981) by uzsunny

### HTTP Header Injection
- [Twitter Overflow Trilogy in Twitter](https://blog.innerht.ml/overflow-trilogy/) by filedescriptor
- [Twitter CRLF](https://blog.innerht.ml/twitter-crlf-injection/) by filedescriptor
- [Adblock Plus and (a little) more in Google](https://adblockplus.org/blog/finding-security-issues-in-a-website-or-how-to-get-paid-by-google)
- [$10k host header](https://sites.google.com/site/testsitehacking/10k-host-header) by Ezequiel Pereira

### Subdomain Takeover

- [Hijacking tons of Instapage expired users Domains & Subdomains](http://www.geekboy.ninja/blog/hijacking-tons-of-instapage-expired-users-domains-subdomains/) by geekboy
- [Reading Emails in Uber Subdomains](https://hackerone.com/reports/156536)
- [Slack Bug Journey](http://secalert.net/slack-security-bug-bounty.html) - by David Vieira-Kurz
- [Subdomain takeover and chain it to perform authentication bypass](https://www.arneswinnen.net/2017/06/authentication-bypass-on-ubers-sso-via-subdomain-takeover/) by Arne Swinnen
- [Hacker.One Subdomain Takeover](https://hackerone.com/reports/159156) - by geekboy

## XSSI

- [Plain Text Reading by XSSI](http://balpha.de/2013/02/plain-text-considered-harmful-a-cross-domain-exploit/)
- [JSON hijacking](http://blog.portswigger.net/2016/11/json-hijacking-for-modern-web.html)
- [OWASP XSSI](https://www.owasp.org/images/f/f3/Your_Script_in_My_Page_What_Could_Possibly_Go_Wrong_-_Sebastian_Lekies%2BBen_Stock.pdf)
- [Japan Identifier based XSSI attacks](http://www.mbsd.jp/Whitepaper/xssi.pdf)
- [JSON Hijack Slide](https://www.owasp.org/images/6/6a/OWASPLondon20161124_JSON_Hijacking_Gareth_Heyes.pdf)

## Email Related

- [This domain is my domain - G Suite A record vulnerability](http://blog.pentestnepal.tech/post/156959105292/this-domain-is-my-domain-g-suite-a-record)
- [I got emails - G Suite Vulnerability](http://blog.pentestnepal.tech/post/156707088037/i-got-emails-g-suite-vulnerability)
- [How I snooped into your private Slack messages [Slack Bug bounty worth $2,500]](http://blog.pentestnepal.tech/post/150381068912/how-i-snooped-into-your-private-slack-messages)
- [Reading Uber’s Internal Emails [Uber Bug Bounty report worth $10,000]](http://blog.pentestnepal.tech/post/149985438982/reading-ubers-internal-emails-uber-bug-bounty)
- [Slack Yammer Takeover by using TicketTrick](https://medium.com/@intideceukelaire/how-i-hacked-hundreds-of-companies-through-their-helpdesk-b7680ddc2d4c) by Inti De Ceukelaire
- [How I could have mass uploaded from every Flickr account!](https://ret2got.wordpress.com/2017/10/05/how-i-could-have-mass-uploaded-from-every-flickr-account/)

## Money Stealing

- [Round error issue -> produce money for free in Bitcoin Site](https://hackerone.com/reports/176461) by 4lemon

## 2017 Local File Inclusion

- [Disclosure Local File Inclusion by Symlink](https://hackerone.com/reports/213558)
- [Facebook Symlink Local File Inclusion](http://josipfranjkovic.blogspot.hk/2014/12/reading-local-files-from-facebooks.html)
- [Gitlab Symlink Local File Inclusion](https://hackerone.com/reports/158330)
- [Gitlab Symlink Local File Inclusion Part II](https://hackerone.com/reports/178152)
- [Multiple Company LFI](http://panchocosil.blogspot.sg/2017/05/one-cloud-based-local-file-inclusion.html)
- [LFI by video conversion, excited about this trick!](https://hackerone.com/reports/226756)

## Miscellaneous

- [SAML Pen Test Good Paper](http://research.aurainfosec.io/bypassing-saml20-SSO/)
- [A list of FB writeup collected by phwd](https://www.facebook.com/notes/phwd/facebook-bug-bounties/707217202701640) by phwd
- [NoSQL Injection](http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html) by websecurify
- [CORS in action](http://www.geekboy.ninja/blog/exploiting-misconfigured-cors-cross-origin-resource-sharing/)
- [CORS in Fb messenger](http://www.cynet.com/blog-facebook-originull/)
- [Web App Methodologies](https://blog.zsec.uk/ltr101-method-to-madness/)
- [XXE Cheatsheet](https://www.silentrobots.com/blog/2015/12/14/xe-cheatsheet-update/)
- [The road to hell is paved with SAML Assertions, Microsoft Vulnerability](http://www.economyofmechanism.com/office365-authbypass.html#office365-authbypass)
- [Study this if you like to learn Mongo SQL Injection](https://cirw.in/blog/hash-injection) by cirw
- [Mongo DB Injection again](http://blog.websecurify.com/2014/08/hacking-nodejs-and-mongodb.html) by websecrify
- [w3af speech about modern vulnerability](https://www.youtube.com/watch?v=GNU0_Uzyvl0) by w3af
- [Web cache attack that lead to account takeover](http://omergil.blogspot.co.il/2017/02/web-cache-deception-attack.html)
- [A talk to teach you how to use SAML Raider](https://www.usenix.org/conference/usenixsecurity12/technical-sessions/presentation/somorovsky)
- [XSS Checklist when you have no idea how to exploit the bug](http://d3adend.org/xss/ghettoBypass)
- [CTF write up, Great for Bug Bounty](https://ctftime.org/writeups?tags=",,2016-09-01T12:53:35Z,2021-10-02T16:42:17Z,21,19,3625,244,"('ngalongc', 169), ('src-kun', 4), ('masterofthepuppets', 2), ('andygrunwald', 2), ('crucialbit', 2), ('ZephrFish', 2), ('coreb1t', 1), ('Aaron Hnatiw', 1), ('Ahmed Radi', 1), ('abaykan', 1), ('santosyellow', 1), ('phosphore', 1), ('melvinsh', 1), ('orangetw', 1), ('pankajkumarkbn', 1), ('ritiek', 1), ('techgaun', 1), ('TERM1N80R', 1), ('tavdog', 1), ('yasinS', 1), ('eur0pa', 1)",15,13,
adamcath/telemetry-utils,Tools to compliment Flash's Telemetry feature,"telemetry-utils
=============== 
Tools to complement Flash's Telemetry feature.

### Note

This repo has moved to https://github.com/adobe/telemetry-utils


## add-opt-in.py

Adds the EnableTelemetry tag to a SWF file for use with Adobe ""Monocle"".

Run this script on your SWF to make it generate advanced telemetry, which is
needed for the ActionScript Sampler, Stage3D Recording, and other features.

This script is provided as a last resort. If possible, you should compile your
application with the -advanced-telemetry option.

### Setup

1. You need Python. I've tested 2.6.1 (Mac) and ActivePython 2.7.2 (Win).
1. For LZMA-compressed SWFs, you need [pylzma](http://www.joachim-bauch.de/projects/pylzma/).

### Usage

        ./add-opt-in.py swf_file [password]

If password is provided, advanced telemetry will only be visible if a matching 
password is entered in Monocle. 
",,2012-10-25T17:32:57Z,2016-09-27T10:51:31Z,6,3,51,12,"('Adam Cath', 5), ('Srinivas Annam', 2), ('adamcath', 2), ('alexmac', 1), ('Nate Burr', 1), ('sannam', 1)",3,2,
Apostolique/Agar.io-bot,The aim of the project is to create a bot that can play Agar.io,"# Agar.io-bot

*FOR EVERYONE WHO KEEPS SENDING THE ISSUES TO THIS BOT, PLEASE READ [ISSUE 616](https://github.com/Apostolique/Agar.io-bot/issues/616) FOR THE REASONS AS TO WHY APOSTOLIQUE HAS STOPPED WORKING ON THIS BOT!!! (~ Drflash55)*

The aim of the project is to create a bot that can play Agar.io

The full coding process is streamed live on http://www.twitch.tv/apostolique

Make sure to install both bot.user.js and launcher.user.js. If you don't mind having the code auto update itself though, you can simply get the loader.user.js without the other two.

[![license](https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000)](https://opensource.org/licenses/MIT)

[![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg?maxAge=2592000)](https://gitter.im/Apostolique/ACS)

# Honorable mention
There are other people working on bots, you can check the forks, as well as GamerLio's Github which uses genetic algorithms: https://github.com/leomwu/agario-bot

# How to Install
**Web Tutorial**

http://bot.jlynx.net/

**Videos**

Created by https://www.youtube.com/user/karter61/

https://www.youtube.com/watch?v=Zvq38nmCm1s - Install Tutorial.

https://www.youtube.com/watch?v=x2-DFRnEFBU - Android Tutorial.

# Hotkeys

* Press 'R' if you want to toggle the line and dot drawing.
* Press 'T' if you want to use the manual controls.
* Press 'D' to toggle the dark mode.
* Press 'F' to toggle the show mass option.
* Press 'ESC' for the option menu.

# Bot creation!

**It's really easy!**

Just copy the code snippet found in the wiki:
[Bot creation using the Launcher](https://github.com/Apostolique/Agar.io-bot/wiki/Bot-creation-using-the-Launcher)

If you start working on a bot, make sure to start an issue and tell me about it so that I can add it to the bot list on
[Alternate Bots](https://github.com/Apostolique/Agar.io-bot/wiki/Alternate-Bots)

# Support the project
[![Twitter URL](https://img.shields.io/twitter/url/https/twitter.com/fold_left.svg?style=social&label=Follow%20%40JeanDavidMoisan)](https://twitter.com/JeanDavidMoisan)

[![Twitch Donation](https://img.shields.io/badge/donate-twitch-red.svg)](https://www.twitchalerts.com/donate/apostolique)

[![Twitch Follow](https://img.shields.io/badge/follow-twitch-orange.svg)](http://www.twitch.tv/apostolique)

# Troubleshooting

If the bot doesn't spawn, it's possible that your adblocker is causing the issue. Try disabling it.
",,2015-05-11T23:31:34Z,2020-04-18T18:24:10Z,19,19,1147,244,"('Apostolique', 260), ('ermiyaeskandary', 30), ('FliiFe', 11), ('henopied', 9), ('jLynx', 7), ('Drflash55', 7), ('caiosm1005', 5), ('SJMakin', 3), ('stefnotch', 2), ('muratlahur', 2), ('elliots-bits', 2), ('lilezek', 2), ('Death2', 2), ('Gjum', 1), ('Icelys', 1), ('kaiboisdumb', 1), ('Linkaan', 1), ('bryant1410', 1), ('Timtech', 1)",6,6,
tidwall/tinybtree,Just an itsy bitsy b-tree in Go,"# `tinybtree`

[![GoDoc](https://godoc.org/github.com/tidwall/tinybtree?status.svg)](https://godoc.org/github.com/tidwall/tinybtree)

Just an itsy bitsy b-tree.

## Usage

Keys are strings, values are interfaces.

### Functions

```
Get(key string) (value interface{}, gotten bool)
Set(key string, value interface{}) (prev interface{}, replaced bool)
Delete(key string) (prev interface{}, deleted bool)
Scan(iter func(key string, value interface{}) bool)
Ascend(pivot string, iter func(key string, value interface{}) bool)
Descend(pivot string, iter func(key string, value interface{}) bool)
```

### Example

```go
// Create a btree
var tr tinybtree.BTree

// Set a key. Returns the previous value and ok a previous value exists.
prev, ok := tr.Set(""hello"", ""world"")

// Get a key. Returns the value and ok if the value exists.
value, ok := tr.Get(""hello"")

// Delete a key. Returns the deleted value and ok if the previous value exists.
prev, ok := tr.Delete(""hello"")
```

## Contact

Josh Baker [@tidwall](http://twitter.com/tidwall)

## License

`tinybtree` source code is available under the MIT [License](/LICENSE).
",,2018-10-24T23:08:09Z,2021-08-29T15:46:51Z,1,1,94,5,"('tidwall', 7)",0,0,
coolsnowwolf/lede,Lean's LEDE source,"# 欢迎来到 Lean 的 LEDE 源码仓库

为国产龙芯 LOONGSON SoC loongarch64 / 飞腾 Phytium 腾锐2000 系列架构添加支持

I18N: [English](README_EN.md) | [简体中文](README.md) | [日本語](README_JA.md)

## 官方讨论群

如有技术问题需要讨论或者交流，欢迎加入以下群：

1. QQ 讨论群： Op固件技术研究群 ,号码 891659613 ，加群链接：[点击加入](https://jq.qq.com/?_wv=1027&k=XL8SK5aC ""Op固件技术研究群"")
2. TG 讨论群： OP 编译官方大群 ，加群链接：[点击加入](https://t.me/JhKgAA6Hx1 ""OP 编译官方大群"")

## 软路由介绍

硬酷R2 - N95/N300迷你四网HomeLab服务器

[商品介绍页面 - 硬酷科技（支持花呗）](https://item.taobao.com/item.htm?id=721197662185)

[![r1](doc/r1.jpg)](https://item.taobao.com/item.htm?id=721197662185)

## 注意

1. **不要用 root 用户进行编译**
2. 国内用户编译前最好准备好梯子
3. 默认登陆IP 192.168.1.1 密码 password

## 编译命令

1. 首先装好 Linux 系统，推荐 Debian 11 或 Ubuntu LTS

2. 安装编译依赖

   ```bash
   sudo apt update -y
   sudo apt full-upgrade -y
   sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
   bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
   git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev \
   libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev \
   libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 \
   python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo \
   uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
   ```

3. 下载源代码，更新 feeds 并选择配置

   ```bash
   git clone https://github.com/coolsnowwolf/lede
   cd lede
   ./scripts/feeds update -a
   ./scripts/feeds install -a
   make menuconfig
   ```

4. 下载 dl 库，编译固件
（-j 后面是线程数，第一次编译推荐用单线程）

   ```bash
   make download -j8
   make V=s -j1
   ```

本套代码保证肯定可以编译成功。里面包括了 R23 所有源代码，包括 IPK 的。

你可以自由使用，但源码编译二次发布请注明我的 GitHub 仓库链接。谢谢合作！

二次编译：

```bash
cd lede
git pull
./scripts/feeds update -a
./scripts/feeds install -a
make defconfig
make download -j8
make V=s -j$(nproc)
```

如果需要重新配置：

```bash
rm -rf .config
make menuconfig
make V=s -j$(nproc)
```

编译完成后输出路径：bin/targets

### 使用 WSL/WSL2 进行编译

由于 WSL 的 PATH 中包含带有空格的 Windows 路径，有可能会导致编译失败，请在 `make` 前面加上：

```bash
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
```

由于默认情况下，装载到 WSL 发行版的 NTFS 格式的驱动器将不区分大小写，因此大概率在 WSL/WSL2 的编译检查中会返回以下错误：

```txt
Build dependency: OpenWrt can only be built on a case-sensitive filesystem
```

一个比较简洁的解决方法是，在 `git clone` 前先创建 Repository 目录，并为其启用大小写敏感：

```powershell
# 以管理员身份打开终端
PS > fsutil.exe file setCaseSensitiveInfo  enable
# 将本项目 git clone 到开启了大小写敏感的目录  中
PS > git clone git@github.com:coolsnowwolf/lede.git 
```

> 对已经 `git clone` 完成的项目目录执行 `fsutil.exe` 命令无法生效，大小写敏感只对新增的文件变更有效。

### macOS 原生系统进行编译

1. 在 AppStore 中安装 Xcode

2. 安装 Homebrew：

   ```bash
   /usr/bin/ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""
   ```

3. 使用 Homebrew 安装工具链、依赖与基础软件包:

   ```bash
   brew unlink awk
   brew install coreutils diffutils findutils gawk gnu-getopt gnu-tar grep make ncurses pkg-config wget quilt xz
   brew install gcc@11
   ```

4. 然后输入以下命令，添加到系统环境变量中：

   ```bash
   echo 'export PATH=""/usr/local/opt/coreutils/libexec/gnubin:$PATH""' >> ~/.bashrc
   echo 'export PATH=""/usr/local/opt/findutils/libexec/gnubin:$PATH""' >> ~/.bashrc
   echo 'export PATH=""/usr/local/opt/gnu-getopt/bin:$PATH""' >> ~/.bashrc
   echo 'export PATH=""/usr/local/opt/gnu-tar/libexec/gnubin:$PATH""' >> ~/.bashrc
   echo 'export PATH=""/usr/local/opt/grep/libexec/gnubin:$PATH""' >> ~/.bashrc
   echo 'export PATH=""/usr/local/opt/gnu-sed/libexec/gnubin:$PATH""' >> ~/.bashrc
   echo 'export PATH=""/usr/local/opt/make/libexec/gnubin:$PATH""' >> ~/.bashrc
   ```

5. 重新加载一下 shell 启动文件 `source ~/.bashrc`，然后输入 `bash` 进入 bash shell，就可以和 Linux 一样正常编译了

## 特别提示

1. 源代码中绝不含任何后门和可以监控或者劫持你的 HTTPS 的闭源软件， SSL 安全是互联网最后的壁垒。安全干净才是固件应该做到的；

2. 想学习 OpenWrt 开发，但是摸不着门道？自学没毅力？基础太差？怕太难学不会？跟着佐大学 OpenWrt 开发入门培训班助你能学有所成
报名地址：[点击报名](http://forgotfun.org/2018/04/openwrt-training-2018.html ""报名"")

3. QCA IPQ60xx 开源仓库地址：

4. 存档版本仓库地址：

## 捐贈

如果你觉得此项目对你有帮助，可以捐助我们，以鼓励项目能持续发展，更加完善

 ![star](doc/star.png)
","'lede', 'lua', 'openwrt-feed', 'openwrt-package', 'openwrt-zh-cn'",2017-09-06T07:39:03Z,2024-06-18T07:57:53Z,509,421,29042,743,"('coolsnowwolf', 3394), ('aiamadeus', 515), ('Beginner-Go', 487), ('dangowrt', 190), ('aakkll', 128), ('misaka36', 98), ('nbd168', 90), ('1715173329', 65), ('PolynomialDivision', 58), ('hauke', 57), ('neheb', 54), ('Mattraks', 39), ('Ansuel', 38), ('ricksuzade-maker', 37), ('graysky2', 35), ('benihi', 29), ('asushugo', 29), ('aooom', 25), ('KFERMercer', 25), ('blocktrron', 23), ('coolsnowwolf', 23), ('dpy013', 22), ('SharerMax', 20), ('tossp', 20), ('ynezz', 19), ('imbrolla', 19), ('breakings', 17), ('ntlf9t', 17), ('cotequeiroz', 16), ('Boos4721', 15), ('DHDAXCW', 14), ('1582130940', 14), ('coolsnowwolf', 13), ('chunkeey', 13), ('luxiaok', 13), ('LPDDR6-10000MHz', 13), ('libc0607', 12), ('stintel', 11), ('robimarko', 11), ('LGA1150', 11), ('Saxon-Sun', 10), ('1054009064', 10), ('EnnawYang', 10), ('ElonH', 10), ('BoBppy', 10), ('fanck0605', 9), ('luckyyyyy', 9), ('jjm2473', 8), ('R3pl4c3r', 8), ('Ailick', 8), ('aparcar', 8), ('Lollipop907', 8), ('DragonBluep', 8), ('manyeechen', 8), ('shiyu1314', 7), ('Lienol', 7), ('nivalxer', 7), ('arinc9', 7), ('lunatickochiya', 7), ('dansir118', 7), ('wigyori', 7), ('paraka', 7), ('Rafał Miłecki', 7), ('pepe2k', 7), ('mcucore', 7), ('Fsick', 7), ('ptpt52', 7), ('dhewg', 7), ('solarflows', 6), ('mjyhj', 6), ('AuthorReflex', 6), ('Koen Vandeputte', 6), ('rsalvaterra', 6), ('gudumuyu', 6), ('zfdx123', 6), ('smallprogram', 6), ('zxlhhyccc', 6), ('abajk', 5), ('Bob Cantor', 5), ('alecthw', 5), ('981213', 5), ('Her0R0cket', 5), ('lysssssss', 5), ('sKyissKy', 5), ('monsterzzzz', 5), ('BKPepe', 5), ('likanchen', 5), ('hyird', 5), ('esirplayground', 5), ('ZeaKyX', 5), ('Gateworks', 5), ('QiuSimons', 5), ('Noltari', 4), ('DoveKi', 4), ('xiaobaishu1', 4), ('lxl6125', 4), ('z826540272', 4), ('martin0607', 4), ('libinanshu', 4), ('Aes64X', 4), ('feckert', 4), ('HiGarfield', 4), ('Ardentwheel', 4), ('mpratt14', 4), ('MilesPoupart', 4), ('SamShih33', 4), ('xiangfeidexiaohuo', 4), ('Spudz76', 4), ('bigfoxtail', 4), ('caicaicai21', 4), ('cuiyf5516', 4), ('Javier-Huang', 4), ('littoy', 3), ('lwz322', 3), ('lxhao61', 3), ('lzx2009vb', 3), ('e6e6', 3), ('small_5', 3), ('zonyitoo', 3), ('zhouF96', 3), ('msylgj', 3), ('xsm1997', 3), ('yHpgi', 3), ('lphgor', 3), ('ShireCiel', 3), ('HoldOnBro', 3), ('Crazy365', 3), ('4860575', 3), ('jow-', 3), ('malash', 3), ('greennyreborn', 3), ('NagaseKouichi', 3), ('svlobanov', 3), ('tsl0922', 3), ('SuLingGG', 3), ('WYC-2020', 3), ('467815891a', 3), ('accors', 3), ('acooler15', 3), ('haxc', 3), ('hejiawencc', 3), ('Septrum101', 2), ('fw876', 2), ('fishg', 2), ('easyteacher', 2), ('dwj0', 2), ('dunkeng', 2), ('dreamcmi', 2), ('dongjuanyong', 2), ('cnzgray', 2), ('cjpjxjx', 2), ('bluskai', 2), ('binext', 2), ('anjue39', 2), ('a1768623020', 2), ('WuSiYu', 2), ('guidosarducci', 2), ('Dawneng', 2), ('tdleiyao', 2), ('XiaoliChan', 2), ('xydche', 2), ('wybb', 2), ('unifreq', 2), ('tjuyy', 2), ('soandsoso', 2), ('sdf8057', 2), ('819-dev', 2), ('lonwern', 2), ('lichao0223', 2), ('kongfl888', 2), ('stupidloud', 2), ('hcwhan', 2), ('goldkeyber112', 2), ('ldir-EDB0', 2), ('PokersKun', 2), ('JohnSmithFirst', 2), ('moetayuko', 2), ('FlyGoat', 2), ('AiyionPrime', 2), ('eltociear', 2), ('Hyy2001X', 2), ('bitboxclub', 2), ('hnyman', 2), ('hqvv', 2), ('HHJLKK', 2), ('gstrauss', 2), ('HZFrodo', 2), ('gztingting', 2), ('BROBIRD', 2), ('cyijun', 2), ('bobc26', 2), ('TonyTeng22', 2), ('TwoBall', 2), ('VictoriousRaptor', 2), ('tete1030', 2), ('Suysker', 2), ('svanheule', 2), ('rucketeg', 2), ('9l', 2), ('mcbridematt', 2), ('mj22226', 2), ('mweinelt', 2), ('sch-m', 2), ('M1A6I3L', 2), ('LINGJP', 2), ('lemoer', 2), ('KumaTea', 2), ('xback', 2), ('KKtheGhost', 2), ('ericsnow911', 1), ('everything411', 1), ('mingxiaoyu', 1), ('firker', 1), ('fliaping', 1), ('gavin219', 1), ('gbcwbz', 1), ('godMan', 1), ('gw826943555', 1), ('eeczw', 1), ('edwardostara', 1), ('dsanke', 1), ('df-ebs', 1), ('deadlineOvO', 1), ('csharper2005', 1), ('chongshengB', 1), ('chaichunyang', 1), ('阿菌•未霜', 1), ('lyin888', 1), ('lqdflying', 1), ('love4taylor', 1), ('liwenjie119', 1), ('liuran001', 1), ('judecumt', 1), ('lin20121221', 1), ('letmekillthemall', 1), ('kaes1a', 1), ('jimjimbco', 1), ('jesset', 1), ('jackiezhang29', 1), ('j3l11234', 1), ('ir20', 1), ('ioioioion', 1), ('inlyt', 1), ('hubbylei', 1), ('huah6571', 1), ('Yonghyu Ban', 1), ('YanxingLiu', 1), ('cyyself', 1), ('xuefer', 1), ('tominescu', 1), ('XiaoBinin', 1), ('WouldChar', 1), ('gl-yangweiping', 1), ('hackpascal', 1), ('vgaetera', 1), ('xDSx', 1), ('vtremblay', 1), ('victordou', 1), ('veoco', 1), ('ukleinek', 1), ('Tsenghan', 1), ('Tony91590', 1), ('tiagogaspar8', 1), ('Testeera', 1), ('miccjing', 1), ('brucewzp', 1), ('fakeboboliu', 1), ('bingsugar', 1), ('billclock', 1), ('biliwala', 1), ('bearbazooka', 1), ('barton0426', 1), ('badgv', 1), ('babutree', 1), ('arrio464', 1), ('quintus-lab', 1), ('aodzip', 1), ('adamw92', 1), ('Zy143L', 1), ('Yi-Z0', 1), ('zeXtreme', 1), ('Zeezorn', 1), ('wevsty', 1), ('zclkkk', 1), ('younger', 1), ('xinxijishuwyq', 1), ('xingkong', 1), ('xiaotan8', 1), ('wyapx', 1), ('woOzZ2', 1), ('woOzZ1', 1), ('wisdomjxc', 1), ('wheretoteardown', 1), ('whc2001', 1), ('whalechoi', 1), ('umarizulkifli', 1), ('uamrws', 1), ('tty228', 1), ('trackycn', 1), ('tl768', 1), ('taowazi007', 1), ('tansuo', 1), ('虾哥哥', 1), ('蓝爵薇', 1), ('然后七年', 1), ('然后七年', 1), ('汐音柠柠', 1), ('柠火', 1), ('杰哥', 1), ('木四水', 1), ('情留メ蚊子', 1), ('守望星空', 1), ('孤爺仔', 1), ('好想告诉你', 1), ('喃南下', 1), ('zzs01', 1), ('zheshifandian', 1), ('zhangguanzhang', 1), ('zg9527', 1), ('zfdx123', 1), ('zcluo', 1), ('phorcys', 1), ('peeweep', 1), ('pc.xue', 1), ('paldier', 1), ('padavanonly', 1), ('ownhere', 1), ('osdu', 1), ('onewe', 1), ('oct-month', 1), ('noire11', 1), ('nftbty', 1), ('naoki66', 1), ('nanchuci', 1), ('msly', 1), ('maninsz', 1), ('Mleaf', 1), ('mk-qi', 1), ('meferspb', 1), ('goomadao', 1), ('syb999', 1), ('swxk', 1), ('springsunx', 1), ('sofair', 1), ('sitieqiang', 1), ('shuai zhou', 1), ('shizhe', 1), ('shiyu1314', 1), ('shi JiaY', 1), ('shenzt68', 1), ('ryulamp', 1), ('rookietribe', 1), ('qwerttvv', 1), ('quintus', 1), ('qq57240', 1), ('qlugcp', 1), ('qianxu2001', 1), ('pupie', 1), ('plutoghost', 1), ('Ra2-IFV', 1), ('hyc', 1), ('hex-ci', 1), ('helmiau', 1), ('hecheng337', 1), ('hguandl', 1), ('dedeckeh', 1), ('HFTALK', 1), ('gjp1120', 1), ('FrancisNGG', 1), ('FFBest', 1), ('eisaev', 1), ('EpLiar', 1), ('ElmerZhang', 1), ('dlundquist', 1), ('DreamWalkerXZ', 1), ('dobo90', 1), ('DavideFioravanti', 1), ('Biggulu', 1), ('goofysun', 1), ('roysjosh', 1), ('john-tho', 1), ('blogic', 1), ('Myoko', 1), ('schreibubi', 1), ('jwmullally', 1), ('zhaojh329', 1), ('jmarcet', 1), ('arimitx', 1), ('zx2c4', 1), ('WROIATE', 1), ('januszdziedzic', 1), ('jpsollie', 1), ('janh', 1), ('avengermsoft', 1), ('K900', 1), ('ITdesk01', 1), ('IRN-Kawakaze', 1), ('ninekirin', 1), ('skbeh', 1), ('NekokeCore', 1), ('arimune15', 1), ('antnyfls', 1), ('androiddevnotes', 1), ('inangoaerokhin', 1), ('bam80', 1), ('Gingernut1978', 1), ('neggles', 1), ('Amily', 1), ('odmdas', 1), ('sashashura', 1), ('adschm', 1), ('Aaron-lv', 1), ('70599', 1), ('6667933', 1), ('22613', 1), ('yangfl', 1), ('orangecms', 1), ('dcousens', 1), ('c---', 1), ('hyyz17200', 1), ('IllyaTheHath', 1), ('CheWei-Chien', 1), ('eallion', 1), ('Catalin Toda', 1), ('univert', 1), ('Cherisher', 1), ('anonimou0', 1), ('computersforpeace', 1), ('bradfordzhang', 1), ('borkra', 1), ('Bobby', 1), ('Bob zhang', 1), ('BlacK201', 1), ('bmork', 1), ('RealFakeAccount', 1), ('Ray-CHN', 1), ('rany2', 1), ('raenye', 1), ('rthakur33', 1), ('QuintinHill', 1), ('yuhongwei380', 1), ('peterwjp2017', 1), ('CHKDSK88', 1), ('PatriciaLee3', 1), ('oliv3r', 1), ('remittor', 1), ('NueXini', 1), ('nj8u7cc', 1), ('iMusynx', 1), ('mwarning', 1), ('MkfsSion', 1), ('missing233', 1), ('msdos03', 1), ('nasbdh9', 1), ('huangsvengood', 1), ('mans0n', 1), ('kerneltoast', 1), ('pkgadd', 1), ('stangri', 1), ('soffchen', 1), ('sirpdboy', 1), ('shenghuang147', 1), ('digitalcircuit', 1), ('schoen', 1), ('selboo', 1), ('xiazeyu', 1), ('rosysong', 1), ('sjtuross', 1), ('k-ronny', 1), ('Lanchon', 1), ('tarori', 1), ('rettichschnidi', 1), ('LorenzoBianconi', 1), ('Ljzkirito', 1), ('hjh142857', 1), ('LitingLin', 1), ('Lienol', 1), ('leungyauming', 1), ('1248289414', 1), ('supercatexpert', 1), ('wkmike', 1), ('kslr', 1), ('rockdrilla', 1), ('Kivinsae Fang', 1), ('kien-truong', 1), ('KevinZjYang', 1), ('Kaz205', 1), ('Cynerd', 1), ('Wittoy', 1), ('anomeome', 1), ('Miracle1414', 1), ('etnperlong', 1), ('namiltd', 1), ('huaracheguarache', 1), ('mlyle', 1), ('aphorise', 1), ('MeIsReallyBa', 1), ('Mcxunyun666', 1), ('neocturne', 1), ('xdarklight', 1), ('Markus Stockhausen', 1), ('markmentovai', 1), ('vemek', 1), ('hrw', 1), ('ziswiler', 1), ('lostmaniac', 1), ('luizluca', 1), ('lucize', 1), ('lu-zero', 1)",300,220,
BeanWei/Dailyfresh-B2C,"这是一个 ☛全栈/全端/全平台☚ 的B2C模式的电商项目, web后台基于Django2.0 + Python3.6,  前后端分离，前端使用Vue框架开发。移动端基于Flutter开发，一套代码支持Android&IOS平台。微信小程序基于mpvue框架开发。","🔥 Dailyfresh-B2C 🔥
这是一个 ☛全栈/全端/全平台☚ 的B2C模式的电商项目, web后台基于Django2.0 + Python3.6,  前后端分离，前端使用Vue框架开发。移动端基于Flutter开发，一套代码支持Android&amp;IOS平台。微信小程序基于mpvue框架开发。

## NOTE
🚧 此项目依然在开发中, 后续会不断完善, 希望和大家一起学习。后面会写golang版的后台服务，请期待。。。

Backend

## 🔨 技术栈
* Python3.6
* Django2.0
* DjangoRestFramework
* Mysql
* Redis
* OAuth
* Pay

## 📕 开发文档 (TODO)...

## 🌟 截图

    
    


    
    



Front

## 🔨 技术栈
* Vue
* axios
* element-ui

## 📕 开发文档 (TODO)...

## 🌟 截图

    
    


    
    


    
    


    



Mobile

## 🔨 技术栈
* Flutter

## 📕 开发文档 (TODO)...

## 🌟 截图

    
    
    
    



WechatMiniProgram

## 🔨 技术栈
* mpvue

## 📕 开发文档 (TODO)...

## 🌟 截图

    
    
    


    
    
    




# LICENSE
@Apache License 2.0","'android', 'b2c', 'dart', 'django-rest-framework', 'django2', 'flutter', 'full-stack', 'ios', 'mpvue', 'python3', 'vuejs', 'wechat-mini-program'",2019-02-22T06:47:59Z,2023-01-12T09:48:30Z,1,1,85,10,"('BeanWei', 15)",0,0,
kripken/BananaBread,BananaBread is a C++ 3D game engine that runs on the web using JavaScript+WebGL+HTML,"
The BananaBread Engine
======================

---

Notice
------
BananaBread is no longer under active development. A fork of this project, [cfoust/sour](https://github.com/cfoust/sour), has continued the effort. Among other things, it adds support for multiplayer servers, upgrades the engine to the latest version of Sauerbraten, and supports all of the game's maps.

---

A port of the Cube 2/Sauerbraten 3D game engine/first person shooter to the
web, compiling C++ and OpenGL to JavaScript and WebGL using Emscripten.

See the **[FAQ](https://github.com/kripken/BananaBread/wiki/FAQ)**.


Demos
-----

**[A live demo is available](https://kripken.github.io/BananaBread/cube2/bb.html)**. Note that it requires [WebAssembly](http://webassembly.org/).


Overview
--------

Cube 2 is a compact and efficient 3D game engine. By compiling it
to JavaScript and WebGL you can run a complete first person
shooter in your web browser, using only standard web APIs and
without any plugins.

Features:

 * A multitude of visual effects including water reflection/refraction,
   parallax mapping, glare, particle effects,
   lightmaps, skeletal animation (on gpu), etc. etc.
 * Streamlined and quick physics system
  * Ragdoll physics
 * Bot AI with adjustable skill level
 * Integrated in-game editor
 * Fast performance both running on the web or natively
 * zlib license

The original engine also has a lot of other features not yet
enabled (but will be):

 * Multiplayer
  * Multiplayer editing
 * Shadowmapping


Building
--------

Get emscripten and its dependencies,

  http://emscripten.org

It's recommended to go through the emscripten tutorial to see that it is set
up properly.

Then do `emmake make client -j8` in `cube2/src/web` for a web build.
(You can also do `make` in `cube2/src/native` for a native linux build.)

You can then run `bb.html` (in `cube2/`) to see the output.

If you have any problems building, feel free to file an issue here or to
find us on emscripten IRC (see [emscripten site](http://emscripten.org)).

 * See needed.txt for some possibly useful scripts to package the output.


Running
-------

0. Run
     python -m SimpleHTTPServer 8888
   in cube2/

1. Load localhost:8888 in your browser


Modding
-------

To use maps of your own or make other kinds of changes or additions to the
artwork, see the
**[Modding](https://github.com/kripken/BananaBread/wiki/Modding)**
page.


Debugging
---------

If you append `,debug` to the URL of one of the levels, it will use
`bb.debug.js` instead of `bb.js`. The debug build has not been run
through closure compiler and is much more readable for stack traces
and profiling and so forth.


License
-------

### Code

Code is zlib licensed (just like Sauerbraten):

Copyright (C) 2001-2012 Sauerbraten authors (see cube2/src/readme_source.txt)
and BananaBread authors (see below)

This software is provided 'as-is', without any express or implied
warranty.  In no event will the authors be held liable for any damages
arising from the use of this software.

Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it
freely, subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not
   claim that you wrote the original software. If you use this software
   in a product, an acknowledgment in the product documentation would be
   appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be
   misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.

BananaBread authors:

 * Alon Zakai
 * Gregor Koch
 * Bobby Richter

### Art

All art content in this project (levels/maps, character model, etc.
etc.) is either CC-BY or CC-BY-SA, which means you can use it in
your projects, including commercial ones. If a directory does not
contain a specific license file, then it is new artwork created for
this project, which has the CC-BY license,

https://creativecommons.org/licenses/by/3.0/

and copyright is held by the Mozilla Foundation.

Previously-existing content can also be CC-BY-SA, see license files in
specific directories.

",,2012-03-10T04:58:25Z,2022-05-31T16:08:05Z,8,7,1366,109,"('kripken', 538), ('Gregor Koch', 58), ('Croydon', 2), ('cfoust', 1), ('noahcoetsee', 1), ('sbc100', 1), ('vvuk', 1), ('secretrobotron', 1)",5,5,
Syndim/XBMC-Bilibili,XBMC B站插件,"# XBMC B站视频插件

用于在XBMC上看B站视频，在XBMC12.2版本下测试通过

## 安装方法

1. [下载插件](https://github.com/Syndim/XBMC-Bilibili/archive/master.zip)
2. 打开XBMC，选择系统设置->扩展功能->从zip文件安装
3. 选择下载的zip文件
4. 安装完成

## 使用方法

1. 打开XBMC，选择视频->扩展功能
2. 选择bilibili
3. 根据需要选择使用RSS源或是使用索引源
4. 找到想看的视频，播放

## 功能列表

1. 支持通过RSS和索引播放
2. 支持弹幕（源代码修改自niconvert项目）
3. 支持按字母索引和按月索引两种索引方式
4. 支持带弹幕和不带弹幕两种播放方式
5. 弹幕透明度为50%

## 截图

![菜单列表](http://i.imgur.com/sYDZugn.png)

菜单列表

![选择界面](http://i.imgur.com/e9mNYNi.png)

选择界面

![播放画面](http://i.imgur.com/AVWGxli.png)

播放画面

## 已知问题

1. 首次选择索引源时加载时间较长（这个暂时无解，不过第二次选择就不会有这种情况）
2. 索引源不会自动更新
3. 对于因为6分钟而分成多段的视频，只有第一段有弹幕。
4. 对于因为6分钟而分成多段的视频，每段之间切换时会有明显卡顿（XBMC本身不支持无缝加载，所以:(，另外这类视频在切换时弹幕会重新从右侧出现）
5. 弹幕过多时有明显卡顿（这也无解，只能期待XBMC解析ass字幕的效率能够提高）
",,2013-06-01T16:33:25Z,2014-07-28T02:20:33Z,1,1,22,7,"('Syndim', 19)",0,0,
527515025/springBoot,springboot 框架与其它组件结合如 jpa、mybatis、websocket、security、shiro、cache等,"## 致歉
由于自己懒以及身体对issuse 解决的不及时。请大家以后提issuse 的时候写清楚 模块名 比如“springboot-SpringSecurity4” 和问题，我会抽时间抓紧解决。

## springboot-SpringSecurity0  

包含两部分代码：

* 第一是  博客 springboot+mybatis＋SpringSecurity 实现用户角色数据库管理   地址：http://blog.csdn.net/u012373815/article/details/54632176

* 第二是  博客 springBoot+springSecurity验证密码MD5加密  地址：http://blog.csdn.net/u012373815/article/details/54927070

## springboot-SpringSecurity1  

*  博客 springBoot+springSecurity 数据库动态管理用户、角色、权限（二）   地址：http://blog.csdn.net/u012373815/article/details/54633046

## springboot-SpringSecurity2

*  博客  springboot+security restful权限控制官方推荐（五）   地址：http://blog.csdn.net/u012373815/article/details/59749385

## springboot-SpringSecurity3

*  博客  springBoot+springSecurity 动态管理Restful风格权限（三） 地址：http://blog.csdn.net/u012373815/article/details/55225079  

## springboot-SpringSecurity4
* 实战，项目中正在用

## springboot-WebSocket  

包含三部分代码,三部分代码有交合:

* 第一是  博客 spring boot ＋WebSocket 广播式（一）地址：http://blog.csdn.net/u012373815/article/details/54375195  中所示代码

* 第二是  博客 spring boot ＋WebSocket 广播式（二）地址：http://blog.csdn.net/u012373815/article/details/54377937   中所示代码
 
* 第三是  博客 spring boot ＋WebSocket（三） 点对点式 地址： http://blog.csdn.net/u012373815/article/details/54380476  中所示代码



## springboot-Cache

包含两部分代码：

* 第一部分是 博客 springboot的缓存技术 地址： http://blog.csdn.net/u012373815/article/details/54564076  

* 第二部分是 博客 springboot缓存篇（二）－redis 做缓存 地址：http://blog.csdn.net/u012373815/article/details/54572687

## springboot-Cache2

* 是  博客  springboot缓存 之 GuavaCacheManager   地址：http://blog.csdn.net/u012373815/article/details/60468033



## springboot-shiro

* 是博客  springboot集成shiro 实现权限控制   地址：http://blog.csdn.net/u012373815/article/details/57532292

##springboot-shior2

是使用shior 框架调取用户权限服务，进行登录权限验证的例子，其中的用户权限服务没有写，都是用TODO 标示出来了，使用时可以根据各自的用户权限服务进行编码替换

springboot-shiro2 也是和dubbo 的结合例子是 消费者的示例。

## springboot-swagger-ui
* 博客 spring boot ＋Swagger-ui 自动生成API文档 地址： https://blog.csdn.net/u012373815/article/details/82685962

## springBoot-Quartz
* 博客 springBoot-Quartz 定时任务 地址： https://abelyang.blog.csdn.net/article/details/86740625

## springboot 整合mybatis2
* springboot 整合mybatis2 更简便的整合方式地址： https://abelyang.blog.csdn.net/article/details/89296273

## springboot+Kafka
* kafka 与 sprigboot 的结合，springboot 从Kafka中读取数据的小例子地址： https://abelyang.blog.csdn.net/article/details/89296305

## springboot+es
* Elasticsearch 与 sprigboot 的结合，springboot 操作es的小例子地址： https://abelyang.blog.csdn.net/article/details/89296320

## Springboot多数据源切换
* springboot 多个数据源的配置， 一个springboot 项目操作多个数据库的数据：https://abelyang.blog.csdn.net/article/details/89296341

##springboot-dubbo

该项目是Springboot 和 dubbo 结合的例子，是provider 的示例，提供服务。简单的写了一些用户和权限的接口没有写的很完整，主要是为了提现dubbo 服务
Springboot-shiro2 也是和dubbo 的结合例子是 消费者的示例。



##未完待续。。。
",,2016-11-07T02:13:31Z,2024-01-27T09:59:46Z,1,1,6441,351,"('527515025', 122)",0,0,
mattvv/angular-optimizely,A/B Testing in Angular with Optmizely,"# angular-optmizely
A simple directive to allow A/B testing with optimizely in angular applications.

## Usage
1. `bower install angular-optimizely`
2. Include the `ngshowvariant.js` script provided by this component into your app.
3. Add `ngshowvariant` as a module dependency to your app.
5. Insert the `ng-show-variant` directive into your template where you wish to conditionally show items.

```html

    variant alphabet is running
    variant cactus is running
    variant cactus or alphabet is running
    No variant is enabled
    either variant cactus or no variant is enabled
 
```

In optimizely, add custom javascript where you wish to change the variant:

```javascript
//set which variant you would like
window.variant= ""optmizely1"";

//tell angular the variant has changed.
var scope = angular.element(document.getElementById('main')).injector().get('$rootScope');

scope.$apply( function() {
  scope.$broadcast('$updateVariant');
});
```

## License
MIT
",,2014-01-31T22:14:21Z,2016-01-16T01:50:23Z,5,3,41,4,"('Matt Van', 6), ('Matt Van Veenendaal', 4), ('dsmrs', 2), ('hhhonzik', 1), ('msanterre', 1)",2,2,
briancollins/BCTabBarController,a Tweetie-style tab bar for the iPhone,"### BCTabBarController

BCTabBarController is a Tweetie-style tab bar for iPhone. See below for screenshots.


### Why?

There are several problems with using the standard UITabBarController including:

* It is too tall, especially in landscape mode
* The height doesn't match the UIToolbar
* It cannot be customized without using private APIs
* It has labels. Sometimes you don't need labels.

BCTabBarController is completely written from scratch using public APIs to fix all of these problems and behaves almost identically to a normal UITabBarController.

### Features

* A cool little arrow that slides around to indicate the current tab
* Support for all orientations
* Same height as a standard UIToolbar

### Usage
* Add BCTabBarController.xcodeproj to your project by dragging it into the Groups & Files sidebar.
* Select the added project file in the sidebar and then check the box next to libBCTabBarController.a
* Select your project's target and right-click and choose ""Get Info""
* Click the + icon underneath Direct Dependencies and add the BCTabBarController target
* libBCTabBarController.a should already be in the list of Linked Libraries
* Drag BCTabBarController.bundle into your project's resources
* If you haven't already, add the QuartzCore and Core Graphics frameworks to your project
* Define the method - (NSString *)iconImageName in each view controller that you add to the tab bar. It should return the filename of the grey tab icon (see creation steps below)
* See the example target for usage


### Creating icons
Unlike UITabBarController, the tab bar icons in BCTabBars are have two pre-rendered states (four if you count the retina versions). You can use the provided tab.psd file to create those files.

* Replace the layer masks in the PSD with the silhouette of the icon you wish to create
* Save the grey layer as name.png and the blue layer as name-selected.png and add them to your project. 


### Screenshots
![](http://brisy.info/upload/b2AxI.png) ![](http://brisy.info/upload/CWX5J.png)


### Acknowledgements
This controller wouldn't be possible without the original innovative design of Tweetie by Loren Brichter (atebits).
",,2010-11-06T10:52:17Z,2011-10-16T03:19:52Z,3,2,568,18,"('briancollins', 13), ('Brian Collins', 4), ('afh', 1)",1,1,
zalando-stups/planb-revocation,Plan B Revocation Service for JWT tokens,"=========================
Plan B Revocation Service
=========================

.. image:: https://travis-ci.org/zalando/planb-revocation.svg?branch=master
    :target: https://travis-ci.org/zalando/planb-revocation

.. image:: https://codecov.io/github/zalando/planb-revocation/coverage.svg?branch=master
    :target: https://codecov.io/github/zalando/planb-revocation?branch=master

.. image:: https://readthedocs.org/projects/planb/badge/?version=latest
   :target: https://readthedocs.org/projects/planb/?badge=latest
   :alt: Documentation Status

Revocation service for JWT tokens issued by the `Plan B OpenID Connect Provider`_.

(Planned) Features:

* Provide HTTP endpoint to revoke one or more JWT tokens
* Store revocation lists in Cassandra
* Provide HTTP endpoint to the `Plan B Agent`_ in order to periodically poll for revocation lists (deltas).

Building
========

.. code-block:: bash

    $ ./mvnw clean verify

Docker Image
============

.. code-block:: bash

    $ ./mvnw clean package
    $ sudo pip3 install scm-source
    $ scm-source
    $ docker build -t planb-revocation .


Setting up Local Dev Environment
================================

Run a development Cassandra node:

.. code-block:: bash

    $ docker run --name dev-cassandra -d -p 9042:9042 cassandra:2.1

Insert schema (you might need to wait a few seconds for Cassandra to boot):

.. code-block:: bash

    $ docker run -i --link dev-cassandra:cassandra --rm cassandra:2.1 cqlsh cassandra < schema.cql

General cqlsh access to your dev instance:

.. code-block:: bash

    $ docker run -it --link dev-cassandra:cassandra --rm cassandra:2.1 cqlsh cassandra
      cqlsh> DESCRIBE TABLE revocation.revocation; -- run some example query

Set up the following environment variables:

.. code-block:: bash

    $ export TOKENINFO_URL=https://example.com/oauth2/tokeninfo  # required for REST API

Run the application against your local Cassandra:

.. code-block:: bash

    $ java -jar target/planb-revocation-1.0-SNAPSHOT.jar --cassandra.contactPoints=""127.0.0.1""

Testing the Endpoints
=====================

Revoking tokens by ""sub"" claim:

.. code-block:: bash

    $ tok=... # some valid token accepted by the configured TOKENINFO_URL
    $ curl -X POST \
         -H ""Authorization: Bearer $tok"" \
         -H 'Content-Type: application/json' \
         -d '{""type"": ""CLAIM"", ""data"": {""claims"": {""sub"": ""jdoe""}}}' \
         ""http://localhost:8080/revocations""

Configuration
=============

``TOKENINFO_URL``
    OAuth2 token info URL (can point to Plan B Token Info), this is used to secure the ``/revocations`` REST endpoint.
``CASSANDRA_CONTACT_POINTS``
    Comma separated list of Cassandra cluster IPs.
``CASSANDRA_CLUSTER_NAME``
    Cassandra cluster name.
``API_SECURITY_REVOKE_EXPR``
    Spring security expression, e.g. ""#oauth2.hasScope('planb-revocation.write')""
``REVOCATION_HASHING_SALT``
    Shared salt with Token Info. Used for hasing tokens for the Plan B Token Info.

.. _Plan B OpenID Connect Provider: https://github.com/zalando/planb-provider
.. _Plan B Agent: https://github.com/zalando/planb-agent
",,2016-02-11T10:03:34Z,2019-11-01T14:08:49Z,17,8,9,14,"('gargravarr', 207), ('jbellmann', 34), ('hjacobs', 28), ('Daniel del Hoyo', 25), ('Andre Hartmann', 19), ('Jan-M', 14), ('jbspeakr', 11), ('vroldanbet', 10), ('Victor Roldan Betancort', 8), ('danieldelhoyo', 4), ('Adetunji Akintunde Akinde', 2), ('Víctor Roldán Betancort', 2), ('adetunjiakintundeakinde', 2), ('Lauri Apple', 1), ('Rodrigo Reis', 1), ('jeffsantarossa', 1), ('lmineiro', 1)",4,1,
conanbatt/OpenKaya,Kaya's open-sourced side,"# Kaya Open Source Project.

Kaya will open source parts and bits of the application incrementally over time, until a stable development community is achieved.

Open-source code is subject to as rigorous standards as the server. Code must have decent unit test coverage, and well documented.

## Management

OpenKaya has grown quite a bit and i've included a public tracker: https://www.pivotaltracker.com/projects/470995. 

If you are working on something and dont have member access to edit the chores and such you can email gabriel.benmergui@kaya.gs.

If you want to do something but don't know what, visiting the tracker is a good start to see what is known to be missing. Any ideas are welcome and we will support it with advice, code, overview as it is fit, and finally integrate it into the Kaya experience.


## Open Sourced Modules

This modules have been opened and are ready to be forked:

* Rating System
* Score estimator
* Game Scoring (Chinese rules missing )
* Tournament & League systems (**Higher priority**)
* Time System (Bronstein)

# Rating System

## Dependencies & tools

Code utilizes ruby 1.9.2 which is the version used by the server.

## FAQ

### Why is this open?

There are many rating systems, and even more implementations of each theoretical model. Although I (Gabriel) had an idea of a simple system, i concluded it would be better to compare options, and also making it open so it can be tweaked and improved by the community that wants to do so.

### What system will Kaya use?

We dont know yet and this is a vital part on deciding what are we going to use in the end. This example is mean to be able to compare different systems under the same data. Our decision will be based mainly on the balance of Accuracy and Performance.

### What else besides Accuracy and Performance matters?

The impression and subjectivity players get from the system. An accurate system that leaves people unhappy by any reason has a negative impact.

Examples of the psychological aspect of a system.

* If the system makes players have a very heavy rating, it will push them into constantly making new accounts, worsening the whole experience.(KGS)
* It must not be frustrating to achieve the proper rank on an account, for example, by having to play too many games to get a confident rank. (Wbaduk/Tygem)
* Unrated accounts (new players) shouldnt be uninteresting to play with, due to risk/benefit of playing them.(KGS)
* Unfair Handicaps or uneven probabilities causing different rating values on game results. Kaya will disencourage playing with imbalanced handicap and that effect can be considered to be avoided within the same category. (i.e. Strong 5d gives komi to weak 5d, to prevent the former to have to win many more games than the latter).

## Notes

Remember that there will be a handicap! The rating system must support that to some degree. There are basically 2 strategies to deal with this (and their mix):

* Making the rating impact differently if two players of different rating play even
* Making all games have equal importance for both players by adjusting the probabilities of winning with handicap (to any degree, including in the same rank)

## Documentation

Inside the rating folder there is a structure of files.

System : the mock of an application that would use the rating system. It is fairly straight-forward: it takes (game) results and holds the information of all players, which in turn is passed to the rating strategy.

Strategies : Inside the folder there is a ridicolously simple system as a demonstration to how to make a system. It is absolutely state-less. Systems that require other information such as date or such can be easily changed and accessed from the passed on hash. Having a more comprehensive history can also be done by Just extending the Player model under system.rb.

Runner: The script that runs the simulation. It will run with a sample data-set and simple point system and write to a file the final rating of all players, rank and a benchmark on how long the process took.

**new** Added arguments parsing on runner.
You need to specify which rating system to use through the args (more than one possible).

    ruby runner.rb Glicko SimplePoint

Use ""Validate"" argument to make the system validate users rating after each result is added. Good to check consistency at any point.

    ruby runner.rb Glicko Validate

## Tests

To make sure the rating systems do what they intended, unit tests must be implemented. After adding a rating system, you can add code under tests/#{rating_system}_test.rb that verifies its not giving crazy results. This is a vital requirement to merge rating systems into master, as it is the only way i have to know the code works without going deep into the details of each implementation.

To run tests:

    gem install cutest

    ruby tests/#{rating_system}_test.rb


# Game Scoring

## Dependencies & tools

Current code is pure Javascript and can be run from within the browser without any installation.

## Details

Score.js is the javascript that will calculate score based on an array of information of a Go Board. A first batch of tests is written that would cover most use cases of score.
It is missing some more examples of chinese scoring which is secondary at this point.

The algorithm has to spit out an object with the score of each player. A ""painted"" array marking which intersection was counted for whom would be very convenient also.

Some caveats: be careful with Seki! it is counted as no points under japanese rules, regardless of eyes. There is a test case that will likely fail with any intuitive algorithm for determining score.

This will probably be extended for Score estimation.


# Bot Interface
To be documented and updated. Current code is not usable by Kaya.gs server.

## Dependencies & tools

Ruby 1.8.7 as required by mechanize.

## Details

Working on an interface to run bots remotely as if they were users. Bots will have a special dedicated api for simplicity, easy maintenance and increased performance.

WARNING: Current code is highly unstable and subject to big changes, depending on the implementation of the routes in the server.

# Tournament & League Systems

Go to the tournament folder for specific documentation

# Time Systems

## Dependencies & tools

Current code is pure Javascript and can be run from within the browser without any installation.

## Walkthrough

To run, just open the html files with your browser. 
To work on it, create a new html with test cases for your system, then work on the js files. Code without tests will be rejected!

## Details

A full interface wich supports time systems has been implemented. It's fully written in JavaScript and emulates the interaction between the board, the timesystem and the server. It's fully tested with QUnit. Further implementations must respect the interaction and testing structure.

Checkout the ""time"" folder if you're interested in working on this.

You can see some time systems explained in the link ahead.

http://en.wikipedia.org/wiki/Game_clock#Time_controls

# Credits

OpenKaya grows thanks to the contributions of several collaborators. All of them receive the fire Kanji(火) recognition in Kaya.

* AOA
* (killerducky)yoyoma
* Enders
* (John Andrichak IV)Verse

# LICENSE

OpenKaya by Kaya is licensed under a Creative Commons Attribution-ShareAlike 3.0 Unported License.
",,2011-09-23T15:05:24Z,2013-01-18T21:52:32Z,17,8,68,17,"('Gabriel', 111), ('Conanbatt', 75), ('aleskiii', 45), ('Conanbatt', 36), ('darthpolly', 36), ('Enders', 33), ('gryn', 22), ('conanbatt', 19), ('aolsen', 15), ('conanbatt', 9), ('zelanter', 8), ('aolsen', 4), ('dpflug', 4), ('John Andrichak IV', 4), ('emancu', 4), ('unknown', 4), ('James McClain', 2)",0,0,
TdP-esami/2016-06-08,Simulazione esame 2016-06-08 Punto B,"# 2016-06-08
Simulazione esame 2016-06-08 Punto B

Si consideri il database “formula1”, contenente informazioni su tutte le gare, i costruttori, i piloti ed i circuiti di Formula 1, estratto dai dati pubblicati sul sito http://ergast.com/mrd/

Si intende costruire un’applicazione JavaFX che permetta di interrogare tale base dati, e calcolare informazioni a proposito delle gare disputate.

L’applicazione dovrà svolgere le seguenti funzioni:

* Permettere all’utente di selezionare un l’anno di una stagione (tabella seasons) in cui si sia disputato un campionato. Dopo aver selezionato l’anno, l’utente può selezionare uno dei circuiti (tabella circuits) nei quali si sono disputate delle gare (races) nell’anno indicato. La tendina contenente l’elenco dei circuiti deve essere aggiornata automaticamente ogniqualvolta cambi l’anno selezionato. Alla pressione del tasto “Info Gara”, l’applicazione dovrà visualizzare le informazioni associati a tale gara (races) e l’elenco dei piloti (drivers) che vi hanno partecipato.

* Permettere all’utente di selezionare, dall’apposita tendina (aggiornata in seguito alla pressione di “Info Gara”), uno dei piloti partecipanti, e simulare una Fanta-gara di Formula 1 di tale pilota, che gareggi contro il sé stesso degli altri anni nel circuito selezionato. In altre parole, si simuli la presenza di tanti corridori, tutti corrispondenti allo stesso pilota, ciascuno dei quali corra con i tempi di giro (laptimes) che quel pilota ha ottenuto in ciascuno degli anni nei quali ha corso in tale circuito. Si dovrà simulare la sequenza di eventi di “passaggio dal via”, ed a ciascun passaggio si dovrà schedulare l’evento relativo al prossimo passaggio, tenendo conto del tempo di giro registrato dal pilota. In questa fanta-gara, qualora un pilota venga doppiato (ossia sia 2 giri indietro rispetto al primo), deve essere eliminato. Ad ogni giro si deve anche tenere traccia dell’ordine dei piloti in gara, ed assegnare un fanta-punto ogni volta che un pilota compie un sorpasso (cioè al giro successivo si trova ad una posizione migliore del giro precedente). Al termine della simulazione, si stampi la classifica dei fanta-punti ottenuti dai piloti (esclusi gli eliminati).

Nella realizzazione del codice, si lavori a partire dalle classi (Bean e DAO, FXML) ed il database contenuti nel progetto scaricabile. È ovviamente permesso aggiungere o modificare classi e metodi.
Tutti i possibili errori di immissione, validazione dati, accesso al database, ed algoritmici devono essere gestiti, non sono ammesse eccezioni generate dal programma.
",,2018-06-12T15:24:12Z,2018-06-12T18:39:08Z,2,0,0,4,"('Jimmy', 3), ('jimmy-sonny', 1)",1,0,
ubuwaits/beautiful-web-type,In-depth guide to the best open-source typefaces: https://beautifulwebtype.com,"# [Beautiful Web Type](https://beautifulwebtype.com)

In October 2018 I released a completely re-thought and re-designed version of this project. The new version aims to provide a complete look at each typeface, cataloging all the available weights and styles, the full glyph set, the kerning quality, OpenType features, recommended pairings and more. I will highlight only typefaces that show a high level of quality.

The original version of the site is archived here: https://beautifulwebtype.com/v1/

## Changelog

### 23 Oct 2023
* **Added [TASA Orbiter](https://beautifulwebtype.com/tasa-orbiter/)**.

### 8 Apr 2023
 * **Updated [Source Code Pro](https://beautifulwebtype.com/source-code-pro/)** to version 1.024.

### 22 Nov 2020
* **Added [Fraunces](https://beautifulwebtype.com/fraunces/)**.
* **Added pairing example** for Fraunces and Libre Franklin.
* **Added pairing example** for Messapia and Inter.

### 21 Nov 2020
* **Added [Inter](https://beautifulwebtype.com/inter/)**.
* **Updated glyph inspector** to include plain text character in sidebar for easier copying.

### 23 May 2020
* **Added [Messapia](https://beautifulwebtype.com/messapia/)**.
* **Added [Crimson Pro](https://beautifulwebtype.com/crimson-pro/)**.
* **Updated [Source Code Pro](https://beautifulwebtype.com/source-code-pro/)** to variable version.
* **Updated [iA Writer Quattro](https://beautifulwebtype.com/ia-writer-quattro/)** to variable version.
* **Updated [Fire Code](https://beautifulwebtype.com/fira-code/)** to v4.0 variable version.
* **Updated [Lora](https://beautifulwebtype.com/lora/)** to variable version.
* **Updated [Work Sans](https://beautifulwebtype.com/work-sans/)** to variable version.
* **Updated [Space Grotesk](https://beautifulwebtype.com/space-grotesk/)** to variable version.
* **Updated Manrope** to variable version.
* **Updated [Source Serif Pro](https://beautifulwebtype.com/source-serif-pro/)** to variable version.
* **Updated [Source Sans Pro](https://beautifulwebtype.com/source-sans-pro/)** to variable version.

**[Read full Changelog](https://github.com/ubuwaits/beautiful-web-type/blob/gh-pages/CHANGELOG.md)**

## Featured typefaces
All typefaces are licensed under the [SIL Open Font License](https://scripts.sil.org/OFL).

* [Alegreya](https://beautifulwebtype.com/alegreya/) &#8594; [Glyph inspector](https://beautifulwebtype.com/alegreya/glyphs/)
* [Alegreya Sans](https://beautifulwebtype.com/alegreya-sans/) &#8594; [Glyph inspector](https://beautifulwebtype.com/alegreya-sans/glyphs/)
* [Archivo](https://beautifulwebtype.com/archivo/) &#8594; [Glyph inspector](https://beautifulwebtype.com/archivo/glyphs/)
* [Archivo Black](https://beautifulwebtype.com/archivo-black/) &#8594; [Glyph inspector](https://beautifulwebtype.com/archivo-black/glyphs/)
* [BioRhyme](https://beautifulwebtype.com/biorhyme/) &#8594; [Glyph inspector](https://beautifulwebtype.com/biorhyme/glyphs/)
* [BioRhyme Expanded](https://beautifulwebtype.com/biorhyme-expanded/) &#8594; [Glyph inspector](https://beautifulwebtype.com/biorhyme-expanded/glyphs/)
* [Cooper Hewitt](https://beautifulwebtype.com/cooper-hewitt/) &#8594; [Glyph inspector](https://beautifulwebtype.com/cooper-hewitt/glyphs/)
* [Crimson Pro](https://beautifulwebtype.com/crimson-pro/) &#8594; [Glyph inspector](https://beautifulwebtype.com/crimson-pro/glyphs/)
* [Fira Code](https://beautifulwebtype.com/fira-code/) &#8594; [Glyph inspector](https://beautifulwebtype.com/fira-code/glyphs/)
* [FiraGo](https://beautifulwebtype.com/firago/) &#8594; [Glyph inspector](https://beautifulwebtype.com/firago/glyphs/)
* [Fivo Sans](https://beautifulwebtype.com/fivo-sans/) &#8594; [Glyph inspector](https://beautifulwebtype.com/fivo-sans/glyphs/)
* [Fivo Sans Modern](https://beautifulwebtype.com/fivo-sans-modern/) &#8594; [Glyph inspector](https://beautifulwebtype.com/fivo-sans-modern/glyphs/)
* [Fraunces](https://beautifulwebtype.com/fraunces/) &#8594; [Glyph inspector](https://beautifulwebtype.com/fraunces/glyphs/)
* [iA Writer Quattro](https://beautifulwebtype.com/ia-writer-quattro/) &#8594; [Glyph inspector](https://beautifulwebtype.com/ia-writer-quattro/glyphs/)
* [IBM Plex Mono](https://beautifulwebtype.com/ibm-plex-mono/) &#8594; [Glyph inspector](https://beautifulwebtype.com/ibm-plex-mono/glyphs/)
* [IBM Plex Sans](https://beautifulwebtype.com/ibm-plex-sans/) &#8594; [Glyph inspector](https://beautifulwebtype.com/ibm-plex-sans/glyphs/)
* [IBM Plex Sans Condensed](https://beautifulwebtype.com/ibm-plex-sans-condensed/) &#8594; [Glyph inspector](https://beautifulwebtype.com/ibm-plex-sans-condensed/glyphs/)
* [IBM Plex Serif](https://beautifulwebtype.com/ibm-plex-serif/) &#8594; [Glyph inspector](https://beautifulwebtype.com/ibm-plex-serif/glyphs/)
* [Inria Sans](https://beautifulwebtype.com/inria-sans/) &#8594; [Glyph inspector](https://beautifulwebtype.com/inria-sans/glyphs/)
* [Inria Serif](https://beautifulwebtype.com/inria-serif/) &#8594; [Glyph inspector](https://beautifulwebtype.com/inria-serif/glyphs/)
* [Inter](https://beautifulwebtype.com/inter/) &#8594; [Glyph inspector](https://beautifulwebtype.com/inter/glyphs/)
* [Jost*](https://beautifulwebtype.com/jost/) &#8594; [Glyph inspector](https://beautifulwebtype.com/jost/glyphs/)
* [Le Murmure](https://beautifulwebtype.com/le-murmure/) &#8594; [Glyph inspector](https://beautifulwebtype.com/le-murmure/glyphs/)
* [Libre Franklin](https://beautifulwebtype.com/libre-franklin/) &#8594; [Glyph inspector](https://beautifulwebtype.com/libre-franklin/glyphs/)
* [Lora](https://beautifulwebtype.com/lora/) &#8594; [Glyph inspector](https://beautifulwebtype.com/lora/glyphs/)
* [Messapia](https://beautifulwebtype.com/messapia/) &#8594; [Glyph inspector](https://beautifulwebtype.com/messapia/glyphs/)
* [Oswald](https://beautifulwebtype.com/oswald/) &#8594; [Glyph inspector](https://beautifulwebtype.com/oswald/glyphs/)
* [Playfair Display](https://beautifulwebtype.com/playfair-display/) &#8594; [Glyph inspector](https://beautifulwebtype.com/playfair-display/glyphs/)
* [Poppins](https://beautifulwebtype.com/poppins/) &#8594; [Glyph inspector](https://beautifulwebtype.com/poppins/glyphs/)
* [Rakkas](https://beautifulwebtype.com/rakkas/) &#8594; [Glyph inspector](https://beautifulwebtype.com/rakkas/glyphs/)
* [Source Code Pro](https://beautifulwebtype.com/source-code-pro/) &#8594; [Glyph inspector](https://beautifulwebtype.com/source-code-pro/glyphs/)
* [Source Sans Pro](https://beautifulwebtype.com/source-sans-pro/) &#8594; [Glyph inspector](https://beautifulwebtype.com/source-sans-pro/glyphs/)
* [Source Serif Pro](https://beautifulwebtype.com/source-serif-pro/) &#8594; [Glyph inspector](https://beautifulwebtype.com/source-serif-pro/glyphs/)
* [Space Grotesk](https://beautifulwebtype.com/space-grotesk/) &#8594; [Glyph inspector](https://beautifulwebtype.com/space-grotesk/glyphs/)
* [Space Mono](https://beautifulwebtype.com/space-mono/) &#8594; [Glyph inspector](https://beautifulwebtype.com/space-mono/glyphs/)
* [TASA Orbiter](https://beautifulwebtype.com/tasa-orbiter/) &#8594; [Glyph inspector](https://beautifulwebtype.com/tasa-orbiter/glyphs/)
* [Vollkorn](https://beautifulwebtype.com/vollkorn/) &#8594; [Glyph inspector](https://beautifulwebtype.com/vollkorn/glyphs/)
* [Work Sans](https://beautifulwebtype.com/work-sans/) &#8594; [Glyph inspector](https://beautifulwebtype.com/work-sans/glyphs/)
* [Zilla Slab](https://beautifulwebtype.com/zilla-slab/) &#8594; [Glyph inspector](https://beautifulwebtype.com/zilla-slab/glyphs/)

## Suggesting Typefaces

I'm happy to receive suggestions for typefaces via [a GitHub issue](https://github.com/ubuwaits/beautiful-web-type/issues). When sending suggestions please include an example or two of the typeface in use. This helps me to make an initial evaluation of the typeface.

## Local development

To work with the site locally, start the Jekyll server and watch the Sass files with:

    rake s
","'font', 'fonts', 'google-fonts', 'typeface', 'typography', 'webfonts'",2012-01-12T05:23:14Z,2023-12-02T10:25:34Z,10,7,7243,1092,"('ubuwaits', 392), ('Chad Mazzola', 34), ('koester', 3), ('Thomas Baker', 2), ('Arantor', 1), ('flevour', 1), ('jorenvanhee', 1), ('Rafal Chmiel', 1), ('T1mL3arn', 1), ('iapellaniz', 1)",6,5,
elastic/beats,:tropical_fish: Beats - Lightweight shippers for Elasticsearch & Logstash ,"[![Build Status](https://beats-ci.elastic.co/job/Beats/job/beats/job/main/badge/icon)](https://beats-ci.elastic.co/job/Beats/job/beats/job/main/)
[![Go Report Card](https://goreportcard.com/badge/github.com/elastic/beats)](https://goreportcard.com/report/github.com/elastic/beats)
[![Reviewed by Hound](https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg)](https://houndci.com)

# Beats - The Lightweight Shippers of the Elastic Stack

The [Beats](https://www.elastic.co/beats) are lightweight data
shippers, written in Go, that you install on your servers to capture all sorts
of operational data (think of logs, metrics, or network packet data). The Beats
send the operational data to Elasticsearch, either directly or via Logstash, so
it can be visualized with Kibana.

By ""lightweight"", we mean that Beats have a small installation footprint, use
limited system resources, and have no runtime dependencies.

This repository contains
[libbeat](https://github.com/elastic/beats/tree/main/libbeat), our Go
framework for creating Beats, and all the officially supported Beats:

Beat  | Description
--- | ---
[Auditbeat](https://github.com/elastic/beats/tree/main/auditbeat) | Collect your Linux audit framework data and monitor the integrity of your files.
[Filebeat](https://github.com/elastic/beats/tree/main/filebeat) | Tails and ships log files
[Functionbeat](https://github.com/elastic/beats/tree/main/x-pack/functionbeat) | Read and ships events from serverless infrastructure.
[Heartbeat](https://github.com/elastic/beats/tree/main/heartbeat) | Ping remote services for availability
[Metricbeat](https://github.com/elastic/beats/tree/main/metricbeat) | Fetches sets of metrics from the operating system and services
[Packetbeat](https://github.com/elastic/beats/tree/main/packetbeat) | Monitors the network and applications by sniffing packets
[Winlogbeat](https://github.com/elastic/beats/tree/main/winlogbeat) | Fetches and ships Windows Event logs
[Osquerybeat](https://github.com/elastic/beats/tree/main/x-pack/osquerybeat) | Runs Osquery and manages interraction with it.

In addition to the above Beats, which are officially supported by
[Elastic](https://elastic.co), the community has created a set of other Beats
that make use of libbeat but live outside of this Github repository. We maintain
a list of community Beats
[here](https://www.elastic.co/guide/en/beats/libbeat/master/community-beats.html).

## Documentation and Getting Started

You can find the documentation and getting started guides for each of the Beats
on the [elastic.co site](https://www.elastic.co/guide/):

* [Beats platform](https://www.elastic.co/guide/en/beats/libbeat/current/index.html)
* [Auditbeat](https://www.elastic.co/guide/en/beats/auditbeat/current/index.html)
* [Filebeat](https://www.elastic.co/guide/en/beats/filebeat/current/index.html)
* [Functionbeat](https://www.elastic.co/guide/en/beats/functionbeat/current/index.html)
* [Heartbeat](https://www.elastic.co/guide/en/beats/heartbeat/current/index.html)
* [Metricbeat](https://www.elastic.co/guide/en/beats/metricbeat/current/index.html)
* [Packetbeat](https://www.elastic.co/guide/en/beats/packetbeat/current/index.html)
* [Winlogbeat](https://www.elastic.co/guide/en/beats/winlogbeat/current/index.html)

## Documentation and Getting Started information for the Elastic Agent

You can find the documentation and getting started guides for the Elastic Agent
on the [elastic.co site](https://www.elastic.co/downloads/elastic-agent)

## Getting Help

If you need help or hit an issue, please start by opening a topic on our
[discuss forums](https://discuss.elastic.co/c/beats). Please note that we
reserve GitHub tickets for confirmed bugs and enhancement requests.

## Downloads

You can download pre-compiled Beats binaries, as well as packages for the
supported platforms, from [this page](https://www.elastic.co/downloads/beats).

## Contributing

We'd love working with you! You can help make the Beats better in many ways:
report issues, help us reproduce issues, fix bugs, add functionality, or even
create your own Beat.

Please start by reading our [CONTRIBUTING](CONTRIBUTING.md) file.

## Building Beats from the Source

See our [CONTRIBUTING](CONTRIBUTING.md) file for information about setting up
your dev environment to build Beats from the source.

## Snapshots

For testing purposes, we generate snapshot builds that you can find [here](https://artifacts-api.elastic.co/v1/search/8.0-SNAPSHOT/). Please be aware that these are built on top of main and are not meant for production.

## CI

### PR Comments

It is possible to trigger some jobs by putting a comment on a GitHub PR.
(This service is only available for users affiliated with Elastic and not for open-source contributors.)

* [beats][]
  * `jenkins run the tests please` or `jenkins run tests` or `/test` will kick off a default build.
  * `/test macos` will kick off a default build with also the `macos` stages.
  * `/test ` will kick off the default build for the given PR in addition to the `` build itself.
  * `/test  for macos` will kick off a default build with also the `macos` stage for the ``.
* [apm-beats-update][]
  * `/run apm-beats-update`
* [apm-beats-packaging][]
  * `/package` or `/packaging` will kick of a build to generate the packages for beats.
* [apm-beats-tester][]
  * `/beats-tester` will kick of a build to validate the generated packages.

### PR Labels

It's possible to configure the build on a GitHub PR by labelling the PR with the below labels

* `` to force the following builds to run the stages for the ``
* `macOS` to force the following builds to run the `macos` stages.

[beats]: https://beats-ci.elastic.co/job/Beats/job/beats/
[apm-beats-update]: https://beats-ci.elastic.co/job/Beats/job/apm-beats-update/
[apm-beats-packaging]: https://beats-ci.elastic.co/job/Beats/job/packaging/
[apm-beats-tester]: https://beats-ci.elastic.co/job/Beats/job/beats-tester/
","'filebeat', 'heartbeat', 'metricbeat', 'packetbeat', 'winlogbeat'",2014-02-05T19:01:02Z,2024-06-18T14:19:52Z,828,400,12040,674,"('ruflin', 1754), ('kaiyan-sheng', 1454), ('andrewkroh', 1200), ('Tudor Golubenco', 983), ('monicasarbu', 894), ('dedemorton', 891), ('tsg', 704), ('Steffen Siering', 534), ('jsoriano', 527), ('urso', 459), ('kvch', 413), ('v1v', 360), ('adriansr', 349), ('efd6', 344), ('ycombinator', 307), ('apmmachine', 294), ('ph', 252), ('andrewvc', 243), ('ChrsMark', 239), ('fearful-symmetry', 226), ('michalpristas', 211), ('exekias', 188), ('blakerouse', 163), ('P1llus', 155), ('leehinman', 138), ('sayden', 133), ('marc-gr', 133), ('faec', 129), ('narph', 119), ('vjsamuel', 115), ('Christoph Wurm', 88), ('aleksmaus', 87), ('kuisathaverat', 85), ('belimawr', 82), ('mtojek', 73), ('dependabotbot', 72), ('simitt', 72), ('cmacknz', 65), ('rdner', 64), ('andrewstucki', 62), ('mergifybot', 59), ('bmorelli25', 58), ('webmat', 54), ('graphaelli', 54), ('elasticmachine', 53), ('legoguy1000', 51), ('andresrc', 51), ('cyrilleverrier', 46), ('dliappis', 45), ('mdelapenya', 45), ('ShourieG', 42), ('MichaelKatsoulis', 40), ('Pablo Mercado', 39), ('oakrizan', 38), ('emilioalvap', 38), ('Carlos Pérez-Aradros Herce', 37), ('tetianakravchenko', 36), ('michel-laterman', 35), ('lcawl', 34), ('alexsapran', 33), ('sharbuz', 32), ('Andrea Spacca', 30), ('constanca-m', 30), ('AndersonQ', 30), ('gpop63', 30), ('radoondas', 29), ('endorama', 28), ('zmoog', 27), ('axw', 25), ('berfinsari', 25), ('mikemadden42', 25), ('pazone', 25), ('klacabane', 25), ('Lei Qiu', 24), ('vigneshshanmugam', 24), ('taylor-swanson', 23), ('martinscholz83', 23), ('jalvz', 23), ('7AC', 23), ('jlind23', 22), ('kilfoyle', 18), ('gsantoro', 18), ('kush-elastic', 16), ('McStork', 15), ('EamonnTP', 15), ('sorantis', 14), ('pkoutsovasilis', 14), ('eperry', 14), ('matschaffer', 13), ('cachedout', 13), ('newly12', 12), ('darxriggs', 12), ('kkirsche', 11), ('janniten', 11), ('Amanda H. L. de Andrade', 11), ('jarpy', 11), ('mjwolf', 11), ('bhapas', 11), ('miltonhultgren', 10), ('gizas', 10), ('Ray Qiu', 10), ('roncohen', 10), ('Keylor42', 10), ('kel', 10), ('shmsr', 10), ('medcl', 10), ('kofemann', 9), ('philippkahr', 9), ('christiangalsterer', 9), ('lucabelluccini', 9), ('ritalwar', 9), ('ev1yehor', 8), ('immon', 8), ('jasperla', 8), ('kgeller', 7), ('kcreddy', 7), ('chemamartinez', 7), ('jrodewig', 7), ('odacremolbap', 7), ('kwinstonix', 7), ('mmat11', 6), ('yug-rajani', 6), ('chrisberkhout', 6), ('simianhacker', 6), ('athom', 6), ('muthu-mps', 6), ('dadoonet', 6), ('ewgRa', 6), ('florianl', 6), ('lalit-satapathy', 6), ('lmars', 6), ('breml', 6), ('herrBez', 6), ('Thomas Paulmyer', 6), ('rvillablanca', 6), ('pierrehilbert', 6), ('kovyrin', 6), ('ntfrnzn', 5), ('chrsblck', 5), ('rshriram', 5), ('premendrasingh', 5), ('kruskall', 5), ('alakahakai', 5), ('DanRoscigno', 5), ('jeniawhite', 5), ('islamgulov', 5), ('pragkent', 5), ('clintongormley', 5), ('vinit-chauhan', 5), ('crespocarlos', 5), ('leweafan', 5), ('Ron Cohen', 5), ('mingchun-zhao', 4), ('geekpete', 4), ('robin13', 4), ('r00tu53r', 4), ('eskibars', 4), ('skatsaounis', 4), ('Thiago Souza', 4), ('tommyers-elastic', 4), ('VihasMakwana', 4), ('github-actionsbot', 4), ('leahleahy', 4), ('marqc', 4), ('stuartnelson3', 4), ('lucasfcosta', 4), ('walktall', 4), ('eedugon', 4), ('AndyHunt66', 4), ('cvaldemar', 4), ('amitkanfer', 4), ('hartfordfive', 4), ('agithomas', 4), ('sincejune', 4), ('douaejeouit', 4), ('emirozer', 4), ('glefloch', 4), ('nxei', 4), ('Mathieu Martin', 4), ('marclop', 4), ('magnusbaeck', 4), ('alrs', 4), ('KS Chan', 4), ('joshboon', 4), ('dolftax', 4), ('ishleenk17', 4), ('iahmedov', 4), ('a3dho3yn', 4), ('justinkambic', 3), ('mgreau', 3), ('Crazybus', 3), ('Poh Zi How', 3), ('rwaight', 3), ('shahzad31', 3), ('st1t', 3), ('Stéphane Bunel', 3), ('consulthys', 3), ('mike-the-automator', 3), ('jtinkus', 3), ('liuwenping', 3), ('markwalkom', 3), ('paschdan', 3), ('wangdisdu', 3), ('wlovins', 3), ('elaron', 3), ('original-brownbear', 3), ('tehmoon', 3), ('haesbaert', 3), ('buehler', 3), ('Adron', 3), ('hinchliff', 3), ('Alban Mouton', 3), ('devcorpio', 3), ('klizhentas', 3), ('Amanda H. L. de Andrade Katz', 3), ('recrsn', 3), ('peasead', 3), ('111andre111', 3), ('raboof', 3), ('boaz0', 3), ('olimpias', 3), ('cwurm', 3), ('jmlrt', 3), ('jsoref', 3), ('joshdover', 3), ('spacewrangler', 3), ('PhaedrusTheGreek', 3), ('jasontedor', 3), ('dharada', 3), ('kortschak', 3), ('darupedk', 3), ('MerlinDMC', 3), ('girodav', 3), ('MakoWish', 3), ('bestpath-gb', 3), ('StefanSa', 2), ('shoothzj', 2), ('Sterchele Nicolas', 2), ('mountkin', 2), ('Scott Crespo', 2), ('ravinaik1312', 2), ('dimitris-athanasiou', 2), ('mieciu', 2), ('pgomulka', 2), ('Pradeep Chhetri', 2), ('Pradeep Chhetri', 2), ('ppf2', 2), ('dpavlos', 2), ('dddpaul', 2), ('paulb-elastic', 2), ('coffeepac', 2), ('oren-zohar', 2), ('nchaulet', 2), ('Nathan Franzen', 2), ('Mike Roberts', 2), ('Mike Place', 2), ('mrauter', 2), ('bmoylan', 2), ('spacewander', 2), ('kunsonx', 2), ('ShinJJang', 2), ('rzmf', 2), ('platform-ingest', 2), ('pawankt', 2), ('niraj-elastic', 2), ('maireanu', 2), ('lucian-ioan', 2), ('hungnguyen-elastic', 2), ('hitchatwork', 2), ('f0', 2), ('dainok', 2), ('bklise-goomzee', 2), ('sakurai-youhei', 2), ('YaSuenag', 2), ('wixaw', 2), ('mvitaly', 2), ('crazyvikas23', 2), ('BeLi4L', 2), ('ugosan', 2), ('jakommo', 2), ('ioandr', 2), ('ioanatia', 2), ('zecke', 2), ('Hadadi Péter', 2), ('Corwind', 2), ('gonzaloe', 2), ('pgilad', 2), ('fassisrosa', 2), ('zipperle', 2), ('FStelzer', 2), ('ebeahan', 2), ('deepujain', 2), ('DebashisMondal', 2), ('ctindel', 2), ('carlosdelest', 2), ('OhBonsai', 2), ('bobapple', 2), ('austinsonger', 2), ('amirbenun', 2), ('afharo', 2), ('amannocci', 2), ('barkbay', 2), ('mjmbischoff', 2), ('mmatur', 2), ('mib1185', 2), ('makkes', 2), ('praseodym', 2), ('mariosnikolaou', 2), ('ManojS-shetty', 2), ('kesslerm', 2), ('lukebakken', 2), ('inqueue', 2), ('phenomenes', 2), ('jgeiger', 2), ('John Schulz', 2), ('jordansissel', 2), ('josephlewis42', 2), ('lowryxiao', 2), ('LaZyDK', 2), ('kpollich', 2), ('kckecheng', 2), ('Kerry350', 2), ('Kostas Botsas', 2), ('Ronny Trommer', 1), ('Rockybean', 1), ('Robin Kearney', 1), ('Robin Clarke', 1), ('Roberto Seldner', 1), ('Robert Paschedag', 1), ('Robert Blank - Reservix', 1), ('Rickard', 1), ('Riccardo Calixte', 1), ('Ricardo Katz', 1), ('Reio Remma', 1), ('Ravi Vagadia', 1), ('Ryan', 1), ('Ravi Raju', 1), ('Ravi Naik', 1), ('Ramin Baradari', 1), ('Rajiv Shah', 1), ('Raffael Santschi', 1), ('Piotr Kobziakowski', 1), ('Pierre PACI', 1), ('Pierre Gayvallet', 1), ('Phillip Baker', 1), ('Phil', 1), ('Petr Studeny', 1), ('Peter Nagy', 1), ('Peter Halliday', 1), ('Peter Ansell', 1), ('Per', 1), ('Pavan K Tambabathula', 1), ('Paulo', 1), ('Patrik Pihlström', 1), ('matthagenbuch', 1), ('Steve Mokris', 1), ('Stephen Solka', 1), ('Stephan Renatus', 1), ('Stef Nestor', 1), ('Stef Nestor', 1), ('Stan', 1), ('Sriranganathan', 1), ('Sreenu Sasubilli', 1), ('Spencer Niemi', 1), ('Sophie Chang', 1), ('Slavik', 1), ('Sitaram Shelke', 1), ('Simon Thorley', 1), ('Silvan Jegen', 1), ('Silambarasan', 1), ('Shunichi Shinohara', 1), ('Shanavas M', 1), ('Shahzad', 1), ('Shaffer John', 1), ('SeungYong Oh', 1), ('Sergey Novikov', 1), ('Seokju Yun', 1), ('Sentient', 1), ('Selcuk Bozdag', 1), ('Sebastian Grodzicki', 1), ('Sebastian', 1), ('Sean Cunningham', 1), ('Scott Albertson', 1), ('Sandra G', 1), ('Samuel Nelson', 1), ('Ryland Herrick', 1), ('Michiel Missotten', 1), ('Michaël Arnauts', 1), ('Michal', 1), ('Michael Vollman', 1), ('Michael Salsone', 1), ('Michael Montgomery', 1), ('Michael McEniry', 1), ('Michael Koch', 1), ('Michael Hyatt', 1), ('Michael Elufimov', 1), ('Maxwell Borden', 1), ('Maximilian Stinsky', 1), ('Maxime Song', 1), ('Maxime Gréau', 1), ('Max Chadwick', 1), ('Matthias Schneider', 1), ('Matthew Kime', 1), ('Matthew Costa', 1), ('Matthew', 1), ('Matias Cascallares', 1), ('Mathieu Lecarme', 1), ('Mathias Olsson', 1), ('Mateusz Was', 1), ('Mat Schaffer', 1), ('Martin Hoefling', 1), ('Mark Van Acker', 1), ('Marjorie Jones', 1), ('Mario Rodriguez Molins', 1), ('Mario Mechoulam', 1), ('Marian Craciunescu', 1), ('MarcusCaepio', 1), ('shendaras', 1), ('Patrick Lehmann', 1), ('Patrick Cable', 1), (""Pasquale D'Agostino"", 1), ('Parker Zhou', 1), ('Paolo Chilà', 1), ('Panos Georgiadis', 1), ('Panagiotis Panagiotopoulos', 1), ('Pablo Francisco Pérez Hidalgo', 1), ('Olga Naydyonock', 1), ('Oleg Radchenko', 1), ('Ohad Ravid', 1), ('Norrie Taylor', 1), ('Norman Joyner', 1), ('Nikhil Patel', 1), ('Nik Richers', 1), ('Nik Everett', 1), ('Niels Hofmans', 1), ('Nicolas Dermine', 1), ('Nicolas Chaulet', 1), ('Nick Revin', 1), ('Nic Waller', 1), ('Nic', 1), ('Neelesh Pateriya', 1), ('Nathan Brown', 1), ('Nabeel Shakeel', 1), ('Morya', 1), ('Mohammad Hossein Gerami', 1), ('Milton Hultgren', 1), ('Mikhail', 1), ('MikeKemmerer', 1), ('Mike Birnstiehl', 1), ('Mika Ayenson', 1), ('mariomechoulam', 1), ('ma-hei', 1), ('ljw-', 1), ('kvalliyurnatt', 1), ('kemokemo', 1), ('jony montana', 1), ('joereith', 1), ('jmceniery', 1), ('ismael-hasan', 1), ('ipnerds', 1), ('ian woolf', 1), ('herver', 1), ('herbxu', 1), ('harnish-elastic', 1), ('harche', 1), ('gitck', 1), ('gigallucci', 1), ('gemabarni', 1), ('garethhumphriesgkc', 1), ('garanews', 1), ('gabriel-tessier', 1), ('fjgal', 1), ('emmanueltouzery', 1), ('dramis', 1), ('debadair', 1), ('dave', 1), ('cui fliter', 1), ('clay', 1), ('cjr125', 1), ('brian', 1), ('Tomasz Richert', 1), ('午夜', 1), ('Şamil Taner Cengiz', 1), ('Álex González', 1), ('zvictorino', 1), ('yaule', 1), ('xy795', 1), ('xoh', 1), ('xander33', 1), ('whale-shark', 1), ('weslambert', 1), ('wanusmaximus', 1), ('treff7es', 1), ('tommy-sec', 1), ('tomdoherty', 1), ('tbragin', 1), ('stryngs', 1), ('standa4', 1), ('sopmtech', 1), ('shawshank', 1), ('sebastienmusso', 1), ('rzrelyea', 1), ('osherdp', 1), ('onequid', 1), ('ofiriro3', 1), ('nima', 1), ('nickivanov', 1), ('nick4eva', 1), ('natasha-moore-elastic', 1), ('msvechla', 1), ('moooofly', 1), ('mk2011', 1), ('mbudge', 1), ('Toby Brain', 1), ('Tinker', 1), ('Timesking', 1), ('Tim Sullivan', 1), ('Tim Rühsen', 1), ('Tim Rühsen', 1), ('Tim Birkett', 1), ('Tibor Djurica Potpara', 1), ('Tian', 1), ('Tiago Queiroz', 1), ('Thomas Watson', 1), ('Thomas Montague', 1), ('Thomas Auffredou', 1), ('Theo Andersen Carton', 1), ('Tetiana Kravchenko', 1), ('Ted Timmons', 1), ('Technici4n', 1), ('TeTeHacko', 1), ('Tanya Bragin', 1), ('Tanja Miličić', 1), ('Tamas Nemeth', 1), ('Tamara Dancheva', 1), ('Svetlana Maltseva', 1), ('Svenfa', 1), ('Sven Woltmann', 1), ('Suraj Soni', 1), ('Stéphane DERACO', 1), ('Stuart Tettemer', 1), ('Stijn Holzhauer', 1), ('Steven Hadfield', 1), ('Steven Basgall', 1), ('boernd', 1), ('bgvladedivac', 1), ('ataraskov', 1), ('amitshinde001', 1), ('alankis', 1), ('Zdenek Styblik', 1), ('Yoel Spotts', 1), ('Yoan Blanc', 1), ('Yi Song', 1), ('Yazdan', 1), ('Yash Tewari', 1), ('Xiaohui Wen', 1), ('William Easton', 1), ('William Deurwaarder', 1), ('Will Weber', 1), ('Weidong Feng', 1), ('Wayne M', 1), ('Wang Guoliang', 1), ('Vova', 1), ('Vitor Anjos', 1), ('Virender Khatri', 1), ('Vincent Roseberry', 1), ('Vincent Fuchs', 1), ('Vik Jagan', 1), ('Viacheslav Vasilyev', 1), ('Valentin Nazarov', 1), ('Ugo Sangiorgi', 1), ('Tyler Clendenin', 1), ('Ty Rocca', 1), ('TotalKnob', 1), ('Tony Meehan', 1), ('Tommas Yuan', 1), ('inxonic', 1), ('damireh', 1), ('DanielQujun', 1), ('dansowter', 1), ('kureus', 1), ('pzl', 1), ('danhermann', 1), ('danmx', 1), ('dmathieu', 1), ('dplavcic', 1), ('cyrille-leclerc', 1), ('cjimti', 1), ('epixa', 1), ('colleenmcginnis', 1), ('clery', 1), ('Clément Chigot', 1), ('Helflym', 1), ('ClumsyPotato', 1), ('manios', 1), ('cbrown184', 1), ('cwuethrich', 1), ('voigt', 1), ('cschwartz', 1), ('rtzll', 1), ('cgwrench', 1), ('chrisronline', 1), ('chris-counteractive', 1), ('wenhaochen', 1), ('hatricker', 1), ('catcherwong', 1), ('TonioRyo', 1), ('Kirk Crane', 1), ('Fedele Mantuano', 1), ('Fang He', 1), ('Fae Charlton', 1), ('Ethan Cowan', 1), ('Erwin Wildenburg', 1), ('Eric Davis', 1), ('Epakesko', 1), ('Eng Zer Jun', 1), ('Eloy Brodin', 1), ('eloyekunle', 1), ('punisherVX', 1), ('dreampuf', 1), ('DracoBlue', 1), ('cavokz', 1), ('Dmytro Ilchenko', 1), ('DmitryZ-outten', 1), ('DdPerna', 1), ('live-wire', 1), ('devon-kim', 1), ('Developpement Web Thomas Paulmyer', 1), ('goku321', 1), ('dsztykman', 1), ('david-kow', 1), ('davidc0le', 1), ('dgroomes', 1), ('autarch', 1), ('dclausen', 1), ('darshan-elastic', 1), ('DanielTimLee', 1), ('danleerunk', 1), ('danielmitterdorfer', 1), ('maniankara', 1), ('ajoliveira', 1), ('thewebface', 1), ('itkovian', 1), ('a-melnyk', 1), ('tufitko', 1), ('A-Hall', 1), ('andrew-d', 1), ('roaksoax', 1), ('andreycha', 1), ('tgogos', 1), ('Amanda H. L. de Andrade Katz', 1), ('alioug', 1), ('easkay', 1), ('spinscale', 1), ('alexshadow007', 1), ('nftechie', 1), ('MelonSmasher', 1), ('alstolten', 1), ('atercattus', 1), ('tehbooom', 1), ('akshay-saraswat', 1), ('aidarbek', 1), ('turnUpTheChill', 1), ('jpountz', 1), ('adibendahan', 1), ('adassow', 1), ('Abirdcfly', 1), ('abdonpijpelink', 1), ('7lima', 1), ('2Fast2BCn', 1), ('Carmelo Mirko Musumeci', 1), ('cv', 1), ('solrac97gr', 1), ('carlpett', 1), ('calebchaney', 1), ('brunotm', 1), ('brianharwell', 1), ('bdols', 1), ('candlerb', 1), ('Brian-Williams', 1), ('Ullaakut', 1), ('devenney', 1), ('brsolomon-deloitte', 1), ('b-deam', 1), ('VertexC', 1), ('boranx', 1), ('pillarsdotnet', 1), ('Blake Rouse', 1), ('Bernhard-Fluehmann', 1), ('benben', 1), ('bhcopeland', 1), ('bengadbois', 1), ('BBQigniter', 1), ('asmith-elastic', 1), ('athieriot', 1), ('weinrea', 1), ('arsalan0c', 1), ('BlackYoup', 1), ('arkady-emelyanov', 1), ('Anya Sabo', 1), ('anyasabo', 1), ('atoulme', 1), ('Kevin Klopfenstein', 1), ('KeshavG-lb', 1), ('Kerry Gallagher', 1), ('Kentaro Horio', 1), ('Karen Metts', 1), ('Kaan Yalti', 1), ('Jørgen Taule', 1), ('Justin Walz', 1), ('Justin Kambic', 1), ('Justin Cranford', 1), ('JustWPH', 1), ('Julián Reyes', 1), ('Julien Orain', 1), ('Julien Mailleret', 1), ('Julien Mailleret', 1), ('Julien Levesy', 1), ('Julien Guay', 1), ('Julian Reyes', 1), ('Juan Álvarez', 1), ('João Duarte', 1), ('José Arthur Benetasso Villanova', 1), ('Joshua Iverson', 1), ('Josh Smith', 1), ('Joseph Woodward', 1), ('Jorge Luis Betancourt', 1), ('Jorge Luis Betancourt', 1), ('Jonathan D Strootman', 1), ('Jonathan Budzenski', 1), ('Jonatan Ivanov', 1), ('John Callahan', 1), ('Ichinose Shogo', 1), ('Marcos Nils', 1), ('Marco Antonio Ghiani', 1), ('Marc Sensenich', 1), ('Marc Jay', 1), ('Marc', 1), ('Mahmoud Saada', 1), ('Maciej Ostaszewski', 1), ('Luke Rucks', 1), ('Luke Elmers', 1), ('Luke Elmers', 1), ('Lukas Olson', 1), ('Luiz Guilherme Pais dos Santos', 1), ('Lucian Ioan', 1), ('Louis', 1), ('Loek van Gool', 1), ('Lewis Ren', 1), ('Leszek Kubik', 1), ('Leonardo Pucci', 1), ('Lee Jones', 1), ('Leandro Maciel', 1), ('Lasse Johnsen', 1), ('Larry Gregory', 1), ('Kévin Gomez', 1), ('Kyriakos Kentzoglanakis', 1), ('Kyle Pearson', 1), ('Kurt Hurtado', 1), ('Kurt', 1), ('Kuni Sen', 1), ('Krystian', 1), ('Kristoffer Johansson', 1), ('Krassimir Valev', 1), ('Konstantinos Kostis', 1), ('Horie Issei', 1), ('Henrik Nordvik', 1), ('HeGaoYuan', 1), ('Harris Lummis', 1), ('Harold Schreckengost', 1), ('Hanjie Wang', 1), ('Hakan Carlsson', 1), ('Hacko-nPacko', 1), ('Guy Rombaut', 1), ('Gustavo B', 1), ('Guillaume Marsay', 1), ('Grzegorz Banasiak', 1), ('Grishin Pavel', 1), ('Greg Jacobs', 1), ('Gnanasekaran Gajendiran', 1), ('Gerard Soldevila', 1), ('Gerald Quintana', 1), ('George Wilson', 1), ('Geoff Rowland', 1), ('Frederic Dartayre', 1), ('Franಠ_ಠis Conil', 1), ('François-Clément Brossard', 1), ('Francois G', 1), ('Francesco Gualazzi', 1), ('Formerly known as tvaughan', 1), ('Florian Kelbert', 1), ('Florian', 1), ('Flavio Percoco', 1), ('Fergal', 1), ('Ferdinand Holzer', 1), ('Felix', 1), ('Johannes Fredén', 1), ('Joey Paskhay', 1), ('Joe Meissler', 1), ('Jochen Ullrich', 1), ('Joakim Uddholm', 1), ('Jeremy Falling', 1), ('Jens Saade', 1), ('Jeff Zellner', 1), ('Jeff Williams', 1), ('Jeff Spahr', 1), ('Jeff Peeler', 1), ('Jean-Fabrice Bobo', 1), ('Jean-Charles Legras', 1), ('Jdragon', 1), ('Javier Palomo Almena', 1), ('Jasper Bernhardt', 1), ('Jason  Allshorn', 1), ('Jarl Törnroos', 1), ('Jarek Miszkinis', 1), ('Jan Calanog', 1), ('James Rodewig', 1), ('James Moon', 1), ('James Kiefer', 1), ('James Butler', 1), ('Jameel Al-Aziz', 1), ('Jakub Paweł Głazik', 1), ('Jaime A', 1), ('Jacky Wu', 1), ('Izek Chen', 1), ('István Zoltán Szabó', 1), ('Ioannis Androulidakis', 1), ('Imri Zvik', 1)",505,110,
bitpay/bitcore-lib,A pure and powerful JavaScript Bitcoin library,"Bitcore Library
=======
THIS REPO HAVE BEEN MOVED TO BITCORE's MONO REPO. Check: 

https://github.com/bitpay/bitcore/tree/v8.0.0/packages/bitcore-lib
",,2015-10-15T19:05:55Z,2021-09-16T05:11:56Z,94,71,611,64,"('maraoz', 700), ('Ryan X. Charles', 668), ('Braydon Fuller', 336), ('eordano', 320), ('matiu', 213), ('chjj', 164), ('yemel', 101), ('gasteve', 66), ('Jeff Garzik', 51), ('ryanxcharles', 42), ('martindale', 35), ('olalonde', 32), ('braydonf', 30), ('pnagurny', 29), ('dskloet', 18), ('Gordon Hall', 17), ('gabegattis', 13), ('Gordon Hall', 13), ('bitjson', 13), ('rubensayshi', 13), ('fanatid', 12), ('throughnothing', 12), ('trevinhofmann', 9), ('MattFaus', 8), ('afk11', 6), ('micahriggan', 6), ('marianorod', 6), ('devrandom', 5), ('brandonrobertz', 5), ('Chris Kleeschulte', 4), ('Fi3', 4), ('Gregg Zigler', 4), ('nitsujlangston', 4), ('sagivo', 4), ('dthorpe', 4), ('manan19', 3), ('kyledrake', 3), ('trapp', 3), ('himynameismartin', 3), ('ethers', 3), ('zmanian', 3), ('Mariano', 3), ('isocolsky', 3), ('Gabe', 3), ('kleetus', 3), ('carnesen', 3), ('gjaldon', 2), ('yangit', 2), ('unknown', 2), ('mruddy', 2), ('bip32JP', 2), ('adam', 2), ('cimm', 2), ('Patrick Nagurny', 2), ('Manan Patel', 2), ('cmgustavo', 2), ('federicobond', 2), ('elichai', 2), ('Curtis Lacy', 2), ('bitdeli-chef', 2), ('Adam Brady', 2), ('unusualbob', 1), ('ionux', 1), ('rapodaca', 1), ('petrosagg', 1), ('petertodd', 1), ('nathanph', 1), ('askmike', 1), ('Mike C', 1), ('Jason Dreyzehner', 1), ('deoxen0n2', 1), ('mpolci', 1), ('lazaruslarue', 1), ('ralphtheninja', 1), ('mpolci', 1), ('renuzit', 1), ('shea256', 1), ('bobofzhang', 1), ('porkchop', 1), ('Aaron1011', 1), ('aalness', 1), ('dcousens', 1), ('DesWurstes', 1), ('edbo', 1), ('mljsimone', 1), ('JahPowerBit', 1), ('jgarzik', 1), ('KeepKey Pair Programmers', 1), ('LinusU', 1), ('lukechilds', 1), ('Maran', 1), ('Mario Colque', 1), ('stormasm', 1), ('mbelshe', 1)",33,26,
mozilla/bedrock,"Making mozilla.org awesome, one pebble at a time","Bedrock
=======

*Bedrock* is the code name of [mozilla.org][mozilla]. It is as shiny,
awesome, and open source as always. Perhaps even a little more.

[mozilla]: https://www.mozilla.org/

[![What's deployed on dev,stage,prod?](https://img.shields.io/badge/whatsdeployed-dev,stage,prod-green.svg)](https://whatsdeployed.io/s/RuO/mozilla/bedrock)

Docs
----

Bedrock is a [Django][django] project. Check out the [django docs][dj-docs] for
general technical documentation. In addition, there are project-specific
[bedrock docs][br-docs].

[django]: https://www.djangoproject.com/
[dj-docs]: https://docs.djangoproject.com/
[br-docs]: http://bedrock.readthedocs.org/

Contributing
------------

Patches are welcome! Feel free to fork and contribute to [this project][gh-bedrock] on
GitHub. If you find a problem and wish to report it, please [file
a bug][github-issue].

Looking for a good first bug to work on? Take a look at our [contributing doc][contributing]
to get started.

[gh-bedrock]: https://github.com/mozilla/bedrock
[github-issue]: https://github.com/mozilla/bedrock/issues/new?template=bug_report.md
[contributing]: https://github.com/mozilla/bedrock/blob/main/.github/CONTRIBUTING.md

Code of Conduct
---------------

This repository is governed by Mozilla's [Community Participation Guidelines][participation]
and [Developer Etiquette Guidelines][etiquette].

[participation]: https://github.com/mozilla/bedrock/blob/main/CODE_OF_CONDUCT.md
[etiquette]: https://bugzilla.mozilla.org/page.cgi?id=etiquette.html

License
-------

This software is licensed under the [MPL version 2.0][MPL]. For more
information, read this repository's [LICENSE][LICENSE].

[MPL]: https://www.mozilla.org/MPL/
[LICENSE]: https://github.com/mozilla/bedrock/blob/main/LICENSE

![](http://i.imgur.com/ElotJSI.jpg)

credit [@designerham](https://github.com/designerham)
","'css', 'django', 'firefox', 'html', 'javascript', 'mozilla', 'python'",2011-04-14T22:57:57Z,2024-06-18T13:59:51Z,376,314,1157,117,"('alexgibson', 3304), ('pmac', 1844), ('craigcook', 1788), ('sgarrity', 1355), ('jpetto', 1069), ('jgmize', 923), ('kyoshino', 550), ('jlongster', 389), ('stephaniehobson', 342), ('stevejalim', 276), ('Schalk Neethling', 233), ('flodolo', 179), ('pascalchevrel', 171), ('amychurchwell', 167), ('reemhamz', 161), ('robhudson', 152), ('schalkneethling', 134), ('maureenlholland', 134), ('gauthierm', 116), ('rik', 115), ('nathan-barrett', 107), ('Fred Wenzel', 104), ('glogiotatidis', 69), ('icaaq', 62), ('retornam', 57), ('Sancus', 52), ('dependabotbot', 51), ('davehunt', 44), ('pmclanahan', 42), ('Michael Kelly', 38), ('malena', 36), ('dpoirier', 35), ('hoosteeno', 33), ('TheoChevalier', 33), ('SmileyChris', 32), ('maxxcrawford', 32), ('ossreleasefeed', 32), ('sylvestre', 28), ('Errolyn', 28), ('janbrasna', 28), ('l-hedgehog', 25), ('rossbruniges', 25), ('James Lorence', 23), ('davidwboswell', 23), ('bensternthal', 22), ('Gervase Markham', 22), ('rraue', 22), ('ozten', 20), ('Cory Price', 20), ('paulosman', 20), ('tomrittervg', 20), ('AaronMT', 19), ('Pike', 19), ('MichaelKohler', 17), ('RCMainak', 17), ('mmmavis', 17), ('fkiriakos07', 15), ('ericawright', 14), ('april', 14), ('Ayushsunny', 13), ('openjck', 12), ('Jonathan Claudius', 12), ('Nizar Khalife Iglesias', 12), ('Chris More', 11), ('Jeff Balogh', 11), ('chikoski', 10), ('peiying2', 10), ('mkmelin', 10), ('rforbes', 9), ('ethertank', 9), ('andrewhayward', 9), ('amuntner', 9), ('chrismore', 7), ('Patil2099', 7), ('kewisch', 7), ('ScottDowne', 7), ('imskr', 7), ('mehan', 7), ('rvandermeulen', 6), ('mermi', 6), ('Alisha', 6), ('bookshelfdave', 6), ('gene1wood', 6), ('heatherbooker', 6), ('James Socol', 6), ('alanmoo', 5), ('jbuck', 5), ('Pranay Patil', 5), ('RickieES', 5), ('Shivansh2407', 5), ('stephendesroches', 5), ('devinreams', 5), ('Alan Alexander', 5), ('duallain', 5), ('swarnava', 5), ('pollti', 4), ('brianking', 4), ('globau', 4), ('FrancescoSTL', 4), ('mozfreddyb', 4), ('Abhra303', 4), ('lucasferrazlima', 4), ('Soumya0803', 4), ('rlr', 4), ('shansm', 4), ('chiak597', 4), ('Mardak', 4), ('lismanb', 4), ('vladikoff', 4), ('ejregithub', 4), ('Francois Marier', 4), ('martinbalfanz', 4), ('tsmrachel', 3), ('Rebecca Young', 3), ('psiinon', 3), ('groovecoder', 3), ('bkochendorfer', 3), ('tieu', 3), ('gerv', 3), ('MozFux', 3), ('joneskj55', 3), ('petercpg', 3), ('infinet', 3), ('Chris DeCairos', 3), ('sandrocottus', 3), ('wen-2018', 3), ('netoarmando', 3), ('jwhitlock', 3), ('almet', 3), ('Joseph Bywater', 3), ('comzeradd', 3), ('nburka', 3), ('Milos Dinic', 3), ('jcristau', 3), ('tbm', 3), ('Mike Alexis', 3), ('manoj71', 2), ('jee1mr', 2), ('svatsan', 2), ('gueroJeff', 2), ('espressive', 2), ('dsmithpadilla', 2), ('djug', 2), ('vivganes', 2), ('berliners1', 2), ('TheJJ100100', 2), ('SujaySKumar', 2), ('mdieske', 2), ('nileshdas', 2), ('sanjaykrishnan', 2), ('tikhsuP', 2), ('www-site-checker bot', 2), ('yglazko', 2), ('albill', 2), ('Faeranne', 2), ('edg2s', 2), ('TannerFilip', 2), ('Archaeopteryx', 2), ('joeyfb', 2), ('pierreneter', 2), ('bhearsum', 2), ('utkbansal', 2), ('obviyus', 2), ('cturra', 2), ('Alex Johnson', 2), ('ajvb', 2), ('cvan', 2), ('callahad', 2), ('dhanushuUzumaki', 2), ('Francesco Lodolo', 2), ('menghif', 2), ('fmarier', 2), ('fwenzel', 2), ('Stephen Desroches', 2), ('reedloden', 2), ('raebex', 2), ('Raymond Forbes', 2), ('ppapadeas', 2), ('NdagiStanley', 2), ('mythmon', 2), ('jacshfr', 2), ('loganrosen', 2), ('musale', 2), ('jaredhirsch', 2), ('conradylx', 2), ('mschroeder', 2), ('freaktechnik', 1), ('rishiloyola', 1), ('rdroro', 1), ('Ruben Vereecken', 1), ('ryanfeeley', 1), ('SamarthAroraa', 1), ('sanxiyn', 1), ('Shane Tomlinson', 1), ('shawnlobo96', 1), ('shubheksha', 1), ('Sidak Singh Aulakh', 1), ('simonwex', 1), ('Stefan Zabka', 1), ('stephendonner', 1), ('StephenOrJames', 1), ('darkowlzz', 1), ('Swarnava Sengupta', 1), ('tanuja3', 1), ('stangirala', 1), ('Tim', 1), ('Tin Aung Lin', 1), ('mbanerjeepalmer', 1), ('meghprkh', 1), ('msolorio', 1), ('MikkCZ', 1), ('Mike Hoye', 1), ('=', 1), ('f09f909b', 1), ('mokshchaudhary', 1), ('mykmelez', 1), ('nhenezi', 1), ('Nukeador', 1), ('heavensmile', 1), ('PanderMusubi', 1), ('peterbe', 1), ('philschatz', 1), ('PFischbeck', 1), ('Porkepix', 1), ('nox1134', 1), ('pemmasanikrishna', 1), ('Ragnis', 1), ('gurumukhi', 1), ('hackebrot', 1), ('richardgoater', 1), ('rimas-kudelis', 1), ('Madghostek', 1), ('hfhchan', 1), ('ishanroy', 1), ('jasager', 1), ('jds2501', 1), ('jff006', 1), ('joetschell', 1), ('kenrick95', 1), ('khushi1234945', 1), ('koshin43', 1), ('m-alexis', 1), ('martynamalecka', 1), ('mahmud2011', 1), ('mrobin', 1), ('muhammednagy', 1), ('pranay', 1), ('rosanardila', 1), ('rxumoz', 1), ('saadmk11', 1), ('scottmoz', 1), ('secretrobotron', 1), ('sudheesh001', 1), ('tiagomoraismorgado', 1), ('vinay-deshmukh', 1), ('yoshi2095', 1), ('vmbrasseur', 1), ('vanshajg', 1), ('vhfmag', 1), ('vinyll', 1), ('Vincenzo Scalzi', 1), ('KiskaLE', 1), ('xfq', 1), ('yashkhandelwal123', 1), ('YuriyCherniy', 1), ('anaran', 1), ('ankittekri', 1), ('astrastefania', 1), ('chaitanyamogal', 1), ('cketti', 1), ('cwoodgett', 1), ('dad7732', 1), ('davd Weir', 1), ('autonome', 1), ('dougmellon', 1), ('cinemascop89', 1), ('afrozas', 1), ('g1tman', 1), ('gcoxmoz', 1), ('gw1500se', 1), ('mostlygeek', 1), ('Bhavik-Ardeshna', 1), ('bhourigan', 1), ('bcolsson', 1), ('cgar', 1), ('chaiwattsw', 1), ('Chandrakant Kumar', 1), ('charleswaddell', 1), ('cpawley', 1), ('bacharakis', 1), ('caugner', 1), ('cshields', 1), ('seanmoon80', 1), ('slightlyoffbeat', 1), ('relud', 1), ('dveditz', 1), ('dannycolin', 1), ('Dave Parfitt', 1), ('davidgumberg', 1), ('darkwing', 1), ('denschub', 1), ('dlapiduz', 1), ('djc', 1), ('DonalMe', 1), ('AConati', 1), ('abhisharsinha', 1), ('theaswanson', 1), ('fitojb', 1), ('adyanf', 1), ('AishwaryaSivaraman', 1), ('Alan', 1), ('auzelac91', 1), ('alexlovescoding', 1), ('Alex Johnson', 1), ('alicoding', 1), ('yzAlvin', 1), ('amitsin6h', 1), ('apapirovski', 1), ('wagnerand', 1), ('dudepare', 1), ('tobarja', 1), ('angelafrancisco', 1), ('annezhou920', 1), ('anthonydillon', 1), ('anushbmx', 1), ('brizental', 1), ('Benjamin ABEL', 1), ('beurdouche', 1), ('JohanLorenzo', 1), ('johngian', 1), ('jonathan-s', 1), ('jdm', 1), ('Kafji', 1), ('Kaushal-Dhungel', 1), ('kesavanm', 1), ('vcsjones', 1), ('klamping', 1), ('anistark', 1), ('kushaldas', 1), ('kgeorgiou', 1), ('chitak', 1), ('lmarceau', 1), ('lmandel', 1), ('lmorchard', 1), ('levigideon', 1), ('elebumm', 1), ('Iinh', 1), ('lucanovera', 1), ('luisalves05', 1), ('marclaporte', 1), ('meuusuario', 1), ('Marcos Caceres', 1), ('ewongbb', 1), ('eoger', 1), ('ehsan', 1), ('Elideb', 1), ('ElijahPepe', 1), ('a2sheppy', 1), ('erikrose', 1), ('Ethan Kleinman', 1), ('foladipo', 1), ('gavinsharp', 1), ('Greg Guthe', 1), ('indygreg', 1), ('hannosch', 1), ('harshil1712', 1), ('hramezani', 1), ('ishantd', 1), ('JP Schneider', 1), ('Jan Bambach', 1), ('Jason Smith', 1), ('jeffaustin81', 1), ('Jen Fong-Adwent', 1), ('Jennifer Fong', 1), ('Jobava', 1), ('joetschell', 1)",190,158,
magnars/s.el,The long lost Emacs string manipulation library.,"# s.el [![s.el testing](https://github.com/magnars/s.el/actions/workflows/test.yml/badge.svg)](https://github.com/magnars/s.el/actions/workflows/test.yml) [![Coverage Status](https://coveralls.io/repos/magnars/s.el/badge.svg?branch=master)](https://coveralls.io/r/magnars/s.el?branch=master)

The long lost Emacs string manipulation library.

## Installation

It's available on [Melpa](https://melpa.org/):

    M-x package-install s

Or you can just dump `s.el` in your load path somewhere.

## Functions


### Tweak whitespace

* [s-trim](#s-trim-s) `(s)`
* [s-trim-left](#s-trim-left-s) `(s)`
* [s-trim-right](#s-trim-right-s) `(s)`
* [s-chomp](#s-chomp-s) `(s)`
* [s-collapse-whitespace](#s-collapse-whitespace-s) `(s)`
* [s-word-wrap](#s-word-wrap-len-s) `(len s)`
* [s-center](#s-center-len-s) `(len s)`
* [s-pad-left](#s-pad-left-len-padding-s) `(len padding s)`
* [s-pad-right](#s-pad-right-len-padding-s) `(len padding s)`

### To shorter string

* [s-truncate](#s-truncate-len-s) `(len s)`
* [s-left](#s-left-len-s) `(len s)`
* [s-right](#s-right-len-s) `(len s)`
* [s-chop-left](#s-chop-left-len-s) `(len s)`
* [s-chop-right](#s-chop-right-len-s) `(len s)`
* [s-chop-suffix](#s-chop-suffix-suffix-s) `(suffix s)`
* [s-chop-suffixes](#s-chop-suffixes-suffixes-s) `(suffixes s)`
* [s-chop-prefix](#s-chop-prefix-prefix-s) `(prefix s)`
* [s-chop-prefixes](#s-chop-prefixes-prefixes-s) `(prefixes s)`
* [s-shared-start](#s-shared-start-s1-s2) `(s1 s2)`
* [s-shared-end](#s-shared-end-s1-s2) `(s1 s2)`

### To longer string

* [s-repeat](#s-repeat-num-s) `(num s)`
* [s-concat](#s-concat-rest-strings) `(&rest strings)`
* [s-prepend](#s-prepend-prefix-s) `(prefix s)`
* [s-append](#s-append-suffix-s) `(suffix s)`
* [s-splice](#s-splice-needle-n-s) `(needle n s)`

### To and from lists

* [s-lines](#s-lines-s) `(s)`
* [s-match](#s-match-regexp-s-optional-start) `(regexp s &optional start)`
* [s-match-strings-all](#s-match-strings-all-regex-string) `(regex string)`
* [s-matched-positions-all](#s-matched-positions-all-regexp-string-optional-subexp-depth) `(regexp string &optional subexp-depth)`
* [s-slice-at](#s-slice-at-regexp-s) `(regexp s)`
* [s-split](#s-split-separator-s-optional-omit-nulls) `(separator s &optional omit-nulls)`
* [s-split-up-to](#s-split-up-to-separator-s-n-optional-omit-nulls) `(separator s n &optional omit-nulls)`
* [s-join](#s-join-separator-strings) `(separator strings)`

### Predicates

* [s-equals?](#s-equals-s1-s2) `(s1 s2)`
* [s-less?](#s-less-s1-s2) `(s1 s2)`
* [s-matches?](#s-matches-regexp-s-optional-start) `(regexp s &optional start)`
* [s-blank?](#s-blank-s) `(s)`
* [s-present?](#s-present-s) `(s)`
* [s-ends-with?](#s-ends-with-suffix-s-optional-ignore-case) `(suffix s &optional ignore-case)`
* [s-starts-with?](#s-starts-with-prefix-s-optional-ignore-case) `(prefix s &optional ignore-case)`
* [s-contains?](#s-contains-needle-s-optional-ignore-case) `(needle s &optional ignore-case)`
* [s-lowercase?](#s-lowercase-s) `(s)`
* [s-uppercase?](#s-uppercase-s) `(s)`
* [s-mixedcase?](#s-mixedcase-s) `(s)`
* [s-capitalized?](#s-capitalized-s) `(s)`
* [s-numeric?](#s-numeric-s) `(s)`

### The misc bucket

* [s-replace](#s-replace-old-new-s) `(old new s)`
* [s-replace-all](#s-replace-all-replacements-s) `(replacements s)`
* [s-downcase](#s-downcase-s) `(s)`
* [s-upcase](#s-upcase-s) `(s)`
* [s-capitalize](#s-capitalize-s) `(s)`
* [s-titleize](#s-titleize-s) `(s)`
* [s-with](#s-with-s-form-rest-more) `(s form &rest more)`
* [s-index-of](#s-index-of-needle-s-optional-ignore-case) `(needle s &optional ignore-case)`
* [s-reverse](#s-reverse-s) `(s)`
* [s-presence](#s-presence-s) `(s)`
* [s-format](#s-format-template-replacer-optional-extra) `(template replacer &optional extra)`
* [s-lex-format](#s-lex-format-format-str) `(format-str)`
* [s-count-matches](#s-count-matches-regexp-s-optional-start-end) `(regexp s &optional start end)`
* [s-wrap](#s-wrap-s-prefix-optional-suffix) `(s prefix &optional suffix)`

### Pertaining to words

* [s-split-words](#s-split-words-s) `(s)`
* [s-lower-camel-case](#s-lower-camel-case-s) `(s)`
* [s-upper-camel-case](#s-upper-camel-case-s) `(s)`
* [s-snake-case](#s-snake-case-s) `(s)`
* [s-dashed-words](#s-dashed-words-s) `(s)`
* [s-capitalized-words](#s-capitalized-words-s) `(s)`
* [s-titleized-words](#s-titleized-words-s) `(s)`
* [s-word-initials](#s-word-initials-s) `(s)`
* [s-blank-str?](#s-blank-str-s) `(s)`

## Documentation and examples


### s-trim `(s)`

Remove whitespace at the beginning and end of `s`.

```cl
(s-trim ""trim "") ;; => ""trim""
(s-trim "" this"") ;; => ""this""
(s-trim "" only  trims beg and end  "") ;; => ""only  trims beg and end""
```

### s-trim-left `(s)`

Remove whitespace at the beginning of `s`.

```cl
(s-trim-left ""trim "") ;; => ""trim ""
(s-trim-left "" this"") ;; => ""this""
```

### s-trim-right `(s)`

Remove whitespace at the end of `s`.

```cl
(s-trim-right ""trim "") ;; => ""trim""
(s-trim-right "" this"") ;; => "" this""
```

### s-chomp `(s)`

Remove one trailing `\n`, `\r` or `\r\n` from `s`.

```cl
(s-chomp ""no newlines\n"") ;; => ""no newlines""
(s-chomp ""no newlines\r\n"") ;; => ""no newlines""
(s-chomp ""some newlines\n\n"") ;; => ""some newlines\n""
```

### s-collapse-whitespace `(s)`

Convert all adjacent whitespace characters to a single space.

```cl
(s-collapse-whitespace ""only   one space   please"") ;; => ""only one space please""
(s-collapse-whitespace ""collapse \n all \t sorts of \r whitespace"") ;; => ""collapse all sorts of whitespace""
```

### s-word-wrap `(len s)`

If `s` is longer than `len`, wrap the words with newlines.

```cl
(s-word-wrap 10 ""This is too long"") ;; => ""This is\ntoo long""
(s-word-wrap 10 ""This is way way too long"") ;; => ""This is\nway way\ntoo long""
(s-word-wrap 10 ""It-wraps-words-but-does-not-break-them"") ;; => ""It-wraps-words-but-does-not-break-them""
```

### s-center `(len s)`

If `s` is shorter than `len`, pad it with spaces so it is centered.

```cl
(s-center 5 ""a"") ;; => ""  a  ""
(s-center 5 ""ab"") ;; => ""  ab ""
(s-center 1 ""abc"") ;; => ""abc""
```

### s-pad-left `(len padding s)`

If `s` is shorter than `len`, pad it with `padding` on the left.

```cl
(s-pad-left 3 ""0"" ""3"") ;; => ""003""
(s-pad-left 3 ""0"" ""23"") ;; => ""023""
(s-pad-left 3 ""0"" ""1234"") ;; => ""1234""
```

### s-pad-right `(len padding s)`

If `s` is shorter than `len`, pad it with `padding` on the right.

```cl
(s-pad-right 3 ""."" ""3"") ;; => ""3..""
(s-pad-right 3 ""."" ""23"") ;; => ""23.""
(s-pad-right 3 ""."" ""1234"") ;; => ""1234""
```


### s-truncate `(len s)`

If `s` is longer than `len`, cut it down to `len` - 3 and add ... at the end.

```cl
(s-truncate 6 ""This is too long"") ;; => ""Thi...""
(s-truncate 16 ""This is also too long"") ;; => ""This is also ...""
(s-truncate 16 ""But this is not!"") ;; => ""But this is not!""
```

### s-left `(len s)`

Returns up to the `len` first chars of `s`.

```cl
(s-left 3 ""lib/file.js"") ;; => ""lib""
(s-left 3 ""li"") ;; => ""li""
```

### s-right `(len s)`

Returns up to the `len` last chars of `s`.

```cl
(s-right 3 ""lib/file.js"") ;; => "".js""
(s-right 3 ""li"") ;; => ""li""
```

### s-chop-left `(len s)`

Remove the first `len` chars from `s`.

```cl
(s-chop-left 3 ""lib/file.js"") ;; => ""/file.js""
(s-chop-left 3 ""li"") ;; => """"
```

### s-chop-right `(len s)`

Remove the last `len` chars from `s`.

```cl
(s-chop-right 3 ""lib/file.js"") ;; => ""lib/file""
(s-chop-right 3 ""li"") ;; => """"
```

### s-chop-suffix `(suffix s)`

Remove `suffix` if it is at end of `s`.

```cl
(s-chop-suffix ""-test.js"" ""penguin-test.js"") ;; => ""penguin""
(s-chop-suffix ""\n"" ""no newlines\n"") ;; => ""no newlines""
(s-chop-suffix ""\n"" ""some newlines\n\n"") ;; => ""some newlines\n""
```

### s-chop-suffixes `(suffixes s)`

Remove `suffixes` one by one in order, if they are at the end of `s`.

```cl
(s-chop-suffixes '(""_test.js"" ""-test.js"" ""Test.js"") ""penguin-test.js"") ;; => ""penguin""
(s-chop-suffixes '(""\r"" ""\n"") ""penguin\r\n"") ;; => ""penguin\r""
(s-chop-suffixes '(""\n"" ""\r"") ""penguin\r\n"") ;; => ""penguin""
```

### s-chop-prefix `(prefix s)`

Remove `prefix` if it is at the start of `s`.

```cl
(s-chop-prefix ""/tmp"" ""/tmp/file.js"") ;; => ""/file.js""
(s-chop-prefix ""/tmp"" ""/tmp/tmp/file.js"") ;; => ""/tmp/file.js""
```

### s-chop-prefixes `(prefixes s)`

Remove `prefixes` one by one in order, if they are at the start of `s`.

```cl
(s-chop-prefixes '(""/tmp"" ""/my"") ""/tmp/my/file.js"") ;; => ""/file.js""
(s-chop-prefixes '(""/my"" ""/tmp"") ""/tmp/my/file.js"") ;; => ""/my/file.js""
```

### s-shared-start `(s1 s2)`

Returns the longest prefix `s1` and `s2` have in common.

```cl
(s-shared-start ""bar"" ""baz"") ;; => ""ba""
(s-shared-start ""foobar"" ""foo"") ;; => ""foo""
(s-shared-start ""bar"" ""foo"") ;; => """"
```

### s-shared-end `(s1 s2)`

Returns the longest suffix `s1` and `s2` have in common.

```cl
(s-shared-end ""bar"" ""var"") ;; => ""ar""
(s-shared-end ""foo"" ""foo"") ;; => ""foo""
(s-shared-end ""bar"" ""foo"") ;; => """"
```


### s-repeat `(num s)`

Make a string of `s` repeated `num` times.

```cl
(s-repeat 10 "" "") ;; => ""          ""
(s-concat (s-repeat 8 ""Na"") "" Batman!"") ;; => ""NaNaNaNaNaNaNaNa Batman!""
```

### s-concat `(&rest strings)`

Join all the string arguments into one string.

```cl
(s-concat ""abc"" ""def"" ""ghi"") ;; => ""abcdefghi""
```

### s-prepend `(prefix s)`

Concatenate `prefix` and `s`.

```cl
(s-prepend ""abc"" ""def"") ;; => ""abcdef""
```

### s-append `(suffix s)`

Concatenate `s` and `suffix`.

```cl
(s-append ""abc"" ""def"") ;; => ""defabc""
```

### s-splice `(needle n s)`

Splice `needle` into `s` at position `n`.
0 is the beginning of the string, -1 is the end.

```cl
(s-splice ""abc"" 0 ""def"") ;; => ""abcdef""
(s-splice ""abc"" -1 ""def"") ;; => ""defabc""
(s-splice ""needle"" 2 ""A  in a haystack."") ;; => ""A needle in a haystack.""
```

### s-lines `(s)`

Splits `s` into a list of strings on newline characters.

```cl
(s-lines ""abc\ndef\nghi"") ;; => '(""abc"" ""def"" ""ghi"")
(s-lines ""abc\rdef\rghi"") ;; => '(""abc"" ""def"" ""ghi"")
(s-lines ""abc\r\ndef\r\nghi"") ;; => '(""abc"" ""def"" ""ghi"")
```

### s-match `(regexp s &optional start)`

When the given expression matches the string, this function returns a list
of the whole matching string and a string for each matched subexpressions.
If it did not match the returned value is an empty list (nil).

When `start` is non-nil the search will start at that index.

```cl
(s-match ""^def"" ""abcdefg"") ;; => nil
(s-match ""^abc"" ""abcdefg"") ;; => '(""abc"")
(s-match ""^/.*/\\([a-z]+\\)\\.\\([a-z]+\\)"" ""/some/weird/file.html"") ;; => '(""/some/weird/file.html"" ""file"" ""html"")
```

### s-match-strings-all `(regex string)`

Return a list of matches for `regex` in `string`.

Each element itself is a list of matches, as per
`match-string`. Multiple matches at the same position will be
ignored after the first.

```cl
(s-match-strings-all ""{\\([^}]+\\)}"" ""x is {x} and y is {y}"") ;; => '((""{x}"" ""x"") (""{y}"" ""y""))
(s-match-strings-all ""ab."" ""abXabY"") ;; => '((""abX"") (""abY""))
(s-match-strings-all ""\\ '(("""") ("""") (""""))
```

### s-matched-positions-all `(regexp string &optional subexp-depth)`

Return a list of matched positions for `regexp` in `string`.
`subexp-depth` is 0 by default.

```cl
(s-matched-positions-all ""l+"" ""{{Hello}} World, {{Emacs}}!"" 0) ;; => '((4 . 6) (13 . 14))
(s-matched-positions-all ""{{\\(.+?\\)}}"" ""{{Hello}} World, {{Emacs}}!"" 0) ;; => '((0 . 9) (17 . 26))
(s-matched-positions-all ""{{\\(.+?\\)}}"" ""{{Hello}} World, {{Emacs}}!"" 1) ;; => '((2 . 7) (19 . 24))
```

### s-slice-at `(regexp s)`

Slices `s` up at every index matching `regexp`.

```cl
(s-slice-at ""-"" ""abc"") ;; => '(""abc"")
(s-slice-at ""-"" ""abc-def"") ;; => '(""abc"" ""-def"")
(s-slice-at ""[.#]"" ""abc.def.ghi#id"") ;; => '(""abc"" "".def"" "".ghi"" ""#id"")
```

### s-split `(separator s &optional omit-nulls)`

Split `s` into substrings bounded by matches for regexp `separator`.
If `omit-nulls` is non-nil, zero-length substrings are omitted.

This is a simple wrapper around the built-in `split-string`.

```cl
(s-split ""|"" ""a|bc|12|3"") ;; => '(""a"" ""bc"" ""12"" ""3"")
(s-split "":"" ""a,c,d"") ;; => '(""a,c,d"")
(s-split ""\n"" ""z\nefg\n"") ;; => '(""z"" ""efg"" """")
```

### s-split-up-to `(separator s n &optional omit-nulls)`

Split `s` up to `n` times into substrings bounded by matches for regexp `separator`.

If `omit-nulls` is non-nil, zero-length substrings are omitted.

See also `s-split`.

```cl
(s-split-up-to ""\\s-*-\\s-*"" ""Author - Track-number-one"" 1) ;; => '(""Author"" ""Track-number-one"")
(s-split-up-to ""\\s-*-\\s-*"" ""Author - Track-number-one"" 2) ;; => '(""Author"" ""Track"" ""number-one"")
(s-split-up-to ""|"" ""foo||bar|baz|qux"" 3 t) ;; => '(""foo"" ""bar"" ""baz|qux"")
```

### s-join `(separator strings)`

Join all the strings in `strings` with `separator` in between.

```cl
(s-join ""+"" '(""abc"" ""def"" ""ghi"")) ;; => ""abc+def+ghi""
(s-join ""\n"" '(""abc"" ""def"" ""ghi"")) ;; => ""abc\ndef\nghi""
```


### s-equals? `(s1 s2)`

Is `s1` equal to `s2`?

This is a simple wrapper around the built-in `string-equal`.

```cl
(s-equals? ""abc"" ""ABC"") ;; => nil
(s-equals? ""abc"" ""abc"") ;; => t
```

### s-less? `(s1 s2)`

Is `s1` less than `s2`?

This is a simple wrapper around the built-in `string-lessp`.

```cl
(s-less? ""abc"" ""abd"") ;; => t
(s-less? ""abd"" ""abc"") ;; => nil
(s-less? ""abc"" ""abc"") ;; => nil
```

### s-matches? `(regexp s &optional start)`

Does `regexp` match `s`?
If `start` is non-nil the search starts at that index.

This is a simple wrapper around the built-in `string-match-p`.

```cl
(s-matches? ""^[0-9]+$"" ""123"") ;; => t
(s-matches? ""^[0-9]+$"" ""a123"") ;; => nil
(s-matches? ""1"" ""1a"" 1) ;; => nil
```

### s-blank? `(s)`

Is `s` nil or the empty string?

```cl
(s-blank? """") ;; => t
(s-blank? nil) ;; => t
(s-blank? "" "") ;; => nil
```

### s-present? `(s)`

Is `s` anything but nil or the empty string?

```cl
(s-present? """") ;; => nil
(s-present? nil) ;; => nil
(s-present? "" "") ;; => t
```

### s-ends-with? `(suffix s &optional ignore-case)`

Does `s` end with `suffix`?

If `ignore-case` is non-nil, the comparison is done without paying
attention to case differences.

Alias: `s-suffix?`

```cl
(s-ends-with? "".md"" ""readme.md"") ;; => t
(s-ends-with? "".MD"" ""readme.md"") ;; => nil
(s-ends-with? "".MD"" ""readme.md"" t) ;; => t
```

### s-starts-with? `(prefix s &optional ignore-case)`

Does `s` start with `prefix`?

If `ignore-case` is non-nil, the comparison is done without paying
attention to case differences.

Alias: `s-prefix?`. This is a simple wrapper around the built-in
`string-prefix-p`.

```cl
(s-starts-with? ""lib/"" ""lib/file.js"") ;; => t
(s-starts-with? ""LIB/"" ""lib/file.js"") ;; => nil
(s-starts-with? ""LIB/"" ""lib/file.js"" t) ;; => t
```

### s-contains? `(needle s &optional ignore-case)`

Does `s` contain `needle`?

If `ignore-case` is non-nil, the comparison is done without paying
attention to case differences.

```cl
(s-contains? ""file"" ""lib/file.js"") ;; => t
(s-contains? ""nope"" ""lib/file.js"") ;; => nil
(s-contains? ""^a"" ""it's not ^a regexp"") ;; => t
```

### s-lowercase? `(s)`

Are all the letters in `s` in lower case?

```cl
(s-lowercase? ""file"") ;; => t
(s-lowercase? ""File"") ;; => nil
(s-lowercase? ""filä"") ;; => t
```

### s-uppercase? `(s)`

Are all the letters in `s` in upper case?

```cl
(s-uppercase? ""HULK SMASH"") ;; => t
(s-uppercase? ""Bruce no smash"") ;; => nil
(s-uppercase? ""FöB"") ;; => nil
```

### s-mixedcase? `(s)`

Are there both lower case and upper case letters in `s`?

```cl
(s-mixedcase? ""HULK SMASH"") ;; => nil
(s-mixedcase? ""Bruce no smash"") ;; => t
(s-mixedcase? ""BRÜCE"") ;; => nil
```

### s-capitalized? `(s)`

In `s`, is the first letter upper case, and all other letters lower case?

```cl
(s-capitalized? ""Capitalized"") ;; => t
(s-capitalized? ""I am capitalized"") ;; => t
(s-capitalized? ""I Am Titleized"") ;; => nil
```

### s-numeric? `(s)`

Is `s` a number?

```cl
(s-numeric? ""123"") ;; => t
(s-numeric? ""onetwothree"") ;; => nil
(s-numeric? ""7a"") ;; => nil
```


### s-replace `(old new s)`

Replaces `old` with `new` in `s`.

```cl
(s-replace ""file"" ""nope"" ""lib/file.js"") ;; => ""lib/nope.js""
(s-replace ""^a"" ""\\1"" ""it's not ^a regexp"") ;; => ""it's not \\1 regexp""
```

### s-replace-all `(replacements s)`

`replacements` is a list of cons-cells. Each `car` is replaced with `cdr` in `s`.

```cl
(s-replace-all '((""lib"" . ""test"") (""file"" . ""file_test"")) ""lib/file.js"") ;; => ""test/file_test.js""
(s-replace-all '((""lib"" . ""test"") (""test"" . ""lib"")) ""lib/test.js"") ;; => ""test/lib.js""
```

### s-downcase `(s)`

Convert `s` to lower case.

This is a simple wrapper around the built-in `downcase`.

```cl
(s-downcase ""ABC"") ;; => ""abc""
```

### s-upcase `(s)`

Convert `s` to upper case.

This is a simple wrapper around the built-in `upcase`.

```cl
(s-upcase ""abc"") ;; => ""ABC""
```

### s-capitalize `(s)`

Convert the first word's first character to upper case and the rest to lower case in `s`.

```cl
(s-capitalize ""abc DEF"") ;; => ""Abc def""
(s-capitalize ""abc.DEF"") ;; => ""Abc.def""
```

### s-titleize `(s)`

Convert each word's first character to upper case and the rest to lower case in `s`.

This is a simple wrapper around the built-in `capitalize`.

```cl
(s-titleize ""abc DEF"") ;; => ""Abc Def""
(s-titleize ""abc.DEF"") ;; => ""Abc.Def""
```

### s-with `(s form &rest more)`

Threads `s` through the forms. Inserts `s` as the last item
in the first form, making a list of it if it is not a list
already. If there are more forms, inserts the first form as the
last item in second form, etc.

```cl
(s-with ""   hulk smash   "" s-trim s-upcase) ;; => ""HULK SMASH""
(s-with ""My car is a Toyota"" (s-replace ""car"" ""name"") (s-replace ""a Toyota"" ""Bond"") (s-append "", James Bond"")) ;; => ""My name is Bond, James Bond""
(s-with ""abc \ndef  \nghi"" s-lines (mapcar 's-trim) (s-join ""-"") s-reverse) ;; => ""ihg-fed-cba""
```

### s-index-of `(needle s &optional ignore-case)`

Returns first index of `needle` in `s`, or nil.

If `ignore-case` is non-nil, the comparison is done without paying
attention to case differences.

```cl
(s-index-of ""abc"" ""abcdef"") ;; => 0
(s-index-of ""CDE"" ""abcdef"" t) ;; => 2
(s-index-of ""n.t"" ""not a regexp"") ;; => nil
```

### s-reverse `(s)`

Return the reverse of `s`.

```cl
(s-reverse ""abc"") ;; => ""cba""
(s-reverse ""ab xyz"") ;; => ""zyx ba""
(s-reverse """") ;; => """"
```

### s-presence `(s)`

Return `s` if it's `s-present?`, otherwise return nil.

```cl
(s-presence nil) ;; => nil
(s-presence """") ;; => nil
(s-presence ""foo"") ;; => ""foo""
```

### s-format `(template replacer &optional extra)`

Format `template` with the function `replacer`.

`replacer` takes an argument of the format variable and optionally
an extra argument which is the `extra` value from the call to
`s-format`.

Several standard `s-format` helper functions are recognized and
adapted for this:

    (s-format ""${name}"" 'gethash hash-table)
    (s-format ""${name}"" 'aget alist)
    (s-format ""$0"" 'elt sequence)

The `replacer` function may be used to do any other kind of
transformation.

```cl
(s-format ""help ${name}! I'm ${malady}"" 'aget '((""name"" . ""nic"") (""malady"" . ""on fire""))) ;; => ""help nic! I'm on fire""
(s-format ""hello ${name}, nice day"" (lambda (var-name) ""nic"")) ;; => ""hello nic, nice day""
(s-format ""hello $0, nice $1"" 'elt '(""nic"" ""day"")) ;; => ""hello nic, nice day""
```

### s-lex-format `(format-str)`

`s-format` with the current environment.

`format-str` may use the `s-format` variable reference to refer to
any variable:

 (let ((x 1))
   (s-lex-format ""x is: ${x}""))

The values of the variables are interpolated with ""%s"" unless
the variable `s-lex-value-as-lisp` is `t` and then they are
interpolated with ""%S"".

```cl
(let ((x 1)) (s-lex-format ""x is ${x}"")) ;; => ""x is 1""
(let ((str1 ""this"") (str2 ""that"")) (s-lex-format ""${str1} and ${str2}"")) ;; => ""this and that""
(let ((foo ""Hello\\nWorld"")) (s-lex-format ""${foo}"")) ;; => ""Hello\\nWorld""
```

### s-count-matches `(regexp s &optional start end)`

Count occurrences of `regexp` in `s'.

`start`, inclusive, and `end`, exclusive, delimit the part of `s`
to match. 

```cl
(s-count-matches ""a"" ""aba"") ;; => 2
(s-count-matches ""a"" ""aba"" 0 2) ;; => 1
(s-count-matches ""\\w\\{2\\}[0-9]+"" ""ab1bab2frobinator"") ;; => 2
```

### s-wrap `(s prefix &optional suffix)`

Wrap string `s` with `prefix` and optionally `suffix`.

Return string `s` with `prefix` prepended.  If `suffix` is present, it
is appended, otherwise `prefix` is used as both prefix and
suffix.

```cl
(s-wrap ""foo"" ""\"""") ;; => ""\""foo\""""
(s-wrap ""foo"" ""("" "")"") ;; => ""(foo)""
(s-wrap ""foo"" ""bar"") ;; => ""barfoobar""
```


### s-split-words `(s)`

Split `s` into list of words.

```cl
(s-split-words ""under_score"") ;; => '(""under"" ""score"")
(s-split-words ""some-dashed-words"") ;; => '(""some"" ""dashed"" ""words"")
(s-split-words ""evenCamelCase"") ;; => '(""even"" ""Camel"" ""Case"")
```

### s-lower-camel-case `(s)`

Convert `s` to lowerCamelCase.

```cl
(s-lower-camel-case ""some words"") ;; => ""someWords""
(s-lower-camel-case ""dashed-words"") ;; => ""dashedWords""
(s-lower-camel-case ""under_scored_words"") ;; => ""underScoredWords""
```

### s-upper-camel-case `(s)`

Convert `s` to UpperCamelCase.

```cl
(s-upper-camel-case ""some words"") ;; => ""SomeWords""
(s-upper-camel-case ""dashed-words"") ;; => ""DashedWords""
(s-upper-camel-case ""under_scored_words"") ;; => ""UnderScoredWords""
```

### s-snake-case `(s)`

Convert `s` to snake_case.

```cl
(s-snake-case ""some words"") ;; => ""some_words""
(s-snake-case ""dashed-words"") ;; => ""dashed_words""
(s-snake-case ""camelCasedWords"") ;; => ""camel_cased_words""
```

### s-dashed-words `(s)`

Convert `s` to dashed-words.

```cl
(s-dashed-words ""some words"") ;; => ""some-words""
(s-dashed-words ""under_scored_words"") ;; => ""under-scored-words""
(s-dashed-words ""camelCasedWords"") ;; => ""camel-cased-words""
```

### s-capitalized-words `(s)`

Convert `s` to Capitalized words.

```cl
(s-capitalized-words ""some words"") ;; => ""Some words""
(s-capitalized-words ""under_scored_words"") ;; => ""Under scored words""
(s-capitalized-words ""camelCasedWords"") ;; => ""Camel cased words""
```

### s-titleized-words `(s)`

Convert `s` to Titleized Words.

```cl
(s-titleized-words ""some words"") ;; => ""Some Words""
(s-titleized-words ""under_scored_words"") ;; => ""Under Scored Words""
(s-titleized-words ""camelCasedWords"") ;; => ""Camel Cased Words""
```

### s-word-initials `(s)`

Convert `s` to its initials.

```cl
(s-word-initials ""some words"") ;; => ""sw""
(s-word-initials ""under_scored_words"") ;; => ""usw""
(s-word-initials ""camelCasedWords"") ;; => ""cCW""
```

### s-blank-str? `(s)`

Is `s` nil or the empty string or string only contains whitespace?

```cl
(s-blank-str? ""  \t \r   "") ;; => t
(s-blank-str? ""    "") ;; => t
(s-blank-str? ""\t\r"") ;; => t
```


## What's with the built-in wrappers?

Imagine looking through the function list and seeing `s-ends-with?`, but
`s-starts-with?` is nowhere to be found. Why? Well, because Emacs already has
`string-prefix-p`. Now you're starting out slightly confused, then have to go
somewhere else to dig for the command you were looking for.

The wrapping functions serve as both documentation for existing functions and
makes for a consistent API.

## Other string related libraries

* [inflections](https://github.com/eschulte/jump.el/blob/master/inflections.el) package
provides functions for strings pluralization and singularization.

* [levenshtein](http://emacswiki.org/emacs/levenshtein.el) package provides a function to
calculate the Levenshtein distance between two strings.

* [string-utils](https://github.com/rolandwalker/string-utils) is another general string manipulation library.

## Changelist

### From 1.11.0 to 1.12.0

- Alias all functions ending in `?` (Tianxiang Xiong)
- Add `s-blank-str?` (Aborn Jiang)
- Several bugfixes

### From 1.10.0 to 1.11.0

- Add `s-matched-positions-all` (ono hiroko)

### From 1.9.0 to 1.10.0

- Add `s-wrap` (Johan Andersson)
- Add `s-split-up-to` (Matus Goljer)
- Fix `s-reverse` for Unicode combining characters. (Christopher Wellons)

### From 1.8.0 to 1.9.0

- Add `s-count-matches` (Lars Andersen)

### From 1.7.0 to 1.8.0

- Add `s-present?` and `s-present?` (Johan Andersson)
- Better handling of international characters

### From 1.6.0 to 1.7.0

- Add `s-word-initials` (Sylvain Rousseau)
- Better handling of camel cased strings (@Bruce-Connor)

### From 1.5.0 to 1.6.0

- Add `s-pad-left` and `s-pad-right`
- Bugfixes for `s-format` (Nic Ferrier)

### From 1.4.0 to 1.5.0

- Add `s-all-match-strings` (Geoff Gole)
- Add `s-lex-format` (Nic Ferrier)

### From 1.3.1 to 1.4.0

- Add `s-capitalized?`
- Add `s-replace-all`
- Add `s-slice-at`
- Add `s-split` alias for `split-string` (Rüdiger Sonderfeld)
- Add `s-less?` predicate (Rüdiger Sonderfeld)
- Add START parameter to `s-matches?` (Rüdiger Sonderfeld)
- Bugfixes

### From 1.3.0 to 1.3.1

- Add `s-numeric?`
- Add `s-match` (Arthur Andersen)
- Add `s-format` (Nic Ferrier)
- Move .el files out of root to avoid problems with require.

### From 1.2.1 to 1.3.0

- **Breaking change:** `s-capitalize` now converts the first word's first
  character to upper case and the rest to lower case. `s-titleize`
  works like the old `s-capitalize` and capitalizes each word.
  (Johan Andersson)

- `s-capitalized-words` and `s-titleized-words` mirror this change.

## Contributors

* [Arthur Andersen](https://github.com/leoc) contributed `s-match`
* [Rolando](https://github.com/rolando2424) contributed `s-shared-start` and `s-shared-end`
* [Johan Andersson](https://github.com/rejeep) contributed `s-presence`, `s-present?` and fixed `s-titleize` vs `s-capitalize`
* [Nic Ferrier](https://github.com/nicferrier) added `s-format` and `s-lex-format`
* [Rüdiger Sonderfeld](https://github.com/ruediger) contributed `s-less?`, `s-split` and several bugfixes.
* [Geoff Gole](https://github.com/gsg) contributed `s-all-match-strings`
* [Sylvain Rousseau](https://github.com/thisirs) contributed `s-word-initials`
* [Lars Andersen](https://github.com/expez) contributed `s-count-matches`
* [ono hiroko](https://github.com/kuanyui) contributed `s-matched-positions-all`

Thanks!

## Contribute

Yes, please do. Pure functions in the string manipulation realm only,
please. There's a suite of tests in `dev/examples.el`, so remember to add
tests for your function, or I might break it later.

You'll find the repo at:

    https://github.com/magnars/s.el

Run the tests with

    ./run-tests.sh

Create the docs with

    ./create-docs.sh

I highly recommend that you install these as a pre-commit hook, so that
the tests are always running and the docs are always in sync:

    cp pre-commit.sh .git/hooks/pre-commit

Oh, and don't edit `README.md` directly, it is auto-generated.
Change `readme-template.md` or `examples-to-docs.el` instead.

## License

Copyright (C) 2012-2022 Magnar Sveen

Authors: Magnar Sveen 
Maintainer: Jason Milkins 
Keywords: strings

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see .
",,2012-10-02T16:22:59Z,2023-04-14T14:35:25Z,42,41,1024,30,"('magnars', 171), ('jasonm23', 48), ('nicferrier', 12), ('ruediger', 11), ('lujun9972', 9), ('rejeep', 6), ('phst', 5), ('syohex', 5), ('gsg', 4), ('Fuco1', 4), ('kuanyui', 3), ('aborn', 3), ('zck', 3), ('Wilfred', 3), ('Malabarba', 3), ('odanoburu', 2), ('rolpereira', 2), ('tarsius', 2), ('cy20lin', 2), ('basil-conto', 2), ('thisirs', 1), ('ptrv', 1), ('expez', 1), ('dr-scsi', 1), ('xiongtx', 1), ('purcell', 1), ('Steve Lamb', 1), ('swsnr', 1), ('eigengrau', 1), ('sachac', 1), ('Silex', 1), ('Olzaq', 1), ('pd', 1), ('birkenfeld', 1), ('EdwardBetts', 1), ('Delapouite', 1), ('daantjie', 1), ('minad', 1), ('cpitclaudel', 1), ('skeeto', 1), ('leoc', 1), ('asok', 1)",22,21,
Mack2887/WeakAuras1,Mack's WeakAuras for WoD,"WeakAuras1
==========

Mack's WeakAuras for WoD
",,2014-10-22T19:35:28Z,2015-01-14T01:25:10Z,1,1,12,10,"('Mack2887', 22)",0,0,
BytomDAO/bytom,Official Go implementation of the Bytom protocol ,"Bytom
======

[![Build Status](https://travis-ci.org/Bytom/bytom.svg)](https://travis-ci.org/Bytom/bytom) [![AGPL v3](https://img.shields.io/badge/license-AGPL%20v3-brightgreen.svg)](./LICENSE)

**Official golang implementation of the Bytom protocol.**

Automated builds are available for stable releases and the unstable master branch. Binary archives are published at https://github.com/Bytom/bytom/releases.

## What is Bytom?

Bytom is software designed to operate and connect to highly scalable blockchain networks confirming to the Bytom Blockchain Protocol, which allows partipicants to define, issue and transfer digitial assets on a multi-asset shared ledger. Please refer to the [White Paper](https://github.com/Bytom/wiki/blob/master/White-Paper/%E6%AF%94%E5%8E%9F%E9%93%BE%E6%8A%80%E6%9C%AF%E7%99%BD%E7%9A%AE%E4%B9%A6-%E8%8B%B1%E6%96%87%E7%89%88.md) for more details.

In the current state `bytom` is able to:

- Manage key, account as well as asset
- Send transactions, i.e., issue, spend and retire asset

## Installing with Homebrew

```
brew tap bytom/bytom && brew install bytom
```

## Building from source

### Requirements

- [Go](https://golang.org/doc/install) version 1.8 or higher, with `$GOPATH` set to your preferred directory

### Installation

Ensure Go with the supported version is installed properly:

```bash
$ go version
$ go env GOROOT GOPATH
```

- Get the source code

``` bash
$ git clone https://github.com/Bytom/bytom.git $GOPATH/src/github.com/bytom/bytom
```

- Build source code

``` bash
$ cd $GOPATH/src/github.com/bytom/bytom
$ make bytomd    # build bytomd
$ make bytomcli  # build bytomcli
```

When successfully building the project, the `bytomd` and `bytomcli` binary should be present in `cmd/bytomd` and `cmd/bytomcli` directory, respectively.

### Executables

The Bytom project comes with several executables found in the `cmd` directory.

| Command      | Description                                                  |
| ------------ | ------------------------------------------------------------ |
| **bytomd**   | bytomd command can help to initialize and launch bytom domain by custom parameters. `bytomd --help` for command line options. |
| **bytomcli** | Our main Bytom CLI client. It is the entry point into the Bytom network (main-, test- or private net), capable of running as a full node archive node (retaining all historical state). It can be used by other processes as a gateway into the Bytom network via JSON RPC endpoints exposed on top of HTTP, WebSocket and/or IPC transports. `bytomcli --help` and the [bytomcli Wiki page](https://github.com/Bytom/bytom/wiki/Command-Line-Options) for command line options. |

## Running bytom

Currently, bytom is still in active development and a ton of work needs to be done, but we also provide the following content for these eager to do something with `bytom`. This section won't cover all the commands of `bytomd` and `bytomcli` at length, for more information, please the help of every command, e.g., `bytomcli help`.

### Initialize

First of all, initialize the node:

```bash
$ cd ./cmd/bytomd
$ ./bytomd init --chain_id mainnet
```

There are three options for the flag `--chain_id`:

- `mainnet`: connect to the mainnet.
- `testnet`: connect to the testnet wisdom.
- `solonet`: standalone mode.

After that, you'll see `config.toml` generated, then launch the node.

### launch

``` bash
$ ./bytomd node
```

available flags for `bytomd node`:

```
Flags:
      --auth.disable                     Disable rpc access authenticate
      --chain_id string                  Select network type
  -h, --help                             help for node
      --log_file string                  Log output file (default ""log"")
      --log_level string                 Select log level(debug, info, warn, error or fatal)
      --p2p.dial_timeout int             Set dial timeout (default 3)
      --p2p.handshake_timeout int        Set handshake timeout (default 30)
      --p2p.keep_dial string             Peers addresses try keeping connecting to, separated by ',' (for example ""1.1.1.1:46657;2.2.2.2:46658"")
      --p2p.laddr string                 Node listen address. (0.0.0.0:0 means any interface, any port) (default ""tcp://0.0.0.0:46656"")
      --p2p.lan_discoverable             Whether the node can be discovered by nodes in the LAN (default true)
      --p2p.max_num_peers int            Set max num peers (default 50)
      --p2p.node_key string              Node key for p2p communication
      --p2p.proxy_address string         Connect via SOCKS5 proxy (eg. 127.0.0.1:1086)
      --p2p.proxy_password string        Password for proxy server
      --p2p.proxy_username string        Username for proxy server
      --p2p.seeds string                 Comma delimited host:port seed nodes
      --p2p.skip_upnp                    Skip UPNP configuration
      --prof_laddr string                Use http to profile bytomd programs
      --vault_mode                       Run in the offline enviroment
      --wallet.disable                   Disable wallet
      --wallet.rescan                    Rescan wallet
      --wallet.txindex                   Save global tx index
      --web.closed                       Lanch web browser or not
      --ws.max_num_concurrent_reqs int   Max number of concurrent websocket requests that may be processed concurrently (default 20)
      --ws.max_num_websockets int        Max number of websocket connections (default 25)

Global Flags:
      --home string   root directory for config and data
  -r, --root string   DEPRECATED. Use --home (default ""/Users/zcc/Library/Application Support/Bytom"")
      --trace         print out full stack trace on errors
```

Given the `bytomd` node is running, the general workflow is as follows:

- create key, then you can create account and asset.
- send transaction, i.e., build, sign and submit transaction.
- query all kinds of information, let's say, avaliable key, account, key, balances, transactions, etc.

### Dashboard

Access the dashboard:

```
$ open http://localhost:9888/
```

### In Docker

Ensure your [Docker](https://www.docker.com/) version is 17.05 or higher.

```bash
$ docker build -t bytom .
```

For the usage please refer to [running-in-docker-wiki](https://github.com/Bytom/bytom/wiki/Running-in-Docker).

## Contributing

Thank you for considering helping out with the source code! Any contributions are highly appreciated, and we are grateful for even the smallest of fixes!

If you run into an issue, feel free to [bytom issues](https://github.com/Bytom/bytom/issues/) in this repository. We are glad to help!

## License

[AGPL v3](./LICENSE)
","'ai', 'blockchain', 'contract', 'decentralized', 'genai', 'golang', 'nft'",2017-07-14T01:47:33Z,2024-01-02T03:17:32Z,52,39,1282,136,"('Paladz', 532), ('gguoss', 241), ('oysheng', 205), ('wliyongfeng', 202), ('Colt-Z', 189), ('yahtoo', 159), ('shenao78', 125), ('HAOYUatHZ', 77), ('icodezjb', 59), ('liuchengxu', 52), ('ZhitingLin', 33), ('Blockmeta-区块元', 32), ('langyu', 32), ('Colt', 29), ('wz', 28), ('Lbqds', 28), ('wyjDoraemon', 26), ('zhouyasong', 25), ('zruijie', 23), ('bitstory', 22), ('DeKaiju', 17), ('DeKaiju', 14), ('freewind', 13), ('shanhuhai5739', 10), ('Chengcheng Zhang', 9), ('hauson', 9), ('Blockmeta', 9), ('jeason-ustc', 8), ('jacksoom', 7), ('yzb', 7), ('mingjingc', 6), ('WangYifu', 6), ('boomyl', 5), ('jeason', 5), ('iczc', 5), ('Coffcer', 4), ('John Chi', 3), ('successli', 3), ('paladz', 2), ('Broadroad', 2), ('cryptowen', 2), ('vinberm', 2), ('Dkaiju', 2), ('d-sfounis', 1), ('Cha0sCa1mer', 1), ('RockerFlower', 1), ('jerry-sl', 1), ('Zeroman', 1), ('cancelloveyan', 1), ('topac', 1), ('detailyang', 1), ('崔浩鑫', 1)",9,7,
adolfosilva/libgen.py,"Download books from gen.lib.rus.ec, libgen.io, libgen.pw, b-ok.org and bookfi.net","libgen.py |PyPy Package| |Build Status| |License: MIT|
======================================================

A script to download books from gen.lib.rus.ec, libgen.io, libgen.pw, b-ok.org and bookfi.net.

Installation
~~~~~~~~~~~~

To install just run:

.. code:: shell

    $ pip3 install libgen.py


Usage
~~~~~

.. code:: shell

    $ libgen -h
    usage: libgen [-h] -s SEARCH [-n]

    Read more, kids.

    optional arguments:
      -h, --help            show this help message and exit
      -s SEARCH, --search SEARCH
                            search term
      -n, --non-interactive
                            non interactive mode, download first available choice


Dependencies
~~~~~~~~~~~~

Install all the dependencies with:

.. code:: bash

    $ pip3 install -r requirements.txt

License
~~~~~~~

Distributed under the MIT license. See LICENSE for details.

.. |PyPy Package| image:: https://badge.fury.io/py/libgen.py.svg
   :target: https://badge.fury.io/py/libgen.py
.. |Build Status| image:: https://travis-ci.org/adolfosilva/libgen.py.svg?branch=master
   :target: https://travis-ci.org/adolfosilva/libgen.py
.. |License: MIT| image:: https://img.shields.io/badge/License-MIT-orange.svg
   :target: https://opensource.org/licenses/MIT
","'bok', 'bookfi', 'books', 'genlibrus', 'libgen', 'python'",2014-07-31T20:30:23Z,2019-05-31T08:43:58Z,11,7,259,13,"('Adolfo Silva', 43), ('anomico', 13), ('petRUShka', 7), ('dufferzafar', 5), ('Anomico', 1), ('Adolfo Braga', 1), ('Adolfo Silva', 1), ('dunn', 1), ('Evidlo', 1), ('priccis', 1), ('semchev', 1)",7,5,
CodeTips/BaiduNetdiskPlugin-macOS,For macOS.百度网盘 破解SVIP、下载速度限制~,"# BaiduNetdiskPlugin-macOS

![platform](https://img.shields.io/badge/platform-macos-lightgrey.svg)  [![GitHub license](https://img.shields.io/github/license/CodeTips/BaiduNetdiskPlugin-macOS.svg)](https://github.com/CodeTips/BaiduNetdiskPlugin-macOS/blob/master/LICENSE)

![baidubetdiskplugin](./Other/Screenshots/baidubetdiskplugin.png)
![baidubetdiskplugin_1](./Other/Screenshots/baidubetdiskplugin_1.png)
### 说明
* **20191118更新，去掉自动检查更新功能。由于个人精力和能力有限，此项目不再更新支持新版网盘。如使用，请下载2.2.2版本 [官方下载地址][1]。**

* **连续下载10G数据后，会被限制速度到单文件20kb。所以，这个补丁偶尔用用就行，别一直用。**

* **免责声明：本项目旨在学习macOS 逆向的一点实践，不可使用于商业和个人其他意图。若使用不当，均由个人承担。**

* **本项目只用于学习和交流，有能力的请购买官方VIP服务。**

* **包含功能：本地SVIP图标显示，去除本地下载速度限制（服务端已添加限制单文件200kb左右），去除本地极速下载试用时长限制，倒计时永久显示8秒（服务的token大概3分钟过期。意思就是虽然不倒计时，但是3分钟后速度还是会降下来）。**

* **破解完成后，下载速度还是没有变化，可能是资源热度问题，或者是你已经进入百度网盘黑名单。**

* **此项目不再更新，有问题请Issue中找答案，或者添加我微信（博客关于有二维码），很高兴能帮到你。**

* **不会用的伸手狗请滚粗，别出问题后在这里乱咬人。**

### 安装

1. 懒人安装
* 打开`应用程序`->`实用工具`->`Terminal(终端)`，执行以下命令即可。(需要git支持)
`cd ~/Downloads && git clone https://github.com/CodeTips/BaiduNetdiskPlugin-macOS.git && ./BaiduNetdiskPlugin-macOS/Other/Install.sh`
2. 普通安装
* 点击`clone or download`下载项目并解压，打开`Terminal(终端)`，拖动解压后`Install.sh` 文件(在 Other 文件夹中)到 Terminal 回车即可。
3. 重编译安装
* 点击`clone or download`下载项目，解压运行`libBaiduNetdiskPlugin.xcodeproj`，然后`Edit Schemes`->`Executable`->`Other`->选择`百度网盘`。然后运行工程，因为百度网盘有 VMProtect加壳，运行后会有以下提示：
![baidubetdiskplugin_2](./Other/Screenshots/baidubetdiskplugin_2.png)
直接点击OK。
* 然后运行或者重启`百度网盘`，如果用户VIP状态改变，证明成功。

### 卸载

 1. 如果第一种方法安装的。
 * 打开`应用程序`->`实用工具`->`Terminal(终端)`，执行以下命令即可。`cd ~/Downloads && ./BaiduNetdiskPlugin-macOS/Other/Uninstall.sh`
 2. 通用卸载方法。
 * 打开`应用程序`->`实用工具`->`Terminal(终端)`，执行以下命令即可。`cd /Applications/BaiduNetdisk_mac.app/Contents/MacOS/ && rm -rf BaiduNetdisk_mac libBaiduNetdiskPlugin.framework && mv BaiduNetdisk_mac_backup BaiduNetdisk_mac`

**以上方法可以完全卸载此功能。如果还是不行的话，那么抱歉，可能您需要重新安装了**
 
### 依赖

* [insert_dylib](https://github.com/Tyilo/insert_dylib)

### 最后
* 使用愉快~


  [1]: http://issuecdn.baidupcs.com/issue/netdisk/MACguanjia/BaiduNetdisk_mac_2.2.2.dmg
",,2018-03-06T13:48:48Z,2020-10-17T13:18:17Z,5,2,8674,221,"('CodeTips', 12), ('CodeTips', 10), ('Loveletter', 1), ('Loveletter', 1), ('QifanYang-bw', 1)",3,1,
XuShaohua/bcloud,百度网盘的linux桌面客户端,"关于
=====
bcloud 是[百度网盘](http://pan.baidu.com)的Linux桌面客户端.

已经支持的Linux系统/版本:

* ArchLinux
* Debian sid
* Debian testing
* Debian stable
* Fedora 20
* Fedora 21
* Gentoo
* OpenSuse 13
* Ubuntu 14.04
* Ubuntu 13.10
* Linux Mint 17


类似项目
=======
[bypy](https://github.com/houtianze/bypy) 终端里使用的百度网盘客户端, 它
使用了百度网盘PCS接口.

如果需要, 也可以直接调用bcloud提供的百度网盘接口, 使用bcloud/auth.py得到百度
服务器的连接授权, 然后使用bcloud/pcs.py调用相应的网盘接口.


安装
=======
请用户直接到 [bcloud-packages](https://github.com/LiuLang/bcloud-packages)
下载发行版相对应的安装包, 比如deb, rpm等..

Q&A
===
1.为什么bcloud不支持本地与远程服务器同步?

因为百度网盘没有公开它的同步算法. 参考这个[issue](https://github.com/LiuLang/bcloud/issues/11)

2.能不能支持其它网盘?

我时间和精力都非常有限, 单单开发bcloud就占用了我一个多月的业余时间. 而且
本来工作之外的时间就非常少, 还有很多其它事情要处理. 所以如果你报告了bug或者
反馈了问题, 没有及时收到回复, 请多等待一下, 我会安排时间处理这些问题的.

3.如何设置keyring?
ArchLinux 用户最有可能遇到这个问题. 因为在debian/ubuntu/mint等系统里面, keyring
在安装后会自动被配置好, 而在arch中, 这些都需要用户手动设定, 很麻烦.

arch的wiki里面有完整的介绍, 请arch用户到[这里](https://wiki.archlinux.org/index.php/GNOME_Keyring)
读完整篇文章, 然后针对自己的桌面环境以及自己的需要, 选择相应的配置方式.

还有一篇类似的文档, 是gnomekeyring官方的, 有也相应[介绍](https://wiki.gnome.org/action/show/Projects/GnomeKeyring?action=show&redirect=GnomeKeyring#Automatic_Unlocking)

有位朋友写了一篇文章, 大致总结了一下他[解决gnome-keyring问题的方法](https://bbs.archlinuxcn.org/viewtopic.php?pid=20918), 如果arch用户还有什么细节上的问题, 可以
直接@Firef0x, 和他联系.

4.为什么不同的发行版里面, bcloud的界面不一样?
bcloud目前已经开始调用gtk3.12中的组件, 这样与新版gnome-shell的样式更统一;
但旧的发行版, 比如debian 7等, 里面的gtk3的版本很老, 只能继续使用旧的界面了.
它们在功能上并无差别.

5.有命令行界面吗?
bcloud只提供了GUI界面. 但是, 可以很方便的基于bcloud进行扩展, bcloud实现了百度网
盘的大部分接口, 其中bcloud/auth.py用于授权登录, bcloud/pcs.py是网盘接口.

比如, [这个issue](https://github.com/LiuLang/bcloud/issues/47)里面,
通过调用bcloud, 来遍历网盘, 得到文件目录结构.

6.如何设置代理?
bcloud支持桌面的全局代理设置, 比如在Gnome的网络设置里面可以加入代理.
也可以在终端里设置代理, 比如 `export http_proxy='http://127.0.0.1:8086'` 来设定
http代理, `export https_proxy='http://127.0.0.1:8086'` 来设定https代理, 设定完
之后, 在这个终端里运行 `$ bcloud-gui`, 这时, bcloud就会使用刚刚设定的网络代理.

要注意的是, bcloud的部分网络连接要求使用https, 这就要求你设定https代理后, 同时
导入相应的证书, 不然会出现错误.

7.bcloud播放在线视频时如何更流畅?

用视频播放器播放百度网盘视频时, 百度会识别UA字段.
[这位朋友写了mpv的修改方法](http://imzf.gitcafe.io/2015/04/05/%E8%AE%A9-BCloud-%E6%92%AD%E6%94%BE%E8%A7%86%E9%A2%91%E6%9B%B4%E6%B5%81%E7%95%85/),
可以参考一下.


截屏
====
![bcloud-dark](screenshots/bcloud-dark.png)
![bcloud-light](screenshots/bcloud-light.png)


版权
====
Copyright (C) 2014 [LiuLang](mailto:gsushzhsosgsu@gmail.com)

基于GNU通用许可协议第三版发布, 详细的许可信息请参考 [LICENSE](LICENSE)
",,2014-03-05T15:07:47Z,2019-06-17T07:11:15Z,14,12,1920,178,"('LiuLang', 422), ('CzBiX', 14), ('alex8224', 11), ('MofuMoca', 3), ('wzhd', 2), ('Aetf', 1), ('horasal', 1), ('iridiumcao', 1), ('libertas', 1), ('slawdan', 1), ('wuxinyumrx', 1), ('Endle', 1), ('bingosxs', 1), ('gshmu', 1)",9,8,
alvinr/docker-demo,Demo's for Docker,"# Orchestration & Networking demo
This repo contains some basic Docker demos and integration with various Databases
- Aerospike
- MariaDB
- MongoDB

At various times these have worked, but Docker is an ever changing beast, so no guarantee these will continue to work with the current Docker release.

The goal of the demo is to show the end to end development life-cycle building a Web + database application with the Docker eco-system. The demo specifically shows
- Deployment & Testing in development
- Definition & orchestration of services, in development and production
- Injecting production requirements e.g. HAProxy for Load balancing, concrete versions
- Scaling Services


# Cavets
* has been tested on Docker 1.12.1
* has been tested on os-x 10.10 & 10.11
* scripts will create machines based on the vmwarefusion driver. If you don't have that, then you will need to make some changes
* because boot2docker.iso is used, the locations of files will change if you use Ubuntu or something else. 
",,2015-06-16T15:52:58Z,2017-12-19T23:47:42Z,2,1,34,6,"('Alvin Richards', 41), ('alvinr', 15)",0,0,
daniellmb/ab-test,AngularJS A/B Test Service and Directives for creating declarative and imperative A/B/n tests.,"# ab-test
[![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Code GPA][cc-image]][cc-url]  [![Dependency Status][depstat-image]][depstat-url] [![Bower version][bower-image]][bower-url] [![NPM version][npm-image]][npm-url]

AngularJS A/B Test Service and Directives for creating declarative and imperative A/B/n tests.

### Loads of [Live Demos](http://daniellmb.github.io/ab-test/demo/)!

  - [Headlines & Sub-Headlines](http://daniellmb.github.io/ab-test/demo/index.html#Headlines)
  - [Paragraph Text](http://daniellmb.github.io/ab-test/demo/index.html#Paragraph)
  - [Testimonials](http://daniellmb.github.io/ab-test/demo/index.html#Testimonials)
  - [Social Proof](http://daniellmb.github.io/ab-test/demo/index.html#Social)
  - [Media Mentions](http://daniellmb.github.io/ab-test/demo/index.html#Media)
  - [Buttons (wording, size, color)](http://daniellmb.github.io/ab-test/demo/index.html#Buttons)
  - [Product Pricing](http://daniellmb.github.io/ab-test/demo/index.html#Pricing)
  - [Promotional Offers](http://daniellmb.github.io/ab-test/demo/index.html#Promotional)
  - [Images (wording, size, color)](http://daniellmb.github.io/ab-test/demo/index.html#Images)
  - [Awards and Badges](http://daniellmb.github.io/ab-test/demo/index.html#Awards)

## Install Choices
- `bower install ab-test`
- [download the zip](https://github.com/daniellmb/ab-test/archive/master.zip)

## Setup
1. Include the `ab-test.js` and `ab-test-service.js` scripts provided by this component into your app.
2. Add `ab.test` or `ab.test.directive` as a module dependency to your app.

## Usage

## `` Directive

### Properties
 - ab-frequency - REQUIRED: how often to show run the a/b test
 - ab-run - OPTIONAL: function to trigger running the test again
 - ab-shown - OPTIONAL: function to call when a variant is shown
 - ab-select (coming soon) - OPTIONAL: will be used to make sticky A/B tests

## `` Directive
### Properties
 - ab-control - OPTIONAL: specify a variant as the A/B test ""control""
 - ab-data - OPTIONAL: arbitrary data you may want to link to a variant, useful when logging.

## Sticky Tests

Running an A/B test is great but it's even better if you make the tests ""sticky"" to the user. Meaning if someone
at your site gets variant B the next time they load the page or come back they get variant B again and not A. You can
select a given variant by calling the `ab-select` method on the `` directive. How you track users is up to you,
but since A/B tests aren't permanent a simple solution will most likely do very well. One way would be to use a cookie with
[angular-uuid-service](https://github.com/daniellmb/angular-uuid-service) a light weight (214 byte) UUID generator service
for AngularJS that can be installed using `bower`. See the [demo](http://daniellmb.github.io/ab-test/demo/) for an example implementation.

### Running the demos

You can pick one of these options:

- serve this repository with your webserver
- use node.js and run `node scripts/web-server.js`

Then navigate your browser to `http://localhost:/demo/index.html` to see the app running in
your browser.

## Testing
- Run `npm install` and `bower install` to make sure you have all the development dependencies.
- Run `npm test` or `bash scripts/test.sh` to run all unit tests

### End to end testing
Requires a webserver;

- Run `npm install` and `bower install` to make sure you have all the development dependencies.
- Run `node ./scripts/web-server.js` or use your server that hosts the static files.
- Run the end-to-end tests from console with [Protractor](https://github.com/angular/protractor) via
    `bash scripts/e2e-test.sh`

## Contributing
Pull requests welcome :)
- Run `npm run gulp` to update the .min.js and min.js.map files with any changes you have made to ab-test.js.

## License
(The MIT License)

Copyright (c) 2014 Daniel Lamb 

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
'Software'), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

[cc-url]: https://codeclimate.com/github/daniellmb/ab-test
[cc-image]: https://codeclimate.com/github/daniellmb/ab-test.png
[bower-url]: http://bower.io/search/?q=ab-test
[bower-image]: https://badge.fury.io/bo/ab-test.png
[npm-url]: https://npmjs.org/package/ab-test
[npm-image]: https://badge.fury.io/js/ab-test.png
[travis-url]: https://travis-ci.org/daniellmb/ab-test
[travis-image]: https://api.travis-ci.org/daniellmb/ab-test.png
[coveralls-url]: https://coveralls.io/r/daniellmb/ab-test
[coveralls-image]: https://coveralls.io/repos/daniellmb/ab-test/badge.png
[depstat-url]: https://david-dm.org/daniellmb/ab-test
[depstat-image]: https://david-dm.org/daniellmb/ab-test.png?theme=shields.io
",,2014-04-06T16:27:52Z,2016-06-10T18:26:53Z,3,3,48,4,"('daniellmb', 17), ('cwill747', 7), ('tsikov', 1)",1,1,
lpg-it/BaiduYunVIP,"百度云百度网盘超级会员账号SVIP账号 分享, 另分享多款百度网盘不限速下载工具以及各大平台会员账号（迅雷 优酷 爱奇艺 腾讯视频等）.","如对你有帮助,请给个Star支持一下哦。

### 加入组织

总爱啰嗦: 说实在的，免费更新了一年多了，起初是因为自己经常要下东西，所以顺便更新一下，没想到这么多人关注。

最初分享一次账号, 一个月都不用管了, 可以一直满速用到会员到期. 现在不同了, 知道的人多了, 模仿我的人也多了, 账号一发出来很快失效, 每天都要更新, 纯公益确实难坚持.

为了让我更新更有动力, 大家可以加我的一个群, 这个群在群文件更新账号的同时更新淘宝京东优惠商品这方面的, 既能白嫖账号又能白嫖商品, 岂不美哉. 希望大家多多支持, 不需要捐款什么的, 大家用的舒服就好.

> QQ群： 564290777

**群里会分享一些淘宝京东的bug，主要还是买东西比较优惠, 我现在买东西基本都在群里买东西了。**加群的话最好不要用小号, 会自动清理, 谢谢配合.

然后账号呢每天在群里2点半左右更新, 目前更新顺序为: 先在群里更新, 然后更新B站(B站所得激励我会用来开通百度会员分享给大家), 最后更新Github.

关于其他各大平台账号 包括: 迅雷 腾讯视频 爱奇艺 优酷等, 最近失效很快, 如有看电影需要, 可以私聊我, 我帮你解决.

> QQ群： 564290777

## 说明

账号均为手动收集，并不是网上那种爬虫得来的账号，所以大家在使用的请不要滥用, 不用时退出账号。

[点击查看百度云账号](https://github.com/BlameKidd/BaiduYunVIP/blob/master/baiduYunVIP.md)

## 百度云不限速教程

- [百度云不限速方法一](http://note.youdao.com/noteshare?id=cb5be916679925fdd237084261591503&sub=713E33790E334D9C9856D34A67612330)
- [百度云不限速方法二](https://docs.qq.com/doc/DY3NXREZxekxUZFB5)

## 百度云不限速下载工具汇总

第三方下载工具暂停分享（群里有）。",,2019-03-26T01:22:20Z,2021-06-21T05:24:56Z,1,1,4100,196,"('lpg-it', 191)",0,0,
getlantern/lantern-binaries,This are the latest installers for the Lantern censorship circumvention tool,"## 蓝灯(Lantern Binaries)最新版本下载  Download Lantern 


[Windows 7及以上系统](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer.exe)      [备用地址 Alternative address](https://s3.amazonaws.com/lantern/lantern-installer.exe)  

[安卓版(4.1+) Android(4.1+)](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer.apk)               [备用地址 Alternative address](https://s3.amazonaws.com/lantern/lantern-installer.apk)  [Google Play 下载 Download](https://play.google.com/store/apps/details?id=org.getlantern.lantern) 

[苹果电脑版(OS X 10.11 El Capitan及以上)](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer.dmg)               [备用地址 Alternative address](https://s3.amazonaws.com/lantern/lantern-installer.dmg) 

Ubuntu 14.04及以上[(32位系统)](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer-32-bit.deb) [(64位系统)](https://raw.githubusercontent.com/getlantern/lantern-binaries/main/lantern-installer-64-bit.deb)

请大家收藏本页面，方便日后下载新版。
Bookmark this page to download the latest versions in the future.

**使用遇到问题，请阅读[蓝灯常见问题解决办法](https://github.com/getlantern/lantern/wiki) When you have a problem when using Lantern, please refer to [FAQ](https://github.com/getlantern/lantern/wiki)** 

## Betas
**If you would like to give the latest but more UNSTABLE BETA versions a try, you can find all of them at the following links:** **如果希望试用最新测试版，请点击如下下载链接：**
- [Android](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer-preview.apk)
- [Windows 7 and above](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer-preview.exe)
- [OSX 10.10 and above](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer-preview.dmg)
- [Ubuntu 14.04 32 bit](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer-preview-32-bit.deb)
- [Ubuntu 14.04 64 bit](https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer-preview-64-bit.deb)


蓝灯Windows下载 https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer.exe 蓝灯安卓下载 https://github.com/getlantern/lantern-binaries/raw/main/lantern-installer.apk

",'censorship-circumvention',2022-02-10T11:42:42Z,2024-06-18T10:15:12Z,6,5,87,13,"('oxtoacart', 1426), ('reflog', 1011), ('teamlantern', 491), ('myleshorton', 24), ('atavism', 4), ('atavism', 3)",0,0,
bokeh/bokeh,"Interactive Data Visualization in the browser, from  Python","
  
  


----

[Bokeh](https://bokeh.org) is an interactive visualization library for modern web browsers. It provides elegant, concise construction of versatile graphics and affords high-performance interactivity across large or streaming datasets. Bokeh can help anyone who wants to create interactive plots, dashboards, and data applications quickly and easily.





  Package

  
    <img src=""https://img.shields.io/pypi/v/bokeh?label=Version&color=ECD078&style=for-the-badge""
         alt=""Latest package version"" />
  

  
    
    <img src=""https://img.shields.io/pypi/pyversions/bokeh?color=ECD078&style=for-the-badge""
         alt=""Supported Python versions"" />
    
  

  
    
    <img src=""https://img.shields.io/github/license/bokeh/bokeh.svg?color=ECD078&style=for-the-badge""
         alt=""Bokeh license (BSD 3-clause)"" />
    
  





  Project

  
    <img src=""https://img.shields.io/github/contributors-anon/bokeh/bokeh?color=ECD078&style=for-the-badge""
         alt=""Github contributors"" />
  

  
    
    <img src=""https://img.shields.io/badge/sponsor-numfocus-ECD078?style=for-the-badge""
         alt=""Link to NumFOCUS"" />
    
  

  
    
    <img src=""https://img.shields.io/badge/documentation-latest-ECD078?style=for-the-badge""
         alt=""Link to documentation"" />
    
  





  Downloads

  
    
    <img src=""https://img.shields.io/pypi/dm/bokeh?color=D98B43&label=pypi&logo=python&logoColor=yellow&style=for-the-badge""
         alt=""PyPI downloads per month"" />
    
  

  
    
    <img src=""https://img.shields.io/conda/d/conda-forge/bokeh?style=for-the-badge&logo=python&color=D98B43&logoColor=yellow""
         alt=""Conda downloads per month"" />
    
  

  
    
    <img src=""https://img.shields.io/npm/dm/%40bokeh/bokehjs?style=for-the-badge&logo=npm&label=NPM&color=D98B43""
         alt=""NPM downloads per month"" />
    
  





  Build

  
    
    <img src=""https://img.shields.io/github/actions/workflow/status/bokeh/bokeh/bokeh-ci.yml?label=Bokeh-CI&logo=github&style=for-the-badge""
         alt=""Current Bokeh-CI github actions build status"" />
    
  

  
    
    <img src=""https://img.shields.io/github/actions/workflow/status/bokeh/bokeh/bokehjs-ci.yml?label=BokehJS-CI&logo=github&style=for-the-badge""
         alt=""Current BokehJS-CI github actions build status"" />
    
  

  
    
    <img src=""https://img.shields.io/codecov/c/github/bokeh/bokeh?logo=codecov&style=for-the-badge&token=bhEzGkDUaw""
         alt=""Codecov coverage percentage"" />
    
  





  Community

  
    
    <img src=""https://img.shields.io/discourse/https/discourse.bokeh.org/posts.svg?color=blue&logo=discourse&style=for-the-badge""
         alt=""Community support on discourse.bokeh.org"" />
    
  

  
    
    <img src=""https://img.shields.io/stackexchange/stackoverflow/t/%5Bbokeh%5D?style=for-the-badge&logo=stackoverflow&label=stackoverflow&color=blue""
         alt=""Bokeh-tagged questions on Stack Overflow"" />
     
  






*Consider [making a donation](https://opencollective.com/bokeh) if you enjoy using Bokeh and want to support its development.*

![4x9 image grid of Bokeh plots](https://user-images.githubusercontent.com/1078448/190840954-dc243c99-9295-44de-88e9-fafd0f4f7f8a.jpg)

## Installation

To install Bokeh and its required dependencies using `pip`, enter the following command at a Bash or Windows command prompt:
```
pip install bokeh
```

To install `conda`, enter the following command at a Bash or Windows command prompt:

```
conda install bokeh
```

Refer to the [installation documentation](https://docs.bokeh.org/en/latest/docs/first_steps/installation.html) for more details.

## Resources

Once Bokeh is installed, check out the [first steps guides](https://docs.bokeh.org/en/latest/docs/first_steps.html#first-steps-guides).

Visit the [full documentation site](https://docs.bokeh.org) to view the [User's Guide](https://docs.bokeh.org/en/latest/docs/user_guide.html) or [launch the Bokeh tutorial](https://mybinder.org/v2/gh/bokeh/bokeh-notebooks/HEAD?labpath=index.ipynb) to learn about Bokeh in live Jupyter Notebooks.

Community support is available on the [Project Discourse](https://discourse.bokeh.org).

If you would like to contribute to Bokeh, please review the [Contributor Guide](https://docs.bokeh.org/en/latest/docs/dev_guide.html) and [request an invitation to the Bokeh Dev Slack workspace](https://slack-invite.bokeh.org/).

*Note: Everyone who engages in the Bokeh project's discussion forums, codebases, and issue trackers is expected to follow the [Code of Conduct](https://github.com/bokeh/bokeh/blob/branch-3.0/docs/CODE_OF_CONDUCT.md).*

## Support

### Fiscal Support

The Bokeh project is grateful for [individual contributions](https://opencollective.com/bokeh), as well as for monetary support from the organizations and companies listed below:




  
    
    <img src=""https://static.bokeh.org/sponsor/numfocus.svg""
         alt=""NumFocus Logo"" width=""200""/>
    
  

  
    
    <img src=""https://static.bokeh.org/sponsor/czi.svg""
         alt=""CZI Logo"" width=""200""/>
    
  

  
    
    <img src=""https://static.bokeh.org/sponsor/blackstone.png""
         alt=""Blackstone Logo"" width=""400""/>
    
  

 
 

  
    
    <img src=""https://static.bokeh.org/sponsor/tidelift.svg""
         alt=""TideLift Logo"" width=""200""/>
    
  

  
    
    <img src=""https://static.bokeh.org/sponsor/anaconda.png""
         alt=""Anaconda Logo"" width=""200""/>
    
  

  
    
    <img src=""https://static.bokeh.org/sponsor/nvidia.png""
         alt=""NVidia Logo"" width=""200""/>
    
  

  
    
    <img src=""https://static.bokeh.org/sponsor/rapids.png""
         alt=""Rapids Logo"" width=""200""/>
    
  




If your company uses Bokeh and is able to sponsor the project, please contact info@bokeh.org

*Bokeh is a Sponsored Project of NumFOCUS, a 501(c)(3) nonprofit charity in the United States. NumFOCUS provides Bokeh with fiscal, legal, and administrative support to help ensure the health and sustainability of the project. Visit [numfocus.org](https://numfocus.org) for more information.*

*Donations to Bokeh are managed by NumFOCUS. For donors in the United States, your gift is tax-deductible to the extent provided by law. As with any donation, you should consult with your tax adviser about your particular tax situation.*

### In-kind Support

Non-monetary support can help with development, collaboration, infrastructure, security, and vulnerability management. The Bokeh project is grateful to the following companies for their donation of services:

* [Amazon Web Services](https://aws.amazon.com/)
* [GitGuardian](https://gitguardian.com/)
* [GitHub](https://github.com/)
* [makepath](https://makepath.com/)
* [Pingdom](https://www.pingdom.com/website-monitoring)
* [Slack](https://slack.com)
* [QuestionScout](https://www.questionscout.com/)
* [1Password](https://1password.com/)
","'bokeh', 'data-visualisation', 'interactive-plots', 'javascript', 'jupyter', 'notebooks', 'numfocus', 'plots', 'plotting', 'python', 'visualisation', 'visualization'",2012-03-26T15:40:01Z,2024-06-18T07:18:52Z,694,390,18973,442,"('bryevdv', 6793), ('mattpap', 3033), ('damianavila', 1206), ('birdsarah', 815), ('fpliger', 675), ('Hugo', 590), ('canavandl', 564), ('paddymul', 522), ('havocp', 445), ('Peter Wang', 372), ('Maggie-M', 306), ('bcollins', 301), ('hugo', 300), ('canavandl-test', 290), ('Joseph Cottam', 279), ('almarklein', 272), ('rothnic', 246), ('Hugo', 230), ('kevincolten', 142), ('justacec', 123), ('bryevdv', 120), ('tswicegood', 120), ('tcmetzger', 105), ('hhuuggoo', 99), ('philippjfr', 94), ('ianthomas23', 94), ('nroth-dealnews', 89), ('lcanavan', 86), ('mattpap', 70), ('mosc9575', 58), ('hhuuggoo', 53), ('kdodia', 52), ('LilaHickey', 49), ('HuntJSparra', 47), ('jbcrail', 42), ('brittainhard', 40), ('jsignell', 39), ('Mathieu Drapeau', 37), ('jqmp', 34), ('clairetang6', 33), ('shughes-uk', 31), ('quasiben', 30), ('Mags', 29), ('p-himik', 28), ('Tabish Chasmawala', 28), ('pitrou', 25), ('electronwill', 23), ('jakirkham', 23), ('xavArtley', 22), ('jlstevens', 20), ('g-parki', 20), ('sahat', 20), ('IuryPiva', 17), ('Sarah Bird', 17), ('Azaya89', 16), ('pavithraes', 15), ('shughes', 15), ('abele', 13), ('lexicalunit', 13), ('ilanschnell', 12), ('Karel-van-de-Plassche', 12), ('Steven C. Howell', 12), ('tarzzz', 12), ('sam', 12), ('jbednar', 12), ('Konntroll', 11), ('pzwang', 11), ('StevenCHowell', 10), ('azjps', 10), ('benrussell80', 10), ('Justace Clutter', 10), ('jbrambleDC', 10), ('chdoig', 9), ('Luke Canavan', 9), ('Carolyn Hulsey', 9), ('dependabotbot', 8), ('amelio-vazquez-reina', 8), ('dennisobrien', 8), ('lukebarnard1', 7), ('hoxbro', 7), ('anthonydouc', 7), ('rs2', 7), ('ThomasP6t', 7), ('tobyhodges', 7), ('tabchas', 7), ('joelhullcio', 7), ('graingert', 7), ('TheoMathurin', 7), ('Richard Postelnik', 7), ('pratapvardhan', 7), ('mrocklin', 7), ('Garrett Berg', 7), ('chinmaychahar', 7), ('BhaswatiRoy', 7), ('dnnr', 6), ('DuCorey', 6), ('muendlein', 6), ('timsnyder', 6), ('Tabish Chasmawala', 6), ('dvreed77', 6), ('nathanielatom', 6), ('ayushiitr2901', 6), ('Bryan Van de Ven', 6), ('Brendan Collins', 6), ('chesucr', 5), ('benureau', 5), ('kernc', 5), ('hsparra', 5), ('colin fang', 5), ('gene-telligent', 5), ('jeremy9959', 5), ('normaljosh', 5), ('Lila Hickey', 5), ('Luke-in-the-sky', 5), ('cpcloud', 5), ('busino', 5), ('raghavgai', 5), ('mbrown1413', 4), ('tobyhodges', 4), ('kir0ul', 4), ('solstag', 4), ('stonebig', 4), ('poldavezac', 4), ('komo-fr', 4), ('harmbuisman', 4), ('bokeh-integrations', 4), ('jrbourbeau', 4), ('Faith-Nchifor', 4), ('lmcinnes', 4), ('djpugh', 4), ('lbrito1', 4), ('ammarnajjar', 4), ('Med16-11', 4), ('alhoo', 4), ('chinasaur', 4), ('rhiever', 4), ('rpazyaquian', 4), ('volkerjaenisch', 4), ('DerTimonius', 4), ('santos22', 3), ('shea-parkes', 3), ('Soot3', 3), ('not-so-rabh', 3), ('auirarrazaval', 3), ('bald', 3), ('beltashazzer', 3), ('mgymrek', 3), ('sebacastroh', 3), ('terrycojones', 3), ('tp199911', 3), ('ahuang11', 3), ('bsipocz', 3), ('msarahan', 3), ('liambuchanan', 3), ('zjffdu', 3), ('astraw38', 3), ('bkueng', 3), ('filmor', 3), ('hallyourbase', 3), ('chbrandt', 3), ('aashish24', 3), ('charlesflynn', 3), ('ceball', 3), ('David-Herman', 3), ('petercfontana', 3), ('ogrisel', 3), ('Zyell', 3), ('Anthchirp', 3), ('MarcSkovMadsen', 3), ('ericdill', 3), ('nasedil', 3), ('ivan-usov', 3), ('BioGeek', 3), ('jdimatteo', 3), ('bgyarfas', 2), ('ZviBaratz', 2), ('Yash-Pratapwar', 2), ('xiaoyang-sde', 2), ('Victoria Adesoba', 2), ('victor-o-silva', 2), ('jcrist', 2), ('Tyler Kim', 2), ('bokehserver', 2), ('boylea', 2), ('Tommy Carstensen', 2), ('timothydmorton', 2), ('tim-v3', 2), ('timgates42', 2), ('Steven C. Howell', 2), ('steffenschroeder', 2), ('stefanv', 2), ('spencerogden', 2), ('souravsingh', 2), ('surbas', 2), ('slokhorst', 2), ('seanlaw', 2), ('schaunwheeler', 2), ('samirak93', 2), ('RyanRio', 2), ('pmeier', 2), ('petebachant', 2), ('merqurio', 2), ('tzhang-dev', 2), ('tyarkoni', 2), ('syntonym', 2), ('sphinxligustri', 2), ('shughes.uk@gmail.com', 2), ('scaine1', 2), ('sam', 2), ('rmelotte', 2), ('omellet', 2), ('naveensaigit', 2), ('msalem99', 2), ('maxgamurar', 2), ('marcuskd', 2), ('linar-jether', 2), ('kpr', 2), ('jfrydendall', 2), ('jfinkels', 2), ('hugo shi', 2), ('hsparra', 2), ('gryBox', 2), ('euandekock', 2), ('enricapq', 2), ('dhirschfeld', 2), ('crashMOGWAI', 2), ('comperem', 2), ('code-review-doctor', 2), ('chalmerlowe', 2), ('cfh', 2), ('eltociear', 2), ('Icoti', 2), ('huijeong1015', 2), ('herm', 2), ('ArchaeotheriumSapienter', 2), ('hamogu', 2), ('gregnordin', 2), ('mansenfranzen', 2), ('ericmjl', 2), ('soupault', 2), ('EfremBraun', 2), ('dwf', 2), ('dhirschfeld', 2), ('covracer', 2), ('cbanek', 2), ('cbcoutinho', 2), ('chrisbarber', 2), ('willingc', 2), ('2torus', 2), ('bnavigator', 2), ('Azaya89', 2), ('AyushShahh', 2), ('aglebov', 2), ('KesharwaniArpita', 2), ('xaptronic', 2), ('AkintolaRichard', 2), ('=', 2), ('3dprintscanner', 2), ('parente', 2), ('paul-tqh-nguyen', 2), ('PabloRuizCuevas', 2), ('oviquezr', 2), ('orena1', 2), ('osule', 2), ('235', 2), ('vahtras', 2), ('enkeyz', 2), ('Atlantic777', 2), ('lilmatt', 2), ('martinfleis', 2), ('mikofski', 2), ('ionelmc', 2), ('jadalilleboe', 2), ('guillochon', 2), ('twoscomplement', 2), ('nitrocalcite', 2), ('jphalip', 2), ('karen-poon', 2), ('KasperPRasmussen', 2), ('kumaran-14', 2), ('ltalirz', 2), ('axil', 2), ('malramsay64', 2), ('Ariel-Yeung', 2), ('humitos', 2), ('datapythonista', 2), ('Samuel Brice', 1), ('Sara Schnadt', 1), ('Sarah Eadie', 1), ('Sarah Heim', 1), ('Sartaj Singh', 1), ('Savalek - Aleksey Savelenko', 1), ('Seth Rothschild', 1), ('Severin Simmler', 1), ('Shahid Chohan', 1), ('Siddhant Chereddy', 1), ('Simon Ye', 1), ('Sravan Kumar', 1), ('Victor Arribas', 1), ('Samuel Austin', 1), ('Sam Fawcett', 1), ('Russell B', 1), ('Rohit Sankaran', 1), ('Robin Okwanma', 1), ('Robin B', 1), ('Rick van Hattem', 1), ('Rich Chiodo', 1), ('Ravi Singh', 1), ('Randy Wang', 1), ('Raman Shah', 1), ('Ram Rachum', 1), ('Veith Röthlingshöfer', 1), ('Trent Nelson', 1), ('Tony Chen', 1), ('Tom Scambler', 1), ('Tom Lynch', 1), ('Todd Miller', 1), ('TimotheeGerber', 1), ('Tim Sampson', 1), ('Tim Paine', 1), ('Tim D. Smith', 1), ('Tikonderoga', 1), ('Tiger-222', 1), ('TidyData', 1), ('Thomas PEDOT', 1), ('Thomas Morrell', 1), ('Thomas Labadie', 1), ('Thomas Kientz', 1), ('Terry Luan', 1), ('Terry Greeniaus', 1), ('Tabish Chasmawala', 1), ('Sönke F', 1), ('Sébastien Celles', 1), ('Steven C. Howell', 1), ('Steve (Gadget) Barnes', 1), ('Stephen Diehl', 1), ('Ram Kumar', 1), ('Nicolas de Palezieux', 1), ('Nicolas Leclercq', 1), ('Nathan West', 1), ('Nathan Taylor', 1), ('Nathan Ho', 1), ('Naelson Douglas C. Oliveira', 1), ('Mr-Spikes', 1), ('Mohd Izhar', 1), ('MinRK', 1), ('Min ho Kim', 1), ('Min RK', 1), ('Miki Tebeka', 1), ('Mike Milonakis', 1), ('Mike DePalatis', 1), ('Miiike89', 1), ('Miguel Cardoso', 1), ('Michael König', 1), ('Michael Flaks', 1), ('Memet Bilgin', 1), ('Mayur Vashishth', 1), ('Maximilian Albert', 1), ('Maxime Liquet', 1), ('Mauhcs', 1), ('Matthias', 1), ('Matt Mowers', 1), ('Rajat Shenoi', 1), ('Przemysław Buczkowski', 1), ('Pranshu Kumar Gond', 1), ('Pirmin Lötscher', 1), ('PinkusFloyd', 1), ('Philipp Lehner', 1), ('Petter Strandmark', 1), ('Peter Hausamann', 1), ('Peter H. Li', 1), ('Peter Fein', 1), ('Pavithra Eswaramoorthy', 1), ('Pavel Campr', 1), ('Patrik Hlobil', 1), (""Patrick O'Keeffe"", 1), ('PatChizzy', 1), ('Pankaj Pandey', 1), ('Pall Jonsson', 1), ('Paddy Mullen', 1), ('Pablo M. Reyes', 1), ('Oriol Abril', 1), ('Ondřej Čertík', 1), ('Oluwafemi Sule', 1), ('Northo', 1), ('Nimish Bongale', 1), ('Nils Werner', 1), ('numpynewb', 1), ('nicain', 1), ('murdoa', 1), ('morrme', 1), ('monkut', 1), ('mondainai', 1), ('memetb', 1), ('mehrsan78', 1), ('mborus', 1), ('maxalbert', 1), ('mattbest', 1), ('madkopp', 1), ('lgasnier', 1), ('lesshaste', 1), ('leo', 1), ('lemarcantoine', 1), ('konmeo', 1), ('js3711', 1), ('jordanfreedmanPM', 1), ('jgriffi6', 1), ('jensschroer', 1), ('jcorb', 1), ('jburgy', 1), ('jasonsross', 1), ('jaroli', 1), ('blutack', 1), ('\u202ezlohhcuB treboR', 1), ('Åsmund Hjulstad', 1), ('zoeangell', 1), ('zebulon2', 1), ('zach powers', 1), ('wswope-etiometry', 1), ('woocy50', 1), ('w0rdsm1th', 1), ('vickyclose', 1), ('varunus', 1), ('varianceslayer', 1), ('teresafds', 1), ('stevejbrown', 1), ('serverhacks', 1), ('serv-inc', 1), ('scaine1', 1), ('sanjayp', 1), ('samwill', 1), ('samr85', 1), ('sabgit', 1), ('reckoner', 1), ('rageTrue', 1), ('pmpppeters1', 1), ('philosophercode', 1), ('petermountanos', 1), ('orodbhen', 1), ('bkreider', 1), ('bje-', 1), ('biggstd', 1), ('bdwiel', 1), ('aspeskin', 1), ('aseyboldt', 1), ('andreamcinnes', 1), ('andreagrant', 1), ('amormachine', 1), ('alv2017', 1), ('alishir', 1), ('alec-djinn', 1), ('akshatvishu', 1), ('ahmetbaglan', 1), ('agf-nohchil', 1), ('afonit', 1), ('aernlund', 1), ('Zachary Moon', 1), ('Zach Griffith', 1), ('Yuriy Beloberdin', 1), ('Yi Sheng', 1), ('YMRTN', 1), ('William Mwine', 1), ('Wasim Thabraze', 1), ('Vladimir Filimonov', 1), ('ingebert', 1), ('hugo', 1), ('hsparra', 1), ('hsparra', 1), ('hiramf', 1), ('hhuuggoo', 1), ('guillaume', 1), ('gregorydillon', 1), ('gotyaoi', 1), ('gonike', 1), ('golmschenk', 1), ('girolamo', 1), ('gbrunick', 1), ('franz', 1), ('fllagami', 1), ('fleimgruber', 1), ('epifanio', 1), ('dhanesh123in', 1), ('dev_hacks', 1), ('dependabotbot', 1), ('debjan', 1), ('dbuscher', 1), ('dasha-moskv', 1), ('danio', 1), ('crricks', 1), ('bruns01', 1), ('Dylan Moore', 1), ('crystalmdsouza', 1), ('crypto-jeronimo', 1), ('connortann', 1), ('caryan', 1), ('Christophers27', 1), ('crwilcox', 1), ('SweetsRepo', 1), ('cdeil', 1), ('xnx', 1), ('LinuxChristian', 1), ('Chris Stucchio', 1), ('ChrisDSaldivar', 1), ('Chris Fonnesbeck', 1), ('cjdrake', 1), ('Cheukting', 1), ('chaytanyasinha', 1), ('cobracmder', 1), ('aCampello', 1), ('aliamcami', 1), ('jbkalmbach', 1), ('bryanwweber', 1), ('BrunaKimura', 1), ('schoolie', 1), ('Brian Panneton', 1), ('brianabrams', 1), ('duarteocarmo', 1), ('DrDru', 1), ('dkamaitis', 1), ('vdmit', 1), ('EtsuNDmA', 1), ('Saravji', 1), ('deeplook', 1), ('DimitarSivrev', 1), ('kdheepak', 1), ('dhorvay', 1), ('dinya', 1), ('droumis', 1), ('davidlonsdale92', 1), ('hypostulate', 1), ('dwillmer', 1), ('dkatten', 1), ('TheLaw1337', 1), ('danielfrg', 1), ('dkapitan', 1), ('kennedydane', 1), ('danoscarmike', 1), ('danlester', 1), ('dankovacek', 1), ('speediedan', 1), ('cbouy', 1), ('BrettMontague', 1), ('ndmlny-qs', 1), ('aparamon', 1), ('Andrew S. Rosen', 1), ('minimav', 1), ('inwaves', 1), ('amueller', 1), ('AndreM96', 1), ('Aman-Jamshed', 1), ('kuuji', 1), ('Alexandre Avanian', 1), ('alexbjorling', 1), ('agoodm', 1), ('aavanian', 1), ('Ak-Bhatia', 1), ('Ajoke23', 1), ('afzal442', 1), ('AdityaJ7', 1), ('adamwlev', 1), ('Kadek', 1), ('b1skit', 1), ('poplarShift', 1), ('ABODFTW', 1), ('Aaron Curtis', 1), ('nerduno', 1), ('0xflotus', 1), ('brentpayne', 1), ('bgbg', 1), ('BoboTiG', 1), ('billlanyon', 1), ('roadswitcher', 1), ('Bijan Fallah', 1), ('Benjamin-Lee', 1), ('cben', 1), ('Ben Segal', 1), ('Ben Russell', 1), ('0x5e5e', 1), ('ashwani-rathee', 1), ('rielAsh24', 1), ('arunpersaud', 1), ('ar-turek', 1), ('volartem', 1), ('ahmadia', 1), ('Nkarnaud', 1), ('arihans', 1), ('pillemer', 1), ('ahartikainen', 1), ('dadokkio', 1), ('gitanupam', 1), ('aerusso', 1), ('AnishereMariam', 1), ('Mathis Antony', 1), ('Kshitiz Gupta', 1), ('Kevin Yu-Sheng Li', 1), ('Kevin Anderson', 1), ('Karthikeyan Singaravelan', 1), ('Karan Dodia', 1), ('Kaamraan', 1), ('Justin Li', 1), ('Julian', 1), ('Julia Evans', 1), ('Juan Pedro Fisanotti', 1), ('Juan Carlos Sarmiento', 1), ('Joy Akinyi', 1), ('José Coto', 1), ('Joseph Yang', 1), ('jnettels', 1), ('JonathanPlasse', 1), ('jeisch', 1), ('jonc125', 1), ('jrwalk', 1), ('John Stanford', 1), ('JohnPaton', 1), ('jfburkhart', 1), ('sjohannes', 1), ('joelostblom', 1), ('jianli', 1), ('Martin M.', 1), ('Mark Perera', 1), ('Mark Grassi', 1), ('Marianne Corvellec', 1), ('Marco Hemken', 1), ('Marco Edward Gorelli', 1), ('Marcelo Lacerda', 1), ('Marc Kassay', 1), ('Marat K', 1), ('Maik Heistermann', 1), ('Mahendra Kumar', 1), ('Maciej J', 1), ('M4urice', 1), ('Luke Tudge', 1), ('Luke Shulman', 1), ('Luke M Craig', 1), ('Luiz Irber', 1), ('Luca Fabbri', 1), ('Luca Chiodini', 1), ('Lorenzo Peve', 1), ('Lingepumpe', 1), ('Lee Chengkai', 1), ('Latill', 1), ('Kyle Roth', 1), ('Kun Yang', 1), ('jeffreymorganio', 1), ('gregmuellegger', 1), ('grromrell', 1), ('gregfreeman', 1), ('govinda18', 1), ('Gordonei', 1), ('Dr-G', 1), ('GillesFa', 1), ('gkovacs', 1), ('gstoel', 1), ('GenevieveBuckley', 1), ('barentsen', 1), ('cyborg1995', 1), ('ghalter', 1), ('yerfdogyrag', 1), ('fractaldatalearning', 1), ('florentbr', 1), ('enfeizhan', 1), ('SiggyF', 1), ('synasius', 1), ('ethan-nelson', 1), ('eteq', 1), ('er0', 1), ('QuLogic', 1), ('e-pet', 1), ('EJEP', 1), ('jfx319', 1), ('jdlesage', 1), ('jean1122', 1), ('jnovinger', 1), ('jantman', 1), ('ppplinday', 1), ('jarrodmillman', 1), ('imagejan', 1), ('jamestiotio', 1), ('James Draper', 1), ('cao-jacky', 1), ('jbeanland', 1), ('JAK0723', 1), ('izzygomez', 1), ('ivan-krukov', 1), ('zehraina', 1), ('ikarosilva', 1), ('iaroslav-ai', 1), ('ukrutt', 1), ('HenningTimm', 1), ('netbek', 1), ('chanansh', 1), ('hfaran', 1), ('guilhermeadf', 1), ('gdetrez', 1)",408,151,
imnotbob/vacation-lighting-director,ERS update to tslagle's vacation-lighting-director,"# vacation-lighting-director
ERS update to tslagle's vacation-lighting-director

https://community.smartthings.com/t/new-app-vacation-light-director/7230/265

Inputs:

Setup
 * Modes - to operate in (ST Modes this could be active in)  (required)
 * Time - restrictions to operate in   (optional)
     * Can set specific time or sunrise, sunset with offsets
 * Switches - List of switches that will be chosen from randomly for on/off   (required)
 * Cycle time (mins) - time switch is left on (5- 180 minutes) if randomly selected  (required)
 * number of active lights - number of lights turned on for a cycle from the list of switches  (required)
 * lights - to be on entire active time; (optional)
     * these are lights that will stay on during the active times defined by Modes, Time, presence sensors
         * Examples are garage/porch lights, Holiday lights, etc.
 
Settings
 * Presence sensors that will disable operation; (optional)
     * If cycle was active, lights will be left on if someone in list arrives;  
     * If cycle wanted to become active, if any of these sensors are present, the cycle will not start. 
 
Modes, Time, and presence sensors are **AND'ed** together to determine if vacation can run now

Example:
* Setup
    * is run in ST **AWAY** mode;  
    * Time is sunset - until 11:30;
    * Lights are entrance, bedroom, livingroom, kitchen, hallway
    * Cycle time is 33 mins
    * number of active lights is 2
    * presence sensors are Bob, Jane
    
 * Operation
     * At sunset, check if we are in **AWAY** mode, within Time, and  Bob and Jane are not present
         * if all are true, turn on 2 randomly selected switches from the list; turn on *lights* list
         * in 33 mins;   select 2 randomly selected lights from list, turn off old selection and on new selection;  *lights* remain on
         * if time expires, or ST mode changes;  turn off all lights we have on (2 + *lights*)
         
         * if Bob or Jane arrive while active;  stop processing, but leave lights on that are on (we don't want them to come in and have the lights go out)
",,2017-01-13T18:30:00Z,2023-09-06T12:26:23Z,2,2,28,14,"('imnotbob', 19), ('evanwon', 1)",1,1,
redbooth/departure,Percona's pt-online-schema-change runner for ActiveRecord migrations.,"# :no_entry: [DEPRECATED] Active at https://github.com/departurerb/departure

This repository is an archive of Departure before the move to [departurerb/departure](https://github.com/departurerb/departure).

New issues and pull requests, for all branches, should be opened at [departurerb/node](https://github.com/departurerb/departure). New issues and pull requests opened here will automatically be rejected.
","'activerecord', 'mysql', 'rails', 'schema-migrations'",2015-12-14T11:00:12Z,2021-01-07T05:31:25Z,11,11,86,36,"('sauloperez', 253), ('franciscoj', 9), ('garettarrowood', 8), ('aserafin', 8), ('Nakort', 2), ('Morantron', 2), ('ivanilves', 1), ('jhbabon', 1), ('daleysoftware', 1), ('neildecapia', 1), ('enricostano', 1)",5,5,
AlessandroZ/BeRoot,Privilege Escalation Project - Windows / Linux / Mac,"# BeRoot Project 

BeRoot Project is a post exploitation tool to check common misconfigurations to find a way to escalate our privilege. \
It has been added to the [pupy](https://github.com/n1nj4sec/pupy/) project as a post exploitation module (so it will be executed in memory without touching the disk). 

This tool does not realize any exploitation. It mains goal is not to realize a configuration assessment of the host (listing all services, all processes, all network connection, etc.) but to print only information that have been found as potential way to escalate our privilege. 

This project works on Windows, Linux and Mac OS. You could find the Windows version [here](https://github.com/AlessandroZ/BeRoot/tree/master/Windows) and the Linux and Mac OS [here](https://github.com/AlessandroZ/BeRoot/tree/master/Linux)

I recommend reading the README depending on the targeted OS, to better understand what's happening. 

I tried to implement most techniques described in this picture:




Enjoy ;)


Interesting projects
----
* [Windows / Linux Local Privilege Escalation Workshop](https://github.com/sagishahar/lpeworkshop)

",,2017-04-14T12:47:31Z,2022-02-08T10:30:38Z,8,8,2394,105,"('AlessandroZ', 119), ('jamesgol', 2), ('alxchk', 2), ('brightio', 2), ('eranzim', 1), ('moshekaplan', 1), ('RoninNakomoto', 1), ('SolomonSklash', 1)",4,4,
minixalpha/StrayBirds,Blog templates based on GitHub Pages,"StrayBirds
==========

基于 GitHub Pages 搭建的极简博客，所有操作都可以直接通过浏览器完成。

## 示例

可以通过访问 [StrayBirds](http://minixalpha.github.io/StrayBirds/) 看到最终
的效果，下面是截图:

![ui-demo](/images/ui_demo.png)

## 教程

### 使用方法

1. 注册 GitHub，得到用户名，例如 minixbeta
2. 到 [StrayBirds](https://github.com/minixalpha/StrayBirds) 页面，单击右上
角的 Fork
3. 到你 Fork 后的项目中，将 `_config.yml` 中的 username 修改为你的用户名 minixbeta
4. 访问你的博客 http://minixbeta.github.io/StrayBirds/

![create_project](/images/create_project.gif)

**注意如果你是第一次使用 GitHub Pages，可能不会马上生效，等一段时间即可**

**按照配置中说的方法修改项目名称可能会加快这一进程**

### 配置

* 修改主题

在 `_confg.yml` 下修改 theme 的值。

**注意修改主题后，并不会马上生效，GitHub 还要反应一段时间，所以请耐心等待**

**修改主题后, 按照配置中说的方法修改项目名称可能会加快这一进程**

可选主题包括：

- hack
	![hack-demo](/images/hack-demo.png)
- leap-day
	![leap-day-demo](/images/leap-day-demo.png)
- merlot
	![merlot-demo](/images/merlot-demo.png)
- midnight
	![midnight-demo](/images/midnight-demo.png)
- minimal
	![minimal-demo](/images/minimal-demo.png)
- modernist
	![modernist-demo](/images/modernist-demo.png)
- slate
	![slate-demo](/images/slate-demo.png)
- time-machine
	![time-machine-demo](/images/time-machine-demo.png) 
- kunka
	![kunka-demo](/images/kunka-demo.png)

* 修改项目名

例如将 StrayBirds 修改为 blog，那么你需要做的是

1. 在项目的 Setting 中将 Repository name 从 StrayBirds 修改为 blog
2. 将 `_config.yml` 中的 baseurl 修改为 /blog
3. 通过 http://minixbeta.github.io/blog/ 来访问你的新博客

![create_post](/images/change_project_name.gif)


* 修改评论系统用户名

我们的评论系统使用的是 [Disqus](https://disqus.com/)，如果你想在这份博客模板中使用，需要先去注册一下，然后得到一个用户名，例如 minixalpha。然后在 `_config.yml` 中将 disqusname 修改为 minixalpha。

**千万注意: 如果你开启评论系统一定要修改这个值，不然就评论到我的评论系统中去了**

### 添加文章

在 `_post` 目录下添加形如 `2014-10-26-title.md` 的文章，用 markdown 格式
撰写博客。

例如：

```
---
layout: post
title: Java 中的并发
comments: true
category: 技术
---


## 如何创建一个线程

按 Java 语言规范中的说法，创建线程只有一种方式，就是创建一个 Thread 对象。而从 HotSpot 虚拟机的角度看，创建一个虚拟机线程
有两种方式，一种是创建 Thread 对象，另一种是创建 一个本地线程，加入到虚拟机线程中。

...

```

其中 `layout` 表示布局，不用改变，`title` 表示文章题目，`comments` 表示是否要开户评论。

![create_post](/images/create_post.gif)

## 感谢

Thanks to authors of the themes:

* [hack](https://github.com/sundaykofax/baby-legs), Licence: None
* [leap-day](https://github.com/mattgraham/leapday), Licence: [Creative Commons Attribution](http://creativecommons.org/licenses/by/3.0/)
* [merlot](https://github.com/cameronmcefee/headsmart/tree/gh-pages), Licence: None
* [midnight](https://github.com/briandoll/change-inside-surroundings.vim/tree/gh-pages), Licence: None
* [minimal](https://github.com/orderedlist/minimal), Licence: [Creative Commons Attribution-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-sa/3.0/)
* [modernist](https://github.com/orderedlist/modernist), Licence: [Creative Commons Attribution-ShareAlike 3.0 Unported License](http://creativecommons.org/licenses/by-sa/3.0/)
* [slate](https://github.com/jasoncostello/slate), Licence: MIT
* [time-machine](https://github.com/jonrohan/time-machine-theme), Licence: None
* [kunka](https://github.com/pizn/kunka), Licence: MIT, author: [zhanxin.info](http://www.zhanxin.info/)

All the themes are intergrated in the blog template, with some modifies.
","'blog-theme', 'github-pages'",2014-08-21T01:21:03Z,2023-04-26T03:36:20Z,4,3,375,12,"('minixalpha', 179), ('minixbeta', 5), ('int32bit', 2), ('krystism', 1)",1,0,
blynkkk/blynk-library,"Blynk library for IoT boards. Works with Arduino, ESP32, ESP8266, Raspberry Pi, Particle, ARM Mbed, etc.","[![SWUbanner](https://raw.githubusercontent.com/vshymanskyy/StandWithUkraine/main/banner-direct.svg)](https://vshymanskyy.github.io/StandWithUkraine)

# Blynk C++ Library [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Build%20your%20IoT%20App%20in%20minutes,%20right%20on%20your%20smartphone!&url=https://github.com/blynkkk/blynk-library&via=blynk_app&hashtags=IoT,iOS,Android,Arduino,ESP8266,ESP32,RaspberryPi)

[![GitHub version](https://img.shields.io/github/release/blynkkk/blynk-library.svg)](https://github.com/blynkkk/blynk-library/releases/latest)
[![GitHub download](https://img.shields.io/github/downloads/blynkkk/blynk-library/total.svg)](https://github.com/blynkkk/blynk-library/releases/latest)
[![GitHub stars](https://img.shields.io/github/stars/blynkkk/blynk-library.svg)](https://github.com/blynkkk/blynk-library/stargazers)
[![GitHub issues](https://img.shields.io/github/issues/blynkkk/blynk-library.svg)](https://github.com/blynkkk/blynk-library/issues)
[![Build Status](https://img.shields.io/travis/blynkkk/blynk-library.svg)](https://travis-ci.org/blynkkk/blynk-library)
[![License](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/blynkkk/blynk-library/blob/master/LICENSE)

If you like **Blynk** - give it a star, or fork it and contribute! 
[![GitHub stars](https://img.shields.io/github/stars/blynkkk/blynk-library.svg?style=social&label=Star)](https://github.com/blynkkk/blynk-library/stargazers) 
[![GitHub forks](https://img.shields.io/github/forks/blynkkk/blynk-library.svg?style=social&label=Fork)](https://github.com/blynkkk/blynk-library/network)
__________

### Blynk is a unique IoT platform for connecting any hardware to the cloud, designing apps to control them, and managing your deployed products at scale.

- With Blynk Library you can connect **over 400 hardware models** (including ESP8266, ESP32, NodeMCU, all Arduinos, Raspberry Pi, Particle, Texas Instruments, etc.) to the Blynk Cloud.

- With Blynk apps for **iOS** and **Android** apps you can easily drag-n-drop graphic interfaces for any DIY or commercial project. It's a pure WYSIWG experience: no coding on iOS or Android required. 

- Hardware can connect to Blynk Cloud over the Internet using hardware connectivity available on your board (like ESP32), or with the use of various shields (Ethernet, WiFi, GSM, LTE, etc). Blynk Cloud is available for every user of Blynk **for free**.

![Blynk Banner](https://github.com/blynkkk/blynkkk.github.io/raw/master/images/GithubBanner.jpg)

## Downloads

**Blynk [Arduino Library](https://github.com/blynkkk/blynk-library/releases/latest)**

**Blynk Mobile App: 
[ Google Play](https://play.google.com/store/apps/details?id=cloud.blynk) | 
[ App Store](https://apps.apple.com/us/app/blynk-iot/id1559317868)**

## Quickstart: Arduino + Ethernet shield

* Download the Blynk app ([App Store](https://apps.apple.com/us/app/blynk-iot/id1559317868), [Google Play](https://play.google.com/store/apps/details?id=cloud.blynk))
* Get the Auth Token from the app
* Import this library to Arduino IDE. Guide [here](http://arduino.cc/en/guide/libraries)
* In Arduino IDE, select `File -> Examples -> Blynk -> Boards_Ethernet -> Arduino_Ethernet`
* Update Auth Token in the sketch and upload it to Arduino
* Connect your Arduino with Ethernet shield to the internet

When you are connected - check the included examples on how to use different types of connections (transports) and explore Blynk features. You can combine any example for your hardware + transport + features.

## Documentation and other helpful links

[The list of supported hardware](https://docs.blynk.io/en/blynk.edgent-firmware-api/supported-boards) - supported boards, Ethernet, WiFi, Cellular...  
[Full Blynk Documentation](https://docs.blynk.io) - a complete guide on Blynk features  
[Community (Forum)](http://community.blynk.cc) - join a 500,000 Blynk community to ask questions and share ideas  
[Code Examples Browser](http://examples.blynk.cc) - browse examples to explore Blynk possibilities  
[Official Website](https://blynk.io)

**Social Media:**

[Facebook](https://www.fb.com/blynkapp) | 
[Twitter](https://twitter.com/blynk_app) | 
[Youtube](https://www.youtube.com/blynk) | 
[Instagram](https://www.instagram.com/blynk.iot/) | 
[LinkedIn](https://www.linkedin.com/company/b-l-y-n-k/)

## Blynk libraries for other platforms
* [Python, MicroPython](https://github.com/blynkkk/lib-python)

## Libraries by community
* [Python, MicroPython](https://github.com/vshymanskyy/blynk-library-python)
* [Particle](https://github.com/vshymanskyy/blynk-library-particle)
* [Lua, OpenWrt, NodeMCU](https://github.com/vshymanskyy/blynk-library-lua)
* [OpenWrt packages](https://github.com/vshymanskyy/blynk-library-openwrt)
* [MBED](https://developer.mbed.org/users/vshymanskyy/code/Blynk/)
* [Node-RED for Blynk IoT](https://flows.nodered.org/node/node-red-contrib-blynk-iot)

## Contributing
We accept contributions from our community: stability bugfixes, new hardware support, or any other improvements.  
[Here](https://github.com/blynkkk/blynk-library/labels/help%20wanted) is a list of what you could help with.

### License
This project is released under The MIT License (MIT)
","'arduino', 'bluetooth', 'bluetooth-low-energy', 'embedded', 'esp32', 'esp8266', 'espressif', 'ethernet-shield', 'gsm', 'hardware', 'internet-of-things', 'iot', 'iot-platform', 'mbed', 'ota', 'particle-photon', 'raspberry-pi', 'wifi'",2015-03-24T10:31:07Z,2024-05-26T15:27:56Z,30,29,3809,243,"('vshymanskyy', 1837), ('doom369', 101), ('blynkkk', 59), ('ivankravets', 17), ('pasxa', 8), ('FedericoBusero', 4), ('Rocketct', 2), ('apokrovskyi', 2), ('scropion86', 1), ('noor-latif', 1), ('sysoleg', 1), ('Refenz', 1), ('MLXXXp', 1), ('PilnyTomas', 1), ('ekkai', 1), ('cluePrints', 1), ('gfvalvo', 1), ('kamilosxd678', 1), ('wakwak-koba', 1), ('mcspr', 1), ('Gaff', 1), ('MarkusEngsner', 1), ('karlp', 1), ('laxgoaltender', 1), ('jpasqua', 1), ('JanSurft', 1), ('Fettkeewl', 1), ('cffiebigc', 1), ('ansonhex', 1), ('CHE77', 1)",22,21,
hhxsv5/laravel-s,LaravelS is an out-of-the-box adapter between Laravel/Lumen and Swoole.,"
    
     
        English Docs |
        中文文档
    
    🚀 LaravelS is an out-of-the-box adapter between Laravel/Lumen and Swoole
    
        
            
        
        
            
        
        
            
        
        
            
        
        
            
        
        
            
        
        
            
        
    


---

## Continuous Updates
- *Please `Watch` this repository to get the latest updates.*

Table of Contents
=================

* [Features](#features)
* [Benchmark](#benchmark)
* [Requirements](#requirements)
* [Install](#install)
* [Run](#run)
* [Deploy](#deploy)
* [Cooperate with Nginx (Recommended)](#cooperate-with-nginx-recommended)
* [Cooperate with Apache](#cooperate-with-apache)
* [Enable WebSocket server](#enable-websocket-server)
* [Listen events](#listen-events)
    * [System events](#system-events)
    * [Customized asynchronous events](#customized-asynchronous-events)
* [Asynchronous task queue](#asynchronous-task-queue)
* [Millisecond cron job](#millisecond-cron-job)
* [Automatically reload after modifying code](#automatically-reload-after-modifying-code)
* [Get the instance of SwooleServer in your project](#get-the-instance-of-swooleserver-in-your-project)
* [Use SwooleTable](#use-swooletable)
* [Multi-port mixed protocol](#multi-port-mixed-protocol)
* [Coroutine](#coroutine)
* [Custom process](#custom-process)
* [Common components](#common-components)
    * [Apollo](#apollo)
    * [Prometheus](#prometheus)
* [Other features](#other-features)
    * [Configure Swoole events](#configure-swoole-events)
    * [Serverless](#serverless)
* [Important notices](#important-notices)
* [Users and cases](https://github.com/hhxsv5/laravel-s/blob/master/README-CN.md#%E7%94%A8%E6%88%B7%E4%B8%8E%E6%A1%88%E4%BE%8B)
* [Alternatives](#alternatives)
* [Sponsor](#sponsor)
* [License](#license)

## Features

- Built-in Http/[WebSocket](https://github.com/hhxsv5/laravel-s/blob/master/README.md#enable-websocket-server) server

- [Multi-port mixed protocol](https://github.com/hhxsv5/laravel-s/blob/master/README.md#multi-port-mixed-protocol)

- [Custom process](https://github.com/hhxsv5/laravel-s/blob/master/README.md#custom-process)

- Memory resident

- [Asynchronous event listening](https://github.com/hhxsv5/laravel-s/blob/master/README.md#customized-asynchronous-events)

- [Asynchronous task queue](https://github.com/hhxsv5/laravel-s/blob/master/README.md#asynchronous-task-queue)

- [Millisecond cron job](https://github.com/hhxsv5/laravel-s/blob/master/README.md#millisecond-cron-job)

- [Common Components](https://github.com/hhxsv5/laravel-s/blob/master/README.md#common-components)

- Gracefully reload

- [Automatically reload after modifying code](https://github.com/hhxsv5/laravel-s/blob/master/README.md#automatically-reload-after-modifying-code)

- Support Laravel/Lumen both, good compatibility

- Simple & Out of the box

## Benchmark

- [Which is the fastest web framework?](https://github.com/the-benchmarker/web-frameworks)

- [TechEmpower Framework Benchmarks](https://www.techempower.com/benchmarks/)

## Requirements

| Dependency | Requirement |
| -------- | -------- |
| [PHP](https://secure.php.net/) | `>=8.2` `Recommend 8.2` |
| [Swoole](https://www.swoole.co.uk/) | `>=5.0` `Recommend 5.1.1` |
| [Laravel](https://laravel.com/)/[Lumen](https://lumen.laravel.com/) | `>=10` `Recommend 10` |

## Install

1.Require package via [Composer](https://getcomposer.org/)([packagist](https://packagist.org/packages/hhxsv5/laravel-s)).
```bash
# PHP >=8.2
composer require ""hhxsv5/laravel-s:~3.8.0""

# PHP >=5.5.9,<=7.4.33
# composer require ""hhxsv5/laravel-s:~3.7.0""

# Make sure that your composer.lock file is under the VCS
```

2.Register service provider(pick one of two).

- `Laravel`: in `config/app.php` file, `Laravel 5.5+ supports package discovery automatically, you should skip this step`
    ```php
    'providers' => [
        //...
        Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class,
    ],
    ```

- `Lumen`: in `bootstrap/app.php` file
    ```php
    $app->register(Hhxsv5\LaravelS\Illuminate\LaravelSServiceProvider::class);
    ```

3.Publish configuration and binaries.
> *After upgrading LaravelS, you need to republish; click [here](https://github.com/hhxsv5/laravel-s/releases) to see the change notes of each version.*

```bash
php artisan laravels publish
# Configuration: config/laravels.php
# Binary: bin/laravels bin/fswatch bin/inotify
```

4.Change `config/laravels.php`: listen_ip, listen_port, refer [Settings](https://github.com/hhxsv5/laravel-s/blob/master/Settings.md).

5.Performance tuning

- [Adjust kernel parameters](https://wiki.swoole.com/#/other/sysctl?id=%e5%86%85%e6%a0%b8%e5%8f%82%e6%95%b0%e8%b0%83%e6%95%b4)

- [Number of Workers](https://www.swoole.co.uk/docs/modules/swoole-server/configuration#worker_num): LaravelS uses Swoole's `Synchronous IO` mode, the larger the `worker_num` setting, the better the concurrency performance, but it will cause more memory usage and process switching overhead. If one request takes 100ms, in order to provide 1000QPS concurrency, at least 100 Worker processes need to be configured. The calculation method is: worker_num = 1000QPS/(1s/1ms) = 100, so incremental pressure testing is needed to calculate the best` worker_num`.

- [Number of Task Workers](https://www.swoole.co.uk/docs/modules/swoole-server/configuration#task_worker_num)

## Run
> `Please read the notices carefully before running`, [Important notices](https://github.com/hhxsv5/laravel-s#important-notices)(IMPORTANT).

- Commands: `php bin/laravels {start|stop|restart|reload|info|help}`.

| Command | Description |
| --------- | --------- |
| start | Start LaravelS, list the processes by ""*ps -ef&#124;grep laravels*"" |
| stop | Stop LaravelS, and trigger the method `onStop` of Custom process |
| restart | Restart LaravelS: Stop gracefully before starting; The service is `unavailable` until startup is complete |
| reload | Reload all Task/Worker/Timer processes which contain your business codes, and trigger the method `onReload` of Custom process, CANNOT reload Master/Manger processes. After modifying `config/laravels.php`, you `only` have to call `restart` to restart |
| info | Display component version information |
| help | Display help information |

- Boot options for the commands `start` and `restart`.

| Option | Description |
| --------- | --------- |
| -d&#124;--daemonize | Run as a daemon, this option will override the `swoole.daemonize` setting in `laravels.php` |
| -e&#124;--env | The environment the command should run under, such as `--env=testing` will use the configuration file `.env.testing` firstly, this feature requires Laravel 5.2+ |
| -i&#124;--ignore | Ignore checking PID file of Master process |
| -x&#124;--x-version | The version(branch) of the current project, stored in $_ENV/$_SERVER, access via `$_ENV['X_VERSION']` `$_SERVER['X_VERSION']` `$request->server->get('X_VERSION')` |

- `Runtime` files: `start` will automatically execute `php artisan laravels config` and generate these files, developers generally don't need to pay attention to them, it's recommended to add them to `.gitignore`.

| File | Description |
| --------- | --------- |
| storage/laravels.conf | LaravelS's `runtime` configuration file |
| storage/laravels.pid | PID file of Master process |
| storage/laravels-timer-process.pid | PID file of the Timer process |
| storage/laravels-custom-processes.pid | PID file of all custom processes |

## Deploy
> It is recommended to supervise the main process through [Supervisord](http://supervisord.org/), the premise is without option `-d` and to set `swoole.daemonize` to `false`.

```
[program:laravel-s-test]
directory=/var/www/laravel-s-test
command=/usr/local/bin/php bin/laravels start -i
numprocs=1
autostart=true
autorestart=true
startretries=3
user=www-data
redirect_stderr=true
stdout_logfile=/var/log/supervisor/%(program_name)s.log
```

## Cooperate with Nginx (Recommended)
> [Demo](https://github.com/hhxsv5/docker/blob/master/nginx/conf.d/laravels.conf).

```nginx
gzip on;
gzip_min_length 1024;
gzip_comp_level 2;
gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml;
gzip_vary on;
gzip_disable ""msie6"";
upstream swoole {
    # Connect IP:Port
    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;
    # Connect UnixSocket Stream file, tips: put the socket file in the /dev/shm directory to get better performance
    #server unix:/yourpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;
    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;
    #server 192.168.1.2:5200 backup;
    keepalive 16;
}
server {
    listen 80;
    # Don't forget to bind the host
    server_name laravels.com;
    root /yourpath/laravel-s-test/public;
    access_log /yourpath/log/nginx/$server_name.access.log  main;
    autoindex off;
    index index.html index.htm;
    # Nginx handles the static resources(recommend enabling gzip), LaravelS handles the dynamic resource.
    location / {
        try_files $uri @laravels;
    }
    # Response 404 directly when request the PHP file, to avoid exposing public/*.php
    #location ~* \.php$ {
    #    return 404;
    #}
    location @laravels {
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 120s;
        proxy_http_version 1.1;
        proxy_set_header Connection """";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header Server-Protocol $server_protocol;
        proxy_set_header Server-Name $server_name;
        proxy_set_header Server-Addr $server_addr;
        proxy_set_header Server-Port $server_port;
        # ""swoole"" is the upstream
        proxy_pass http://swoole;
    }
}
```

## Cooperate with Apache

```apache
LoadModule proxy_module /yourpath/modules/mod_proxy.so
LoadModule proxy_balancer_module /yourpath/modules/mod_proxy_balancer.so
LoadModule lbmethod_byrequests_module /yourpath/modules/mod_lbmethod_byrequests.so
LoadModule proxy_http_module /yourpath/modules/mod_proxy_http.so
LoadModule slotmem_shm_module /yourpath/modules/mod_slotmem_shm.so
LoadModule rewrite_module /yourpath/modules/mod_rewrite.so
LoadModule remoteip_module /yourpath/modules/mod_remoteip.so
LoadModule deflate_module /yourpath/modules/mod_deflate.so


    SetOutputFilter DEFLATE
    DeflateCompressionLevel 2
    AddOutputFilterByType DEFLATE text/html text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml application/x-httpd-php image/jpeg image/gif image/png font/ttf font/otf image/svg+xml



    # Don't forget to bind the host
    ServerName www.laravels.com
    ServerAdmin hhxsv5@sina.com

    DocumentRoot /yourpath/laravel-s-test/public;
    DirectoryIndex index.html index.htm
    
        AllowOverride None
        Require all granted
    

    RemoteIPHeader X-Forwarded-For

    ProxyRequests Off
    ProxyPreserveHost On
      
        BalancerMember http://192.168.1.1:5200 loadfactor=7
        #BalancerMember http://192.168.1.2:5200 loadfactor=3
        #BalancerMember http://192.168.1.3:5200 loadfactor=1 status=+H
        ProxySet lbmethod=byrequests
    
    #ProxyPass / balancer://laravels/
    #ProxyPassReverse / balancer://laravels/

    # Apache handles the static resources, LaravelS handles the dynamic resource.
    RewriteEngine On
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-d
    RewriteCond %{DOCUMENT_ROOT}%{REQUEST_FILENAME} !-f
    RewriteRule ^/(.*)$ balancer://laravels%{REQUEST_URI} [P,L]

    ErrorLog ${APACHE_LOG_DIR}/www.laravels.com.error.log
    CustomLog ${APACHE_LOG_DIR}/www.laravels.com.access.log combined

```

## Enable WebSocket server
> The Listening address of WebSocket Sever is the same as Http Server.

1.Create WebSocket Handler class, and implement interface `WebSocketHandlerInterface`.The instant is automatically instantiated when start, you do not need to manually create it.
```php
namespace App\Services;
use Hhxsv5\LaravelS\Swoole\WebSocketHandlerInterface;
use Swoole\Http\Request;
use Swoole\Http\Response;
use Swoole\WebSocket\Frame;
use Swoole\WebSocket\Server;
/**
 * @see https://www.swoole.co.uk/docs/modules/swoole-websocket-server
 */
class WebSocketService implements WebSocketHandlerInterface
{
    // Declare constructor without parameters
    public function __construct()
    {
    }
    // public function onHandShake(Request $request, Response $response)
    // {
           // Custom handshake: https://www.swoole.co.uk/docs/modules/swoole-websocket-server-on-handshake
           // The onOpen event will be triggered automatically after a successful handshake
    // }
    public function onOpen(Server $server, Request $request)
    {
        // Before the onOpen event is triggered, the HTTP request to establish the WebSocket has passed the Laravel route,
        // so Laravel's Request, Auth information are readable, Session is readable and writable, but only in the onOpen event.
        // \Log::info('New WebSocket connection', [$request->fd, request()->all(), session()->getId(), session('xxx'), session(['yyy' => time()])]);
        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.
        $server->push($request->fd, 'Welcome to LaravelS');
    }
    public function onMessage(Server $server, Frame $frame)
    {
        // \Log::info('Received message', [$frame->fd, $frame->data, $frame->opcode, $frame->finish]);
        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.
        $server->push($frame->fd, date('Y-m-d H:i:s'));
    }
    public function onClose(Server $server, $fd, $reactorId)
    {
        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.
    }
}
```

2.Modify `config/laravels.php`.
```php
// ...
'websocket'      => [
    'enable'  => true, // Note: set enable to true
    'handler' => \App\Services\WebSocketService::class,
],
'swoole'         => [
    //...
    // Must set dispatch_mode in (2, 4, 5), see https://www.swoole.co.uk/docs/modules/swoole-server/configuration
    'dispatch_mode' => 2,
    //...
],
// ...
```
3.Use `SwooleTable` to bind FD & UserId, optional, [Swoole Table Demo](https://github.com/hhxsv5/laravel-s/blob/master/README.md#use-swooletable). Also you can use the other global storage services, like Redis/Memcached/MySQL, but be careful that FD will be possible conflicting between multiple `Swoole Servers`.

4.Cooperate with Nginx (Recommended)
> Refer [WebSocket Proxy](http://nginx.org/en/docs/http/websocket.html)

```nginx
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
upstream swoole {
    # Connect IP:Port
    server 127.0.0.1:5200 weight=5 max_fails=3 fail_timeout=30s;
    # Connect UnixSocket Stream file, tips: put the socket file in the /dev/shm directory to get better performance
    #server unix:/yourpath/laravel-s-test/storage/laravels.sock weight=5 max_fails=3 fail_timeout=30s;
    #server 192.168.1.1:5200 weight=3 max_fails=3 fail_timeout=30s;
    #server 192.168.1.2:5200 backup;
    keepalive 16;
}
server {
    listen 80;
    # Don't forget to bind the host
    server_name laravels.com;
    root /yourpath/laravel-s-test/public;
    access_log /yourpath/log/nginx/$server_name.access.log  main;
    autoindex off;
    index index.html index.htm;
    # Nginx handles the static resources(recommend enabling gzip), LaravelS handles the dynamic resource.
    location / {
        try_files $uri @laravels;
    }
    # Response 404 directly when request the PHP file, to avoid exposing public/*.php
    #location ~* \.php$ {
    #    return 404;
    #}
    # Http and WebSocket are concomitant, Nginx identifies them by ""location""
    # !!! The location of WebSocket is ""/ws""
    # Javascript: var ws = new WebSocket(""ws://laravels.com/ws"");
    location =/ws {
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout: Nginx will close the connection if the proxied server does not send data to Nginx in 60 seconds; At the same time, this close behavior is also affected by heartbeat setting of Swoole.
        # proxy_read_timeout 60s;
        proxy_http_version 1.1;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header Server-Protocol $server_protocol;
        proxy_set_header Server-Name $server_name;
        proxy_set_header Server-Addr $server_addr;
        proxy_set_header Server-Port $server_port;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_pass http://swoole;
    }
    location @laravels {
        # proxy_connect_timeout 60s;
        # proxy_send_timeout 60s;
        # proxy_read_timeout 60s;
        proxy_http_version 1.1;
        proxy_set_header Connection """";
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Real-PORT $remote_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header Server-Protocol $server_protocol;
        proxy_set_header Server-Name $server_name;
        proxy_set_header Server-Addr $server_addr;
        proxy_set_header Server-Port $server_port;
        proxy_pass http://swoole;
    }
}
```

5.Heartbeat setting

- Heartbeat setting of Swoole

    ```php
    // config/laravels.php
    'swoole' => [
        //...
        // All connections are traversed every 60 seconds. If a connection does not send any data to the server within 600 seconds, the connection will be forced to close.
        'heartbeat_idle_time'      => 600,
        'heartbeat_check_interval' => 60,
        //...
    ],
    ```

- Proxy read timeout of Nginx

    ```nginx
    # Nginx will close the connection if the proxied server does not send data to Nginx in 60 seconds
    proxy_read_timeout 60s;
    ```

6.Push data in controller

```php
namespace App\Http\Controllers;
class TestController extends Controller
{
    public function push()
    {
        $fd = 1; // Find fd by userId from a map [userId=>fd].
        /**@var \Swoole\WebSocket\Server $swoole */
        $swoole = app('swoole');
        $success = $swoole->push($fd, 'Push data to fd#1 in Controller');
        var_dump($success);
    }
}
```

## Listen events

### System events
> Usually, you can reset/destroy some `global/static` variables, or change the current `Request/Response` object.

- `laravels.received_request` After LaravelS parsed `Swoole\Http\Request` to `Illuminate\Http\Request`, before Laravel's Kernel handles this request.

    ```php
    // Edit file `app/Providers/EventServiceProvider.php`, add the following code into method `boot`
    // If no variable $events, you can also call Facade \Event::listen(). 
    $events->listen('laravels.received_request', function (\Illuminate\Http\Request $req, $app) {
        $req->query->set('get_key', 'hhxsv5');// Change query of request
        $req->request->set('post_key', 'hhxsv5'); // Change post of request
    });
    ```

- `laravels.generated_response` After Laravel's Kernel handled the request, before LaravelS parses `Illuminate\Http\Response` to `Swoole\Http\Response`.

    ```php
    // Edit file `app/Providers/EventServiceProvider.php`, add the following code into method `boot`
    // If no variable $events, you can also call Facade \Event::listen(). 
    $events->listen('laravels.generated_response', function (\Illuminate\Http\Request $req, \Symfony\Component\HttpFoundation\Response $rsp, $app) {
        $rsp->headers->set('header-key', 'hhxsv5');// Change header of response
    });
    ```

### Customized asynchronous events
> This feature depends on `AsyncTask` of `Swoole`, your need to set `swoole.task_worker_num` in `config/laravels.php` firstly. The performance of asynchronous event processing is influenced by number of Swoole task process, you need to set [task_worker_num](https://www.swoole.co.uk/docs/modules/swoole-server/configuration) appropriately.

1.Create event class.
```php
use Hhxsv5\LaravelS\Swoole\Task\Event;
class TestEvent extends Event
{
    protected $listeners = [
        // Listener list
        TestListener1::class,
        // TestListener2::class,
    ];
    private $data;
    public function __construct($data)
    {
        $this->data = $data;
    }
    public function getData()
    {
        return $this->data;
    }
}
```

2.Create listener class.
```php
use Hhxsv5\LaravelS\Swoole\Task\Event;
use Hhxsv5\LaravelS\Swoole\Task\Task;
use Hhxsv5\LaravelS\Swoole\Task\Listener;
class TestListener1 extends Listener
{
    public function handle(Event $event)
    {
        \Log::info(__CLASS__ . ':handle start', [$event->getData()]);
        sleep(2);// Simulate the slow codes
        // Deliver task in CronJob, but NOT support callback finish() of task.
        // Note: Modify task_ipc_mode to 1 or 2 in config/laravels.php, see https://www.swoole.co.uk/docs/modules/swoole-server/configuration
        $ret = Task::deliver(new TestTask('task data'));
        var_dump($ret);
        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.
        // return false; // Stop propagating this event to subsequent listeners
    }
}
```

3.Fire event.
```php
// Create instance of event and fire it, ""fire"" is asynchronous.
use Hhxsv5\LaravelS\Swoole\Task\Event;
$event = new TestEvent('event data');
// $event->delay(10); // Delay 10 seconds to fire event
// $event->setTries(3); // When an error occurs, try 3 times in total
$success = Event::fire($event);
var_dump($success);// Return true if sucess, otherwise false
```

## Asynchronous task queue
> This feature depends on `AsyncTask` of `Swoole`, your need to set `swoole.task_worker_num` in `config/laravels.php` firstly. The performance of task processing is influenced by number of Swoole task process, you need to set [task_worker_num](https://www.swoole.co.uk/docs/modules/swoole-server/configuration) appropriately.

1.Create task class.
```php
use Hhxsv5\LaravelS\Swoole\Task\Task;
class TestTask extends Task
{
    private $data;
    private $result;
    public function __construct($data)
    {
        $this->data = $data;
    }
    // The logic of task handling, run in task process, CAN NOT deliver task
    public function handle()
    {
        \Log::info(__CLASS__ . ':handle start', [$this->data]);
        sleep(2);// Simulate the slow codes
        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.
        $this->result = 'the result of ' . $this->data;
    }
    // Optional, finish event, the logic of after task handling, run in worker process, CAN deliver task 
    public function finish()
    {
        \Log::info(__CLASS__ . ':finish start', [$this->result]);
        Task::deliver(new TestTask2('task2 data')); // Deliver the other task
    }
}
```

2.Deliver task.
```php
// Create instance of TestTask and deliver it, ""deliver"" is asynchronous.
use Hhxsv5\LaravelS\Swoole\Task\Task;
$task = new TestTask('task data');
// $task->delay(3);// delay 3 seconds to deliver task
// $task->setTries(3); // When an error occurs, try 3 times in total
$ret = Task::deliver($task);
var_dump($ret);// Return true if sucess, otherwise false
```

## Millisecond cron job
> Wrapper cron job base on [Swoole's Millisecond Timer](https://www.swoole.co.uk/docs/modules/swoole-async-io), replace `Linux` `Crontab`.

1.Create cron job class.
```php
namespace App\Jobs\Timer;
use App\Tasks\TestTask;
use Swoole\Coroutine;
use Hhxsv5\LaravelS\Swoole\Task\Task;
use Hhxsv5\LaravelS\Swoole\Timer\CronJob;
class TestCronJob extends CronJob
{
    protected $i = 0;
    // !!! The `interval` and `isImmediate` of cron job can be configured in two ways(pick one of two): one is to overload the corresponding method, and the other is to pass parameters when registering cron job.
    // --- Override the corresponding method to return the configuration: begin
    public function interval()
    {
        return 1000;// Run every 1000ms
    }
    public function isImmediate()
    {
        return false;// Whether to trigger `run` immediately after setting up
    }
    // --- Override the corresponding method to return the configuration: end
    public function run()
    {
        \Log::info(__METHOD__, ['start', $this->i, microtime(true)]);
        // do something
        // sleep(1); // Swoole < 2.1
        Coroutine::sleep(1); // Swoole>=2.1 Coroutine will be automatically created for run().
        $this->i++;
        \Log::info(__METHOD__, ['end', $this->i, microtime(true)]);

        if ($this->i >= 10) { // Run 10 times only
            \Log::info(__METHOD__, ['stop', $this->i, microtime(true)]);
            $this->stop(); // Stop this cron job, but it will run again after restart/reload.
            // Deliver task in CronJob, but NOT support callback finish() of task.
            // Note: Modify task_ipc_mode to 1 or 2 in config/laravels.php, see https://www.swoole.co.uk/docs/modules/swoole-server/configuration
            $ret = Task::deliver(new TestTask('task data'));
            var_dump($ret);
        }
        // The exceptions thrown here will be caught by the upper layer and recorded in the Swoole log. Developers need to try/catch manually.
    }
}
```

2.Register cron job.
```php
// Register cron jobs in file ""config/laravels.php""
[
    // ...
    'timer'          => [
        'enable' => true, // Enable Timer
        'jobs'   => [ // The list of cron job
            // Enable LaravelScheduleJob to run `php artisan schedule:run` every 1 minute, replace Linux Crontab
            // \Hhxsv5\LaravelS\Illuminate\LaravelScheduleJob::class,
            // Two ways to configure parameters:
            // [\App\Jobs\Timer\TestCronJob::class, [1000, true]], // Pass in parameters when registering
            \App\Jobs\Timer\TestCronJob::class, // Override the corresponding method to return the configuration
        ],
        'max_wait_time' => 5, // Max waiting time of reloading
        // Enable the global lock to ensure that only one instance starts the timer when deploying multiple instances. This feature depends on Redis, please see https://laravel.com/docs/7.x/redis
        'global_lock'     => false,
        'global_lock_key' => config('app.name', 'Laravel'),
    ],
    // ...
];
```

3.Note: it will launch multiple timers when build the server cluster, so you need to make sure that launch one timer only to avoid running repetitive task.

4.LaravelS `v3.4.0` starts to support the hot restart [Reload] `Timer` process. After LaravelS receives the `SIGUSR1` signal, it waits for `max_wait_time`(default 5) seconds to end the process, then the `Manager` process will pull up the `Timer` process again.

5.If you only need to use `minute-level` scheduled tasks, it is recommended to enable `Hhxsv5\LaravelS\Illuminate\LaravelScheduleJob` instead of Linux Crontab, so that you can follow the coding habits of [Laravel task scheduling](https://laravel.com/docs/7.x/scheduling) and configure `Kernel`.

```php
// app/Console/Kernel.php
protected function schedule(Schedule $schedule)
{
    // runInBackground() will start a new child process to execute the task. This is asynchronous and will not affect the execution timing of other tasks.
    $schedule->command(TestCommand::class)->runInBackground()->everyMinute();
}
```

## Automatically reload after modifying code

- Via `inotify`, support Linux only.

    1.Install [inotify](http://pecl.php.net/package/inotify) extension.

    2.Turn on the switch in [Settings](https://github.com/hhxsv5/laravel-s/blob/master/Settings.md#inotify_reloadenable).

    3.Notice: Modify the file only in `Linux` to receive the file change events. It's recommended to use the latest Docker. [Vagrant Solution](https://github.com/mhallin/vagrant-notify-forwarder).

- Via `fswatch`, support OS X/Linux/Windows.

    1.Install [fswatch](https://github.com/emcrisostomo/fswatch).

    2.Run command in your project root directory.

    ```bash
    # Watch current directory
    ./bin/fswatch
    # Watch app directory
    ./bin/fswatch ./app
    ```

- Via `inotifywait`, support Linux.

    1.Install [inotify-tools](https://github.com/rvoicilas/inotify-tools).

    2.Run command in your project root directory.

    ```bash
    # Watch current directory
    ./bin/inotify
    # Watch app directory
    ./bin/inotify ./app
    ```

- When the above methods does not work, the ultimate solution: set `max_request=1,worker_num=1`, so that `Worker` process will restart after processing a request. The performance of this method is very poor, `so only development environment use`.

## Get the instance of `SwooleServer` in your project

```php
/**
 * $swoole is the instance of `Swoole\WebSocket\Server` if enable WebSocket server, otherwise `Swoole\Http\Server`
 * @var \Swoole\WebSocket\Server|\Swoole\Http\Server $swoole
 */
$swoole = app('swoole');
var_dump($swoole->stats());
$swoole->push($fd, 'Push WebSocket message');
```

## Use `SwooleTable`

1.Define Table, support multiple.
> All defined tables will be created before Swoole starting.

```php
// in file ""config/laravels.php""
[
    // ...
    'swoole_tables'  => [
        // Scene：bind UserId & FD in WebSocket
        'ws' => [// The Key is table name, will add suffix ""Table"" to avoid naming conflicts. Here defined a table named ""wsTable""
            'size'   => 102400,// The max size
            'column' => [// Define the columns
                ['name' => 'value', 'type' => \Swoole\Table::TYPE_INT, 'size' => 8],
            ],
        ],
        //...Define the other tables
    ],
    // ...
];
```

2.Access `Table`: all table instances will be bound on `SwooleServer`, access by `app('swoole')->xxxTable`.

```php
namespace App\Services;
use Hhxsv5\LaravelS\Swoole\WebSocketHandlerInterface;
use Swoole\Http\Request;
use Swoole\WebSocket\Frame;
use Swoole\WebSocket\Server;
class WebSocketService implements WebSocketHandlerInterface
{
    /**@var \Swoole\Table $wsTable */
    private $wsTable;
    public function __construct()
    {
        $this->wsTable = app('swoole')->wsTable;
    }
    // Scene：bind UserId & FD in WebSocket
    public function onOpen(Server $server, Request $request)
    {
        // var_dump(app('swoole') === $server);// The same instance
        /**
         * Get the currently logged in user
         * This feature requires that the path to establish a WebSocket connection go through middleware such as Authenticate.
         * E.g:
         * Browser side: var ws = new WebSocket(""ws://127.0.0.1:5200/ws"");
         * Then the /ws route in Laravel needs to add the middleware like Authenticate.
         * Route::get('/ws', function () {
         *     // Respond any content with status code 200
         *     return 'websocket';
         * })->middleware(['auth']);
         */
        // $user = Auth::user();
        // $userId = $user ? $user->id : 0; // 0 means a guest user who is not logged in
        $userId = mt_rand(1000, 100","'async', 'http', 'laravel', 'lumen', 'performance', 'process', 'server', 'swoole', 'task', 'tcp', 'timer', 'udp', 'websocket'",2018-01-16T07:37:04Z,2024-04-23T09:53:10Z,42,33,3810,195,"('hhxsv5', 1585), ('XieBiao', 101), ('Louis-Ni', 13), ('dizys', 9), ('dupeng', 5), ('eleven26', 5), ('davidhhuan', 5), ('drzippie', 4), ('reatang', 4), ('woann', 4), ('never615', 4), ('m01i0ng', 2), ('yanxiaowei', 2), ('wi1dcard', 2), ('tangyi', 2), ('1151879477', 2), ('blankqwq', 2), ('NicoChenyt', 2), ('Mechstud', 2), ('vinhais', 2), ('谢彪', 1), ('HelloZouYou', 1), ('to2false', 1), ('snowlyg', 1), ('shenstef', 1), ('photondragon', 1), ('lee1031', 1), ('hooklife', 1), ('celaraze', 1), ('abnud1', 1), ('XieBiao', 1), ('summerKK', 1), ('Retr0', 1), ('palpalani', 1), ('imanghafoori1', 1), ('Ilias Karamanis', 1), ('bluebellx7', 1), ('filakhtov', 1), ('DavidYanXW', 1), ('Dave Xie', 1), ('lj3lj3', 1), ('wd571', 1)",22,17,
DrummerB/BFNavigationBarDrawer,"A UIToolbar subclass that can easily be displayed below a UINavigationBar, similarly to the playlist view in the Music app.","# BFNavigationBarDrawer

[![Pod Version](http://img.shields.io/cocoapods/v/BFNavigationBarDrawer.svg?style=flat)](https://github.com/DrummerB/BFNavigationBarDrawer)
[![Pod Platform](http://img.shields.io/cocoapods/p/BFNavigationBarDrawer.svg?style=flat)](https://github.com/DrummerB/BFNavigationBarDrawer)
[![Pod License](http://img.shields.io/cocoapods/l/BFNavigationBarDrawer.svg?style=flat)](http://opensource.org/licenses/BSD-3-Clause)
[![Dependency Status](https://www.versioneye.com/objective-c/BFNavigationBarDrawer/badge.svg?style=flat)](https://www.versioneye.com/objective-c/BFNavigationBarDrawer)


| *With* automatic scroll view adjustment | *Without* scroll view adjustment |
| ------------- | -----|
| ![Imgur](http://i.imgur.com/0Jpwbr9.gif) | ![Imgur](http://i.imgur.com/JmXZEAi.gif) |


Summary
-------

BFNavigationBarDrawer is a UIToolbar subclass that can easily be displayed below a UINavigationBar, similarly to the playlist view in the Music app. You can also assign a scroll view (or table view) to the drawer. The drawer will take care of moving the scroll view's content down and updating its contentInset property, when the drawer is displayed.

Instructions
------------

Create a Podfile, if you don't have one already. Add the following line.

    pod 'BFNavigationBarDrawer'
    
Run the following command.

    pod install
    
Alternatively, you can just drop the `BFNavigationBarDrawer.{h,m}` files into your project.

Create a drawer instance and assign a scroll view that should be scrolled by the drawer:

    drawer = [[BFNavigationBarDrawer alloc] init];
    drawer.scrollView = self.tableView;
    
Add some UIBarButtonItems to it and when you want to display it, call:

    [drawer showFromNavigationBar:self.navigationController.navigationBar animated:YES];
    
To hide it:

    [drawer hideAnimated:YES];
    
       
Notes
------------

I only tested with iOS 7. It doesn't make a lot of sense to use it with earlier iOS versions, as navigation bars used to be opaque and you could simply resize the scroll view to make room for an additional header bar.

License
-------

[New BSD License](http://en.wikipedia.org/wiki/BSD_licenses). For the full license text, see [here](https://raw.github.com/DrummerB/BFNavigationBarDrawer/master/LICENSE).
",,2014-03-05T02:13:12Z,2018-02-01T09:47:22Z,3,3,730,20,"('DrummerB', 23), ('brocoo', 1), ('zzz6519003', 1)",2,2,
malwaredllc/byob,"An open-source post-exploitation framework for students, researchers and developers.","![Banner](https://github.com/malwaredllc/byob/blob/master/byob/static/byob_logo_black.svg)

[![license](https://img.shields.io/badge/license-GPL-brightgreen.svg)](https://github.com/malwaredllc/byob/blob/master/LICENSE)
[![version](https://img.shields.io/badge/version-2.0-blue.svg)](https://github.com/malwaredllc/byob)
![build](https://github.com/malwaredllc/byob/workflows/build/badge.svg)
[![Coverage Status](https://coveralls.io/repos/github/malwaredllc/byob/badge.svg)](https://coveralls.io/github/malwaredllc/byob)

[![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=BYOB%20(Post-Exploitation%20Framework)&url=https://github.com/malwaredllc/byob&via=malwaredllc&hashtags=byob,python,security,github)


**Questions?** Check out the [docs](https://github.com/malwaredllc/byob/wiki) or join our [Discord support server](https://discord.gg/8FsSrw7)

__Disclaimer__: This project should be used for authorized testing or educational purposes only.

BYOB is an open-source post-exploitation framework for students, researchers and developers. It includes features such as:
- Command & control server with intuitive user-interface
- Custom payload generator for multiple platforms
- 12 post-exploitation modules

It is designed to allow students and developers to easily implement their own code and add cool new
features *without* having to write a C2 server or Remote Administration Tool from scratch.

This project has 2 main parts: the **original console-based application** (`/byob`) and the **web GUI** (`/web-gui`).

# Web GUI

## Dashboard
A control panel for your C2 server with a point-and-click interface for executing post-exploitation modules. The control panel includes an interactive map of client machines and a dashboard which allows efficient, intuitive administration of client machines.

![dashboard_preview](https://github.com/malwaredllc/byob/blob/master/web-gui/buildyourownbotnet/assets/images/previews/preview-dashboard.png)

## Payload Generator
The payload generator uses black magic involving Docker containers & Wine servers to compile executable payloads for any platform/architecture you select. These payloads spawn reverse TCP shells with communication over the network encrypted via AES-256 after generating a secure symmetric key using the [Diffie-Hellman IKE](https://tools.ietf.org/html/rfc2409).

![payloads_preview](https://github.com/malwaredllc/byob/blob/master/web-gui/buildyourownbotnet/assets/images/previews/preview-payloads2.png)

## Terminal Emulator
The web app includes an in-browser terminal emulator so you can still have direct shell access even when using the web GUI.

![terminal_preview](https://github.com/malwaredllc/byob/blob/master/web-gui/buildyourownbotnet/assets/images/previews/preview-shell.png)

# Console Application

## Client
[![client](https://img.shields.io/badge/byob-client-blue.svg)](https://github.com/malwaredllc/byob/blob/master/byob/payloads.py)

*Generate fully-undetectable clients with staged payloads, remote imports, and unlimited post-exploitation modules*

1) __Remote Imports__: remotely import third-party packages from the server without writing them 
to the disk or downloading/installing them
2) __Nothing Written To The Disk__: clients never write anything to the disk - not even temporary files (zero IO
system calls are made) because remote imports allow arbitrary code to be 
dynamically loaded into memory and directly imported into the currently running 
process
3) __Zero Dependencies (Not Even Python Itself)__: client runs with just the python standard library, remotely imports any non-standard
packages/modules from the server, and can be compiled with a standalone python 
interpreter into a portable binary executable formatted for any platform/architecture,
allowing it to run on anything, even when Python itself is missing on the target host
4) __Add New Features With Just 1 Click__: any python script, module, or package you copy to the `./byob/modules/` directory
automatically becomes remotely importable & directly usable by every client while 
your command & control server is running
5) __Write Your Own Modules__: a basic module template is provided in `./byob/modules/` directory to make writing
your own modules a straight-forward, hassle-free process
6) __Run Unlimited Modules Without Bloating File Size__: use remote imports to add unlimited features without adding a single byte to the
client's file size 
7) __Fully Updatable__: each client will periodically check the server for new content available for
remote import, and will dynamically update its in-memory resources
if anything has been added/removed
8) __Platform Independent__: everything is written in Python (a platform-agnostic language) and the clients
generated can optionally be compiled into a portable executable (*Windows*) or
bundled into a standalone application (*macOS*)
9) __Bypass Firewalls__: clients connect to the command & control server via reverse TCP connections, which
will bypass most firewalls because the default filter configurations primarily
block incoming connections
10) __Counter-Measure Against Antivirus__: avoids being analyzed by antivirus by blocking processes with names of known antivirus
products from spawning
11) __Encrypt Payloads To Prevent Analysis__: the main client payload is encrypted with a random 256-bit key which exists solely
in the payload stager which is generated along with it
12) __Prevent Reverse-Engineering__: by default, clients will abort execution if a virtual machine or sandbox is detected

## Modules
[![modules](https://img.shields.io/badge/byob-modules-blue.svg)](https://github.com/malwaredllc/byob/blob/master/byob/modules)

*Post-exploitation modules that are remotely importable by clients*

1) __Persistence__ (`byob.modules.persistence`): establish persistence on the host machine using 5 different methods
2) __Packet Sniffer__ (`byob.modules.packetsniffer`): run a packet sniffer on the host network & upload .pcap file
3) __Escalate Privileges__ (`byob.modules.escalate`): attempt UAC bypass to gain unauthorized administrator privileges
4) __Port Scanner__ (`byob.modules.portscanner`): scan the local network for other online devices & open ports
5) __Keylogger__ (`byob.modules.keylogger`): logs the user’s keystrokes & the window name entered
6) __Screenshot__ (`byob.modules.screenshot`): take a screenshot of current user’s desktop
7) __Outlook__ (`byob.modules.outlook`): read/search/upload emails from the local Outlook client
8) __Process Control__ (`byob.modules.process`): list/search/kill/monitor currently running processes on the host
9) __iCloud__ (`byob.modules.icloud`): check for logged in iCloud account on macOS
10) __Miner__ (`byob.core.miner`): mine Monero in the background using the built-in miner or XMRig

## Server
[![server](https://img.shields.io/badge/byob-server-blue.svg)](https://github.com/malwaredllc/byob/blob/master/byob/server.py)

*Command & control server with persistent database and console*

1) __Console-Based User-Interface__: streamlined console interface for controlling client host machines remotely via
reverse TCP shells which provide direct terminal access to the client host machines
2) __Persistent SQLite Database__: lightweight database that stores identifying information about client host machines,
allowing reverse TCP shell sessions to persist through disconnections of arbitrary
duration and enabling long-term reconnaissance
3) __Client-Server Architecture__: all python packages/modules installed locally are automatically made available for clients 
to remotely import without writing them to the disk of the target machines, allowing clients to use modules which require
packages not installed on the target machines

## Core
[![core](https://img.shields.io/badge/byob-core-blue.svg)](https://github.com/malwaredllc/byob/blob/master/byob/core)

*Core framework modules used by the generator and the server*

1) __Utilities__ (`byob.core.util`): miscellaneous utility functions that are used by many modules
2) __Security__ (`byob.core.security`): Diffie-Hellman IKE & 3 encryption modes (AES-256-OCB, AES-256-CBC, XOR-128)
3) __Loaders__ (`byob.core.loaders`): remotely import any package/module/scripts from the server
4) __Payloads__ (`byob.core.payloads`): reverse TCP shell designed to remotely import dependencies, packages & modules
5) __Stagers__ (`byob.core.stagers`): generate unique payload stagers to prevent analysis & detection   
6) __Generators__ (`byob.core.generators`): functions which all dynamically generate code for the client generator
7) __DAO__ (`byob.core.dao`): handles interaction between command & control server and the SQLite database
8) __Handler__ (`byob.core.handler`): HTTP POST request handler for remote file uploads to the server

________________________________________________________________________________________________

### To Do

*Contributors welcome! Feel free to issue pull-requests with any new features or improvements you have come up with!*

1) __Remote Import Encryption__ - encryption for data streams of packages/modules being remotely imported (to maintain confidentiality/authenticity/integrity and prevent any remote code execution vulnerabilities arising from deserialization)
2) __Transport Types__ - add support for more transport types (HTTP/S, DNS, etc.)
3) __Bug Fixes__ - fix any bugs/issues
","'antiforensics', 'encrypted-connections', 'no-dependencies', 'platform-independent', 'post-exploitation', 'reverse-shells', 'zero-configuration'",2017-12-18T09:10:12Z,2024-06-18T02:55:08Z,34,26,8827,328,"('malwaredllc', 502), ('Malwared LLC', 39), ('intrct', 36), ('colental', 34), ('cclauss', 26), ('colental', 20), ('dontbanmeplz', 11), ('dependabotbot', 10), ('joren485', 10), ('danthegoodman1', 9), ('panpansh', 9), ('xLinkOut', 7), ('garsh1', 5), ('ke0ge', 5), ('mshirley', 5), ('sdshlanta', 4), ('Emilarity', 4), ('cclauss', 4), ('alhazmy13', 3), ('AhmadVakil', 2), ('thehappydinoa', 2), ('ucibar', 2), ('lecatos', 2), ('s1nceri7y', 2), ('wwj718', 1), ('winterrdog', 1), ('unknown', 1), ('lpmi-13', 1), ('k26pl', 1), ('immortalObject', 1), ('fireFerry', 1), ('ugur-ercan', 1), ('SecT0uch', 1), ('Aekras1a', 1)",10,8,
bilibili/join-us,大B站需要更多的小伙伴~ ( ゜- ゜)つロ  乾杯~,"# Join Us

[哔哩哔哩](http://www.bilibili.com) 需要更多的小伙伴~

![join us](http://i0.hdslb.com/bfs/app/82512c2d586b2fb39713c34ade92081e3aec8b55.jpg)

下列职位工作地点均为：上海市·杨浦区·[政立路国正中心](https://j.map.baidu.com/41/i30)

工作机会面向**本科及以上学历**的应届生及社会人士开放

详细个人介绍与简历（建议使用 **PDF** 格式）投递至：

[zhangxinzheng@bilibili.com](mailto:zhangxinzheng@bilibili.com)（移动端）

[tanzhaoxin@bilibili.com](mailto:tanzhaoxin@bilibili.com) （web 端）

邮件标题格式为 **[github]-真名-应聘职位名称**

建议邮件或简历内附带**个人作品**、**开源库**和**博客**等内容，着重展示**个人擅长技术领域**

# 移动端

根据熟悉的领域选择合适的岗位，可以参照下图：

![mobile](http://i0.hdslb.com/bfs/app/19d761719436b52e3b25acccb691de1283c466b1.png)

## 图形引擎工程师 (C++)

**工作内容：**

搭建和维护哔哩哔哩移动端 App 上的图形处理和渲染流水线

**职位要求：**

1. 计算机基础知识（操作系统，算法，数据结构等）扎实
2. 熟悉 C++ 编程语言，有相关开发实践，了解常用语言特性及其原理
3. 熟悉一种图形接口（如 OpenGL ES，DX），了解 GPU 渲染流水线
4. 学习能力强，对探索新技术有强烈的欲望

**加分项：**

1. 计算机，数学，物理等相关专业毕业
2. ACM 或各类算法、数学竞赛中获奖
3. 有过图形或游戏相关开发经验
4. 参与过较大规模的 C++ 工程开发工作

## 多媒体工程师（C/C++）

**职位职责：**

1. 负责移动端多媒体播放架构设计与开发
2. 负责移动端多媒体播放质量调优

**职位要求：**

1. 扎实的 C/C++ 语言基础
2. 扎实的多线程开发基础，对 HTTP、TCP/UDP 有清晰的理解
3. 有 FFmpeg/LibAV,VideoLan,MPlayer,GStreamer 等开源多媒体框架的二次开发经验
4. 对探索各类技术及其内在原理，抱有强烈的兴趣，学习能力强

**加分项：**

1. 对于播放质量优化有相关经验
2. 有多媒体方面架构设计经验
3. 熟悉网络编程
4. 熟悉 OpenGL ES 或其他图形接口，有图形图像相关项目开发经验

## 流媒体工程师（C/C++）

**职位职责：**

1. 负责流媒体传输的核心模块开发

**职位要求：**

1. 扎实的编程基本功，熟练掌握 C/C++，对编程有热情
2. 有过大型的 C/C++ 项目经验
3. 有学习和求知欲望，积极主动，沟通和团队协作能力好

**加分项：**

1. 有网络传输协议设计与优化经验者优先
2. 有 nginx/cronet 等开源库二次开发经验者优先

## iOS工程师

### 业务方向

**工作职责：**

1. 负责公司移动产品功能研发和性能优化，方案的制定，技术可行性研究
2. 负责和产品经理配合，深度参与移动产品需求讨论和功能定义，并承担需求分析、架构设计、核心框架及组件的编码等开发工作
3. 持续从技术上提升 App 性能、稳定性，以及提升研发效能
4. 承担重点、难点的技术攻坚

**职位要求：**

1. 计算机相关专业，计算机基础知识（算法，数据结构，操作系统，网络等）扎实
2. 熟悉 iOS 平台应用开发并有产品开发经验，熟悉 iOS UI 框架、多线程技术和内存管理机制
3. 能独立承担任务，具备优秀的分析和解决问题的能力
4. 出色的团队协作能力，善于沟通，敬业专注，责任心强

**加分项：**

1. 对业界开源软件有关注，并对一些核心组件有的了解
2. 了解 UI / 图形 / 文本渲染底层原理
3. 熟悉一种图形接口（如 OpenGL ES，Vulkan），了解 GPU 渲染流水线
4. 熟悉 C++ 语言，有相关开发经验

### 基础方向

**岗位职责：**

1. 负责公司移动 App 架构设计，方案制定，技术研究，性能及质量优化等工作
2. 负责提供并维护供公司移动 App 所需要的底层基础组件
3. 负责对使用基础组件的业务研发提供技术支持
4. 跟进及推动内外各方协作完成大型技术项目及各种技术目标

**岗位要求：**

1. 有基础组件维护经验
2. 熟悉面向对象开发及设计原则，可以独立设计出稳定易用的底层组件
3. 对代码质量有较高追求，善于高效高质的完成开发工作，善于安全快速的重写/重构历史代码
4. 良好的工作主动性，主动发现问题、提出问题、解决问题，可以提供风险评估及应对方案
5. 良好的沟通能力，可以在沟通中成功推进、主导项目完成，具有职业素养能和第三方友好合作
6. 需要精通 ObjC 语言及熟悉相关底层技术原理

**加分项：**

1. 熟悉 Swift 及 FRP 可以加分
2. 有大型项目或者团队工作经验优先
3. 热爱 bilibili Z 世代文化可以加分

## Android 工程师

### 业务 & 基础方向

**工作职责：**

1. 负责公司移动 app 业务功能的研发及代码优化工作
2. 负责公司移动 app 公用控件及部分基础框架的研发工作
3. 负责公司移动 app 架构设计优化，技术选型，app 性能优化及安全加固
4. 负责移动技术难题攻关，解决系统中关键架构问题，对系统稳定性负责
5. 关注新技术，积极展开对新技术的预研，合理的结合到现有项目中
6. 对项目组开发人员的设计评审，方案合理性评估，以保证代码的可读性、可扩展性、易维护性
7. 参与移动规范制订、技术文档编写

**职位要求：**

1. 熟悉 Android 平台开发，熟练掌握 Kotlin & Java，熟悉常用设计模式
2. 熟悉移动应用架构设计，熟悉互联网 app 常用工具框架
3. 有代码洁癖，善于重构代码，不断改进 app 性能和稳定性
4. 具有良好的工作主动性：主动发现问题，主动解决问题，主动协助解决问题，主动预测风险
5. 与公司价值观一致，充满激情勇于挑战自我

**加分项：**

1. 熟悉 Android 系统源码，有 NDK 相关开发经验
2. 有主导完成优秀应用或大型项目，对高性能程序设计、架构有较多的工程经验
3. 了解 UI / 图形 / 文本渲染底层原理
4. 熟悉一种图形接口（如 OpenGL ES，Vulkan），了解 GPU 渲染流水线
5. 熟悉 C++ 语言，有相关开发经验

## 工程效率工程师

**工作职责：**

1. 负责移动端基础和平台工具的研发和优化，包括但不限于插件热修、监控体系、性能优化和 CI/CD 系统等等
2. 前沿技术研究，承担重点、难点的技术攻坚

**职位要求：**

1. 计算机相关专业
2. 熟悉 iOS / Android App 开发的主流框架和开发模式
3. iOS 平台至少熟悉 CocoaPods / Carthage / bazel 的其中一种；Android 平台需要熟悉编译优化和 Gradle 运行过程
4. 熟悉 python / ruby / bash 等至少一种脚本语言
5. 有丰富的 iOS / Android 平台优化经验

**加分项：**

1. 了解编译原理
2. 有 Jenkins / GitLab pipeline 等 CI 环境的开发经验
3. 有一定的 web 端 / 后端开发能力，能力全面

# web端

## HTML5 播放器开发工程师

**工作职责：**

- 负责开发与维护 Web（PC/Mobile）平台的 HTML5 播放器
- 参与播放器内核技术的调研、研发及优化
- 参与播放体验优化
- 参与播放技术创新

**职位要求：**

- 计算机或相关专业本科及以上学历
- 具有 2 年以上前端（JavaScript/TypeScript）开发经验，基础扎实（或具有C/C++基础且愿意转前端开发）
- 熟悉 HTML5 相关的标准与浏览器平台接口

**加分项：**

- 熟悉 MSE/WebAssembly/WebRTC 等 Web 多媒体相关使用优先
- 有播放器/音视频相关开发经验优先
- 了解 FFmpeg、MP4Box 等工具使用优先
- 熟悉主流流媒体相关协议 HTTP-FLV/HLS/MPEG-DASH/RTMP 等优先
- 熟悉主流封装格式 FLV、TS、MP4 等优先
- 熟悉常用编解码格式 H.265/H.264/AAC 等优先

## 前端开发工程师

**工作职责：**

- 负责网站 PC 端与 H5 端的功能迭代及日常维护
- 建设前端工程化、自动化体系
- 逐步完成基于 node.js 的前后端分离开发模式

**职位要求：**

- 精通各种网页开发技术（JS+HTML+CSS）
- 熟悉使用原生 js 开发，Vue/React 框架至少熟悉使用一种，熟悉 SSR 开发优先
- 熟悉运用前端各种辅助工具 gulp、webpack 等，具备前端工程化的思维和实践经验
- 熟练跨浏览器、跨终端的开发，有 HTML5/CSS3 等移动端 Web 页面开发经验
- 自我管理能力强良好，崇尚团队合作，快速的学习能力，乐于分享与沟通

# 其它职位

您也可以[点击链接](https://www.bilibili.com/blackboard/join-list.html)查看其它我们在找的人才，期待您的加入！


# 联系方式

[zhangxinzheng@bilibili.com](mailto:zhangxinzheng@bilibili.com)（移动端）

[tanzhaoxin@bilibili.com](mailto:tanzhaoxin@bilibili.com) （web端）

",'job',2015-05-07T02:37:53Z,2023-05-24T13:46:39Z,7,5,711,81,"('yrom', 5), ('HarrisonXi', 3), ('苹果梨', 3), ('jununfly', 2), ('xinzhengzhang', 1), ('aristotle9', 1), ('bbd', 1)",3,2,
jquery-boilerplate/jquery-boilerplate,A jump-start for jQuery plugins development,"# jQuery Boilerplate [![Build Status](https://secure.travis-ci.org/jquery-boilerplate/jquery-boilerplate.svg?branch=master)](https://travis-ci.org/jquery-boilerplate/jquery-boilerplate) ![Bower Version](https://badge.fury.io/bo/jquery-boilerplate.svg)

### A jump-start for jQuery plugins development

So, you've tried your hand at writing jQuery plugins and you're comfortable putting together something that probably works. Awesome! Thing is, you think there might be better ways you could be writing them - you've seen them done a number of different ways in the wild, but aren't really sure what the differences between these patterns are or how to get started with them.

This project won't seek to provide a perfect solution to every possible pattern, but will attempt to cover a simple template for beginners and above. By using a basic defaults object, simple constructor for assigning the element to work with and extending options with defaults and a lightweight wrapper around the constructor to avoid issues with multiple instantiations.

## Usage

1. Include jQuery:

	```html
	
	```

2. Include plugin's code:

	```html
	
	```

3. Call the plugin:

	```javascript
	$(""#element"").defaultPluginName({
		propertyName: ""a custom value""
	});
	```

## Structure

The basic structure of the project is given in the following way:

```
├── demo/
│   └── index.html
├── dist/
│   ├── jquery.boilerplate.js
│   └── jquery.boilerplate.min.js
├── src/
│   ├── jquery.boilerplate.coffee
│   └── jquery.boilerplate.js
├── .editorconfig
├── .gitignore
├── .jshintrc
├── .travis.yml
├── Gruntfile.js
└── package.json
```

#### [demo/](https://github.com/jquery-boilerplate/boilerplate/tree/master/demo)

Contains a simple HTML file to demonstrate your plugin.

#### [dist/](https://github.com/jquery-boilerplate/boilerplate/tree/master/dist)

This is where the generated files are stored once Grunt runs.

#### [src/](https://github.com/jquery-boilerplate/boilerplate/tree/master/src)

Contains the files responsible for your plugin, you can choose between JavaScript or CoffeeScript.

#### [.editorconfig](https://github.com/jquery-boilerplate/boilerplate/tree/master/.editorconfig)

This file is for unifying the coding style for different editors and IDEs.

> Check [editorconfig.org](http://editorconfig.org) if you haven't heard about this project yet.

#### [.gitignore](https://github.com/jquery-boilerplate/boilerplate/tree/master/.gitignore)

List of files that we don't want Git to track.

> Check this [Git Ignoring Files Guide](https://help.github.com/articles/ignoring-files) for more details.

#### [.jshintrc](https://github.com/jquery-boilerplate/boilerplate/tree/master/.jshintrc)

List of rules used by JSHint to detect errors and potential problems in JavaScript.

> Check [jshint.com](http://jshint.com/about/) if you haven't heard about this project yet.

#### [.travis.yml](https://github.com/jquery-boilerplate/boilerplate/tree/master/.travis.yml)

Definitions for continous integration using Travis.

> Check [travis-ci.org](http://about.travis-ci.org/) if you haven't heard about this project yet.

#### [Gruntfile.js](https://github.com/jquery-boilerplate/boilerplate/tree/master/Gruntfile.js)

Contains all automated tasks using Grunt.

> Check [gruntjs.com](http://gruntjs.com) if you haven't heard about this project yet.

#### [package.json](https://github.com/jquery-boilerplate/boilerplate/tree/master/package.json)

Specify all dependencies loaded via Node.JS.

> Check [NPM](https://npmjs.org/doc/json.html) for more details.

## Guides

#### How did we get here?

Have you got in this repo and still not sure about using this boilerplate?

Well, extending jQuery with plugins and methods is very powerful and can save you and your peers a lot of development time by abstracting your most clever functions into plugins.

[This awesome guide](https://github.com/jquery-boilerplate/boilerplate/wiki/How-did-we-get-here%3F), adapted from [jQuery Plugins/Authoring](http://docs.jquery.com/Plugins/Authoring), will outline the basics, best practices, and common pitfalls to watch out for as you begin writing your plugin.

#### How to publish plugins?

Also, check our guide on [How to publish a plugin in jQuery Plugin Registry](https://github.com/jquery-boilerplate/boilerplate/wiki/How-to-publish-a-plugin-in-jQuery-Plugin-Registry
)!

**Note:** The jQuery Plugin Registry is in read-only mode. New plugin releases will not be processed.
jQuery recommends moving to [npm](https://www.npmjs.com/), using [""jquery-plugin""](https://www.npmjs.com/browse/keyword/jquery-plugin) as the keyword in your package.json. See [how to publish into npm registry](https://gist.github.com/coolaj86/1318304).

## Team

jQuery Boilerplate was made with love by these guys and a bunch of awesome [contributors](https://github.com/jquery-boilerplate/boilerplate/graphs/contributors).

[![Zeno Rocha](http://gravatar.com/avatar/e190023b66e2b8aa73a842b106920c93?s=70)](http://zenorocha.com) | [![Addy Osmani](http://gravatar.com/avatar/96270e4c3e5e9806cf7245475c00b275?s=70)](http://addyosmani.com) | [![Helder Santana](http://gravatar.com/avatar/63fb620ee7d14fc91030d4349d189b3e?s=70)](http://heldr.com)
--- | --- | --- | --- | --- | --- | ---
[Zeno Rocha](http://zenorocha.com) | [Addy Osmani](http://addyosmani.com) | [Helder Santana](http://heldr.com)

## Contributing

Check [CONTRIBUTING.md](https://github.com/jquery-boilerplate/boilerplate/blob/master/CONTRIBUTING.md) for more information.

## History

Check [Releases](https://github.com/jquery-boilerplate/jquery-boilerplate/releases) for detailed changelog.

## License

[MIT License](http://zenorocha.mit-license.org/) © Zeno Rocha
",,2011-05-17T12:49:29Z,2020-09-30T19:32:35Z,26,21,2527,99,"('zenorocha', 82), ('heldr', 48), ('ctrlmaniac', 23), ('nicolai86', 23), ('Zeno Rocha', 10), ('carlesso', 3), ('kane-thornwyrd', 2), ('nvartolomei', 2), ('Zeno Rocha', 2), ('vodkabears', 2), ('joscha', 2), ('arthurvr', 2), ('sindresorhus', 1), ('PandaWood', 1), ('radiovisual', 1), ('marteinn', 1), ('marcobiedermann', 1), ('linclark', 1), ('leobalter', 1), ('highergroundstudio', 1), ('Jake Hendley', 1), ('brenopolanski', 1), ('Bence Eros', 1), ('audreyfeldroy', 1), ('almirfilho', 1), ('Abdessamad Idrissi', 1)",14,11,
flavienlaurent/NotBoringActionBar,News Stand app makes the ActionBar not boring!,"No boring ActionBar
==================

http://flavienlaurent.com/blog/2013/11/20/making-your-action-bar-not-boring/

An explaination on how to implement the edition screen of the Newsstand app.
- ActionBar effect
- Ken Burns animation

![Example Image][1]

License
-----------

    Copyright 2013 Flavien Laurent

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
  
 [1]: https://raw.github.com/flavienlaurent/NotBoringActionBar/master/graphics/notboringab.gif
",,2013-11-21T12:01:28Z,2022-02-06T15:17:18Z,4,4,1739,100,"('flavienlaurent', 18), ('slidese', 2), ('Kisty', 1), ('carlonzo', 1)",2,2,
kyleduo/SwitchButton,A cute widget of Switch Button for  you to create beautiful and friendly UI.,"
SwitchButton
============

[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-SwitchButton-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/1119)

**To get a quick preview, you can get Demo apk in [Google Play](https://play.google.com/store/apps/details?id=com.kyleduo.switchbutton.demo) or [Directly download](./demo/switchbutton_demo_200.apk).**

This project provides you a convenient way to use and customise a SwitchButton widget in Android.

***


Change Log
---

[All Change Log](./CHANGELOG.md)

**Some attributes are changed in 2.0.0 and you need to update them to the new ones, since the measurement logic has been totally changed. (Default behavior and style does not change.)**

**因为2.0.0测量逻辑的改变，部分属性已经做了修改，请更新到新的属性。（默认行为和样式并没有变化）**

> 1.  Re-clarify the meaning of some params.
> 2.  Update the measurement of SwitchButton and the logic becomes more clear, especially the text part.
> 3.  Support config SwitchButton's size by setting a exact width and height. There are now TWO mainly method to control it's size.
> 4.  When use SwitchButon in a scrollable view, SwitchButton consume scroll gestures only horizontal. This means the when you want to scroll the scrollable view vertically and start your touch on a SwitchButton, it will not stop you now.
> 5.  Bug fix.

>1.  重新明确了参数的含义。
>2.  更新了SwitchButton的测量机制，逻辑更加清晰；尤其是文字部分。
>3.  支持设置确定的宽高，来确定SwitchButton的View大小。现在有两种方式可以控制SwitchButton的大小了。
>4.  可滚动的View中的SwitchButton只会消费横向滚动事件。这意味着你可以从SwitchButton开始按下并纵向滚动可滚动View，SwitchButton现在不会阻止你滚动了。
>5.  Bug 修复。


Using SwitchButton in your application
---

**In Gradle**
​	
Add dependencies in build.gradle of your module

```groovy
dependencies {
    implementation 'com.kyleduo.switchbutton:library:2.1.0'
}
```

> Version 2.1.0 can be pulled from `mavenCentral()`

#### Migrate to 2.0.0 (迁移到2.0.0)

**ENG**

**There is a big diagram below to show how SwitchButton measure it self in 2.0.0. It is strongly recommended that you should check it out.**

1.  **kswBackMeasureRatio** has been removed from SwitchButton attributes since it has an ambiguous meaning. I've add the new **kswThumbRangeRatio** attribute to represent how much multiple the scroll range of thumb than the width of thumb.
2.  **kswTextMarginH** and **kswAutoAdjustTextPosition** have been removed from SwitchButton attributes since I updated the measurement logic of text part. And these two attributes do not represent the back meaning well. **kswTextThumbInset**, **kswTextExtra** and **kswTextAdjust** was introduced to represent ""how much the text go under thumb"", ""how much extra space do you want around the text"" and ""how much to move the text from the center of text area to adjust the text's position"". There are all shown on the diagram.
3.  Setters and getters are also changed due to the change of attributes.

**CHN**

下面有一张图表来解释SwitchButton在2.0.0版本中是如何进行测量的，非常建议你看一看。

1.  **kswBackMeasureRatio** 属性被移除了，因为名称有歧义。新增加的 **kswThumbRangeRatio** 属性表示thumb移动区域和thumb宽度的比值。
2.  **kswTextMarginH** 和 **kswAutoAdjustTextPosition** 属性被移除了，因为我更新了对文字的测量逻辑，而且这两个属性名称表意不明确。我增加了**kswTextThumbInset**, **kswTextExtra** 和 **kswTextAdjust** 这三个新属性来分别表示“文字在thumb下面的距离”，“额外文字空间”和”文字调节距离“。这些都在图表中有所体现。
3.  setter和getter都跟随属性名称的改变而进行了改变。

### Diagram: How SwitchButton Measure

This diagram shows how SwitchButton measure itself and what does those nouns mean. To measure width is much complex than the height, so if you know how to measure width, you know how to measure height. And text measurement and location increase the complexity.

![demo_preview](./images/how_switchbutton_measure.png)

***


Demo
---
I create a new demo apk to show you how to style the cute widget and use it. There's some screenshots of the new demo.

![demo_preview](./images/demo_preview.png)

***


Usage
---

The usage of SwitchButton is just like CheckBox. The basic control APIs of SwitchButton.

* __setChecked(boolean)__
* __toggle()__

Since SwitchButton has addition animation when checked status changed, there are two addition methods for disable animation for single operation.

* __setCheckedImmediately(boolean)__: like setChecked but NO animation.
* __toggleImmediately()__: like toggle but NO animation.

From **version 1.4.1** on, SwitchButton support operation without onCheckedChanged callback. It makes changing state in code more convenient. Using these methods to achieve that feature.


* __setCheckedNoEvent(boolean)__
* __setCheckedImmediatelyNoEvent(boolean)__
* __toggleNoEvent()__
* __toggleImmediatelyNoEvent()__

***


Style
---

In 1.3.0, I updated the usage of __SwitchButton__ library. To make it more Android way to use, I've combined the thumb and back style each to StateListColor/StateListDrawable. So you are free to create styles in different states.

In __xml__ layout file, you can configure the face of switch button using these attrs.

*   __kswThumbDrawable__: drawable for thumb
*   __kswThumbColor__: color for thumb
*   __kswThumbMargin__: margin from thumb to back, can be negative. maybe cover by single direction margins
*   __kswThumbMarginTop__: same to __kswThumbMargin__, just top
*   __kswThumbMarginBottom__: same to __kswThumbMargin__, just bottom
*   __kswThumbMarginLeft__: same to __kswThumbMargin__, just left
*   __kswThumbMarginRight__: same to __kswThumbMargin__, just right
*   __kswThumbWidth__: width of thumb
*   __kswThumbHeight__: height of thumb
*   __kswThumbRadius__: radius of thumb rect, only work with __kswThumbColor__
*   __kswBackRadius__: radius of background rect, only work with __kswBackColor__
*   __kswBackDrawable__: drawable for background
*   __kswBackColor__: color for background
*   __kswFadeBack__: fade background color/drawable when drag or animate between on/off status or not
*   __kswAnimationDuration__: duration of animation between 2 status
*   __kswTintColor__: change SwitchButton's style just by __one__ property, all relevant color will be generate automatically. Do not support `SwitchButtonMD` or other style created by xml resources.
*   __kswTextOn__: text for checked status.
*   __kswTextOff__: text for unchecked status.
*   __kswTextThumbInset (since 2.0.0)__: length of the part of text under the thumb.
*   __kswTextExtra (since 2.0.0)__: extra space needed by background besides the actual text width.
*   __kswTextAdjust (since 2.0.0)__: move the text after position text on the center of text area.
*   **kswThumbRangeRatio (since 2.0.0)**: (thumb move range width / thumb's width). float value. *see measure diagram*
*   ~~__kswBackMeasureRatio__: (background's width / thumb's width). float value.~~ *Removed since 2.0.0*
*   ~~**kswTextMarginH**: horizontal margin of text.~~ *Removed since 2.0.0*
*   ~~__kswAutoAdjustTextPosition__: **(since 1.4.4)** whether auto adjust text position to make them looks centered (NOT really centered) when there are round corners. You should set this to false when you don't need this feature.~~ *Removed since 2.0.0*

You can alse change the configuration of SwitchButton ___in code___. You can find the api from Demo apk. There's a glance.

```java
private String[] opts = new String[]{
			""setThumbColorRes/setThumbColor"",
			""setThumbDrawableRes/setThumbDrawable"",
			""setBackColorRes/setBackColor"",
			""setBackDrawableRes/setBackDrawable"",
			""setTintColor"",
			""setThumbMargin"",
			""setThumbSize"",
			""setThumbRadius (color-mode only)"",
			""setBackRadius (color-mode only)"",
			""setFadeBack"",
			""setBackMeasureRatio"",
			""setAnimationDuration"",
			""setDrawDebugRect"",
			""setText"",
	};
```


Beautiful Apps
---

If you're using SwitchButton in your app, wish you can email me these infomation of your app and I'll create a list here. And that should be an utmost encouragement to me. :-) [kyleduo@gmail.com](mailto:kyleduo@gmail.com)

| App                                      | Name                    | Description                              | Markets                                  | Developer                                |
| ---------------------------------------- | ----------------------- | ---------------------------------------- | ---------------------------------------- | ---------------------------------------- |
| ![headlines.png](https://static.kyleduo.com/headlines.png?imageView/2/w/80/) | Headlines               | Headlines is a news dashboard for your smart TV. | [![market_logo_google_play.png](https://static.kyleduo.com/market_logo_google_play.png?imageView/2/w/80)](https://play.google.com/store/apps/details?id=com.mystraldesign.headlines)[![amazon-underground-app-us-black.png](https://static.kyleduo.com/amazon-underground-app-us-black.png?imageView/2/w/80)](https://www.amazon.com/Headlines-news-your-big-screen/dp/B01G93GRGC/ref=sr_1_1?ie=UTF8&qid=1487843182&sr=8-1&keywords=mystral+design) | [MYSTRAL](http://www.mystraldesign.com/) |
| ![lantouzi.png](https://static.kyleduo.com/lantouzi.png?imageView/2/w/80) | 懒投资                     | 专业安全的投资理财平台                              | [官方网站](https://lantouzi.com/mobile/download) | [懒投资 lantouzi.com](https://lantouzi.com) |
| ![notifications_in_bubble.png](https://static.kyleduo.com/project/switchbutton/apps/logo/notifications_in_bubble.png) | Notifications in bubble | Access all notifications from a floating bubble. | [![market_logo_google_play.png](https://static.kyleduo.com/market_logo_google_play.png?imageView/2/w/80)](https://play.google.com/store/apps/details?id=com.ram.chocolate.nm.premium) | [BestAppzz](https://play.google.com/store/apps/developer?id=BestAppzz) |


License
---

	Licensed under the Apache License, Version 2.0 (the ""License"");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an ""AS IS"" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
","'android', 'switchbutton', 'widget'",2014-09-09T07:20:43Z,2023-12-02T12:28:42Z,9,5,4690,119,"('kyleduo', 133), ('Kyle', 14), ('Kyle', 13), ('kyle', 8), ('kyle', 6), ('lpmfilho', 1), ('pborreli', 1), ('mikeyang01', 1), ('wutongke', 1)",4,4,
ideabosque/SAP-B1-RESTful,,"# SAP B1 RESTful
=====================


## Synopsis
The python flask application is top on the SAP B1 DI API interface to provide the RESTful capability with the following functions.
  1. Show the system information.
  2. Retrieve orders.
  3. Insert orders.
  4. Retrieve contacts of a business partner.
  5. Insert a contact under a business partner.
  6. Retrieve shipments(deliveries).


## Architecture

![SAP B1 RESTful](/images/sap-b1-restful.png?raw=true ""SAP B1 RESTful"")

  * ""SAP B1 RESTful"" (Python Flask application) serves RESTful requests from external applications and returns RESTful responses.
  * ""Flask-SAPB1"" (Flask extension) performs as an adaptor to communicate with SAP B1 by the following two interfaces.
    - SAP B1 DI: insert and update any business objects such as Order, Delivery, AR Invoice and Downpayment Invoice.
    - mssql: read data only directly from MS SQL Server.


## Prerequisites

### 64 bits

  1. Install Python 2.7.12 for Windows 64 bits.

  (https://www.python.org/ftp/python/2.7.13/python-2.7.13.amd64.msi)

  2. Install Python for Windows Extensions (pywin32-220.win-amd64-py2.7.exe)

  (https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/pywin32-220.win-amd64-py2.7.exe/download)

### 32 bits

  1. Install Python 2.7.12 for Windows 32 bits.

  (https://www.python.org/ftp/python/2.7.13/python-2.7.13.msi)

  2. Install Python for Windows Extensions (pywin32-220.win-amd64-py2.7.exe)

  (https://sourceforge.net/projects/pywin32/files/pywin32/Build%20220/pywin32-220.win32-py2.7.exe/download)

## Installation
  1. Download and decompress the package from the following url.

  https://github.com/ideabosque/SAP-B1-RESTful/zipball/0.0.2

  2. Install the required Python packages by pip.

  ```
  pip install -r requirements.txt
  ```


## Configuration and Launch

##### Configuration
  We could configure the service at ""flask/config.py"".
  ```
  LOGGING_LOCATION = 'sapb1adaptor.log'  # The RESTful log file.
  LOGGING_LEVEL = logging.INFO    # The log level.
  LOGGING_FORMAT = '%(asctime)s %(levelname)-8s %(message)s'  # The log format.
  DIAPI = 'SAPbobsCOM90'  # The DI version.
  SERVER = 'SAP91'  # SAP B1 server name.
  LANGUAGE = 'ln_English'
  DBSERVERTYPE = 'dst_MSSQL2014'  # The MS SQL Server version.
  DBUSERNAME = 'sa'  # Database username.
  DBPASSWORD = 'XXXXXXXX'  # Database password.
  COMPANYDB = 'SBODEMOUS'  # Database name.
  B1USERNAME = 'manager'  # B1 username.
  B1PASSWORD = 'XXXXXXXX'  # B1 password.
  ```

##### LANGUAGE Options
  ```
  ln_Arabic                     =32         # from enum BoSuppLangs
  ln_Chinese                    =15         # from enum BoSuppLangs
  ln_Czech_Cz                   =26         # from enum BoSuppLangs
  ln_Danish                     =11         # from enum BoSuppLangs
  ln_Dutch                      =16         # from enum BoSuppLangs
  ln_English                    =3          # from enum BoSuppLangs
  ln_English_Cy                 =21         # from enum BoSuppLangs
  ln_English_Gb                 =8          # from enum BoSuppLangs
  ln_English_Sg                 =6          # from enum BoSuppLangs
  ln_Finnish                    =17         # from enum BoSuppLangs
  ln_French                     =22         # from enum BoSuppLangs
  ln_German                     =9          # from enum BoSuppLangs
  ln_Greek                      =18         # from enum BoSuppLangs
  ln_Hebrew                     =1          # from enum BoSuppLangs
  ln_Hungarian                  =14         # from enum BoSuppLangs
  ln_Italian                    =13         # from enum BoSuppLangs
  ln_Japanese_Jp                =30         # from enum BoSuppLangs
  ln_Korean_Kr                  =28         # from enum BoSuppLangs
  ln_Norwegian                  =12         # from enum BoSuppLangs
  ln_Polish                     =5          # from enum BoSuppLangs
  ln_Portuguese                 =19         # from enum BoSuppLangs
  ln_Portuguese_Br              =29         # from enum BoSuppLangs
  ln_Russian                    =24         # from enum BoSuppLangs
  ln_Serbian                    =10         # from enum BoSuppLangs
  ln_Slovak_Sk                  =27         # from enum BoSuppLangs
  ln_Spanish                    =23         # from enum BoSuppLangs
  ln_Spanish_Ar                 =2          # from enum BoSuppLangs
  ln_Spanish_La                 =25         # from enum BoSuppLangs
  ln_Spanish_Pa                 =7          # from enum BoSuppLangs
  ln_Swedish                    =20         # from enum BoSuppLangs
  ln_TrdtnlChinese_Hk           =35         # from enum BoSuppLangs
  ln_Turkish_Tr                 =31         # from enum BoSuppLangs
  ```

#### Launch the Server

  You could launch the service by the following command at the command prompt.

  ```bash
  python flask/manage.py runserver -h 0.0.0.0 -p 5000
  ```

  * -h 0.0.0.0 : Bind any IP for the service. (If ""-h 127.0.0.1"" is used, the service could be accessible only in local.)
  * -p 5000 : Bind the service with port 5000.  Please check the port of Windows Firewall opened for the port.

  You could also launch the service by cherrypy.  The setting could be configured at flask/server.py.

  ```bash
  python flask/server.py
  ```

## API

#### AuthAPI (JWT)
  ```
  POST /v1/auth
  ```
  Return the JWT token.  You have to request the JWT token first before sending the other API calls.

  Example response body:
  ```bash
  {
    ""access_token"": ""XXXXXXXXXXXXXXXXXXXXXXXXXXXX""
  }
  ```

  Example script by curl:

  *curl -X POST http://192.168.44.151:5000/auth -H 'content-type: application/json' \
  -d '{
    ""username"": ""user1"",
    ""password"": ""abcxyz""
  }'*

#### InfoAPI
  ```
  GET /v1/info
  ```
  Return the information of the system.

  Example response body:
  ```bash
  {
    ""diapi"": ""SAPbobsCOM90"",
    ""company_db"": ""SBODEMOUS"",
    ""company_name"": ""OEC Computers"",
    ""server"": ""SAPB191""
  }
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X GET -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/info*

#### CodeAPI
  ```
  GET /v1/code?type=ExpnsName
  ```
  Retrieve codes by type.

  Query Parameters:
  * type(ExpnsName|TrnspName|PayMethCod|TaxCode): The amount of the records will be contained in the result.

  Example response body:
  ```javascript
  [
    ""Freight"",
    ""Insurance""
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X GET -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/code?type=ExpnsName*

#### OrdersAPI
  ```
  PUT /v1/orders/fetch?num=1
  ```
  Retrieve orders by parameters.

  Query Parameters:
  * num: The amount of the records will be contained in the result.

  Request Parameters:
  * columns(optional): Which columns will be in the response result.  If not specified, all columns will be used.
  * params: The query condition parameters.
    key: The column name.
    - op(optional): The condition operator.
    - value: The condition value.

  Example request body:
  ```javascript
  {
    ""columns"": [""DocNum"", ""CardName"", ""DocDate"", ""Address"", ""Address2""],
    ""params"": {
      ""DocDate"": {
        ""op"": "">="",
        ""value"": ""2016-01-01""
      }
    }
  }
  ```

  Example response body:
  ```javascript
  [
    {
      ""DocDate"": ""2016-06-20 00:00:00"",
      ""Address2"": ""3921 W Collins St\r\r3921 W Collins St FL  33607\rUSA"",
      ""CardName"": ""Werner Richter"",
      ""DocNum"": ""491"",
      ""Address"": ""3921 W Collins St\r\rTampa FL  33607\rUSA""
    }
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X PUT -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/orders/fetch?num=1 -d '{""columns"": [""DocNum"", ""CardName"", ""DocDate"", ""Address"", ""Address2""], ""params"": {""DocDate"": {""op"": "">="",""value"": ""2016-01-01""}}}'*

#### OrdersAPI
  ```
  POST /v1/orders/insert
  ```
  Insert orders into SAP B1.

  Request Parameters for each order:
  * doc_due_date: Order due date.
  * card_code: Customer code.
  * expenses_freightname(optional): Freightname for shipping.
  * expenses_linetotal(optional): Total of the shipping cost.
  * expenses_taxcode(optional): Taxcode for shipping.
  * discount_percent(optional): Discount percentage.
  * transport_name(optional): Shipping method.
  * payment_method(optional): Payment method.
  * fe_order_id: Front end order id.
  * fe_order_id_udf(optional): Front end order id UDF.
  * billto_firstname: Bill to first name.
  * billto_lastname: Bill to last name.
  * billto_email: Bill to email.
  * billto_companyname: Bill to company name.
  * billto_city: Bill to city.
  * billto_country: Bill to country.
  * billto_county: Bill to county.
  * billto_state: Bill to state.
  * billto_address: Bill to address.
  * billto_zipcode: Bill to zipcode.
  * billto_telephone: Bill to telephone.
  * shipto_firstname: Ship to first name.
  * shipto_lastname: Ship to last name.
  * shipto_companyname: Ship to company name.
  * shipto_city: Ship to city.
  * shipto_country: Ship to country.
  * shipto_county: Ship to county.
  * shipto_state: Ship to state.
  * shipto_address: Ship to address.
  * shipto_zipcode: Ship to zipcode.
  * shipto_telephone: Ship to telephone.
  * items: item[] The line item in the order.
    - itemcode: Product sku.
    - quantity: Total quantity of the line item.
    - price: Price of the line item.
    - taxcode: Taxcode of the line item.
    - linetotal: Subtotal of the line item.

  Example request body:
  ```javascript
  [
    {
      ""doc_due_date"": ""2016-12-12"",
      ""card_code"": ""C20000"",
      ""expenses_freightname"": ""Freight"",
      ""expenses_linetotal"": ""2"",
      ""expenses_taxcode"": ""Exempt"",
      ""transport_name"": ""Fedex ON"",
      ""payment_method"": ""Incoming BT 02"",
      ""fe_order_id"": ""00000002"",
      ""billto_firstname"": ""John"",
      ""billto_lastname"": ""Smith"",
      ""billto_email"": ""john.smith@xyz.net"",
      ""billto_companyname"": """",
      ""billto_city"": ""Los Angeles"",
      ""billto_country"": ""US"",
      ""billto_county"": """",
      ""billto_state"": ""CA"",
      ""billto_address"": ""3650 McClintock Avenue"",
      ""billto_zipcode"": ""90089"",
      ""billto_telephone"": ""(213) 740-8674"",
      ""shipto_firstname"": ""John"",
      ""shipto_lastname"": ""Smith"",
      ""shipto_companyname"": """",
      ""shipto_city"": ""Los Angeles"",
      ""shipto_country"": ""US"",
      ""shipto_county"": """",
      ""shipto_state"": ""CA"",
      ""shipto_address"": ""3650 McClintock Avenue"",
      ""shipto_zipcode"": ""90089"",
      ""shipto_telephone"": ""(213) 740-8674"",
      ""items"": [
        {
          ""itemcode"": ""I00001"",
          ""quantity"": ""10"",
          ""price"": ""12"",
          ""taxcode"": ""CA"",
          ""linetotal"": ""120""
        }
      ]
    },
  ]
  ```

  Example response body:
  ```javascript
  [
    {
      ""doc_due_date"": ""2016-12-12"",
      ""shipto_telephone"": ""(213) 740-8674"",
      ""payment_method"": ""Incoming BT 02"",
      ""shipto_address"": ""3650 McClintock Avenue"",
      ""fe_order_id"": ""00000002"",
      ""shipto_city"": ""Los Angeles"",
      ""transport_name"": ""Fedex ON"",
      ""billto_companyname"": """",
      ""shipto_state"": ""CA"",
      ""shipto_firstname"": ""John"",
      ""tx_status"": ""S"",
      ""shipto_zipcode"": ""90089"",
      ""bo_order_id"": ""536"",
      ""expenses_taxcode"": ""Exempt"",
      ""shipto_lastname"": ""Smith"",
      ""expenses_linetotal"": ""2"",
      ""billto_email"": ""john.smith@xyz.net"",
      ""card_code"": ""C20000"",
      ""expenses_freightname"": ""Freight"",
      ""billto_country"": ""US"",
      ""billto_state"": ""CA"",
      ""billto_lastname"": ""Smith"",
      ""billto_zipcode"": ""90089"",
      ""billto_address"": ""3650 McClintock Avenue"",
      ""billto_county"": """",
      ""items"": [
        {
          ""linetotal"": ""120"",
          ""itemcode"": ""I00001"",
          ""taxcode"": ""CA"",
          ""price"": ""12"",
          ""quantity"": ""10""
        }
      ],
      ""shipto_county"": """",
      ""shipto_companyname"": """",
      ""shipto_country"": ""US"",
      ""billto_city"": ""Los Angeles"",
      ""billto_telephone"": ""(213) 740-8674"",
      ""billto_firstname"": ""John""
    }
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X POST -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/orders/insert -d '[{""doc_due_date"": ""2016-12-12"", ""card_code"": ""C20000"", ""expenses_freightname"": ""Freight"", ""expenses_linetotal"": ""2"", ""expenses_taxcode"": ""Exempt"", ""transport_name"": ""Fedex ON"", ""payment_method"": ""Incoming BT 02"", ""fe_order_id"": ""00000002"", ""billto_firstname"": ""John"", ""billto_lastname"": ""Smith"", ""billto_email"": ""john.smith@xyz.net"", ""billto_companyname"": """", ""billto_city"": ""Los Angeles"", ""billto_country"": ""US"", ""billto_county"": """", ""billto_state"": ""CA"", ""billto_address"": ""3650 McClintock Avenue"", ""billto_zipcode"": ""90089"", ""billto_telephone"": ""(213) 740-8674"", ""shipto_firstname"": ""John"", ""shipto_lastname"": ""Smith"", ""shipto_companyname"": """", ""shipto_city"": ""Los Angeles"", ""shipto_country"": ""US"", ""shipto_county"": """", ""shipto_state"": ""CA"", ""shipto_address"": ""3650 McClintock Avenue"", ""shipto_zipcode"": ""90089"", ""shipto_telephone"": ""(213) 740-8674"", ""items"": [{""itemcode"": ""I00001"", ""quantity"": ""10"", ""price"": ""12"", ""taxcode"": ""CA"", ""linetotal"": ""120""}]}]'*

#### ContactsAPI
  ```
  PUT /v1/contacts/fetch?num=1
  ```
  Retrieve contacts under a business partner (CardCode) with conditions.

  Query Parameters:
  * num: The amount of the records will be contained in the result.

  Request Parameters:
  * columns(optional): Which columns will be in the response result.  If not specified, all columns will be used.
  * card_code: The CardCode of a business partner.
  * contact(required): contact{} The query condition parameters.
    - FirstName: First name.
    - LastName: Last name.
    - E_MailL: Email.

  Example request body:
  ```javascript
  {
    ""columns"": [""cntctcode"", ""Name""],
    ""card_code"": ""C20000"",
    ""contact"": {
      ""FirstName"": ""John"",
      ""LastName"": ""Smith"",
      ""E_MailL"": ""john.smith@xyz.net""
    }
  }
  ```

  Example response body:
  ```javascript
  [
    {
      ""cntctcode"": ""60"",
      ""Name"": ""John Smith 1476166090.01""
    }
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X PUT -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/contacts/fetch?num=1 -d '{""columns"": [""cntctcode"", ""Name""], ""card_code"": ""C20000"", ""contact"": {""FirstName"": ""John"", ""LastName"": ""Smith"", ""E_MailL"": ""john.smith@xyz.net""}}'*

#### ContactsAPI
  ```
  POST /v1/contacts/insert
  ```
  Insert contacts under a business partner (CardCode) with conditions.

  Request Parameters for each contact:
  * card_code(required): The CardCode of a business partner.
  * contacts(required)[]:
    - FirstName: First name.
    - LastName: Last name.
    - Tel1: Telephone.
    - E_MailL: Email.
    - Address: Address.

  Example request body:
  ```javascript
  [
    {
      ""card_code"": ""C20000"",
      ""contacts"": [
        {
          ""FirstName"": ""Joe"",
          ""LastName"": ""Brown"",
          ""Tel1"": ""(213) 345-6789"",
          ""E_MailL"": ""joe.brown@xzy.net"",
          ""Address"": ""1st st. Los Angles, CA 90089""
        }
      ]
    }
  ]
  ```

  Example response body:
  ```javascript
  [
    {
      ""Tel1"": ""(213) 345-6789"",
      ""contact_code"": ""63"",
      ""FirstName"": ""Joe1"",
      ""LastName"": ""Brown"",
      ""E_MailL"": ""joe.brown@xzy.net"",
      ""Address"": ""1st st. Los Angles, CA 90089""
    }
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X POST -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/contacts/insert -d '{""card_code"": ""C20000"", ""contacts"": [{""FirstName"": ""Joe1"", ""LastName"": ""Brown"", ""Tel1"": ""(213) 345-6789"", ""E_MailL"": ""joe.brown@xzy.net"", ""Address"": ""1st st. Los Angles, CA 90089""}]}'*

#### OrderCancelAPI
  ```
  POST /v1/orders/cancel
  ```
  Cancel orders by frontend order numbers.

  Request Parameters:
  * fe_order_id_udf(optional): Front end order id UDF.
  * fe_order_id: Front end order id.

  Example request body:
  ```javascript
  [
    {
      ""fe_order_id"": ""000000011""
    }
  ]
  ```

  Example response body:
  ```javascript
  [
    {
      ""tx_status"": ""X"",
      ""fe_order_id"": ""000000011"",
      ""bo_order_id"": ""540""
    }
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X POST -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/orders/cancel -d '[{""fe_order_id"": ""000000011""}]'*

#### ShipmentsAPI
  ```
  PUT /v1/shipments/fetch?num=1
  ```

  Query Parameters:
  * num: The amount of the records will be contained in the result.

  Request Parameters:
  * columns(optional): Which columns will be in the response result.  If not specified, all columns will be used.
  * params: The query condition parameters.
    key: The column name.
    - op(optional): The condition operator.
    - value: The condition value.
  * itemColumns(optional):

  Example request body:
  ```javascript
  {
    ""columns"": [ ""DocDueDate"", ""CardName""],
    ""params"": {
      ""DocDate"": {
        ""op"": "">="",
        ""value"": ""2015-01-01""
      }
    },
    ""itemcolumns"": [""BaseDocNum"", ""Price"", ""ShipDate""]
  }
  ```

  Example response body:
  ```javascript
  [
    {
      ""items"": [
        {
          ""ShipDate"": ""2015-06-19 00:00:00"",
          ""BaseDocNum"": ""452"",
          ""Price"": ""140.000000""
        },
        {
          ""ShipDate"": ""2015-06-19 00:00:00"",
          ""BaseDocNum"": ""452"",
          ""Price"": ""0.000000""
        }
      ],
      ""DocDueDate"": ""2015-07-20 00:00:00"",
      ""DocEntry"": ""364"",
      ""CardName"": ""Maxi-Teq""
    }
  ]
  ```

  Example script by curl:

  *curl -H 'authorization: JWT XXXXXXXXXXXXXXXXXXXXXXXXXXXX' -X PUT -H 'Content-Type: application/json' http://192.168.44.151:5000/v1/shipments/fetch?num=1 -d '{""columns"": [ ""DocDueDate"", ""CardName""], ""params"": {""DocDate"": {""op"": "">="", ""value"": ""2015-01-01""}}, ""itemcolumns"": [""BaseDocNum"", ""Price"", ""ShipDate""]}'*

## Related Articles

  * [How to use ""SAP B1 RESTful"" to integrate with eCommerce Platforms](https://ideabosque.github.io/sapb1/2016/10/28/SAP-B1-RESTful-integrate-with-eCommerce/)
  * [DataWald Overview (Magento 2  SAP B1)](https://ideabosque.github.io/sapb1/magento2/2016/11/08/DataWald-Overview-Magento-2-SAP-B1/)
  * [Orders Sync from Magento 2 to SAP B1 by DataWald](https://ideabosque.github.io/sapb1/magento2/2016/11/12/Orders-Sync-from-Magento-2-to-SAP-B1-by-DataWald/)


Feel free to [create a GitHub issue](https://github.com/ideabosque/SAP-B1-RESTful/issues/new) or [send us an email](mailto:ideabosque@gmail.com) for support regarding this application.
",,2016-10-06T04:02:15Z,2019-09-23T16:38:41Z,3,3,53,18,"('ideabosque', 23), ('bibo72', 1), ('cblegare', 1)",2,2,
ReFirmLabs/binwalk,Firmware Analysis Tool,"# Binwalk

[![Build Status](https://travis-ci.org/ReFirmLabs/binwalk.svg?branch=master)](https://travis-ci.org/ReFirmLabs/binwalk)
[![Maintenance](https://img.shields.io/badge/Maintained%3F-yes-green.svg)](https://GitHub.com/ReFirmLabs/binwalk/graphs/commit-activity)
[![GitHub license](https://img.shields.io/github/license/ReFirmLabs/binwalk.svg)](https://github.com/ReFirmLabs/binwalk/blob/master/LICENSE)
[![GitHub stars](https://img.shields.io/github/stars/badges/shields.svg?style=social&label=Stars)](https://github.com/ReFirmLabs/binwalk/stargazers)

Binwalk is a fast, easy to use tool for analyzing, reverse engineering, and extracting firmware images.


### *** Extraction Security Notice ***

Prior to Binwalk v2.3.3, extracted archives could create symlinks which point anywhere on the file system, potentially resulting in a directory traversal attack if subsequent extraction utilties blindly follow these symlinks. More generically, Binwalk makes use of many third-party extraction utilties which may have unpatched security issues; Binwalk v2.3.3 and later allows external extraction tools to be run as an unprivileged user using the `run-as` command line option (this requires Binwalk itself to be run with root privileges). Additionally, Binwalk v2.3.3 and later will refuse to perform extraction as root unless `--run-as=root` is specified.


### *** Python 2.7 Deprecation Notice ***

Even though many major Linux distros are still shipping Python 2.7 as the default interpreter in their currently stable release, we are making the difficult decision to move binwalk support exclusively to Python 3. This is likely to make many upset and others rejoice. If you need to install binwalk into a Python 2.7 environment we will be creating a tag `python27` that will be a snapshot of `master` before all of these major changes are made. Thank you for being patient with us through this transition process.


### Installation and Usage

* [Installation](./INSTALL.md)
* [API](./API.md)
* [Supported Platforms](https://github.com/ReFirmLabs/binwalk/wiki/Supported-Platforms)
* [Getting Started](https://github.com/ReFirmLabs/binwalk/wiki/Quick-Start-Guide)
* [Binwalk Command Line Usage](https://github.com/ReFirmLabs/binwalk/wiki/Usage)
* [Binwalk IDA Plugin Usage](https://github.com/ReFirmLabs/binwalk/wiki/Creating-Custom-Plugins)

More information on [Wiki](https://github.com/ReFirmLabs/binwalk/wiki)

# Binwalk Professional Edition

After years of developing and supporting binwalk as an open source project we have finally sold out to the man and released a cloud-based firmware extraction engine called *Binwalk Enterprise*. After all someone needs to pay devttys0 so he can buy more milling equipment and feed his children (in that order). Please consider subscribing and reap the benefits of getting actual customer support for all your firmware extraction and analysis needs. Please visit https://www.refirmlabs.com/binwalk-enterprise/ for more information. 
",,2013-11-15T20:45:40Z,2024-04-30T10:01:01Z,82,72,10301,368,"('devttys0', 1026), ('eacmen', 25), ('sundhaug92', 21), ('ddcc', 16), ('M1cha', 9), ('Flameeyes', 8), ('TobleMiner', 6), ('sviehb', 6), ('Lekensteyn', 5), ('Joseph Pantoga', 5), ('LocutusOfBorg', 5), ('SambasOnFire', 4), ('sorja', 4), ('CoffeeExpress', 4), ('Manouchehri', 4), ('thorbjoern', 3), ('santosh653', 3), ('nezza', 3), ('m0sia', 3), ('bmaia', 3), ('thesourcerer8', 2), ('owl129', 2), ('liske', 2), ('jameshilliard', 2), ('STKFLT', 2), ('0xItx', 2), ('Icenowy', 2), ('The-Compiler', 2), ('BenBE', 2), ('antoniovazquezblanco', 2), ('voltagex', 2), ('sylvainpelissier', 1), ('przemech', 1), ('bkabrda', 1), ('UniQP', 1), ('swt2c', 1), ('raulsiles', 1), ('pfuender', 1), ('qkaiser', 1), ('pfosphor', 1), ('spsandiford', 1), ('rev1si0n', 1), ('moshekaplan', 1), ('akx', 1), ('anthok', 1), ('anthraxx', 1), ('balr0g', 1), ('bannsec', 1), ('eve', 1), ('lager1', 1), ('maxried', 1), ('mongo', 1), ('philsmd', 1), ('root', 1), ('sessyargc', 1), ('ssem', 1), ('bengardiner-at-irdeto', 1), ('asutoshpalai', 1), ('BenGardiner', 1), ('biot', 1), ('bmourit', 1), ('cclauss', 1), ('firefart', 1), ('Claud Xiao', 1), ('cristianst85', 1), ('yurichev', 1), ('E3V3A', 1), ('Eric Owle', 1), ('evanpjensen', 1), ('ffontaine', 1), ('FiloSottile', 1), ('jmichelp', 1), ('John Stauffacher', 1), ('jstucke', 1), ('KOLANICH', 1), ('Kriskras99', 1), ('Abstract-9', 1), ('LRGH', 1), ('llamasoft', 1), ('nmatt0', 1), ('ulidtko', 1), ('revmischa', 1)",51,43,
verekia/initializr-template,Initializr's generated page,"License: Public Domain
",,2011-12-09T00:32:32Z,2021-11-22T04:03:13Z,1,1,1116,110,"('verekia', 15)",0,0,
Biktorgj/Android_b2_Kernel,Exynos 3.4.39 Android Kernel for Samsung Gear 2 / Neo SM-R380 381,"	Linux kernel release 3.x 

These are the release notes for Linux version 3.  Read them carefully,
as they tell you what this is all about, explain how to install the
kernel, and what to do if something goes wrong. 

WHAT IS LINUX?

  Linux is a clone of the operating system Unix, written from scratch by
  Linus Torvalds with assistance from a loosely-knit team of hackers across
  the Net. It aims towards POSIX and Single UNIX Specification compliance.

  It has all the features you would expect in a modern fully-fledged Unix,
  including true multitasking, virtual memory, shared libraries, demand
  loading, shared copy-on-write executables, proper memory management,
  and multistack networking including IPv4 and IPv6.

  It is distributed under the GNU General Public License - see the
  accompanying COPYING file for more details. 

ON WHAT HARDWARE DOES IT RUN?

  Although originally developed first for 32-bit x86-based PCs (386 or higher),
  today Linux also runs on (at least) the Compaq Alpha AXP, Sun SPARC and
  UltraSPARC, Motorola 68000, PowerPC, PowerPC64, ARM, Hitachi SuperH, Cell,
  IBM S/390, MIPS, HP PA-RISC, Intel IA-64, DEC VAX, AMD x86-64, AXIS CRIS,
  Xtensa, Tilera TILE, AVR32 and Renesas M32R architectures.

  Linux is easily portable to most general-purpose 32- or 64-bit architectures
  as long as they have a paged memory management unit (PMMU) and a port of the
  GNU C compiler (gcc) (part of The GNU Compiler Collection, GCC). Linux has
  also been ported to a number of architectures without a PMMU, although
  functionality is then obviously somewhat limited.
  Linux has also been ported to itself. You can now run the kernel as a
  userspace application - this is called UserMode Linux (UML).

DOCUMENTATION:

 - There is a lot of documentation available both in electronic form on
   the Internet and in books, both Linux-specific and pertaining to
   general UNIX questions.  I'd recommend looking into the documentation
   subdirectories on any Linux FTP site for the LDP (Linux Documentation
   Project) books.  This README is not meant to be documentation on the
   system: there are much better sources available.

 - There are various README files in the Documentation/ subdirectory:
   these typically contain kernel-specific installation notes for some 
   drivers for example. See Documentation/00-INDEX for a list of what
   is contained in each file.  Please read the Changes file, as it
   contains information about the problems, which may result by upgrading
   your kernel.

 - The Documentation/DocBook/ subdirectory contains several guides for
   kernel developers and users.  These guides can be rendered in a
   number of formats:  PostScript (.ps), PDF, HTML, & man-pages, among others.
   After installation, ""make psdocs"", ""make pdfdocs"", ""make htmldocs"",
   or ""make mandocs"" will render the documentation in the requested format.

INSTALLING the kernel source:

 - If you install the full sources, put the kernel tarball in a
   directory where you have permissions (eg. your home directory) and
   unpack it:

		gzip -cd linux-3.X.tar.gz | tar xvf -

   or
		bzip2 -dc linux-3.X.tar.bz2 | tar xvf -


   Replace ""XX"" with the version number of the latest kernel.

   Do NOT use the /usr/src/linux area! This area has a (usually
   incomplete) set of kernel headers that are used by the library header
   files.  They should match the library, and not get messed up by
   whatever the kernel-du-jour happens to be.

 - You can also upgrade between 3.x releases by patching.  Patches are
   distributed in the traditional gzip and the newer bzip2 format.  To
   install by patching, get all the newer patch files, enter the
   top level directory of the kernel source (linux-3.x) and execute:

		gzip -cd ../patch-3.x.gz | patch -p1

   or
		bzip2 -dc ../patch-3.x.bz2 | patch -p1

   (repeat xx for all versions bigger than the version of your current
   source tree, _in_order_) and you should be ok.  You may want to remove
   the backup files (xxx~ or xxx.orig), and make sure that there are no
   failed patches (xxx# or xxx.rej). If there are, either you or me has
   made a mistake.

   Unlike patches for the 3.x kernels, patches for the 3.x.y kernels
   (also known as the -stable kernels) are not incremental but instead apply
   directly to the base 3.x kernel.  Please read
   Documentation/applying-patches.txt for more information.

   Alternatively, the script patch-kernel can be used to automate this
   process.  It determines the current kernel version and applies any
   patches found.

		linux/scripts/patch-kernel linux

   The first argument in the command above is the location of the
   kernel source.  Patches are applied from the current directory, but
   an alternative directory can be specified as the second argument.

 - If you are upgrading between releases using the stable series patches
   (for example, patch-3.x.y), note that these ""dot-releases"" are
   not incremental and must be applied to the 3.x base tree. For
   example, if your base kernel is 3.0 and you want to apply the
   3.0.3 patch, you do not and indeed must not first apply the
   3.0.1 and 3.0.2 patches. Similarly, if you are running kernel
   version 3.0.2 and want to jump to 3.0.3, you must first
   reverse the 3.0.2 patch (that is, patch -R) _before_ applying
   the 3.0.3 patch.
   You can read more on this in Documentation/applying-patches.txt

 - Make sure you have no stale .o files and dependencies lying around:

		cd linux
		make mrproper

   You should now have the sources correctly installed.

SOFTWARE REQUIREMENTS

   Compiling and running the 3.x kernels requires up-to-date
   versions of various software packages.  Consult
   Documentation/Changes for the minimum version numbers required
   and how to get updates for these packages.  Beware that using
   excessively old versions of these packages can cause indirect
   errors that are very difficult to track down, so don't assume that
   you can just update packages when obvious problems arise during
   build or operation.

BUILD directory for the kernel:

   When compiling the kernel all output files will per default be
   stored together with the kernel source code.
   Using the option ""make O=output/dir"" allow you to specify an alternate
   place for the output files (including .config).
   Example:
     kernel source code:	/usr/src/linux-3.N
     build directory:		/home/name/build/kernel

   To configure and build the kernel use:
   cd /usr/src/linux-3.N
   make O=/home/name/build/kernel menuconfig
   make O=/home/name/build/kernel
   sudo make O=/home/name/build/kernel modules_install install

   Please note: If the 'O=output/dir' option is used then it must be
   used for all invocations of make.

CONFIGURING the kernel:

   Do not skip this step even if you are only upgrading one minor
   version.  New configuration options are added in each release, and
   odd problems will turn up if the configuration files are not set up
   as expected.  If you want to carry your existing configuration to a
   new version with minimal work, use ""make oldconfig"", which will
   only ask you for the answers to new questions.

 - Alternate configuration commands are:
	""make config""      Plain text interface.
	""make menuconfig""  Text based color menus, radiolists & dialogs.
	""make nconfig""     Enhanced text based color menus.
	""make xconfig""     X windows (Qt) based configuration tool.
	""make gconfig""     X windows (Gtk) based configuration tool.
	""make oldconfig""   Default all questions based on the contents of
			   your existing ./.config file and asking about
			   new config symbols.
	""make silentoldconfig""
			   Like above, but avoids cluttering the screen
			   with questions already answered.
			   Additionally updates the dependencies.
	""make defconfig""   Create a ./.config file by using the default
			   symbol values from either arch/$ARCH/defconfig
			   or arch/$ARCH/configs/${PLATFORM}_defconfig,
			   depending on the architecture.
	""make ${PLATFORM}_defconfig""
			  Create a ./.config file by using the default
			  symbol values from
			  arch/$ARCH/configs/${PLATFORM}_defconfig.
			  Use ""make help"" to get a list of all available
			  platforms of your architecture.
	""make allyesconfig""
			   Create a ./.config file by setting symbol
			   values to 'y' as much as possible.
	""make allmodconfig""
			   Create a ./.config file by setting symbol
			   values to 'm' as much as possible.
	""make allnoconfig"" Create a ./.config file by setting symbol
			   values to 'n' as much as possible.
	""make randconfig""  Create a ./.config file by setting symbol
			   values to random values.

   You can find more information on using the Linux kernel config tools
   in Documentation/kbuild/kconfig.txt.

	NOTES on ""make config"":
	- having unnecessary drivers will make the kernel bigger, and can
	  under some circumstances lead to problems: probing for a
	  nonexistent controller card may confuse your other controllers
	- compiling the kernel with ""Processor type"" set higher than 386
	  will result in a kernel that does NOT work on a 386.  The
	  kernel will detect this on bootup, and give up.
	- A kernel with math-emulation compiled in will still use the
	  coprocessor if one is present: the math emulation will just
	  never get used in that case.  The kernel will be slightly larger,
	  but will work on different machines regardless of whether they
	  have a math coprocessor or not. 
	- the ""kernel hacking"" configuration details usually result in a
	  bigger or slower kernel (or both), and can even make the kernel
	  less stable by configuring some routines to actively try to
	  break bad code to find kernel problems (kmalloc()).  Thus you
	  should probably answer 'n' to the questions for
          ""development"", ""experimental"", or ""debugging"" features.

COMPILING the kernel:

 - Make sure you have at least gcc 3.2 available.
   For more information, refer to Documentation/Changes.

   Please note that you can still run a.out user programs with this kernel.

 - Do a ""make"" to create a compressed kernel image. It is also
   possible to do ""make install"" if you have lilo installed to suit the
   kernel makefiles, but you may want to check your particular lilo setup first.

   To do the actual install you have to be root, but none of the normal
   build should require that. Don't take the name of root in vain.

 - If you configured any of the parts of the kernel as `modules', you
   will also have to do ""make modules_install"".

 - Verbose kernel compile/build output:

   Normally the kernel build system runs in a fairly quiet mode (but not
   totally silent).  However, sometimes you or other kernel developers need
   to see compile, link, or other commands exactly as they are executed.
   For this, use ""verbose"" build mode.  This is done by inserting
   ""V=1"" in the ""make"" command.  E.g.:

	make V=1 all

   To have the build system also tell the reason for the rebuild of each
   target, use ""V=2"".  The default is ""V=0"".

 - Keep a backup kernel handy in case something goes wrong.  This is 
   especially true for the development releases, since each new release
   contains new code which has not been debugged.  Make sure you keep a
   backup of the modules corresponding to that kernel, as well.  If you
   are installing a new kernel with the same version number as your
   working kernel, make a backup of your modules directory before you
   do a ""make modules_install"".
   Alternatively, before compiling, use the kernel config option
   ""LOCALVERSION"" to append a unique suffix to the regular kernel version.
   LOCALVERSION can be set in the ""General Setup"" menu.

 - In order to boot your new kernel, you'll need to copy the kernel
   image (e.g. .../linux/arch/i386/boot/bzImage after compilation)
   to the place where your regular bootable kernel is found. 

 - Booting a kernel directly from a floppy without the assistance of a
   bootloader such as LILO, is no longer supported.

   If you boot Linux from the hard drive, chances are you use LILO which
   uses the kernel image as specified in the file /etc/lilo.conf.  The
   kernel image file is usually /vmlinuz, /boot/vmlinuz, /bzImage or
   /boot/bzImage.  To use the new kernel, save a copy of the old image
   and copy the new image over the old one.  Then, you MUST RERUN LILO
   to update the loading map!! If you don't, you won't be able to boot
   the new kernel image.

   Reinstalling LILO is usually a matter of running /sbin/lilo. 
   You may wish to edit /etc/lilo.conf to specify an entry for your
   old kernel image (say, /vmlinux.old) in case the new one does not
   work.  See the LILO docs for more information. 

   After reinstalling LILO, you should be all set.  Shutdown the system,
   reboot, and enjoy!

   If you ever need to change the default root device, video mode,
   ramdisk size, etc.  in the kernel image, use the 'rdev' program (or
   alternatively the LILO boot options when appropriate).  No need to
   recompile the kernel to change these parameters. 

 - Reboot with the new kernel and enjoy. 

IF SOMETHING GOES WRONG:

 - If you have problems that seem to be due to kernel bugs, please check
   the file MAINTAINERS to see if there is a particular person associated
   with the part of the kernel that you are having trouble with. If there
   isn't anyone listed there, then the second best thing is to mail
   them to me (torvalds@linux-foundation.org), and possibly to any other
   relevant mailing-list or to the newsgroup.

 - In all bug-reports, *please* tell what kernel you are talking about,
   how to duplicate the problem, and what your setup is (use your common
   sense).  If the problem is new, tell me so, and if the problem is
   old, please try to tell me when you first noticed it.

 - If the bug results in a message like

	unable to handle kernel paging request at address C0000010
	Oops: 0002
	EIP:   0010:XXXXXXXX
	eax: xxxxxxxx   ebx: xxxxxxxx   ecx: xxxxxxxx   edx: xxxxxxxx
	esi: xxxxxxxx   edi: xxxxxxxx   ebp: xxxxxxxx
	ds: xxxx  es: xxxx  fs: xxxx  gs: xxxx
	Pid: xx, process nr: xx
	xx xx xx xx xx xx xx xx xx xx

   or similar kernel debugging information on your screen or in your
   system log, please duplicate it *exactly*.  The dump may look
   incomprehensible to you, but it does contain information that may
   help debugging the problem.  The text above the dump is also
   important: it tells something about why the kernel dumped code (in
   the above example it's due to a bad kernel pointer). More information
   on making sense of the dump is in Documentation/oops-tracing.txt

 - If you compiled the kernel with CONFIG_KALLSYMS you can send the dump
   as is, otherwise you will have to use the ""ksymoops"" program to make
   sense of the dump (but compiling with CONFIG_KALLSYMS is usually preferred).
   This utility can be downloaded from
   ftp://ftp..kernel.org/pub/linux/utils/kernel/ksymoops/ .
   Alternately you can do the dump lookup by hand:

 - In debugging dumps like the above, it helps enormously if you can
   look up what the EIP value means.  The hex value as such doesn't help
   me or anybody else very much: it will depend on your particular
   kernel setup.  What you should do is take the hex value from the EIP
   line (ignore the ""0010:""), and look it up in the kernel namelist to
   see which kernel function contains the offending address.

   To find out the kernel function name, you'll need to find the system
   binary associated with the kernel that exhibited the symptom.  This is
   the file 'linux/vmlinux'.  To extract the namelist and match it against
   the EIP from the kernel crash, do:

		nm vmlinux | sort | less

   This will give you a list of kernel addresses sorted in ascending
   order, from which it is simple to find the function that contains the
   offending address.  Note that the address given by the kernel
   debugging messages will not necessarily match exactly with the
   function addresses (in fact, that is very unlikely), so you can't
   just 'grep' the list: the list will, however, give you the starting
   point of each kernel function, so by looking for the function that
   has a starting address lower than the one you are searching for but
   is followed by a function with a higher address you will find the one
   you want.  In fact, it may be a good idea to include a bit of
   ""context"" in your problem report, giving a few lines around the
   interesting one. 

   If you for some reason cannot do the above (you have a pre-compiled
   kernel image or similar), telling me as much about your setup as
   possible will help.  Please read the REPORTING-BUGS document for details.

 - Alternately, you can use gdb on a running kernel. (read-only; i.e. you
   cannot change values or set break points.) To do this, first compile the
   kernel with -g; edit arch/i386/Makefile appropriately, then do a ""make
   clean"". You'll also need to enable CONFIG_PROC_FS (via ""make config"").

   After you've rebooted with the new kernel, do ""gdb vmlinux /proc/kcore"".
   You can now use all the usual gdb commands. The command to look up the
   point where your system crashed is ""l *0xXXXXXXXX"". (Replace the XXXes
   with the EIP value.)

   gdb'ing a non-running kernel currently fails because gdb (wrongly)
   disregards the starting offset for which the kernel is compiled.

",,2015-04-09T04:17:10Z,2016-03-08T17:02:13Z,1,1,19,8,"('Biktorgj', 20)",0,0,
BLCM/BLCMods,This is a repository for Community Mods made for the Borderlands series,"# BLCMods
[![Support Discord](https://img.shields.io/static/v1?label=&message=Support%20Discord&logo=discord&color=424)](https://discord.gg/bXeqV8Ef9R)

This is a repository for Community Mods made for the Borderlands series (specifically BL2 and BLTPS).

These mods should use the `set` command in the Unreal console to change in-game variables.
If your mod has specific considerations you should make it clear how to install.

Check out the [Wiki](https://github.com/BL2CP/BLCMods/wiki). If you want to find specific mods by category, check [repository with sorted mods](https://github.com/BLCM/ModCabinet/wiki).

As of Aug, 8, 2018, the ""issues"" tab has been disabled due to repetitive questions, if you have any problems, please see [The FaQ for patching](https://github.com/BLCM/BLCMods/wiki/Patching-FaQ) and/or [The FaQ for super randomizer](https://github.com/BLCM/BLCMods/wiki/Randomizer-FaQ), if the answer is not in those articles, please ask in the [community Discords](http://borderlandsmodding.com/community/).

***

## Requirements

These mods can only be installed on PC and will **never** be ported to consoles due to technical and legal limitations.

All **non-headhunter** DLC is required for the patch and most mods. This includes both UVHMpacks and digistruct peak.

Support will most likely **NOT** be given for errors that the UCP cause due to missing DLC.

Individual mod support for errors is up to the author of the mod and is a case by case basis.

#### **DO NOT EXPECT TO BE *ENTITLED* TO HELP**, each member of BLCM and the discord is an individual first then a modder second, is doing this for free, and have (potentially busy) lives to live.

That being said most members of BLCM are more than willing to help if you remember this.

***

## Contribution

If you wish to contribute a mod:

[please see the tutorial here](https://github.com/BLCM/BLCMods/wiki/Contribution)

If you are part of [BLCM](https://github.com/BLCM) you do not need to fork or pull request, simply drag and drop the file/folder to your directory

#### If you are an author or user and suspect that someone(s) contribution may be stolen, uploaded without approval, is against your personal policy for the distribution, modification of, derivative, and/or usage of their mod as a base to build upon, please contract an admin and/or the uploader to find a compromise. Do please however remember that there are situations where a mod is so simple enough that attempts to recreate it and/or its effects on gameplay simply is not possible without the equivalent of ( what would seem to be) copy-pasting it, under such times it will be allowed.

***

## ModPack Policy

If you wish to contribute a modpack (or a compilation of mods):
- it is ***highly recommended*** to provide a screenshot or other proof of agreement from ***EACH*** mod author of a mod you include in your modpack, regardless of attaining approval from them, or a screenshot of their policy showing proof that it complies with it, and will help your modpack be avalible as soon as possible.

- preferably using an image gallery of screenshots using an image hosting website of your choice, such as https://imgur.com/

- modpacks are submitted the same way as regular contributions, so [please see the tutorial here](https://github.com/BLCM/BLCMods/wiki/Contribution).

####  If a modpack includes a mod(s) from an author ( or collaborative group of authors ) that did not approve of it beforehand, or is against their personal policy for the distribution, modification of, derivative, and/or inclusion of their mod(s) in modpacks or groups, without contacting the author for permission, it will be rejected as a pull request, or if previosly approved and found out at a later date it may or will be deleted with or without warning at the discression of a BLCM admin and /or the author themself if they have read/write access to BLCM.

- UCP is an exception for the above

***

## Installation

- To download files click the green `Clone or Download` button in the top right if you want to download a mirror of the entire repository at the current point in time.

- To downlaod an individual file, click the `raw` button in the top right of the bar that has `raw | blame | history`. Once the web page loads, `Rclick` and `press save page as`.

- Installing the files follows methods discussed on the [Wiki](https://github.com/BLCM/BLCMods/wiki/Tutorial%3A-Enabling-Console)

#### The usage of ""master files"" has become strongly discouraged as Borderlands 2/TPS modding has become more complex. The use of master files will often end up breaking parts or all of the mods you're trying to use. Instead, always import mods into BLCMM, and only execute the single patch file that it saves.
","'borderlands-series', 'community-mods', 'mod', 'tutorial', 'wiki'",2017-03-12T04:21:03Z,2024-06-11T14:26:40Z,191,173,752,139,"('Aaron00000', 1651), ('apocalyptech', 1270), ('Hemaxhu', 642), ('Astor63', 474), ('FromDarkHell', 459), ('exotek909', 442), ('infamous27x', 364), ('Ugyuu', 343), ('EdamameTV', 293), ('00Schmidt', 284), ('Tsunami7900', 281), ('55tumbl', 267), ('Natsu235', 259), ('Rhysand', 251), ('Natsu235', 251), ('osetor74', 247), ('CheshireKaz', 246), ('Orudeon', 245), ('Koby', 236), ('Ravenjim', 231), ('OurLordAndSaviorGabeNewell', 217), ('GreemDev', 208), ('AngrierPat', 203), ('theNocturni', 194), ('Desempregago', 191), ('AndreLouisIssa', 184), ('infamous27x', 169), ('WubTheGame', 152), ('Maplestruck', 146), ('DaShiku', 146), ('Ethel173', 145), ('GoldenGizzmo', 134), ('NB55NB', 124), ('etscheelk', 116), ('NIKITAzed', 112), ('wndr2', 111), ('ZetaDaemon', 106), ('Lftstrafe', 86), ('VulpesDolosus', 85), ('Tofu-Bunny', 75), ('VariantLoki', 73), ('Naarin', 72), ('nifsara', 65), ('Kieitrio', 62), ('Laxliife', 62), ('empireScum', 62), ('xmngr', 60), ('FreyaXV', 59), ('JKerboeuf', 58), ('juso40', 58), ('B33PB00PJOE', 57), ('CaptainKooby', 52), ('apple1417', 52), ('LightChaosman', 49), ('SirUmnei', 44), ('voidrose', 43), ('WarMocK', 43), ('RadiantArin', 39), ('avitran0', 37), ('SentySent', 34), ('Battle-Bee', 33), ('RobethX', 33), ('kunelsanders', 32), ('Akathris', 30), ('DrDapper', 30), ('Sku11k1d1998', 29), ('silverxpenguin', 29), ('Legacine', 28), ('Jejjo', 27), ('CMDObvious', 26), ('mopioid', 26), ('IK4MS', 24), ('CzRSpecV', 23), ('Sam Zimmerman', 22), ('DrBones2', 20), ('ZMighty', 20), ('Dejoltzdude139', 19), ('pyromaniac420710', 19), ('ElfyThatElf', 18), ('ReclaimerShawn', 18), ('Johnrr6', 18), ('shadoweviI', 16), ('alex166k', 16), ('Zuubu', 16), ('Yurii287', 14), ('temmmmmy', 14), ('villlads', 14), ('ActualCJ', 13), ('HypeRabbit', 13), ('Zazk0u', 13), ('Zixxyzay', 13), ('bugworm', 12), ('metalfokker', 12), ('berylmantra', 12), ('RaeofSunshine95', 12), ('PsychoPatate', 12), ('Handbra', 12), ('Yhorm', 10), ('Ezeith', 9), ('Lithobraker', 9), ('nytimz', 9), ('Blockier', 8), ('xarathos517', 8), ('itsmedoggo', 8), ('Jotovich', 8), ('HorrorInfinity', 8), ('tricksurf', 8), ('AceKuper', 7), ('Daenllander', 7), ('Edvartsen', 7), ('Hydrattler', 7), ('MalafolfMom', 7), ('MegaCyber151', 7), ('Precisiongamer0', 7), ('Saverius28', 7), ('TheArcanist01', 7), ('yaksher', 6), ('thehajo', 6), ('smithxn', 6), ('ngrfgt', 6), ('VexilleSerra', 6), ('Teratorn43906', 6), ('SmotPokin42000', 6), ('Siggless', 6), ('Darkdemon8910', 5), ('MW2366', 5), ('TheHaliax', 5), ('TheWanderer-MoDzKing99', 5), ('ilrathCXV', 5), ('koreakid02', 5), ('splitzle', 5), ('RiftedgE', 5), ('vWolvenn', 4), ('MrRollton', 4), ('LaryIsland', 4), ('KuroPanther', 4), ('ItsCoolDood', 4), ('HumbleWaterSalesman', 4), ('DarkFirePVP', 4), ('Checometer', 4), ('dagossj999', 3), ('Evanito', 3), ('shadowevil1996', 3), ('ninjahawk0824', 3), ('mintboke', 3), ('SytheDarkess', 3), ('Sp4rkSt0rm', 3), ('Seud', 3), ('PyrexBLJ', 3), ('FromDarkHell', 3), ('BigSpock', 3), ('Syriusz49', 2), ('tazercow', 2), ('robled', 2), ('iiHosTCL', 2), ('VincentDouchin', 2), ('azakhi', 2), ('ViolentKnight', 2), ('ArrowCase', 2), ('Forkinator', 2), ('KidJakobs120', 2), ('Luther78', 2), ('TheRealElysium', 2), ('TheOneArmedBandit', 2), ('Shienth', 2), ('ShadeFox-Sumo', 2), ('MorsWonderBerry', 2), ('xilph3718', 1), ('weebcon1', 1), ('thetundraterror', 1), ('r34kt0r', 1), ('lkylych', 1), ('iNSANE990', 1), ('goldensun87', 1), ('dalekin31', 1), ('ZataraTMM', 1), ('TifaLockhart', 1), ('TheDerpOfGames', 1), ('Thaddyboy', 1), ('SonnyBL2', 1), ('unlimitedsola', 1), ('Seud', 1), ('MrSpeedRunner1', 1), ('Mohl97', 1), ('Laminatesnow', 1), ('ItsaNeko', 1), ('FabledSaiko', 1), ('EchoingZen', 1), ('Derchlands', 1), ('BatManisgood', 1), ('BJBaardse', 1)",24,23,
bgamari/b-tree,Haskell on-disk B* tree implementation,"# b-tree - Disk-backed B* trees

`b-tree` is a Haskell implementation of a disk-backed B* tree. The
library uses streaming IO to write an immutable B-tree to disk from
ordered keys. This tree can then be opened via mmap for lookups. The
tree can also be iterated over as well as merged with other trees and
leaf sources.
",,2013-08-26T21:01:39Z,2021-12-09T03:36:47Z,1,1,116,9,"('bgamari', 201)",0,0,
skovgard/MDUF18b,Hold B 1. semester,"# MDUF18b
Hold B 1. semester
",,2018-04-01T17:43:28Z,2018-04-05T20:00:24Z,24,23,0,1,"('skovgard', 33), ('mmlstudios', 7), ('JDesigns87', 6), ('JacobPennyLaursen', 4), ('KennSchl', 3), ('Skibbe', 3), ('diddemunck', 3), ('AsgerDR', 3), ('Flamiga', 3), ('idasvestergaard', 2), ('soer6674', 2), ('humanrahmani', 2), ('astastage', 2), ('KemChuii', 2), ('Jakobsoon', 2), ('JanetteDokk', 2), ('ChristofferRysholt', 2), ('Jais-e', 1), ('JhartnDesigns', 1), ('Rasmusherning', 1), ('emmasuj', 1), ('jbandersen72', 1), ('richmamaaa', 1), ('vanessakirstine', 1)",7,7,
AtomLinter/linter-flow,Atom Linter for Facebook's Flow typechecker,"# linter-flow

## HELP WANTED!

I'm looking for contributors to help maintain this plug-in. I don't have the time I used to be able to keep this up-to-date, but I hate to let this languish.

Lightweight alternative to Facebook's Flow plugin for [facebook/flow](http://flowtype.org/).

![linter-demo](https://naman.s3.amazonaws.com/linter-flow-plus/linter-flow-plus.gif)

## Installation

* Install [flow](http://flowtype.org/docs/getting-started.html#installing-flow)
* `flow init`
* `apm install linter-flow`

## Settings

You can configure linter-flow by editing ~/.atom/config.cson (choose Open Your Config in Atom menu) or in Preferences:

```cson
'linter-flow':
  'executablePath': 'flow'
  'enableAll': false
```

* `executablePath`: Absolute path to the Flow executable on your system.
* `enableAll`: Typecheck all files, not just file containing `@flow`.

### Why not X?

linter-flow is made to be a lightweight package that does one thing well.

1. A similarly named package: linter-flow-plus is now a mirror. The development happens for both packages in parallel.
2. IDE-flow works relatively well, but it doesn't lint on-the-fly and doesn't integrate with the linter package.
3. Nuclide has too many problems for now to be reliable. It also involves installing a large number of other packages.

Please Note: IDE-flow and Nuclide provide other features such as autocomplete, type definitions on hover etc. Please continue to use those services for those features. (possibly in addition to linter-flow)

### Limitations

This linter currently does not support Hack. Though the linter just uses the flow-cli and hack support should be trivial to add, I'm not a Hack/PHP developer and I can't test that it actually works. I would welcome if someone was to add support for Hack to this package and test it.

## Contributing

If you would like to contribute enhancements or fixes, please do the following:

1. Fork the plugin repository
2. Hack on a separate topic branch created from the latest `master`
3. Commit and push the topic branch
4. Make a pull request
5. Welcome to the club!

Please note that modifications should follow these coding guidelines:

* Indent is 2 spaces with `.editorconfig`
* Code should pass `eslint` linter with the provided `.eslintrc`
* Vertical whitespace helps readability, don’t be afraid to use it

**Thank you for helping out!**
",,2014-11-20T23:59:05Z,2022-06-26T08:46:58Z,18,14,98,7,"('nmn', 50), ('Arcanemagus', 44), ('anaisbetts', 21), ('greenkeeperio-bot', 18), ('arnaud-dezandee', 17), ('greenkeeperbot', 10), ('kevinsawicki', 5), ('martomi', 4), ('Steel Brain', 3), ('Arnaud Dezandee', 2), ('Alex Cruz', 1), ('Benjamín Eidelman', 1), ('despairblue', 1), ('maletor', 1), ('patrys', 1), ('torifat', 1), ('strax', 1), ('steelbrain', 1)",8,6,
jacquescrocker/jammit-s3,Extensions so you can use jammit with s3/cloudfront for your Rails app,"# Jammit S3

## Introduction

Jammit S3 is a jammit wrapper that provides appropriate hooks so you can easily deploy your assets to s3/cloudfront

It's especially great for Heroku user who use generated assets such as coffee-script and sass. jammit-s3 includes a script you can use as a hook to recompile and upload all your assets.


## Installation

To install jammit-s3, just use:

    gem install jammit-s3

If you are using Rails3, add it to your project's `Gemfile`:

    gem 'jammit-s3'


Jammit S3 already has a gem dependency for jammit, so I'd recommend removing any existing `gem 'jammit'` references from your Gemfile.


## Configuration

Within your `config/assets.yml`, just add a toplevel key called `s3_bucket` that contains the bucketname you want to use. If jammit-s3 doesn't find the bucket, it will try to create it. Bucketnames need to be globally unique. Learn more about bucketnames [here](http://support.rightscale.com/06-FAQs/FAQ_0094_-_What_are_valid_S3_bucket_names%3F)

    s3_bucket: my-awesome-jammit-bucket

## Deployment

To deploy your files to s3, just the jammit-s3 command at your project's root.

    jammit-s3

If using it in the context of your Rails3 app, I'd recommend using `bundle exec`

    bundle exec jammit-s3

## Saving Authentication Info

Set your authenticaton information within `config/assets.yml`

    s3_access_key_id: 03HDMNF59CWZ2J24T702
    s3_secret_access_key: 1TzRlDmuH8DoOlJ2tlwW8qx+i+Pfe0jzIouWI2BL

Replace these with your own access keys, found [here](https://aws-portal.amazon.com/gp/aws/developer/account/index.html?ie=UTF8&action=access-key).

As you probably don't want to check this data into source control, I'd recommend you just set it to an environment variable on your local box, and use ERB

    s3_access_key_id: 
    s3_secret_access_key: 

You can then set these env variables in your .bash_profile


## Folders to upload

By default, jammit-s3 will upload your configured asset directly, along with public/images. However you can customize this using the `s3_upload_files` setting, which should be a list of file globs.

    # adds image uploads
    s3_upload_files:
      - public/css/images/**

## Setting permissions on uploaded s3 objects

By default, jammit-s3 uses the permission setting found on the s3 bucket. However, you can override this with the config:

    s3_permission: public_read

Valid permission options are:

`private`: Owner gets FULL_CONTROL. No one else has any access rights. This is the default.

`public_read`: Owner gets FULL_CONTROL and the anonymous principal is granted READ access. If this policy is used on an object, it can be read from a browser with no authentication.

`public_read_write`: Owner gets FULL_CONTROL, the anonymous principal is granted READ and WRITE access. This is a useful policy to apply to a bucket, if you intend for any anonymous user to PUT objects into the bucket.

`authenticated_read`: - Owner gets FULL_CONTROL, and any principal authenticated as a registered Amazon S3 user is granted READ access.

## Using CloudFront

For this to work you need to make sure you have the CloudFront enabled via you Amazon acccount page. Go here: http://aws.amazon.com/cloudfront/ and click ""Sign Up""

To use CloudFront, simply add the following settings to config/assets.yml:

    use_cloudfront: on
    cloudfront_dist_id: XXXXXXXXXXXXXX
    cloudfront_domain: xyzxyxyz.cloudfront.net

Please note that cloudfront_dist_id is not the same as the CloudFront domain
name. Inside CloudFront management console select the
distribution, and you will see Distribution ID and Domain Name values.

This will use the CloudFront domain name for your assets instead of serving them from the (slow) S3 bucket.

### Known issues with CloudFront invalidation

1. It may reportedly take up to 15 minutes to invalidate all the CloudFront
caches around the globe (and Amazon charges for more than a certain number
of invalidations per month).

2. It's non-atomic from the perspective of the end-user: They may get an
older version of the site with a newer version of the JavaScript and CSS, or
vice versa.

3. It doesn't play nicely with aggressive HTTP caching. For example, once I
serve a script or a stylesheet, I would like it to be cached indefinitely
with no more round trips to see whether it is valid.

Given these constraints, there's still an important need for some kind of
content-based hashing. Done right, this assures that all files can be cached
indefinitely, and the user will always get matched HTML/JS/CSS files. (This currently
is in the works).

## Bugs / Feature Requests

To suggest a feature or report a bug:
http://github.com/railsjedi/jammit-s3/issues/


## Jammit Home Page

Jammit S3 is a simple wrapper around Jammit. To view the original Jammit docs, use http://documentcloud.github.com/jammit/

",,2010-10-03T16:24:27Z,2020-02-29T08:31:42Z,9,7,125,5,"('Jacques Crocker', 29), ('Kliment Mamykin', 12), ('dedene', 8), ('simonoff', 5), ('ariejan', 2), ('cameronyule', 2), ('fbjork', 2), ('miloops', 1), ('gauravgupta123', 1)",2,2,
Henryhaohao/Bilibili_video_download,:rainbow:Bilibili_video_download-B站视频下载,"Bilibili(b站)视频下载 ![enter image description here](Pic/logo.png)
===========================
![](https://img.shields.io/badge/Python-3.6.3-green.svg) ![](https://img.shields.io/badge/requests-2.18.4-green.svg) ![](https://img.shields.io/badge/moviepy-0.2.3.2-green.svg)
### Bilibili官网 - https://www.bilibili.com/
|Author|:sunglasses:Henryhaohao:sunglasses:|
|---|---
|Email|:hearts:1073064953@qq.com:hearts:

    
****
## :dolphin:声明
### 软件均仅用于学习交流，请勿用于任何商业用途！感谢大家！
## :dolphin:介绍
### 该项目为[Bilibili(b站)](https://www.bilibili.com/)视频下载(支持分P多段视频的下载!)
- **对于单P视频:直接传入B站av号或者视频链接地址(eg: 49842011或者https://www.bilibili.com/video/av49842011)**
- **对于多P视频:**
  > **1.下载全集:直接传入B站av号或者视频链接地址(eg: 49842011或者https://www.bilibili.com/video/av49842011)**
  > **2.下载其中一集:传入那一集的视频链接地址(eg: https://www.bilibili.com/video/av19516333/?p=2)**
## :dolphin:爬虫版本
- **版本一: bilibili_video_download_v1.py**
  > **加密API版,不需要加入cookie,直接即可下载1080p视频**
- **版本二: bilibili_video_download_v2.py**
  > **1.无加密API版,但是需要加入登录后cookie中的SESSDATA字段,才可下载720p及以上视频**
  > **2.如果想下载1080p+视频,需要带入B站大会员的cookie中的SESSDATA才行,普通用户的SESSDATA最多只能下载1080p视频；请定期更换代码31行cookie中的SESSDATA值。跟换方法为：浏览器登录B站，在开发者模式(按F12) --> application --> cookie中找到SESSDATA值替换即可，一个月的有效期**
- **版本三: bilibili_video_download_v3.py**
  > **即版本二的升级版,为Threading多线程下载版本,下载速度大幅提升!** 

- **版本四: GUI版本 - bilibili_video_download-GUI.py**
  > **在版本三基础上加入图形界面,操作更加友好**

- **版本五: bilibili_video_download_bangumi.py**
  > **在版本一,三基础上增加下载B站番剧视频(eg: https://www.bilibili.com/bangumi/play/ep269835)**
## :dolphin:运行环境
Version: Python3
## :dolphin:安装依赖库
```
pip3 install -r requirements.txt
```
## :dolphin:运行截图
> - **运行下载**
![enter image description here](Pic/run.png)
> - **GUI图形界面**  
![](Pic/GUI-run.png)
> - **下载完成**
![enter image description here](Pic/video.png)
## :dolphin:**总结**
> **最后，如果你觉得这个项目不错或者对你有帮助，给个Star呗，也算是对我学习路上的一种鼓励！
 哈哈哈，感谢大家！笔芯哟~**:cupid::cupid:
","'bilibili', 'python', 'videodownload'",2018-10-23T07:47:47Z,2023-05-22T21:12:36Z,9,7,2987,58,"('Henryhaohao', 54), ('ColdThunder11', 4), ('Pzqqt', 2), ('lhy1024', 2), ('MuoDoo', 1), ('Nexus01', 1), ('Wenlong Li', 1), ('myk5010', 1), ('zhangyuxi', 1)",5,3,
yoavfreund/UCSD_BigData_2016,,"### UCSD_BigData_2016

This repository is the public repository for the UCSD classes DSE230 and CSE255 Spring 2016.
",,2016-03-25T16:02:05Z,2019-03-02T12:53:01Z,5,4,39,24,"('yoav freund', 46), ('arapat', 20), ('sunilraiyani', 19), ('saurabh3949', 4), ('yoavfreund', 2)",0,0,
DannyRuijters/CubicInterpolationCUDA,GPU accelerated pre-filtered cubic b-spline interpolation using CUDA,"CUDA Cubic B-Spline Interpolation (CI)
======================================

Version 1.2
-----------

This *read me* serves as a quick guide to using the CUDA Cubic B-Spline
Interpolation (abbreviated as CI) code. The most recent version of CI
and some background information can be found
[online](http://www.dannyruijters.nl/cubicinterpolation/). To execute
and compile CI you need [CUDA and the CUDA SDK (2.0 or
higher)](http://www.nvidia.com/object/cuda_get.html). Read
[this](examples/CUDA5_important_readme.txt), if you are using CUDA 5.
This software has been released under a revised BSD style
[license](license.txt).

Getting started
---------------

If you want to simply replace linear interpolation by cubic filtering,
then all you need to do is to include the appropriate header and replace
your `tex1D`, `tex2D` and `tex3D` calls by one of the following:

1D textures:

 `cubicTex1D(texture tex, float x)`

2D textures:

 `cubicTex2D(texture tex, float x, float y)`  
 `cubicTex2D(texture tex, float2 coord)`

3D textures:

 `cubicTex3D(texture tex, float x, float y, float z)`  
 `cubicTex3D(texture tex, float3 coord)`

Whereby the texture coordinates `coord` are expressed in absolute pixel
respectively voxel coordinates (thus not in normalized coordinates).

It is also possible to query the cubicly filtered 1st order derivative
of the texture at a coordinate `coord`; e.g. in the x-direction: 

 `cubicTex3D_1st_derivative_x(texture tex, float3 coord)`

The calls for the y- and z-direction are similar, and also the
derivatives of 1D and 2D textures can be retrieved in the same way. The
cost of querying the derivative in a single direction costs the same
amount of time as a normal cubicly filtered lookup in the texture. The
gradient of the texture at a specified coordinate can be composed by
querying the derivatives in x-, y- and z-direction at that location.

Pre-filtering
-------------

When the approach described above is directly applied, it will result in
smoothened images. This is caused by the fact that the cubic B-spline
filtering yields a function that does not pass through its coefficients
(i.e. texture values). In order to wind up with a cubic B-spline
interpolated image that passes through the original samples, we need to
pre-filter the texture, as is beautifully described by [Philippe
Thévenaz *et al.*](http://bigwww.epfl.ch/thevenaz/interpolation/)

Luckily, CI also provides a CUDA implementation of this prefilter, and
using it is rather simple. The interface for the 2D case is:

`CubicBSplinePrefilter2D(float* image, uint pitch, uint width, uint height);`

and for the 3D case:

`CubicBSplinePrefilter3D(float* volume, uint pitch, uint width, uint height, uint depth);`

The `image` and `volume` should point to the GPU memory containing the
data samples. Note that the sample values will be replaced by the cubic
B-spline coefficients. The `pitch` variable describes the width of a row
in the image in bytes. `width`, `height`, and `depth` describe the
extent of the data in pixels/voxels. Instead of `float*`, it is also
possible to pass `float2*`, `float3*`, or `float4*` data (e.g., for RGB
color data).

Getting your data there
-----------------------

In order to make your even easier, CI also provides some routines to
transfer your data to the GPU memory, and back. Copying your sample
values to the GPU memory can be accomplished by this function:

`cudaPitchedPtr CopyVolumeHostToDevice(const float* host, uint width, uint height, uint depth);`

The routine allocates GPU memory and copies the sample values from CPU
to GPU memory. The pointer to the CPU memory is passed as `host`, and a
pointer to the GPU memory is returned. The counterpart that copies data
from the GPU memory to the CPU memory is called:

`void CopyVolumeDeviceToHost(float* host, cudaPitchedPtr device, uint width, uint height, uint depth);`

Note that the `host` destination CPU memory should be allocated before
`CopyVolumeDeviceToHost` is called. This routine will also free the GPU
memory.

Often you will have your original data in a different format than
`float`, and for large data sets it costs some time (and memory) to cast
everything to `float`. Therefore CI also provides a number of functions
that copy and cast your data immediately to `float` on the GPU, which is
faster and easier. In C++ you can use the following template function:

`template extern cudaPitchedPtr CastVolumeHostToDevice(const T* host, uint width, uint height, uint depth);`

The usage of the parameters is the same as for `CopyVolumeHostToDevice`,
except that `host` can be of the type `uchar`, `schar`, `ushort` or
`short`. Note that the sample values will be normalized, meaning that
the maximum value (e.g. 255 for `uchar`) will be mapped to 1.0.

The following function can be used to copy the output of the pre-filter
functions into a texture:

`void CreateTextureFromVolume(texture* tex, cudaArray** texArray, const cudaPitchedPtr volume, cudaExtent extent, bool onDevice);`

Using layered textures
----------------------

It is possible to use the cubic interpolation texture lookups with
layered textures. In order to do this, you need to add:  
 `#define cudaTextureType2DLayered`  
 to your code, and replace the calls to:  
 `tex2DLayered(texture tex, float x, float y, int layer)`  
 with:  
 `cubicTex2DLayered(texture tex, float x, float y, int layer)`  
 For 1D it works similarly.

Example programs
----------------

Some example programs are provided along with the CI code, to illustrate
the usage of the various routines. In order to compile the example
programs, you first need to make sure that the [CUDA SDK
examples](http://www.nvidia.com/object/cuda_get.html) can be compiled.
Then it is simply a matter of opening the Visual Studio solution on
Windows machines, or running `make` in the example folder on the Mac or
Linux.

-   **cudaCubicRotate2D** uses 2D cubic interpolation to apply a user
    defined rotation and translation to a given image. The code is based
    on the example program provided by [Philippe
    Thévenaz](http://bigwww.epfl.ch/thevenaz/interpolation/), and is
    adapted to make use of the CI routines. The main program is in C
    rather than in C++, and therefore shows how to exploit CUDA in
    general and CI in particular from within C code. When comparing the
    resulting images with the counterparts generated with the original
    source code, it becomes immediately apparent that presently CI does
    not support mirroring periodicity when exceeding the image extent.
-   **cudaCubicTexture3D** is an adapted version of the simpleTexture3D
    that can be found in the CUDA SDK 2.0. It shows how the CI code can
    be used to pre-filter the texture data, and how to perform the cubic
    interpolation. This example program also illustrates the cubic
    interpolation image quality compared to nearest neighbor, linear and
    non pre-filtered interpolation, since it can switch between those on
    the fly by pressing the 'f' key.
-   **referenceCubicTexture3D** performs the same task as
    simpleCubicTexture3D, but uses the CPU instead of the GPU. It is
    meant to generate a ground truth for performance measurements, and
    allows you to repeat those measurements on your own hardware.
-   **cudaCubicRayCast** is a very simple CUDA raycasting program that
    demonstrates the merits of cubic interpolation (including
    prefiltering) in 3D volume rendering.
-   **glCubicRayCast** shows raycasting with cubic interpolation using
    pure OpenGL, without CUDA. However, this example also lacks the
    prefiltering of the voxel data.
-   **cudaCubicAviPlayback** prefilters every frame of an AVI movie on
    the fly. This example illustrates how the CI code can be used with
    vector data (such as RGBA color data).
-   **cudaAccuracyTest** creates 1D, 2D and 3D prefiltered textures, and
    uses the cubic interpolation routines to reconstruct the values at
    the sample knots. The cubicly interpolated values are then compared
    to the original (randomly generated) sample values.

Background
----------

More background information to the CI code is provided
[online](http://www.dannyruijters.nl/cubicinterpolation/). A
comprehensive discussion of uniform B-spline interpolation and the
pre-filter can be found in [1]. The GPU implementation is described in
[2]. The fast cubic B-spline interpolation is an adapted version of the
method introduced by Sigg and Hadwiger [3]. A description of the adapted
algorithm, its merits and its drawbacks is given in [4].

1.  Philippe Thévenaz, Thierry Blu, and Michael Unser, ""[Interpolation
    Revisited](http://bigwww.epfl.ch/publications/thevenaz0002.pdf),""
    IEEE Transactions on Medical Imaging, vol. 19, no. 7, pp. 739-758,
    July 2000.
2.  Daniel Ruijters and Philippe Thévenaz, ""[GPU Prefilter for Accurate
    Cubic B-Spline
    Interpolation](http://dannyruijters.nl/docs/cudaPrefilter3.pdf),""
    The Computer Journal, vol. 55, no. 1, pp. 15-20, January 2012.
3.  Christian Sigg and Markus Hadwiger, ""[Fast Third-Order Texture
    Filtering](http://developer.download.nvidia.com/SDK/9.5/Samples/DEMOS/OpenGL/src/fast_third_order/docs/Gems2_ch20_SDK.pdf),""
    In GPU Gems 2: Programming Techniques for High-Performance Graphics
    and General-Purpose Computation, Matt Pharr (ed.), Addison-Wesley;
    chapter 20, pp. 313-329, 2005.
4.  Daniel Ruijters, Bart M. ter Haar Romeny, and Paul Suetens,
    ""[Efficient GPU-Based Texture Interpolation using Uniform
    B-Splines](http://www.mate.tue.nl/mate/pdfs/10318.pdf),"" Journal of
    Graphics Tools, vol. 13, no. 4, pp. 61-69, 2008.

Copyright 2008-2013 Danny Ruijters
",,2015-05-25T14:41:10Z,2017-02-27T15:52:51Z,1,1,108,10,"('DannyRuijters', 6)",0,0,
bootstrap-vue/bootstrap-vue,BootstrapVue provides one of the most comprehensive implementations of Bootstrap v4 for Vue.js. With extensive and automated WAI-ARIA accessibility markup.,"
  
    
  




  With more than 85 components, over 45 available plugins, several directives, and 1000+ icons,
  BootstrapVue provides one of the most comprehensive implementations of the Bootstrap v4.5
  component and grid system available for Vue.js v2.6, complete with extensive and automated
  WAI-ARIA accessibility markup.




  
    
  
  
    
  
  
    
  
  
    
  
  
    
  
  
  
    
  
  
    
  
  
    
  
  
    
  
  
    
  
  
  
    
  
  
    
  
  
    
  


Links

- 📘 [Documentation](https://bootstrap-vue.org)
- 🔨 [Release Notes](https://bootstrap-vue.org/docs/reference/changelog)
- 💬 [Discord Chat](https://discord.gg/j2Mtcny)
- 🐦 [Twitter](https://twitter.com/BootstrapVue)

Sponsors

Support this project by becoming a sponsor.

Your logo will show up here with a link to your website.
[[Become a sponsor](https://opencollective.com/bootstrap-vue#sponsor)]












Backers

Thank you to all our backers! 🙏
[[Become a backer](https://opencollective.com/bootstrap-vue#backer)]



Contributors

This project exists thanks to all the people who contribute. [[Contribute]](CONTRIBUTING.md).



Partners


  


License

Released under the MIT [License](./LICENSE). Copyright (c) BootstrapVue.

[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fbootstrap-vue%2Fbootstrap-vue.svg?type=small)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fbootstrap-vue%2Fbootstrap-vue?ref=badge_small)
","'a11y', 'accessibility', 'accessible', 'bootstrap', 'bootstrapvue', 'component-library', 'components', 'icons', 'nuxt', 'nuxtjs', 'vue', 'wai-aria'",2016-10-08T15:59:35Z,2024-04-29T13:27:09Z,356,322,14473,291,"('tmorehouse', 2190), ('renovatebot', 789), ('Pooya Parsa', 660), ('jacobmllr95', 402), ('dependabotbot', 213), ('pi0', 178), ('mosinve', 98), ('xanf', 75), ('GregPeden', 69), ('bootstrap-vue-bot', 49), ('alexsasharegan', 39), ('Hiws', 25), ('pooya parsa', 19), ('emanuelmutschlechner', 17), ('vizo', 17), ('mathlet0x', 15), ('TitanFighter', 14), ('VividLemon', 10), ('Volker Thiel', 10), ('charkins', 9), ('Issayah', 8), ('BramVer', 8), ('darrelfrancis', 7), ('PatrickEriksen', 6), ('robcresswell', 6), ('yacinehmito', 6), ('andrei-gheorghiu', 5), ('pimlie', 5), ('toadkicker', 5), ('tithamane', 4), ('Sensational-Code', 4), ('nddery', 4), ('MichaelJCole', 4), ('lianee', 4), ('asood123', 4), ('Alex Regan', 4), ('jonfunkhouser', 3), ('magical-l', 3), ('cynecx', 3), ('Yacine Hmito', 3), ('Todd Baur', 3), ('Shamus03', 3), ('larionov', 3), ('rinick', 3), ('m-mohr', 3), ('johnfraney', 3), ('DaleSeo', 3), ('chettapong', 3), ('Author', 3), ('82amp', 3), ('Soviut', 2), ('IwalkAlone', 2), ('1element', 2), ('rfp', 2), ('RomeroMsk', 2), ('Rob Cresswell', 2), ('ramakrishnamundru', 2), ('piotrtomiak', 2), ('Phinome', 2), ('pterk', 2), ('Nikkiez', 2), ('CyberAP', 2), ('Tekki', 2), ('valexiev', 2), ('vishal-wadhwa', 2), ('wouterkroes', 2), ('denniskoenig', 2), ('PawelDmochowski', 2), ('iliveoncaffiene', 2), ('naime-hossain', 2), ('syffs', 2), ('JonathanGuberman', 2), ('ochowei', 2), ('MrKuzio', 2), ('farnabaz', 2), ('gaaf', 2), ('andrewvasilchuk', 2), ('aorinevo', 2), ('atrunelle', 2), ('bencelaszlo', 2), ('Bharathvaj', 2), ('ClemMakesApps', 2), ('hydraheim', 2), ('dleesalestreamsoft', 2), ('tkcn568', 2), ('dflock', 2), ('stranger26', 2), ('jd-solanki', 2), ('jamesgeorge007', 2), ('jon-walton', 2), ('kazusa-qooq', 2), ('kylemh', 2), ('Magnum5234', 2), ('gabel', 2), ('mstaack', 2), ('einazare', 2), ('samyllasr', 1), ('bsantosh909', 1), ('storyn26383', 1), ('isaul32', 1), ('smiller171', 1), ('sebastian-raubach', 1), ('SebastianSpeitel', 1), ('nejinn', 1), ('sadortun', 1), ('petitkriket', 1), ('samturrell', 1), ('washu', 1), ('SadeghMahmoudpour', 1), ('RbkCp', 1), ('rjmill', 1), ('peterjosling', 1), ('ThibaultVlacich', 1), ('Tarrask', 1), ('talkor', 1), ('T145', 1), ('tomscytale', 1), ('sergiocastrovale', 1), ('Sébastien Chopin', 1), ('skrajewski', 1), ('sundus-y', 1), ('mblonyox', 1), ('SubodhDahal', 1), ('sschadwick', 1), ('costeirs', 1), ('psimyn', 1), ('Siavash Kavousi', 1), ('ivacuum', 1), ('dedene', 1), ('peterblazejewicz', 1), ('phegman', 1), ('Payton Burdette', 1), ('paweltatarczuk', 1), ('paulgv', 1), ('PatBriPerso', 1), ('patrickblackjr', 1), ('Lechindianer', 1), ('olivierkes', 1), ('sharlatta', 1), ('noolan', 1), ('ndarilek', 1), ('nshntarora', 1), ('happilymarrieddad', 1), ('blaysku', 1), ('ronjouch', 1), ('ralymov', 1), ('katafractari', 1), ('Istador', 1), ('bertday', 1), ('Muukuro', 1), ('richeklein', 1), ('renan-sugiyama', 1), ('rhangai', 1), ('ReedSun', 1), ('serialine', 1), ('rapulu', 1), ('Ramakrishna', 1), ('qkdreyer', 1), ('pgrimaud', 1), ('philipmountifield', 1), ('spekulatius', 1), ('elb', 1), ('polmuz', 1), ('phil-w', 1), ('peterkajan', 1), ('neilnaveen', 1), ('naletups', 1), ('mikeaag', 1), ('mmilano', 1), ('fifi', 1), ('madflow', 1), ('laFreeFall', 1), ('jombard', 1), ('jjonas-gcs', 1), ('jinzhixin', 1), ('javiercbk', 1), ('iwate', 1), ('saloev', 1), ('ziga-miklic', 1), ('yukidaruma', 1), ('xiaoyufan', 1), ('xenolithviktor', 1), ('xcchcaptain', 1), ('zagto', 1), ('tusimarimo', 1), ('tarazena', 1), ('spollard', 1), ('sowinski', 1), ('skyway777', 1), ('sg4r', 1), ('ryanjbonnell', 1), ('ruudz', 1), ('rpopovych', 1), ('jschyz', 1), ('xqdd', 1), ('Winnie Hellmann', 1), ('willidert', 1), ('williammck', 1), ('wgpsutherland', 1), ('will-stone', 1), ('menway', 1), ('slaweet', 1), ('dgray16', 1), ('vitallium', 1), ('zoxon', 1), ('Itee', 1), ('TonyLianLong', 1), ('koheiio', 1), ('TomSmith27', 1), ('thomasfowler', 1), ('huadong', 1), ('h0rn3z0r', 1), ('gordonclarke', 1), ('gmw-web', 1), ('dizzzan', 1), ('cvn', 1), ('criskgl', 1), ('CostPerMille', 1), ('bryansamuel1', 1), ('brianmcburney', 1), ('antonstefanov', 1), ('a-kriya', 1), ('Zeranoe', 1), ('zjbarg', 1), ('nkiyuu', 1), ('ihmels', 1), ('evelinasmit', 1), ('teacherSsamko', 1), ('enriquecastl', 1), ('theel0ja', 1), ('eddybrando', 1), ('dietergeerts', 1), ('deanpienaar', 1), ('noobling', 1), ('David Vaness', 1), ('dsanders11', 1), ('deisner', 1), ('dmsmidt', 1), ('daniellwu', 1), ('djsiroky', 1), ('damoxc', 1), ('DabeDotCom', 1), ('Gustavs Rācenājs', 1), ('Aterbonus', 1), ('Guito', 1), ('ShGKme', 1), ('GriffGeorge', 1), ('glennflanagan', 1), ('gediminaspetrikas', 1), ('ghenry', 1), ('GauthierPLM', 1), ('gauravmak', 1), ('fntneves', 1), ('frankjdelgado', 1), ('pojntfx', 1), ('FedorSherbakov', 1), ('FantasticFiasco', 1), ('evgenyvas', 1), ('DM2489', 1), ('Relequestual', 1), ('impowski', 1), ('153957', 1), ('youaresofunny', 1), ('asxcandrew', 1), ('andrewharvey', 1), ('AndreasCag', 1), ('DrDrei', 1), ('amir-hadi', 1), ('Alexander von Studnitz', 1), ('zagovorichev', 1), ('amulchinock', 1), ('codetheorist', 1), ('gornostal', 1), ('AlanRezende', 1), ('aaronmorgan', 1), ('CyBot', 1), ('luckylooke', 1), ('Coreusa', 1), ('connorf25', 1), ('Anaphase', 1), ('codebykyle', 1), ('johnrazeur', 1), ('cbebry', 1), ('ChristianMurphy', 1), ('chrisyip', 1), ('cmpscabral', 1), ('Bruce Hem', 1), ('brianjmiller', 1), ('bbugh', 1), ('boukeversteegh', 1), ('bobzurad', 1), ('Maja Kudlicka', 1), ('maartenpaauw', 1), ('phrxst', 1), ('ldawkes', 1), ('leipert', 1), ('Sandalf', 1), ('lucaperret', 1), ('LittleGarry', 1), ('CrazyOrr', 1), ('z1m1n', 1), ('kn0wl3dge', 1), ('KarboniteKream', 1), ('skydivekevin', 1), ('kaesve', 1), ('kaidjohnson', 1), ('junish', 1), ('Nathan Gray', 1), ('nfriend', 1), ('Mohamed Elghobaty', 1), ('milancurcic', 1), ('Mike Massari', 1), ('Michael Zangl', 1), ('michaelwoodson', 1), ('michaelathatch', 1), ('mehdirande', 1), ('Matt Grande', 1), ('mathmarques', 1), ('markhalliwell', 1), ('mariusa', 1), ('marekpagel', 1), ('marcotgs', 1), ('makkrnic', 1), ('jwu910', 1), ('jblotus', 1), ('shadforth', 1), ('jacobgunnarsson', 1), ('JISSJOHNSON', 1), ('jreiersgord', 1), ('IvanSGurdian', 1), ('scratchmex', 1), ('oakdays', 1), ('itamaro', 1), ('irazasyed', 1), ('InstanceOfMichael', 1), ('IlyaSemenov', 1), ('i-erokhin', 1), ('henryklukasik', 1), ('tochoromero', 1), ('hrobertson', 1), ('TomyCesaille', 1), ('JonathanGuberman', 1), ('Jonathan Guberman', 1), ('duckbrain', 1), ('jlosito', 1), ('postalservice14', 1), ('genie-youn', 1), ('kagawagao', 1), ('jimt', 1), ('nicolabosco87', 1), ('jasonyoung-cd', 1), ('silentred', 1), ('Ugzuzg', 1), ('janekx21', 1), ('jpkleemans', 1), ('euoia', 1)",260,239,
dwolverton/lab-b,,,,2016-10-03T16:32:10Z,2016-10-03T18:51:52Z,1,1,0,2,"('dwolverton', 2)",0,0,
bitepeng/b0pass,"百灵快传(B0Pass)：基于Go语言的高性能 ""手机电脑超大文件传输神器""、""局域网共享文件服务器""。LAN large file transfer tool。","# 百灵快传（B0Pass）

LAN large file transfer tool。

基于Go语言的高性能 “手机电脑超大文件传输神器”、“局域网共享文件服务器”。

只需一个文件（exe）双击开启。

## 1. 主要功能

### 1.1 功能描述

- [x] 局域网文件共享服务器
- [x] 简单的单个可执行文件
- [x] 共享文件界面（在同一局域网或WIFI下，传输超大文件）
- [x] 二维码扫码界面（支持手机传输，支持其它电脑输入网址）
- [x] 共享文件在线管理界面（主电脑打开、图片浏览器、重命名、删除等）
- [x] 更简洁高效的操作界面
- [x] 使用自研的 B0Boot-Go 框架重构代码，更简洁、更模块化
- [x] 文件上传界面支持多次选择（PC端支持拖拽上传）
- [x] 大文件上传过程分片处理（上传更丝滑，不卡顿）
- [x] 支持路径有空格或中文的情况
- [x] 支持Windows、Linux、MacOS操作系统
- [x] 支持端口（port）自定义配置
- [x] 支持域名（domain）自定义配置
- [x] 支持安卓手机APK应用（Uniapp开发的手机端）
- [x] 支持连接主电脑的手机和电脑发送键盘和鼠标命令（支持windows）
- [ ] 提升项目安全性（debug模式）
- [ ] JWT安全控制（配置Pread:只读|Pupload:上传|Padmin:管理，Token验证）
- [ ] 支持对文件多选和全选操作
- [ ] 支持对PDF文件在线预览
- [ ] 支持对上传的压缩包在线解压
- [ ] 支持上传整个文件夹
- [ ] 自动检查更新版本

### 1.2 PC操作截图




    
    主界面（功能说明）


    
    主界面（图文模式、文件菜单）


    
    主界面（列表模式）




    
    手机扫码（到主界面）


    
    手机扫码（到某个文件）


    
    大文件上传（选择文件）




    
    大文件上传（上传完成）


    
    图片浏览器


    
    Html文件 Web服务




### 1.3 手机操作截图




    
    主界面


    
    上传文件


    
    文件操作





## 2. 发行版下载使用

### 下载前请阅读
-  已编译好***Windows、MacOS、Linux***等平台的可执行文件
-  只需下载到电脑，双击开启即可使用
-  注意1：建议不要安装到“C:\Program Files (x86)”等系统目录，否则需要右键“以管理员身份运行”
-  注意2：如果要自定义端口等配置，请修改`config.ini`文件
```
[gateway]
ListenAddr = "":8888""      # 配置IP和端口
Domain = ""test.com:8888""  # 可选配置，配置访问域名（若使用80端口或nginx代理，可忽略端口）
[pass]
Path = ""files""            # 文件管理根目录
```

### 最新版下载地址
- https://4bit.cn/p/b0pass    （百灵快传官网，直接下载）
- https://www.oschina.net/p/b0pass （开源中国版本发布专题）

## 3. 代码仓库
- https://github.com/bitepeng/b0pass   GitHub（主库）   欢迎star支持
- https://gitee.com/b0cloud/b0pass     GitEE（国内同步） 欢迎star支持


## 4. 使用场景
- ***手机电脑共享文件***

    电脑上双击执行 -> 手机扫码 -> 手机、电脑文件可以互传。

- ***电脑之间共享文件***

    电脑A上双击执行 -> 电脑B上浏览器输入A的地址 -> 电脑A、电脑B文件可以互传。

- ***虚拟机和电脑之间共享文件***

    电脑上双击执行 -> 虚拟机上浏览器输入电脑的地址 -> 虚拟机、电脑文件可以互传。

- ***更多使用场景***

    也可以用作“家庭影音中心”、“办公室文件共享”、“产品原型服务器”等。走局域网HTTP协议，Windows、MacOS、虚拟机、安卓、iPhone等都可以跨平台共享文件。

## 5. 源码编译
```
# 下载代码
git clone https://github.com/bitepeng/b0pass.git

# 使用go mod更新依赖
go mod tidy

# 开发运行
cd main && go run ./main.go

# 编译运行开发版本
cd main && ./build.bat
```
","'bigfile', 'file-transfer', 'go', 'golang', 'webserver', 'wifi-network'",2019-10-24T02:26:31Z,2023-12-15T08:31:08Z,1,1,2038,41,"('bitepeng', 115)",0,0,
Big-Data-Manning/big-data-code,Source code for Big Data: Principles and best practices of scalable realtime data systems,"Please read: [Unethical behavior by Manning, the publisher of Big Data](http://big-data-manning.blogspot.com/2015/09/unethical-behavior-by-manning-publisher.html)

The source code for the batch, serving, and speed layers of SuperWebAnalytics.com as described in [Big Data: Principles and best practices of scalable realtime data systems](http://www.amazon.com/dp/1617290343)",,2015-04-30T01:06:42Z,2024-06-08T04:13:47Z,1,1,334,70,"('nathanmarz', 4)",0,0,
tomwhite/hadoop-book,"Example source code accompanying O'Reilly's ""Hadoop: The Definitive Guide"" by Tom White","# Hadoop Book Example Code

This repository contains the example code for [Hadoop: The Definitive Guide, Fourth Edition](http://shop.oreilly.com/product/0636920033448.do)
by Tom White (O'Reilly, 2014).

Code for the [First], [Second], and [Third] Editions is also available.

Note that the chapter names and numbering has changed between editions, see
[Chapter Numbers By Edition](https://github.com/tomwhite/hadoop-book/wiki/Chapter-Numbers-By-Edition).

[First]: http://github.com/tomwhite/hadoop-book/tree/1e
[Second]: http://github.com/tomwhite/hadoop-book/tree/2e
[Third]: http://github.com/tomwhite/hadoop-book/tree/3e

## Building and Running

To build the code, you will first need to have installed Maven and Java. Then type

```bash
% mvn package -DskipTests
```

This will do a full build and create example JAR files in the top-level directory (e.g. 
`hadoop-examples.jar`).

To run the examples from a particular chapter, first install the component 
needed for the chapter (e.g. Hadoop, Pig, Hive, etc), then run the command lines shown 
in the chapter.

Sample datasets are provided in the [input](input) directory, but the full weather dataset
is not contained there due to size restrictions. You can find information about how to obtain 
the full weather dataset on the book's website at [http://www.hadoopbook.com/]
(http://www.hadoopbook.com/).

## Hadoop Component Versions

This edition of the book works with Hadoop 2. It has not been tested extensively with 
Hadoop 1, although most of it should work.

For the precise versions of each component that the code has been tested with, see 
[book/pom.xml](book/pom.xml).

## Copyright

Copyright (C) 2014 Tom White","'book', 'hadoop', 'o-reilly'",2009-07-13T10:13:48Z,2020-03-17T05:11:30Z,2,1,3490,450,"('tomwhite', 312), ('Tom White', 2)",0,0,
mmalmi/merkle-btree,Content-addressed B-tree in javascript,"# merkle-btree

> Content-addressed b-tree

[![NPM](https://img.shields.io/npm/v/merkle-btree.svg?style=flat-square)](https://www.npmjs.com/package/merkle-btree)
[![David](https://img.shields.io/david/mmalmi/merkle-btree.svg?style=flat-square)](https://david-dm.org/mmalmi/merkle-btree)
[![Travis](https://img.shields.io/travis/mmalmi/merkle-btree/master.svg?style=flat-square)](https://travis-ci.org/mmalmi/merkle-btree)

### Description
Generic javascript library for writing and reading B-trees on content hash addressed storages. Includes storage adapters for [IPFS](https://ipfs.io/) nodes (read & write) and gateways (read only).

Based on https://github.com/ianopolous/merkle-btree.

### Installation

Install via [yarn](https://github.com/yarnpkg/yarn)

	yarn add merkle-btree (--dev)

or npm

	npm install merkle-btree (--save-dev)


If you don't use a package manager, you can [access `merkle-btree` via unpkg (CDN)](https://unpkg.com/merkle-btree/), download the source, or point your package manager to the url.

`merkle-btree` is compiled as a collection of [CommonJS](http://webpack.github.io/docs/commonjs.html) modules & [ES2015 modules](http://www.2ality.com/2014/09/es6-modules-final.html) for bundlers that support the `jsnext:main` or `module` field in package.json (Rollup, Webpack 2)

The `merkle-btree` package includes precompiled production and development [UMD](https://github.com/umdjs/umd) builds in the [`dist` folder](https://unpkg.com/merkle-btree/dist/). They can be used directly without a bundler and are thus compatible with many popular JavaScript module loaders and environments. You can drop a UMD build as a [`` tag](https://unpkg.com/merkle-btree) on your page. The UMD builds make `merkle-btree` available as a `window.merkleBtree` global variable.

### Usage

```js

var ipfsAPI = require('ipfs-api');
var ipfs = ipfsAPI('localhost', '5001', {protocol: 'http'});
var lib = require('merkle-btree');

// Store entries into a merkle tree on IPFS
var storage = new lib.IPFSStorage(ipfs);
var tree = new lib.MerkleBTree(storage);
tree.put('key', 'value').then(console.log); // outputs tree IPFS file hash after inserting key
tree.get('key').then(console.log); // 'value'
tree.searchText('k').then(console.log); // [ { key: 'key', value: 'value' } ]

// Read-only storage using an IPFS gateway - good for serverless browser apps
var storage2 = new lib.IPFSGatewayStorage('https://identi.fi');
lib.MerkleBTree.getByHash('QmWXBTuicL68jxutngJhFjAW7obuS38Yi8H3bNNHUnrB1V/identities')
.then(function(tree2) {
  return tree2.get('sirius@iki.fi');
})
.then(console.log);

```

### configuration

You can pass in extra options as a configuration object (➕ required, ➖ optional, ✏️ default).

```js

import merkleBtree from 'merkle-btree';

```

➖ **property** ( type ) ` ✏️ default `
 📝 description
 ❗️ warning
 ℹ️ info
 💡 example

### methods

#### #name

```js

merkleBtree

```

### Examples

See [`example`](example) folder or the [runkit](https://runkit.com/mmalmi/merkle-btree) example.

[Identi.fi](https://identi.fi) identity and message indexes are built on the library.

### License

The code is available under the [MIT](LICENSE) license.

### Contributing

We are open to contributions, see [CONTRIBUTING.md](CONTRIBUTING.md) for more info.

### Misc

This module was created using [generator-module-boilerplate](https://github.com/duivvv/generator-module-boilerplate).
",,2016-12-28T10:03:40Z,2018-08-07T19:41:38Z,2,2,28,8,"('mmalmi', 88), ('amark', 2)",0,0,
boostorg/boost,Super-project for modularized Boost,"# Boost C++ Libraries

The Boost project provides free peer-reviewed portable C++ source libraries.

We emphasize libraries that work well with the C++ Standard Library. Boost
libraries are intended to be widely useful, and usable across a broad spectrum
of applications. The Boost license encourages both commercial and non-commercial use
and does not require attribution for binary use.

The project website is www.boost.org, where you can obtain more information and
[download](https://www.boost.org/users/download/) the current release.
",,2013-01-13T15:59:31Z,2024-06-18T04:04:31Z,206,139,6753,298,"('boost-commitbot', 6856), ('vprus', 3256), ('dabrahams', 3254), ('jzmaddock', 3169), ('hkaiser', 2592), ('jsiek', 2039), ('danieljames', 1987), ('Beman', 1712), ('DougGregor', 1629), ('Eric Niebler', 1490), ('grafikrobot', 1372), ('djowel', 1316), ('robertramey', 1178), ('pdimov', 903), ('jensmaurer', 848), ('rogeeff', 829), ('JeffGarland', 820), ('Aleksey Gurtovoy', 807), ('turkanis', 773), ('chriskohlhoff', 672), ('jewillco', 619), ('joaquintides', 611), ('Andreas Huber', 557), ('stevensmi', 553), ('swatanabe', 540), ('thorsten-ottosen', 510), ('igaztanaga', 447), ('Ralf W. Grosse-Kunstleve', 373), ('Anthony Williams', 371), ('rxg', 347), ('jurko-gospodnetic', 325), ('viboes', 318), ('Eric Friedman', 298), ('Emil Dotchevski', 278), ('Gennaro Prota', 225), ('mclow', 221), ('tschw', 215), ('Vesa Karvonen', 187), ('barendgehrels', 184), ('Pavol Droba', 182), ('Lastique', 168), ('Jaakko Järvi', 167), ('Markus Schöpflin', 164), ('Daniel Wallin', 163), ('fmhess', 163), ('pmenso57', 162), ('Niels Dekker', 156), ('pabristow', 153), ('Misha Bergal', 144), ('jhunold', 133), ('toonknapen', 131), ('fcacciola', 131), ('Bruno da Silva de Oliveira', 127), ('henry-ch', 125), ('alnsn', 121), ('Michael Glassford', 119), ('oe1rsa', 117), ('silene', 112), ('guwi17', 112), ('Samuel Krempp', 109), ('asutton', 104), ('Belcourt', 103), ('Joachim Faulhaber', 102), ('thwitt', 96), ('Boris Gubenko', 94), ('Neil Groves', 94), ('biochimia', 87), ('matthiastroyer', 86), ('straszheim', 86), ('William E. Kempf', 86), ('brycelelbach', 85), ('avertleyb', 84), ('CTMacUser', 82), ('Martin Wille', 81), ('Stefan Slapeta', 80), ('apolukhin', 78), ('danielmarsden', 77), ('Darin Adler', 76), ('burbelgruff', 72), ('Ben Hanson', 66), ('patak-dev', 64), ('Sebastian Redl', 64), ('Christopher Schmidt', 61), ('Jan Gaspar', 55), ('olk', 46), ('simoluk', 45), ('Björn Karlsson', 44), ('adtompkins', 43), ('Victor A. Wagner Jr.', 43), ('goerch', 41), ('boost-commitbot', 40), ('aaw', 39), ('nobody', 39), ('glenfe', 39), ('AlisdairM', 38), ('frabar666', 38), ('nmusatti', 38), ('timblechmann', 37), ('hljin2000', 34), ('chhenning', 31), ('d-frey', 31), ('stefanseefeld', 29), ('Sascha Ochsenknecht', 28), ('ngedmond', 28), ('yimyom', 28), ('DaveDeakins', 26), ('Caleb Epstein', 25), ('Stephen Cleary', 24), ('Lubomir Bourdev', 23), ('Fredrik Blomqvist', 22), ('hervebronnimann', 22), ('Jonathan Brandmeyer', 20), ('Hubert Holin', 19), ('John R. Bandela', 16), ('christophercurrie', 15), ('Lie-Quan Lee', 14), ('Terje Slettebø', 13), ('Samuel Krempp', 13), ('Itay Maman', 13), ('djenkins60', 12), ('asydorchuk', 11), ('Daniel Walker', 11), ('imikejackson', 11), ('ChrisJefferson', 10), ('rasky', 10), ('jayayedee', 10), ('Joseph Gauterin', 10), ('Raoouul', 9), ('Matthias Schabel', 9), ('Gottfried Ganßauge', 9), ('eldiener', 9), ('ericniebler', 8), ('sdarwin', 7), ('sithhell', 7), ('Sohail Somani', 7), ('nikiml', 7), ('HighCommander4', 7), ('lcaminiti', 7), ('artyom-beilis', 7), ('David Dean', 6), ('jhellrung', 6), ('TheJCAB', 6), ('jwakely', 6), ('grisumbras', 5), ('uid30850', 5), ('mjcaisse', 5), ('mcalabrese', 5), ('Larry Joe Evans', 5), ('Andrey Melnikov', 5), ('sabel83', 4), ('Christopher Hite', 4), ('Jerry Dy', 4), ('mloskot', 4), ('spreadsort', 3), ('diederich', 3), ('rhdunn', 3), ('mdrodg', 3), ('macmurrett', 3), ('headmyshoulder', 3), ('kivadiu', 3), ('Chris Newbold', 3), ('brandon-kohn', 3), ('uid30600', 2), ('ukoethe', 2), ('tanzislam', 2), ('sylvainpion', 2), ('rkwk', 2), ('Pedro Ferreira', 2), ('MarcelRaad', 2), ('gordonwoodhull', 2), ('djarek', 2), ('Ben Hutchings', 2), ('Flamefire', 2), ('awulkiew', 2), ('morinmorin', 1), ('nealef', 1), ('Kojoley', 1), ('orgads', 1), ('pfultz2', 1), ('rcdailey', 1), ('liewegas', 1), ('Stjepan Rajko', 1), ('trel', 1), ('tzlaine', 1), ('reportbase', 1), ('Tom Westerhout', 1), ('wzssyqa', 1), ('loongson-zn', 1), ('dreifachstein', 1), ('huangqinjin', 1), ('kaalus', 1), ('ldionne', 1), ('kylelutz', 1), ('Jürgen Hunold', 1), ('Frederick Akalin', 1), ('ENikS', 1), ('dimztimz', 1), ('David Hawkes', 1), ('Daniel Nuffer', 1), ('gruenich', 1), ('brettc', 1), ('Andy Elvey', 1), ('akrzemi1', 1), ('andreas-schwab', 1), ('karzhenkov', 1), ('asomers', 1)",32,25,
google/blockly,The web-based visual programming editor.,"# Blockly

Google's Blockly is a library that adds a visual code editor to web and mobile apps. The Blockly editor uses interlocking, graphical blocks to represent code concepts like variables, logical expressions, loops, and more. It allows users to apply programming principles without having to worry about syntax or the intimidation of a blinking cursor on the command line. All code is free and open source.

![](https://developers.google.com/blockly/images/sample.png)

## Getting Started with Blockly

Blockly has many resources for learning how to use the library. Start at our [Google Developers Site](https://developers.google.com/blockly) to read the documentation on how to get started, configure Blockly, and integrate it into your application. The developers site also contains links to:

- [Getting Started article](https://developers.google.com/blockly/guides/get-started/web)
- [Getting Started codelab](https://blocklycodelabs.dev/codelabs/getting-started/index.html#0)
- [More codelabs](https://blocklycodelabs.dev/)
- [Demos and plugins](https://google.github.io/blockly-samples/)

Help us focus our development efforts by telling us [what you are doing with
Blockly](https://developers.google.com/blockly/registration). The questionnaire only takes
a few minutes and will help us better support the Blockly community.

### Installing Blockly

Blockly is [available on npm](https://www.npmjs.com/package/blockly).

```bash
npm install blockly
```

For more information on installing and using Blockly, see the [Getting Started article](https://developers.google.com/blockly/guides/get-started/web).

### Getting Help

- [Report a bug](https://developers.google.com/blockly/guides/modify/contribute/write_a_good_issue) or file a feature request on GitHub
- Ask a question, or search others' questions, on our [developer forum](https://groups.google.com/forum/#!forum/blockly). You can also drop by to say hello and show us your prototypes; collectively we have a lot of experience and can offer hints which will save you time. We actively monitor the forums and typically respond to questions within 2 working days.

### blockly-samples

We have a number of resources such as example code, demos, and plugins in another repository called [blockly-samples](https://github.com/google/blockly-samples/). A plugin is a self-contained piece of code that adds functionality to Blockly. Plugins can add fields, define themes, create renderers, and much more. For more information, see the [Plugins documentation](https://developers.google.com/blockly/guides/plugins/overview).

## Contributing to Blockly

Want to make Blockly better? We welcome contributions to Blockly in the form of pull requests, bug reports, documentation, answers on the forum, and more! Check out our [Contributing Guidelines](https://developers.google.com/blockly/guides/modify/contributing) for more information. You might also want to look for issues tagged ""[Help Wanted](https://github.com/google/blockly/labels/help%20wanted)"" which are issues we think would be great for external contributors to help with.

## Releases

We release by pushing the latest code to the master branch, followed by updating the npm package, our [docs](https://developers.google.com/blockly), and [demo pages](https://google.github.io/blockly-samples/). If there are breaking bugs, such as a crash when performing a standard action or a rendering issue that makes Blockly unusable, we will cherry-pick fixes to master between releases to fix them. The [releases page](https://github.com/google/blockly/releases) has a list of all releases.

We use [semantic versioning](https://semver.org/). Releases that have breaking changes or are otherwise not backwards compatible will have a new major version. Patch versions are reserved for bug-fix patches between scheduled releases.

We now have a [beta release on npm](https://www.npmjs.com/package/blockly?activeTab=versions). If you'd like to test the upcoming release, or try out a not-yet-released new API, you can use the beta channel with:

```bash
npm install blockly@beta
```

As it is a beta channel, it may be less stable, and the APIs there are subject to change.

### Branches

There are two main branches for Blockly.

**[master](https://github.com/google/blockly)** - This is the (mostly) stable current release of Blockly.

**[develop](https://github.com/google/blockly/tree/develop)** - This is where most of our work happens. Pull requests should always be made against develop. This branch will generally be usable, but may be less stable than the master branch. Once something is in develop we expect it to merge to master in the next release.

**other branches:** - Larger changes may have their own branches until they are good enough for people to try out. These will be developed separately until we think they are almost ready for release. These branches typically get merged into develop immediately after a release to allow extra time for testing.

### New APIs

Once a new API is merged into master it is considered beta until the following release. We generally try to avoid changing an API after it has been merged to master, but sometimes we need to make changes after seeing how an API is used. If an API has been around for at least two releases we'll do our best to avoid breaking it.

Unreleased APIs may change radically. Anything that is in `develop` but not `master` is subject to change without warning.

## Issues and Milestones

We typically triage all bugs within 1 week, which includes adding any appropriate labels and assigning it to a milestone. Please keep in mind, we are a small team so even feature requests that everyone agrees on may not be prioritized.

## Good to Know

- Cross-browser Testing Platform and Open Source <3 Provided by [Sauce Labs](https://saucelabs.com)
- We test browsers using [BrowserStack](https://browserstack.com)
",,2013-10-25T21:13:33Z,2024-06-17T15:53:39Z,231,212,12213,449,"('rachel-fenichel', 1943), ('NeilFraser', 1173), ('BeksOmega', 737), ('dependabotbot', 560), ('alschmiedt', 482), ('kozbial', 453), ('samelhusseini', 446), ('gonfunko', 388), ('translatewiki', 260), ('cpcallen', 256), ('AnmAtAnm', 226), ('Monica Kozbial', 211), ('maribethb', 199), ('seanlip', 159), ('marisaleung', 103), ('Nikerabbit', 90), ('picklesrus', 81), ('RoboErikG', 63), ('espertus', 53), ('moniika', 52), ('siebrand', 35), ('ericblackmonGoogle', 30), ('quachtina96', 24), ('edauterman', 23), ('duzc2', 23), ('drigz', 22), ('daarond', 20), ('CoryDCode', 20), ('carlosperate', 18), ('btw17', 13), ('Immortalin', 12), ('timdawborn', 11), ('nadyafebi', 10), ('jschanker', 9), ('amber-cd', 9), ('Sam El-Husseini', 8), ('trodi', 8), ('johnnesky', 7), ('hpnrep6', 7), ('DubeySandeep', 7), ('jollytoad', 7), ('K-ran', 7), ('gokula-binary', 7), ('kchadha', 6), ('MicrosoftSam', 6), ('Kaworru', 6), ('dlaliberte', 5), ('shirletan', 5), ('alschmiedt', 5), ('miguel76', 5), ('MarkusBordihn', 4), ('navilperez', 4), ('ewpatton', 4), ('zochris', 4), ('carloslfu', 4), ('vicng', 4), ('tweini', 4), ('derwehr', 4), ('pkendall64', 4), ('mehdi-yeganeh', 4), ('halitanildonmez', 4), ('Brian Geppert', 4), ('svbatalov', 4), ('Apoorvgarg-creator', 4), ('allisonshaw', 4), ('mmathrani', 3), ('zgtm', 3), ('clementcontet', 3), ('varshneydevansh', 3), ('asunwoo98', 3), ('yamadayutaka', 3), ('gregdyke', 3), ('bsampada7', 3), ('mark-friedman', 3), ('jcyang43', 3), ('ebrahim95', 3), ('fsih', 3), ('epicfaace', 3), ('0scvr', 2), ('pjkui', 2), ('RaniSputnik', 2), ('shakao', 2), ('harbaum', 2), ('timgates42', 2), ('petrusek', 2), ('TonyLianLong', 2), ('treypisano', 2), ('Rgtemze', 2), ('itsjayway', 2), ('michellammertink', 2), ('truongductri01', 2), ('tojimjiang', 2), ('aaimio', 2), ('TechplexEngineer', 2), ('GermanBluefox', 2), ('twodee', 2), ('gnarf', 2), ('ericrosenbaum', 2), ('nixgc', 2), ('HollowMan6', 2), ('ImgBotApp', 2), ('tarling', 2), ('madCode', 2), ('mikeharv', 2), ('naveensrinivasan', 2), ('niccokunzmann', 2), ('CleoQc', 2), ('Noah Glaser', 2), ('gomercin', 2), ('Omer Karaduman', 2), ('RomarQ', 1), ('rvsit', 1), ('Samridhi-98', 1), ('sam301100', 1), ('SunMoon97', 1), ('sayalikandarkar', 1), ('svipul', 1), ('Asymtode712', 1), ('SophieNguyen113', 1), ('ensonic', 1), ('TangHu2018', 1), ('thomasballinger', 1), ('TrottPilgrim', 1), ('tjgq', 1), ('TiaraIsTan', 1), ('riknoll', 1), ('RichDoherty', 1), ('rexpie', 1), ('rashmi29', 1), ('ramyaram2092', 1), ('Grahack', 1), ('piwysocki', 1), ('paulkaplan', 1), ('Patrick', 1), ('phptuts', 1), ('snitin315', 1), ('NAllred91', 1), ('nicholascioli', 1), ('neerajkumarc', 1), ('nhzandi', 1), ('ywwhack', 1), ('BBI-YggyKing', 1), ('yang', 1), ('windwood-xmu', 1), ('vhermecz', 1), ('lindt', 1), ('seldomU', 1), ('devbysn', 1), ('release-pleasebot', 1), ('randrei12', 1), ('priya-rjb', 1), ('potaracom', 1), ('mirandago', 1), ('microsoftsam', 1), ('mfallihee', 1), ('laurensvalk', 1), ('ktbytechibong', 1), ('koenvanwijk', 1), ('jossiey', 1), ('jandrewb', 1), ('ivalkshfoeif', 1), ('humera811', 1), ('gpfernandezflorio', 1), ('g-rocket', 1), ('worrycare', 1), ('devilhyt', 1), ('vetrovosk', 1), ('ahigerd', 1), ('ZufengW', 1), ('alicialics', 1), ('Winston', 1), ('gagiopapinni', 1), ('fishuke', 1), ('zfangqijun', 1), ('devnook', 1), ('eanders-ms', 1), ('Emma Dauterman', 1), ('elvisvoer', 1), ('dimaaan21', 1), ('batradhruv', 1), ('Devesh21700Kumar', 1), ('DerekTBrown', 1), ('DenrizSusam', 1), ('davidfstr', 1), ('ciaranj', 1), ('ChrisJaunes', 1), ('cdjackson', 1), ('systemc12ashe', 1), ('andyanday33', 1), ('benjie', 1), ('IAmAnubhavSaini', 1), ('ajpal', 1), ('AndrewWyer-Dover', 1), ('cshung', 1), ('ananta', 1), ('Zauzolkov', 1), ('lotusotho', 1), ('aku1310', 1), ('abhinavsagar', 1), ('abdul-alhasany', 1), ('Abby Schmiedt', 1), ('ntzm', 1), ('MohammedBelkacem', 1), ('Muthiah Annamalai', 1), ('MooseJ', 1), ('goldenkairos', 1), ('m93a', 1), ('markfinn', 1), ('Madeeha', 1), ('lukas-dachtler', 1), ('Lord Niels N. Horn', 1), ('lizlooney', 1), ('lauraharker', 1), ('takaokouji', 1), ('waitingcheung', 1), ('Kenny2github', 1), ('Ke, Mingze', 1), ('Katelyn Mann', 1), ('justingeeslin', 1), ('Josh Lory', 1), ('jordiorlando', 1), ('jimmo', 1), ('jano42', 1), ('jasperpilgrim', 1), ('vrana', 1), ('isabelle49', 1), ('isaac-dunn', 1), ('phoenixchinar', 1), ('himanshujaidka', 1), ('hasso', 1), ('HadyBazzi', 1)",121,109,
bsl/GLFW-b-demo,GLFW-b demo,"This is a demonstration of [GLFW-b][1] allowing the user to interact with
spinning gears using cursor keys, mouse, scroll wheel, and joystick.

Here's a [screenshot][2].

[1]: https://github.com/bsl/GLFW-b
[2]: http://i.imgur.com/JZKwVSu.png
",,2009-11-28T06:50:03Z,2018-10-04T16:41:18Z,4,4,23,7,"('bsl', 55), ('yairchu', 3), ('Eelis', 1), ('JavierJF', 1)",2,2,
er1/s228,SOEN 228 Lab Manual,"# Introduction

This project is designed to show the internal workings of computer.

Topics that will be covered, include:

- Machine Language
- The Central Processing Unit (CPU)
  - How a CPU performs its operations
  - Instruction Fetch-Execute sequence
  - How they are implemented
- The Control Unit
- Random Access Memory (RAM)
- Data Storage

Due to the nature of this project, this manual is subject to change over time to adapt to the progress of the students.

In this project you will be building a simple computer with a central processing unit with support for a few instructions and some memory. The instructions that will be implemented are simple operations such moving data between registers and performing simple addition operations.

By the end of the project, your computer should be able to demonstrate the operation of the following program:

```AsciiDoc
MOV A, B
INC B
MOV B, A
INC B
```

# Project Components

## Power Supply

In this project, we will be using a standard 5 volt direct current power supply. We will be connecting the positive terminal to our supply rail called `VCC` and this is by convention red colored. The negative terminal will be connected to our reference rail called ground or `GND` and is by convention black but may appear at times as blue.

In this lab, we will use `VCC`, `5V` and `+5V`

## Breadboard

In this project, we will be using a prototyping project board more commonly known as a breadboard. It contains small holes which share an electric connection with holes in the same row or column. Note that only the holes called ""power rails"" connect along their column, designated by a red or blue line, taking up the sides of the prototyping area. WIthin the prototyping area, components are NOT connected in columns, but by rows. Be sure you know which connects in which way. There are two areas on the breadboard: the prototyping area and the supply rails.

The prototyping area located in the middle is where you will place the components in this project. The prototyping area has a grid of holes, identified by a letter and number written on the top and side. These holes are electrically connected in a line of five (i.e. pins 1A through 1E are all connected but not to 1F or 2A). There is a gap in the middle which will be where you put the center of your DIP (Dual Inline Package) components so that you can make connections to their pins. This means that ALL chips, LEDs, and switches need to ""straddle"" the gap along the middle to properly function.

The supply rails are arranged in two rows connected in a long line with a red or blue stripe next to them. They are electrically connected as indicated by the line next to them (i.e. a break in the line means a break in the connection). These are used for your power supply connection and you should attach them to `VCC` or `GND` for red and blue respectively. Note that their value will never change, once connected, VCC wil always be ""high"" and GND will always be ""low"".

![A breadboard graphic](https://rawgithub.com/er1/s228/master/breadboard.svg)

## Wires

We will be using 22 gauge solid core copper wire for this project.

The wires should be properly cut and the plastic insulation must be stripped from the inner conductor before use. The amount of insulation stripped should nominally expose 6mm (1/4 inches) of wire. To ensure proper wire organization, measure the length needed, then add 12 mm to that length for the nonisulated ends, before cutting and stripping it. Make sure to keep to a proper wiring theme, to make debugging easier.

## Integrated Circuit Chips

We will be using standard 300mil plastic Dual Inline Package (DIP) Integrated circuit chips for this project. Again, remember that ALL chips, LEDs, and switches need to ""straddle"" the gap along the middle to properly function.

## Passive Components
### Resistor

We will be using 330 &Ohm; resistors as a means to limit current through LEDs and to serve as pull-ups on switches. The clock circuit will make use of two 22 K&Ohm; resistors as part of a resistor-capacitor (RC) tank circuit. These connect along a column, and are required for proper LED functionality.

### Capacitor

We will be using a capacitor in the clock circuit as part of the RC tank circuit. These connect similarly to wires, linking two rows together. They do not need to be placed at the center, as they are not DIP chips.

## Light Emitting Diodes

We will be using a strip of Light Emiting Diodes (LEDs) as a means of visualizing binary data values. These must always be using in series with a resistor so that they will not burn out.

## Switches

We will be using a strip of switches to toggle between data values. Make sure to determine which side is 'on' and which side is 'off' before wiring.

# Data Representation

Inside the computer, we need a way of representing information, however, the only means we have is through voltage levels. The information we can store on a register is called a bit and is the absence or presence of a voltage potential relative to a common reference. The convention we have adopted is that the presence of a voltage represents a logical `1` and the absence of a voltage represents a logical `0`

## Binary

Decimal | Binary | Decimal | Binary | Decimal | Binary | Decimal | Binary
:-:|:-:|:-:|:-:|:-:|:-:|:-:|:-:
0 | `0000` | 1 | `0001` | 2 | `0010` | 3 | `0011`
4 | `0100` | 5 | `0101` | 6 | `0110` | 7 | `0111`
8 | `1000` | 9 | `1001` | 10 | `1010` | 11 | `1011`
12 | `1100` | 13 | `1101` | 14 | `1110` | 15 | `1111`

# Logic Gates

All logic on an IC is built from logic gates. Logic gates are a combination of transistors to form logical boolean operations. The simplest gates to produce are the NOT gate, NAND gate and NOR gate. Using these gates, more familiar gates such as AND and OR can be built.



# Project 

## Introductory Labs

### Equipment and Data Representation

In this lab, we will introduce ourselves to the equipment in the lab. We will also look at what is required to represent data electrically and how to get output from it. We will set up a simple circuit to produce data values with a switch, visualize the value with an LED and then use the value produced as an input to a logic gate and then visualize the output of a logic gate.

You will have been issued a lab kit containing:

- A project board
- A power supply
- A wire cutting and stripping tool
- A chip removing tool

The project kits issued this year have the project board integrated with the power supply, an additional breadboard is also included in case you run out of space on your project board later on in the lab.

#### Before You Begin

This is a lab which deals with electricity, your lab demonstrator should have given you a quick talk about the safety of dealing with electricity. While the voltage and current levels are not high enough to cause serious injury to anyone caution must still be taken with this equipment. The equipment may also become damaged if wired improperly. If at any point you are not sure about the setup of your project board, call over your lab instructor.

__If something is not working or components become hot, turn off the power.__ Look for the issue or call over your lab instructor if needed.

__IF YOU SMELL SMOKE OR BURNING, CUT THE POWER ON YOUR POWER SUPPLY IMMEDIATELY AND CALL OVER YOUR LAB INSTRUCTOR!__

#### Steps

1. Take out your project board from the kit that was issued to you, verify that it works.
2. Hook up all supply rails to +5V and Ground on the power supply.
3. Hook up a switch pack and LED pack.
4. Use the switch to control the LED.
5. Hook up a logic gate and use switches for its input and an LED for its output.

![Example circuit for Lab 1](https://rawgithub.com/er1/s228/master/lab1_bb.svg)

### Circuits using Logic ICs (Half Adder)

In this lab, we will look at the circuits involved in forming logical equations. The circuit we will be using is called the half-adder which is used for adding two bits together to get a result.

In using two bits, we need two inputs, one to represent each bit. Because we are using the binary number system, we can potentially end up with two digits in the result since our addition overflows or carries into another digit (in the case of 1+1). This means we will need two outputs to represent the result.

We will be representing our inputs as A and B and our outputs as C and S. S will be the sum of the two digits and C will be the value that carries over.

```
  A
+ B
---
 CS
```
In order to construct our circuit, we will need to know the equation that represents each bit in the result. To do this, we can construct a truth table which can help us in determining the equations.

| A | B | &bull; | C | S |
|:-:|:-:|:-:|:-:|:-:|
| 0 | 0 | = | 0 | 0 |
| 0 | 1 | = | 0 | 1 |
| 1 | 0 | = | 0 | 1 |
| 1 | 1 | = | 1 | 0 |

The derived equations are constructed from the primitive Boolean algebra operations AND OR and NOT. These operations have corresponding logical gates which are available as DIP chips in the lab.

- The NOT gate is part number 7404
- The AND gate is part number 7408
- The OR gate is part number 7432

You will need to construct the truth table above as a configuration of logic gates such that the inputs A and B are provided by switches and the outputs C and S are visible on LEDs.

- To do this, you will need to construct the Boolean algebra equation for C and S using only the variables A and B.
- Using these equations you will modify them to use only the AND, OR and NOT operators.
- This equation will allow you to draw the gate diagram with the gates availible to you.
- Use this gate diagram and the IC pinouts provided at the end of the manual to construct the circuit.

Reminder:
- The part numbers on the chip may vary from chip to chip so ignore the letters.
- SN74HCT04 would be referred to simply as 7404.

### Latches, Flip-Flops and Registers

In the last lab, we looked at how we can construct a circuit for any given truth table. In this lab, we will look at how we can use this and some new parts to build other components of a computer. 

## Latches

A computer does not always require that the input for its operations be present at all times. It uses memory to hold inputs for when it needs them and can store results to memory for later. Latches provide the facility to do this and are build by a cross-coupled pair of NAND gates or NOR gates. Cross-coupling is when the output of one gate is used as the input for the other and vice-versa. This creates a feedback in the circuit which is used to store a one bit value. The other inputs allow the feedback to be changed thus changing the stored bit value. This is what is known as an R-S latch. It has two inputs (R and S) and two outputs (Q and ~Q).

| R | S | Latch Behavior | 
|:-:|:-:| -------------- |
| 0 | 0 | Retains value  |
| 1 | 0 | Stores a 0     |
| 0 | 1 | Stores a 1     |
| 1 | 1 | Undefined      |

The R-S latch does not provide the ideal means for sampling a value to store. For this, we add some logic in front of the RS latch to create a D latch. With the D latch we have inputs D and E which feed R and S so that when E is 0, we retain a value and when E is 1, we store the value on D.

| D | E | &bull; | R | S |
|:-:|:-:|:-:|:-:|:-:|
| X | 0 | = | 0 | 0 |
| 0 | 1 | = | 1 | 0 |
| 1 | 1 | = | 0 | 1 |

X in this case is used to denote the ""Don't Care"" input where the value can be either 0 or 1 for this particular output as when E is 0 we are retaining a value and D is not used under this case.

![Gate Diagram of D Type Latch](http://upload.wikimedia.org/wikipedia/commons/2/2f/D-Type_Transparent_Latch.svg)

In this part of the lab, you will construct a D type latch and test its ability to store a value.

![Example circuit for Lab 3](https://rawgithub.com/er1/s228/master/lab3_bb.svg)

## Flip-Flops

Latches are level-triggered which in the case of D latches, means that when the level of E is high (E = 1) it stores the value from D which may change change while E is high. This is not an ideal behaviour because we would like to sample a particular value at a particular time. This behavior is called edge-triggered and is the moment when a value changes in a particular direction. The positive edge or rising edge is when a value goes from 0 to 1 and the negative edge or falling edge is when a value goes from 1 to 0. 

A flip-flop is two chained D-type latches such that the D input for the second comes from the Q output of the first. E is inverted for the second one. This means that at all times, E is keeping the value locked for exactly one of the latches in the flip-flop.

[Wikipedia Page on Flip-Flops](http://en.wikipedia.org/wiki/Flip-flop_%28electronics%29)

#### To include in Lab Report 1

- An explanation of how data is represented electrically
- How logic gates relate to Boolean Algebra
- The equations that you have derived for the half-adder
- A gate diagram for those equations
- A truth table for a __full-adder__ circuit
- A gate diagram for and an explanation of a D latch

Lab reports are due two weeks after they are assigned.

There will be a 10% __deduction__ on the lab grade if you do not include both your name and group number on your report.

## Troubleshooting 101

### Some pointers when building your circuit

1.  Always use a color convention!!! ( VCC = RED, Ground = BLACK)  `TIP : it will help you to use the same color when you want to propagate your clock signal throughout your breadboard`

2. Please use shorter wires when you want to connect something. Your breadboard will look much cleaner and will cause you less problems if you even need to do some debugging later on. If it shorts, it won't work.

3. Always try to wire your circuit as neatly as possible. 

4. Have a designated wire cutter.


### Troubleshooting

1. Make sure that you are using the correct chip and that its pins aren't bended. `TIP: some of the chips are being used for a second time, so the pins might already be bent or will bend when you push them in`

2. Check if your ground and power pins of all your logic chips are connected correctly.

3. During the construction of your circuit, you may have incorrectly  connected a cable. To find this error, you will need to create a ""debugging cable"". 
  * Connect 1 long red cable to a LED in series with a resistor. `IF YOU DO NOT ADD THE RESISTOR, IT WILL BURN THE LED. Since red is used for VCC in your color convention, no one will be mislead in error that it is a required cable in your circuit.`  
  *  When you will connect this cable to a random pin on your breadboard, it will show you its data.
  +  **E.G.** 
      You want to make sure that you have spread your clock signal correctly on your breadboard. `TIP: use the same color eg. GREEN`
      + Connect your 'debug cable' to a pin that is supposed to be receiving a clock signal. If your debug LED is not showing you the clock signal, then you have found your problem, however, if it is showing the correct pattern, then you can proceed to the next pin to be tested. 
      + This process can be used to verify if a chip is receiving the correct input or producing the good output. 
      + `Faulty chips can be found using this method`

4. You may also add more LEDs on you breadboard to show intermediate result. It could help you isolate problem later on. 

### Advanced Debugging with Arduino

Some parts of the lab may be difficult to debug with traditional techniques without modifications to the circuit. For example, the bus serves multiple purposes and contains different values each clock phase. To debug a certain phase, it may be useful to use an external circuit such as an Arduino to detect the wanted clock pulse and read the bus only during that micro operation. This can be achieved with the Arduino using it's interrupt functionality to execute the code reading probe lines only when the interrupt pin is activated. The included arduino code works by attaching a clock pulse to pin 2, and then using pins 4 through 7 as probes. Each time pin 2 is activated, it will print out the values of pins 4 to 7 over serial (To access the serial monitor in the Arduino IDE: Tools > Serial Monitor). For example, if one would want to debug that the programming counter is properly sending its value to the MAR latch, one could just connect pin 2 of the Arduino to pin 9 of the MAR, pin 4 (Arduino) to pin 13 (74175), and pin 5 to pin 12.

[Arduino code](https://rawgithub.com/Netopya/s228/master/ino/ArduinoInterruptDebugger/ArduinoInterruptDebugger.ino)

## Project Labs

At this phase, we will start building the lab project for the rest of the course. You may clear off everything on your project board up until now as it will not be needed. Pay close attention to wiring as from now on we will be keeping everything on the project until the end of the project and poor wiring will make locating mistakes in the lab much more difficult.

### System Clock / Clock Signal Generator

In this lab, you will be building system clock for your computer. The system clock is an alternating signal changing from 0 to 1 and back at a regular interval. This signal is used to provide a changing input which can be used to make the computer work autonomously. Without this signal, the computer would need the user to make a change in inputs for every phase of computation similarly to how in the preliminary labs, our outputs only ever changed when an input was changed.

The primary function of a CPU is to perform a set of operations called instructions. These instructions have an almost one-to-one relationship with lines of code in assembler language (which will be seen in the tutorial for this class) and perform operations such as copying a value from one register to another or more complex operations such as arithmetic and memory access. These instructions may need to occur in several phases so the system clock needs to be expanded into several clock signals where we will have one for each phase. In this lab, we will be constructing a fixed four phase clock generator (meaning that each instruction has four phases, even if some do not use all of them and that number is fixed).

We will introduce two new logic chips for this purpose.

- The 555 chip which is a chip used to control timing. We will wire it up in asynchronous mode so that it generates the alternating signal from one to zero. This setup uses an RC tank circuit to control the timing of the signal meaning the values of the resistors and capacitor control how fast the value changes.

- The 74164 chip which is a serial-in-parallel-out (SIPO) shift register. A SIPO shift register is a chip with several flip-flops chained up internally so that all the outputs of each flip-flop are accessible on their own pin and where the inputs are provided by the preceding flip-flop's output. The first input is made accessible on a pin which we use to shift values in.

We will be using the clock signal to generate a clock for the shift register so that it can shift values on its own. The value that we shift in will be based on the values that are already in the register and will be such that there is only one zero in the register (i.e. shifting in 1 unless the register contains all 1s).

![Example circuit for Lab 4](https://raw2.github.com/er1/s228/master/lab4_bb.png)

### Buses and Registers

In this lab, you will be building the CPU buses for your computer. A CPU bus is a common system such that registers can move values between each other. In this lab we will build two buses, one where all the registers outputs are attached to one of the ALU inputs, and one where the register inputs are attached to the ALU output. Since the ALU has two inputs, the remaining input will be attached to a controllable 0 or 1.

A Register is a Flop-Flop with a Tri-State buffer attached to make the output controllable. This gives a device which can be attached to a bus for both inputs and outputs. The register will read off the bus attached at its input just as a flip flop would when its enable line is triggered, this works because one output can feed several inputs. The Tri-State buffer allows the output to be controlled by electrically disconnecting it so that we can allow only one value to be output on the bus at a time. Without it, the bus would be attached to more than one output leading to conflicting signals on the bus.

[Wikipedia Page on Buses](http://en.wikipedia.org/wiki/Bus_(computing))

[Wikipedia Page on Registers](http://en.wikipedia.org/wiki/Processor_register)

...

![Example circuit for Lab 5](https://raw2.github.com/er1/s228/master/lab5_bb.png)

#### To include in Lab Report 2

- An explanation of why a clock signal is needed in a computer
- The relation between the clock signal and instruction phase signals and why we need instruction phases
  - The clock signal is the signal that alternates between zero and one
  - The phase signals are the four signals that we brought out to the LEDs
- How we derived the phase signals (hint: shift register and feedback)
  - hint: shift register and feedback
- An explanation of the general architecture of the computer
- Describe the functions of an ALU and compare it to what we have built in the lab
- Describe how one would perform the register transfer language operation A -> B

Lab reports are due two weeks after they are assigned.

There will be a 10% __deduction__ on the lab grade if you do not include both your name and group number on your report.

### Memory

In this lab, you will be building the RAM for your computer, it will be comprised of 4 registers selected through a decoder. This will give us a 4x4 memory unit with 4 data lines and 2 address lines.

In a computer, we only have a small number of registers to store data. Typically, we need to store much more information than the registers provide us. For this reason, we use main memory. Main memory is a large array of memory units (typically flip flops) that we can access by choosing which unit we want access to through a register and performing operations to that unit as we normally would to a register. This means we need two special purpose registers in our CPU. We have a Memory Address Register (MAR) which picks which memory unit we want to access using its address (similar to an index for an array) and a Memory Data Register (MDR) which exposes the contents of a particular memory address to the CPU. It is important to note that the MAR is a write only register since we only ever specify memory locations and the MDR is not actually a register but a means of exposing memory as a register.

We are using four register as our memory units in this lab. These registers are are selected though a decoder. The decoder gets an address from the MAR and uses it to select which register should be active.

In this lab, we will also be including our Instruction Register (IR) which will be used in the next lab.

...

![Example circuit for Lab 6](https://raw2.github.com/er1/s228/master/lab6_bb.png)

####How to program the Memory

1. Select the memory adress
2. Set enabler to high
3. Set the desirable IR/Data switches to high
4. Set enabler to low and back to high to save the data

#### To include in Lab Report 3

- An explanation of how memory works
- The difference between registers and memory
- Did we build static memory or dynamic memory, what are the differences between them?
- How many address lines did we have and how many addresses did that give us?
- Assume that we are still using a 4 bit word size.  How many address lines and data lines would we need if we were to have had 8 words of memory? and for 16 words of memory?

Lab reports are due two weeks after they are assigned. __Lab report 3 is due the week of March 17.__

There will be a 10% __deduction__ on the lab grade if you fail to include your name or __group number__ on your report. There will be a 40% __deduction__ in lab grade if you fail to complete the labs before the lab report deadline.

`If you are unable to complete the lab before the deadline for technical reasons, there will be no grade penalty.` 
`Please inform your lab instructor before the deadline if this is the case`

### Control Unit

In this lab, we will be building the control unit for your computer. The control unit is what will control how the cpu handles machine language instruction.

`add1` = &not;( `phase1` &and; ( `phase3` &or; `ir1` ) )  
`pc out` = `phase1`  
`pc in` = `phase1`  
`a out` = `phase3` &or; &not;`ir4`  
`a in` = `phase3` &or; `ir2`  
`b out` = `phase3` &or; `ir4`  
`b in` = `phase3` &or; `ir3`  
`led latch` = `? in` &or; `clock`  
`mar latch` = `phase1` &or; `clock`

Notes: (1) You will need to remove any existing signals that were being fed to the chips that the control unit is not providing. This is to ensure that each input only gets one value.

(2) After implementing the control unit, the four LEDs that were previously counting might not be, this is normal. Attach `?_in` to `pc_in` and they should continue counting.

(3) To test if your mar latch and your led latch are latching or working correctly, you can attach a wire from the 9 pin of each latch to a working led light. Observe the resulting display patterns. Your mar latch light should act the same as your phase 1 light from your clock. Your led latch light should act the same as your phase 3 light from your clock. This means that your mar latch is latching at phase 1 and your led latch light is latching at phase 3. 

To verify if your equations are correct, you can debug the output of every equation by connecting each of them to a spare LED one by one, and changing the data in the instruction registers accordingly to verify its behaviour. For example, make your address lines fixed, and make every bit in the instruction register low except for `ir2`. If you verify the equation that is proposed for `a in`, this output must be always active when `ir2` is active. If you set `ir2` back to low again, `a out` should now become `phase3`. Similar logic can be applied to the output of `add1`, which becomes &not;`phase1` when `ir1` is active, and &not;(`phase1`&and;`phase3`) when `ir1` is low. If one of your outputs is not working correctly, backtrace them to the chips that are creating the equation. This is particularly important since WRONG CHIPS OFTEN END UP IN THE WRONG BOXES, AND CHIPS OFTEN HAVE A FEW PINS BURNT OUT. This is a way to correct these issues.

After implementing the control unit, the four LEDs that were previously counting might not be, this is normal. Attach `?_in` to `pc_in` and they should continue counting.

#### Signal description

* Lab 4: Clock Signal Generator
  - `phase1` is the first clock signal brought out to the LEDs 
  - `phase2` is the second clock signal brought out to the LEDs 
  - `phase3` is the third clock signal brought out to the LEDs 
* Lab 5: Registers
  - `add1` is pin 6 on the 74283  
  - `pc in` is pin 9 on the 74173 representing the PC register 
  - `pc out` is pin 1 on the 74173 representing the PC register 
  - `a in` is pin 9 on the 74173 representing the A register 
  - `a out` is pin 1 on the 74173 representing the A register 
  - `b in` is pin 9 on the 74173 representing the B register 
  - `b out` is pin 1 on the 74173 representing the B register 
  - `led latch` is pin 9 on the 74175 
* Lab 6: Memory
  - `mar latch` is pin 9 on the 74175 representing the MAR 
  - `ir1` comes from the bit 1 in the instruction register 
  - `ir2` comes from the bit 2 in the instruction register 
  - `ir3` comes from the bit 3 in the instruction register 
  - `ir4` comes from the bit 4 in the instruction register 

##### Signal names

- `ir1`: `+1`
- `ir2`: `Ain`
- `ir3`: `Bin`
- `ir4`: `Bout`/&not;`Aout`

### Running a Program

In this lab, we will store a program in memory and have your computer run it.

In the previous lab, we set up the control unit to have the computer control how data was moving through the bus. The control unit used a machine language instruction along with a the clock signal phase to control which registers were storing values and which output their value to control the data flow from the registers.

Recall that in the last lab, we assigned names to the bits of the instruction register (`ir3` became `Bin` and so on). These names were given since they signify a particular signal is to be active when that bit is active.

If we create a table of all the combinations for the instruction register, we can see which signals should be active for that instruction register value. With that knowledge we can see which registers are moving values and then derive register transfer notation for each of our instruction and subsequently name them accordingly.

We only want to look at the signals active during phase3 since phase1 is always adding one to PC and reading the instruction.

| Value &dagger; | Active signals                | Transfer Notation | Instruction Name |
| ----- | ----------------------------- | ----------------- | ---------------- |
| 0000 | `add1`, `a in`, `b in`, `b out` | B + 1 -> A, B    | *        |
| 0001 |         `a in`, `b in`, `b out` | B -> A, B        | *        |
| 0010 | `add1`,         `b in`, `b out` | B + 1 -> B       | Inc B    |
| 0011 |                 `b in`, `b out` | B -> B           | NOP      |
| 0100 | `add1`, `a in`,         `b out` | B + 1 -> A       | *        |
| 0101 |         `a in`,         `b out` | B -> A           | Mov A, B |
| 0110 | `add1`,                 `b out` | B + 1 -> &empty; | *        |
| 0111 |                         `b out` | B -> &empty;     | *        |
| 1000 | `add1`, `a in`, `b in`, `a out` | A + 1 -> A, B    | *        |
| 1001 |         `a in`, `b in`, `a out` | A -> A, B        | *        |
| 1010 | `add1`,         `b in`, `a out` | A + 1 -> B       | *        |
| 1011 |                 `b in`, `a out` | A -> B           | Mov B, A |
| 1100 | `add1`, `a in`,         `a out` | A + 1 -> A       | Inc A    |
| 1101 |         `a in`,         `a out` | A -> A           | *        |
| 1110 | `add1`,                 `a out` | A + 1 -> &empty; | *        |
| 1111 |                         `a out` | A -> &empty;     | *        |

&dagger; Value is in the order: `ir4` `ir3` `ir2` `ir1`

( * ) Undocumented Instruction: Instruction not intended for use

#### Testing

We need to verify that all our defined instructions (`Inc B`, `Mov A, B`, `Mov B, A`) work. To do this we program that instruction into memory and check if it behaves as it should. In the case of `Inc A` which cause A to increase by one, we would need to attach `?_in` to `a_in` so that the LED latches the value of A so that we can see if A is in fact counting up by one.

Once all the instructions work, program a simple program into memory. The instruction register will need to latch instruction from memory based on the address stored in the program counter. This means that the MAR cannot be attached to the switches used for programming. Instead, the MAR should be attached to the in-bus. To do this, move the wires on pins 4 and 5 on the MAR flip-flop so that they connect to pins 4 and 5 on the LED flip-flop. Pins 4 and 5 on the LED flip-flop connect to the lower order bits on the in-bus.

#### Final Program

Program into memory the following program:

```AsciiDoc
MOV A, B
INC B
MOV B, A
INC B
```

`? in` in lab 7 should be attached to `b in` so that the lab instructor can see the value stored in register B and verify the proper running of the program.

#### To include in Lab Report 4

- The architecture of the computer
- A description of what the control unit does
- The functionality of the control unit implemented in the lab
- How a program was loaded into memory
- How a program in memory was run

Lab report deadline will be discussed during the lab session.

There will be a 10% __deduction__ on the lab grade if you do not include both your name and group number on your report.

# Description of Chips Used

The part numbers on the chips may va",,2013-12-17T18:32:34Z,2023-07-05T23:59:53Z,14,12,4,7,"('er1', 64), ('Yisas', 11), ('Netopya', 4), ('kimtran23', 4), ('TheOrangeDuke', 3), ('Ragnarok700', 2), ('Disva', 1), ('Michal Wozniak', 1), ('kalousd', 1), ('catherinep003', 1), ('kot09', 1), ('jadriansd', 1), ('nim442', 1), ('sli-fox', 1)",8,6,
avk/jQuery-Chrono,Syntactic sugar for JavaScript's setTimeout() and setInterval(),"jQuery Chrono plugin (version 1.2)
==================================

jQuery Chrono provides syntactic sugar around JavaScript's native 
`setTimeout` and `setInterval` functions.

To execute some code in 5 minutes, instead of writing:

```js
    setTimeout(function() { ... }, 300000); // how many zeros is that?
```

or the slightly more readable:

```js
    setTimeout(function() { ... }, 5 * 60 * 1000); // 5... (multiplies in head) min
```

now you can just write:

```js
    $.after(5, ""minutes"", function() { ... }); // :)
````

`setTimeout` becomes `$.after` and `setInterval` becomes `$.every`.

If you don't have jQuery, you can use the aliases `jQueryChrono.every` and
`jQueryChrono.after`.

Usage
-----

These are all valid calls:

```js
    $.after(100, function() { ... });           // 100 milliseconds
    $.after(""9.7"", function() { ... });         // 9.7 milliseconds
    $.after(""50sec"", function() { ... });       // 50 seconds
    $.after(""1 minute"", function() { ... });       // 1 minute
    $.after(7, ""mins"", function() { ... });     // 7 minutes
    $.after(""33"", ""hours"", function() { ... }); // 33 hours
    $.after(""minute"", function() { ... });      // 1 minute
    $.after(""1 hour, 2 minutes, 15 seconds"", function() { ... }); // 1:02:15 hours
    $.after(""1min, 15 s"", function() { ... }); // 1:15 minutes
```

`$.every`, for creating intervals, has the same exact syntax as `$.after`.

Valid time units include:  

* millisecond (default)

* second 

* minute 

* hour

* day

along with all their common abbreviations and pluralizations.

jQuery Version
--------------

This project works with jQuery 1.4+ (see __test/test.html__) but as of version 1.2, also works without jQuery.

Contributing
------------

* Add relevant QUnit tests and make sure all existing tests pass (in __test/tests.js__)

* Update the JsDoc (__doc/__) with:

  java -jar tools/jsdoc-toolkit/jsrun.jar tools/jsdoc-toolkit/app/run.js -a -t=tools/jsdoc-toolkit/templates/jsdoc/ -d=doc/ lib/jquery.chrono.js

* Update the minified file (__lib/jquery.chrono.min.js__) with:

  java -jar tools/yuicompressor-2.4.6/build/yuicompressor-2.4.6.jar -o lib/jquery.chrono.min.js lib/jquery.chrono.js

Meta
----

_Licensed under the 3-clause **BSD license** (BSD_LICENSE.txt)_

Copyright (c) 2011, Arthur Klepchukov (at gmail)
",,2011-05-10T18:03:59Z,2011-11-23T01:52:27Z,3,3,197,5,"('avk', 48), ('ai', 3), ('janhartigan', 3)",0,0,
sibblegp/b2blaze,b2blaze,"# b2blaze 
![CircleCI](https://img.shields.io/circleci/project/github/sibblegp/b2blaze.svg)
[![Code Coverage](https://scrutinizer-ci.com/g/sibblegp/b2blaze/badges/coverage.png?b=master)](https://scrutinizer-ci.com/g/sibblegp/b2blaze/?branch=master)


Welcome to the b2blaze library for Python.

Backblaze B2 provides the cheapest cloud object storage and transfer available on the internet. Comparatively, AWS S3 is 320% more expensive to store and 400% more expensive to transfer to the internet.

This library will allow you to easily interact with B2 buckets and files as first class objects in Python 2 and 3. It is licensed under the MIT license so feel free to use it anywhere! If you enjoy it, please feel free to contribute or request features.

## Installation

To install b2blaze, run the following command in the proper environment:

```bash
pip install b2blaze
```

## Setup

You will need a key_id and an application_key to run b2blaze. You can obtain these in the B2 portal. Then, either pass them into B2() or set the environment variables B2_KEY_ID and B2_APPLICATION_KEY.

## Example Usage

b2blaze is built around OOP principles and as such all buckets and files are objects which you can interact with. Let's see an example where we list all of our files in a bucket:

```python
from b2blaze import B2
b2 = B2()
bucket = b2.buckets.get('test_bucket')
files = bucket.files.all()
```

Files will be a list of B2File objects with all of their properties which can then be downloaded by running:

```python
content = files[0].download()
```

This is a BytesIO object that you can manipulate in any way include saving locally or serving on a website.

# Guide

## The B2 Object

```python
from b2blaze import B2
b2 = B2()
```
The B2 object is how you access b2blaze's functionality. You can optionally pass in ""key_id"" and ""application_key"" as named arguments but you should probably set them as environment variable as described above.

## Buckets

Buckets are essentially the highest level folders in B2, similar to how buckets are used in AWS S3.

#### Bucket Properties

```python
bucket_id
bucket_name
bucket_type
bucket_info
lifecycle_rules
revision
cors_rules
deleted
```

#### List All Buckets

```python
buckets = b2.buckets.all()
```

#### Create a Bucket

```python
bucket = b2.buckets.create('test_bucket', security=b2.buckets.public)
```

Buckets can either be public or private. This does not change the functionality of the library other than that you will need to manually authorize when using file URLs (see below).

#### Retrieve a bucket

```python
bucket_by_name = b2.buckets.get('test_bucket')
bucket_by_id = b2.buckets.get(bucket_id='abcd')
```

#### Delete a bucket

```python
bucket.delete()
```

This will delete both the bucket and all files within it. There is no confirmation. Use carefully.

## Files

Files are the same files you store locally. They can be stored inside folders placed in buckets but this means they simply have a name like ""folder/test.txt"". There is no distinction between folders and files.

#### File Properties

```python
file_id
file_name
content_sha1
content_length
content_type
file_info
action
uploadTimestamp
deleted
```

#### List All Files in a Bucket

```python
bucket.files.all()
```

NOTE: There may be tens of thousands of files (or more) in a bucket. This operation will get information and create objects for all of them. It may take quite some time and be computationally expensive to run.

#### Upload a File

```python
text_file = open('hello.txt', 'rb')
new_file = bucket.files.upload(contents=text_file, file_name='folder/hello.txt')
```

NOTE: You don't have to call `.read()` and instead can send the file directly to contents. This will allow the file buffer directly over HTTP to B2 and save a significant amount of memory. Also, `contents` must be binary or a binary stream.

#### Upload a Large File

```python
large_file = open('large_file.bin', 'rb')
new_file = bucket.files.upload_large_file(contents=large_file, file_name='folder/large_file.bin', num_threads=4)
```

NOTE: You cannot call `.read()` on the file because the function will seek and buffer the file over `num_threads` for you. Per [Backblaze recommendation](https://www.backblaze.com/b2/docs/large_files.html), `part_size` defaults to `recommendedPartSize` from `b2_authorize_account` (typically 100MB). `num_threads` defaults to 4 threads. The minimum part size is 5MB and you must have must have at least 2 parts.

#### Retrieve a File's Information (Necessary before Downloading)

```python
file_by_name = bucket.files.get(file_name='folder/hello.txt')
file_by_id = bucket.files.get(file_id='abcd1234')
```

#### Download a file

````python
file = bucket.files.get(file_name='folder/hello.txt')
downloaded_file = file.download()
````

This returns a BytesIO object which you can manipulate in Python using a tool like PIL, serve on a website, or easily save like this:

```python
save_file = open('save_pic.jpg', 'wb')
save_file.write(downloaded_file.read())
save_file.close()
```

#### Delete a file version

```python
file.delete()
```

This deletes a single version of a file. (See the [docs on File Versions](https://www.backblaze.com/b2/docs/b2_delete_file_version.html) at Backblaze for explanation)

#### Hide (aka ""Soft-delete"") a file

```python
file.hide()
```

This hides a file (aka ""soft-delete"") so that downloading by name will not find the file, but previous versions of the file are still stored. (See the [docs on Hiding file](https://www.backblaze.com/b2/docs/b2_hide_file.html) at Backblaze for details)

## Testing

Unit testing with pytest
Before running, you must set the environment variables: `B2_KEY_ID` and `B2_APPLICATION_KEY`

** Run tests **

``` bash
python3 ./tests.py
```


## LICENSE

MIT License

Copyright (c) 2018 George Sibble

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the ""Software""), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

","'backblaze', 'backblaze-api', 'backblaze-b2', 'python'",2018-06-23T20:58:12Z,2022-12-08T01:13:48Z,7,6,608,13,"('sibblegp', 53), ('Matt Fields', 18), ('mitchellhuang', 6), ('g-mc', 1), ('fieldse', 1), ('raphaelyancey', 1), ('sfermigier', 1)",4,4,
KaleidonKep99/Steinway-B-211,A free sample library from a real B-211.,"# Steinway B-211

  A free sample library of a real Steinway B-211 from 1960.
  
  Probably the only realistic sample library I've ever made.
  
  Preview of the sample library available on SoundCloud:
  
  


## Story behind this SoundFont
I started developing this SoundFont in 2014 after I finished working on another SoundFont based on a D-274, since I wasn't really happy about how the latter turned out.
I wanted a SoundFont that felt like a real piano, with real dynamics and the classic earpiercing high keys, and while searching for a candidate to record key by key, I found an old B-211 from 1960 in a local store. I immediately fell in love with it.
I asked the seller if I could rent the piano for a few hours inside the store's soundproofed room, and he said he was okay with it.
Using my trustworthy TASCAM DR-40, I recorded each sample by hand, from first to last key (88 keys in total), and the job took me about 5 to 6 hours. It's been so long since I did that, so I don't how much it took exactly.
The first iterations of the presets weren't that great, it became VST-like only in version V2.0 and latter.

## F.A.Q.
**I just want a ready-to-use sample library, without having to add fancypants effects to it. Is this project good for me?**

This soundfont has been made to give professional users a 360° field of view on B-211's sound, which they can tweak as they desire. The user has the ability to control their timbre by adding their own effects.

**The SoundFont sounds muffled when playing Black MIDIs, how can I fix this?**

If you're using Steinway B-211 V1.8 or older, then yes those aren't meant to play Black MIDIs. But V2.0 and newer have been tweaked carefully, and should be able to play them.


**I really like your SoundFont! How can I share it with others?**

It's really easy actually, here's a few examples of what you **CAN** do:
- Create a link which redirects to the project's (This) page.
- Embed the project's page as an IFRAME in your website.

Here's a few examples of what you **CAN'T** do:
- Share a direct download link in your page.
- Host the project in your own website without my permissions.


**Can I create a modified SoundFont based on yours?**

Sure you can, but there are some caveats.
- I am **ALLOWED** to take your project down at any given time. You **MUST** take it down once you receive the notice.
- You **MUST** credit me at all time in your version of my SoundFont.
- You **MUST NOT** remove my name from the original presets' comments, if you're going to use them.
- You **MUST** give me full read/write access to your project.

## Features
- Sampled from a real Steinway B-211 from 1960.
- High quality 16-bit WAV samples, with a bitrate of 1536kbps.
- 128 velocity layers, each with dynamic filtering system, to make it feel as real as possible.
- Can be easily edited with a text editor program, like Notepad++ or Visual Studio Code.

## Requests from the project's creator
1. If you want to publish it on your website, you can embed the page through an '' tag or by inserting a direct link to this page. Please don't use direct download links.
2. Please don't implement these samples in your personal soundfonts.

## Why is it on GitHub and not your own website?
This project is beefy, and my puny website isn't able to host it, so I moved it to GitHub.

Have fun.

~ Keppy (BreezyAF)
",,2016-09-03T14:56:56Z,2020-12-02T13:56:10Z,2,2,107,4,"('KaleidonKep99', 30), ('rang3', 1)",1,1,
couchbase/forestdb,A Fast Key-Value Storage Engine Based on Hierarchical B+-Tree Trie,"# ForestDB

ForestDB is a key-value storage engine developed by Couchbase Caching and Storage Team, and its main index structure is built from [Hierarchical B+-Tree based Trie](http://db.csail.mit.edu/sigmod11contest/sigmod_2011_contest_poster_jungsang_ahn.pdf), called HB+-Trie. [ForestDB paper](https://www.computer.org/csdl/trans/tc/preprint/07110563.pdf) has been published in IEEE Transactions on Computers.

Compared with traditional B+-Tree based storage engines, ForestDB shows significantly better read and write performance with less storage overhead. ForestDB has been tested on various server OS environments (Centos, Ubuntu, Mac OS x, Windows) and mobile OSs (iOS, Android). The test coverage stats for ForestDB are available in [ForestDB Code Coverage Report](http://labs.couchbase.com/fdbcoverage/index.html).

[ForestDB benchmark program](https://github.com/couchbaselabs/ForestDB-Benchmark) is also available for performance comparisons with other key-value storage engines.

Please visit the [ForestDB wiki](https://github.com/couchbaselabs/forestdb/wiki) for more details.

## Main Features

- Keys and values are treated as an arbitrary binary.
- Applications can supply a custom compare function to support a customized key order.
- A value can be retrieved by its sequence number or disk offset in addition to a key.
- Write-Ahead Logging (WAL) and its in-memory index are used to reduce the main index lookup / update overhead.
- Multi-Version Concurrency Control (MVCC) support and append-only storage layer.
- Multiple snapshot instances can be created from a given ForestDB instance to provide different views of database.
- Rollback is supported to revert the database to a specific point.
- Ranged iteration by keys or sequence numbers is supported for a partial or full range lookup operation.
- Manual or auto compaction can be configured per ForestDB database file.
- Transactional support with read\_committed or read\_uncommitted isolation level.

## How to build

See INSTALL.MD

## How to Use

Please refer to [Public APIs](https://github.com/couchbaselabs/forestdb/wiki/Public-APIs) and tests/fdb\_functional\_test.cc in ForestDB source directory.

## How to contribute code

1. Sign the [Couchbase Contributor License
Agreement](http://review.couchbase.org/static/individual_agreement.html)
1. Submit code changes via either a Github PR or via Gerrit (for Gerrit usage, see [Instructions](https://github.com/couchbase/couchbase-spark-connector/blob/master/CONTRIBUTING.md#preparing-for-contribution) from the couchbase-spark-connector project.)

# Note regarding master branch
The 'master' git branch of forestdb contains a number of changes which ultimately were not kept for production builds of Couchbase Server. Production builds were kept on an earlier release branch named 'watson' corresponding to Couchbase Server 4.5. Couchbase Server 5.0, 5.1, 5.5, and 6.0 added some bug fixes on branches made from 'watson', namely 'spock' and 'vulcan'. For Couchbase Server 6.5 and forward, a new branch 'cb-master' was created from the then-current 'vulcan' branch.

'cb-master' should be seen as the equivalent of 'master' for all Couchbase Server production build purposes. Any additional production bug fixes will go there, and release-specific branches will be made from there when necessary.

The current 'master' branch is left untouched and unsupported, for use by community users who may depend on the work done there.
",,2013-08-30T22:53:06Z,2024-04-11T22:53:29Z,23,18,1265,94,"('chiyoung', 461), ('greensky00', 447), ('hisundar', 331), ('abhinavdangeti', 169), ('tahmmee', 82), ('trondn', 25), ('snej', 23), ('daverigby', 8), ('jimwwalker', 4), ('Sriram Ganesan', 4), ('Phil Labee', 3), ('wurikiji', 3), ('ceejatec', 3), ('Sandip Giri', 2), ('avsej', 2), ('borrrden', 1), ('t3rm1n4l', 1), ('Traun Leyden', 1), ('tleyden', 1), ('vmx', 1), ('Chippiewill', 1), ('kbhute-ibm', 1), ('olivermd', 1)",8,6,
jarun/buku,:bookmark: Personal mini-web in text,"buku















buku in action!

### Introduction

`buku` is a powerful bookmark manager and a personal textual mini-web.

For those who prefer the GUI, [bukuserver](https://github.com/jarun/buku/tree/master/bukuserver#readme) exposes a browsable front-end on a local web host server.

When I started writing it, I couldn't find a flexible command-line solution with a private, portable, merge-able database along with seamless GUI integration. Hence, `buku`.

`buku` can import bookmarks from browser(s) or fetch the title, tags and description of a URL from the web. Use your favourite editor to add, compose and update bookmarks. Search bookmarks instantly with multiple search options, including regex and a deep scan mode (handy with URLs).

It can look up broken links on the Wayback Machine. There's an Easter Egg to revisit random bookmarks.

There's no tracking, hidden history, obsolete records, usage analytics or homing.

To get started right away, jump to the [Quickstart](#quickstart) section. `buku` has one of the best documentation around. The man page comes with examples. For internal details, please refer to the [operational notes](https://github.com/jarun/buku/wiki/Operational-notes).

`buku` is a library too! There are several related projects, including a browser plug-in.

### Table of Contents

- [Features](#features)
- [Installation](#installation)
  - [Dependencies](#dependencies)
  - [From a package manager](#from-a-package-manager)
  - [Release packages](#release-packages)
  - [From source](#from-source)
  - [Running standalone](#running-standalone)
- [Shell completion](#shell-completion)
- [Usage](#usage)
  - [Command-line options](#command-line-options)
  - [Colors](#colors)
- [Quickstart](#quickstart)
- [Examples](#examples)
- [Automation](#automation)
- [Troubleshooting](#troubleshooting)
  - [Editor integration](#editor-integration)
- [Collaborators](#collaborators)
- [Contributions](#contributions)
- [Related projects](#related-projects)
- [In the Press](#in-the-press)

### Features

- Store bookmarks with auto-fetched title, tags and description
- Auto-import from Firefox, Google Chrome, Chromium and MS Edge
- Open bookmarks and search results in browser
- Shorten, expand URLs
- Browse cached page from the Wayback Machine
- Text editor integration
- Lightweight, clean interface, custom colors
- Powerful search options (regex, substring...)
- Continuous search with on the fly mode switch
- Portable, merge-able database to sync between systems
- Import/export bookmarks from/to HTML, XBEL, Markdown or Orgfile
- Smart tag management using redirection (>>, >, <<)
- Multi-threaded full DB refresh
- Manual encryption support
- Shell completion scripts, man page with examples
- Privacy-aware (no unconfirmed user data collection)

### Installation

#### Dependencies

| Feature | Dependency |
| --- | --- |
| Lang, SQLite | Python 3.8+ |
| HTTPS | certifi, urllib3 |
| Encryption | cryptography |
| HTML | beautifulsoup4, html5lib |

To copy URL to clipboard `buku` uses `xsel` (or `xclip`) on Linux, `pbcopy` (default installed) on OS X, `clip` (default installed) on Windows, `termux-clipboard` on Termux (terminal emulation for Android), `wl-copy` on Wayland. If X11 is missing, GNU Screen or tmux copy-paste buffers are recognized.

#### From a package manager

To install buku with all its dependencies from PyPI, run:

    # pip3 install buku

You can also install `buku` from your package manager. If the version available is dated try an alternative installation method.

Packaging status (expand)




Unlisted packagers:


● PyPI (pip3 install buku)
● Termux (pip3 install buku)



#### Release packages

Auto-generated packages (with only the cli component) for Arch Linux, CentOS, Debian, Fedora, openSUSE Leap and Ubuntu are available with the [latest stable release](https://github.com/jarun/buku/releases/latest).

NOTE: CentOS may not have the python3-beautifulsoup4 package in the repos. Install it using pip3.

#### From source

If you have git installed, clone this repository. Otherwise download the [latest stable release](https://github.com/jarun/buku/releases/latest) or [development version](https://github.com/jarun/buku/archive/master.zip) (*risky*).

Install the dependencies. For example, on Ubuntu:

    $ apt-get install ca-certificates python3-urllib3 python3-cryptography python3-bs4

Install the cli component to default location (`/usr/local`):

    $ sudo make install

To remove, run:

    $ sudo make uninstall

`PREFIX` is supported, in case you want to install to a different location.

#### Running standalone

`buku` is a standalone utility. From the containing directory, run:

    $ chmod +x buku
    $ ./buku

### Shell completion

Shell completion scripts for Bash, Fish and Zsh can be found in respective subdirectories of [auto-completion/](https://github.com/jarun/buku/blob/master/auto-completion). Please refer to your shell's manual for installation instructions.

### Usage

#### Command-line options

```
usage: buku [OPTIONS] [KEYWORD [KEYWORD ...]]

Bookmark manager like a text-based mini-web.

POSITIONAL ARGUMENTS:
      KEYWORD              search keywords

GENERAL OPTIONS:
      -a, --add URL [tag, ...]
                           bookmark URL with comma-separated tags
      -u, --update [...]   update fields of an existing bookmark
                           accepts indices and ranges
                           refresh title and desc if no edit options
                           if no arguments:
                           - update results when used with search
                           - otherwise refresh all titles and desc
      -w, --write [editor|index]
                           edit and add a new bookmark in editor
                           else, edit bookmark at index in EDITOR
                           edit last bookmark, if index=-1
                           if no args, edit new bookmark in EDITOR
      -d, --delete [...]   remove bookmarks from DB
                           accepts indices or a single range
                           if no arguments:
                           - delete results when used with search
                           - otherwise delete all bookmarks
      -h, --help           show this information and exit
      -v, --version        show the program version and exit

EDIT OPTIONS:
      --url keyword        bookmark link
      --tag [+|-] [...]    comma-separated tags
                           clear bookmark tagset, if no arguments
                           '+' appends to, '-' removes from tagset
      --title [...]        bookmark title; if no arguments:
                           -a: do not set title, -u: clear title
      -c, --comment [...]  notes or description of the bookmark
                           clears description, if no arguments
      --immutable N        disable web-fetch during auto-refresh
                           N=0: mutable (default), N=1: immutable

SEARCH OPTIONS:
      -s, --sany [...]     find records with ANY matching keyword
                           this is the default search option
      -S, --sall [...]     find records matching ALL the keywords
                           special keywords -
                           ""blank"": entries with empty title/tag
                           ""immutable"": entries with locked title
      --deep               match substrings ('pen' matches 'opens')
      -r, --sreg expr      run a regex search
      -t, --stag [tag [,|+] ...] [- tag, ...]
                           search bookmarks by tags
                           use ',' to find entries matching ANY tag
                           use '+' to find entries matching ALL tags
                           excludes entries with tags after ' - '
                           list all tags, if no search keywords
      -x, --exclude [...]  omit records matching specified keywords

ENCRYPTION OPTIONS:
      -l, --lock [N]       encrypt DB in N (default 8) # iterations
      -k, --unlock [N]     decrypt DB in N (default 8) # iterations

POWER TOYS:
      --ai                 auto-import bookmarks from web browsers
                           Firefox, Chrome, Chromium, Vivaldi, Edge
      -e, --export file    export bookmarks to Firefox format HTML
                           export XBEL, if file ends with '.xbel'
                           export Markdown, if file ends with '.md'
                           format: [title](url) 
                           export Orgfile, if file ends with '.org'
                           format: *[[url][title]] :tags:
                           export buku DB, if file ends with '.db'
                           combines with search results, if opted
      -i, --import file    import bookmarks from file
                           supports .html .xbel .json .md .org .db
      -p, --print [...]    show record details by indices, ranges
                           print all bookmarks, if no arguments
                           -n shows the last n results (like tail)
      -f, --format N       limit fields in -p or JSON search output
                           N=1: URL; N=2: URL, tag; N=3: title;
                           N=4: URL, title, tag; N=5: title, tag;
                           N0 (10, 20, 30, 40, 50) omits DB index
      -j, --json [file]    JSON formatted output for -p and search.
                           prints to stdout if argument missing.
                           otherwise writes to given file
      --colors COLORS      set output colors in five-letter string
      --nc                 disable color output
      -n, --count N        show N results per page (default 10)
      --np                 do not show the subprompt, run and exit
      -o, --open [...]     browse bookmarks by indices and ranges
                           open a random bookmark, if no arguments
      --oa                 browse all search results immediately
      --replace old new    replace old tag with new tag everywhere
                           delete old tag, if new tag not specified
      --url-redirect       when fetching an URL, use the resulting
                           URL from following *permanent* redirects
                           (when combined with --export, the old URL
                           is included as additional metadata)
      --tag-redirect [tag] when fetching an URL that causes permanent
                           redirect, add a tag in specified pattern
                           (using 'http:{}' if not specified)
      --tag-error [tag]    when fetching an URL that causes an HTTP
                           error, add a tag in specified pattern
                           (using 'http:{}' if not specified)
      --del-error [...]    when fetching an URL causes any (given)
                           HTTP error, delete/do not add it
      --export-on [...]    export records affected by the above
                           options, including removed info
                           (requires --update and --export; specific
                           HTTP response filter can be provided)
      --shorten index|URL  fetch shortened url from tny.im service
      --expand index|URL   expand a tny.im shortened url
      --cached index|URL   browse a cached page from Wayback Machine
      --offline            add a bookmark without connecting to web
      --suggest            show similar tags when adding bookmarks
      --tacit              reduce verbosity, skip some confirmations
      --nostdin            do not wait for input (must be first arg)
      --threads N          max network connections in full refresh
                           default N=4, min N=1, max N=10
      -V                   check latest upstream version available
      -g, --debug          show debug information and verbose logs

SYMBOLS:
      >                    url
      +                    comment
      #                    tags

PROMPT KEYS:
    1-N                    browse search result indices and/or ranges
    O [id|range [...]]     open search results/indices in GUI browser
                           toggle try GUI browser if no arguments
    a                      open all results in browser
    s keyword [...]        search for records with ANY keyword
    S keyword [...]        search for records with ALL keywords
    d                      match substrings ('pen' matches 'opened')
    r expression           run a regex search
    t [tag, ...]           search by tags; show taglist, if no args
    g taglist id|range [...] [>>|>|<<] [record id|range ...]
                           append, set, remove (all or specific) tags
                           search by taglist id(s) if records are omitted
    n                      show next page of search results
    o id|range [...]       browse bookmarks by indices and/or ranges
    p id|range [...]       print bookmarks by indices and/or ranges
    w [editor|id]          edit and add or update a bookmark
    c id                   copy URL at search result index to clipboard
    ?                      show this help
    q, ^D, double Enter    exit buku
```

#### Colors

`buku` supports custom colors. Visit the wiki page on how to [customize colors](https://github.com/jarun/buku/wiki/Customize-colors) for more details.

### Quickstart

1. Export `VISUAL` or `EDITOR` to point to your favourite editor. Note that `VISUAL` takes precedence over `EDITOR`.
2. Create a sweeter shortcut with some convenience.

       alias b='buku --suggest'
3. Auto-import bookmarks from your browser(s). Please quit the relevant browsers beforehand to ensure the databases are not locked.

       b --ai
4. Manually add a bookmark (for hands-on).

       b -w
5. List your bookmarks with DB index.

       b -p
6. For GUI and browser integration (or to sync bookmarks with your favourite bookmark management service) refer to the wiki page on [System integration](https://github.com/jarun/buku/wiki/System-integration).
7. Quick (bash/zsh) commands to fuzzy search with fzf and open the selection in Firefox:

       firefox $(buku -p -f 10 | fzf)
       firefox $(buku -p -f 40 | fzf | cut -f1)

   POSIX script to show a preview of the bookmark as well:

   ```sh
   #!/usr/bin/env sh

   url=$(buku -p -f4 | fzf -m --reverse --preview ""buku -p {1}"" --preview-window=wrap | cut -f2)

   if [ -n ""$url"" ]; then
       echo ""$url"" | xargs firefox
   fi
   ```

### Examples

1. **Edit and add** a bookmark from editor:

       $ buku -w
       $ buku -w 'gedit -w'
       $ buku -w 'macvim -f' -a https://ddg.gg search engine, privacy
    The first command picks editor from the environment variable `EDITOR`. The second command opens gedit in blocking mode. The third command opens macvim with option -f and the URL and tags populated in template.
2. **Add** a simple bookmark:

       $ buku --nostdin -a https://github.com/
       2648. GitHub: Let’s build from here · GitHub
       > https://github.com/
       + GitHub is where over 94 million developers shape the future of software, together. Contribute to the open source community, manage your Git repositories, review code like a pro, track bugs
        and features, power your CI/CD and DevOps workflows, and secure code before you commit it.

       $ buku --nostdin -a https://github.com/
       [ERROR] URL [https://github.com/] already exists at index 2648

      `>`: URL, `+`: comment, `#`: tags

      Title, description and tags will be fetched from site. Buku only stores unique URLs and will raise error if the URL already present in the database:
3. **Add** a bookmark with **tags** `search engine` and `privacy`, **comment** `Search engine with perks`, **fetch page title** from the web:

       $ buku -a https://ddg.gg search engine, privacy -c Search engine with perks
       336. DuckDuckGo
       > https://ddg.gg
       + Alternative search engine with perks
       # privacy,search engine
    where, `>`: URL, `+`: comment, `#`: tags
4. **Add** a bookmark with tags `search engine` & `privacy` and **immutable custom title** `DDG`:

       $ buku -a https://ddg.gg search engine, privacy --title 'DDG' --immutable 1
       336. DDG (L)
       > https://ddg.gg
       # privacy,search engine
    Note that URL must precede tags.
5. **Add** a bookmark **without a title** (works for update too):

       $ buku -a https://ddg.gg search engine, privacy --title
6. **Edit and update** a bookmark from editor:

       $ buku -w 15012014
    This will open the existing bookmark's details in the editor for modifications. Environment variable `EDITOR` must be set.
7. **Update** existing bookmark at index 15012014 with new URL, tags and comments, fetch title from the web:

       $ buku -u 15012014 --url http://ddg.gg/ --tag web search, utilities -c Private search engine
8. **Fetch and update only title** for bookmark at 15012014:

       $ buku -u 15012014
9. **Update only comment** for bookmark at 15012014:

       $ buku -u 15012014 -c this is a new comment
    Applies to --url, --title and --tag too.
10. **Export** bookmarks tagged `tag 1` or `tag 2` to HTML, XBEL, Markdown, Orgfile or a new database:

       $ buku -e bookmarks.html --stag tag 1, tag 2
       $ buku -e bookmarks.xbel --stag tag 1, tag 2
       $ buku -e bookmarks.md --stag tag 1, tag 2
       $ buku -e bookmarks.org --stag tag 1, tag 2
       $ buku -e bookmarks.db --stag tag 1, tag 2
    All bookmarks are exported if search is not opted.
11. **Import** bookmarks from HTML, XBEL, Markdown or Orgfile:

        $ buku -i bookmarks.html
        $ buku -i bookmarks.xbel
        $ buku -i bookmarks.md
        $ buku -i bookmarks.org
        $ buku -i bookmarks.db
12. **Delete only comment** for bookmark at 15012014:

        $ buku -u 15012014 -c
    Applies to --title and --tag too. URL cannot be deleted without deleting the bookmark.
13. **Update** or refresh **full DB** with page titles from the web:

        $ buku -u
        $ buku -u --tacit (show only failures and exceptions)
    This operation can update the title or description fields of non-immutable bookmarks by parsing the fetched page. Fields are updated only if the fetched fields are non-empty. Tags remain untouched.
14. **Delete** bookmark at index 15012014:

        $ buku -d 15012014
        Index 15012020 moved to 15012014
    The last index is moved to the deleted index to keep the DB compact. Add `--tacit` to delete without confirmation.
15. **Delete all** bookmarks:

        $ buku -d
16. **Delete** a **range or list** of bookmarks:

        $ buku -d 100-200
        $ buku -d 100 15 200
17. **Search** bookmarks for **ANY** of the keywords `kernel` and `debugging` in URL, title or tags:

        $ buku kernel debugging
        $ buku -s kernel debugging
18. **Search** bookmarks with **ALL** the keywords `kernel` and `debugging` in URL, title or tags:

        $ buku -S kernel debugging
19. **Search** bookmarks **tagged** `general kernel concepts`:

        $ buku --stag general kernel concepts
20. **Search** for bookmarks matching **ANY** of the tags `kernel`, `debugging`, `general kernel concepts`:

        $ buku --stag kernel, debugging, general kernel concepts
21. **Search** for bookmarks matching **ALL** of the tags `kernel`, `debugging`, `general kernel concepts`:

        $ buku --stag kernel + debugging + general kernel concepts
22. **Search** for bookmarks matching any of the keywords `hello` or `world`, excluding the keywords `real` and `life`, matching both the tags `kernel` and `debugging`, but **excluding** the tags `general kernel concepts` and `books`:

        $ buku hello world --exclude real life --stag 'kernel + debugging - general kernel concepts, books'
23. List **all unique tags** alphabetically:

        $ buku --stag
24. Run a **search and update** the results:

        $ buku -s kernel debugging -u --tag + linux kernel
25. Run a **search and delete** the results:

        $ buku -s kernel debugging -d
26. **Encrypt or decrypt** DB with **custom number of iterations** (15) to generate key:

        $ buku -l 15
        $ buku -k 15
    The same number of iterations must be specified for one lock & unlock instance. Default is 8, if omitted.
27. **Show details** of bookmarks at index 15012014 and ranges 20-30, 40-50:

        $ buku -p 20-30 15012014 40-50
28. Show details of the **last 10 bookmarks**:

        $ buku -p -10
29. **Show all** bookmarks with real index from database:

        $ buku -p
        $ buku -p | more
30. **Replace tag** 'old tag' with 'new tag':

        $ buku --replace 'old tag' 'new tag'
31. **Delete tag** 'old tag' from DB:

        $ buku --replace 'old tag'
32. **Append (or delete) tags** 'tag 1', 'tag 2' to (or from) existing tags of bookmark at index 15012014:

        $ buku -u 15012014 --tag + tag 1, tag 2
        $ buku -u 15012014 --tag - tag 1, tag 2
33. **Open URL** at index 15012014 in browser:

        $ buku -o 15012014
34. List bookmarks with **no title or tags** for bookkeeping:

        $ buku -S blank
35. List bookmarks with **immutable title**:

        $ buku -S immutable
36. **Shorten URL** www.google.com and the URL at index 20:

        $ buku --shorten www.google.com
        $ buku --shorten 20
37. **Append, remove tags at prompt** (taglist index to the left, bookmark index to the right):

        // append tags at taglist indices 4 and 6-9 to existing tags in bookmarks at indices 5 and 2-3
        buku (? for help) g 4 9-6 >> 5 3-2
        // set tags at taglist indices 4 and 6-9 as tags in bookmarks at indices 5 and 2-3
        buku (? for help) g 4 9-6 > 5 3-2
        // remove all tags from bookmarks at indices 5 and 2-3
        buku (? for help) g > 5 3-2
        // remove tags at taglist indices 4 and 6-9 from tags in bookmarks at indices 5 and 2-3
        buku (? for help) g 4 9-6 << 5 3-2
38. List bookmarks with **colored output**:

        $ buku --colors oKlxm -p
39. Add a bookmark after following all permanent redirects, but only if the server doesn't respond with an error (and there's no network failure)

        $ buku --add http://wikipedia.net --url-redirect --del-error
        2. Wikipedia
           > https://www.wikipedia.org/
           + Wikipedia is a free online encyclopedia, created and edited by volunteers around the world and hosted by the Wikimedia Foundation.
40. Add a bookmark with tag `http redirect` if the server responds with a permanent redirect, or tag shaped like `http 404` on an error response:

        $ buku --add http://wikipedia.net/notfound --tag-redirect 'http redirect' --tag-error 'http {}'
        [ERROR] [404] Not Found
        3. Not Found
           > http://wikipedia.net/notfound
           # http 404,http redirect
41. Update all bookmarks matching the search by updating the URL if the server responds with a permanent redirect, deleting the bookmark if the server responds with HTTP error 400, 401, 402, 403, 404 or 500, or adding a tag shaped like `http:{}` in case of any other HTTP error; then export those affected by such changes into an HTML file, marking deleted records as well as old URLs for those replaced by redirect.

        $ buku -S ://wikipedia.net -u --url-redirect --tag-error --del-error 400-404,500 --export-on --export backup.html
42. More **help**:

        $ buku -h
        $ man buku

### Automation

Interactive workflows can be automated using expect. Issue [#368](https://github.com/jarun/buku/issues/368) has a working example on automating auto-import.

### Troubleshooting

#### Editor integration

You may encounter issues with GUI editors which maintain only one instance by default and return immediately from other instances. Use the appropriate editor option to block the caller when a new document is opened. See issue [#210](https://github.com/jarun/buku/issues/210) for gedit.

### Collaborators

- [Arun Prakash Jana](https://github.com/jarun)
- [Alexey Gulenko](https://github.com/LeXofLeviafan)
- [Rachmadani Haryono](https://github.com/rachmadaniHaryono)
- [Johnathan Jenkins](https://github.com/shaggytwodope)
- [SZ Lin](https://github.com/szlin)

Copyright © 2015-2024 [Arun Prakash Jana](mailto:engineerarun@gmail.com)



### Contributions

Missing a feature? There's a rolling [ToDo List](https://github.com/jarun/buku/issues/484) with identified tasks. Contributions are welcome! Please follow the [PR guidelines](https://github.com/jarun/buku/wiki/PR-guidelines).

See also our documentation here 

### Related projects

- [bukubrow](https://github.com/SamHH/bukubrow), WebExtension for browser integration
- [oil](https://github.com/AndreiUlmeyda/oil), search-as-you-type cli front-end
- [buku_run](https://github.com/carnager/buku_run), rofi front-end
- [pinku](https://github.com/mosegontar/pinku), a Pinboard-to-buku import utility
- [buku-dmenu](https://gitlab.com/benoliver999/buku-dmenu), a simple bash dmenu wrapper
- [poku](https://github.com/shanedabes/poku), sync between Pocket and buku
- [Ebuku](https://github.com/flexibeast/ebuku), Emacs interface to buku
- [diigoku](https://github.com/dppdppd/diigoku), buku importer for Diigo
- [BukuBot](https://git.xmpp-it.net/sch/BukuBot), Chat bot for XMPP with an extended visual interface


### Videos

- [Buku: Take Your Bookmarks Everywhere You Go](https://www.youtube.com/embed/9HzEHrUBQXE)
- [Buku is a great open-source bookmark manager](https://www.youtube.com/embed/7VxgKMWm-J8)

### In the Press

- [2daygeek](http://www.2daygeek.com/buku-command-line-bookmark-manager-linux/)
- [Hacker Milk](https://hackermilk.blogspot.com/2020/01/how-to-manage-your-browsers-bookmarks.html)
- [It's F.O.S.S.](https://itsfoss.com/buku-command-line-bookmark-manager-linux/)
- [LinOxide](https://linoxide.com/linux-how-to/buku-browser-bookmarks-linux/)
- [LinuxUser Magazine 01/2017 Issue](http://www.linux-community.de/LU/2017/01/Das-Beste-aus-zwei-Welten)
- [Make Tech Easier](https://www.maketecheasier.com/manage-browser-bookmarks-ubuntu-command-line/)
- [One Thing Well](http://onethingwell.org/post/144952807044/buku)
- [Open Source For You](https://opensourceforu.com/2018/05/buku-a-bookmark-manager-in-the-command-line/)
- [ulno.net](https://ulno.net/blog/2017-07-19/of-bookmarks-tags-and-browsers/)
","'bookmark', 'bookmark-manager', 'bookmarks', 'cli', 'command-line', 'console', 'organizer', 'privacy-aware', 'search', 'standalone', 'terminal'",2015-11-01T19:53:18Z,2024-06-03T21:24:46Z,76,69,6332,80,"('jarun', 1408), ('rachmadaniHaryono', 366), ('LeXofLeviafan', 48), ('ckolumbus', 26), ('KrzP', 24), ('wheresmyjetpack', 22), ('CaptainQuirk', 15), ('mosegontar', 13), ('toyg', 10), ('humCopper', 7), ('professorjamesmoriarty', 6), ('AMDmi3', 6), ('codingCoffee', 5), ('jpralves', 5), ('chenrui333', 5), ('Haze-sh', 4), ('zmwangx', 4), ('rogeliodh', 4), ('The-Wayvy', 4), ('dertuxmalwieder', 4), ('Cthulhux', 4), ('asergi', 4), ('alex-bender', 3), ('jabagawee', 3), ('kishore-narendran', 3), ('sjehuda', 3), ('szlin', 2), ('ZwodahS', 2), ('Vinfall', 2), ('lucasmgrando', 2), ('csill1634', 2), ('stkw0', 2), ('folliehiyuki', 2), ('Guillaume', 2), ('sglavoie', 2), ('saltyCatfish', 2), ('Fongshway', 2), ('ahmedelgabri', 1), ('iNtEgraIR2021', 1), ('2ynn', 1), ('ralic', 1), ('rane-brown', 1), ('carnager', 1), ('infinisil', 1), ('SimonMonecke', 1), ('gitter-badger', 1), ('timgates42', 1), ('anuvyklack', 1), ('hezhizhen', 1), ('cmarques', 1), ('dragonmaus', 1), ('ebarcsa', 1), ('invl', 1), ('shv-q3', 1), ('tehtbl', 1), ('tom-i', 1), ('AlexFielder', 1), ('AllanChain', 1), ('Aquan1412', 1), ('shunlog', 1), ('gilbertw1', 1), ('cardi', 1), ('Chris Drexler', 1), ('Damian', 1), ('Daniel Anderson', 1), ('denisfalqueto', 1), ('dkiyatkin', 1), ('Dragos Stoica', 1), ('ehaupt', 1), ('GuilhermeHideki', 1), ('eikenb', 1), ('jpdasma', 1), ('maxice8', 1), ('lagerfeuer', 1), ('mrshu', 1), ('mukhal', 1)",39,34,
draveness/analyze,Draven's Blog,"# Analyze


  
  Banner designed by Levine


## 为什么要建这个仓库

欢迎使用 RSS 订阅我的博客 [点击订阅](http://draveness.me/feed.xml)

世人都说阅读开源框架的源代码对于功力有显著的提升，所以我也尝试阅读开源框架的源代码，并对其内容进行详细地分析和理解。在这里将自己阅读开源框架源代码的心得记录下来，希望能对各位开发者有所帮助。我会不断更新这个仓库中的文章，如果想要关注可以点 `star`。

## 目录

Latest：

+ [谈谈 MVX 中的 Model](contents/architecture/mvx-model.md)
+ [谈谈 MVX 中的 View](contents/architecture/mvx-view.md) 
+ [谈谈 MVX 中的 Controller](contents/architecture/mvx-controller.md)
+ [浅谈 MVC、MVP 和 MVVM 架构模式](contents/architecture/mvx.md)

| Project | Version | Article |
|:-------:|:-------:|:------|
| Architecture | | [谈谈 MVX 中的 Model](contents/architecture/mvx-model.md)  [谈谈 MVX 中的 View](contents/architecture/mvx-view.md)  [谈谈 MVX 中的 Controller](contents/architecture/mvx-controller.md)  [浅谈 MVC、MVP 和 MVVM 架构模式](contents/architecture/mvx.md) |
| ReactiveObjC | 2.1.2 | [『状态』驱动的世界：ReactiveCocoa](contents/ReactiveObjC/RACSignal.md)  [Pull-Driven 的数据流 RACSequence](contents/ReactiveObjC/RACSequence.md) [『可变』的热信号 RACSubject](contents/ReactiveObjC/RACSubject.md)  [优雅的 RACCommand](contents/ReactiveObjC/RACCommand.md)  [用于多播的 RACMulticastConnection](contents/ReactiveObjC/RACMulticastConnection.md)  [RAC 中的双向数据绑定 RACChannel](contents/ReactiveObjC/RACChannel.md)  [理解 RACScheduler 的实现](contents/ReactiveObjC/RACScheduler.md)  [从代理到 RACSignal](contents/ReactiveObjC/RACDelegateProxy.md)|
|  ObjC   |         | [从 NSObject 的初始化了解 isa](contents/objc/从%20NSObject%20的初始化了解%20isa.md)  [深入解析 ObjC 中方法的结构](contents/objc/深入解析%20ObjC%20中方法的结构.md)  [从源代码看 ObjC 中消息的发送](contents/objc/从源代码看%20ObjC%20中消息的发送.md)  [你真的了解 load 方法么？](contents/objc/你真的了解%20load%20方法么？.md)  [上古时代 Objective-C 中哈希表的实现](contents/objc/上古时代%20Objective-C%20中哈希表的实现.md)  [自动释放池的前世今生](contents/objc/自动释放池的前世今生.md)[黑箱中的 retain 和 release](contents/objc/黑箱中的%20retain%20和%20release.md)  [关联对象 AssociatedObject 完全解析](contents/objc/关联对象%20AssociatedObject%20完全解析.md)[懒惰的 initialize 方法](contents/objc/懒惰的%20initialize%20方法.md)[对象是如何初始化的（iOS）](contents/objc/对象是如何初始化的（iOS）.md)|
| KVOController | 1.2.0 | [如何优雅地使用 KVO](contents/KVOController/KVOController.md) |
| AsyncDisplayKit | 1.9.81 | [提升 iOS 界面的渲染性能](contents/AsyncDisplayKit/提升%20iOS%20界面的渲染性能%20.md) [从 Auto Layout 的布局算法谈性能](contents/AsyncDisplayKit/从%20Auto%20Layout%20的布局算法谈性能.md) [预加载与智能预加载（iOS）](contents/AsyncDisplayKit/预加载与智能预加载（iOS）.md)|
| CocoaPods | 1.1.0 | [CocoaPods 都做了什么？](contents/CocoaPods/CocoaPods%20都做了什么？.md)  [谈谈 DSL 以及 DSL 的应用（以 CocoaPods 为例）](contents/CocoaPods/谈谈%20DSL%20以及%20DSL%20的应用（以%20CocoaPods%20为例）.md)|
| OHHTTPStubs | 5.1.0 | [iOS 开发中使用 NSURLProtocol 拦截 HTTP 请求](contents/OHHTTPStubs/iOS%20开发中使用%20NSURLProtocol%20拦截%20HTTP%20请求.md)  [如何进行 HTTP Mock（iOS）](contents/OHHTTPStubs/如何进行%20HTTP%20Mock（iOS）.md) |
| ProtocolKit | | [如何在 Objective-C 中实现协议扩展](contents/ProtocolKit/如何在%20Objective-C%20中实现协议扩展.md) |
| FBRetainCycleDetector | 0.1.2 | [如何在 iOS 中解决循环引用的问题](contents/FBRetainCycleDetector/如何在%20iOS%20中解决循环引用的问题.md) [检测 NSObject 对象持有的强指针](contents/FBRetainCycleDetector/检测%20NSObject%20对象持有的强指针.md)  [如何实现 iOS 中的 Associated Object](contents/FBRetainCycleDetector/如何实现%20iOS%20中的%20Associated%20Object.md)[iOS 中的 block 是如何持有对象的](contents/FBRetainCycleDetector/iOS%20中的%20block%20是如何持有对象的.md)|
| fishhook | 0.2 |[动态修改 C 语言函数的实现](contents/fishhook/动态修改%20C%20语言函数的实现.md) |
| libextobjc |  |[如何在 Objective-C 的环境下实现 defer](contents/libextobjc/如何在%20Objective-C%20的环境下实现%20defer.md) |
| IQKeyboardManager | 4.0.3 |[『零行代码』解决键盘遮挡问题（iOS）](contents/IQKeyboardManager/『零行代码』解决键盘遮挡问题（iOS）.md) |
| DKNightVersion | 2.3.0 | [成熟的夜间模式解决方案](contents/DKNightVersion/成熟的夜间模式解决方案.md) |
| AFNetworking | 3.0.4 | [AFNetworking 概述（一）](contents/AFNetworking/AFNetworking%20概述（一）.md)  [AFNetworking 的核心 AFURLSessionManager（二）](contents/AFNetworking/AFNetworking%20的核心%20AFURLSessionManager（二）.md)  [处理请求和响应 AFURLSerialization（三）](contents/AFNetworking/处理请求和响应%20AFURLSerialization（三）.md)  [AFNetworkReachabilityManager 监控网络状态（四）](contents/AFNetworking/AFNetworkReachabilityManager%20监控网络状态（四）.md) [验证 HTTPS 请求的证书（五）](contents/AFNetworking/验证%20HTTPS%20请求的证书（五）.md) |
| BlocksKit | 2.2.5 | [神奇的 BlocksKit（一）遍历、KVO 和分类](contents/BlocksKit/神奇的%20BlocksKit%20（一）.md)  [神奇的 BlocksKit（二）动态代理的实现 ](contents/BlocksKit/神奇的%20BlocksKit%20（二）.md) |
| Alamofire |   | [iOS 源代码分析 --- Alamofire](contents/Alamofire/iOS%20源代码分析%20----%20Alamofire.md) |
| SDWebImage |   | [iOS 源代码分析 --- SDWebImage](contents/SDWebImage/iOS%20源代码分析%20---%20SDWebImage.md) |
| MBProgressHUD |   | [iOS 源代码分析 --- MBProgressHUD](contents/MBProgressHUD/iOS%20源代码分析%20---%20MBProgressHUD.md) |
| Masonry |   | [iOS 源代码分析 --- Masonry](contents/Masonry/iOS%20源代码分析%20---%20Masonry.md) |
| Redis | 3.2.5  | [Redis 和 I/O 多路复用](contents/Redis/redis-io-multiplexing.md)  [Redis 中的事件循环](contents/Redis/redis-eventloop.md)   [Redis 是如何处理命令的（客户端）](contents/Redis/redis-cli)|

## 微信公众号

![](https://img.draveness.me/2020-03-11-15839264230785-wechat-qr-code.png)

## 勘误

+ 如果在文章中发现了问题，欢迎提交 PR 或者 issue

## 转载

本作品由 Draveness 创作，采用知识共享署名 4.0 国际许可协议进行许可。

","'analyze', 'article', 'ios', 'objective-c', 'sourcecode', 'swift'",2016-03-19T02:53:31Z,2021-11-14T19:00:39Z,11,9,8091,541,"('draveness', 418), ('HaloWang', 3), ('tangqi92', 2), ('谢伟志', 2), ('Desgard', 1), ('JakeLin', 1), ('Jony Fang', 1), ('status302', 1), ('WenchaoD', 1), ('lvyile', 1), ('coderguai', 1)",7,6,
anilallewar/microservices-basics-spring-boot,Basic architecture framework to create complete microservices using Spring boot and Spring cloud,"# Spring Boot MicroServices Template
This repository is an example of how to get Microservices going using Spring Boot, Spring Cloud, Spring OAuth 2 and Netflix OSS frameworks.

It also builds on distributed system concepts and tries to provide solutions for common distributed system problem using implementations for circuit breakers, consumer driven contracts etc.

# Table of Content
* [Contributors](#contributors)
* [Application Architecture](#application-architecture)
* [Using the application](#using-application)
    * [Running on local m/c](#run_local_mc)
    * [Running using docker](#run_docker)
* [Microservices Overview](#microservices-overview)
* [Netflix OSS](#netflix-oss)
* [Spring Boot Overview](#spring-boot-overview)
* [Spring Cloud Overview](#spring-cloud-overview)
* [Spring Cloud Config Overview](#spring-cloud-config-overview)
* [Spring Cloud Netflix Overview](#spring-cloud-netflix-overview)
* [OAuth 2.0 Overview](#oauth-2.0-overview)
* [Spring OAuth 2.0 Overview](#spring-oauth-2.0-overview)


## Contributors

* [Anil Allewar](https://www.linkedin.com/pub/anil-allewar/18/378/393)
* [Steve Wall](https://github.com/stevewallone)
* [Akindele Akinyemi](https://github.com/akinmail)
* [Manmeet singh](https://github.com/1singhmanmeet)
* [Ramazan Sakin](https://github.com/ramazansakin)

## Application Architecture

The application consists of 9 different services

* [config server](config-server/README.md) - setup external configuration
* [webservice-registry](webservice-registry/README.md) - Eureka server
* [auth-server](auth-server/README.md) - Oauth2 authorization server
* [user-webservice](user-webservice/README.md) - User micro-service
* [task-webservice](task-webservice/README.md) - Task micro-service
* [comments-webservice](comments-webservice/README.md) - Comments for task micro-service
* [api-gateway](api-gateway/README.md) - API gateway that proxies all the micro-services
* [web-portal](web-portal/README.md) - Single Page Application that provides the UI
* [zipkin-server](zipkin-server/README.md) - Single Page Application that provides the UI for the Zipkin distributed tracing.

### Target Architecture
![Target Architecture](/images/Target_Architecture.jpg)

### Application Components
![Components](/images/Application_Components.jpg)

## Using the application

### Running on local m/c

* You can build all the projects by running the `./build-all-projects.sh` on Mac/Linux systems and then going to each individual folder and running the jars using the `java -jar build/libs/basic-.jar` command.
* Please refer to the individual readme files on instructions of how to run the services. For demo, you can run the applications in the same order listed above.

### Running using docker
* [Docker](https://www.docker.com) is an open platform for building, shipping and running distributed applications. Follow steps on the site to install docker based on your operating system.
* On the mac command prompt, navigate to the root folder of the application (spring-boot-microservices) and run the `./docker-image-all-projects.sh` command. This should build all the images and publish them to docker.
* Run the individual images as below
    * Config Server
        * docker run -d --name config-server -p 8888:8888 anilallewar/config-server:0.0.1
        * docker logs -f config-server
    * Eureka Server
        * docker run -d --name registry-server -p 8761:8761 anilallewar/webservice-registry:0.0.1
        * docker logs -f registry-server
    * OAuth Server
        * docker run -d --name auth-server -p 8899:8899 anilallewar/auth-server:0.0.1
        * docker logs -f auth-server
    * User Webservice    
        * docker run -d --name user-webservice anilallewar/user-webservice:0.0.1
        * docker logs -f user-web service
    * Task Webservice    
        * docker run -d --name task-webservice anilallewar/task-webservice:0.0.1
        * docker logs -f task-webservice
    * Comments Webservice    
        * docker run -d --name comments-webservice anilallewar/comments-webservice:0.0.1
        * docker logs -f comments-webservice
    * Web Portal    
        * docker run -d --name web-portal anilallewar/web-portal:0.0.1
        * docker logs -f web-portal
    * Zuul API Gateway    
        * docker run -d --name api-gateway -p 8080:8080 anilallewar/api-gateway:0.0.1
        * docker logs -f api-gateway
* We also have a [docker-compose](https://docs.docker.com/compose/) file under `docker-orchestration/docker-compose` folder that can be used to start all the containers together using `docker-compose up -d` command on the command prompt. The docker-compose file has been updated to start the containers in the correct order. You can similarly stop the containers using `docker-compose down` command on the command prompt.
* You can also use [Rancher](http://rancher.com/) for orchestrating your containers and managing them. To set up Rancher on your local box and use it to run the containers.
   * We would run rancher for test using non-persistent storage. In production, you would typically run rancher using external mysql database and in High Availability (HA) configuration.
   * Run the `sudo docker run -d --restart=unless-stopped -p 8080:8080 rancher/server:stable` command on the command prompt to start the latest stable rancher server.
   * You can now access Rancher at http://:8080/
   * You can now add hosts to the Rancher setup and then deploy our services using the docker-compose and rancher-compose files available under `docker-orchestration/rancher` folder. For more details on Rancher and how to run the orchestration, please refer to [Rancher documentation](http://rancher.com/docs/rancher/v1.6/en/).

* Access UI

You should be able to access the web ui from http://localhost:8765/.

  * The API gateway would redirect to the OAuth2 login page.
  * You can use the following credentials for OAuth2 client access.
      * dave / secret
      * anil / password
  * Once you log in and provide grant, The UI application provides use of other services.

The Eureka server is accessible on http://localhost:8761/

* Note:
    * If the gradle wrapper doesn't work, then install gradle and run `gradle wrapper --gradle-version 3.5` before using `gradlew`.
    * If you need to set up the classpath correctly, then run `./gradlew clean build eclipse` which would setup the `.classpath` accordingly.

## Microservices Overview

There is a growing adoption of Microservices in today's world. Numerous SAAS Companies are moving away from building monolithical products and instead adopting Microservices.

### Focus on Component

In microservices world, a web service or a microservice is the unit of component. This unit of component delivers a complete Business functionality and could rely on other microservices to fulfill the dependent functionality. These microservices are build separately and deployed separately unlike monoliths in which components can be built separately but are deployed together.

![Microservices Overview](http://martinfowler.com/articles/microservices/images/sketch.png)

### Focus on Business Capabilities and Running a Product

Another key aspect of microservices is that the focus of a team building a component now moves away from just delivering that component to running and maintaining that business functionality given by that component.

![Focus on Business Capabilities](http://martinfowler.com/articles/microservices/images/conways-law.png)

### Focus on Decentralized Control and Decentalized Data Management

Due to the ability to build components separately and running them separately means, the notion of centralized control (governance) and data management goes away. Traditionally monoliths were built around a set of set architecture, technology and frameworks. The key architects would decide what tech was used and key DBAs would decide which and how many databases are used.
With Microservices, since each component caters to a somewhat complete business functionality, that centralized control by Key Architects and DBAs goes away. Some Components are best built using JEE and RDBMS, for some Real time Data Analytics is the key, they could use Apache Storm and Apache Kafka, for some others R is better fit, for IO Intensive systems may be Node.js and MongoDB works out. Same way User data could now go in NoSQL databases, Transaction data could go in traditional RDBMS, Recommendation systems could use Hive as their Database and so on.

**Decentralized Control**
![Decentralied Control](/images/Decentralized_Goverance.png)


**Decentalized Data Management**
![Decentralied Control](http://martinfowler.com/articles/microservices/images/decentralised-data.png)

Disclaimer - While Microservices is much talked about these days, make a note Microservices is not a Free lunch. There is an effort and complexity involved to building and running them, but once you do so, the benefits are plentiful.

You can read more about Microservices here - http://martinfowler.com/articles/microservices.html#CharacteristicsOfAMicroserviceArchitecture

Image References from - http://martinfowler.com/articles/microservices.html

## Netflix OSS

![Netflix OSS Home Page](http://netflix.github.io/glisten/lib/img/netflix_oss.jpg)

Netflix is one of the pioneers behind the Microservices Architecture. Not only have they successfully run Microservices in production, but they have outsourced their battle hardened framework under Netflix Open Source Software Center initiative - http://netflix.github.io/#repo

You will find implementation of numerous of Netflix's Microservices platform pieces here. Here are few for your reference :
###  Eureka
Microservices is somewhat like SOA platform, that there are numerous services. Each Service when it comes online registers itself with Service Registry. When some other service wants to communicate with a already registered service, they would ask the Eureka Server the base url for that service. Multiple instances of the same service could register with Eureka, in that case Eureka could help in doing Load Balancing.

###  Hystrix
A Microservices environment is built to sustain failures of its parts, that is few of its microservices. In order to keep the system going, Netflix introduced a concept of circuit breaker. A Circuit Breaker provides alternative behavior in case certain microservice is gone down. This way the system gracefully switches to fallback behavior until the system recovers, rather than entire system suffering the ripple effects of failed service.

###  Zuul
A Microservice environment needs a gateway. A Gateway is the only entity exposed to the outside world, which allows access to Microservices and does more. A Gateway could do
* API Metering
* Centralized Authentication/Authorization
* Load Balancing
* etc
*

###  Ribbon
Ribbon is a Load Balancing Client and is meant to work with Eureka Server. Ribbon talks to Eureka server and relies on it to get base url to one of the instances of microservices in question.

## Spring Boot Overview

Folks who are familiar with Spring frameworks like Spring MVC, know spring is all about Dependency Injection and Configuration Management. While Spring is an excellent framework, it still takes quite some effort to make a Spring MVC project ready for production.

Spring Boot is Spring's approach towards Convention over Configuration. Spring Boot comes with numerous Start Projects, each starter projects provides a set of conventions which ensures you have an opinionated production ready app.

To begin with Spring Boot allows you to write web services with just One or two classes. See the example below

```
build.gradle
gradle dependency --> compile(""org.springframework.boot:spring-boot-starter-web"")
```

```
Application.java

@SpringBootApplication
public class Application{
   public static void main(String[] args){
      SpringApplication.run(Application.class, args);
   }
}
```

```
UserController.java

@RestController
public class UserController{
    @RequestMapping(""/"")
    public User getUser(String id) {
        return new User(id,""firstName"",""lastName"");
    }

}
```

Build
```
$>./gradlew clean build
say this Generates app.jar
```

Running Application
```
$>java -jar builds/lib/app.jar
```

The idea is to have multiple projects like above, one for each microservice. Look at the following directories in this repo
* https://github.com/rohitghatol/spring-boot-microservices/tree/master/user-webservice
* https://github.com/rohitghatol/spring-boot-microservices/tree/master/task-webservice


You can read in detail about Spring Boot here - https://spring.io/guides/gs/spring-boot/

## Spring Cloud Overview

Spring Cloud provides tools for developers to quickly build some common patterns in distributed systems (e.g. configuration management, service discovery, circuit breakers, intelligent routing, micro-proxy, control bus, one-time tokens, global locks, leadership election, distributed sessions, cluster state)

You can read in detail about Spring Cloud here - http://projects.spring.io/spring-cloud/

## Spring Cloud Config Overview

Spring Cloud config provides support for externalizing configuration in distributed systems. With the Config Server you have a central place to manage external properties for applications across all environments.

You can read in detail about Spring Cloud config here - http://cloud.spring.io/spring-cloud-config/

## Spring Cloud Netflix Overview

Spring Cloud Netflix provides Netflix OSS integrations for Spring Boot apps through auto configuration and binding to the Spring Environment and other Spring programming model idioms.

You can read in detail about Spring Cloud Netflix here - http://cloud.spring.io/spring-cloud-netflix/

## OAuth 2.0 Overview

OAuth2 is an authorization framework that specifies different ways a third-party application can obtain limited access to determined set of resources.

![OAuth2 abstract protocol](/images/OAuth2_abstract_protocol_flow.png)

OAuth defines four roles:

   **Resource owner:**
      An entity capable of granting access to a protected resource. When the resource owner is a person, it is referred to as an end-user.

   **Resource server:**
      The server hosting the protected resources, capable of accepting and responding to protected resource requests using access tokens.

   **Client:**
      An application making protected resource requests on behalf of the resource owner and with its authorization.  The term ""client"" does not imply any particular implementation characteristics (e.g., whether the application executes on a server, a desktop, or other devices).

   **Authorization-Server:**
      The server issuing access tokens to the client after successfully authenticating the resource owner and obtaining authorization.

To get more details of how differnt authorizations work in OAuth2, please refer to the readme at **[auth-server](auth-server/README.md)**

## Spring OAuth2 Overview

Spring provides nice integration between Spring security and OAuth2 providers including the ability to set up your own authorization server. Please see [Spring security with OAuth2](http://projects.spring.io/spring-security-oauth/docs/oauth2.html) for more details.
",,2017-04-20T10:48:46Z,2022-05-26T06:40:08Z,5,5,713,51,"('anilallewar', 36), ('stevewallone', 6), ('ramazansakin', 2), ('akinmail', 1), ('1singhmanmeet', 1)",2,2,
bilibili/boxing,Android multi-media selector based on MVP mode.,"## boxing
---
Android multi-media selector based on MVP mode.[中文文档](README_CN.md)  [![Build Status](https://travis-ci.org/Bilibili/boxing.svg?branch=master)](https://travis-ci.org/Bilibili/boxing)

#### boxing Inside: 
[![bili](screenshot/bili.webp)](https://play.google.com/store/apps/details?id=tv.danmaku.bili)

### Feature
---
- Custom UI
- Multiple/single selection, preview and crop function
- Gif support
- Video selection
- Image compression
- Gif encode(checkout feature/gif-encode to have fun), see [Bilibili/BurstLinker](https://github.com/Bilibili/BurstLinker)

### Download
---
Core version: only contain the core function.

UI version: contain UI implements base on core version.

- Maven

Core version

```xml
                       
  	com.bilibili  
  	boxing  
  	1.0.4
  	pom                
                      		
```

UI version

```xml
                          
  	com.bilibili     
  	boxing-impl
  	1.0.4
  	pom                    
                         
```

- Gradle

Core version              
```java
compile 'com.bilibili:boxing:1.0.4'
```

UI version
```java
compile 'com.bilibili:boxing-impl:1.0.4'
```

### Preview

![multi_image](screenshot/multi_image.webp)
![single_image_crop](screenshot/single_image_crop.webp)
![video](screenshot/video.webp)

### Getting Started

- Media loading initialization(required)
```java
BoxingMediaLoader.getInstance().init(new IBoxingMediaLoader()); // a class implements IBoxingMediaLoader 
```

- Image cropping initialization(optional)
```java
BoxingCrop.getInstance().init(new IBoxingCrop());  // a class implements IBoxingCrop 
```
- Build BoxingConfig
  Specify the mode(Mode.SINGLE_IMG, Mode.MULTI_IMG, Mode.VIDEO) with camera and gif support. 
```java
BoxingConfig config = new BoxingConfig(Mode); // Mode：Mode.SINGLE_IMG, Mode.MULTI_IMG, Mode.VIDEO
config.needCamera(cameraRes).needGif().withMaxCount(9) // camera, gif support, set selected images count
.withMediaPlaceHolderRes(resInt) // set the image placeholder, default 0
.withAlbumPlaceHolderRes(resInt) // set the album placeholder, default 0
.withVideoDurationRes(resInt) // set the video duration resource in video mode, default 0
```
- Get Boxing, set Intent and call start
```java
// start thumbnails Activity, need boxing-impl.
Boxing.of(config).withIntent(context, BoxingActivity.class).start(callerActivity, REQUEST_CODE); 
  	
// start view raw image Activity, need boxing-impl.
Boxing.of(config).withIntent(context, BoxingViewActivity.class).start(callerActivity, REQUEST_CODE); 
  	
// call of() use Mode.MULTI_IMG by default.
Boxing.of().withIntent(context, class).start(callerActivity, REQUEST_CODE);
```
- Get Result
```java
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
  	List medias = Boxing.getResult(data);
  	// avoid null
}
```
### Advanced usage
Media loading and image cropping initialization are the same as Simple Usage.

- Customize Activity and Fragment
  Extends AbsBoxingViewActivity and AbsBoxingViewFragment.
  call `Boxing.of(config).withIntent(context, AbsBoxingViewActivity.class).start(callerActivity, REQUEST_CODE);` to start.

- Only customize Fragment
  Extends AbsBoxingViewFragment,no AbsBoxingViewActivity.
  call `Boxing.of(BoxingConfig).setupFragment(AbsBoxingViewFragment, OnFinishListener);` to start.


### FileProvider                                                                                   
Use camera in Android N, add this in AndroidManifest.xml                                                        
```xml
<provider                                                 
	android:name=""android.support.v4.content.FileProvider""
	android:authorities=""${applicationId}.file.provider"" >               
	<meta-data                                            
		android:name=""android.support.FILE_PROVIDER_PATHS""
		android:resource=""@xml/boxing_file_provider""/>
                 
```

### Kotlin Support
Stay hungry, stay foolish.
checkout `feature/kotlin` for fun.

### TODO
Support different config at the same moment.

### License
----
Copyright 2017 Bilibili
Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at
[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","'android', 'cinderella-man', 'compression', 'kotlin-android', 'media-picker', 'mvp', 'picture', 'video'",2017-01-22T07:04:34Z,2019-05-15T05:56:48Z,2,1,3194,68,"('ChenSiLiang', 104), ('xiyangyuge', 1)",1,0,
Sriharia/ADDM,Android DLNA Device Manager - A demo app to manage communications b/w DLNA devices.,"Android App to: Browse contents of any DLNA media server and renders their content  locally on Android device.- Controls playback on other Media Renderers on same network.- Serves local device media files to a selected Renderer device thorough hosting a NanoHttpD server in application. (Yes, not a standard DMS device, but works to serve files to other devices)","'android', 'browse-contents', 'control-playback', 'dlna', 'file-sharing', 'serve-files', 'upnp'",2015-03-07T03:11:15Z,2015-03-07T03:18:10Z,1,1,18,2,"('Sriharia', 6)",0,0,
cfpb/source-code-policy,The CFPB's official Source Code Policy.,"# CFPB Source Code Policy

This repository [contains](cfpb-source-code-policy.txt)
the official Source Code Policy of the
[Consumer Financial Protection Bureau](http://www.consumerfinance.gov/).

This repository also contains a [Markdown](http://daringfireball.net/projects/markdown/) version of 
[the policy](cfpb-source-code-policy.md).
This helps improve the layout, formatting, and web application integration.

For more about this policy and the philosophy behind it, see
[this blog entry](http://www.consumerfinance.gov/blog/the-cfpbs-source-code-policy-open-and-shared/).
",,2013-10-10T14:18:16Z,2021-12-19T17:26:53Z,6,5,33,13,"('Scott Cranfill', 13), ('virtix', 6), ('Scotchester', 5), ('marcesher', 4), ('benbalter', 2), ('jcastle-zz', 1)",1,1,
PaperAirplane-Dev-Team/BlackLight,A light Sina Weibo client for Android,"BlackLight 新浪微博客户端
---  
请注意，当前BlackLight的开发已经被冻结，直到2016年高考后重启。  
The development progress has been _FROZEN_ till June 2016.  
![Logo](https://raw.githubusercontent.com/PaperAirplane-Dev-Team/BlackLight/master/logo.png)  
[![Build Status](https://travis-ci.org/PaperAirplane-Dev-Team/BlackLight.svg?branch=master)](https://travis-ci.org/PaperAirplane-Dev-Team/BlackLight)  

详细介绍以及Changelog请见Play商店。   
源代码在GPLv3协议下发布。

由于新浪微博已经不再接受新的第三方客户端申请，因此BlackLight使用“黑魔法”的方式登录微博。要登录，您需要一个可用的微博App Key，这里有一个：  
个人娱乐之作，勿用于任何盈利性用途。  

如果你有意加入本项目，你可以阅读我们的Wiki以及下面的内容来获得有关指导。  

使用Android Studio导入
---
1. `git clone` 本项目到本地
2. 在`Android Studio` 中执行 `Import` 并耐心等待……等待……再等待
3. 调试编译时请选择`app`模块并进行调试编译（若选择`app-snapshot`会发生错误）  
4. Enjoy it!

直接使用Gradle编译
---
1. `git clone` 本项目到本地
2. 在项目根目录下运行 `gradle :app-snapshot:assembleDebug` （注意，不能编译 Release 版的 BlackLight Snapshot ）

使用AIDE导入
---
抱歉，我们不再支持AIDE。

编译非调试版本
---
如果您想编译非调试版本，即 `Release` 版本，请在项目根目录创建 `signing.properties`

```
STORE_FILE=/path/to/your/publish/keystore
STORE_PASSWORD=your_passwd
KEY_ALIAS=your_alias
KEY_PASSWORD=your_passwd
```

然后即可使用 `gradle :app:assembleRelease`


感谢
---
* 四次元(@qii)  
* 碎星iKe(@IssacWong)  
* clowwindy  
* drakeet  
* 日可待（绘制Logo）  
* 某中二的薛定谔之猫
* 小湖爱闹
* 九十九路比|Kenny  
* 加大号的猫


主要开发者
---
* @PeterCxy（码代码）  
* @Harry-Chen（制造bug）  
* @fython（酱油）  
* @xavieryao （编写梗）

纸飞机开发团队 @PaperAirplane-Dev-Team 出品
",,2014-08-16T10:20:41Z,2016-09-11T08:13:07Z,17,13,878,68,"('Peter Cai', 792), ('PeterCxy', 226), ('xavieryao', 196), ('Harry-Chen', 92), ('fython', 38), ('iptux', 30), ('kmod-midori', 17), ('xqs', 14), ('PeterCxy', 9), ('Rbcum', 8), ('Chin-Z', 3), ('2q1w2007', 3), ('123hurray', 2), ('drakeet', 2), ('lvzongting', 2), ('seasonyuu', 2), ('g8969479', 1)",1,0,
openskynetwork/java-adsb,Mode S and ADS-B decoding library for Java,"Note: a more elaborate and maintained branch of the library can be found here: https://github.com/SeRoSystems/lib1090

java-adsb
=========

This is a Mode S and ADS-B decoding library for Java. It is a product of the OpenSky Network project (http://www.opensky-network.org). It is based on these two references:
* ICAO Aeronautical Telecommunications Annex 10 Volume 4 (Surveillance Radar and Collision Avoidance Systems)
* RTCA DO-260B ""Minimum Operational Performance Standards (MOPS) for 1090ES""

It supports the following Mode S downlink formats:
* DF 0: Short air-air ACAS
* DF 4: Short altitude reply
* DF 5: Short identify reply
* DF 11: All-call reply
* DF 16: Long air-air ACAS
* DF 17/18: Extended Squitter (see ADS-B formats below)
* DF 19: Military Extended Squitter
* DF 20: Comm-B altitude reply
* DF 21: Comm-B identify reply
* DF >24: Comm-D Extended Length Message

The following ADS-B formats are supported:
* BDS 0,5: Airborne position messages (including global and local CPR)
* BDS 0,6: Surface position messages (including global and local CPR)
* BDS 0,8: Identification messages
* BDS 0,9: Airborne velocity messages
* BDS 6,1: Aircraft status reports (emergency/priority, TCAS RA)
* BDS 6,2: Target state and status messages
* BDS 6,5: Operational status reports (airborne and surface)

The Comm-B registers, Comm-D data link and military ES are not parsed. Comm-B and D will follow at some point.

The formats are implemented according to RTCA DO-260B, i.e. ADS-B Version 2. The decoder properly takes care of older versions.

### Packaging

This is a Maven project. You can simply generate a jar file with `mvn package`.
All the output can afterwards be found in the `target` directory. There will
be two jar files

* `libadsb-VERSION.jar` contains libadsb, only.
* `libadsb-VERSION-fat.jar` includes libadsb and all its dependencies.

#### Maven Central

We have also published this project on Maven Central. Just include the following dependency in your project:

```

  org.opensky-network
  libadsb
  VERSION

```

Get the latest version number [here](https://mvnrepository.com/artifact/org.opensky-network/libadsb).

## Usage

There are three different versions of ADS-B in the wild: 0, 1 and 2.
Transmitters' ADS-B version affects interpretation of certain messages. This holds in particular for aircraft's 
operational status information such as position accuracy and system equipage.

When decoding ADS-B, a receiver by default assumes version 0, unless told otherwise. This has no effect on basic 
information such as position and velocity. These fields are compatible between different versions. However, for full
awareness about an aircraft's capabilities, version information has to be taken into account. It is encoded in the
operational status message which is sent around every five seconds. Thus, decoding ADS-B has to be done in a stateful 
manner. Libadsb includes a stateful decoder which can be found in the class `ModeSDecoder`. Given a stream of encoded
messages, it returns decoded results of the inferred ADS-B version. This is represented by different types, e.g.,
`AirbornePositionV0Msg` and `AirbornePositionV1Msg` for versions 0 and 1. 

We recommend having a look at the [ExampleDecoder.java](src/main/java/org/opensky/example/ExampleDecoder.java) which
gives a detailed explanation on how to use libadsb.

A demonstration how this decoder can be used is provided in [OskySampleReader.java](https://github.com/openskynetwork/osky-sample/blob/master/src/main/java/org/opensky/tools/OskySampleReader.java). It reads, decodes, and prints serialized
ADS-B messages from avro-files with the OpenSky schema. A sample of such data and the schema is provided in the
[osky-sample repository](https://github.com/openskynetwork/osky-sample).


## Migration to Version 3

**!!If you have been using libadsb version 2.x and earlier: Version 3 is not a drop-in replacement. You have to adapt your existing code!!**

With libadsb version 3, many things have changed, including:
* **Switched to nautical units for altitude and speed.** We keep the values according to the standard.
* Introduction of a stateful decoder to correctly handle transmitters with different ADS-B versions
* Removal `MissingInformationException` - return `null` values instead
* Split operational status message into separate classes for different ADS-B versions
* Split airborne and surface position messages into separate classes for different ADS-B versions
* Proper mapping for NUCr to NACv
* Proper mapping, decoding and description for
  * Horizontal Containment Radius Limit (=Horizontal Protection Limit)
  * Navigation Accuracy Category for position (NACp)
  * Navigation Integrity Category (NIC)
* Added Source Integrity Level to position messages of version 0
* `getTransponderAddress()` returning integer representation of the ICAO 24 bit
  transponder address in addition to `getIcao24()` which returns raw bytes
* Added `distance3d()` method to `Position` and renamed `distanceTo()` to `haversine()`


### Migration Guide

#### General

* Remove MissingInformationExceptions, missing values are given as null instead
* Checking if info available is still possible:
    * Velocity:
      * `hasVerticalRateInfo()`
      * `hasVelocityInfo()`
      * `hasGeoMinusBaroInfo()`
* Altitudes are Integers (not doubles)
* Altitude in feet, not meters (use `tools.feet2Meters()` for conversion);
  The following message types are affected:
  * `AltitudeReply`
  * `CommBAltitudeReply`
  * `ShortACAS`
  * `LongACAS`
  * `AirbornePositionV?Msg`
* Replace all occurences of `Position.distanceTo()` with `Position.haversine()`

#### Position Messages

* Replace ModeSReply.subtype.ADSB_AIRBORN_POSITION with
  * ModeSReply.subtype.ADSB_AIRBORN_POSITION_V0
  * ModeSReply.subtype.ADSB_AIRBORN_POSITION_V1
  * ModeSReply.subtype.ADSB_AIRBORN_POSITION_V2

* Replace ModeSReply.subtype.ADSB_SURFACE_POSITION with
  * ModeSReply.subtype.ADSB_SURFACE_POSITION_V0
  * ModeSReply.subtype.ADSB_SURFACE_POSITION_V1
  * ModeSReply.subtype.ADSB_SURFACE_POSITION_V2

* No need to distinguish position messages of different versions for Decoder.
  Their common super class is `SurfacePositionV0Msg`/`AirbornePositionV0Msg` and
  the ADS-B version is irrelevant for *position* decoding

* No `isBarometricAltitude` for surface position messages anymore

* NIC supplements only available in versions 1 and 2 (new method hasNICSupplementX)
* Method for time flag renamed to `hasTimeFlag`
* Ground speed in surface positions in knots instead of m/s (use `tools.knots2MetersPerSecond()` for conversion)

#### Operational Status Messages

* Operational Status now in four different classes. No need to distinguish
  subtype codes by the user (airborne = 0, surface = 1)
  * Have a look at the API to see available fields of different ADS-B versions. Many things have changed here.
  * V0: only TCAS and CDTI, no distinction between airborne and surface
  * V2: only SIL supplement is new in version 2, if not needed you can use V1
    for both versions

* Replace ModeSReply.subtype.ADSB_STATUS with
  * ModeSReply.subtype.ADSB_STATUS_V0
  * ModeSReply.subtype.ADSB_AIRBORN_STATUS_V1
  * ModeSReply.subtype.ADSB_AIRBORN_STATUS_V2

* Replace ModeSReply.subtype.ADSB_STATUS with
  * ModeSReply.subtype.ADSB_STATUS_V0
  * ModeSReply.subtype.ADSB_SURFACE_STATUS_V1
  * ModeSReply.subtype.ADSB_SURFACE_STATUS_V2

#### Velocity and Airspeed Messages

* VelocityOverground: `getNavigationAccuracyCategory` replaced by `getNACv` and returns meters,
  not the category as byte
* Velocity now in knots instead of m/s (use `tools.knots2MetersPerSecond()` for conversion)
* Vertical rate in feet/min instead of m/s (use `tools.feetPerMinute2MetersPerSecond()` for conversion)
* geoMinurBaro in feet, not meters (use `tools.feet2Meters()` for conversion)


#### Long/Short ACAS

* MaximumAirspeed in knots instead of m/s (use `tools.knots2MetersPerSecond()` for conversion)

",,2014-09-14T22:26:24Z,2022-09-10T14:05:48Z,13,8,103,20,"('fixje', 89), ('Matthias Schäfer', 70), ('affitz', 68), ('Mattias Schaefer', 14), ('Matthias Schäfer', 11), ('OpenSky Network', 4), ('lpdalto', 4), ('openskynetwork', 2), ('yanghsu', 2), ('wiseman', 1), ('marcusvb', 1), ('wnagele', 1), ('dependabotbot', 1)",4,4,
siamaksade/jenkins-s2i-example,,"# Jenkins S2I Example

An example demonstrating Jenkins S2I features for installing plugins, configuring jobs, Jenkins, etc and using slave pods for Jenkins jobs.

## Installation

1. Create a new OpenShift project, where the Jenkins server will run:

  ```
  $ oc new-project ci --display-name=""CI/CD""
  ```

2. Give the Jenkins Pod service account rights to do API calls to OpenShift. This allows us to do the Jenkins Slave image discovery automatically.

  ```
  $ oc policy add-role-to-user edit -z default -n ci
  ```

3. Install the provided OpenShift templates:

  ```
  $ oc create -f jenkins-slave-builder-template.yaml   # For converting any S2I to Jenkins slave
  $ oc create -f jenkins-master-s2i-template.yaml      # For creating pre-configured Jenkins master using Jenkins S2I
  ```

5. Build Jenkins slave image.

  ```
  $ oc new-app jenkins-slave-builder
  ```

4. Create Jenkins master. You can customize the source repo and other configurations through template parameters. Note that this example doesn't define any [persistent volume](https://docs.openshift.com/enterprise/3.2/architecture/additional_concepts/storage.html). You need to define storage in order to retain Jenkins data on container restarts. 

  ```
  $ oc new-app jenkins-master-s2i
  ```
",,2016-05-23T07:32:41Z,2016-05-26T11:46:35Z,1,1,20,3,"('siamaksade', 19)",0,0,
7compass/s3-mysql-backup,,"# S3 MySQL Backup

Simple backup of a MySQL database to Amazon S3,
with email notification via SMTP.


## What does it do?

It makes a gzipped and timestamped local backup of the specified
database using mysqldump.  The local backup is then copied to
Amazon S3, and the results are emailed to the specified recipient.

Local and S3 backups are retained at this schedule:
- keep 30 days complete
- keep 90 days weekly beyond that
- keep only monthly after that

The email summary is a short email like:

    From:    my-user@example.com
    To:      my-recipient@example.com
    Date:    2012-12-22
    Subject: sql backup: my_database_name: 42.0 MB

    my_database_name.20121222.170134.sql.gz


## Configuration

Configure with a YAML file:

```yaml

# backup_dir            where to store the local backups, default is ~/s3_mysql_backups
backup_dir: ~/s3_mysql_backups
# remote_dir            OPTIONAL, where to store the remote backups, default is the root of your s3_bucket
remote_dir: /path/to/remote/backups

# s3_access_key_id      your Amazon S3 access_key_id
# s3_secret_access_key  your Amazon S3 secret_access_key
# s3_bucket             your Amazon S3 bucket for the backups
# s3_server             OPTIONAL, your non-Amazon S3-compatible server
# s3_region: us-west-2  OPTIONAL, your aws region when not using the default
s3_access_key_id: my-key
s3_secret_access_key: my-secret
s3_bucket: my-bucket

# dump_host             OPTIONAL, your mysql host name
# dump_user             the database user for mysqldump
# dump_pass             the password for the dump user
dump_user: my-user
dump_pass: my-pass

# mail_to               where to send the backup summary email
mail_to: recipient@example.com

# Mail credentials
mail_user: me@example.com
mail_pass: example_password
mail_from: noreply@example.com  # OPTIONAL, defaults to mail_user
mail_domain: smtp.example.com   # OPTIONAL, defaults to: smtp.gmail.com
mail_port: 587                  # OPTIONAL, defaults to: 587
mail_authentication: login      # OPTIONAL, defaults to: :login
mail_start_tls: true            # OPTIONAL, defaults to: true

```


## Installation

    gem install s3-mysql-backup


## Usage

From Ruby:

    S3MysqlBackup.new(""database_name"", ""/path/to/s3-mysql-backup-config.yml"").run
    or
    S3MysqlBackup.new(""database_name"", { hash: of_options }).run

From command line:

    s3-mysql-backup database_name /path/to/s3-mysql-backup-config.yml

If you're using bundler:

    cd /path/to/my/app && bundle exec s3-mysql-backup database_name /path/to/s3-mysql-backup-config.yml


## Todo

Write tests


## Changelog
- 2014-03-24 2.1.1 Bugfix for deleting old backups not happening
- 2013-10-13 2.1.0 Allow other mail hosts, allow Hash config at runtime (https://github.com/7compass/s3-mysql-backup/pull/7)
- 2013-06-01 1.2.2 Bugfix for passwords with spaces
- 2013-06-01 1.2.1 Added mysql host option (github.com/sagrimson)
- 2013-05-30 1.1.0 Added support for S3-compatible services, e.g. DreamObjects (thanks to John N. Milner - github.com/jnm)

## Credits

2008+ Seventh Compass
",,2013-04-07T17:40:13Z,2017-05-18T13:28:54Z,8,6,45,3,"('jemminger', 30), ('danahern', 6), ('Jeff Emminger', 3), ('Scott Agrimson', 3), ('cdwilhelm', 2), ('fletchowns', 1), ('jnm', 1), ('inkblot', 1)",3,3,
the-ethan-hunt/B.E.N.J.I.,B.E.N.J.I.- The Impossible Missions Force's digital assistant,"# B.E.N.J.I.

[![Built with ❤](https://forthebadge.com/images/badges/built-with-love.svg)](https://forthebadge.com/#)

[![works on Windows](https://img.shields.io/badge/works%20on-Windows-blue.svg)](http://shields.io/#your-badge)
[![works on Linux](https://img.shields.io/badge/works%20on-Linux-green.svg)](http://shields.io/#your-badge)
[![Works on Max](https://img.shields.io/badge/works%20on-Mac-yellow.svg)](http://shields.io/#your-badge)


[![made with &hearts in Python](https://img.shields.io/badge/made%20with%20%E2%9D%A4%20in-Python-red.svg)](http://shields.io/#your-badge)

[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.png)](https://gitter.im/B-E-N-J-I/Lobby)



	
	
	


A digital assistant for your device that uses speech-recognition to obey your commands

NOTE #1: B.E.N.J.I. has participated in the following Open-Source Programs: Kharagpur Winter of Code 2017, GirlScript Summer Of Code 2018, NJACK Winter of Code 2018 and Kharagpur Winter of Code 2018 :tada:

NOTE #2: I was invited to talk about B.E.N.J.I at the Open-Source Summit held at IIT Kharagpur on the 21st of January 2018. You can view the slides [here](https://github.com/the-ethan-hunt/B.E.N.J.I./blob/master/OSS_IIT_KGP_Dhruv_Apte.pdf). The video session is available to watch [here](https://www.youtube.com/watch?v=dydyiqR49KE&list=PLzumvJj1-3nDRq6Le2bFSmbtz0g7CppKb&index=11) :tada:

Maintainers : [Dhruv Apte](https://github.com/the-ethan-hunt), [Abhimanyu Thakre](https://github.com/abhimanyuthakre)

### List of contents

- [Declassified debrief](#declassified-debrief)
- [Installation](#installation)
- [Contributing](#contributing)
- [FAQs](#faqs)
- [License](#license)

### Declassified debrief

[(Back to top)](#list-of-contents)

Impossible Missions Force's debrief issued to the POTUS dated 30th May 2017:
&nbsp;&nbsp;&nbsp; ""On properly documented analysis and Congressional finding, the Impossible Missions Force(IMF) therefore, declassifies it's junior level digital assistant titled B.E.N.J.I.,short for Brilliant and Efficient non-Javascript enabled Intelligence Systems for civilian use. It might be noted that, this is only for peaceful purposes and the IMF does not hold any responsibility on its misuse. The Force however,has full right to control the activities of the system both,legally and illegally. The Force also submits that any covert action taken due to the system is not questionable to any Congressional hearing. Finally the Force asserts that its agents,operatives or analysts neither accept nor deny details of any operation regarding B.E.N.J.I. to any hearing without the Secretary's approval.""


### Installation

[(Back to top)](#list-of-contents)

You can install B.E.N.J.I. on your laptop by cloning this repository as of first:
1. `git clone http://github.com/the-ethan-hunt/B.E.N.J.I.`
2. Open your `IPython notebook` to `%run benji.py`. For `Command Prompt` try `python benji.py`. 
Note:If a module is not found, then install each module by: pip install modulename
P.S. B.E.N.J.I. now works for Windows, Linux and Mac OS :tada:

#### Mac Installation Troubleshooting

````
    creating build/temp.macosx-10.12-x86_64-3.6/src
    clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -DMACOSX=1 -I/usr/local/include -I/usr/local/opt/openssl/include -I/usr/local/opt/sqlite/include -I/usr/local/Cellar/python3/3.6.4/Frameworks/Python.framework/Versions/3.6/include/python3.6m -c src/_portaudiomodule.c -o build/temp.macosx-10.12-x86_64-3.6/src/_portaudiomodule.o
    src/_portaudiomodule.c:29:10: fatal error: 'portaudio.h' file not found
    #include ""portaudio.h""
             ^~~~~~~~~~~~~
    1 error generated.
    error: command 'clang' failed with exit status 1

    ----------------------------------------
Command ""/usr/local/opt/python3/bin/python3.6 -u -c ""import setuptools, tokenize;__file__='/private/var/folders/fv/cy3_1czs31q64478bzxd7_m5vdlrd8/T/pip-build-z73z9sim/PyAudio/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /var/folders/fv/cy3_1czs31q64478bzxd7_m5vdlrd8/T/pip-wh091sp7-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /private/var/folders/fv/cy3_1czs31q64478bzxd7_m5vdlrd8/T/pip-build-z73z9sim/PyAudio/
You are using pip version 9.0.1, however version 10.0.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
````
Command to solve the above: ```brew install portaudio && pip3 install pyaudio```

```
Traceback (most recent call last):
  File ""MacOS/benji.py"", line 3, in 
    from PIL import ImageTk
ModuleNotFoundError: No module named 'PIL'
```
Command to solve the above: ```pip3 install Pillow```

```
Traceback (most recent call last):
  File ""MacOS/benji.py"", line 10, in 
    import wikipedia
ModuleNotFoundError: No module named 'wikipedia'
```
Command to solve the above: ```pip3 install wikipedia```

```
Traceback (most recent call last):
  File ""MacOS/benji.py"", line 21, in 
    import speech_recognition as sr
ModuleNotFoundError: No module named 'speech_recognition'
```
Command to solve the above: ```pip3 install SpeechRecognition```

```
Traceback (most recent call last):
  File ""MacOS/benji.py"", line 23, in 
    import pyttsx3
ModuleNotFoundError: No module named 'pyttsx3'
```
Command to solve the above: ```pip3 install pyttsx3```

Change the pip version above according to what you have installed on your mac.

### B.E.N.J.I working in Linux
![Working in Linux](working-benjion-linux.gif)

### B.E.N.J.I working on Windows
![Working on Windows](working-benji-windows.gif)

### B.E.N.J.I working on Mac
![Working on Windows](working-benji-mac.gif)

### Contributing

[(Back to top)](#list-of-contents)

Contributions are welcomed heartily; any new `feature` or a `bug fix` is great! :smile: 

### FAQs

[(Back to top)](#list-of-contents)

1. How to use B.E.N.J.I. to open a website/webpage?
* Say ""facebook.com"" and B.E.N.J.I. will open the requested page. Here, it's important to specify the top-level domain i.e. "".com"".
2. How to use the news feature?
* Say ""news the hindu"" and B.E.N.J.I. will open list of latest ""news"" by requested news agency.
3. How to use the recording feature? (Windows)
* ""UScreenCapture"" and ""ffmpeg"" needed to run this feature.   

### License

[(Back to top)](#list-of-contents)

The MIT License 2017 - [Dhruv Apte](http://github.com/the-ethan-hunt/).
","'digital-assistant', 'python3', 'speech-recognition', 'speech-to-text'",2017-06-14T16:31:43Z,2023-04-21T15:42:47Z,29,28,91,19,"('the-ethan-hunt', 117), ('abhimanyuthakre', 58), ('Snehal-Reddy', 49), ('hmangukia', 41), ('rishabh0098', 25), ('prasenjit', 17), ('Yatish04', 15), ('Kaushal Bhogale', 14), ('Pratik-Sanghani', 13), ('rohanricky', 12), ('aribalam', 9), ('srishilesh', 8), ('lapalb', 5), ('shyamkanani', 4), ('Kitwradr', 3), ('Man-Jain', 3), ('angelapwen', 3), ('RajatGarg97', 2), ('toshal-a', 2), ('amrs-tech', 1), ('AneriMehta', 1), ('BrianMwangi21', 1), ('Joe1912', 1), ('NIteshx2', 1), ('preeti98', 1), ('shubhpatel108', 1), ('vchrombie', 1), ('agarwalrounak', 1), ('dependabotbot', 1)",10,10,
IFL-CAMP/supra,SUPRA: Software Defined Ultrasound Processing for Real-Time Applications - An Open Source 2D and 3D Pipeline from Beamforming to B-Mode,"![SUPRA Logo](http://campar.in.tum.de/files/goeblr/supra_logo_full_small.png ""SUPRA Logo"")

SUPRA: Open Source Software Defined Ultrasound Processing for Real-Time Applications
================

By the [Chair for Computer Aided Medical Procedures](http://campar.in.tum.de/)

[![TUM](http://campar.in.tum.de/files/goeblr/TUM_Web_Logo_blau.png ""TUM Logo"")](http://tum.de)

Main contributors: 

* R&uuml;diger G&ouml;bl
* Dr. Christoph Hennersperger

Supported by [EDEN2020](http://eden2020.eu)

[![EDEN2020 Logo](http://campar.in.tum.de/files/goeblr/EDEN2020_Logo_Small.jpg ""EDEN2020 Logo"")](http://eden2020.eu)


A 2D and 3D Pipeline from Beamforming to B-mode
----------------

**SUPRA** is an open-source pipeline for fully software 
defined ultrasound processing for real-time applications.
Covering everything from beamforming to output of B-Mode images, SUPRA
can help reproducibility of results and allows modifications to the image acquisition.

Including all processing stages of a usual ultrasound pipeline, it can be executed in 2D and 3D on consumer GPUs in real-
time. Even on hardware as small as the CUDA enabled Jetson TX2 **SUPRA** can be run for 2D imaging in real-time.

![Standard ultrasound pipeline and where the processing takes place. Transmit beamforming is performed on the CPU, transmit and receive are performed in specialized hardware. All other processing steps (receive beamforming, envelope detection, log-compression, scan-conversion) happen in software and on the GPU](http://campar.in.tum.de/files/goeblr/UsPipeline_small.png ""Standard pipeline and where the processing takes place"")

Getting started
----------------
To get an overview of the concepts behind SUPRA and how you can use and modify it, head over to the [wiki](https://github.com/IFL-CAMP/supra/wiki), or have a look at the recording of SUPRA-con at YouTube [SUPRA-con Playlist](https://www.youtube.com/watch?v=dQkUSpV2CtE&list=PLWMNh90FOFSiGOA_VilmuRVqD_5goBrJq).

License
----------------
LGPL v2.1
see [LICENSE](LICENSE)

Publication
----------------
If you use SUPRA for your research, please cite our work
[https://doi.org/10.1007/s11548-018-1750-6](https://doi.org/10.1007/s11548-018-1750-6)

G&ouml;bl, R., Navab, N. & Hennersperger, C. , ""SUPRA: Open Source Software Defined Ultrasound Processing for Real-Time Applications"" Int J CARS (2018). https://doi.org/10.1007/s11548-018-1750-6

	@Article{Goebl2018supra,
		author=""G{\""o}bl, R{\""u}diger and Navab, Nassir and Hennersperger, Christoph"",
		title=""SUPRA: open-source software-defined ultrasound processing for real-time applications"",
		journal=""International Journal of Computer Assisted Radiology and Surgery"",
		year=""2018"",
		month=""Mar"",
		day=""28"",
		issn=""1861-6429"",
		doi=""10.1007/s11548-018-1750-6"",
		url=""https://doi.org/10.1007/s11548-018-1750-6""
	}

Building
----------------
### Requirements

* cmake &ge; 3.4
* gcc &ge; 4.8 or min. Visual Studio 2015 (Compiler needs to be supported by CUDA! For that, see the CUDA installation instructions.)
* QT &ge; 5.5
* TBB
* CUDA &ge; 10.0

	
### Build instructions (Ubuntu 16.04 / 18.04)

Install CUDA (&ge; 10.0) as described by NVIDIA https://developer.nvidia.com/cuda-downloads .
Keep in mind that the C++ host compiler has to be supported by the CUDA version.
(Check http://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html and http://docs.nvidia.com/cuda/cuda-installation-guide-microsoft-windows/index.html for details.)

Build requirements

	apt-get install cmake cmake-gui qt5-default libtbb-dev libopenigtlink-dev git
	
SUPRA

	mkdir -p $HOME/git && cd $HOME/git #(or your favorite directory for repositories)
	git clone https://github.com/IFL-CAMP/supra.git
	cd supra
	mkdir -p build && cd build
	cmake-gui ..
	
1. Configure
2. For systems with multiple gcc versions, make sure to select one supported by the installed CUDA version
3. You might need to specify the CUDA toolkit directory (usually ""`/usr/local/cuda`"")
4. Configure & Generate, then close cmake and build
5. Build SUPRA
	
	make -j5
	
6. Start SUPRA: See below

### Building with PyTorch inference (via libtorch)

1. Download the stable libtorch for CUDA 10.0 from pytorch.org
   
        https://download.pytorch.org/libtorch/cu100/libtorch-win-shared-with-deps-latest.zip
        https://download.pytorch.org/libtorch/cu100/libtorch-shared-with-deps-latest.zip 
   
   Tested version: 1.1.0:
   
        https://download.pytorch.org/libtorch/cu100/libtorch-win-shared-with-deps-1.1.0.zip
        https://download.pytorch.org/libtorch/cu100/libtorch-shared-with-deps-1.1.0.zip

2. Install cuDNN
3. Unpack libtorch (e.g. to `supra/external` on windows or `/opt/` on linux)
4. Activate `SUPRA_TORCH` in cmake (e.g. in the GUI, or via `-DSUPRA_TORCH=ON`)
5. Point cmake to the libtorch you just extracted (e.g. `supra/external/libtorch/share/cmake/Torch` or `/opt/libtorch/share/cmake/Torch`)
6. Configure and build
=======
	
Demo (No US-system required!)
----------------

Change to your build directory. If you used the commands above, you can execute

	cd $HOME/git/supra/build

Start the SUPRA GUI with a demo config file

	src/GraphicInterface/SUPRA_GUI -c data/configDemo.xml -a
	
Where `-c` defines the config file to load and `-a` is autostart.

This shows a complete ultrasound pipeline running on your computer from raw channel data recorded with
a Cephasonics system and a 7MHz linear probe.
With the dropdown menu ""Preview Node"", you can select which stage of the pipeline to inspect.
For the final state of the image, select ""SCAN"", which shows the output of the scan-converter - the B-mode.

Start the SUPRA GUI with a demo 3D config file

	src/GraphicInterface/SUPRA_GUI -c data/configDemo3D.xml -a
	
Used libraries
----------------

**SUPRA** uses tinyxml2 which is awesome and distributed under the zlib-license. For more details see the [tinyxml2 README](src/SupraLib/utilities/tinyxml2/readme.md) and (http://grinninglizard.com/tinyxml2/index.html and https://github.com/leethomason/tinyxml2)

**SUPRA** also uses jsoncpp for more structured data handling which is distributed under the MIT license. For more details see the [jsoncpp README](src/SupraLib/utilities/jsoncpp/README.md)

On windows, ROS-message headers generated with [rosserial](http://wiki.ros.org/rosserial) are used and are included in the source.
On Linux, the usual ROS-libraries are used during build. (roscpp, geometry_msgs)

**SUPRA** additionally uses the Intel Thread Building Blocks (but does not provide them) in their Apache 2.0 licensed form. https://www.threadingbuildingblocks.org/

Finally, it can be built against
	
* QT (LGPLv3)
* IGTL (BSD 3clause)
* CAMPVis (Apache 2.0) (unfortunately, the respective QT5 version is not yet public)

### Alternate Builds

REST interface instead of graphical interface
----------------

Build requirements

	apt-get install cmake cmake-gui libtbb-dev libopenigtlink-dev libcpprest-dev libboost-all-dev git
	
SUPRA

	mkdir -p $HOME/git && cd $HOME/git #(or your favorite directory for repositories)
	git clone https://github.com/IFL-CAMP/supra.git
	cd supra
	mkdir -p build && cd build
	cmake-gui .. -DSUPRA_INTERFACE_REST=ON -DSUPRA_INTERFACE_GRAPHIC=OFF

1. Configure
2. For systems with multiple gcc versions, make sure to select one supported by the installed CUDA version
3. You might need to specify the CUDA toolkit directory (usually ""`/usr/local/cuda`"")
4. Configure & Generate, then close cmake and build
5. Build SUPRA
	
	make -j5
	
6. Start SUPRA: See below

#### Rest Interface Queries

SUPRA accepts GET and POST requests.

The IP address / hostname SUPRA can be reached with is referred as `SUPRA_URL` below.

##### GET REQUESTs

`SUPRA_URL/nodes/[var]` where var can be `input` to return all input nodes, `output` to get only the output nodes and empty or `all` to return all nodes regardless of their types.
The shape of the object in response's body will be 
`{""nodeIDs"":[String]}`.

`SUPRA_URL/parameters` returns all parameters for one node.
The shape of the object to send with the body is `{""nodeID"":""ID""}`.


##### POST REQUESTs

`SUPRA_URL/parameters` sets the value of a parameter of a node. The request has to be shaped like below.

	{
		""nodeID"":""id"",
		""parameterID"":""id"",
		""value"":""value""
	}


Demo (No US-system required!)
----------------

Change to your build directory. If you used the commands above, you can execute

	cd $HOME/git/supra/build

Start the SUPRA GUI with a demo config file

	src/RestInterface/SUPRA_REST data/configDemo.xml
	
Additionaly used libraries
----------------
See above for most used libraries. This build uses additionally:
* Microsoft C++ Rest SDK >=2.8 - (BSD 3clause)
* Boost (MIT)

Generate a self-building deb source file
----------------

Build Requirements:

	apt-get install debmake

	cd supra
	debmake -cc >> copyright
	mkdir -p build && cd build
	cmake ..
	make package_source

The deb file can be found in the 'binpackages' folder.

When installing the deb file in a system the package will try to build with the standard cmake configuration on that system.

Acknowledgement
----------------

SUPRA logo by Raphael Kretz.

![EU flag](http://campar.in.tum.de/files/goeblr/EUflag.png ""EU flag"")

This project has received funding from the European Union's Horizon 2020 research and innovation programme under grant agreement No. 688279.
","'2d', '3d', 'cuda', 'openigtlink', 'pipeline', 'real-time', 'software-defined', 'supra', 'tum', 'ultrasound', 'ultrasound-imaging', 'ultrasound-pipeline'",2017-10-25T09:16:17Z,2021-01-22T09:42:54Z,11,6,178,16,"('goeblr', 305), ('chennersp', 52), ('marcoesposito1988', 4), ('berndmweber', 3), ('shekhardw', 3), ('Tobias Muschialik', 3), ('Unknown', 2), ('Amir', 1), ('Christoph Hennersperger', 1), ('Rudiger Gobl', 1), ('faraxnak', 1)",4,1,
Piasy/BigImageViewer,"Big image viewer supporting pan and zoom, with very little memory usage and full featured image loading choices. Powered by Subsampling Scale Image View, Fresco, Glide, and Picasso. Even with gif and webp support! 🍻","# BigImageViewer



Big image viewer supporting pan and zoom, with very little memory usage and full
featured image loading choices. Powered by [Subsampling Scale Image
View](https://github.com/davemorrissey/subsampling-scale-image-view),
[Fresco](https://github.com/facebook/fresco),
[Glide](https://github.com/bumptech/glide), and
[Picasso](https://github.com/square/picasso). Even with gif and webp support!

## Demo

![memory usage](art/android_studio_memory_monitor.png)

pan and zoom               |  gif support
:-------------------------:|:-------------------------:
![demo](art/fresco_big_image_viewer_demo.gif)  |  ![gif support](art/biv_gif_support.gif)

## Getting started

### Add the dependencies

**Note: please put this download url at the first of your `repositories` part, otherwise, gradle may search in wrong place.**

``` gradle
allprojects {
    repositories {
        mavenCentral()
    }
}

implementation 'com.github.piasy:BigImageViewer:1.8.1'

// load with fresco
implementation 'com.github.piasy:FrescoImageLoader:1.8.1'

// load with glide
implementation 'com.github.piasy:GlideImageLoader:1.8.1'

// progress pie indicator
implementation 'com.github.piasy:ProgressPieIndicator:1.8.1'

// support thumbnail, gif and webp with Fresco
implementation 'com.github.piasy:FrescoImageViewFactory:1.8.1'

// support thumbnail and gif with Glide
implementation 'com.github.piasy:GlideImageViewFactory:1.8.1'
```

### Initialize

``` java
// MUST use app context to avoid memory leak!
// load with fresco
BigImageViewer.initialize(FrescoImageLoader.with(appContext));

// or load with glide
BigImageViewer.initialize(GlideImageLoader.with(appContext));

// or load with glide custom component
BigImageViewer.initialize(GlideCustomImageLoader.with(appContext, CustomComponentModel.class));
```

**Note that** if you've already used Fresco in your project, please change
`Fresco.initialize` into `BigImageViewer.initialize`.

### Add the BigImageView to your layout

``` xml
<com.github.piasy.biv.view.BigImageView
        android:id=""@+id/mBigImage""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent""
        app:failureImage=""@drawable/failure_image""
        app:failureImageInitScaleType=""center""
        app:optimizeDisplay=""true""
        />
```

You can disable display optimization using `optimizeDisplay` attribute, or
`BigImageView.setOptimizeDisplay(false)`, which will disable animation for long
image, and the switch between thumbnail and origin image.

### Show the image

``` java
BigImageView bigImageView = (BigImageView) findViewById(R.id.mBigImage);
bigImageView.showImage(Uri.parse(url));
```

## Usage

### Animated image support

Since 1.5.0, BIV support display animated image, e.g. gif and animated webp, to achieve that,
you need set a custom `ImageViewFactory` via `biv.setImageViewFactory`:

``` java
// FrescoImageViewFactory is a prebuilt factory, which use Fresco's SimpleDraweeView
// to display animated image, both gif and webp are supported.
biv.setImageViewFactory(new FrescoImageViewFactory());

// GlideImageViewFactory is another prebuilt factory, which use ImageView to display gif,
// animated webp is not supported (although it will be displayed with ImageView,
// but it won't animate).
biv.setImageViewFactory(new GlideImageViewFactory());
```

Node: if the image is not gif or animated webp, then it will be displayed by SSIV,
the image type is not determined by its file extension, but by its file header magic code.

### Thumbnail support

To show a thumbnail before the big image is loaded, you can call below version of `showImage`:

``` java
bigImageView.showImage(Uri.parse(thumbnail), Uri.parse(url));
```

Note: make sure that you have already called `setImageViewFactory`.

### Shared element transition support (experimental)

Since 1.6.0, BIV has experimental support for shared element transition,
but it has following known issues:

+ The shared image may flicker during enter transition, or become white after return transition,
when using Fresco, see [Fresco issue #1445](https://github.com/facebook/fresco/issues/1445);
+ The shared image may flicker after return transition, especially after you zoomed SSIV;

You can play with the demo app to evaluate the shared element transition support.

### Download progress indicator

``` java
bigImageView.setProgressIndicator(new ProgressPieIndicator());
```

There is one built-in indicator, `ProgressPieIndicator`, you can implement your
own indicator easily, [learn by example](/ProgressPieIndicator).

### Prefetch

You can prefetch images in advance, so it could be shown immediately when user
want to see it.

``` java
BigImageViewer.prefetch(uris);
```

### Save image into gallery

``` java
bigImageView.setImageSaveCallback(new ImageSaveCallback() {
    @Override
    public void onSuccess(String uri) {
        Toast.makeText(LongImageActivity.this,
                ""Success"",
                Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onFail(Throwable t) {
        t.printStackTrace();
        Toast.makeText(LongImageActivity.this,
                ""Fail"",
                Toast.LENGTH_SHORT).show();
    }
});

// should be called on worker/IO thread
bigImageView.saveImageIntoGallery();
```

### Get current image file

``` java
// only valid when image file is downloaded.
File path = bigImageView.getCurrentImageFile();
```

### Image init scale type

You can set the normal image scale type using `initScaleType` attribute, or `setInitScaleType`.

``` java
mBigImageView.setInitScaleType(BigImageView.INIT_SCALE_TYPE_CENTER_CROP);
```

| value | effect |
| ------| ------ |
| center | Center the image in the view, but perform no scaling. |
| centerCrop | Scale the image uniformly (maintain the image's aspect ratio) so that both dimensions (width and height) of the image will be equal to or larger than the corresponding dimension of the view (minus padding). The image is then centered in the view. |
| centerInside | Scale the image uniformly (maintain the image's aspect ratio) so that both dimensions (width and height) of the image will be equal to or less than the corresponding dimension of the view (minus padding). The image is then centered in the view. |
| fitCenter | Scales the image so that it fits entirely inside the parent. At least one dimension (width or height) will fit exactly. Aspect ratio is preserved. Image is centered within the parent's bounds. |
| fitEnd | Scales the image so that it fits entirely inside the parent. At least one dimension (width or height) will fit exactly. Aspect ratio is preserved. Image is aligned to the bottom-right corner of the parent. |
| fitStart | Scales the image so that it fits entirely inside the parent. At least one dimension (width or height) will fit exactly. Aspect ratio is preserved. Image is aligned to the top-left corner of the parent. |
| fitXY | Scales width and height independently, so that the image matches the parent exactly. This may change the aspect ratio of the image. |
| custom | Scale the image so that both dimensions of the image will be equal to or less than the maxScale and equal to or larger than minScale. The image is then centered in the view. |
| start | Scale the image so that both dimensions of the image will be equal to or larger than the corresponding dimension of the view. The top left is shown. |

Note: SSIV only support centerCrop, centerInside, custom and start, other scale types are
treated as centerInside, while other scale types may be used by animated image types.

### Failure image

You can set a local failure image using `failureImage` attribute, or `setFailureImage`.

It will displayed using an `ImageView` when the image network request fails. If not specified,
nothing is displayed when the request fails.

#### Failure image init scale type

You can set the failure image scale type using `failureImageInitScaleType` attribute,
or `setFailureImageInitScaleType`.

Any value of [ImageView.ScaleType](https://developer.android.com/reference/android/widget/ImageView.ScaleType.html)
is valid. Default value is `ImageView.ScaleType.FIT_CENTER`. It will be ignored if there is
no failure image set.

#### Tap to retry

When failure image is specified, you can tap the failure image then it will retry automatically.
That's the default behavior, you can change it using `tapToRetry` attribute, or `setTapToRetry`.

### Image load callback

You can handle the image load response by creating a new `ImageLoader.Callback`
and overriding the key callbacks

```java
ImageLoader.Callback myImageLoaderCallback = new ImageLoader.Callback() {
    @Override
    public void onCacheHit(int imageType, File image) {
      // Image was found in the cache
    }

    @Override
    public void onCacheMiss(int imageType, File image) {
      // Image was downloaded from the network
    }

    @Override
    public void onStart() {
      // Image download has started
    }

    @Override
    public void onProgress(int progress) {
      // Image download progress has changed
    }

    @Override
    public void onFinish() {
      // Image download has finished
    }

    @Override
    public void onSuccess(File image) {
      // Image was retrieved successfully (either from cache or network)
    }

    @Override
    public void onFail(Exception error) {
      // Image download failed
    }
}
```

Then setting it as the image load callback

```java
mBigImageView.setImageLoaderCallback(myImageLoaderCallback);
```

The `onSuccess(File image)` is always called after the image was retrieved
successfully whether from the cache or the network.

For an example, see ImageLoaderCallbackActivity.java

### Cancel image loading

BIV will cancel image loading automatically when detach from window, you can also call `cancel`
to cancel it manually.

You can also call `BigImageViewer.imageLoader().cancelAll();` in an appropriate time,
e.g. Activity/Fragment's `onDestroy` callback, to cancel all flying requests, avoiding memory leak.

### Full customization

You can get the SSIV instance through the method below:

``` java
public SubsamplingScaleImageView getSSIV() {
    return mImageView;
}
```

Then you can do anything you can imagine about SSIV :)

Note: you should test whether SSIV is null, because the image could be a gif,
then it won't be displayed by SSIV.

### Custom SSIV support

You can even use your own custom SSIV, by calling `biv.setImageViewFactory()`,
passing in a factory that override `createStillImageView`, and return your custom SSIV.

### Custom Glide components support

You can use your custom Glide's [components](https://bumptech.github.io/glide/doc/configuration.html#registering-components).
If you have customized your Glide's configuration, you are able to apply that configuration to BIV too, to do that you only have to initialize BIV in this way:

```java
BigImageViewer.initialize(GlideCustomImageLoader.with(appContext, CustomComponentModel.class));
```

Where `CustomComponentModel.class` is the Glide's model component. That's it!

For more detailed example, please refer to [the example project](https://github.com/Piasy/BigImageViewer/tree/master/app/src/main/java/com/github/piasy/biv/example/glide).

## Caveats

+ Handle permission when you want to save image into gallery.
+ When you want load local image file, you can create the Uri via
`Uri.fromFile`, but the path will be url encoded, and may cause the image loader
fail to load it, consider using `Uri.parse(""file://"" + file.getAbsolutePath())`.
+ When using with RecyclerView or ViewPager, the recycled BIV doesn't know
it should clear the loaded image or reload the image,
so you need manually notify it in some way,
see [issue 107](https://github.com/Piasy/BigImageViewer/issues/107),
and [issue 177](https://github.com/Piasy/BigImageViewer/issues/177).
+ Crash on Android 4.x device? You could force gradle to use a specific version of OkHttp (some version earlier than 3.13.0), by adding this block to your module's build.gradle, please note that it should be added at the top level, not inside any other block:

    ```gradle

    configurations {
      all {
        resolutionStrategy {
          eachDependency { DependencyResolveDetails details ->
            if (details.requested.group == 'com.squareup.okhttp3' &&
                details.requested.name ==
                'okhttp') {
              // OkHttp drops support before 5.0 since 3.13.0
              details.useVersion '3.12.6'
            }
          }
        }
      }
    }
    ```

## Why another big image viewer?

There are several big image viewer libraries,
[PhotoDraweeView](https://github.com/ongakuer/PhotoDraweeView),
[FrescoImageViewer](https://github.com/stfalcon-studio/FrescoImageViewer), and
[Subsampling Scale Image
View](https://github.com/davemorrissey/subsampling-scale-image-view).

They both support pan and zoom. PhotoDraweeView and FrescoImageViewer both use
Fresco to load image, which will cause extremely large memory usage when showing
big images. Subsampling Scale Image View uses very little memory, but it can
only show local image file.

This library show big image with Subsampling Scale Image View, so it only uses
very little memory. And this library support using different image load
libraries, so it's full featured!

If you are interested in how does this library work, you can refer to [this
issue](https://github.com/Piasy/BigImageViewer/issues/8), and [Subsampling Scale
Image View](https://github.com/davemorrissey/subsampling-scale-image-view).

## Performance

Memory usage of different libraries:

| \- | PhotoDraweeView | FrescoImageViewer | BigImageViewer |
| ------| ------ | ------ | ------ |
| 4135\*5134 | 80MB | 80MB | 2~20 MB |

## Todo

+ [x] GlideImageLoader
+ [x] Save image file to gallery
+ [x] Optimize long image showing effect, thanks for [razerdp](https://github.com/razerdp)
+ [x] Optimize ""double tap to zoom"" effect, thanks for [razerdp](https://github.com/razerdp)
+ [x] Loading animation
+ [x] Downloading progress
+ [x] Thumbnail support
+ [ ] Component to display image list, with memory optimization
+ [x] Fail image
+ [x] Retry when fail
+ [ ] PicassoImageLoader, track [this issue](https://github.com/square/picasso/issues/506)

Those features are offered by image load libraries, and they should be easy to
implement, but I don't have enough time currently. So your contributions are
welcome!

When you submit PR, please conform the [code style of this project](https://github.com/Piasy/java-code-styles),
which is customized from Square Android style.
",,2016-11-06T09:55:02Z,2022-12-12T00:31:21Z,20,20,3968,73,"('Piasy', 101), ('talklittle', 5), ('thakkaryash94', 3), ('KirkBushman', 2), ('polokoio456', 2), ('SmasSive', 2), ('DrMetallius', 1), ('a1batross', 1), ('acr92', 1), ('Swisyn', 1), ('HR', 1), ('raylee4204', 1), ('nichbar', 1), ('g19980115', 1), ('xujiaji', 1), ('benioZhang', 1), ('seeeeal', 1), ('mansya', 1), ('tom5079', 1), ('nukc', 1)",14,14,
repl-electric/dl-_-lb,d[ -_-]b,"# d[ -_-]b

╘ ╛▒╛ ─ ▄█├ ▐╫ █▄ ─ ╓┤┤┤▒ ─▓█ ╟▓╘ ▓█ ▒╫ ▒╪ ▓▓▄ ▓▓─ ▓▓ │▒ ╒▒─ ─▓▓─ ▓█ ▌▓▄ ╬▒ ▄▒ ╒ ╪▓═ ╬▓╬

```
A narrative driven auditory adventure into code and algorithms.

                d[ -_-]b
                  /█\
                  /|
```  
    
▐▒ ▓▓├ ▓█ ▒╫ ▒╪ ▓▓▄ ▓█ ╟▓ │▒ ╒▒─ ─▓▓▄ ╬▒ ▄▒ ╒ ╪▓═ ╬▓╬ ▄▓╫ ╥╒ ╦╥ ╙▓▐ ╕█╒ ▀▒ ▐╩ ╒╪ ▐▄╘ ╛▒╛ ─ 

## Album

https://repl-electric.bandcamp.com/album/d-b

#### History 

Performance commit history: https://github.com/repl-electric/sonic-pi-history

Copyright © 2017-present Joseph Wilk
","'code-as-expression', 'code-ep', 'live-coding', 'may-be-art', 'may-not-be-art', 'music', 'nicosip', 'sonicpi'",2017-11-01T15:08:01Z,2019-02-23T13:44:03Z,1,1,24,3,"('josephwilk', 546)",0,0,
wileyenterpriseandroid/Examples,Examples from Wiley's Enterprise Android,"# Example code for Wiley's ""Enterprise Android""

This repository contains a series projects for ""Enterprise Android"" from Wrox Press.
For questions, please visit the wrox forum at:

http://p2p.wrox.com/book-enterprise-android-programming-android-database-applications-enterprise-751/

The book projects correspond to chapters according to the table below:

1: FragmentFramework

3: KeyValDB

4: KeyValCP, KeyValClient

5: restfulCachingProviderContacts, syncAdapterContacts

6: springServiceContacts, restfulCachingProviderContacts, syncAdapterContacts

7: awsServiceContacts, googleAppEngineContacts

8: Contactscontractexample

10: MigrateContacts, MigrateClinic

11: HumanInterfaceForData

12: AndroidSecurity, springServiceContacts

## Getting the code

The best way to download these examples is by using the Repo tool. If you
are reading the code associated with the Wiley distribution, we strongly
recommend that you install git and begin your work from the code repositories
and keep the code up to date periodically using a ""git pull"" operation.

Get it like this:
```
curl https://dl-ssl.google.com/dl/googlesource/git-repo/repo > ~/bin/repo
```

Once repo is installed, download this source with the following commands:

```
repo init -u https://github.com/wileyenterpriseandroid/manifests.git
repo sync
```

You can download the source without using repo, with the following two commands:

```
git clone https://github.com/wileyenterpriseandroid/migrate-sdk.git
git clone https://github.com/wileyenterpriseandroid/Examples.git ea-examples
```

The README files in each project directory provide the best source of instructions for running their associated project.

## Android Setup

About half of these projects are Android projects.  In order to work with them,
you will need the Android SDK.  Projects were tested with Android SDK v 22.0.1.
They have not been tested with Android Studio.  Instructions for setting up an
Android  development environment are here:

http://developer.android.com/sdk/index.html

You will, of course, need a working Java.  All projects were tested with Java 6.
Most were tested with Java 7 as well.

###

## Using Eclipse
Most projects will build in Eclipse.  To create an Eclipse project for one of the code directories here,
run the following commands, from the command line, while in each project root:
```shell
cp tools/ide/eclipse/classpath .classpath
cp tools/ide/eclipse/project .project
```

This will copy the necessary eclipse configuration into the project directory.  Once you have done that
you will be able to Import > General > Import Existing Project into Workspace.

The following Android projects contain a Windows script in their tools directory for
completing the above task for Eclipse:

    KeyValClient
    KeyValCP
    KeyValDB
    MigrateClinic
    MigrateContacts
    restfulCachingProviderContacts
    syncAdapterContacts

The following service projects contain an ant build script:

    springServiceContact
    springSyncServiceContacts
    awsServiceContacts
    googleAppEngineContacts

In order to set them up as eclipse projects, use the ""eclipse"" target, like this:

```shell
ant eclipse
```

The project README files in the projects document this step.

Warning: Some chapter descriptions say to copy tools/build.xml to the main
project directory, and then run ant eclipse. Late in the development of the
book, we changed this setup somewhat so that you can now run the following
command:

```shell
cd $CODE/
ant -f tools/eclipse.xml
```

Which will then copy the relevant files into place.

===

Some of the projects require special eclipse extentions (WTP - Web Tools Platform, Ivy, etc.).  See the
README file in the project for specifics.
",,2013-05-12T18:00:57Z,2020-04-16T00:12:39Z,6,2,27,18,"('ldornin', 70), ('bmeike', 8), ('Laird Dornin', 6), ('zane pan', 6), ('Zane Pan', 3), ('Laird Dornin', 2)",0,0,
maestron/botnets,"This is a collection of #botnet source codes, unorganized. For EDUCATIONAL PURPOSES ONLY","# botnets
This is a collection of botnet source codes, unorganized. For EDUCATIONAL PURPOSES ONLY


Many projects are duplicates or revisions of each other. Many of them have outdated depedencies. My goal is to collectively put them together so that they are compilable and help people interested in malware research analyze them and learn from these samples. 

## Donations

Donations are appreciated:

(BTC): 1FPZzkoUxe2uXzne4KML6TYzASCieWXS6E
","'botnet', 'botnets', 'malware', 'security', 'virus'",2018-09-02T00:00:39Z,2022-09-04T13:01:42Z,2,1,3060,163,"('maestron', 3), ('maestron', 1)",1,0,
openai/baselines,OpenAI Baselines: high-quality implementations of reinforcement learning algorithms,"**Status:** Maintenance (expect bug fixes and minor updates)

 [![Build status](https://travis-ci.org/openai/baselines.svg?branch=master)](https://travis-ci.org/openai/baselines)

# Baselines

OpenAI Baselines is a set of high-quality implementations of reinforcement learning algorithms.

These algorithms will make it easier for the research community to replicate, refine, and identify new ideas, and will create good baselines to build research on top of. Our DQN implementation and its variants are roughly on par with the scores in published papers. We expect they will be used as a base around which new ideas can be added, and as a tool for comparing a new approach against existing ones. 

## Prerequisites 
Baselines requires python3 (>=3.5) with the development headers. You'll also need system packages CMake, OpenMPI and zlib. Those can be installed as follows
### Ubuntu 
    
```bash
sudo apt-get update && sudo apt-get install cmake libopenmpi-dev python3-dev zlib1g-dev
```
    
### Mac OS X
Installation of system packages on Mac requires [Homebrew](https://brew.sh). With Homebrew installed, run the following:
```bash
brew install cmake openmpi
```
    
## Virtual environment
From the general python package sanity perspective, it is a good idea to use virtual environments (virtualenvs) to make sure packages from different projects do not interfere with each other. You can install virtualenv (which is itself a pip package) via
```bash
pip install virtualenv
```
Virtualenvs are essentially folders that have copies of python executable and all python packages.
To create a virtualenv called venv with python3, one runs 
```bash
virtualenv /path/to/venv --python=python3
```
To activate a virtualenv: 
```
. /path/to/venv/bin/activate
```
More thorough tutorial on virtualenvs and options can be found [here](https://virtualenv.pypa.io/en/stable/) 


## Tensorflow versions
The master branch supports Tensorflow from version 1.4 to 1.14. For Tensorflow 2.0 support, please use tf2 branch.

## Installation
- Clone the repo and cd into it:
    ```bash
    git clone https://github.com/openai/baselines.git
    cd baselines
    ```
- If you don't have TensorFlow installed already, install your favourite flavor of TensorFlow. In most cases, you may use
    ```bash 
    pip install tensorflow-gpu==1.14 # if you have a CUDA-compatible gpu and proper drivers
    ```
    or 
    ```bash
    pip install tensorflow==1.14
    ```
    to install Tensorflow 1.14, which is the latest version of Tensorflow supported by the master branch. Refer to [TensorFlow installation guide](https://www.tensorflow.org/install/)
    for more details. 

- Install baselines package
    ```bash
    pip install -e .
    ```

### MuJoCo
Some of the baselines examples use [MuJoCo](http://www.mujoco.org) (multi-joint dynamics in contact) physics simulator, which is proprietary and requires binaries and a license (temporary 30-day license can be obtained from [www.mujoco.org](http://www.mujoco.org)). Instructions on setting up MuJoCo can be found [here](https://github.com/openai/mujoco-py)

## Testing the installation
All unit tests in baselines can be run using pytest runner:
```
pip install pytest
pytest
```

## Training models
Most of the algorithms in baselines repo are used as follows:
```bash
python -m baselines.run --alg= --env= [additional arguments]
```
### Example 1. PPO with MuJoCo Humanoid
For instance, to train a fully-connected network controlling MuJoCo humanoid using PPO2 for 20M timesteps
```bash
python -m baselines.run --alg=ppo2 --env=Humanoid-v2 --network=mlp --num_timesteps=2e7
```
Note that for mujoco environments fully-connected network is default, so we can omit `--network=mlp`
The hyperparameters for both network and the learning algorithm can be controlled via the command line, for instance:
```bash
python -m baselines.run --alg=ppo2 --env=Humanoid-v2 --network=mlp --num_timesteps=2e7 --ent_coef=0.1 --num_hidden=32 --num_layers=3 --value_network=copy
```
will set entropy coefficient to 0.1, and construct fully connected network with 3 layers with 32 hidden units in each, and create a separate network for value function estimation (so that its parameters are not shared with the policy network, but the structure is the same)

See docstrings in [common/models.py](baselines/common/models.py) for description of network parameters for each type of model, and 
docstring for [baselines/ppo2/ppo2.py/learn()](baselines/ppo2/ppo2.py#L152) for the description of the ppo2 hyperparameters. 

### Example 2. DQN on Atari 
DQN with Atari is at this point a classics of benchmarks. To run the baselines implementation of DQN on Atari Pong:
```
python -m baselines.run --alg=deepq --env=PongNoFrameskip-v4 --num_timesteps=1e6
```

## Saving, loading and visualizing models

### Saving and loading the model
The algorithms serialization API is not properly unified yet; however, there is a simple method to save / restore trained models. 
`--save_path` and `--load_path` command-line option loads the tensorflow state from a given path before training, and saves it after the training, respectively. 
Let's imagine you'd like to train ppo2 on Atari Pong,  save the model and then later visualize what has it learnt.
```bash
python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2
```
This should get to the mean reward per episode about 20. To load and visualize the model, we'll do the following - load the model, train it for 0 steps, and then visualize: 
```bash
python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=0 --load_path=~/models/pong_20M_ppo2 --play
```

*NOTE:* Mujoco environments require normalization to work properly, so we wrap them with VecNormalize wrapper. Currently, to ensure the models are saved with normalization (so that trained models can be restored and run without further training) the normalization coefficients are saved as tensorflow variables. This can decrease the performance somewhat, so if you require high-throughput steps with Mujoco and do not need saving/restoring the models, it may make sense to use numpy normalization instead. To do that, set 'use_tf=False` in [baselines/run.py](baselines/run.py#L116). 

### Logging and vizualizing learning curves and other training metrics
By default, all summary data, including progress, standard output, is saved to a unique directory in a temp folder, specified by a call to Python's [tempfile.gettempdir()](https://docs.python.org/3/library/tempfile.html#tempfile.gettempdir).
The directory can be changed with the `--log_path` command-line option.
```bash
python -m baselines.run --alg=ppo2 --env=PongNoFrameskip-v4 --num_timesteps=2e7 --save_path=~/models/pong_20M_ppo2 --log_path=~/logs/Pong/
```
*NOTE:* Please be aware that the logger will overwrite files of the same name in an existing directory, thus it's recommended that folder names be given a unique timestamp to prevent overwritten logs.

Another way the temp directory can be changed is through the use of the `$OPENAI_LOGDIR` environment variable.

For examples on how to load and display the training data, see [here](docs/viz/viz.ipynb).

## Subpackages

- [A2C](baselines/a2c)
- [ACER](baselines/acer)
- [ACKTR](baselines/acktr)
- [DDPG](baselines/ddpg)
- [DQN](baselines/deepq)
- [GAIL](baselines/gail)
- [HER](baselines/her)
- [PPO1](baselines/ppo1) (obsolete version, left here temporarily)
- [PPO2](baselines/ppo2) 
- [TRPO](baselines/trpo_mpi)



## Benchmarks
Results of benchmarks on Mujoco (1M timesteps) and Atari (10M timesteps) are available 
[here for Mujoco](https://htmlpreview.github.com/?https://github.com/openai/baselines/blob/master/benchmarks_mujoco1M.htm) 
and
[here for Atari](https://htmlpreview.github.com/?https://github.com/openai/baselines/blob/master/benchmarks_atari10M.htm) 
respectively. Note that these results may be not on the latest version of the code, particular commit hash with which results were obtained is specified on the benchmarks page. 

To cite this repository in publications:

    @misc{baselines,
      author = {Dhariwal, Prafulla and Hesse, Christopher and Klimov, Oleg and Nichol, Alex and Plappert, Matthias and Radford, Alec and Schulman, John and Sidor, Szymon and Wu, Yuhuai and Zhokhov, Peter},
      title = {OpenAI Baselines},
      year = {2017},
      publisher = {GitHub},
      journal = {GitHub repository},
      howpublished = {\url{https://github.com/openai/baselines}},
    }

",,2017-05-24T01:58:13Z,2024-05-23T20:31:05Z,115,102,15466,649,"('pzhokhov', 121), ('joschu', 37), ('andrewliao11', 17), ('siemanko', 16), ('christopherhesse', 9), ('unixpickle', 5), ('zuoxingdong', 4), ('joshim5', 3), ('tanzhenyu', 3), ('matthiasplappert', 3), ('MatPoliquin', 3), ('AurelianTactics', 3), ('20chase', 3), ('yenchenlin', 2), ('iamhatesz', 2), ('jacobhilton', 2), ('uronce-cc', 2), ('shakenes', 2), ('whyjay', 2), ('xingyousong', 2), ('williamjqk', 2), ('simoninithomas', 2), ('sritee', 2), ('olegklimov', 2), ('Matthias Plappert', 2), ('mrahtz', 2), ('louiehelm', 2), ('gyunt', 2), ('Atcold', 2), ('machinaut', 2), ('girving', 2), ('stevenschmatz', 1), ('wwiiiii', 1), ('tiagosgc', 1), ('TianhongDai', 1), ('TimZaman', 1), ('timokau', 1), ('tabula-rosa', 1), ('tsaoyu', 1), ('zlsh80826', 1), ('seungjaeryanlee', 1), ('ryanjulian', 1), ('inoryy', 1), ('Rishav1', 1), ('jangirrishabh', 1), ('R1ckF', 1), ('quanvuong', 1), ('prabhatnagarajan', 1), ('pimdh', 1), ('welinder', 1), ('Pastafarianist', 1), ('wangjksjtu', 1), ('sedand', 1), ('ngc92', 1), ('jvmancuso', 1), ('johannespitz', 1), ('ethanwaldie', 1), ('definitelyuncertain', 1), ('cxxgtxy', 1), ('coord-e', 1), ('cclauss', 1), ('lbertge', 1), ('ahuhn', 1), ('LinZichuan', 1), ('zach-nervana', 1), ('ppwwyyxx', 1), ('uidilr', 1), ('rainwoodman', 1), ('howl-anderson', 1), ('xffxff', 1), ('VladislavZavadskyy', 1), ('Ubuntu', 1), ('omoindrot', 1), ('edoffagne', 1), ('mansimov', 1), ('kant', 1), ('daniel-ziegler', 1), ('23pointsNorth', 1), ('damienlancry', 1), ('Clayton Thorrez', 1), ('Carlos Hernandez', 1), ('bshlgrs', 1), ('brett-daley', 1), ('bjkomer', 1), ('aprimadi', 1), ('araffin', 1), ('batist73', 1), ('ankeshanand', 1), ('andytwigg', 1), ('ei-grad', 1), ('akashin', 1), ('AdamGleave', 1), ('Abhinav Bhatia', 1), ('AAorris', 1), ('nikhilbarhate99', 1), ('NicoBach', 1), ('mirceamironenco', 1), ('mingfeisun', 1), ('cyfra', 1), ('mkarutz', 1), ('kcobbe', 1), ('JulianoLagana', 1), ('jonasschneider', 1), ('JohannesAck', 1), ('elzino', 1), ('Jan Humplik', 1), ('jpreiss', 1), ('Isaac Poulton', 1), ('pisiiki', 1), ('HelgeS', 1), ('harry-uglow', 1), ('haochihlin', 1), ('Hamza Merzic', 1), ('DylanHaiyangChen', 1), ('farbeiza', 1)",84,73,
bkaradzic/bgfx,"Cross-platform, graphics API agnostic, ""Bring Your Own Engine/Framework"" style rendering library.","



[bgfx](https://github.com/bkaradzic/bgfx) - Cross-platform rendering library
============================================================================


    What is it? -
    Building -
    Getting Involved -
    Examples -
    API Reference -
    Tools -
    Who is using it? -
    License


[![GitHub Actions](https://github.com/bkaradzic/bgfx/actions/workflows/main.yml/badge.svg)](https://github.com/bkaradzic/bgfx/actions)
[![License](https://img.shields.io/badge/license-BSD--2%20clause-blue.svg)](https://bkaradzic.github.io/bgfx/license.html)
[![Join the chat at https://discord.gg/9eMbv7J](https://img.shields.io/discord/712512073522872352?color=%237289DA&label=bgfx&logo=discord&logoColor=white)](https://discord.gg/9eMbv7J)

 * [GitHub Discussions](https://github.com/bkaradzic/bgfx/discussions)
 * [Discord Chat](https://discord.gg/g99upRc9pf)
 * [GitHub Actions](https://github.com/bkaradzic/bgfx/actions)

[What is it?](https://bkaradzic.github.io/bgfx/overview.html)
-------------------------------------------------------------

Cross-platform, graphics API agnostic, ""Bring Your Own Engine/Framework"" style
rendering library.

Supported rendering backends:

 * Direct3D 11
 * Direct3D 12
 * GNM (only for licensed PS4 developers, search DevNet forums for source)
 * Metal
 * OpenGL 2.1
 * OpenGL 3.1+
 * OpenGL ES 2
 * OpenGL ES 3.1
 * Vulkan
 * WebGL 1.0
 * WebGL 2.0

Supported platforms:

 * Android (14+)
 * iOS/iPadOS/tvOS (16.0+)
 * Linux
 * macOS (13.0+)
 * PlayStation 4
 * RaspberryPi
 * UWP (Universal Windows, Xbox One)
 * Wasm/Emscripten
 * Windows (7+)

Supported compilers:

 * Clang 11 and above
 * GCC 8 and above
 * VS2019 and above
 * Apple clang 12 and above

Languages:

 * [C/C++ API documentation](https://bkaradzic.github.io/bgfx/bgfx.html)
 * [Beef API bindings](https://github.com/bkaradzic/bgfx/tree/master/bindings/bf)
 * [C# language API bindings #1](https://github.com/bkaradzic/bgfx/tree/master/bindings/cs)
 * [D language API bindings](https://github.com/BindBC/bindbc-bgfx)
 * [Go language API bindings](https://github.com/james4k/go-bgfx)
 * [Haskell language API bindings](https://github.com/haskell-game/bgfx)
 * [Lightweight Java Game Library 3 bindings](https://github.com/LWJGL/lwjgl3)
 * [Lua language API bindings](https://github.com/cloudwu/lua-bgfx)
 * [Nim language API bindings](https://github.com/Halsys/nim-bgfx)
 * [Pascal language API bindings](https://github.com/Akira13641/PasBGFX)
 * [Python language API bindings #1](https://github.com/fbertola/bgfx-python#-----bgfx-python--)
 * [Python language API bindings #2](https://github.com/jnadro/pybgfx#pybgfx)
 * [Rust language API bindings (new)](https://github.com/emoon/bgfx-rs)
 * [Swift language API bindings](https://github.com/stuartcarnie/SwiftBGFX)
 * [Zig language API bindings](https://github.com/bkaradzic/bgfx/tree/master/bindings/zig)

Who is using it? [#madewithbgfx](https://twitter.com/search?q=%23madewithbgfx&src=typed_query&f=live)
-----------------------------------------------------------------------------------------------------

## AirMech

https://www.carbongames.com/airmech-strike - AirMech is a free-to-play
futuristic action real-time strategy video game developed and published by
Carbon Games.

![AirMech screenshot](https://www.mobygames.com/images/shots/l/830630-airmech-playstation-4-screenshot-blue-bar-on-your-mech-indicates.jpg)

## cmftStudio

https://github.com/dariomanesku/cmftStudio - cmftStudio - Cubemap filtering
tool.

![cmftStudio screenshot](https://github.com/dariomanesku/cmftStudio/raw/master/screenshots/cmftStudio_small.jpg)

## Crown

https://github.com/dbartolini/crown - Crown is a general purpose data-driven
game engine, written from scratch with a minimalistic and data-oriented design
philosophy in mind.

![Crown screenshot](https://raw.githubusercontent.com/dbartolini/crown/master/docs/shots/level-editor.png)

## Offroad Legends 2

http://www.dogbytegames.com/ - Dogbyte Games is an indie mobile developer studio
focusing on racing games.

![Offroad Legends 2](http://www.dogbytegames.com/bgfx/offroadlegends2_bgfx_ipad2.jpg)

## Torque6

https://github.com/andr3wmac/Torque6 - Torque 6 is an MIT licensed 3D engine
loosely based on Torque2D. Being neither Torque2D or Torque3D it is the 6th
derivative of the original Torque Engine.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=p4LTM_QGK34"" 
target=""_blank""><img src=""http://img.youtube.com/vi/p4LTM_QGK34/0.jpg"" 
alt=""Torque 6 Material Editor"" width=""640"" height=""480"" border=""0"" />

## Kepler Orbits

https://github.com/podgorskiy/KeplerOrbits - KeplerOrbits - Tool that calculates
positions of celestial bodies using their orbital elements.

## CETech

https://github.com/cyberegoorg/cetech - CETech is a data-driven game engine and
toolbox inspired by Bitsquid/Stingray engine.

![CETech screenshot](https://github.com/cyberegoorg/cetech/raw/master/docs/img/prototyp.png)

## ioquake3

https://github.com/jpcy/ioq3-renderer-bgfx - A renderer for ioquake3 written in
C++ and using bgfx to support multiple rendering APIs.

![ioq3-renderer-bgfx screenshot](https://camo.githubusercontent.com/052aa40c05120e56306294d3a1bb5f99f97de8c8/687474703a2f2f692e696d6775722e636f6d2f64364f6856594b2e6a7067)

## DLS

http://makingartstudios.itch.io/dls - DLS, the digital logic simulator game.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=6o1-sQRNqcA
"" target=""_blank""><img src=""http://img.youtube.com/vi/6o1-sQRNqcA/0.jpg"" 
alt=""DLS - Creating a 4-bit Register ""
width=""640"" height=""480"" border=""0"" />

http://dls.makingartstudios.com/sandbox/ - DLS: The Sandbox.

![DLS: The Sandbox screenshot](https://pbs.twimg.com/media/DBaFwOKWAAEq0mp.jpg:large)

## MAME

https://github.com/mamedev/mame - MAME - Multiple Arcade Machine Emulator.

![MAME screenshot](https://raw.githubusercontent.com/mamedev/www.mamedev.org/d8d716dbb63919a11964b5d47b9b7f6cfa006b56/bgfx/Raiden.png)

## Blackshift

https://blackshift.itch.io/blackshift - Blackshift is a grid-based, space-themed
action puzzle game which isn't afraid of complexity - think Chip's Challenge on
crack.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=PUl8612Y-ds"" 
target=""_blank""><img src=""http://img.youtube.com/vi/PUl8612Y-ds/0.jpg"" 
alt=""Blackshift Trailer, May 2016""
width=""640"" height=""480"" border=""0"" />

## Real-Time Polygonal-Light Shading with Linearly Transformed Cosines

https://eheitzresearch.wordpress.com/415-2/ - Real-Time Polygonal-Light Shading
with Linearly Transformed Cosines, Eric Heitz, Jonathan Dupuy, Stephen Hill and
David Neubelt, ACM SIGGRAPH 2016.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=ZLRgEN7AQgM"" 
target=""_blank""><img src=""http://img.youtube.com/vi/ZLRgEN7AQgM/0.jpg"" 
alt=""Real-Time Polygonal-Light Shading with Linearly Transformed Cosines""
width=""640"" height=""480"" border=""0"" />

## Dead Venture

http://www.dogbytegames.com/dead_venture.html - Dead Venture is a new Drive 'N
Gun game where you help a handful of survivals reach the safe haven: a military
base on a far island.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=CgMr1g12yXw"" 
target=""_blank""><img src=""http://img.youtube.com/vi/CgMr1g12yXw/0.jpg"" 
alt=""Dead Venture - Gameplay Teaser (iOS / Android)""
width=""640"" height=""480"" border=""0"" />

## REGoth

https://github.com/degenerated1123/REGoth - REGoth is an open-source
reimplementation of the zEngine, used by the game ""Gothic"" and ""Gothic II"".

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=8bLAGttYYpY
"" target=""_blank""><img src=""http://img.youtube.com/vi/8bLAGttYYpY/0.jpg"" 
alt=""REGoth Engine""
width=""640"" height=""480"" border=""0"" />

## Ethereal Engine

https://github.com/volcoma/EtherealEngine - EtherealEngine is a C++ game engine
and WYSIWYG dditor.

![EtherealEngine screenshot](https://user-images.githubusercontent.com/1499411/29488403-ff3c3df6-8512-11e7-869f-32a783530cc3.png)

## Go Rally

http://gorallygame.com/ - Go Rally is top-down rally game with a career mode,
multiplayer time challenges, and a track creator.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=ckbkQsB6RVY"" 
target=""_blank""><img src=""http://img.youtube.com/vi/ckbkQsB6RVY/0.jpg"" 
alt=""Go Rally""
width=""640"" height=""480"" border=""0"" />

## vg-renderer

https://github.com/jdryg/vg-renderer#vg-renderer - vg-renderer is a vector
graphics renderer for bgfx, based on ideas from both NanoVG and ImDrawList (Dear
ImGUI).

![vg-renderer screenshot](https://raw.githubusercontent.com/jdryg/vg-renderer/master/img/vgrenderer_tiger.png)

## Zombie Safari

http://www.dogbytegames.com/zombie_safari.html - Do what you please in this
open-world offroad driving game: explore massive landscapes, complete
challenges, smash zombies, find secret locations, unlock and upgrade cars and
weapons, it's up to you!

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=LSiH0lRkw8g"" 
target=""_blank""><img src=""http://img.youtube.com/vi/LSiH0lRkw8g/0.jpg"" 
alt=""Zombie Safari - Official Gameplay Trailer (Android)""
width=""640"" height=""480"" border=""0"" />

## Smith and Winston

http://www.smithandwinston.com/ - Smith and Winston is an exploration twin stick
shooter for PC, PS4 & XBoxOne arriving in late 2018. Smith and Winston features
a massively destructable voxel world, rapid twin stick combat, physics puzzles
and Metroid-style discovery.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=Mr_L7KuiByU"" 
target=""_blank""><img src=""http://img.youtube.com/vi/Mr_L7KuiByU/0.jpg"" 
alt=""Smith and Winston: Gameplay Video""
width=""640"" height=""480"" border=""0"" />

## Football Manager 2018

http://www.footballmanager.com/ - Football Manager 2018 is a 2017 football
management simulation video game developed by Sports Interactive and published
by Sega.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=1Woak1Bl_KI"" 
target=""_blank""><img src=""http://img.youtube.com/vi/1Woak1Bl_KI/0.jpg"" 
alt=""Match Engine | Football Manager 2018""
width=""640"" height=""480"" border=""0"" />

## WonderWorlds

http://wonderworlds.me/ - WonderWorlds is a place to play thousands of
user-created levels and stories, make your own using the extensive in-game tools
and share them with whomever you want.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=nY8y_dFolKo"" 
target=""_blank""><img src=""http://img.youtube.com/vi/nY8y_dFolKo/0.jpg"" 
alt=""WonderWorlds""
width=""640"" height=""480"" border=""0"" />

## two-io / mud

https://hugoam.github.io/two-io/ - An all-purpose c++ app prototyping library,
focused towards live graphical apps and games.

![two-io / mud screenshot](https://raw.githubusercontent.com/hugoam/mud-io/master/media/14_live_gfx.png)

## Talking Tom Pool

https://outfit7.com/apps/talking-tom-pool/ - A ""sling and match"" puzzle game for
mobile devices.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=eNSI45zDEo0"" 
target=""_blank""><img src=""http://img.youtube.com/vi/eNSI45zDEo0/0.jpg"" 
alt=""Talking Tom Pool""
width=""640"" height=""480"" border=""0"" />

## GPlayEngine

https://github.com/fredakilla/GPlayEngine#gplayengine - GPlayEngine is a C++
cross-platform game engine for creating 2D/3D games based on the GamePlay 3D
engine v3.0.

![GPlayEngine screenshot](https://camo.githubusercontent.com/d89a364fb306f208ca14a58267c8303f60f0f0cf/68747470733a2f2f692e696d6775722e636f6d2f306569395932382e706e67)

## Off The Road

http://www.dogbytegames.com/off_the_road.html - A sandbox off-road driving
simulator.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=RgnIReFkbyU"" 
target=""_blank""><img src=""http://img.youtube.com/vi/RgnIReFkbyU/hq720.jpg"" 
alt=""Off The Road""
width=""640"" height=""360"" border=""0"" />

## Coal Burnout

https://beardsvibe.com/ - A multiplayer PVP rhythm game.

![Coal Burnout screenshot](https://beardsvibe.com/scr/0l.png)

## My Talking Tom 2

https://outfit7.com/apps/my-talking-tom-2/ - Many mini games for mobile devices.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=I0U7EQKKDjw"" 
target=""_blank""><img src=""http://img.youtube.com/vi/I0U7EQKKDjw/0.jpg"" 
alt=""My Talking Tom 2""
width=""640"" height=""480"" border=""0"" />

## NeoAxis Engine

https://www.neoaxis.com/ - Versatile 3D project development environment.

![NeoAxis Engine screenshot](https://www.neoaxis.com/files/NeoAxisEngine04.jpg)

## xatlas

https://github.com/jpcy/xatlas#xatlas - Mesh parameterization library.

![xatlas screenshot](https://user-images.githubusercontent.com/3744372/43034066-53a62dee-8d18-11e8-9767-0b38ed3fa2d3.png)

## Heroes of Hammerwatch

https://store.steampowered.com/app/677120/Heroes_of_Hammerwatch/ - Heroes of
Hammerwatch is a rogue-lite action-adventure game set in the same universe as
Hammerwatch. Encounter endless hordes of enemies, traps, puzzles, secrets and
lots of loot, as you battle your way through procedurally generated levels to
reach the top of the Forsaken Spire.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=uTIVDKdNvms"" 
target=""_blank""><img src=""http://img.youtube.com/vi/uTIVDKdNvms/0.jpg"" 
alt=""Heroes of Hammerwatch""
width=""640"" height=""480"" border=""0"" />

## Babylon Native

https://github.com/BabylonJS/BabylonNative#babylon-native - Build cross-platform
native applications with the power of the Babylon.js JavaScript framework.

## Nira

https://nira.app/ - Instantly load and view assets on any device. All you need
is a web browser.

SIGGRAPH 2019: Project Nira: Instant Interactive Real-Time Access to
Multi-Gigabyte Sized 3D Assets on Any Device:
https://s2019.siggraph.org/presentation/?sess=sess104&id=real_130#038;id=real_130

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=Gz9weuemhDA&t=3350"" 
target=""_blank""><img src=""http://img.youtube.com/vi/Gz9weuemhDA/0.jpg"" 
alt=""Heroes of Hammerwatch""
width=""640"" height=""480"" border=""0"" />

## openblack

https://github.com/openblack/openblack#openblack - An open-source
reimplementation of the game Black & White (2001).

![openblack screenshot](https://user-images.githubusercontent.com/32263167/184559293-56cfc6a7-a7da-4876-8fce-434ba8827eae.png)

## Cluster

https://github.com/pezcode/Cluster#cluster - Implementation of Clustered Shading
and Physically Based Rendering with the bgfx rendering library.

![Cluster screenshot](https://raw.githubusercontent.com/pezcode/Cluster/master/images/sponza.jpg)

## NIMBY Rails

https://store.steampowered.com/app/1134710/NIMBY_Rails/ - NIMBY Rails is a
management and design sandbox game for railways you build in the real world.

![NIMBY Rails screenshot](https://user-images.githubusercontent.com/28320/78472283-03d5e200-7727-11ea-8bd4-db8754f52dc3.jpg)

## Minecraft

https://www.minecraft.net/zh-hant/attribution/

![Minecraft screenshot](https://user-images.githubusercontent.com/814772/79185288-57050000-7dcb-11ea-87b4-2126fcd1545b.jpg)


## FFNx

https://github.com/julianxhokaxhiu/FFNx#ffnx - Next generation driver for Final
Fantasy VII and Final Fantasy VIII (with native Steam 2013 release support!)

![FFVIII screenshot](https://raw.githubusercontent.com/julianxhokaxhiu/FFNx/master/.screens/ff8.png)


## Shadow Gangs

https://www.microsoft.com/en-gb/p/shadow-gangs/9n6hkcr65qdq - Shadow Gangs is an
arcade style ninja action game.

![Shadow Gangs screenshot](https://user-images.githubusercontent.com/814772/94508248-64ba1080-01c6-11eb-800f-47dc374ef054.jpeg)

## Growtopia

https://growtopiagame.com/ - Growtopia is a free-to-play sandbox MMO game with
almost endless possibilities for world creation, customization and having fun
with your friends. Enjoy thousands of items, challenges and events.

![Growtopia screenshot](https://s3.eu-west-1.amazonaws.com/cdn.growtopiagame.com/website/resources/assets/images/grow_header.jpg)

## Galaxy Trucker

https://galaxytrucker.com/ - Digital implementation of tabletop spaceship
building in real-time or turn-based mode, then surviving space adventures, with
AI opponents, multiplayer, achievements and solo campaign.

![Galaxy Trucker screenshot](https://press.galaxytrucker.com/images/GTAT_junk.png)

## Through the Ages

https://throughtheages.com/ - The card tabletop deep strategy game in your
devices. Lead your civilization from pyramids to space flights. Challenges,
achievements, skilled AIs and online multiplayer.

![Through the Ages screenshot](https://press.throughtheages.com/images/tta01.png)

## Codenames

https://codenamesgame.com/ - One of the best party games. Two rival spymasters
know the secret identities of 25 agents. Their teammates know the agents only by
their codenames. Simple to explain, easy to understand, challenging gameplay.

![Codenames screenshot](https://codenamesgame.com/img/game-features-img-1.jpg)

## PeakFinder

https://www.peakfinder.org/ - PeakFinder shows the names of all mountains and
peaks with a 360° panorama display. More than 850'000 peaks - from Mount Everest
to the little hill around the corner.

![PeakFinder screenshot](https://pfweb-c125.kxcdn.com/videos/mobile/manual/v4/light/en/peakfinder-trecime.jpg)

## Ember Sword

https://embersword.com - Ember Sword is a free to play MMORPG running directly
in your browser and is being developed and published by Bright Star Studios.

![Ember Sword screenshot](https://user-images.githubusercontent.com/814772/120714133-a860ca80-c477-11eb-8680-f5a948dfd050.png)

## Off The Road Unleashed

https://www.nintendo.com/games/detail/off-the-road-unleashed-switch/ - Off The
Road Unleashed is a sandbox driving game for the Nintendo Switch. If you see a
vehicle you bet you can hop into it! Pilot big rigs, helicopters, boats,
airplanes or even trains. Sand dunes, frozen plains, mountains to climb and
conquer.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=cwDR0Wj3LO4"" 
target=""_blank""><img src=""http://img.youtube.com/vi/cwDR0Wj3LO4/0.jpg"" 
alt=""Off The Road Unleashed""
width=""640"" height=""480"" border=""0"" />

## Guild Wars 2

https://www.guildwars2.com/ - Guild Wars 2 is an online role-playing game with
fast-paced action combat, a rich and detailed universe of stories, awe-inspiring
landscapes to explore, two challenging player vs. player modes—and no
subscription fees!

![Guild Wars 2 screenshot](https://d3b4yo2b5lbfy.cloudfront.net/wp-content/uploads/2017/07/1a684WvW_ArmorT3.jpg)

## Griftlands

https://klei.com/games/griftlands - Griftlands is a roguelike deck-building game
with role-playing story elements in a science fiction setting, developed and
published by Klei Entertainment.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=ufl14_Ne5Lg"" 
target=""_blank""><img src=""http://img.youtube.com/vi/ufl14_Ne5Lg/0.jpg"" 
alt=""Griftlands""
width=""640"" height=""480"" border=""0"" />

## HARFANG 3D

https://www.harfang3d.com - HARFANG® 3D is a **BGFX-powered** 3D visualization
framework for C++, Python, Go, and Lua. It comes with a 3D editor, HARFANG
Studio.

![HARFANG Studio screenshot](https://raw.githubusercontent.com/harfang3d/image-storage/main/portfolio/3.2.2/harfang-studio-cyber-city.png)

## Marine Melodies / Resistance

https://www.pouet.net/prod.php?which=91906 - Demoscene musicdisk released at
Evoke 2022 demoparty.

https://github.com/astrofra/demo-marine-melodies

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=Ma1-UBa3f2E"" 
target=""_blank""><img src=""http://img.youtube.com/vi/Ma1-UBa3f2E/0.jpg"" 
alt=""Marine Melodies""
width=""640"" height=""480"" border=""0"" />

## Activeworlds

https://www.activeworlds.com/ - Activeworlds is an online VR platform with rich
multimedia and presentation features. Create your own worlds or build in free
community worlds, hold your own event / meeting or join inworld events!

![Activeworlds screenshot](http://www.activeworlds.com/img/181107-213544_small_enkii.jpg)

## Equilibrium Engine

https://github.com/clibequilibrium/EquilibriumEngine - Equilibrium Engine is a
data-oriented and multi-threaded C11 Game Engine with libraries & shaders
hot-reloading.

![Equilibrium Engine screenshot](https://raw.githubusercontent.com/clibequilibrium/EquilibriumEngine/master/docs/city.png)

## Pinhole Universe

https://festina-lente-productions.com/pinhole-universe/ - Explore a generated
world where you can zoom in on anything, forever.

![Pinhole Universe capsule image](https://festina-lente-productions.com/ext/capsule_small.jpg)

## Unavowed (Nintendo Switch version only)

https://www.nintendo.com/us/store/products/unavowed-switch/ - A demon has possessed you
and used your body to tear a swath of bloodshed through New York. You are now free, but
life as you knew it is over. Your only path forward is joining the Unavowed - an ancient
society dedicated to stopping evil. No matter what the cost.

![Unavowed Title](https://assets.nintendo.com/image/upload/c_limit,f_auto,h_1000,q_auto,w_1700/v1/ncom/en_US/games/switch/u/unavowed-switch/Video/posters/Unavowed_Switch_Trailer_NOA)

## The Excavation of Hob's Barrow (Nintendo Switch version only)

https://www.nintendo.com/us/store/products/the-excavation-of-hobs-barrow-switch/ - A folk
horror narrative-driven adventure. Explore the isolated moors of rural Victorian England
as you uncover the mysteries of Hob's Barrow. The answers lie in the soil...

![The Excavation of Hob's Barrow Title](https://assets.nintendo.com/image/upload/c_limit,f_auto,h_1000,q_auto,w_1700/v1/ncom/en_US/games/switch/t/the-excavation-of-hobs-barrow-switch/Video/posters/The_Excavation_of_Hob_s_Barrow)

## Primordia (Nintendo Switch version only)

https://www.nintendo.com/us/store/products/primordia-switch/ - Life has ceased. Man is
but a myth. And now, even the machines have begun to fail. Lead Horatio Nullbuilt and his
sarcastic sidekick Crispin on a journey through the crumbling world of Primordia, facing
malfunctioning robots, ancient secrets, and an implacable, power-hungry foe.

![Primordia Title](https://assets.nintendo.com/image/upload/c_limit,f_auto,h_1000,q_auto,w_1700/v1/ncom/en_US/games/switch/p/primordia-switch/Video/posters/Primordia_Trailer)

## ProtoTwin

https://prototwin.com - Online industrial simulation software for manufacturing and material handling.

![ProtoTwin - Simulation for Industrial Automation](https://github.com/bkaradzic/bgfx/assets/37254625/7aac600f-2687-468f-8d60-441c45ec14a3)

## WARCANA

WARCANA is a fantasy inspired base defence, RTS game with a deck-building mechanic. 
Face hundreds of thousands of unrelenting monsters in a battle royale between 30 other 
mighty magicians. Build your deck. Prepare your defences. Summon your armies. 
Survive the onslaught.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=UioR5ptCFYU"" 
target=""_blank""><img src=""http://img.youtube.com/vi/UioR5ptCFYU/0.jpg"" 
alt=""WARCANA Announcement Trailer"" width=""640"" height=""480"" border=""0"" />

## DiskBoard

https://www.diskboard.com - DiskBoard is the ultimate tool that can help you measure
the performance and monitor the health of your hardware. All of your devices are
presented in a clean and easy to understand view. The tests offer extensive
customization options, allowing you to simulate various workloads. The intuitive
visuals provide clear insights, benchmark comparisons, and performance guidelines.
Join a community of tech enthusiasts, compare your device's prowess, and witness
your hardware shine!

![Diskboard screenshot](https://www.diskboard.com/assets/diskboard3.png)

## Ant

https://github.com/ejoy/ant - Ant is an open-source game engine focused on mobile platforms. It is implemented
based on Lua, with excellent performance and easy customization.

[Red Frontier Game using Ant Game Engine](https://github.com/ejoy/vaststars)

![RedFrontier](https://github.com/ejoy/vaststars/blob/master/screenshot/startup.jpg)

## Crypt of the NecroDancer

https://braceyourselfgames.com/crypt-of-the-necrodancer/ - Crypt of the NecroDancer
is an award-winning hardcore roguelike rhythm game. Move to the music and deliver
beatdowns to the beat! The game uses bgfx on Windows, macOS, Linux, Nintendo
Switch and PlayStation 4.

![Crypt of the NecroDancer screenshot](https://raw.githubusercontent.com/Marukyu/marukyu.github.io/misc-assets/247080_20240322072858_1.png)

## Tomb4Plus

https://www.github.com/SaracenOne/Tomb4Plus - Tomb4Plus is an open source
reimplementation of the Tomb Raider: The Last Revelation engine. It is an
enhanced fork of the original [Tomb4](https://github.com/Trxyebeep/TOMB4)
reimplementation project which focuses on supporting the Level Editor runtime
and aims for full compatibility with the unofficial binary-patched scripting
extensions used by many custom levels. Tomb4Plus also replaces the original
legacy Direct3D renderer with bgfx.

![Tomb4Plus screenshot](https://raw.githubusercontent.com/SaracenOne/Tomb4Plus/level_editor_v2/.github/images/preview.png)

## Braid, Anniversary Edition

https://play.google.com/store/apps/details?id=com.netflix.NGP.BraidAnniversaryEdition - 
bgfx is used only in Android version of the game.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=U738YZG1k1I"" 
target=""_blank""><img src=""http://img.youtube.com/vi/U738YZG1k1I/0.jpg"" 
alt=""Braid, Anniversary Edition""
width=""640"" height=""480"" border=""0"" />

## Rotwood

https://store.steampowered.com/app/2015270/Rotwood/ - Rotwood is an upcoming
beat'em up, rogouelike video game developed and published by Klei Entertainment.

<a href=""http://www.youtube.com/watch?feature=player_embedded&v=SoTNhVPzmC8"" 
target=""_blank""><img src=""http://img.youtube.com/vi/SoTNhVPzmC8/0.jpg"" 
alt=""Rotwood""
width=""640"" height=""480"" border=""0"" />

[License (BSD 2-clause)](https://bkaradzic.github.io/bgfx/license.html)
-----------------------------------------------------------------------





	Copyright 2010-2024 Branimir Karadzic
	
	Redistribution and use in source and binary forms, with or without modification,
	are permitted provided that the following conditions are met:
	
	   1. Redistributions of source code must retain the above copyright notice, this
	      list of conditions and the following disclaimer.
	
	   2. Redistributions in binary form must reproduce the above copyright notice,
	      this list of conditions and the following disclaimer in the documentation
	      and/or other materials provided with the distribution.
	
	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND
	ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
	IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
	INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
	DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
	OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
	OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
	OF THE POSSIBILITY OF SUCH DAMAGE.
","'d3d11', 'd3d12', 'directx', 'directx-11', 'directx-12', 'engine', 'gamedev', 'gles', 'glfw', 'graphics', 'metal', 'opengl', 'rendering', 'sdl', 'vulkan', 'vulkan-api', 'webgl'",2012-04-04T03:39:04Z,2024-06-16T16:41:19Z,281,254,14545,480,"('bkaradzic', 7370), ('dariomanesku', 221), ('attilaz', 119), ('pezcode', 58), ('jeremieroy', 53), ('cloudwu', 49), ('MikePopoloski', 42), ('hugoam', 35), ('kingscallop', 30), ('mmicko', 24), ('goodartistscopy', 24), ('mendsley', 23), ('CedricGuillemet', 23), ('bwrsandman', 22), ('ichordev', 18), ('Velro', 15), ('juj', 14), ('junjie020', 12), ('vvuk', 12), ('Aleš Mlakar', 11), ('olliwang', 11), ('rinthel', 10), ('selfshadow', 9), ('phniix', 9), ('SnapperTT', 9), ('Biswa96', 8), ('belegdol', 8), ('kondrak', 8), ('mcourteaux', 8), ('stuartcarnie', 8), ('velkyel', 8), ('Nodrev', 7), ('issam3105', 7), ('benoitjacquier', 7), ('RazielXYZ', 7), ('andr3wmac', 7), ('BlockoS', 6), ('rogual', 6), ('pgruenbacher', 6), ('thedmd', 6), ('julianxhokaxhiu', 6), ('jpcy', 6), ('blaztinn', 6), ('jazzbre', 6), ('NPatch', 5), ('mean-ui-thread', 5), ('elvencache', 5), ('ming4883', 5), ('jwdevel', 5), ('jdryg', 5), ('ocornut', 5), ('m.milanovic@levi9.com', 5), ('Minmin Gong', 5), ('Leandro Freire', 5), ('jay3d', 5), ('bghgary', 5), ('Garett Bass', 5), ('hartcw', 5), ('BrianHarris', 4), ('andrewwillmott', 4), ('aimoonchen', 4), ('junjie020', 4), ('WenceyWang', 4), ('pplux', 4), ('nem0', 4), ('MaulingMonkey', 4), ('lunkhound', 4), ('Lectem', 4), ('v3n', 4), ('jdarpinian', 4), ('Arcnor', 4), ('heretique', 4), ('waywardmonkeys', 4), ('sebastianmunity3d', 3), ('luzpaz', 3), ('raizam', 3), ('Seyedof', 3), ('AndrewJDR', 3), ('codecat', 3), ('cuavas', 3), ('sgraham', 3), ('RichardGale', 3), ('skyostil', 3), ('oviano', 3), ('NickWaanders', 3), ('emoon', 3), ('SmilyOrg', 3), ('marco-we', 3), ('dwilliamson', 3), ('DanielGavin', 3), ('dbartolini', 3), ('Daniele Bartolini', 3), ('jcherlin', 2), ('iAn', 2), ('preetishkakkar', 2), ('TheComet', 2), ('podgorskiy', 2), ('ShuangLiu1992', 2), ('SaracenOne', 2), ('Ravbug', 2), ('pgruenbacher-TSUS', 2), ('xMyran', 2), ('fluffyfreak', 2), ('BorisShir', 2), ('fountainment', 2), ('An0nyMooUS', 2), ('jimon', 2), ('Hemofektik', 2), ('mtytel', 2), ('martinfelis', 2), ('carloscm', 2), ('pacebreaker', 2), ('daniilsunyaev', 2), ('elmindreda', 2), ('DarkContact', 2), ('ecuzzillo', 2), ('aleksandrbazhin', 2), ('Abraham Stolk', 2), ('Fabiz', 2), ('sinkingsugar', 2), ('rb6502', 2), ('PyryM', 2), ('Pacemaker', 2), ('msmshazan', 2), ('zlash', 2), ('kareemkermad', 2), ('syntheticmagus', 2), ('hcomere', 2), ('HumanBean4', 2), ('rhoot', 2), ('Crunkle', 2), ('markusstephanides', 1), ('psigen', 1), ('Klowner', 1), ('RicoP', 1), ('cykoder', 1), ('sburgoon', 1), ('Sebastian Marketsmueller', 1), ('Srekel', 1), ('steinarvk', 1), ('sleepinging', 1), ('tboogh', 1), ('jtomschroeder', 1), ('toomuchvoltage', 1), ('TReed0803', 1), ('Vazquinhos', 1), ('VictorPad', 1), ('handsomematt', 1), ('Marukyu', 1), ('bmoxb', 1), ('milostosic', 1), ('Mirko-Salm', 1), ('nachogarglez', 1), ('Reedbeta', 1), ('meshula', 1), ('volcoma', 1), ('Nuk510', 1), ('LittleCodingFox', 1), ('ocharles', 1), ('okwasniewski', 1), ('OswaldHurlem', 1), ('pangweiwei', 1), ('pmackinlay', 1), ('Durza007', 1), ('pendingchaos', 1), ('peppsac', 1), ('zhenqinshang', 1), ('markusobi', 1), ('mclohessy', 1), ('mncat77', 1), ('o7alesmlakar', 1), ('pourtheworld', 1), ('questor / inter', 1), ('rams3s', 1), ('rnbhatt', 1), ('slewicki', 1), ('stanlo', 1), ('stolk', 1), ('stomanovski', 1), ('tommyZZM', 1), ('weshoke', 1), ('xueyouchao', 1), ('ZelimDamian', 1), ('alekseyt', 1), ('Бранимир Караџић', 1), ('onqtam', 1), ('vinjn', 1), ('jb55', 1), ('huxingyi', 1), ('yanna', 1), ('actboy168', 1), ('astrofra', 1), ('bdunkin', 1), ('bullno1', 1), ('cancel', 1), ('divinon', 1), ('dom607', 1), ('feserr', 1), ('gamecoder-nz', 1), ('generalzzd', 1), ('vanishs', 1), ('knightlyj', 1), ('kschoice-fr', 1), ('kuncarous', 1), ('00bins', 1), ('Meoo', 1), ('bencoyote', 1), ('billfreist', 1), ('broepstorff', 1), ('beevik', 1), ('bzztbomb', 1), ('CrociDB', 1), ('bryanmcnett', 1), ('chrisfromwork', 1), ('cartuchogl', 1), ('Chris1AA', 1), ('Christophe Dehais', 1), ('Christopher Kohnert', 1), ('cigumo', 1), ('Cleroth', 1), ('shakesoda', 1), ('damucz', 1), ('code-disaster', 1), ('Developer-Ecosystem-Engineering', 1), ('Akira13641', 1), ('0Alastair1', 1), ('naleksiev', 1), ('Alex-MSFT', 1), ('clibequilibrium', 1), ('AlexLemminG', 1), ('Hexlord', 1), ('Giacom', 1), ('bashbug', 1), ('s1ddok', 1), ('trojanfoe', 1), ('docEdub', 1), ('andystanton', 1), ('kavaari', 1), ('Apoorva Joshi', 1), ('GoaLitiuM', 1), ('Leandros', 1), ('babak-karimi-asl', 1), ('Kepler-Br', 1), ('jf-mgd', 1), ('joedavisdev', 1), ('AgentFeyd', 1), ('jonnyhopper', 1), ('BSVino', 1), ('jjensen', 1), ('jsimmons', 1), ('tritao', 1), ('jcgamestoy', 1), ('justinboswell', 1), ('Kartoffelsaft', 1), ('kevinic', 1), ('Kitchen', 1), ('KostasAAA', 1), ('kylawl', 1), ('zao', 1), ('leethomason', 1), ('Logan McGrath', 1), ('ManuelK89', 1), ('d-s-h', 1), ('dougbinks', 1), ('elnormous', 1), ('Erkaman', 1), ('ebudai', 1), ('Erik van Bilsen', 1), ('EugenyN', 1), ('fbertola', 1), ('HerrKamrat', 1), ('gdevillele', 1), ('gsfare', 1), ('Garett Bass', 1), ('Gerald D. Gainant', 1), ('object71', 1), ('ivangoremykin', 1), ('jeduden', 1), ('Jannes1000Orks', 1), ('Jared-Miller', 1), ('johnBuffer', 1)",150,134,
takipi/aws-s3-speed,Test AWS speeds to the different regions,"aws-s3-speed
============

A project we use in www.takipi.com to test upload speeds to Amazon Simple Storage Service (S3) regions.

Installation
------------
a. Fork / Get the code and run
```mvn clean compile assembly:single```
b. Download latest snapshot
https://s3.amazonaws.com/app-takipi-com/tests/aws-s3-speed-0.0.6-jar-with-dependencies.jar
  
Usage
-----
You will need your AWS access keys.
Make sure you have buckets in all AWS regions or use the CREATE mode.
The prefix and suffix are concatenated to the bucket name such as: aws-speed-test-eu-1-06-mar-2013
```java -jar aws-s3-speed-0.0.6-jar-with-dependencies.jar  AWS_KEY AWS_SECRET PREFIX SUFFIX```

Running the test:
Use the RUN mode (make sure AWS access keys, prefix and suffix are the same as when you run it with CREATE
The reason it's a two way process is because you should wait a few minutes before running the test to make sure the DNS servers will easily find all your buckets around the world and won't affect the first round of the test.

Cleanup buckets:
Use DELETE mode to remove buckets

ROUNDS: Number of rounds to test, usually 12 (since we remove the best and worst scores before averaging)
SIZE: SMALL=1KB, MEDIUM=5MB, BIG=10MB, HUGE=100MB
METHOD: SDK = Uses AWS SDK S3Client `putObject` (uses HttpClient).PLAIN = Sign a link and uses plain `HttpsURLConnection` output stream
```java -jar aws-s3-speed-0.0.6-jar-with-dependencies.jar RUN AWS_KEY AWS_SECRET PREFIX SUFFIX ROUNDS BIG SDK```
",,2013-03-04T15:36:08Z,2016-05-11T22:55:56Z,5,3,38,10,"('chook', 11), ('lispmeister', 5), ('dee-kryvenko', 3), ('lispmeister', 2), ('Chen Harel', 1)",1,0,
QubitProducts/bamboo,HAProxy auto configuration and auto service discovery for Mesos Marathon,"# Bamboo  [![GoDoc](https://godoc.org/github.com/golang/gddo?status.svg)](http://godoc.org/github.com/QubitProducts/bamboo) [![Build Status](https://travis-ci.org/QubitProducts/bamboo.svg?branch=master)](https://travis-ci.org/QubitProducts/bamboo) [![Coverage Status](https://coveralls.io/repos/QubitProducts/bamboo/badge.svg?branch=master&service=github)](https://coveralls.io/github/QubitProducts/bamboo?branch=coverage)





![bamboo-logo](https://cloud.githubusercontent.com/assets/37033/4110258/a8cc58bc-31ef-11e4-87c9-dd20bd2468c2.png)

Bamboo is a web daemon that automatically configures
HAProxy for web services deployed on [Apache Mesos](http://mesos.apache.org) and [Marathon](https://mesosphere.github.io/marathon/).

It features:

* User interface for configuring HAProxy ACL rules for each Marathon application
* Rest API for configuring proxy ACL rules
* Auto configure HAProxy configuration file based your template; you can provision your own template in production to enable SSL and HAProxy stats interface, or configuring different load balance strategy
* Optionally handles health check endpoint if Marathon app is configured with [Healthchecks](https://mesosphere.github.io/marathon/docs/health-checks.html)
* Daemon itself is stateless; enables horizontal replication and scalability
* Developed in Golang, deployment on HAProxy instance has no additional dependency
* Optionally integrates with StatsD to monitor configuration reload event


### Compatibility

v0.1.1 supports Marathon 0.6 and Mesos 0.19.x

v0.2.2 supports both DNS and non-DNS proxy ACL rules

v0.2.8 supports both HTTP & TCP via custom Marathon enviroment variables (read below for details)

v0.2.9 supports Marathon 0.7.* (with [http_callback
enabled](https://mesosphere.github.io/marathon/docs/rest-api.html#event-subscriptions)) and Mesos 0.21.x

v0.2.11 improves API, deprecate previous API endpoint


### Marathon Compatibility

Marathon >= 1.5.0 Deprecated event registration method; Make sure configure Bamboo with `""UseEventStream"": true` 


### Releases and changelog

Since Marathon API and behaviour may change over time, especially in this early days. You should expect we aim to catch up those changes, improve design and adding new features. We aim to maintain backwards compatibility when possible. Releases and changelog are maintained in the [releases page](https://github.com/QubitProducts/bamboo/releases). Please read them when upgrading.

## Deployment Guide

You can deploy Bamboo with HAProxy on each Mesos slave. Each web service being allocated on Mesos Slave can discover services via localhost or domain you assigned by ACL rules. Alternatively, you can deploy Bamboo and HAProxy on separate instances, which means you need to loadbalance HAProxy cluster.

![bamboo-setup-guide](https://cloud.githubusercontent.com/assets/37033/4110199/a6226b8e-31ee-11e4-9734-68e0da00767c.png)

## User Interface

UI is useful to manage and visualize current state of proxy rules. Of course, you can configure HAProxy template to load balance Bamboo.

![user-interface-list](https://cloud.githubusercontent.com/assets/37033/4320901/527988dc-3f3b-11e4-8672-666605eb1ddf.png)

![user interface](https://cloud.githubusercontent.com/assets/37033/4320873/2ac65c48-3f3b-11e4-969e-52381dd33aae.png)

## StatsD Monitoring

![bamboo-graphite](https://cloud.githubusercontent.com/assets/37033/4117219/cef5cea2-328e-11e4-8346-ecc4e4e6046b.png)

## Configuration and Template

Bamboo binary accepts `-config` option to specify application configuration JSON file location. Type `-help` to get current available options.

Example configuration and HAProxy template can be found under [config/production.example.json](config/production.example.json) and  [config/haproxy_template.cfg](config/haproxy_template.cfg)
This section tries to explain usage in code comment style:

```JavaScript

{
  // Marathon instance configuration
  ""Marathon"": {
    // Marathon service HTTP endpoints
    ""Endpoint"": ""http://marathon1:8080,http://marathon2:8080,http://marathon3:8080"",
    // Use the Marathon HTTP event streaming feature (Bamboo 0.2.16, Marathon v0.9.0)
    // Required set to true if Marathon version is >= 1.5.0
    ""UseEventStream"": true
  },

  ""Bamboo"": {
    // Bamboo's HTTP address can be accessed by Marathon
    // This is used for Marathon HTTP callback, and each instance of Bamboo
    // must be provided a unique Endpoint directly addressable by Marathon
    // (e.g., the IP address of each server)
    ""Endpoint"": ""http://localhost:8000"",

    // Proxy setting information is stored in Zookeeper
    // Bamboo will create this path if it does not already exist
    ""Zookeeper"": {
      // Use the same ZK setting if you run on the same ZK cluster
      ""Host"": ""zk01.example.com:2812,zk02.example.com:2812"",
      ""Path"": ""/marathon-haproxy/state"",
      ""ReportingDelay"": 5
    }
  }


  // Make sure using absolute path on production
  ""HAProxy"": {
    ""TemplatePath"": ""/var/bamboo/haproxy_template.cfg"",
    ""OutputPath"": ""/etc/haproxy/haproxy.cfg"",
    ""ReloadCommand"": ""haproxy -f /etc/haproxy/haproxy.cfg -p /var/run/haproxy.pid -D -sf $(cat /var/run/haproxy.pid)"",
    // A command that will validate the config before running reload command.
    // '{{.}}' will be expanded to a temporary path that contains the config contents
    ""ReloadValidationCommand"": ""haproxy -c -f {{.}}"",
    // A command that will always be run after ReloadCommand, even if the reload fails
    ""ReloadCleanupCommand"": ""exit 0""
  },

  // Enable or disable StatsD event tracking
  ""StatsD"": {
    ""Enabled"": false,
    // StatsD or Graphite server host
    ""Host"": ""localhost:8125"",
    // StatsD namespace prefix
    // If you have multiple Bamboo instances, you might want to label each node
    // by bamboo-server.production.n1.
    ""Prefix"": ""bamboo-server.production.""
  }
}
```

### Customize HAProxy Template with Marathon App Environment Variables

Marathon app env variables are available to be called in the template.
The default template shipped with Bamboo is aware of `BAMBOO_TCP_PORT`. When this variable is specified in Marathon app creation, the application will be configured with TCP mode. For example:

```JavaScript
{
  ""id"": ""FileServer"",
  ""cmd"": ""python -m SimpleHTTPServer $PORT0"",
  ""cpus"": 0.1,
  ""mem"": 90,
  ""ports"": [0],
  ""instances"": 2,
  ""env"": {
    ""BAMBOO_TCP_PORT"": ""1080"",
    ""MY_CUSTOM_ENV"": ""hello""
  }
}
```

In this example, both `BAMBOO_TCP_PORT` and `MY_CUSTOM_ENV` can be accessed in HAProxy template. This enables flexible template customization depending on your preferences.

#### Default Haproxy Template ACL

The default acl rule in the `haproxy_template.cfg` uses the full
marathon app id, which may include slash-separated groups.

```
        # This is the default proxy criteria
        acl {{ $app.EscapedId }}-aclrule path_beg -i {{ $app.Id }}
```

For example if your app is named ""/mygroup/appname"", your default acl
will be `path_beg -i /mygroup/appname`.  This can always be changed
using the bamboo web UI.

There is also a DNS friendly version of your marathon app Id which can
be used instead of the slash-separated one.  `MesosDnsId` includes the
groups as hyphenated suffixes.  For example, if your appname is
""/another/group/app"" then the `MesosDnsId` will be ""app-group-another"".

You can edit the `haproxy_template.cfg` and use the DNS friendly name
for your default ACL instead.

```
    acl {{ $app.EscapedId }}-aclrule hdr_dom(host) -i {{ $app.MesosDnsId }}
```

### Environment Variables

Configuration in the `production.json` file can be overridden with environment variables below. This is generally useful when you are building a Docker image for Bamboo and HAProxy. If they are not specified then the values from the configuration file will be used.

Environment Variable | Corresponds To
---------------------|---------------
`MARATHON_ENDPOINT` | Marathon.Endpoint
`MARATHON_USER` | Marathon.User
`MARATHON_PASSWORD` | Marathon.Password
`BAMBOO_ENDPOINT` | Bamboo.Endpoint
`BAMBOO_ZK_HOST` | Bamboo.Zookeeper.Host
`BAMBOO_ZK_PATH` | Bamboo.Zookeeper.Path
`HAPROXY_TEMPLATE_PATH` | HAProxy.TemplatePath
`HAPROXY_OUTPUT_PATH` | HAProxy.OutputPath
`HAPROXY_RELOAD_CMD` | HAProxy.ReloadCommand
`BAMBOO_DOCKER_AUTO_HOST` | Sets `BAMBOO_ENDPOINT=$HOST` when Bamboo container starts. Can be any value.
`STATSD_ENABLED` | StatsD.Enabled
`STATSD_PREFIX` | StatsD.Prefix
`STATSD_HOST` | StatsD.Host


## REST APIs


#### GET /api/state

Shows the data structure used for rendering template

```bash
curl -i http://localhost:8000/api/state
```

#### GET /api/services

Shows all service configurations

```bash
curl -i http://localhost:8000/api/services
```

Example result:

```json
{
    ""/authentication-service"": {
        ""Id"": ""/authentication-service"",
        ""Acl"": ""path_beg -i /authentication-service""
    },
    ""/payment-service"": {
        ""Id"": ""/payment-service"",
        ""Acl"": ""path_beg -i /payment-service""
    }
}
```

#### POST /api/services

Creates a service configuration for a Marathon Application ID

```bash
curl -i -X POST -d '{""id"":""/ExampleAppGroup/app1"",""acl"":""hdr(host) -i app-1.example.com""}' http://localhost:8000/api/services
```

#### PUT /api/services/:id

Updates an existing or creates a new service configuration for a Marathon application. `:id` is the Marathon Application ID

```bash
curl -i -X PUT -d '{""id"":""/ExampleAppGroup/app1"", ""acl"":""path_beg -i /group/app-1""}' http://localhost:8000/api/services//ExampleAppGroup/app1
```

**Note**: Create semantics are available since version 0.2.11.

#### DELETE /api/services/:id

Deletes an existing service configuration. `:id` Marathon Application ID

```bash
curl -i -X DELETE http://localhost:8000/api/services//ExampleAppGroup/app1
```

#### GET /status

Bamboo webapp's healthcheck point

```
curl -i http://localhost:8000/status
```


## Deployment

We recommend installing binary with deb or rpm package. 

The repository includes an example deb package build script called [builder/build.sh](./builder/build.sh) which generates a deb package in `./output`. For this install [fpm](https://github.com/jordansissel/fpm) and run:

```
go build bamboo.go
./builder/build.sh
```

Moreover, there is
- a [Jenkins build script](builder/ci-jenkins.sh) to run `build.sh` from a Jenkins job
- and a [Docker build container](builder/build.sh) which will generate the deb package in the volume mounted output directory:

```
docker build -f Dockerfile-deb -t bamboo-build .
docker run -it -v $(pwd)/output:/output bamboo-build
```

Independently how you build the deb package, you can copy it to a server or publish to your own apt repository.

The example deb package deploys:

* Upstart job [`bamboo-server`](https://github.com/QubitProducts/bamboo/blob/master/builder/bamboo-server), e.g. upstart assumes `/var/bamboo/production.json` is configured correctly.
* Application directory is under `/opt/bamboo/`
* Configuration and logs is under `/var/bamboo/`
* Log file is rotated automatically

In case you're not using upstart, a template init.d service is provided in [`init.d-bamboo-server`](https://github.com/QubitProducts/bamboo/blob/master/builder/init.d-bamboo-server). Install it with
```
sudo cp builder/init.d-bamboo-server /etc/init.d/bamboo-server
sudo chown root:root /etc/init.d/bamboo-server
sudo chmod 755 /etc/init.d/bamboo-server
sudo update-rc.d ""bamboo-server"" defaults
```

You can then start the server with ```sudo service bamboo-server start```. Other commands: status, restart, stop

### As a Docker container

There is a `Dockerfile` that will allow Bamboo to be built and run from within a Docker container.

#### Building the image

The Docker image can be built and added to your local repository with the following command from within the project root directory:

````
docker build -t bamboo .
````

#### Running Bamboo as a Docker container

Once the image has been built, running as a container is straightforward - you do however still need to provide the configuration to the image as environment variables. Docker allows two options for this - using the `-e` option  or by putting them in a file and using the `--env-file` option. Bamboo use Marathon event bus to get app info, so make sure set `--event_subscriber http_callback` or env `MARATHON_EVENT_SUBSCRIBER=http_callback` before start marathon instance.For this example we will use the former and we will map through ports 8000 and 80 to the docker host (obviously the hosts configured here will need to be reachable from this container):

````
docker run -t -i --rm -p 8000:8000 -p 80:80 \
    -e MARATHON_ENDPOINT=http://marathon1:8080,http://marathon2:8080,http://marathon3:8080 \
    -e BAMBOO_ENDPOINT=http://bamboo:8000 \
    -e BAMBOO_ZK_HOST=zk01.example.com:2181,zk02.example.com:2181 \
    -e BAMBOO_ZK_PATH=/bamboo \
    -e BIND="":8000"" \
    -e CONFIG_PATH=""config/production.example.json"" \
    -e BAMBOO_DOCKER_AUTO_HOST=true \
    bamboo
````

Bamboo is started by supervisord in this Docker image. The [default Supervisord configuration](https://github.com/QubitProducts/bamboo/blob/master/builder/supervisord.conf) redirects stderr/stdout logs to the terminal. If you wish to turn the debug information off in production, you can use an [alternative configuration](https://github.com/QubitProducts/bamboo/blob/master/builder/supervisord.conf.prod).

## Development and Contribution

We use [godep](https://github.com/tools/godep) managing Go package dependencies; Goconvey for unit testing; CommonJS and SASS for frontend development and build distribution.
 
* Golang 1.7
* Node.js 0.10.x+

Golang:

```bash
# Pakcage manager
go get github.com/tools/godep
# Testing Toolkit
go get -t github.com/smartystreets/goconvey

cd $GOPATH/src/github.com/QubitProducts/bamboo

# Build your binary
go build

# Run test (requires a local zookeeper running)
goconvey
```

Node.js UI dependencies:

```bash
# Global 
npm install -g grunt-cli napa browserify node-static foreman karma-cli
# Local
npm install && napa

# Start a foreman configured with Procfile for building SASS and JavaScript 
nf start
```



## License

Bamboo is released under Apache License 2.0
","'ceh', 'infra'",2014-08-26T09:50:54Z,2017-09-28T17:30:57Z,52,29,793,72,"('j1n6', 126), ('Jing Dong', 81), ('Laurie Clark-Michalek', 39), ('pdpi', 18), ('xperimental', 12), ('sttts', 11), ('timoreimann', 8), ('bateau84', 7), ('Damian Martinez', 5), ('Jing Dong', 5), ('albertsj1', 5), ('Sergei Egorov', 5), ('Ryan Thomas', 4), ('lclarkmichalek', 4), ('rasputnik', 4), ('Diogo Gomes', 3), ('derBiggi', 3), ('elmalto', 3), ('sergesyrota', 2), ('hyper0x', 2), ('bsideup', 2), ('Nick Jüttner', 2), ('mvallerie', 2), ('Jakub Veverka', 2), ('Emilien Kenler', 2), ('Dick Davies', 2), ('dkesler', 2), ('MichaelScheetz-HPE', 1), ('Mike', 1), ('raravena80', 1), ('Steve Hoffman', 1), ('Sylvain VeyriÃ©', 1), ('Sylvain Veyrié', 1), ('Willbern', 1), ('lowstz', 1), ('malterb', 1), ('pingz', 1), ('root', 1), ('shashank agarwal', 1), ('xianlubird', 1), ('mbabineau', 1), ('jdubs', 1), ('John Trenholm', 1), ('John Mastron', 1), ('Jing Dong', 1), ('Jean-Louis Rigau', 1), ('jhmartin', 1), ('gmitre', 1), ('boomfish', 1), ('cwegrzyn', 1), ('Zariel', 1), ('apriendeau', 1)",25,15,
davidstutz/bootstrap-multiselect,JQuery multiselect plugin based on Twitter Bootstrap.,"# Bootstrap Multiselect

Bootstrap Multiselect is a JQuery based plugin to provide an intuitive user interface for using select inputs with the multiple attribute present. Instead of a select a bootstrap button will be shown w dropdown menu containing the single options as checkboxes.

Documentation, Examples, FAQ and License: [https://davidstutz.github.io/bootstrap-multiselect/](https://davidstutz.github.io/bootstrap-multiselect/).

**If you are interested in actively maintaining this project, please contact me (see GitHub profile for contact information).**

Bootstrap Multiselect is featured in an article on [tutorialzine](https://tutorialzine.com/): [50 must-Have Plugins for Extending Twitter Bootstrap](https://tutorialzine.com/2013/07/50-must-have-plugins-for-extending-twitter-bootstrap/); on [Bootsnipp](https://bootsnipp.com/)'s [list of Twitter Bootstrap resources](https://bootsnipp.com/resources); on [Design Your Way](https://www.designyourway.net/blog/resources/jquery-bootstrap-plugins/); and available on [NuGet](https://www.nuget.org/packages/Bootstrap.Multiselect).

**If you use this plugin commercially, consider supporting the development by [making a donation](https://davidstutz.de/donate/).**

Also check out [Bootstrap Strength Meter](https://github.com/davidstutz/bootstrap-strength-meter) - a Twitter Bootstrap plugin to visualize password strength using [Password Score](https://github.com/davidstutz/password-score).

![Example of a multiselect.](example.png?raw=true ""Example of a multiselect."")

## License

**Apache License, Version 2.0**

Copyright (c) 2012 - 2022 [David Stutz](https://davidstutz.de/)

Licensed under the Apache License, Version 2.0 (the ""License""); you may not use this file except in compliance with the License. You may obtain a copy of the License at https://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.

**BSD 3-Clause License**

Copyright (c) 2012 - 2022 [David Stutz](https://davidstutz.de/)
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
* Neither the name of David Stutz nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ""AS IS"" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
","'bootstrap-multiselect', 'jquery-plugin', 'twitter-bootstrap'",2012-10-10T19:19:33Z,2024-02-26T11:56:03Z,117,90,3661,156,"('davidstutz', 473), ('s-eckard', 52), ('Tyf0x', 23), ('luisrudge', 20), ('d-langstein', 18), ('programcsharp', 15), ('kayhadrin', 10), ('Aaron-P', 6), ('mak0t0san', 6), ('ZuBB', 5), ('Raffael Santschi', 5), ('philfreo', 5), ('BrewDawg', 5), ('KyleNeedham', 5), ('fabian-steinberg', 5), ('conradfr', 3), ('inteon', 3), ('Azd325', 3), ('Piotr Zygmuntowicz', 3), ('nnieslan', 3), ('mmuruev', 3), ('Kichikahunov', 3), ('Aidurber', 3), ('tiesont', 2), ('yuripc', 2), ('sathyamoorthi', 2), ('fagundes', 2), ('vschoener', 2), ('timschlechter', 2), ('steunix', 2), ('rzcoder', 2), ('Rushdy Kamel', 2), ('piotrromanowski', 2), ('ehouais', 2), ('najlepsiwebdesigner', 2), ('nghtstr', 2), ('jbarrus', 2), ('James Kirby', 2), ('Gicehajunior', 2), ('Eugeniyame', 2), ('Eduard Dudar', 2), ('Cedric Deschenes', 2), ('Ashok Ramnath', 2), ('aamaliaa', 2), ('nexces', 2), ('S-t-e-p-s', 1), ('thienedits', 1), ('Powerhamster', 1), ('tsi', 1), ('vivianspencer', 1), ('Drakula2k', 1), ('twz915', 1), ('ysramirez', 1), ('Алекс', 1), ('micrypt', 1), ('ses4j', 1), ('sander4318', 1), ('Roman Yerin', 1), ('demartis', 1), ('Raffael Santschi', 1), ('priyankt68', 1), ('itsNikolay', 1), ('Nithyaduruvan', 1), ('tsengkhai', 1), ('torresgol10', 1), ('shayh', 1), ('scenting', 1), ('nurikabe', 1), ('ludo6577', 1), ('lmcarreiro', 1), ('joeheyming', 1), ('hermanho', 1), ('goncons', 1), ('geonewlitho', 1), ('ellauty', 1), ('dfisch', 1), ('deniss-s', 1), ('davidcalhoun', 1), ('barisbora', 1), ('gareth-evans-sniper', 1), ('aaronw112358', 1), ('jerodev', 1), ('jayc2', 1), ('hanzubon', 1), ('George Kats', 1), ('Esdras Eduardo', 1), ('erikhuisman', 1), ('Devristo', 1), ('dcbrewster', 1), ('crowbarsolutions', 1), ('Chris Friend', 1), ('Chris Coker', 1), ('cwalv', 1), ('JProgrammer', 1), ('Cagdas Bayram', 1), ('Ben Yee', 1), ('asross', 1), ('andrei-stsiapanau', 1), ('Abi1ity', 1), ('kleinsch', 1), ('melgish', 1), ('neilmonroe', 1), ('wyze', 1), ('mismith', 1), ('Matt Waldron', 1), ('MathieuDoyon', 1), ('marshallswain', 1), ('zimmski', 1), ('Kuiyu CHANG', 1), ('Justin Mealey', 1), ('Jorge Niedbalski', 1), ('Jorg10', 1), ('Joel Hillacre', 1), ('Joe Vu', 1), ('joaojosepedrini', 1), ('neojin', 1), ('Jhonny Lidfors', 1)",72,53,
philc/vimium,The hacker's browser.,"# Vimium - The Hacker's Browser

Vimium is a browser extension that provides keyboard-based navigation and control of the web in the
spirit of the Vim editor.

**Installation instructions:**

* Chrome: [Chrome web store](https://chrome.google.com/extensions/detail/dbepggeogbaibhgnhhndojpepiihcmeb)
* Edge: [Edge Add-ons](https://microsoftedge.microsoft.com/addons/detail/vimium/djmieaghokpkpjfbpelnlkfgfjapaopa)
* Firefox: [Firefox Add-ons](https://addons.mozilla.org/en-GB/firefox/addon/vimium-ff/)

To install from source, see [here](CONTRIBUTING.md#installing-from-source).

Vimium's Options page can be reached via a link on the help dialog (type `?`) or via the button next
to Vimium on the extension pages of Chrome and Edge (`chrome://extensions`), or Firefox
(`about:addons`).

## Keyboard Bindings

Modifier keys are specified as ``, ``, and `` for ctrl+x, meta+x, and alt+x
respectively. For shift+x and ctrl-shift-x, just type `X` and ``. See the next section for how
to customize these bindings.

Once you have Vimium installed, you can see this list of key bindings at any time by typing `?`.

Navigating the current page:

    ?       show the help dialog for a list of all available keys
    h       scroll left
    j       scroll down
    k       scroll up
    l       scroll right
    gg      scroll to top of the page
    G       scroll to bottom of the page
    d       scroll down half a page
    u       scroll up half a page
    f       open a link in the current tab
    F       open a link in a new tab
    r       reload
    gs      view source
    i       enter insert mode -- all commands will be ignored until you hit Esc to exit
    yy      copy the current url to the clipboard
    yf      copy a link url to the clipboard
    gf      cycle forward to the next frame
    gF      focus the main/top frame

Navigating to new pages:

    o       Open URL, bookmark, or history entry
    O       Open URL, bookmark, history entry in a new tab
    b       Open bookmark
    B       Open bookmark in a new tab

Using find:

    /       enter find mode
              -- type your search query and hit enter to search, or Esc to cancel
    n       cycle forward to the next find match
    N       cycle backward to the previous find match

For advanced usage, see [regular expressions](https://github.com/philc/vimium/wiki/Find-Mode) on the
wiki.

Navigating your history:

    H       go back in history
    L       go forward in history

Manipulating tabs:

    J, gT   go one tab left
    K, gt   go one tab right
    g0      go to the first tab. Use ng0 to go to n-th tab
    g$      go to the last tab
    ^       visit the previously-visited tab
    t       create tab
    yt      duplicate current tab
    x       close current tab
    X       restore closed tab (i.e. unwind the 'x' command)
    T       search through your open tabs
    W       move current tab to new window
       pin/unpin current tab

Using marks:

    ma, mA  set local mark ""a"" (global mark ""A"")
    `a, `A  jump to local mark ""a"" (global mark ""A"")
    ``      jump back to the position before the previous jump
              -- that is, before the previous gg, G, n, N, / or `a

Additional advanced browsing commands:

    ]], [[  Follow the link labeled 'next' or '>' ('previous' or '<')
              - helpful for browsing paginated sites
       open multiple links in a new tab
    gi      focus the first (or n-th) text input box on the page. Use  to cycle through options.
    gu      go up one level in the URL hierarchy
    gU      go up to root of the URL hierarchy
    ge      edit the current URL
    gE      edit the current URL and open in a new tab
    zH      scroll all the way left
    zL      scroll all the way right
    v       enter visual mode; use p/P to paste-and-go, use y to yank
    V       enter visual line mode

Vimium supports command repetition so, for example, hitting `5t` will open 5 tabs in rapid
succession. `` (or ``) will clear any partial commands in the queue and will also exit
insert and find modes.

There are some advanced commands which aren't documented here; refer to the help dialog (type `?`)
for a full list.

## Custom Key Mappings

You may remap or unmap any of the default key bindings in the ""Custom key mappings"" on the options
page.

Enter one of the following key mapping commands per line:

- `map key command`: Maps a key to a Vimium command. Overrides Chrome's default behavior (if any).
- `unmap key`: Unmaps a key and restores Chrome's default behavior (if any).
- `unmapAll`: Unmaps all bindings. This is useful if you want to completely wipe Vimium's defaults
  and start from scratch with your own setup.

Examples:

- `map  scrollPageDown` maps ctrl+d to scrolling the page down. Chrome's default behavior of
  bringing up a bookmark dialog is suppressed.
- `map r reload` maps the r key to reloading the page.
- `unmap ` removes any mapping for ctrl+d and restores Chrome's default behavior.
- `unmap r` removes any mapping for the r key.

Available Vimium commands can be found via the ""Show available commands"" link near the key mapping
box on the options page. The command name appears to the right of the description in parenthesis.

You can add comments to key mappings by starting a line with `""` or `#`.

The following special keys are available for mapping:

- ``, ``, ``, `` for ctrl, alt, shift, and meta (command on Mac) respectively
  with any key. Replace `*` with the key of choice.
- ``, ``, ``, `` for the arrow keys.
- `` through `` for the function keys.
- `` for the space key.
- ``, ``, ``, ``, ``, `` and `` for the
  corresponding non-printable keys.

Shifts are automatically detected so, for example, `` corresponds to ctrl+shift+7 on an English
keyboard.

## More documentation

Many of the more advanced or involved features are documented on
[Vimium's GitHub wiki](https://github.com/philc/vimium/wiki). Also see the
[FAQ](https://github.com/philc/vimium/wiki/FAQ).

## Contributing

See [CONTRIBUTING.md](CONTRIBUTING.md) for details.

## Release Notes

See [CHANGELOG](CHANGELOG.md) for the major changes in each release.

## License

Copyright (c) Phil Crosby, Ilya Sukhar. See [MIT-LICENSE.txt](MIT-LICENSE.txt) for details.
",,2009-09-20T07:08:19Z,2024-06-12T01:39:03Z,190,149,22505,289,"('smblott-github', 2096), ('philc', 1069), ('mrmr1993', 454), ('int3', 351), ('ilya', 224), ('Stephen Blott', 92), ('gdh1995', 84), ('niklasb', 79), ('deiga', 22), ('vendamere', 16), ('dmac', 15), ('ajkovar', 14), ('cespare', 13), ('Ilya Sukhar', 13), ('liesen', 12), ('Phil Crosby', 12), ('Phil Crosby', 11), ('Bill Casarin', 9), ('sainaen', 8), ('Daniel Skogly', 7), ('wjianbo', 7), ('Ilya', 6), ('mgarriott', 6), ('Phil Crosby', 6), ('sco-tt', 6), ('seven1m', 5), ('Stephen Blott', 5), ('RagnarGrootKoerkamp', 5), ('Phil Crosby', 5), ('marcotc', 5), ('Ilya Sukhar', 5), ('christophermanning', 5), ('unknown', 4), ('ayn2op', 4), ('abe', 4), ('rperryng', 4), ('Phil Crosby', 4), ('pandeiro', 4), ('luanpotter', 4), ('ConradIrwin', 4), ('chelmertz', 4), ('UncleSnail', 4), ('NI57721', 3), ('konstantinkreft', 3), ('mijoharas', 3), ('musically-ut', 3), ('UncleBill', 3), ('tobgle', 3), ('wadkar', 3), ('Stephen Blott', 3), ('fearphage', 3), ('sudonatalie', 3), ('prestancedesign', 3), ('Matt Wanchap', 3), ('blaix', 3), ('Julian Naydichev', 3), ('lack', 3), ('Clemens Buchacher', 3), ('bernardobarreto', 3), ('brianvanburken', 3), ('rtlechow', 2), ('ramiroaraujo', 2), ('rkho', 2), ('sharat87', 2), ('shyiko', 2), ('curipha', 2), ('tbodt', 2), ('Timo Sand', 2), ('vincentbernat', 2), ('hbt', 2), ('daning', 2), ('has2k1', 2), ('camflint', 2), ('eproxus', 2), ('alphaCTzo7G', 2), ('stroborobo', 2), ('branden', 2), ('daz', 2), ('davidjb', 2), ('fnkr', 2), ('M-frankied', 2), ('tuxcanfly', 2), ('pyarmak', 2), ('fernandezpablo85', 2), ('changemewtf', 2), ('maksimr', 2), ('John Diamond', 2), ('kevinji', 2), ('lyallh', 2), ('rhysd', 2), ('webkadiz', 1), ('tuanbass', 1), ('teddywing', 1), ('feinom', 1), ('shannietron', 1), ('Sergey Zozulya', 1), ('Scott Pinkelman', 1), ('scottperlitch', 1), ('hackel', 1), ('fent', 1), ('rdpate', 1), ('Robin Choudhury', 1), ('rgsmith1980', 1), ('rodimius', 1), ('rileywilddog', 1), ('rmacklin', 1), ('Phil Crosby', 1), ('pdf', 1), ('Strajk', 1), ('oooooooo', 1), ('npeeples', 1), ('MonsterPi13', 1), ('mkobayashime', 1), ('markstos', 1), ('MarcoLucidi01', 1), ('angelonuffer', 1), ('zurbrugc', 1), ('unknown', 1), ('tejohnso', 1), ('sudo-nick16', 1), ('stephane', 1), ('smallming', 1), ('rspeicher', 1), ('ris58h', 1), ('pluma9', 1), ('nchase', 1), ('nazri', 1), ('mhchen', 1), ('impossible98', 1), ('ilya', 1), ('hugehope', 1), ('hogelog', 1), ('guns', 1), ('cg-debug', 1), ('fukayatsu', 1), ('epitron', 1), ('ennustaja', 1), ('elevengu', 1), ('abecruzs', 1), ('Werner Laurensse', 1), ('sukima', 1), ('deslee', 1), ('yandavid', 1), ('David Leadbeater', 1), ('dpogue', 1), ('poacher2k', 1), ('Daniel Skogly (poacher2k)', 1), ('colin-kiegel', 1), ('cmusik', 1), ('Christian Stefanescu', 1), ('bouk', 1), ('Bill Mill', 1), ('Ben Baum', 1), ('raboof', 1), ('ahstro', 1), ('Anton Rissanen', 1), ('achew22', 1), ('AlliedEnvy', 1), ('alanoliveira', 1), ('ohnishiakira', 1), ('akhilman', 1), ('acrollet', 1), ('ademuri', 1), ('Aaron Hall', 1), ('dharmaturtle', 1), ('novelview9', 1), ('lorensr', 1), ('fangli', 1), ('Kevin Today', 1), ('kezabelle', 1), ('Kafji', 1), ('JulianDeal', 1), ('Josh Kim', 1), ('knuton', 1), ('joeybaker', 1), ('bingocaller', 1), ('janis-piazza', 1), ('jdpopkin', 1), ('qwIvan', 1), ('xuhdev', 1), ('Honeypot95', 1), ('gaborluk', 1), ('gpurkins', 1), ('george-carlin', 1), ('GKFX', 1), ('gaving', 1), ('gitah', 1), ('The-Compiler', 1), ('ewollesen', 1), ('ember-rose', 1)",100,79,
heibaiying/BigData-Notes,大数据入门指南  :star:,"# BigData-Notes



  


**大数据入门指南**




    
      
      
      
      
      
      
      
      
      
      
      
      
    
    
      Hadoop
      Hive
      Spark
      Storm
      Flink
      HBase
      Kafka
      Zookeeper
      Flume
      Sqoop
      Azkaban
      Scala
    
  



	 
	 
	 

  如果需要离线阅读，可以在公众号上发送 “bigdata” 获取《大数据入门指南》离线阅读版！  



## :black_nib: 前  言

1. [大数据学习路线](notes/大数据学习路线.md)
2. [大数据技术栈思维导图](notes/大数据技术栈思维导图.md)        
3. [大数据常用软件安装指南](notes/大数据常用软件安装指南.md)

## 一、Hadoop

1. [分布式文件存储系统 —— HDFS](notes/Hadoop-HDFS.md)
2. [分布式计算框架 —— MapReduce](notes/Hadoop-MapReduce.md)
3. [集群资源管理器 —— YARN](notes/Hadoop-YARN.md)
4. [Hadoop 单机伪集群环境搭建](notes/installation/Hadoop单机环境搭建.md)
5. [Hadoop 集群环境搭建](notes/installation/Hadoop集群环境搭建.md)
6. [HDFS 常用 Shell 命令](notes/HDFS常用Shell命令.md)
7. [HDFS Java API 的使用](notes/HDFS-Java-API.md)
8. [基于 Zookeeper 搭建 Hadoop 高可用集群](notes/installation/基于Zookeeper搭建Hadoop高可用集群.md)

## 二、Hive

1. [Hive 简介及核心概念](notes/Hive简介及核心概念.md)
2. [Linux 环境下 Hive 的安装部署](notes/installation/Linux环境下Hive的安装部署.md)
4. [Hive CLI 和 Beeline 命令行的基本使用](notes/HiveCLI和Beeline命令行的基本使用.md)
6. [Hive 常用 DDL 操作](notes/Hive常用DDL操作.md)
7. [Hive 分区表和分桶表](notes/Hive分区表和分桶表.md)
8. [Hive 视图和索引](notes/Hive视图和索引.md)
9. [Hive 常用 DML 操作](notes/Hive常用DML操作.md)
10. [Hive 数据查询详解](notes/Hive数据查询详解.md)

## 三、Spark

**Spark Core :**

1. [Spark 简介](notes/Spark简介.md)
2. [Spark 开发环境搭建](notes/installation/Spark开发环境搭建.md)
4. [弹性式数据集 RDD](notes/Spark_RDD.md)
5. [RDD 常用算子详解](notes/Spark_Transformation和Action算子.md)
5. [Spark 运行模式与作业提交](notes/Spark部署模式与作业提交.md)
6. [Spark 累加器与广播变量](notes/Spark累加器与广播变量.md)
7. [基于 Zookeeper 搭建 Spark 高可用集群](notes/installation/Spark集群环境搭建.md)

**Spark SQL :**

1. [DateFrame 和 DataSet ](notes/SparkSQL_Dataset和DataFrame简介.md)
2. [Structured API 的基本使用](notes/Spark_Structured_API的基本使用.md)
3. [Spark SQL 外部数据源](notes/SparkSQL外部数据源.md)
4. [Spark SQL 常用聚合函数](notes/SparkSQL常用聚合函数.md)
5. [Spark SQL JOIN 操作](notes/SparkSQL联结操作.md)

**Spark Streaming ：**

1. [Spark Streaming 简介](notes/Spark_Streaming与流处理.md)
2. [Spark Streaming 基本操作](notes/Spark_Streaming基本操作.md)
3. [Spark Streaming 整合 Flume](notes/Spark_Streaming整合Flume.md)
4. [Spark Streaming 整合 Kafka](notes/Spark_Streaming整合Kafka.md)

## 四、Storm

1. [Storm 和流处理简介](notes/Storm和流处理简介.md)
2. [Storm 核心概念详解](notes/Storm核心概念详解.md)
3. [Storm 单机环境搭建](notes/installation/Storm单机环境搭建.md)
4. [Storm 集群环境搭建](notes/installation/Storm集群环境搭建.md)
5. [Storm 编程模型详解](notes/Storm编程模型详解.md)
6. [Storm 项目三种打包方式对比分析](notes/Storm三种打包方式对比分析.md)
7. [Storm 集成 Redis 详解](notes/Storm集成Redis详解.md)
8. [Storm 集成 HDFS/HBase](notes/Storm集成HBase和HDFS.md)
9. [Storm 集成 Kafka](notes/Storm集成Kakfa.md)

## 五、Flink

1. [Flink 核心概念综述](notes/Flink核心概念综述.md)
2. [Flink 开发环境搭建](notes/Flink开发环境搭建.md)
3. [Flink Data Source](notes/Flink_Data_Source.md)
4. [Flink Data Transformation](notes/Flink_Data_Transformation.md)
4. [Flink Data Sink](notes/Flink_Data_Sink.md)
6. [Flink 窗口模型](notes/Flink_Windows.md)
7. [Flink 状态管理与检查点机制](notes/Flink状态管理与检查点机制.md)
8. [Flink Standalone 集群部署](notes/installation/Flink_Standalone_Cluster.md)


## 六、HBase

1. [Hbase 简介](notes/Hbase简介.md)
2. [HBase 系统架构及数据结构](notes/Hbase系统架构及数据结构.md)
3. [HBase 基本环境搭建 (Standalone /pseudo-distributed mode)](notes/installation/HBase单机环境搭建.md)
4. [HBase 集群环境搭建](notes/installation/HBase集群环境搭建.md)
5. [HBase 常用 Shell 命令](notes/Hbase_Shell.md)
6. [HBase Java API](notes/Hbase_Java_API.md)
7. [HBase 过滤器详解](notes/Hbase过滤器详解.md)
8. [HBase 协处理器详解](notes/Hbase协处理器详解.md)
9. [HBase 容灾与备份](notes/Hbase容灾与备份.md)
10. [HBase的 SQL 中间层 —— Phoenix](notes/Hbase的SQL中间层_Phoenix.md)
11. [Spring/Spring Boot 整合 Mybatis + Phoenix](notes/Spring+Mybtais+Phoenix整合.md)

## 七、Kafka

1. [Kafka 简介](notes/Kafka简介.md)
2. [基于 Zookeeper 搭建 Kafka 高可用集群](notes/installation/基于Zookeeper搭建Kafka高可用集群.md)
3. [Kafka 生产者详解](notes/Kafka生产者详解.md)
4. [Kafka 消费者详解](notes/Kafka消费者详解.md)
5. [深入理解 Kafka 副本机制](notes/Kafka深入理解分区副本机制.md)

## 八、Zookeeper

1. [Zookeeper 简介及核心概念](notes/Zookeeper简介及核心概念.md)
2. [Zookeeper 单机环境和集群环境搭建](notes/installation/Zookeeper单机环境和集群环境搭建.md) 
3. [Zookeeper 常用 Shell 命令](notes/Zookeeper常用Shell命令.md)
4. [Zookeeper Java 客户端 —— Apache Curator](notes/Zookeeper_Java客户端Curator.md)
5. [Zookeeper  ACL 权限控制](notes/Zookeeper_ACL权限控制.md)

## 九、Flume

1. [Flume 简介及基本使用](notes/Flume简介及基本使用.md)
2. [Linux 环境下 Flume 的安装部署](notes/installation/Linux下Flume的安装.md)
3. [Flume 整合 Kafka](notes/Flume整合Kafka.md)

## 十、Sqoop

1. [Sqoop 简介与安装](notes/Sqoop简介与安装.md)
2. [Sqoop 的基本使用](notes/Sqoop基本使用.md)

## 十一、Azkaban

1. [Azkaban 简介](notes/Azkaban简介.md)
2. [Azkaban3.x 编译及部署](notes/installation/Azkaban_3.x_编译及部署.md)
3. [Azkaban Flow 1.0 的使用](notes/Azkaban_Flow_1.0_的使用.md)
4. [Azkaban Flow 2.0 的使用](notes/Azkaban_Flow_2.0_的使用.md)

## 十二、Scala

1. [Scala 简介及开发环境配置](notes/Scala简介及开发环境配置.md)
2. [基本数据类型和运算符](notes/Scala基本数据类型和运算符.md)
3. [流程控制语句](notes/Scala流程控制语句.md)
4. [数组 —— Array](notes/Scala数组.md)
5. [集合类型综述](notes/Scala集合类型.md)
6. [常用集合类型之 —— List & Set](notes/Scala列表和集.md)
7. [常用集合类型之 —— Map & Tuple](notes/Scala映射和元组.md)
8. [类和对象](notes/Scala类和对象.md)
9. [继承和特质](notes/Scala继承和特质.md)
10. [函数 & 闭包 & 柯里化](notes/Scala函数和闭包.md)
11. [模式匹配](notes/Scala模式匹配.md)
12. [类型参数](notes/Scala类型参数.md)
13. [隐式转换和隐式参数](notes/Scala隐式转换和隐式参数.md)

## 十三、公共内容

1. [大数据应用常用打包方式](notes/大数据应用常用打包方式.md)



## :bookmark_tabs: 后  记

[资料分享与开发工具推荐](notes/资料分享与工具推荐.md)




	 
	 
	 

  欢迎关注我的博客：https://blog.csdn.net/m0_37809146 
","'azkaban', 'big-data', 'bigdata', 'flume', 'hadoop', 'hbase', 'hdfs', 'hive', 'kafka', 'mapreduce', 'phoenix', 'scala', 'spark', 'sqoop', 'storm', 'yarn', 'zookeeper'",2019-03-10T01:40:01Z,2024-01-05T03:00:32Z,7,6,15431,443,"('heibaiying', 600), ('套陆', 2), ('pengchen211', 1), ('YolandaRay', 1), ('sunrui849', 1), ('weijiew', 1), ('LSloveYJ', 1)",5,5,
vicramon/ember-tutorial,Vic Ramon's Ember Tutorial,"## Vic Ramon's Ember Tutorial

Live at [http://ember.vicramon.com](http://ember.vicramon.com)

## Code

The apps you build in the tutorial are located here:

Javascript: http://github.com/vicramon/ember-crm-js

CoffeeScript: http://github.com/vicramon/ember-crm

## Contributing

Found a mistake? Submit a pull request! All the content is in `/chapters`.
",,2014-03-25T22:23:02Z,2016-03-20T15:28:33Z,12,10,96,7,"('vicramon', 166), ('rwz', 9), ('jonallured', 3), ('mattpolito', 3), ('eddie-ruva', 2), ('padi', 2), ('thewatts', 2), ('ohizkiya', 2), ('Pavel Pravosud and Vic Ramon', 2), ('srt32', 2), ('chrisjeon', 1), ('David Heitzman', 1)",2,1,
jwerle/b64.c,Base64 encode/decode,"b64.c
=====

Base64 encode/decode

## install

```sh
$ clib install jwerle/b64.c
```

## usage

```c
#include 
```

or

```c
#include 
```

## example

```c
#include 
#include 
#include 
#include ""b64.h""

int
main (void) {
  unsigned char *str = ""brian the monkey and bradley the kinkajou are friends"";
  char *enc = b64_encode(str, strlen(str));

  printf(""%s\n"", enc); // YnJpYW4gdGhlIG1vbmtleSBhbmQgYnJhZGxleSB0aGUga2lua2Fqb3UgYXJlIGZyaWVuZHM=

  char *dec = b64_decode(enc, strlen(enc));

  printf(""%s\n"", dec); // brian the monkey and bradley the kinkajou are friends
  free(enc);
  free(dec);
  return 0;
}
```

## api

Base64 index table

```c

static const char b64_table[] = {
  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
  'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
  'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
  'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
  'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
  'w', 'x', 'y', 'z', '0', '1', '2', '3',
  '4', '5', '6', '7', '8', '9', '+', '/'
};
```

Encode `unsigned char *` source with `size_t` size.
Returns a `char *` base64 encoded string

```c
char *
b64_encode (const unsigned char *, size_t);
```

Decode `char *` source with `size_t` size.
Returns a `unsigned char *` base64 decoded string

```c
unsigned char *
b64_decode (const char *, size_t);
```

## license

MIT
",,2014-05-31T00:30:17Z,2024-01-23T11:09:23Z,15,12,267,26,"('jwerle', 14), ('prasad83', 5), ('Stephen Mathieson', 3), ('stephenmathieson', 2), ('yuridiniz', 2), ('d21d3q', 2), ('MajorArkwolf', 1), ('awsarron', 1), ('crclark96', 1), ('CurlyMoo', 1), ('davydog187', 1), ('dvtate', 1), ('raminfp', 1), ('Tyler Marshall', 1), ('yuppox', 1)",9,7,
michaekang/android_s2e,Run android with S2E,"       The project of Android on S2E
---------------------------------------------------
       
About S2E
=====================
S2E is a symbol execution based on full system simulator. Want to know more information about S2E, please visit https://github.com/dslab-epfl/s2e

About Android
==========================
Android is a popular mobile phone OS. Its home page is located at http://www.android.com/

The current status of Android_S2E
===============================
Now One simple native android program can be analysis by android_s2e project. You can see it lively by the following video:
http://youtu.be/3cTaeo8_izs
Or on the Chinese video site:
http://v.youku.com/v_show/id_XNzMxNTE5MzE2.html


How to setup?
=====================
https://github.com/michaekang/android_s2e/wiki/Android-on-S2E

About author.
=====================

The project maintainer is Michael.Kang (ksh@skyeye.org):
http://cn.linkedin.com/in/kangshuo/
",,2014-05-27T02:10:09Z,2014-12-11T03:03:26Z,45,14,32,5,"('digit-android', 563), ('michaekang', 101), ('Vladimir Chtchetkine', 94), ('The Android Open Source Project', 42), ('Xavier Ducrohet', 33), ('Jean-Baptiste Queru', 24), ('The Android Automerger', 22), ('Android (Google) Code Review', 20), ('Ot ten Thije', 19), ('Tim Baverstock', 15), ('rich cannings', 11), ('San Mehat', 9), ('taleks', 6), ('David Turner', 6), ('Jun Nakajima', 6), ('zeldin', 6), ('Raphael', 6), ('vchtchetkine', 6), ('Android Code Review', 5), ('Jack Veenstra', 5), ('Dries Harnie', 4), ('kangshuo', 4), ('alloc', 3), ('Stefan Hilzinger', 3), ('jackpal', 2), ('jham', 2), ('Nick Pelly', 2), ('Tim Wan', 2), ('sole', 1), ('android-build SharedAccount', 1), ('Ying Wang', 1), ('Upstream', 1), ('ralf-at-android', 1), ('Orjan Percy', 1), ('Ola Albertsson', 1), ('Marc Petit-Huguenin', 1), ('molerus', 1), ('kruton', 1), ('JyunjiKondo', 1), ('jnakajim', 1), ('Jaime Lopez', 1), ('Bruce Beare', 1), ('ashishb', 1), ('Android Git Automerger', 1), ('adetaylor', 1)",17,8,
v3ss0n/goto,GOTO using Atom's Symbols,"# goto package

Provides “goto symbol” functionality for the current file or the entire project.

This is a replacement for Atom’s built-in symbols-view package that uses Atom’s own syntax files
to identify symbols rather than ctags.  The ctags project is very useful but it is never going
to keep up with all of the new Atom syntaxes that will be created as Atom grows.

Commands:

* `cmd-r` - Goto File Symbol
* `cmd-shift-r` - Goto Project Symbol
* `cmd-alt-down` - Goto Declaration
* Rebuild Index
* Invalidate Index

## Index

The symbol index is currently maintained in memory.  Goto File Symbol will reindex the current
file if necessary and editing a file will automatically invalidate the symbol cache for it.

Symbols for the entire project are not indexed until the Goto Project Symbol or Goto
Declaration commands are used.

While symbols are automatically kept up to date as buffers are modified, the package  does not
yet watch for external file modifications.  If you change files externally, such as through a
""git pull"" or switching branches, you can use run Invalidate Index to clear the current index
so it will be rebuilt when needed or Rebuild Index to rebuild it immediately.

## Options

### More Ignored Names

A whitespace and/or comma separated list of globs (filenames or wildcards) to ignore, applied
to both files and directories.  This can be useful for speeding up the rebuilding of the index.

Example: `node_modules, *.sql`

### Auto Scroll

By default the Goto File Symbol command will scroll the selected command into view.  Pressing
`Esc` to cancel the command restores the position of the screen.  Uncheck this option to
disable the scrolling.

Note that the Goto Project Symbol does not scroll the editor since it displays choices from
multiple files.
",,2014-03-30T16:18:47Z,2017-01-19T04:44:46Z,7,6,46,2,"('acusti', 33), ('mkleehammer', 18), ('dansisan', 3), ('mshenfield', 3), ('v3ss0n', 3), ('axeolotl', 1), ('RomFouq', 1)",2,1,
dewski/kss-rails,A rails engine for @kneath's KSS documentation,"KSS Rails
=========

KSS Rails provides a Rails 3 engine for you to mount onto your existing Rails 3 application that will automatically parse your stylesheets that live within `app/assets/stylesheets` and give you a styleguide visible at whichever URL you choose.

Install the gem:

```
gem install kss-rails
```

Add it to the development group within the `Gemfile` and re-bundle:

```ruby
group :development do
  gem 'kss-rails'
end
```

Run the install generator which will copy over some initial templates for you to base your styleguide definitions off of. There may be some extra changes to the layouts that you need to do, but that is dependent on how crazy your application is.

```
rails generate kss:install
```

The install generator will have already appended the route for KSS Rails for you at the '/kss' URL, but if you'd like to change that you can within your routes file.

```ruby
Example::Application.routes.draw do
  root :to => 'home#index'

  mount Kss::Engine => '/kss' if Rails.env.development?
end
```

That's it, restart your app and visit `http://yoururl/kss` (or whichever URL you choose).

Please visit the [KSS repo](https://github.com/kneath/kss) for further documentation and helpful tips.

## Customizing

Out of the box KSS Rails has built in templates, stylesheets and javascripts that you can use without any customization just fine.

But if you're looking to add more layout styles or updating the templates, you can create your own copy within your application at any of the paths within the [app folder](https://github.com/dewski/kss-rails/tree/master/app).

## Credits

All credit goes to Kyle Neath for creating the KSS gem and hopefully this will allow people to create styleguides for every site they work on with little to no additional effort.

## Note on Patches/Pull Requests

- Fork the project.
- Make your feature addition or bug fix.
- Commit, do not mess with Rakefile, version, or history. (if you want to have your own version, that is fine but bump version in a commit by itself in another branch so I can ignore when I pull)
- Send me a pull request. Bonus points for topic branches.

## Copyright
Copyright © 2011 Garrett Bjerkhoel. See [MIT-LICENSE](http://github.com/dewski/kss-rails/blob/master/MIT-LICENSE) for details.",,2011-12-07T18:18:08Z,2013-10-14T19:19:49Z,10,6,151,5,"('dewski', 17), ('Garrett Bjerkhoel', 8), ('jankeesvw', 4), ('dewski', 4), ('alanhogan', 3), ('Alex Kwiatkowski', 1), ('Garrett Bjerkhoel', 1), ('robincurry', 1), ('ToQoz', 1), ('bcaccinolo', 1)",5,3,
mohitsoni/marathon-client,Java API client for Mesosphere's Marathon.,"# marathon-client [![Build Status](https://travis-ci.org/mohitsoni/marathon-client.png)](https://travis-ci.org/mohitsoni/marathon-client)

This project is a Java library for communicating with Marathon API. At this point this library supports version v2 of Marathon API, please refer [docs](https://mesosphere.github.io/marathon/docs/rest-api.html) for more details.

## Using marathon-client in your maven project

Add marathon-client as a dependency:

```

  com.github.mohitsoni
  marathon-client
  0.4.2

```

Please look at [releases](https://github.com/mohitsoni/marathon-client/releases) page for more versions.

## Usage

### Initialization

The following piece of code initializes the client. ```MarathonClient.getInstance()``` method expects the endpoint for marathon:

```
String endpoint = """";
Marathon marathon = MarathonClient.getInstance(endpoint);
```

### Getting all applications

The following will return all the applications that have been created:

```
GetAppsResponse appsResponse = marathon.getApps();
```

### Create a new application

The following example demonstrates how a new application can be created:
```
App app = new App();
app.setId(""echohisleepbye-app"");
app.setCmd(""echo hi; sleep 10; echo bye;"");
app.setCpus(1.0);
app.setMem(16.0);
app.setInstances(1);
marathon.createApp(app);
```

### Get details about an existing application

The following example, demostrates how to get details about an already created application:

```
GetAppResponse appGet = marathon.getApp(""echohisleepbye-app"");
```

### Delete an application

The following example demostrate, how one can delete an existing application:
```
marathon.deleteApp(""echohisleepbye-app"");
```

## Building

This project is built using [Apache Maven](http://maven.apache.org/).

Run the following command from the root of repository, to build the client JAR:

```
$ mvn clean install
```

## Bugs

Bugs can be reported using Github issues.
",,2014-02-18T22:02:51Z,2017-05-02T15:37:30Z,8,6,50,10,"('mohitsoni', 39), ('kohsuke', 3), ('milenkovicm', 3), ('mohitsoni-ebay', 2), ('Daya Sharma', 1), ('3750', 1), ('sunchanlee', 1), ('Vitek Tajzich', 1)",4,2,
mkobos/lbfgsb_wrapper,Java wrapper for the Fortran L-BFGS-B algorithm,"# Java wrapper for the Fortran L-BFGS-B algorithm

by Mateusz Kobos [![Build Status](https://travis-ci.org/mkobos/lbfgsb_wrapper.png?branch=master)](https://travis-ci.org/mkobos/lbfgsb_wrapper)

## Introduction

L-BFGS-B is a limited-memory quasi-Newton optimization algorithm for solving large nonlinear optimization problems with simple bounds on the variables [Zhu97]. It employs function's value and gradient information to search for the local optimum. It uses (as the name suggests) the BGFS (Broyden-Goldfarb-Fletcher-Shanno) algorithm to approximate the Hessian. The size of the memory available to store the approximation of the Hessian is limited and is a parameter of the algorithm. Each of the `x_i` variables of the optimized function can be bounded i.e. we can define such numbers `l_i` and `u_i` that `l_i <= x_i <= u_i`.

The original implementation of the algorithm is written in the Fortran language and is available on the authors' [original distribution website][]. This is a Java wrapper library for the Fortran code. The wrapper library uses JNI with SWIG to create the proxy code. A by-product of the Java wrapper is a quite low-level C wrapper for the Fortran code. In short, the structure of the wrapping layers looks as follows: `Fortran -> C -> JNI by SWIG -> Java`.

[original distribution website]: http://www.ece.northwestern.edu/~nocedal/lbfgsb.html

## Download

The source code of the current version of the library can be downloaded from [https://github.com/mkobos/lbfgsb_wrapper](https://github.com/mkobos/lbfgsb_wrapper ""GitHub project page"") or retrieved straight from the Git repository with `git clone git@github.com:mkobos/lbfgsb_wrapper.git`.

## Reliability

- I compared the behavior of the original Fortran algorithm and Java wrapper using a couple of popular minimization problems. Apparently, sometimes there are some minor differences in the results (starting for example from 5th significant digit). I suspect that the reason of such discrepancies is a different machine precision that is automatically set by the Fortran program when the code is called natively from Fortran and when it's called by Java wrapper. E.g. on my computer, the machine precision set by the program when called natively from Fortran is `1.084E-19`, but when called by Java wrapper: `2.220E-16`.
- The code was tested on some benchmark minimization problems (see JUnit tests in the source package). Test functions for unbounded optimization (along with starting points and expected optimal points) were taken from [More81]. The bounds and expected function values for bounded optimization problem were taken from [Neumaier08]. It seems that program is able to find appropriate minima for all of the tested functions except of the Powell Badly Scaled Function. My guess is that it might be related to an insufficient machine precision when called from Java wrapper as the function is very flat near the minimum (cf. [Kuntsevich08]).

## License and conditions of use

- The wrapper program is available under simplified BSD license (see file `license.txt` in the distribution package for the text of the license).
- The wrapper uses the original Fortran implementation which is included in the distribution packages. This Fortran code can be used in accordance with conditions available on the authors' [original distribution website][].

## Requirements

- The library was developed with Linux operating system in mind (the code was tested on Ubuntu 16.04 system and on some older versions of Ubuntu) but it can also be made to work on MacOS and Windows (see the section ""Building from source files"" for details).
- gcc and gfortran compilers (Ubuntu packages: `build-essential` and `gfortran`)
- SWIG program/library (Ubuntu package: `swig`)
- Java JDK 8 (but the code should work with slightly older versions of JDK as well) with environmental variable `JAVA_HOME` properly set
- Apache Ant

## Example usage

In the following code (see `SampleRun.java` file in the source package), we want to minimize simple quadratic function `(x+4)^2`. Only the lower bound is set and it is set to `x=10`. The start point is `x=40`.

	package lbfgsb;

	import java.util.ArrayList;

	public class SampleRun {
		public static void main(String[] args){
			try {
				QuadraticFun fun = new QuadraticFun();
				Minimizer alg = new Minimizer();
				ArrayList bounds = new ArrayList();
				bounds.add(new Bound(new Double(10), null));
				alg.setBounds(bounds);
				Result result = alg.run(fun, new double[]{40});
				System.out.println(""The final result: ""+result);
			} catch (LBFGSBException e) {
				e.printStackTrace();
			}
		}
	}

	class QuadraticFun implements DifferentiableFunction{
		public FunctionValues getValues(double[] point){
			double p = point[0];
			System.out.println(""Calculating function for x=""+p);
			return new FunctionValues(Math.pow(p+4, 2), 
					new double[]{2*(p+4)});
		}
	}

After executing the code, we obtain the following output:

	Calculating function for x=40.0
	Calculating function for x=39.0
	Calculating function for x=35.0
	Calculating function for x=10.0
	The final result: point=[10.0], functionValue=196.0, gradient=[28.0], 
		iterationsInfo=(iterations=2, functionEvaluations=4, stopType=OTHER_STOP_CONDITIONS, 
			stateDescription=CONVERGENCE: NORM OF PROJECTED GRADIENT <= PGTOL)

## The most important source files

* `bin` - directory with scripts that show how to run the library
* `changes.mkd` for list of changes in subsequent releases
* `license.txt` for the text of the BSD license for this library

## Building from source files

General commands:

* `ant` - create the library and javadocs
* `ant test` - run tests using some popular minimization problems

Warning: the `JAVA_HOME` environment variable has to be properly set since it is used while compiling the `liblbfgsb_wrapper.so` library.

### Linux

On Linux, it should work out of the box if the required tools are present (see the ""Requirements"" section).

### MacOSX

On MacOSX, these are the additional steps you may need to execute before building the project with `ant` succeeds:

* Install `gfortran` from [http://hpc.sourceforge.net](http://hpc.sourceforge.net) or [http://sourceforge.net/projects/hpc/files/hpc/g95/gfortran-mlion.tar.gz](http://sourceforge.net/projects/hpc/files/hpc/g95/gfortran-mlion.tar.gz)
* `sudo port install swig`
* `sudo port install swig-java`
* If building the project with ant fails with a message ""jni.h can't be found"", execute the following steps:
	* make sure that `JAVA_HOME` is set properly, i.e. that `JAVA_HOME=/Library/Java/Home`,
	* execute: `ln -s /System/Library/Frameworks/JavaVM.framework/Headers /Library/Java/Home/include` (this is because `jni.h` lives in `/System/Library/Frameworks/JavaVM.framework/Headers`). 
* Build the project with ant and rename `.so` file to `.dylib`:  `mv liblbfgsb_wrapper.so liblbfgsb_wrapper.dylib`

### Windows

If you want **build the sources on Linux so the resulting binaries work on Windows** (tested on Ubuntu 16.04 and Windows 10), this is what you need to do (for a case of a 64-bit Ubuntu system and a 64-bit Windows system):

- Install package `gfortran-mingw-w64` (some other required packages should be automatically pulled as dependencies).
- Download Windows JNI headers (because these are usually not packaged) to the root directory of the project:

        if [ ! -d jni_include ] ; then
          mkdir -p jni_include/win32 || exit 1
          cd jni_include/win32
          wget http://hg.openjdk.java.net/jdk6/jdk6/jdk/raw-file/ac1d168048bd/src/windows/javavm/export/jni_md.h || exit 1
          wget http://hg.openjdk.java.net/jdk6/jdk6/jdk/raw-file/ac1d168048bd/src/windows/javavm/export/jawt_md.h || exit 1
          cd ../..
        fi

- Set an environment variable to be used later: `JNI_ARCH_DIR=$(pwd)/jni_include/win32`
- Compile the library using cross-compilers (these are given as `CC` and `FC` parameters): `ant -Diswindows=1 -DCC=x86_64-w64-mingw32-gcc -DFC=x86_64-w64-mingw32-gfortran -DJNI_ARCH_DIR=""$JNI_ARCH_DIR"" -DLIB_DEPENDENCIES=""-Wl,-Bstatic -lgfortran -lquadmath -lpthread -static-libgcc""`
    - Note that this command compiles a number of libraries statically using the `-Wl,-Bstatic` switch. This is done so you don't have to put Windows versions of these libraries (as `*.dll` files) in `PATH` environmental variable under Windows for the library to work.
    - If you want easily distributable binaries, you can avoid linking statically `libquadmath` using the following trick: `-DLIB_DEPENDENCIES=""-Wl,--defsym,${UNDERSCORE}quadmath_snprintf=${UNDERSCORE}abort -Wl,-Bstatic -lgfortran -lpthread -static-libgcc""` where `UNDERSCORE=` (i.e. empty) on x86_64, `UNDERSCORE=_` on i*86, which means you don't have to ship the whole LGPLed `libquadmath` sources with your binaries (and actually, also the source code of everything else that you statically linked, including `libgfortran`, to allow for relinking with a modified `libquadmath`) just for a single function that is never even actually called (`libgfortran` and `libgcc` are under the GPL with GCC runtime exception, and `winpthread` under a BSD license, which means you are not obligated to ship any sources for those libraries with statically-linked binaries.).

If you want to **build the tests on Linux and then run them on Windows** you need to:

1. On Linux: compile the tests for Windows: `ant -Diswindows=1 -DCC=x86_64-w64-mingw32-gcc -DFC=x86_64-w64-mingw32-gfortran -DJNI_ARCH_DIR=""$JNI_ARCH_DIR"" -DLIB_DEPENDENCIES=""-Wl,-Bstatic -lgfortran -lquadmath -lpthread -static-libgcc"" test-compile`
2. On Windows: run compiled tests from the root directory of the project: `bin/windows_test_without_compiling.bat dist/lbfgsb_wrapper-1.1.3-SNAPSHOT.jar` (you need to change the name of the JAR file appropriately)


## References

- [More81] Jorge J. Moré, Burton S. Garbow, Kenneth E. Hillstrom, ""Testing Unconstrained Optimization Software"", ACM Transactions on Mathematical Software, 1981
- [Neumaier08] Arnold Neumaier, [Minimum Function Values for the Moré et al. Test Set](http://www.mat.univie.ac.at/~neum/glopt/bounds.html) access time: 2008-12-23
- [Kuntsevich08] Alexei Kuntsevich, Franz Kappel, [Moré set of test functions](http://www.kfunigraz.ac.at/imawww/kuntsevich/solvopt/results/moreset.html), access time: 2008-12-23
- [Zhu97] C. Zhu, R. H. Byrd and J. Nocedal. L-BFGS-B: Algorithm 778: L-BFGS-B, FORTRAN routines for large scale bound constrained optimization (1997), ACM Transactions on Mathematical Software, Vol 23, Num. 4, pp. 550 - 560
",,2011-10-12T14:51:16Z,2016-12-23T23:23:40Z,5,4,32,2,"('mkobos', 20), ('kkofler', 2), ('Jeremy Davis', 1), ('cerquide', 1), ('mallman', 1)",3,2,
jerrod/ey-cloud-recipes,A starter repo for custom chef recipes on EY's cloud platform,"ey-cloud-recipes
===============
This is a repository of some basic recipes for EY-Cloud using chef to deploy, setup, and configure common tools for Rails applications.


Installation
============

Follow these steps to use custom deployment recipes with your applications.

* Download your ey-cloud.yml file from your EY Cloud [Extras](http://cloud.engineyard.com/extras) page and put it in your HOME directory ~/.ey-cloud.yml
* Install the required gems:
  sudo gem install rest-client aws-s3
  sudo gem install ey-flex --source http://gems.engineyard.com # make sure you are using the lastest version
* Add any custom recipes or tweeks to the base recipes of your own and commit them to HEAD.
* Upload them with: ey-recipes --upload ENV # where ENV is the name of your environment in Engine Yard Cloud. This may be different than your Rails environment name.
* Once you have completed these steps, each deployment will run the latest version of your recipes after the default Engine Yard recipes have run. When you update your recipes, just re-run the ey-recipes --upload ENV task.



[eysolo]: http://www.engineyard.com/solo
[cloud]: https://cloud.engineyard.com/extras
",,2010-06-27T02:38:30Z,2017-09-26T20:16:50Z,19,9,5,1,"('Ezra Zygmuntowicz', 29), ('wyhaines', 20), ('Scott M. Likens', 18), ('demonbane', 17), ('Johnathon Hornbeck', 15), ('Christopher Stolt', 5), ('stolt45', 5), ('atmos', 5), ('Christopher Stolt', 4), ('watsonian', 3), ('Ben Burkert & Wesley Beary', 1), ('durran', 1), ('mage2k', 1), ('r38y', 1), ('Scott M. Likens', 1), ('Tyler Bird', 1), ('7hunderbird', 1), ('ultraninja', 1), ('grant', 1)",9,5,
begeekmyfriend/bplustree,A minimal but extreme fast B+ tree indexing structure demo for billions of key-value storage,"# B+Tree
A minimal B+Tree implementation for millions (even billions) of key-value storage based on Posix.

## Branch
[in-memory](https://github.com/begeekmyfriend/bplustree/tree/in-memory) for learning and debugging.

## Demo
```shell
./demo_build.sh
```

## Code Coverage Test

**Note:** You need to `rm /tmp/coverage.index*` for this testing every time because the configuration (i.e block size and order etc.) in those index files is immutable!

```shell
./coverage_build.sh
```
","'algorithm', 'bplustree', 'btree', 'c', 'data-structure', 'storage', 'tree', 'tree-structure'",2014-09-26T09:58:35Z,2023-01-04T10:45:30Z,4,2,1848,78,"('begeekmyfriend', 123), ('rocklee104', 4), ('leo', 2), ('miller', 2)",0,0,
ckadner/systemml,IBM's SystemML Machine Learning ,"# SystemML

SystemML is a flexible, scalable machine learning (ML) language written in Java.
SystemML's distinguishing characteristics are: (1) algorithm customizability,
(2) multiple execution modes, including Standalone, Hadoop Batch, and Spark Batch,
and (3) automatic optimization.

The latest documentation can be found at the 
[SystemML Documentation](http://sparktc.github.io/systemml/) web site.


### Algorithm Customizability

ML algorithms in SystemML are specified in a high-level, declarative machine learning (DML) language.
Algorithms can be expressed in either an R-like syntax or a Python-like syntax. DML includes
linear algebra primitives, statistical functions, and additional constructs.

This high-level language significantly increases the productivity of
data scientists as it provides (1) full flexibility in expressing custom
analytics and (2) data independence from the underlying input formats and
physical data representations.


### Multiple Execution Modes

SystemML computations can be executed in a variety of different modes. To begin with, SystemML
can be operated in Standalone mode on a single machine, allowing data scientists to develop
algorithms locally without need of a distributed cluster. Algorithms can be distributed across Hadoop or Spark.
This flexibility allows the utilization of an organization's existing resources and expertise. In addition, SystemML
can be operated via Java, Scala, and Python. SystemML also features an embedded API for scoring models.


### Automatic Optimization

Algorithms specified in DML are dynamically compiled and optimized based on data and cluster characteristics
using rule-based and cost-based optimization techniques. The optimizer automatically generates hybrid runtime
execution plans ranging from in-memory single-node execution to distributed computations on Spark or Hadoop.
This ensures both efficiency and scalability. Automatic optimization reduces or eliminates the need to hand-tune
distributed runtime execution plans and system configurations.


* * *

## Building SystemML

SystemML is built using [Apache Maven](http://maven.apache.org/).
SystemML will build on Windows, Linux, or MacOS and requires Maven 3 and Java 7 (or higher).
To build SystemML, run:

    mvn clean package


* * *

## Testing SystemML

SystemML features a comprehensive set of integration tests. To perform these tests, run:

    cd system-ml
    mvn verify 

Note: these tests require [R](https://www.r-project.org/) to be installed and available as part of the PATH variable on the machine on which you are running these tests. 

If required, please install the following packages in R:

    install.packages(c(""batch"", ""bitops"", ""boot"", ""caTools"", ""data.table"", ""doMC"", ""doSNOW"", ""ggplot2"", ""glmnet"", ""lda"", ""Matrix"", ""matrixStats"", ""moments"", ""plotrix"", ""psych"", ""reshape"", ""topicmodels"", ""wordcloud""), dependencies=TRUE) 


* * *

## Running SystemML in Standalone Mode

SystemML can run in distributed mode as well as in local standalone mode. We'll operate in standalone mode in this guide. 
After you built SystemML from source (```mvn clean package```) the standalone mode can be executed either on Mac/Unix using the ```./bin/systemml``` script or on Windows using the ```.\bin\systemml.bat``` batch file. 

If you run from the script from the project root folder ```./``` or from the ```./bin``` folder, then the output files from running SystemML will be created inside the ```./temp``` folder to keep them separate from the SystemML source files managed by Git. The output files for all of the examples in this guide will be created under the ```./temp``` folder.

The runtime behavior and logging behavior of SystemML can be customized by editing the files ```./conf/SystemML-config.xml``` and ```./conf/log4j.properties```. Both files will be created from their corresponding ```*.template``` files during the first execution of the SystemML executable script.

When invoking the ```./bin/systemml``` or ```.\bin\systemml.bat``` with any of the prepackaged DML scripts you can omit the relative path to the DML script file. The following two commands are equivalent:

    ./bin/systemml ./system-ml/scripts/datagen/genLinearRegressionData.dml -nvargs numSamples=1000 numFeatures=50 maxFeatureValue=5 maxWeight=5 addNoise=FALSE b=0 sparsity=0.7 output=linRegData.csv format=csv perc=0.5

    ./bin/systemml genLinearRegressionData.dml -nvargs numSamples=1000 numFeatures=50 maxFeatureValue=5 maxWeight=5 addNoise=FALSE b=0 sparsity=0.7 output=linRegData.csv format=csv perc=0.5

In this guide we invoke the command with the relative folder to make it easier to look up the source of the DML scripts.


* * *

## Algorithms

SystemML features a suite of algorithms that can be grouped into five broad categories:
Descriptive Statistics, Classification, Clustering, Regression, and Matrix Factorization. Detailed descriptions of
these algorithms can be found in the Algorithm Reference packaged with SystemML.


* * *

## Linear Regression Example

As an example of the capabilities and power of SystemML and DML, let's consider the Linear Regression algorithm.
We require sets of data to train and test our model. To obtain this data, we can either use real data or
generate data for our algorithm. The [UCI Machine Learning Repository Datasets](https://archive.ics.uci.edu/ml/datasets.html)
is one location for real data. Use of real data typically involves some degree of data wrangling. In the following
example, we will use SystemML to generate random data to train and test our model.

This example consists of the following parts:

  * [Run DML Script to Generate Random Data](#run-dml-script-to-generate-random-data)
  * [Divide Generated Data into Two Sample Groups](#divide-generated-data-into-two-sample-groups)
  * [Split Label Column from First Sample](#split-label-column-from-first-sample)
  * [Split Label Column from Second Sample](#split-label-column-from-second-sample)
  * [Train Model on First Sample](#train-model-on-first-sample)
  * [Test Model on Second Sample](#test-model-on-second-sample)

SystemML is distributed in several packages, including a standalone package. We'll operate in Standalone mode in this example.



### Run DML Script to Generate Random Data

We can execute the `genLinearRegressionData.dml` script in Standalone mode using either the `systemml` or `systemml.bat` file.
In this example, we'll generate a matrix of 1000 rows of 50 columns of test data, with sparsity 0.7. In addition to this, a 51st column consisting of labels will
be appended to the matrix.

    ./bin/systemml ./system-ml/scripts/datagen/genLinearRegressionData.dml -nvargs numSamples=1000 numFeatures=50 maxFeatureValue=5 maxWeight=5 addNoise=FALSE b=0 sparsity=0.7 output=linRegData.csv format=csv perc=0.5

This generates the following files inside the ```./temp``` folder:

    linRegData.csv      # 1000 rows of 51 columns of doubles (50 data columns and 1 label column), csv format
    linRegData.csv.mtd  # metadata file




### Divide Generated Data into Two Sample Groups

Next, we'll create two subsets of the generated data, each of size ~50%. We can accomplish this using the `sample.dml` script.
This script will randomly sample rows from the `linRegData.csv` file and place them into 2 files.

To do this, we need to create a csv file for the `sv` named argument (see `sample.dml` for more details),
which I called `perc.csv`. This file was generated in previous step and looks like:

    0.5
    0.5


This will create two sample groups of roughly 50 percent each. 

Now, the `sample.dml` script can be run.

    ./bin/systemml ./system-ml/scripts/utils/sample.dml -nvargs X=linRegData.csv sv=perc.csv O=linRegDataParts ofmt=csv


This script creates two partitions of the original data and places them in a `linRegDataParts` folder. The files created are
as follows:

    linRegDataParts/1       # first partition of data, ~50% of rows of linRegData.csv, csv format
    linRegDataParts/1.mtd   # metadata
    linRegDataParts/2       # second partition of data, ~50% of rows of linRegData.csv, csv format
    linRegDataParts/2.mtd   # metadata


The `1` file contains the first partition of data, and the `2` file contains the second partition of data.
An associated metadata file describes
the nature of each partition of data. If we open `1` and `2` and look at the number of rows, we can see that typically
the partitions are not exactly 50% but instead are close to 50%. However, we find that the total number of rows in the
original data file equals the sum of the number of rows in `1` and `2`.




### Split Label Column from First Sample

The next task is to split the label column from the first sample. We can do this using the `splitXY.dml` script.

    ./bin/systemml ./system-ml/scripts/utils/splitXY.dml -nvargs X=linRegDataParts/1 y=51 OX=linRegData.train.data.csv OY=linRegData.train.labels.csv ofmt=csv

This splits column 51, the label column, off from the data. When done, the following files have been created.

    linRegData.train.data.csv        # training data of 50 columns, csv format
    linRegData.train.data.csv.mtd    # metadata
    linRegData.train.labels.csv      # training labels of 1 column, csv format
    linRegData.train.labels.csv.mtd  # metadata




### Split Label Column from Second Sample

We also need to split the label column from the second sample.

    ./bin/systemml ./system-ml/scripts/utils/splitXY.dml -nvargs X=linRegDataParts/2 y=51 OX=linRegData.test.data.csv OY=linRegData.test.labels.csv ofmt=csv

This splits column 51 off the data, resulting in the following files:

    linRegData.test.data.csv        # test data of 50 columns, csv format
    linRegData.test.data.csv.mtd    # metadata
    linRegData.test.labels.csv      # test labels of 1 column, csv format
    linRegData.test.labels.csv.mtd  # metadata




### Train Model on First Sample

Now, we can train our model based on the first sample. To do this, we utilize the `LinearRegDS.dml` (Linear Regression
Direct Solve) script. Note that SystemML also includes a `LinearRegCG.dml` (Linear Regression Conjugate Gradient) algorithm 
for situations where the number of features is large.

    ./bin/systemml ./system-ml/scripts/algorithms/LinearRegDS.dml -nvargs X=linRegData.train.data.csv Y=linRegData.train.labels.csv B=betas.csv fmt=csv

This will generate the following files:

    betas.csv      # betas, 50 rows of 1 column, csv format
    betas.csv.mtd  # metadata

The LinearRegDS.dml script generates statistics to standard output similar to the following.

	BEGIN LINEAR REGRESSION SCRIPT
	Reading X and Y...
	Calling the Direct Solver...
	Computing the statistics...
	AVG_TOT_Y,-2.160284487670675
	STDEV_TOT_Y,66.86434576808432
	AVG_RES_Y,-3.3127468704080085E-10
	STDEV_RES_Y,1.7231785003947183E-8
	DISPERSION,2.963950542926297E-16
	PLAIN_R2,1.0
	ADJUSTED_R2,1.0
	PLAIN_R2_NOBIAS,1.0
	ADJUSTED_R2_NOBIAS,1.0
	PLAIN_R2_VS_0,1.0
	ADJUSTED_R2_VS_0,1.0
	Writing the output matrix...
	END LINEAR REGRESSION SCRIPT

Now that we have our `betas.csv`, we can test our model with our second set of data.




### Test Model on Second Sample

To test our model on the second sample, we can use the `GLM-predict.dml` script. This script can be used for both
prediction and scoring. Here, we're using it for scoring since we include the `Y` named argument. Our `betas.csv`
file is specified as the `B` named argument.  

    ./bin/systemml ./system-ml/scripts/algorithms/GLM-predict.dml -nvargs X=linRegData.test.data.csv Y=linRegData.test.labels.csv B=betas.csv fmt=csv

This generates the following statistics to standard output.

	LOGLHOOD_Z,,FALSE,NaN
	LOGLHOOD_Z_PVAL,,FALSE,NaN
	PEARSON_X2,,FALSE,1.895530994504798E-13
	PEARSON_X2_BY_DF,,FALSE,4.202951207327712E-16
	PEARSON_X2_PVAL,,FALSE,1.0
	DEVIANCE_G2,,FALSE,0.0
	DEVIANCE_G2_BY_DF,,FALSE,0.0
	DEVIANCE_G2_PVAL,,FALSE,1.0
	LOGLHOOD_Z,,TRUE,NaN
	LOGLHOOD_Z_PVAL,,TRUE,NaN
	PEARSON_X2,,TRUE,1.895530994504798E-13
	PEARSON_X2_BY_DF,,TRUE,4.202951207327712E-16
	PEARSON_X2_PVAL,,TRUE,1.0
	DEVIANCE_G2,,TRUE,0.0
	DEVIANCE_G2_BY_DF,,TRUE,0.0
	DEVIANCE_G2_PVAL,,TRUE,1.0
	AVG_TOT_Y,1,,1.0069397725436522
	STDEV_TOT_Y,1,,68.29092137526905
	AVG_RES_Y,1,,-4.1450397073455047E-10
	STDEV_RES_Y,1,,2.0519206226041048E-8
	PRED_STDEV_RES,1,TRUE,1.0
	PLAIN_R2,1,,1.0
	ADJUSTED_R2,1,,1.0
	PLAIN_R2_NOBIAS,1,,1.0
	ADJUSTED_R2_NOBIAS,1,,1.0


We see that the STDEV_RES_Y value of the testing phase is of similar magnitude
to the value obtained from the model training phase.

For convenience, we can encapsulate our DML invocations in a single script:

	#!/bin/bash
	
	./bin/systemml ./system-ml/scripts/datagen/genLinearRegressionData.dml -nvargs numSamples=1000 numFeatures=50 maxFeatureValue=5 maxWeight=5 addNoise=FALSE b=0 sparsity=0.7 output=linRegData.csv format=csv perc=0.5
	
	./bin/systemml ./system-ml/scripts/utils/sample.dml -nvargs X=linRegData.csv sv=perc.csv O=linRegDataParts ofmt=csv
	
	./bin/systemml ./system-ml/scripts/utils/splitXY.dml -nvargs X=linRegDataParts/1 y=51 OX=linRegData.train.data.csv OY=linRegData.train.labels.csv ofmt=csv
	
	./bin/systemml ./system-ml/scripts/utils/splitXY.dml -nvargs X=linRegDataParts/2 y=51 OX=linRegData.test.data.csv OY=linRegData.test.labels.csv ofmt=csv
	
	./bin/systemml ./system-ml/scripts/algorithms/LinearRegDS.dml -nvargs X=linRegData.train.data.csv Y=linRegData.train.labels.csv B=betas.csv fmt=csv
	
	./bin/systemml ./system-ml/scripts/algorithms/GLM-predict.dml -nvargs X=linRegData.test.data.csv Y=linRegData.test.labels.csv B=betas.csv fmt=csv


In this example, we've seen a small part of the capabilities of SystemML. For more detailed information,
please consult the SystemML Algorithm Reference and SystemML Language Reference.

",,2015-08-29T01:56:56Z,2022-11-04T00:29:17Z,46,23,6,3,"('mboehm7', 1620), ('shirisht', 265), ('Tian Zhang', 168), ('prithvirajsen', 162), ('DOUGLAS R. BURDICK', 144), ('JIHONG MA', 123), ('NIKETAN PANSARE', 117), ('HAOJUN WANG', 102), ('YUANYUAN TIAN', 77), ('fmakari', 77), ('frreiss', 74), ('bertholdreinwald', 54), ('ae2015', 42), ('imcbbld', 38), ('deroneriksson', 32), ('lresende', 27), ('Niketan Pansare', 27), ('Mario E. Inchiosa', 26), ('asurve', 18), ('deekumar2001', 18), ('NarineK', 17), ('AMOL N. GHOTING', 14), ('aloknsingh', 12), ('gweidner', 12), ('OSCAR D. LARA YEJAS', 11), ('HERMAN SAHOTA', 9), ('Pei-Yu Wang', 9), ('ckadner', 6), ('adrian555', 6), ('Berthold Reinwald', 5), ('rvelega', 5), ('SACHETH HEGDE', 3), ('dusenberrymw', 3), ('jammurp', 3), ('niketanpansare', 2), ('akchinSTC', 2), ('ALAN K. CHIN', 1), ('caritaou', 1), ('DUSTIN M. COTE', 1), ('jlthai', 1), ('Paoling Shen', 1), ('RAMIYA VENKATACHALAM', 1), ('SARATH KUMAR SUBRAMANIAN', 1), ('SEBASTIAN SCHELTER', 1), ('fmakari', 1), ('niketanpansare', 1)",10,2,
codeschool/BlastingOffWithBootstrapDemo,Example content associated with Code Schools Blasting Off With Bootstrap course.,,,2015-01-07T15:44:06Z,2015-02-02T14:23:14Z,1,1,59,22,"('adamfortuna', 2)",0,0,
bistromath/gr-air-modes,Gnuradio Mode-S/ADS-B radio,"========================================================================
Copyright 2010, 2011, 2012 Nick Foster

Quaternion.py copyright 2009 Smithsonian Astrophysical Observatory
   Released under New BSD / 3-Clause BSD License
   All rights reserved

This file is part of gr-air-modes
 
gr-air-modes is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.
 
gr-air-modes is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
 
You should have received a copy of the GNU General Public License
along with gr-air-modes; see the file COPYING.  If not, write to
the Free Software Foundation, Inc., 51 Franklin Street,
Boston, MA 02110-1301, USA.

========================================================================
AUTHOR

Nick Foster 

========================================================================
OVERVIEW

gr-air-modes implements a software-defined radio receiver for Mode S
transponder signals, including ADS-B reports from equipped aircraft.

Mode S is the transponder protocol used in modern commercial aircraft.
A Mode S-equipped aircraft replies to radar interrogation by either
ground radar (secondary surveillance) or other aircraft (""Traffic
Collision Avoidance System"", or TCAS). The protocol is an extended
version of the Mode A/C protocol used in transponders since the 1940s.
Mode S reports include a unique airframe identifier (referred to
as the ""ICAO number"") and altitude (to facilitate separation control).
This receiver listens to the 1090MHz downlink channel; interrogation
requests at 1030MHz are not received or decoded by this program.

Automatic Dependent Surveillance-Broadcast (ADS-B) is a communication
protocol using the Extended Squitter capability of the Mode S transport
layer. There are other implementations (VDL Mode 2 and UAT, for
instance) but Mode S remains the primary ADS-B transport for commercial
use. The protocol is:

* Automatic: it requires no pilot input
* Dependent: it is dependent on altimeter, GPS, and other aircraft
  instrumentation for information
* Surveillance: it provides current information about the transmitting
  aircraft
* Broadcast: it is one-way, broadcast to all receivers within range.

ADS-B-equipped aircraft broadcast (""squitter"") their position, velocity,
flight number, and other interesting information to any receiver within
range of the aircraft. Position reports are typically generated once per
second and flight indentification every five seconds.

Implementation of ADS-B is mandatory in European airspace as well as
in Australia. North American implementation is still voluntary, with
a mandate arriving in 2020 via the FAA's ""NextGen"" program.

The receiver modes_rx is written for use with Ettus Research USRP
devices, although the ""RTLSDR"" receivers are also supported via the
Osmocom driver. In theory, any receiver which outputs complex samples at
at least 2Msps should work via the file input or UDP input options, or
by means of a Gnuradio interface. Multiple output formats are supported:

* Raw (or minimally processed) output of packet data
* Parsed text
* SQLite database
* KML for use with Google Earth
* SBS-1-compatible output for use with e.g. PlanePlotter or Virtual
  Radar Server
* FlightGear multiplayer interface for real-time display of traffic
  within the simulator

Most of the common ADS-B reports are fully decoded per specification.
Those that are not are generally ones which are not commonly used.

Should you receive a large number of reports which result in
""not implemented"" or ""No handler"" messages, please use the -w option to
save raw data and forward it to the author. To save time, note that
receiving a small number of spurious reports is expected; false reports
can be excluded by looking for multiple reports from the same aircraft
(i.e., the same ICAO 6-digit hexadecimal number).

========================================================================
REQUIREMENTS

gr-air-modes requires:

* Python >= 2.5 (written for Python 2.7, Python 3.0 might work)
** NumPy and SciPy are required for the FlightGear output plugin.
* PyZMQ
* Gnuradio >= 3.5.0
* Ettus UHD >= 3.4.0 for use with USRPs
* osmosdr (any version) for use with RTLSDR dongles
* SQLite 3.7 or later
* CMake 2.6 or later

========================================================================
BUILDING

gr-air-modes uses CMake as its build system. To build, from the top
level directory, type:

$ mkdir build
$ cd build
$ cmake ../
$ make
$ sudo make install
$ sudo ldconfig

This will build gr-air-modes out of the source tree in build/ and
install it on your system, generally in /usr/local/bin.

========================================================================
USAGE

The main application is modes_rx. For a complete list of options,
run:

$ modes_rx --help

For use with Ettus UHD-compatible devices, the defaults should suffice
to receive reports and print to the screen. Use the -d option to look
for an RTLSDR-type dongle using the osmosdr driver.

In particular, the --location option can be used to set the receiving
location's GPS coordinates. This enables range and bearing calculations
in the printed display as well as range rings in the Google Earth
interface.

========================================================================
FILES

Interesting files and libraries included with the package:

* apps/modes_rx: The main application.
* apps/get_correlated_records.py: Demonstration program for computing
  multilaterated time error for two unsynchronized receiver stations.
* lib/air_modes_int_and_dump.cc: Unused integrate-and-dump filter for
  demodulating Mode S waveforms.
* lib/air_modes_preamble.cc: Mode S preamble detector.
* lib/air_modes_slicer.cc: Bit slicer (1 vs 0) and packet aggregator.
* lib/modes_crc.cc: Computes parity check for Mode S packets.
* python/altitude.py: Mode S altitude encoding/decoding routines
* python/cpr.py: Compact Position Reporting encoder/decoder
* python/modes_flightgear.py: FlightGear (open-source flight simulator)
  plugin which inserts live traffic into the simulator via the
  multiplayer interface.
* python/mlat.py: Multilateration algorithms for determining position of
  non-ADS-B-equipped or non-cooperative aircraft using multiple
  receivers.
* python/modes_kml.py: KML output plugin for Google Earth.
* python/modes_parse.py: Mode S/ADS-B packet parsing routines.
* python/modes_print.py: Human-readable printout plugin
* python/modes_raw_server.py: UDP output plugin for raw data output
* python/modes_sbs1.py: SBS-1-compatible output plugin for use with
  Virtual Radar Server, PlanePlotter, or other compatible programs.
* python/modes_sql.py: SQLite interface for storing reports in a
  database.
* python/Quaternion.py: Quaternion library used to calculate
  orientation of aircraft for FlightGear plugin.
",,2010-09-15T05:12:39Z,2021-02-12T00:22:05Z,23,15,436,78,"('Nick Foster', 290), ('bistromath', 42), ('Nick Foster', 34), ('Zack Moratto', 8), ('jmcorgan', 7), ('devnulling', 4), ('Jared Dulmage', 3), ('gnieboer', 2), ('trondeau', 1), ('steve-m', 1), ('rstephan', 1), ('ncorgan', 1), ('Mattias Schäfer', 1), ('kpreid', 1), ('Kevin Luchsinger', 1), ('yarda', 1), ('KART35', 1), ('Hoernchen', 1), ('coremodule', 1), ('reald', 1), ('Balint Seeber', 1), ('asirinelli', 1), ('Genericdefaultaccount', 1)",15,11,
nst/RuntimeBrowser,"Objective-C Runtime Browser, for Mac OS X and iOS","RuntimeBrowser
==============

This is a class browser for the Objective-C runtime on iOS and OS X. It gives you full access to all classes loaded in the runtime; allows you to dynamically load new modules and their classes; shows every method implemented on each class; and displays information in a header (.h) file format.

We have found this to be a useful development tool. Please note, however, that each user is responsible for their own usage.

The original version was released in April 2002 by [Ezra Epstein](https://github.com/eepstein). The project is maintained by Nicolas Seriot since August, 2008.

### iOS Version

  * browse by class tree, image or indexed list
  * search in classes names
  * headers retrieval through HTTP port 10000
  * instantiates most classes including allocation of non-shared instances
  * allows invocation of methods including inputting of parameters at runtime

You can browse the [iOS headers](https://github.com/nst/iOS-Runtime-Headers) as seen by RuntimeBrowser.

![RuntimeBrowser](art/screenshot_iphone.png ""RuntimeBrowser iPhone"")
![RuntimeBrowser](art/screenshot_iphone_2.png ""RuntimeBrowser iPhone"")
    
### OS X Version

Latest build: 2019-11-17 [http://seriot.ch/temp/RuntimeBrowser_0.996.zip](http://seriot.ch/temp/RuntimeBrowser_0.996.zip) 344 KB

  * browse by class tree, image, list or protocols
  * search in classes contents
  * syntax colorization
  * drag and drop frameworks and headers

![Screenshot](art/screenshot.png ""RuntimeBrowser Mac OS X"")
",,2011-03-22T23:54:06Z,2023-03-10T15:50:27Z,16,12,3542,170,"('nst', 262), ('Nicolas Seriot', 9), ('MosheBerman', 6), ('swissquote-nst', 6), ('JohnWong', 4), ('Shmoopi', 4), ('leptos-null', 3), ('capnslipp', 2), ('allen-cc', 1), ('bryanluby', 1), ('eepstein', 1), ('Lascorbe', 1), ('saagarjha', 1), ('Swissquote Mobile Team', 1), ('lj98568', 1), ('weichao', 1)",8,5,
gilbertl/S9,An android input method that utilizes swipe motions to distinguish different characters on a single key.,"# S9 Input Method for Android#
S9 is an Android input method that utilizes swipe motions to distinguish different characters on a single key.

## State of Project ##
I (Gilbert) have decided to stop working on this for a variety of reasons. I thought someone would be interested in picking it up or forking it, so I put it on GitHub.

For a list of ""things to do"", see ""wiki"" and ""issues.""

## Demo ##
Watch [here](http://www.youtube.com/watch?v=0d1Frz6l4OU ""Demo"")

## Installation ##
If you want to play around with it (it's still WIP), download S9.apk from repo and do the following:

1. Install ASTRO file manager from market
2. Goto settings -> applications -> check ""unknown sources""
3. Transfer attached .apk to SD card.
4. Open ASTRO manager, find S9.apk, open it with app manager, install
5. Settings -> Language & Keyboard -> make sure S9 is checked
6. Find some input field, long press -> input method -> choose S9

## Developer Tips ##
Here are some resources to get started:

* [Creating an Input Method](http://android-developers.blogspot.com/2009/04/creating-input-method.html ""Creating an Input Method"")
* [How to use Multi-touch in Android 2](http://www.zdnet.com/blog/burnette/how-to-use-multi-touch-in-android-2/1747?tag=col1;post-1847 ""How to use Multi-touch in Android 2"")
* [Creating Binary Dictionaries](http://code.google.com/p/softkeyboard/wiki/BinaryDictionaries ""Creating Binary Dictionaries"")

The [Sample Soft Keyboard](http://developer.android.com/resources/samples/SoftKeyboard/index.html ""Sample Soft Keyboard""), [android-greek-ime](http://code.google.com/p/android-greek-ime/ ""android-greek-ime""), and the [LatinIME source code](http://android.git.kernel.org/?p=platform/packages/inputmethods/LatinIME.git;a=tree ""LatinIME Source Code"") are great places to figure out how to do things.

## Contact ##
gilbert.kf.leung AT gmail.com

## License ##
See attached MIT's license.
",,2010-06-05T06:39:03Z,2010-06-05T16:33:59Z,1,1,26,3,"('gilbertl', 38)",0,0,
czottmann/jquery-base64,Port of Nick Galbreath's JS base64 string encoder.,"**THIS PROJECT IS NO LONGER MAINTAINED.  IT MOSTLY WORKS, BUT IF YOU RUN INTO ISSUES, CHECK OUT THE FORKS, PLEASE.  OR FIX IT YOURSELF.  CHEERS!**

* * *

# jquery-base64

Rather simple jQuery'fication of
[Nick Galbreath's base64 string encoder](http://stringencoders.googlecode.com/svn-history/r210/trunk/javascript/base64.js).

I didn't like having a global `base64` variable around, that's all.


## Usage

* `$.base64.encode( ""this is a test"" )` returns `""dGhpcyBpcyBhIHRlc3Q=""`
* `$.base64.decode( ""dGhpcyBpcyBhIHRlc3Q="" )` returns `""this is a test""`


## Known issues

JSLint is complaining about the ""unexpected use of '<<'/'|'"".  No idea, suggestions welcome.


## Developers

Original code by [Nick Galbreath](http://stringencoders.googlecode.com/svn-history/r210/trunk/javascript/base64.js).
Port by [Carlo Zottmann](http://github.com/carlo).


## License

MIT license, just like [the original](http://stringencoders.googlecode.com/svn-history/r210/trunk/javascript/base64.js).
",,2010-08-24T18:03:23Z,2015-02-19T10:06:07Z,2,1,314,21,"('czottmann', 6), ('Carlo Zottmann', 2)",0,0,
makazeu/ssr-backup,ShadowsocksR backups,"# ShadowsocksR Backups

## Server
* ShadowsocksR-manyuser.zip - Python服务端，2017年7月27日傍晚版本，不含Git库
* ShadowsocksR-Python.zip - Python服务端，2017年7月27日凌晨版本，包含完整Git库

## Client (Compiled Binary)
* ShadowsocksR-4.7.0-win.zip - C#客户端，4.7.0版本（个人编译）
* ShadowsocksR-4.6.1-win.7z - C#客户端，4.6.1版本（官方Release）
* ShadowsocksR-3.4.0.5.apk - Android客户端，3.4.0.5版本
* ShadowsocksX-NG.1.5.1.zip - macOS客户端，1.5.1版本

## Client (Source Code)
* ShadowsocksR-android-3.4.0.6.6-src.zip - Android客户端源码，3.4.0.6.6版本
* ShadowsocksR-csharp-4.7.0-src.zip - C#客户端源码，4.7.0版本
* ShadowsocksX-NG-src.zip - macOS客户端源码
",,2017-07-27T12:20:24Z,2018-08-14T03:53:37Z,1,1,456,22,"('makazeu', 4)",0,0,
mart-e/website_b2b,Odoo module providing sales and purchases interface using website front end targeted at B2B retail customers,"# Introduction

website_b2b is an Odoo module that provides a simplified front end CMS driven interface for sales and purchases for resellers, allowing them to order products and register sales.

It is entirely ""data"" driven, meaning there are no python files, and therefore can be uploaded to the SaaS. It makes use of the CMS feature that allows server actions to provide the controller entry points for web pages. These server actions are stored in XML files and their ID's correspond to their page URL.

# Setup Instructions

### A. Setup a new retailer account

- Create the retailer as a contact in the database.
- Create a stock location with ""Stock"" as parent and the retailer contact as address.
- For all the products, add a Reordering rule dedicated to this new location and set an objective as minimal value. Use the import template I sent you. Then import this template in Warehouse > Configuration > Reordering rules in order to update data.
- Assign a portal access right to the retailer (from the Customers list view, more menu).
- In the Users menu, find the new retailer user and add the permissions Warehouse: User, Accounting: Invoicing & Payment and HR: Employee (won't be necessary in the production database). Also assign a password.

### B. Connect as the retailer

- Connect to the website
- Click on Sign In & log in with the credentails of the retailer user
- Open the Website application menu, then click on B2B Portal
- First check your initial stock in Overview
- Start first by encoding an initial order by clicking on ""Make an Inventory"". Skip the first inventory page and fill in the additional order form.
- Then feel free to encode sales or an inventory. You only see the products you have ordered initially.

### C. Report sales (i.e. once a month)

- 1st page: Fill in the sales report & validate it -> DRAFT DELIVERY ORDER (INVENTORY UPDATE, Retailer location -> client)
- 2nd page: Confirm the sales report -> CONFIRMED DELIVERY ORDER & CONFIRMED INVOICE
- 3rd page: Trigger a new delivery based on our targets and your additional whishes -> VALIDATED DELIVERY ORDER (Stock -> Retailer)

Note: It is not allowed to enter a sold quantity higher than the recorded stock. The user has to update his inventory first.

### D. Report an inventory (in case of inventory error or client return)

- 1st page: Fill in the inventory form -> DRAFT DELIVERY ORDER (INVENTORY UPDATE)
- In the delivery order lines: 
  - (a) FROM Retailer location TO Customer if the new inventory is smaller than the former one
  - (b) FROM Customer TO Retailer location if the new inventory is higher than the former one
- 2nd page: Confirm the sales report -> CONFIRMED DELIVERY ORDER & CONFIRMED INVOICE
  - (a) positive amount (= invoice)
  - (b) negative amount (= credit note)
- 3rd page: Trigger a new delivery based on our targets and your additional whishes -> VALIDATED DELIVERY ORDER (Stock -> Retailer)

",,2014-07-10T09:53:25Z,2020-10-23T04:26:57Z,1,1,10,8,"('maxmumford', 7)",0,0,
yixuan/LBFGSpp,A header-only C++ library for L-BFGS and L-BFGS-B algorithms,"# LBFGS++ 

> **UPDATE on 2020-03-06**: **LBFGS++** now includes a new L-BFGS-B solver for
> box-constrained optimization problems. Check the example below for its usage.

**LBFGS++** is a header-only C++ library that implements the Limited-memory
BFGS algorithm (L-BFGS) for unconstrained minimization problems, and a modified
version of the L-BFGS-B algorithm for box-constrained ones.

The code for the L-BFGS solver is derived and modified from the
[libLBFGS](https://github.com/chokkan/liblbfgs)
library developed by [Naoaki Okazaki](http://www.chokkan.org/).

**LBFGS++** is implemented as a header-only C++ library, whose only dependency,
[Eigen](http://eigen.tuxfamily.org/), is also header-only.

## A Quick Example

To use **LBFGS++**, one needs to first define a functor to represent the
multivariate function to be minimized. It should return the objective function
value on a vector `x` and overwrite the vector `grad` with the gradient
evaluated on `x`. For example we could define the
[Rosenbrock function](https://en.wikipedia.org/wiki/Rosenbrock_function) in the
following way:

```cpp
#include 
#include 
#include 

using Eigen::VectorXd;
using namespace LBFGSpp;

class Rosenbrock
{
private:
    int n;
public:
    Rosenbrock(int n_) : n(n_) {}
    double operator()(const VectorXd& x, VectorXd& grad)
    {
        double fx = 0.0;
        for(int i = 0; i < n; i += 2)
        {
            double t1 = 1.0 - x[i];
            double t2 = 10 * (x[i + 1] - x[i] * x[i]);
            grad[i + 1] = 20 * t2;
            grad[i]     = -2.0 * (x[i] * grad[i + 1] + t1);
            fx += t1 * t1 + t2 * t2;
        }
        return fx;
    }
};
```

Then we just need to set up parameters, create solver object,
provide initial guess, and then run the minimization function.

```cpp
int main()
{
    const int n = 10;
    // Set up parameters
    LBFGSParam param;
    param.epsilon = 1e-6;
    param.max_iterations = 100;

    // Create solver and function object
    LBFGSSolver solver(param);
    Rosenbrock fun(n);

    // Initial guess
    VectorXd x = VectorXd::Zero(n);
    // x will be overwritten to be the best point found
    double fx;
    int niter = solver.minimize(fun, x, fx);

    std::cout << niter << "" iterations"" << std::endl;
    std::cout << ""x = \n"" << x.transpose() << std::endl;
    std::cout << ""f(x) = "" << fx << std::endl;

    return 0;
}
```

The example can then be compiled and run.

```bash
$ g++ -I/path/to/eigen -I/path/to/lbfgspp/include -O2 example.cpp
$ ./a.out
23 iterations
x =
1 1 1 1 1 1 1 1 1 1
f(x) = 1.87948e-19
```

You can also use a different line search algorithm by providing a second template parameter
to `LBFGSSolver`. For example, the code below illustrates the bracketing line search algorithm
(contributed by [@DirkToewe](https://github.com/DirkToewe)).

```cpp
int main()
{
    const int n = 10;
    // Set up parameters
    LBFGSParam param;
    param.epsilon = 1e-6;
    param.max_iterations = 100;

    // Create solver and function object
    LBFGSSolver solver(param);
    Rosenbrock fun(n);

    // Initial guess
    VectorXd x = VectorXd::Zero(n);
    // x will be overwritten to be the best point found
    double fx;
    int niter = solver.minimize(fun, x, fx);

    std::cout << niter << "" iterations"" << std::endl;
    std::cout << ""x = \n"" << x.transpose() << std::endl;
    std::cout << ""f(x) = "" << fx << std::endl;

    return 0;
}
```

## Box-constrained Problem

If the parameters to be optimized have simple bounds, then the
L-BFGS-**B** solver class `LBFGSBSolver` can be used.
The code is very similar to that of `LBFGSSolver`. Below is the same Rosenbrock
example, but we require that all variables should be between 2 and 4.

```cpp
#include 
#include 
#include   // Note the different header file

using Eigen::VectorXd;
using namespace LBFGSpp;

class Rosenbrock
{
private:
    int n;
public:
    Rosenbrock(int n_) : n(n_) {}
    double operator()(const VectorXd& x, VectorXd& grad)
    {
        double fx = 0.0;
        for(int i = 0; i < n; i += 2)
        {
            double t1 = 1.0 - x[i];
            double t2 = 10 * (x[i + 1] - x[i] * x[i]);
            grad[i + 1] = 20 * t2;
            grad[i]     = -2.0 * (x[i] * grad[i + 1] + t1);
            fx += t1 * t1 + t2 * t2;
        }
        return fx;
    }
};

int main()
{
    const int n = 10;
    // Set up parameters
    LBFGSBParam param;  // New parameter class
    param.epsilon = 1e-6;
    param.max_iterations = 100;

    // Create solver and function object
    LBFGSBSolver solver(param);  // New solver class
    Rosenbrock fun(n);

    // Bounds
    VectorXd lb = VectorXd::Constant(n, 2.0);
    VectorXd ub = VectorXd::Constant(n, 4.0);

    // Initial guess
    VectorXd x = VectorXd::Constant(n, 3.0);

    // x will be overwritten to be the best point found
    double fx;
    int niter = solver.minimize(fun, x, fx, lb, ub);

    std::cout << niter << "" iterations"" << std::endl;
    std::cout << ""x = \n"" << x.transpose() << std::endl;
    std::cout << ""f(x) = "" << fx << std::endl;

    return 0;
}
```

Note that we also allow infinite values for the lower and upper bounds.
In such cases one can define `ub[i] = std::numeric_limits::infinity()`,
for example.

## Documentation

The [API reference](https://lbfgspp.statr.me/doc/) page contains the documentation
of **LBFGS++** generated by [Doxygen](https://www.doxygen.nl/).

## License

**LBFGS++** is an open source project under the MIT license.
","'l-bfgs', 'l-bfgs-b', 'lbfgs-solver', 'lbfgsb-solver', 'limited-memory', 'optimization'",2016-08-05T00:40:07Z,2024-03-10T04:17:22Z,5,5,513,17,"('yixuan', 200), ('mpayrits', 3), ('DirkToewe', 3), ('pjknowles', 1), ('steinmig', 1)",2,2,
amjuarez/bytecoin,CryptoNote protocol implementation,"IMPORTANT ANNOUNCEMENT

Official development moved to https://github.com/bcndev/bytecoin.
This repository won't be updated any more.
The last revision of codebase is moved to the branch https://github.com/amjuarez/bytecoin/tree/frozen-master
",,2014-03-09T10:47:36Z,2021-05-03T17:08:51Z,10,5,399,119,"('Antonio Juarez', 46), ('amjuarez', 15), ('OracionSeis', 10), ('ekimmo', 6), ('jezal', 6), ('Amphibian', 2), ('NoodleDoodleNoodleDoodleNoodleDoodleNoo', 2), ('fourschaft', 2), ('quazarcoin', 1), ('thankful_for_today', 1)",2,1,
cobbzilla/s3s3mirror,"Mirror one S3 bucket to another S3 bucket, or to/from the local filesystem.","s3s3mirror
==========

A utility for mirroring content from one S3 bucket to another.

Designed to be lightning-fast and highly concurrent, with modest CPU and memory requirements.

An object will be copied if and only if at least one of the following holds true:

* The object does not exist in the destination bucket.
* The ""sync strategy"" triggers (by default uses the Etag sync strategy)
    * Etag Strategy (Default): If the size or Etags don't match between the source and destination bucket.
    * Size Strategy: If the sizes don't match between the source and destination bucket.
    * Size and Last Modified Strategy: If the source and destination objects have a different size, or the source bucket object has a more recent last modified date. 

When copying, the source metadata and ACL lists are also copied to the destination object.

Note: [the 2.1-stable branch](https://github.com/cobbzilla/s3s3mirror/tree/2.1-stable) supports copying to/from local directories.

### Motivation

I started with ""s3cmd sync"" but found that with buckets containing many thousands of objects, it was incredibly slow
to start and consumed *massive* amounts of memory. So I designed s3s3mirror to start copying immediately with an intelligently
chosen ""chunk size"" and to operate in a highly-threaded, streaming fashion, so memory requirements are much lower.

Running with 100 threads, I found the gating factor to be *how fast I could list items from the source bucket* (!?!)
Which makes me wonder if there is any way to do this faster. I'm sure there must be, but this is pretty damn fast.

### AWS Credentials

* s3s3mirror will first look for credentials in your system environment. If variables named AWS\_ACCESS\_KEY\_ID and AWS\_SECRET\_ACCESS\_KEY are defined, then these will be used.
* Next, it checks for a ~/.s3cfg file (which you might have for using s3cmd). If present, the access key and secret key are read from there.
* IAM Roles can be used on EC2 instances by specifying the --iam flag
* If none of the above is found, it will error out and refuse to run.

### System Requirements

* Java 8 or higher

### Building

    mvn package

Note that s3s3mirror now has a prebuilt jar checked in to github, so you'll only need to do this if you've been playing with the source code.
The above command requires that Maven 3 is installed.

### License

s3s3mirror is available under the [Apache 2.0 License](https://www.apache.org/licenses/LICENSE-2.0).

### Usage

    s3s3mirror.sh [options] [/src-prefix/path/...] [/dest-prefix/path/...]

### Versions

The 1.x branch (currently master) has been in use by the most number of people and is the most battle tested.

The 2.x branch supports copying between S3 and any local filesystem. It has seen heavy use and performs well, but is not as widely used as the 1.x branch.

**In the near future, the 1.x branch will offshoot from master, and the 2.x branch will be merged into master.** There are a handful of features
on the 1.x branch that have not yet been ported to 2.x. If you can live without them, I encourage you to use the 2.x branch. If you really need them,
I encourage you to port them to the 2.x branch, if you have the ability.

### Options

    -c (--ctime) N           : Only copy objects whose Last-Modified date is younger than this many days
                               For other time units, use these suffixes: y (years), M (months), d (days), w (weeks),
                                                                         h (hours), m (minutes), s (seconds)
    -i (--iam) : Attempt to use IAM Role if invoked on an EC2 instance
    -P (--profile) VAL        : Use a specific profile from your credential file (~/.aws/config)
    -m (--max-connections) N  : Maximum number of connections to S3 (default 100)
    -n (--dry-run)            : Do not actually do anything, but show what would be done (default false)
    -r (--max-retries) N      : Maximum number of retries for S3 requests (default 5)
    -p (--prefix) VAL         : Only copy objects whose keys start with this prefix
    -d (--dest-prefix) VAL    : Destination prefix (replacing the one specified in --prefix, if any)
    -e (--endpoint) VAL       : AWS endpoint to use (or set AWS_ENDPOINT in your environment)
    -X (--delete-removed)     : Delete objects from the destination bucket if they do not exist in the source bucket
    -t (--max-threads) N      : Maximum number of threads (default 100)
    -v (--verbose)            : Verbose output (default false)
    -z (--proxy) VAL          : host:port of proxy server to use.
                                Defaults to proxy_host and proxy_port defined in ~/.s3cfg,
                                or no proxy if these values are not found in ~/.s3cfg
    -u (--upload-part-size) N : The upload size (in bytes) of each part uploaded as part of a multipart request
                                for files that are greater than the max allowed file size of 5368709120 bytes (5 GB)
                                Defaults to 4294967296 bytes (4 GB)
    -C (--cross-account-copy) : Copy across AWS accounts. Only Resource-based policies are supported (as
                                specified by AWS documentation) for cross account copying
                                Default is false (copying within same account, preserving ACLs across copies)
                                If this option is active, the owner of the destination bucket will receive full control
                                
    -s (--ssl)                    : Use SSL for all S3 api operations (default false)
    -E (--server-side-encryption) : Enable AWS managed server-side encryption (default false)
    -l (--storage-class)		  : S3 storage class ""Standard"" or ""ReducedRedundancy"" (default Standard)
    -S (--size-only)              : Only takes size of objects in consideration when determining if a copy is required.
    -L (--size-and-last-modified) : Uses size and last modified to determine if files have change like the AWS CLI and ignores etags. If -S (--size-only) is also specified that strategy is selected over this strategy.


### Examples

Copy everything from a bucket named ""source"" to another bucket named ""dest""

    s3s3mirror.sh source dest

Copy everything from ""source"" to ""dest"", but only copy objects created or modified within the past week

    s3s3mirror.sh -c 7 source dest
    s3s3mirror.sh -c 7d source dest
    s3s3mirror.sh -c 1w source dest
    s3s3mirror.sh --ctime 1w source dest

Copy everything from ""source/foo"" to ""dest/bar""

    s3s3mirror.sh source/foo dest/bar
    s3s3mirror.sh -p foo -d bar source dest

Copy everything from ""source/foo"" to ""dest/bar"" and delete anything in ""dest/bar"" that does not exist in ""source/foo""

    s3s3mirror.sh -X source/foo dest/bar
    s3s3mirror.sh --delete-removed source/foo dest/bar
    s3s3mirror.sh -p foo -d bar -X source dest
    s3s3mirror.sh -p foo -d bar --delete-removed source dest

Copy within a single bucket -- copy everything from ""source/foo"" to ""source/bar""

    s3s3mirror.sh source/foo source/bar
    s3s3mirror.sh -p foo -d bar source source

BAD IDEA: If copying within a single bucket, do *not* put the destination below the source

    s3s3mirror.sh source/foo source/foo/subfolder
    s3s3mirror.sh -p foo -d foo/subfolder source source
*This might cause recursion and raise your AWS bill unnecessarily*

###### If you've enjoyed using s3s3mirror and are looking for a warm-fuzzy feeling, consider dropping a little somethin' into my [tip jar](https://cobbzilla.org/tipjar.html)
",,2013-05-17T00:34:28Z,2022-09-04T18:03:11Z,20,14,420,17,"('cobbzilla', 94), ('anishek', 6), ('bitsofinfo', 3), ('dependabotbot', 3), ('kmurray', 3), ('elmobp', 3), ('Jethro Carr', 2), ('klamouri', 2), ('winzig', 2), ('lobsterdore', 1), ('jogaco', 1), ('Shasha Chen', 1), ('wimnat', 1), ('Oleksiy Lysak', 1), ('kylec32', 1), ('jackl0phty', 1), ('ambled', 1), ('Frank Chen', 1), ('andrewjhumphrey', 1), ('Alexandru Ast', 1)",11,7,
jashkenas/underscore,JavaScript's utility _ belt,"                       __
                      /\ \                                                         __
     __  __    ___    \_\ \     __   _ __   ____    ___    ___   _ __    __       /\_\    ____
    /\ \/\ \ /' _ `\  /'_  \  /'__`\/\  __\/ ,__\  / ___\ / __`\/\  __\/'__`\     \/\ \  /',__\
    \ \ \_\ \/\ \/\ \/\ \ \ \/\  __/\ \ \//\__, `\/\ \__//\ \ \ \ \ \//\  __/  __  \ \ \/\__, `\
     \ \____/\ \_\ \_\ \___,_\ \____\\ \_\\/\____/\ \____\ \____/\ \_\\ \____\/\_\ _\ \ \/\____/
      \/___/  \/_/\/_/\/__,_ /\/____/ \/_/ \/___/  \/____/\/___/  \/_/ \/____/\/_//\ \_\ \/___/
                                                                                  \ \____/
                                                                                   \/___/

Underscore.js is a utility-belt library for JavaScript that provides
support for the usual functional suspects (each, map, reduce, filter...)
without extending any core JavaScript objects.

For Docs, License, Tests, and pre-packed downloads, see:
https://underscorejs.org

For support and questions, please consult
our [security policy](SECURITY.md),
[the gitter channel](https://gitter.im/jashkenas/underscore)
or [stackoverflow](https://stackoverflow.com/search?q=underscore.js)

Underscore is an open-sourced component of DocumentCloud:
https://github.com/documentcloud

Many thanks to our contributors:
https://github.com/jashkenas/underscore/contributors

You can support the project by donating on
[Patreon](https://patreon.com/juliangonggrijp).
Enterprise coverage is available as part of the
[Tidelift Subscription](https://tidelift.com/subscription/pkg/npm-underscore?utm_source=npm-underscore&utm_medium=referral&utm_campaign=enterprise).

This project adheres to a [code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code.
",,2009-10-25T18:31:06Z,2024-04-02T15:08:20Z,325,261,27250,844,"('jashkenas', 945), ('jgonggrijp', 322), ('braddunbar', 174), ('megawac', 170), ('michaelficarra', 168), ('akre54', 122), ('captbaritone', 115), ('jridgewell', 75), ('gyeates', 52), ('jdalton', 38), ('davidchambers', 37), ('ratbeard', 22), ('ryantenney', 22), ('mahdi-shojaee', 18), ('maartenbreddels', 11), ('jsoref', 9), ('Kit Cambridge', 9), ('Kit Goncharov', 9), ('octatone', 9), ('samuelclay', 7), ('almost', 7), ('iamnoah', 7), ('lfac-pt', 6), ('Mario T. Lanza', 6), ('liuyl', 6), ('paulfalgout', 5), ('jasondavies', 5), ('jamiebuilds', 5), ('hackreactor-students', 5), ('Deepak Kumar', 5), ('caseywebdev', 5), ('AdamCraven', 5), ('mrocklin', 4), ('vincentwoo', 4), ('jrburke', 4), ('kritollm', 4), ('shinuza', 4), ('melnikov-s', 3), ('lifesinger', 3), ('kriskowal', 3), ('josephrubin', 3), ('gwpmad', 3), ('xcodebuild', 3), ('amzotti', 3), ('ryanve', 3), ('carpben', 3), ('smarden1', 3), ('wgpsutherland', 3), ('craigmichaelmartin', 3), ('int3', 3), ('coolov', 3), ('sdwebster', 3), ('Krinkle', 3), ('zackschuster', 3), ('helloenvoy-andrew', 3), ('bnjmnt4n', 3), ('Andrei', 3), ('alanzheng88', 3), ('Florian-R', 3), ('henryw4k', 3), ('Jason Rogers', 3), ('rfletcher', 3), ('spadgos', 3), ('Max Beatty', 3), ('Mario Estrada', 3), ('Kit Cambridge', 3), ('kishanov', 3), ('JensRantil', 3), ('Joseph Spens', 3), ('Kevin Malakoff', 3), ('Petr Archakov', 2), ('philfreo', 2), ('yuchi', 2), ('Rhys', 2), ('sindresorhus', 2), ('stevenharman', 2), ('Stuk', 2), ('tjbarber', 2), ('TalAter', 2), ('Temur', 2), ('tkristiansen', 2), ('DmitryBaranovskiy', 2), ('tonylukasavage', 2), ('U-EM\\mib', 2), ('bathos', 2), ('anfengchen', 2), ('ahonn', 2), ('givingway', 2), ('bjh', 2), ('dmitrygusev', 2), ('aseemk', 2), ('jtfairbank', 2), ('MahmudH', 2), ('marcusphillips', 2), ('rck109d', 2), ('tnga', 2), ('mattrobenolt', 2), ('amZotti', 2), ('Amer Alimanovic', 2), ('deining', 2), ('Suor', 2), ('alanhogan', 2), ('zertosh', 2), ('cobbweb', 2), ('ankurp', 2), ('brianhaveri', 2), ('carltonf', 2), ('colingm', 2), ('xdhmoore', 2), ('dreyacosta', 2), ('Derek Brans', 2), ('mcmire', 2), ('chaoflow', 2), ('maw', 2), ('mark-rushakoff', 2), ('Ognjen Jevremovic', 2), ('Malcolm Locke', 2), ('phadej', 2), ('Luke Sutton', 2), ('liroyleshed', 2), ('kevinoid', 2), ('josephlin55555', 2), ('JonAbrams', 2), ('JeffAMcGee', 2), ('jayphelps', 2), ('jdelbello', 2), ('Janas Page', 2), ('Jan Raasch', 2), ('gka', 2), ('BridgeAR', 1), ('rsml', 1), ('roryokane', 1), ('robb', 1), ('robbiehudson', 1), ('Ricardo Bin', 1), ('zubairov', 1), ('Rafal Chmiel', 1), ('ppenicka', 1), ('prust', 1), ('petschki', 1), ('Ruslan Panasiuk', 1), ('russplaysguitar', 1), ('tricknotes', 1), ('thefourtheye', 1), ('sgentle', 1), ('wilzbach', 1), ('Shinya Yamaoka', 1), ('Stephen Demjanenko', 1), ('stevenh', 1), ('knowtheory', 1), ('creationix', 1), ('Tim Walling', 1), ('appleboy', 1), ('markstory', 1), ('logicmason', 1), ('mjhasbach', 1), ('eins78', 1), ('michael', 1), ('mwilliamson', 1), ('gitMbar', 1), ('mikemaccana', 1), ('jugglinmike', 1), ('Mike Sidorov', 1), ('mimshwright', 1), ('mcbex', 1), ('mislav', 1), ('shesek', 1), ('nhunzaker', 1), ('nowke', 1), ('hx', 1), ('nickstenning', 1), ('ansman', 1), ('NikolayFrantsev', 1), ('nunoarruda', 1), ('Ore4444', 1), ('paulsmithkc', 1), ('petejkim', 1), ('javadev', 1), ('kapooostin', 1), ('kingdido999', 1), ('kutyel', 1), ('7fe', 1), ('linkkingjay', 1), ('marijaselakovic', 1), ('matehat', 1), ('matildasmeds', 1), ('mdemo', 1), ('melnikov', 1), ('opensas', 1), ('pepkin88', 1), ('rossille', 1), ('yangsibai', 1), ('sjpsega', 1), ('stonelee', 1), ('eterey', 1), ('vaverix', 1), ('wy1009', 1), ('woodall', 1), ('wwwoodall', 1), ('YanTheFawn', 1), ('zhengkai', 1), ('Дмитрий', 1), ('Tom Martin', 1), ('tonythomson', 1), ('Trevor Burnham', 1), ('vijithassar', 1), ('vhmth', 1), ('qivhou', 1), ('vlazzle', 1), ('wtokuno', 1), ('butterywombat', 1), ('eungjun-yi', 1), ('zakj', 1), ('andrew', 1), ('bdusell', 1), ('danielmbarlow', 1), ('91bananas', 1), ('dragmove', 1), ('gonzalez', 1), ('fogus', 1), ('gfredericks', 1), ('gautamjeyaraman', 1), ('guiled', 1), ('lessfish', 1), ('hrj', 1), ('ikasumiwt', 1), ('janraasch', 1), ('Bob Remeika', 1), ('brettgoulder', 1), ('Bryan Goldstein and David Lee', 1), ('bryanwoods', 1), ('burin', 1), ('cbguder', 1), ('CatChen', 1), ('chris-baynes', 1), ('cleishm', 1), ('clottes', 1), ('chris-martin', 1), ('c089', 1), ('colinta', 1), ('Damon Hunt', 1), ('Damon Hunt', 1), ('tillberg', 1), ('its-danny', 1), ('Darin Van Holland', 1), ('David', 1), ('glasser', 1), ('wachunga', 1), ('David Sanders', 1), ('deiwin', 1), ('aeosynth', 1), ('AJ ONeal', 1), ('adamnbowen', 1), ('Adrien Frediani', 1), ('Afnan Fahim', 1), ('MiltonAkash', 1), ('Al Scott', 1), ('albertsun', 1), ('acgessler', 1), ('albemuth', 1), ('amit3vr', 1), ('azicchetti', 1), ('alewiscondev', 1), ('subzey', 1), ('timaschew', 1), ('arianf', 1), ('arlolra', 1), ('ben-joostens', 1), ('Benjamin Coe', 1), ('Benjamin Delespierre', 1), ('bkudria', 1), ('bernard-lin', 1), ('bmaland', 1), ('blakeembrey', 1), ('Blake Simpson', 1), ('blake-simpson', 1), ('jasonLaster', 1), ('jed', 1), ('banterability', 1), ('Jeremy Ashkenas', 1), ('Jesse Pollak', 1), ('wyuenho', 1), ('joliss', 1), ('mrjjwright', 1), ('josh', 1), ('okkez', 1), ('bakkot', 1), ('kkirsche', 1), ('kimjoar', 1), ('Kit Goncharov', 1), ('kgarfinkel', 1), ('shama', 1), ('theoreticaLee', 1), ('lennym', 1), ('lukeasrodgers', 1), ('Maciej Czyżewski', 1), ('marekventur', 1), ('Margen67', 1), ('mhansen', 1), ('marksanghoonkim', 1), ('denis-sokolov', 1), ('dennisgl', 1), ('DiegoRBaquero', 1), ('dimitriwalters', 1), ('JustBlackBird', 1), ('dominykas', 1), ('ded', 1), ('lexdene', 1), ('theel0ja', 1), ('elias6', 1), ('emmanne08', 1), ('ewr', 1), ('erikbern', 1), ('emorikawa', 1), ('skv-headless', 1), ('francois2metz', 1), ('gsamokovarov', 1), ('jawj', 1), ('obmarg', 1), ('Gregor Aisch', 1), ('taiju', 1), ('hswolff', 1), ('Ian Wotkun', 1), ('machineloop', 1), ('Jakub Wieczorek', 1)",196,157,
imdjsarge/veggies-bootstrap,Ms. B's Veggies Bootstrap Demo,"# Ms. B's Veggies Bootstrap Demo Site
This repository contains the starter files for the Ms. B's Veggies Bootstrap demo.  

Fork this repository to begin the assignment. Instructions for the assignment are found on the course website at https://github.com/htc-ccis1301/htc-html/assignments/veggies-bootstrap-v1.html

When you are finished, you will submit your work for the assignment using a pull request. 


### Notes and Info
The color palette for the site was designed using [Paletton](http://paletton.com/palette.php?uid=32S0u0kcglL4Zvw8Eq6eXhmkwen).

Ms. B and Benji are completely fictional characters.  Any resemblence to actual people is uninteded.  Images are from my own garden and various internet [free stock image websites](http://www.pixeden.com/top-5-best/the-top-5-quality-best-free-stock-photography-website-for-designers).
",,2015-07-08T22:28:22Z,2015-07-12T16:59:07Z,3,1,0,2,"('imdjsarge', 10), ('Mary Mosman', 1), ('htcMosman', 1)",2,0,
comocode/laravel-ab,Laravel 5 A/B experiment testing using with Blade ,"[![Build Status](https://travis-ci.org/comocode/laravel-ab.png)](https://travis-ci.org/comocode/laravel-ab)
[![Latest Stable Version](https://poser.pugx.org/comocode/laravel-ab/v/stable)](https://packagist.org/packages/comocode/laravel-ab)
[![Total Downloads](https://poser.pugx.org/comocode/laravel-ab/downloads)](https://packagist.org/packages/comocode/laravel-ab)
[![Latest Unstable Version](https://poser.pugx.org/comocode/laravel-ab/v/unstable)](https://packagist.org/packages/comocode/laravel-ab)
[![Daily Downloads](https://poser.pugx.org/comocode/laravel-ab/d/daily)](https://packagist.org/packages/comocode/laravel-ab)

laravel-ab
==========

An A/B Testing suite for Laravel which allows multiple and nested experiments.

This will create trackable experients with as many conditions as you'd like. 
And will track conversion on each experiment based on keywords provided. 

You can have nested experiments, its conditions are regular VIEW outputs
making experiments easy to add/remove from your projects.


Usage
==========

Install using composer or which ever means you prefer

```
composer install comocode/laravel-ab 
```

then add the service provider to your app.php in config/ folder like so

```php

    ..Illuminate\Validation\ValidationServiceProvider::class,
    
    ..Illuminate\View\ViewServiceProvider::class,
    
    ComoCode\LaravelAb\LaravelAbServiceProvider::class
```

Once you have registered the service provider. You can run `php artistan`
and see the following output:
     
    ab:migrate          migrates Laravel-Ab required tables
    
    ab:rollback         removes Laravel-Ab tables
    
    ab:report   --list outputs statistics on your current experiments or the one specified in the command
    
    
you can run ab:migrate to create the required tables, and ab:rollback to remove them anytime you wish
to view your experiment results, use the export command to see statistics


Creating Experiments
==========

There are a few PHP A/B and other Laravel packages available.

This project focuses on providing the ability to test multiple experiments
including nested experiments with a very easy to use blade interface.

```php
  
    @ab('My First Experiment') ///// the name of the experiment
    @condition('ConditionOne') /// one possible condition for the experiment
    
        
           @ab('My Nested Experiment') /// an experiment nested within the top experiment
                @condition('NestedConditionOne')
                    Some tag
                @condition('NestedConditionTwo') /// some values
                    Some other tag
                @condition('NestedConditionThree')
                    Another tag
            @track('NestedGoal') /// the goal to track this experiment to
        
    
    @condition('ConditionTwo')/// condition for top level test
         other stuff 
    @track('TopLevelGoal') /// goal for top level test

```
to reach an event simply do
```
  @goal('NestedGoal')   

```
in the targed page or by utilizing app()->make('Ab')->goal('NestedGoal') anywhere in your application execution.


### Weighted Conditions 

if you would like to throttle the decision towards specific conditions you can add a declaration to control the distribution. 
For example
```php
 @ab('My Nested Experiment') /// an experiment nested within the top experiment
    @condition('NestedConditionOne [2]')
        Some tag
    @condition('NestedConditionTwo [1]') /// some values
        Some other tag
    @condition('NestedConditionThree [1]')
        Another tag
@track('NestedGoal') /// the goal to track this experiment to
```

Will randomly select a result but will calculate the odd of the result based on the sum of the weights (1 + 1 + 2 = 4)  vs its specific weight 2/4, 1/4 1/4.


Results
==========
Once an experiment is executed, it will remember the options provided to the user so experiment choice selections do not change upon revisiting your project. 

A experiment is recorded per instance and goals are tracked to the instance allowing for aggregation on results per condition. 

Contributing
==========
Please feel free to contribute as A/B testing is an important part for any organization. 


TODO
==========
Add queable job to send reports on cron
Add HTML charts
",,2015-08-16T19:18:31Z,2017-10-09T21:06:46Z,8,4,31,3,"('82rules', 50), ('Joost van der Meijden', 6), ('sajjadrad', 4), ('Lance Pioch', 3), ('igor Ciqueira Silva', 3), ('DODMax', 1), ('jmarcher', 1), ('Martin Engelking', 1)",3,2,
douban/douban-sqlstore,Douban's MySQL lib.,"## Douban SQLStore


#### Quick Start

```
1. virtualenv venv
2. . venv/bin/activate
3. mysql -uroot < tests/test_mysql.sql
4. python setup.py install
5. python setup.py test
```
",,2014-02-12T02:31:05Z,2014-02-12T15:24:31Z,2,2,31,19,"('xtao', 4), ('liluo', 3)",0,0,
livelessons-spring/building-microservices,Building Microservices with Spring Boot,":compat-mode:
= Developing Microservices With Spring Boot 

This is the code accompanying the Livelessons video training course, https://www.safaribooksonline.com/library/view/building-microservices-with/9780134192468/[_Building Microservices with Spring Boot_],
by http://twitter.com/starbuxman[Josh Long] and http://twitter.com/phillip_webb[Phil Webb]. 

NOTE: We're currently upgrading this codebase for a second video. Please use the `v1` branch if you want to see the previous version.

== Introduction
What makes a modern application? A modern application lives on the web. It
lives in the cloud. It works with all manner of data (big-data, NoSQL,
in-memory data-grids). It is service-oriented and multi-client ready. It is
production-ready. It is driven by ever-changing demands and scale.

While it's true that it may no longer be a ""Spring"" chicken, Spring's maturity
is well-proven and powering some of the largest and widely used open-web
applications in the world! And, with the introduction of Spring Boot, it's
lighter and more productive than ever.


== Contents
This repository contains the example code covered in the LiveLesson video. Use
the links below to jump to a specific topic:

- Lesson 1: link:livelessons-bootstrap[Bootstrapping (Spring Boot 101)]
- Lesson 2: link:livelessons-configuration[Using ""Twelve-Factor"" Style Configuration]
- Lesson 3: link:livelessons-cloud[Reaching For The Clouds]
- Lesson 4: link:livelessons-data[Working With Data]
- Lesson 5: link:livelessons-rest[Giving Your Microservice a REST]
- Lesson 6: link:livelessons-integration[Dealing With Integration and Batch Processing]
- Lesson 7: link:livelessons-operations[Creating Operations-Friendly Microservices]
- Lesson 8: link:livelessons-microservices[Choreographing Microservices]
- Lesson 9: link:livelessons-web[Developing Web Applications]
- Lesson 10: link:livelessons-security[Securing Microservices With Spring Security]
",,2015-05-07T17:44:02Z,2022-10-13T11:16:50Z,2,2,637,113,"('philwebb', 16), ('joshlong', 15)",0,0,
cndplab-founder/ICDAR2019_cTDaR,"The ICDAR 2019 cTDaR is to evaluate the performance of methods for table detection (TRACK A) and table recognition (TRACK B). For the first track, document images containing one or several tables are provided. For TRACK B two subtracks exist: the first subtrack (B.1) provides the table region. Thus, only the table structure recognition must be performed. The second subtrack (B.2) provides no a-priori information. This means, the table region and table structure detection has to be done. ","# ICDAR2019_cTDaR
The ICDAR 2019 cTDaR is to evaluate the performance of methods for table detection (TRACK A) and table recognition (TRACK B). For the first track, document images containing one or several tables are provided. For TRACK B two subtracks exist: the first subtrack (B.1) provides the table region. Thus, only the table structure recognition must be performed. The second subtrack (B.2) provides no a-priori information. This means, the table region and table structure detection has to be done. 

Official website: https://cndplab-founder.github.io/cTDaR2019


Important Note: 
1. For the modern dataset no training data is available for Track B. Note that the modern dataset has a different annotation (Bounding box of the content describes a cell region in contrast to the historical dataset whereas a cell region is described by the cell area) and thus a different requested output. 
2. Samples from the modern dataset have the prefix ""cTDaR_t1"" and samples from the historical dataset start with ""cTDaR_t0"". 

Update Note：

1. We publish a supplement dataset version in [ICDAR2019_cTDaR_dataset_supplement](https://github.com/cndplab-founder/ICDAR2019_cTDaR_dataset_supplement), which is a helpful subset in terms of adjacency relations, from Prof. Cheng-Lin Liu's Group, Institute of Automation, Chinese Academy of Sciences. 
",,2019-03-04T07:30:15Z,2022-08-10T13:44:37Z,4,2,164,8,"('cndplab-founder', 9), ('cndplab-founder', 5), ('Herve Dejean', 4), ('DRRV', 4)",0,0,
sayef/bplus-tree,B+ Tree Data Insertion and Deletion,"# B+ Tree Implementation in C++

This code implements a B+ tree, which is a self-balancing tree data structure that is commonly used in databases to store and retrieve data efficiently. It is similar to a binary search tree, but each node can have more than two children and stores multiple keys.

### `Node` Class

The `Node` class represents a node in the B+ tree. It has several member variables:

*   `keys` is a vector of integers that stores the keys contained in the node.
*   `parent` is a pointer to the parent node of the current node.
*   `children` is a vector of pointers to the children nodes of the current node. This is only used if the current node is not a leaf node.
*   `values` is a vector of integers that stores the values associated with the keys in the node. This is only used if the current node is a leaf node.
*   `next` and `prev` are pointers to the next and previous nodes in the tree, respectively. This is used to create a linked list of leaf nodes to facilitate efficient range queries (not implemented though).
*   `isLeaf` is a boolean that indicates whether the current node is a leaf node or not.

The `Node` class has several member functions:


*   `Node(Node *parent = nullptr, bool isLeaf = false, Node *prev_ = nullptr, Node *next_ = nullptr)` is the constructor for the `Node` class. It takes four optional arguments: a pointer to the parent node, a boolean indicating whether the node is a leaf or not, and pointers to the previous and next nodes in the tree. If the `prev` and `next` arguments are provided, it updates the linked list pointers accordingly.
*   `indexOfChild(int key)` returns the index of the child node that would contain the given key. If the key is not in the node, it returns the index at which the key would be inserted.
*   `indexOfKey(int key)` returns the index of the given key within the `keys` vector. If the key is not found, it returns -1.
*   `getChild(int key)` returns a pointer to the child node that would contain the given key.
*   `setChild(int key, vector value)` inserts the given key and vector of child nodes into the `keys` and `children` vectors at the appropriate position.
*   `splitInternal()` is used to split an internal node when it becomes full. It creates a new node and moves half of the keys and children to the new node. It returns a tuple containing the key that will be inserted into the parent node, a pointer to the left node, and a pointer to the right node.
*   `get(int key)` returns the value associated with the given key. If the key is not found, it prints an error message.
*   `set(int key, int value)` inserts the given key and value into the `keys` and `values` vectors at the appropriate position. If the key already exists, it updates the associated value.
*   `splitLeaf()` is used to split a leaf node when it becomes full. It creates a new node and moves half of the keys and values to the new node. It returns a tuple containing the key that will be inserted into the parent node, a pointer to the left node, and a pointer to the right node.
*   `merge(Node* sibling)` is used to merge two leaf nodes when one of them becomes underfull. It moves all of the keys and values from the sibling node into the current node, and updates the linked list pointers accordingly.

### `BPlusTree` class

The `BPlusTree` class represents a B+ tree data structure. It has several member variables:

*   `root`: a pointer to the root node of the tree.
*   `maxCapacity`: an integer indicating the maximum number of keys that a node can have before it needs to be split.
*   `minCapacity`: an integer indicating the minimum number of keys that a node can have before it is considered underfull and may need to borrow a key from a neighboring node or merge with another node.
*   `depth`: an integer indicating the depth of the tree.

The `BPlusTree` class has several member functions:

*   `BPlusTree(int _maxCapacity = 4)` is the constructor for the `BPlusTree` class. It takes an optional argument `_maxCapacity` which specifies the maximum number of keys that a node can have before it needs to be split. If `_maxCapacity` is not provided, the default value of 4 is used. The constructor creates a new root node and initializes the `maxCapacity`, `minCapacity`, and `depth` member variables.
    
*   `Node* findLeaf(int key)` returns a pointer to the leaf node where the given key would be stored. It starts at the root node and traverses down the tree until it reaches a leaf node.
    
*   `int get(int key)` returns the value associated with the given key. It calls the `findLeaf` function to locate the leaf node where the key is stored, and then calls the `get` function of the leaf node to retrieve the value.
    
*   `void set(int key, int value)` inserts the given key and value into the tree. It calls the `findLeaf` function to locate the leaf node where the key would be stored, and then calls the `set` function of the leaf node to insert the key and value. If the leaf node becomes full as a result, it calls the `insert` function to split the node.
    
*   `void insert(tuple result)` is used to insert the results of a node split into the tree. It takes a tuple containing the key that will be inserted into the parent node, and pointers to the left and right child nodes. It first checks if the parent node is null, in which case it creates a new root node and updates the `root` and `depth` member variables. Otherwise, it calls the `setChild` function of the parent node to insert the key and child nodes at the appropriate position. If the parent node becomes full as a result, it calls the `insert` function recursively to split the parent node.
    
*   `void remove(int key)` removes the given key from the tree. It first calls the `findLeaf` function to locate the leaf node where the key is stored, and then calls the `removeFromLeaf` function to remove the key from the leaf node. If the leaf node becomes underfull as a result, it checks if the node has a neighboring node with spare keys that it can borrow from, or if it needs to merge with a neighboring node. If the node is the root node and becomes empty as a result of the removal, the root node is updated to point to the only remaining child.
    
*   `void removeFromLeaf(int key, Node *node)` removes the given key from the given leaf node. It removes the key and associated value from the `keys` and `values` vectors, and updates the key in the parent node if necessary.
    
*   `void removeFromInternal(int key, Node *node)` removes the given key from the given internal node. If the key is found in the `keys` vector, it replaces it with the smallest key from the rightmost child. If the internal node becomes underfull as a result, it checks if the node has a neighboring node with spare keys that it can borrow from, or if it needs to merge with a neighboring node.
    
*   `void borrowKeyFromRightLeaf(Node *node, Node *next)` borrows a key from the right neighbor of the given leaf node. It inserts the first key and value from the right neighbor into the given node, and removes the key and value from the right neighbor. It also updates the key in the parent node of the right neighbor if necessary.
    
*   `void borrowKeyFromLeftLeaf(Node *node, Node *prev)` borrows a key from the left neighbor of the given leaf node. It inserts the last key and value from the left neighbor into the given node, and removes the key and value from the left neighbor. It also updates the key in the parent node of the given node if necessary.

*   `void mergeNodeWithRightLeaf(Node *node)` merges the given node with its right neighbor. It appends the keys and values from the right neighbor to the given node, and updates the linked list pointers. It then deletes the right neighbor node.
    
*   `void mergeNodeWithLeftLeaf(Node *node)` merges the given node with its left neighbor. It inserts the keys and values from the left neighbor at the beginning of the `keys` and `values` vectors in the given node, and updates the linked list pointers. It then deletes the left neighbor node.
    
*   `void borrowKeyFromRightInternal(Node *node)` borrows a key from the right neighbor of the given internal node. It inserts the first key and child from the right neighbor into the given node, and removes the key and child from the right neighbor. It also updates the key in the parent node of the right neighbor if necessary.
    
*   `void borrowKeyFromLeftInternal(Node *node)` borrows a key from the left neighbor of the given internal node. It inserts the last key and child from the left neighbor into the given node, and removes the key and child from the left neighbor. It also updates the key in the parent node of the given node if necessary.
    
*   `void mergeNodeWithRightInternal(Node *node)` merges the given internal node with its right neighbor. It appends the keys and children from the right neighbor to the given node, and updates the key in the parent node if necessary. It then deletes the right neighbor node.
    
*   `void mergeNodeWithLeftInternal(Node *node)` merges the given internal node with its left neighbor. It inserts the keys and children from the left neighbor at the beginning of the `keys` and `children` vectors
",,2015-10-11T20:51:10Z,2022-12-30T21:17:07Z,1,1,30,2,"('sayef', 18)",0,0,
cgbystrom/yum-s3-plugin,Yum plugin for accessing protected repositories on Amazon S3,"Work in progress
",,2010-06-13T11:00:56Z,2010-06-13T11:04:17Z,1,1,4,4,"('cgbystrom', 2)",0,0,
rucky2013/b2b2c,java 开源b2b2c多用户电商平台,,,2016-04-20T06:01:21Z,2018-03-29T13:54:28Z,1,1,51,8,"('dounine', 1)",1,1,
filamentgroup/jQuery-Mobile-Themed-DatePicker,This is jQuery UI's datepicker plugin with jQuery Mobile's theming and script handling applied.,":warning: This project is archived and the repository is no longer maintained.

Extends the jQuery UI datepicker to make it suitable for touch devices. 
",,2011-05-24T22:45:25Z,2022-08-31T13:48:48Z,3,1,36,11,"('johnbender', 1), ('Maggie Wachs', 1), ('scottjehl', 1)",3,1,
naskitis/B-trie,"The B-trie and B-tree, written in C, as described in my PhD thesis.","Refereed Cache-Conscious String Data Structures for Strings

This is the complete readme file for my memory-resident string
data structures, as detailed in my PhD Thesis. Depending on your download,
you may only have a selection of these data structures.  

Author:  Dr. Nikolas Askitis.
Email:   askitisn@gmail.com

PUBLICATIONS
--------------------------------------------------------------------------------------------------------------------
These data structures are available from the following refereed publications:

1. B-tries for Disk-based String Management, VLDB Journal, Volume 18, Issue 1, Pages 157 - 179, 2009.  ISSN:1066-8888 
2. Engineering scalable, cache and space efficient tries for strings, VLDB Journal, Published Online, 2010.  DOI: 10.1007/s00778-010-0183-9 ISSN: 1066-8888
3. HAT-Trie: A Cache-Conscious Trie-Based Data Structure For Strings, The 30th International Australasian Computer Science Conference (ACSC), Volume 62, pages 97 - 105, 2007.  ISSN: 1445-1336
4. Cache-conscious collision resolution in string hash tables, The 12th International String Processing and Information Retrieval Conference (SPIRE), LNCS 3772, pages 91 - 102, 2005.  ISSN: 0302-9743
5. Fast and compact hash tables for integer keys, The 32nd International Australasian Computer Science Conference (ACSC), Volume 91, pages 101 - 110, 2009.  ISSN: 1445-1336
6. Redesigning the string hash table, burst trie, and BST to exploit cache, ACM JEA Vol. 15, No. 1, Article 1.7 2011

GENERAL GUIDELINES:
--------------------------------------------------------------------------------------------------------------------

A file to insert or search is first buffered entirely in main-memory to factor-out the cost of fetching 
individual strings from disk.   Hence, it is important to keep the file size small, 
relative to the amount of memory your system has and the size of the data structure.   
Otherwise, the file buffer will occupy most of main memory, forcing the data structure 
to use virtual memory. 

If you want to use a large file, then simply break it up into smaller pieces and 
list the pieces on the command-line, as shown below.

*** You must provide the correct parameters (command-line format) to these data structures, 
    as shown below.  

For accurate results, be sure to run these data structures when your operating system is
under light load.  That is, don't run any other unnecessary software and drop down to
console mode if possible (temporarily stop your graphical user interface like KDE).

Also, please disable power-saving features such as Intel SpeedStep or AMD Cool 'n' Quiet technology. This is to
ensure that your processor(s) are operating at full speed before running the software.
You can find out what speed your processor (cores) are running at using the following command in Linux: less /proc/cpuinfo


DATA STRUCTURES
--------------------------------------------------------------------------------------------------------------------
1.  array BST
2.  standard BST
3.  array hash table        (3 variants)
4.  standard hash table
5.  array burst-trie        (2 variants)
6.  standard burst-trie
7.  standard redblack
8.  standard splay
9.  HAT-trie
10. B-trie
11. B-tree

SOFTWARE VARIANTS
--------------------------------------------------------------------------------------------------------------------
a) Hash tables:

array-hash-exact = array hash table where slots are resized by as many bytes as needed (i.e exact-fit)
array-hash-page  = array hash table where slots are resized in 64-byte blocks.
array-hash-exact-mtf = array hash table with exact-fit and move-to-front on access.
array-hash-32bit-int = array hash table designed for 32-bit integer (binary) keys (with 32-bit integer payload).

b) Burst tries:
The array burst trie also has the same variants, namely the:

array-burst-trie-exact
array-burst-trie-page


PC ARCHITECTURE (AMD 64-bit or Intel 64-bit Processor)
----------------------------------------------------------------------------------------------------------------------
Developed for x86_64 Linux Platforms on an AMD or Intel based processor.
We used Kubuntu 10.04 to compile and prepare the software. 

Currently, my data structures are designed for 64-bit architectures (hence,
they assume that pointers are 8-bytes long).  Please note, in my papers, I (mostly)
used the 32-bit versions, since back then, my primary machine was a 32-bit P4.  Check out
paper number 2, listed above, for reference of performance on a more modern 64-bit processor.


DATA SETS
---------------------------------------------------------------------------------------------------------------------
These (string dictionary) data structures support plain-text ASCII-7 datasets (printable-range). 
Strings can be of variable-length and are null-terminated, one string per line.

For example:

HTML
test
apple
automobile
aeroplane
space
b
a
genome sequence analysis
testing the source
ozsort
test
...


The 32-bit integer (dictionary) data structures support 4-byte integer datasets (in binary format, that is, 
non-human readable). They must appear all in one line. 



EXPERIMENTS
---------------------------------------------------------------------------------------------------------------------

./quick_compare.bsh [optional: user-specified file]

This script will run a ""quick-and-dirty"" benchmark experiment, comparing all these data structures using a user-specified file.

You will need a x86_64 Intel/AMD Linux PC with at least 4GB of RAM to run these experiments.  8GB of RAM is recommended.

Eg:

bunzip2 sampleData.bz2;
./quick_compare.bsh sampleData;


TO RUN:
----------------------------------------------------------------------------------------------------------------------

All data structures share the same command-line interface, as follows:


 [Number of slots or the container size] [[ output file name ]]        


Parameters within  brackets are mandatory, whereas those in [] brackets are only required by the hash table(s) and burst trie(s). 
Parameters in [[ ]] brackets are only required by the B-tree and B-trie.  

1)  Container size:   the number of strings a container must store before it is burst. 
2)  Number of slots:  the number of slots allocated by the hash table (power of 2). 


**************************************************************************************
IMPORTANT: 
            Slot numbers of be of a power of 2 e.g:  65536, 8388608, etc.
            Slot numbers and container sizes must be set to no less than 16.
**************************************************************************************


EXAMPLES:
-----------------------------------------------------------------------------------------------------------------------
./nikolas_askitis_array_bst 1 /mnt/in/data/file1 2 /mnt/in/data/file1 /tmp/other
./standard-bst 1 /mnt/in/data/file1 2 /mnt/in/data/file1 /tmp/other
./nikolas_askitis_array_burst_trie_exact 256 3 file1 file2 file3 1 file2
./nikolas_askitis_hat_trie 32768 3500000 1 dataset 1 dataset
./nikolas_askitis_array_hash 65536 1 skew1.in 1 skew1.in
./nikolas_askitis_btrie output_file 1 file1 1 file2
./nikolas_askitis_btree output_file 1 file1 1 file2

OUTPUT:
------------------------------------------------------------------------------------------------------------------------

The output of all data structures are as follows (in order, from left-to-right):

1) The data structure used:    


2) Total memory (virtual memory): This is the total memory used by the running process, as reported by the operating system. 
                                  This is a true measure of memory consumption, capturing space lost due to fragmentation
                                  and other overheads.   This measure does not include the space taken to buffer the
                                  dataset.  If you use the 'top' Linux command, for example, this will capture the same
                                  information, but with the space occupied by the dataset buffer, which can make it
                                  difficult to see how must space is eaten by the program itself, and not its file buffer. 


3) Estimated memory usage:        The total memory, in megabytes, required by the data structure --- the measure
                                  includes the estimated 8-byte allocation overhead imposed by every call to malloc. It
                                  may be slightly less than or more than the virtual memory usage reported (in step 2).
                                  For the B-tree and B-trie, this represents the total disk space used.

4) Total insertion time:          The total or elapsed time, in seconds, required by the data structure
                                  to insert the files that were specified on the command line.

5) Total search time:             The total or elapsed time, in seconds, required by the data structure to
                                  search the files that were specified on the command line.

6) Number of strings inserted:    Returns the total number of strings stored by the data structure.
                                  IMPORTANT:  the data structure does not maintain duplicates, hence, only
                                  unique strings are inserted.

7) Number of strings searched:    Returns the total number of strings that were found during a search.


8) Number of slots allocated or 
   container threshold:           The number of slots allocated by the hash table or the container threshold (the
                                  number of strings a container can store prior to bursting) of a burst trie.  For
                                  the B-tree and B-trie, this is the bucket size used for leaf nodes, which is
                                  set to 8192 bytes in this release.

9) Additional (optional) info:    Extra information may be displayed, such as growth policy used and whether
                                  move-to-front is enabled.

An example (we map the output to the numbers above):

linux@: ./array-bst 1 28772169  1 28772169 
Array-BST 774.09 764.92 456.12 423.41 28772169 28772169
   (1)    (2)    (3)    (4)    (5)    (6)      (7)

",,2016-11-17T09:25:02Z,2016-11-17T19:14:42Z,1,1,21,1,"('naskitis', 1)",1,1,
feimosi/baguetteBox.js,:zap: Simple and easy to use lightbox script written in pure JavaScript,"baguetteBox.js

[![GitHub Release](https://img.shields.io/github/release/feimosi/baguetteBox.js.svg)](https://github.com/feimosi/baguetteBox.js/releases)
[![MIT License](https://img.shields.io/npm/l/baguettebox.js.svg)](https://github.com/feimosi/baguetteBox.js/blob/dev/LICENSE)
[![dependency Status](https://img.shields.io/badge/dependencies-none-blue.svg)](https://david-dm.org/feimosi/baguetteBox.js)
[![devDependency Status](https://img.shields.io/david/dev/feimosi/baguetteBox.js.svg)](https://david-dm.org/feimosi/baguetteBox.js?type=dev)
[![npm](https://img.shields.io/npm/dm/baguettebox.js.svg)](https://www.npmjs.com/package/baguettebox.js)
[![Build Status](https://travis-ci.org/feimosi/baguetteBox.js.svg?branch=master)](https://travis-ci.org/feimosi/baguetteBox.js)

[![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://paypal.me/feimosi)
[![Twitter](https://img.shields.io/twitter/url/http/shields.io.svg?style=social)](https://twitter.com/intent/tweet?text=Check%20out%20baguetteBox.js%20-%20simple%20and%20easy%20to%20use%20lightbox%20script%20written%20in%20pure%20JavaScript%0Ahttps%3A%2F%2Fgithub.com%2Ffeimosi%2FbaguetteBox.js)
[![Twitter Follow](https://img.shields.io/twitter/follow/feimosi.svg?style=social&label=Follow%20the%20author)](https://twitter.com/feimosi)

Simple and easy to use lightbox script written in pure JavaScript.

[Demo page](https://feimosi.github.io/baguetteBox.js/)

![Demo Page screenshot](https://i.imgur.com/GMmnud0.jpg)

## Table of contents

  * [Features](#features)
  * [Installation](#installation)
  * [Importing](#importing)
  * [Usage](#usage)
  * [Customization](#customization)
  * [API](#api)
  * [Responsive images](#responsive-images)
  * [Compatibility](#compatibility)
  * [Contributing](#contributing)
  * [Donation](#donation)
  * [Credits](#credits)
  * [License](#license)

## Features

* Written in pure JavaScript, no dependencies required
* Multiple-gallery support allows custom options for each
* Supports swipe gestures on touch-screen devices
* Full-screen mode available
* Modern and minimal look
* Image captions support
* Responsive images
* CSS3 transitions
* SVG buttons, no extra files to download
* Around 3.2KB gzipped
* With Accessibility in mind

## Installation

You can use one of the following methods:

### npm

```sh
npm install baguettebox.js --save
```

### Yarn
```sh
yarn add baguettebox.js
```

### Bower

```sh
bower install baguettebox.js --save
```

### CDN
1. Use one of the following CDN providers:
  - https://cdnjs.com/libraries/baguettebox.js
  - https://jsdelivr.com/projects/baguettebox.js

3. Copy URLs of the latest version (both `.js` and `.css` files)

2. Paste the URLs in your HTML file:

  ```html
"">
"" async>
  ```

### Manually

1. Download `baguetteBox.min.css` and `baguetteBox.min.js` files from the `dist` folder.
2. Include them somewhere in your document:

  ```html


  ```

## Importing

### Traditional approach

If you don't use JavaScript modules and include the file with a `` tag, you don't have to import anything explicitly. `baguetteBox` will be available in the global scope.

### CommonJS

```js
const baguetteBox = require('baguettebox.js');
```

### ES2015 modules

```js
import baguetteBox from 'baguettebox.js';
```

### Sass

```scss
@import 'baguettebox.js/dist/baguetteBox.min.css';
```

## Usage

Initialize the script by running:

```js
baguetteBox.run('.gallery');
```

where the first argument is a selector to a gallery (or galleries) containing `a` tags. The HTML code may look like this:

```html

    
        
    
    
        
    
    ...

```

To use captions put a `title` or `data-caption` attribute on the `a` tag.

Note: if you import baguetteBox using the `` tag, remember to run it after the document has loaded:

```html

window.addEventListener('load', function() {
  baguetteBox.run('.gallery');
});

```

## Customization

You can pass an object with custom options as the second parameter.

```js
baguetteBox.run('.gallery', {
    // Custom options
});
```

The following options are available:

| Option | Type | Default | Description |
| --- | --- | --- | --- |
| `captions` | `Boolean` \| `function(element)` | `true` | Display image captions. Passing a function will use a string returned by this callback. The only argument is `a` element containing the image. Invoked in the context of the current gallery array |
| `buttons` | `Boolean` \| `'auto'` | `'auto'` | Display buttons. `'auto'` hides buttons on touch-enabled devices or when only one image is available |
| `fullScreen` | `Boolean` | `false` | Enable full screen mode |
| `noScrollbars` | `Boolean` | `false` | Hide scrollbars when gallery is displayed |
| `bodyClass` | `String` | `'baguetteBox-open'` | Class name that will be appended to the `body` when lightbox is visible (works in IE 10+) |
| `ignoreClass` | `String` | `null` | It will ignore images with given class put on `a` tag |
| `titleTag` | `Boolean` | `false` | Use caption value also in the gallery `img.title` attribute |
| `async` | `Boolean` | `false` | Load files asynchronously |
| `preload` | `Number` | `2` | How many files should be preloaded |
| `animation` | `'slideIn'` \| `'fadeIn'` \| `false` | `'slideIn'` | Animation type |
| `afterShow` | `function` | `null` | Callback to be run after showing the overlay |
| `afterHide` | `function` | `null` | Callback to be run after hiding the overlay |
| `onChange` | `function(currentIndex, imagesCount)` | `null` | Callback to be run when image changes |
| `overlayBackgroundColor` | `String` | `'rgba``(0,0,0,0.8)'` | Background color for the lightbox overlay |
| `filter` | `RegExp` | `/.+\.(gif\|jpe?g\|png\|webp)/i` | Pattern to match image files. Applied to the `a.href` attribute |

## API

### `run(selector, userOptions)`

Initialize baguetteBox.js

- @param `selector` {string} - valid CSS selector used by `querySelectorAll`
- @param `userOptions` {object} - custom options (see [#Customization](#customization))
- @return {array} - an array of gallery objects (reflects elements found by the selector)

### `show(index, gallery)`

Show (if hidden) and move the gallery to a specific index

- @param `index` {number} - the position of the image
- @param `gallery` {array} - gallery which should be opened, if omitted assumes the currently opened one
- @return {boolean} - true on success or false if the index is invalid

Usage:

```js
const gallery = baguetteBox.run('.gallery');
baguetteBox.show(index, gallery[0]);
```

### `showNext`

Switch to the next image

- @return {boolean} - true on success or false if there are no more images to be loaded

### `showPrevious`

Switch to the previous image

- @return {boolean} - true on success or false if there are no more images to be loaded

### `hide`

Hide the gallery

### `destroy`

Remove the plugin with any event bindings

## Responsive images

To use this feature, simply put `data-at-{width}` attributes on `a` tags with a value being the path to the desired image. `{width}` should be the maximum screen width the image can be displayed at. The script chooses the first image with `{width}` greater than or equal to the current screen width for best user experience.
That last `data-at-X` image is also used in the case of a screen larger than X.

Here's an example of what the HTML code can look like:

```html
<a href=""img/2-1.jpg""
  data-at-450=""img/thumbs/2-1.jpg""
  data-at-800=""img/small/2-1.jpg""
  data-at-1366=""img/medium/2-1.jpg""
  data-at-1920=""img/big/2-1.jpg"">
    

```

If you have 1366x768 resolution baguetteBox.js will choose `""img/medium/2-1.jpg""`. If, however, it's 1440x900 it'll choose `""img/big/2-1.jpg""`. Keep the `href` attribute as a fallback (link to a bigger image e.g. of HD size) for older browsers.

## Compatibility

Desktop:
* IE 8+
* Chrome
* Firefox 3.6+
* Opera 12+
* Safari 5+

Mobile:
* Safari on iOS
* Chrome on Android

## Contributing

Feel free to report any issues! If you wish to contribute by fixing a bug or implementing a new feature, please first read the [CONTRIBUTING](./CONTRIBUTING.md) guide.

## Donation

If you find this project useful and want to say thanks, you can buy me a cup of coffee :)

[![](https://www.paypalobjects.com/en_US/i/btn/btn_donateCC_LG.gif)](https://paypal.me/feimosi)

## Credits

Creation of `baguetteBox.js` was inspired by a great jQuery plugin [touchTouch](https://github.com/martinaglv/touchTouch).

Huge thanks for providing a testing platform go to [![BrowserStack](https://i.imgur.com/rlVVZwG.png)](http://browserstack.com/)

## License

Copyright (c) 2018 [feimosi](https://github.com/feimosi/)

This content is released under the [MIT License](https://opensource.org/licenses/MIT).
","'gallery', 'javascript', 'lightbox', 'lightbox-script', 'modal', 'pure-javascript', 'responsive', 'vanilla-javascript'",2014-07-23T08:31:13Z,2023-05-24T08:53:23Z,20,18,2427,93,"('feimosi', 272), ('XhmikosR', 28), ('Alex Drimbe', 9), ('H-Lo', 4), ('louy', 3), ('RomanHotsiy', 3), ('leomelzer', 2), ('Alexandre Stanislawski', 1), ('Chi-teck', 1), ('davidhellmann', 1), ('edkf', 1), ('o-klp', 1), ('LorenzCK', 1), ('leibrug', 1), ('rgalanakis', 1), ('gergo85', 1), ('terrytilley', 1), ('tobaco', 1), ('BartDelrue', 1), ('binarious', 1)",13,12,
eternnoir/ToS_Bot,,"#ToS_Bot

A tower of saviors supporter

![http://i.imgur.com/azNlWUJ.png](http://i.imgur.com/azNlWUJ.png)

#How To Use
1. Install to your Android Device
1. Open ToS_Bot
1. Select Your Device
1. Press Start
1. Go to Game
1. Press Start floating button 

#Support Devices

##Auto
* HTC One M7
* HTC Oone X
* Samsung Galaxy S3
* Samsung Galaxy S2

##Genymotion
* Nexus One 4.1.1 with Google API image [Download Link](https://mega.co.nz/#!dlsCkY6C!ehqo5VnbnNWL98dTn6ySfkeHcmgQ0i6u8Ty-hOhOF3c)

It is very lag in tos version 4.0
##Special Device
* Sony xperia Z 

#Requirements
* https://github.com/eternnoir/ATEC

#IRC
irc://irc.freenode.net/TOS_Auto
",,2013-08-13T18:48:16Z,2014-10-23T07:37:35Z,2,2,22,11,"('eternnoir', 228), ('tp6vup54', 25)",0,0,
roojs/gir-1.1,"Gtk-2  gir's for gir version=""1.1"" - gobject introspection < 0.9.6 -  git checkout GOBJECT_INTROSPECTION_0_9_3 -b branch_GOBJECT_INTROSPECTION_0_9_3 ",,,2010-10-21T14:37:54Z,2010-12-30T13:11:56Z,3,1,64,51,"('roojs', 5), ('Alan Knowles', 1), ('Alan Knowles', 1)",2,0,
scorelab/Bassa,Automated Download Queue for Communities to take the best use of Internet bandwidth ,"![logo](http://gdurl.com/7XYK)

[![Build Status](https://travis-ci.org/scorelab/Bassa.svg?branch=master)](https://travis-ci.org/scorelab/Bassa)
[![Codacy Badge](https://api.codacy.com/project/badge/Grade/7de63c7b9a69448787e8014a12a260b1)](https://www.codacy.com/app/SCoRe-Lab/Bassa?utm_source=github.com&utm_medium=referral&utm_content=scorelab/Bassa&utm_campaign=badger)
[![Docker Build Status](https://img.shields.io/docker/build/scoreucsc/bassa.svg)]()
[![PyPI](https://img.shields.io/pypi/dm/Bassa.svg)](https://pypi.python.org/pypi)
[![PyPI](https://img.shields.io/pypi/v/Bassa.svg)](https://pypi.python.org/pypi)
[![Gitter](https://img.shields.io/gitter/room/nwjs/nw.js.svg)](https://gitter.im/scorelab/scorelab)
[![](https://images.microbadger.com/badges/image/scoreucsc/bassa.svg)](https://microbadger.com/images/scoreucsc/bassa ""Get your own image badge on microbadger.com"")
[![](https://images.microbadger.com/badges/version/scoreucsc/bassa.svg)](https://microbadger.com/images/scoreucsc/bassa ""Get your own version badge on microbadger.com"")
[![](https://images.microbadger.com/badges/commit/scoreucsc/bassa.svg)](https://microbadger.com/images/scoreucsc/bassa ""Get your own commit badge on microbadger.com"")

Automated Download Queue for Enterprise to take the best use of Internet bandwidth

# About 
Bassa solves the problem of wasting internet bandwidth by queuing a download if it is larger than a given threshold value in high traffic and when the traffic is low, it completes the download of the files. After the files are downloaded, the users can get their files from the local servers which do not require external internet bandwidth.

- [Main functionalities](main-functionalities)
- [Installation](installation)
- [Database Setup](database-setup)
- [Test Server](test-server)
- [Bassa UI](bassa-ui)


## Main functionalities
* Provides an interface for users to add their downloads as links or torrent magnet links
* Provide users  an interface to view and download the files in local server
* Provide a rating system to users to rate the files residing in local server
* Automatically start and stop downloading in given time frame
* Automatically clean the disks and make room for new downloads
* Notify user when his/her download is completed
* Mark inappropriate downloads
* Provides admins an interface to deal with inappropriate files

## Installation

Note: Windows users can check the installation guide [here](https://github.com/scorelab/Bassa/wiki/Windows-Installation-Guide).

First clone the Repository 
``` git clone https://github.com/scorelab/Bassa.git```

![gitclone](https://user-images.githubusercontent.com/28682735/35194406-2f6f08e2-fed9-11e7-8411-86d83bed6507.gif)

Use python 3 instead of Python 2

```
  $ ./setup.sh
  $ cd components/core/
  $ sudo python3 setup.py develop
```
![setupsh](https://user-images.githubusercontent.com/28682735/35194409-2ffbca66-fed9-11e7-9242-ffe036067d18.gif)



## Database Setup

1. Type below in a MySql terminal.

```
create database Bassa
```

2. Type below in the root of project.

```
mysql -u root -p  Bassa < Bassa.sql
```

3. Open components/core/DBCon.py and setup database username and password.


## Test Server
```
  $ cd components/core/
  $ python3 Main.py
```
![python3main](https://user-images.githubusercontent.com/28682735/35194408-2fce9136-fed9-11e7-80e6-fac5e6f54bc7.gif)


## Bassa UI

### Install dependencies with


```
$ cd ui/
$ npm install
```

### To start
run `gulp serve`


![gulp_serve](https://user-images.githubusercontent.com/28682735/35194407-2fa172e6-fed9-11e7-9e89-065ecb3cbf87.gif)



In the first time you login, the credentials would be as follows.

- username - rand
- password - pass


![bassaui](https://user-images.githubusercontent.com/28682735/35193753-667c7e0c-fecd-11e7-918f-13ce1d00d055.gif)


### Make sure you have aria2 installed.
run `aria2c --enable-rpc`


![aria2c](https://user-images.githubusercontent.com/28682735/35193755-709e92ee-fecd-11e7-8dd0-412304853c8c.gif)


### How to Use Bassa
* After Setting up Bassa, Login/Register.There are two types of users in Bassa- (1) The Admin and (2) The Normal Users.
* A user can add a link through the webapp and Bassa stores it in the local server right away. This way multiple users can add various links, but the downloads won’t start right away. 
* The organisation admin can start the downloads at a time of his/her liking. 
* Then the users who had added links for certain files can download them from the local servers at a much higher speed.
* You can even watch a video tutorial for the same on [Youtube](https://www.youtube.com/watch?v=NxS8T1EphCA)
### Autoformat JS with Prettier

- [Sublime Text Plugin](https://github.com/jonlabelle/SublimeJsPrettier)
- [Atom Plugin](https://github.com/prettier/prettier-atom)

Find more plugins [here](https://github.com/prettier/prettier#editor-integration)


### Run UI unit tests
```
	$ cd ui/
	$ npm test OR $ yarn test 
```
","'automateddownloads', 'download-file', 'download-manager', 'download-queue', 'downloadqueue', 'entreprise-file-downloader'",2015-05-04T07:01:33Z,2023-12-08T10:20:19Z,33,33,168,23,"('malithsen', 110), ('agentmilindu', 88), ('kmehant', 60), ('paarandika', 56), ('rajikaimal', 37), ('rehrumesh', 36), ('saisankargochhayat', 23), ('padamchopra', 20), ('orkosinha', 12), ('scorpionhiccup', 5), ('hmadhawa', 3), ('iammosespaulr', 3), ('harsh183', 3), ('Asutosh989', 2), ('tharindupr', 2), ('shlokj', 2), ('KaveeshBaddage', 2), ('charithccmc', 2), ('yruwanmalee', 1), ('Benjamin-Mueggenburg', 1), ('azisnaufal', 1), ('uk175', 1), ('Thuan2000', 1), ('codacy-badger', 1), ('tanmayanand44', 1), ('pranayrobo', 1), ('vivonk', 1), ('NilmaPeiris', 1), ('Nuwini', 1), ('lakinduakash', 1), ('ksoftlabs', 1), ('lazypanda10117', 1), ('JaDogg', 1)",15,15,
fiveruns/memcache-client,Seattle.rb's memcache-client 1.5.0 with fixes,"This repository contains the 1.5.0.x source for the FiveRuns memcache-client.

The latest memcache-client 1.6.0 source code can now be found at:

http://github.com/mperham/memcache-client
",,2008-05-20T15:41:09Z,2009-01-15T04:00:35Z,5,4,78,4,"('mperham', 18), ('packagethief', 4), ('radicaled', 1), ('ninjudd', 1), ('Timur Vafin', 1)",3,2,
Nightonke/BoomMenu,A menu which can ... BOOM! - Android,"# BoomMenu 
[![Developer](https://img.shields.io/badge/Developer-Nightonke-red.svg)](https://github.com/Nightonke)
[![Demo](https://img.shields.io/badge/Demo-Download-orange.svg)](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V2.1.1.apk?raw=true)
[![Download](https://api.bintray.com/packages/nightonke/maven/boommenu/images/download.svg)](https://bintray.com/nightonke/maven/boommenu)
[![Lisense](https://img.shields.io/badge/License-Apache%202-lightgrey.svg)](https://www.apache.org/licenses/LICENSE-2.0)

## 2.0.0 Comes Finally

Approximately 8 months ago, I got an inspiration to creating something that can boom and show menu, which I named it Boom-Menu-Button, BMB. But at that time, I just a fresh-man in Android, knowing little about designing. The codes I wrote serveral months ago are ugly and performed low-efficient.

Between months, I always think about BMB and try to write a better design pattern for implements of BMB. My first try is [BMB-iOS](https://github.com/Nightonke/VHBoomMenuButton), which contains more family characteristics, for instance, buttons-alignment, text-inside/outside-button.

And now the BMB-Android 2.0.0 comes.  







## Gradle & Maven
```
compile 'com.nightonke:boommenu:2.1.1'
```
```

  com.nightonke
  boommenu
  2.1.1
  pom

```

## Demo
  
Or by link:  

[Boom V2.1.1 in Github](https://github.com/Nightonke/BoomMenu/blob/master/Apk/BoomMenu%20V2.1.1.apk?raw=true)  

[Boom V2.1.1 in Fir](http://fir.im/boommenubutton)  

## Wiki
Check the [wiki](https://github.com/Nightonke/BoomMenu/wiki) to use BMB.

### Documentation Chapters

1. [Basic Usage](https://github.com/Nightonke/BoomMenu/wiki/Basic-Usage)  
How to use BMB in just several lines of code?  
2. [Simple Circle Button](https://github.com/Nightonke/BoomMenu/wiki/Simple-Circle-Button)  
Add simple circle buttons with just an image for each to BMB.  
    
3. [Text Inside Circle Button](https://github.com/Nightonke/BoomMenu/wiki/Text-Inside-Circle-Button)  
Add text inside circle buttons with a text and image inside for each to BMB.  
    
4. [Text Outside Circle Button](https://github.com/Nightonke/BoomMenu/wiki/Text-Outside-Circle-Button)    
Add text outside circle buttons with a text and image outside for each to BMB.  
    
5. [Ham Button](https://github.com/Nightonke/BoomMenu/wiki/Ham-Button)  
Add ham buttons with with a title, subtitle and image inside for each to BMB.  
    
6. [Share Style](https://github.com/Nightonke/BoomMenu/wiki/Share-Style)  
Make a share-style BMB.
1. [Custom Position](https://github.com/Nightonke/BoomMenu/wiki/Custom-Position)  
    Customize the number and positions of pieces and boom-buttons.  
    
7. [Button Place Alignments](https://github.com/Nightonke/BoomMenu/wiki/Button-Place-Alignments)  
Place all the buttons to anywhere on screen.  
    
    
    
8. [Different Ways to Boom](https://github.com/Nightonke/BoomMenu/wiki/Different-Ways-to-Boom)  
Different animations when the buttons boom or re-boom.  
    
    
9. [Ease Animations for Buttons](https://github.com/Nightonke/BoomMenu/wiki/Ease-Animations-for-Buttons)  
Use different and cute ease-animations for buttons.
1. [Different Order for Buttons](https://github.com/Nightonke/BoomMenu/wiki/Different-Order-for-Buttons)  
Different order enum for boom-buttons.
10. [Other Animations Attributes for Buttons](https://github.com/Nightonke/BoomMenu/wiki/Other-Animations-Attributes-for-Buttons)  
Delay, duration, rotate-degrees, frames...
11. [Click Event and Listener](https://github.com/Nightonke/BoomMenu/wiki/Click-Event-and-Listener)  
Listener for clicking each button or animation-states.
12. [Control BMB](https://github.com/Nightonke/BoomMenu/wiki/Control-BMB)  
Boom or re-boom BMB programmatically.
13. [Use BMB in Action Bar](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-Action-Bar)  
How to put BMB in action bar?
1. [Use BMB in Tool Bar](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-Tool-Bar)  
How to put BMB in tool bar?
14. [Use BMB in List](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-List)  
Matters need attention when you need a BMB in list-view or recycler-view.
15. [Use BMB in Fragment](https://github.com/Nightonke/BoomMenu/wiki/Use-BMB-in-Fragment)  
Example for use BMB in fragment.
16. [Attributes for BMB or Pieces on BMB](https://github.com/Nightonke/BoomMenu/wiki/Attributes-for-BMB-or-Pieces-on-BMB)  
How to change the size or margins of dots on BMB?
17. [Cache Optimization & Boom Area](https://github.com/Nightonke/BoomMenu/wiki/Cache-Optimization-&-Boom-Area)  
What if I want BMB to boom in just its parent-view?
1. [Change Boom Buttons Dynamically](https://github.com/Nightonke/BoomMenu/wiki/Change-Boom-Buttons-Dynamically)  
Change Boom Buttons Dynamically.
1. [Fade Views](https://github.com/Nightonke/BoomMenu/wiki/Fade-Views)  
    Add faded views on BMB.  
    
1. [Version History](https://github.com/Nightonke/BoomMenu/wiki/Version-History)  
What's more for every version?  
18. [Structure for BMB](https://github.com/Nightonke/BoomMenu/wiki/Structure-for-BMB)  
Structure for BMB when I designed it, for sharing and communicating.

## Issues & Feedbacks
Try to tell me the bugs or enhancements about BMB, or contact me with Nightonke@outlook.com / 2584541288@qq.com. Before doing that, having a careful read on [readme](https://github.com/Nightonke/BoomMenu), [wiki](https://github.com/Nightonke/BoomMenu/wiki) and issues is really helpful. 

## ReadMe for Version 1.0.9 or Below
If you still wanna use version 1.0.9 or below, you can find the README below:

[English README](https://github.com/Nightonke/BoomMenu/blob/master/README-EN.md) 
[中文文档](https://github.com/Nightonke/BoomMenu/blob/master/README-ZH.md)

But I strongly suggest you to use the newest version.

## [What I'm Doing](http://huangweiping.me/)
","'animation', 'boom', 'menu'",2016-03-19T12:04:12Z,2023-03-12T07:41:43Z,3,3,5803,179,"('Nightonke', 186), ('GPack1', 7), ('zahansafallwa', 2)",0,0,
smalot/bootstrap-datetimepicker,Both Date and Time picker widget based on twitter bootstrap (supports Bootstrap v2 and v3),"# Deprecation warning!
This repository has been deprecated in favour of [this](https://eonasdan.github.io/bootstrap-datetimepicker/).
",,2012-12-23T15:30:10Z,2019-01-06T18:26:16Z,97,75,3497,156,"('smalot', 139), ('AuspeXeu', 52), ('Christian Vaas', 46), ('Sebastien Malot', 29), ('Sébastien MALOT', 10), ('davidpatters0n', 5), ('Yun Lai', 4), ('root', 4), ('renekorss', 3), ('merekel', 3), ('Stephen Vance', 3), ('Liam Davies', 3), ('khenderick', 3), ('rebornishard', 2), ('j3l11234', 2), ('igame2000', 2), ('ias-dt', 2), ('etomilin', 2), ('booda406', 2), ('shabda', 2), ('riccardonar', 2), ('GBH', 2), ('miguelcobain', 2), ('mCzolko', 2), ('Jirka', 2), ('krazyjakee', 2), ('polinom', 2), ('Gabor Daher', 2), ('corylutton', 2), ('fafa973', 1), ('fy0', 1), ('g00fy-', 1), ('hayk', 1), ('huang-x-h', 1), ('jan-stanek', 1), ('jdenquin', 1), ('krlos2011', 1), ('EclipseLCY', 1), ('duschang27', 1), ('a competent programmer', 1), ('zur4ik', 1), ('Xavier Dutreilh', 1), ('yesmeck', 1), ('Wagner Vaz', 1), ('TheGeoist', 1), ('1player', 1), ('tonytonyjan', 1), ('ytan', 1), ('xiaozhuo', 1), ('vitalets', 1), ('vaas', 1), ('triqi', 1), ('tiagoamaro', 1), ('tanasiciuc', 1), ('sylsaint', 1), ('sphereagency', 1), ('root', 1), ('rokuehne', 1), ('ramon18', 1), ('plandem', 1), ('offthewall', 1), ('mrabbani', 1), ('mcfung', 1), ('someok', 1), ('EvilKraft', 1), ('manufitoussi', 1), ('EdisonXu', 1), ('Drew Batshaw', 1), ('danielsbird', 1), ('dafyk', 1), ('drock', 1), ('7DataBits', 1), ('cthorne66', 1), ('bgelineau', 1), ('bitdeli-chef', 1), ('blaugueux', 1), ('Barry John Williams', 1), ('Baekjoon', 1), ('raisoblast', 1), ('amohammad', 1), ('sergiocampama', 1), ('santiagofs', 1), ('DinkDonk', 1), ('rwhepburn', 1), ('RAndrey', 1), ('pvledoux', 1), ('PeterDaveHello', 1), ('Olivier Ziadé', 1), ('M-Zuber', 1), ('MasterLambaster', 1), ('mbertheau', 1), ('maxxer', 1), ('kkirsche', 1), ('Karl Syvert Løland', 1), ('eximius313', 1), ('jpfaria', 1), ('janhoffmann', 1)",68,55,
B3ST/B3,B3 is a Backbone.js starter theme for WordPress.,"# B3

B3 is a Backbone.js starter theme for WordPress.

It is designed as a launchpad for your own cutting edge themes: so clone it, rename it, hack it and republish it.

## Warning

**B3 is compatible with v1 of the WP API _only_. We're waiting for development on the v2 branch to stabilise before making further changes to this project.**

We recommend that you either use [the version on WordPress.org](https://wordpress.org/plugins/json-rest-api/) or at the very least stick to the [master branch](https://github.com/WP-API/WP-API) to minimize issues.

Also, please bear in mind that B3 is a work in progress and as such we can't (yet) recommend it for production use. Do so at your own risk.

## Getting Started

This brief guide assumes you have at least some familiarity with WordPress and JavaScript development.  We fully intend to make this process as painless as possible, but we still have a few critical features taking precedence.

1. Install and activate the [WP API](https://wordpress.org/plugins/json-rest-api/) plugin.
2. Make sure [pretty permalinks are enabled](http://codex.wordpress.org/Using_Permalinks) on your WordPress install. They are required for the REST API to work.
3. Clone the [B3 REST API Extensions](https://github.com/B3ST/B3-REST-API) repository into your plugins folder and activate the plugin:

    ```
    $ cd your/wordpress/install/wp-content/plugins
    $ git clone https://github.com/B3ST/B3-REST-API.git b3-rest-api
    ```

4. Clone this repository into your themes folder:

    ```
    $ cd your/wordpress/install/wp-content/themes
    $ git clone https://github.com/B3ST/B3.git b3
    ```

5. We're not done yet, we still need to install required Node dependencies (the theme is built automatically at the end):

    ```
    $ cd b3
    $ gem install scss-lint
    $ npm install -g gulp bower requirejs
    $ npm install
    ```

6. Activate the theme. You're ready to start hacking!

## Build Automation

B3 comes with a few [Gulp](http://gulpjs.com/) tasks to automate building and testing:

* `gulp build`: Builds the theme application.
* `gulp watch`: Watches your codebase for changes, triggering a partial rebuild and refreshing the browser.
* `gulp jasmine`: Runs automated Jasmine tests in the browser, with support for live updates.
* `gulp phpunit`: Runs automated PHPUnit tests in the terminal.

### Extra Tasks

You'll need these less often, since most of them are subtasks called by the ones above:

* `gulp bower`: Installs Bower dependencies. This runs on `build`.
* `gulp build:fonts`: Deploys font assets to the public application folder.
* `gulp build:images`: Compresses image assets and deploys them to the public application folder.
* `gulp build:scripts`: Compiles, minifies and deploys JavaScript sources.
* `gulp build:styles`: Compiles, lints, minifies and deploys Sass styles as CSS.
* `gulp build:templates`: Compiles and deploys [Dust.js](https://linkedin.github.io/dustjs/) templates.
* `gulp clean`: Removes all compiled files, leaving only the original sources.
* `gulp jshint`: Lints JavaScript sources.
* `gulp rebuild`: Builds the theme application from scratch.

### Build Configuration

Gulp task parameters (such as file paths and BrowserSync configurations) are provided in a centralized file located at _gulp/config.js_.

## Optimization

By default, the provided Gulp tasks will minify scripts but not concatenate them, leading to dozens of file requests to the server.

To avoid this, you can bundle theme modules for deployment using the [RequireJS Optimizer](http://requirejs.org/docs/optimization.html).

The easiest and fastest way to do this is by using the [r.js](https://github.com/jrburke/r.js) command line utility. If you completed the installation steps at the start of this guide, you should already have it. To package the site for deployment, open a terminal at the theme's root folder and enter:

```
$ r.js -o build.js
```

This will convert most scripts in your theme's _dist_ folder into concatenated versions.

Most scripts will go into _main.js_, the same file your un-optimized theme would load on launch. Files that for any reason were not concatenated into _main.js_ will remain in their original places, ensuring the theme is still able to find them.

r.js will combine external libraries as _infrastructure.js_. This file will probably be larger than your theme, but also less likely to change over time, and so it makes sense to keep it separate to make the most of browser and CDN caches.

## Licensing

We release B3 under an MIT license. This is to make sure you don't run into licensing issues should you decide to repackage portions of the project as a Phonegap/Cordova application.
",,2014-07-25T00:20:01Z,2015-09-01T22:42:28Z,9,4,42,8,"('pcruz', 633), ('Luis Rodrigues', 118), ('Luis Rodrigues', 100), ('goblindegook', 29), ('xipasduarte', 4), ('pcruz7', 3), ('Luís Rodrigues', 2), ('Luís Rodrigues', 1), ('s3rgiosan', 1)",2,1,
flightaware/piaware,Client-side package and programs for forwarding ADS-B data to FlightAware,"PiAware
===

The basic aim of the piaware package is to forward data read from an ADS-B receiver to FlightAware.

It does this using a program, piaware, aided by some support programs.

* piaware - establishes an encrypted session to FlightAware and forwards data
* piaware-config - used to configure piaware like with a FlightAware username and password
* piaware-status - used to check the status of piaware
* faup1090 - run by piaware to connect to dump1090 or some other program producing beast-style ADS-B data and translate between its format and FlightAware's
* fa-mlat-client - run by piaware to gather data for multilateration

This repo is the basis of the piaware Debian install package available
from https://flightaware.com/adsb/piaware/

Building from source
---

This repository provides only part of the overall piaware package.
You must also build fa-mlat-client and faup1090 and put them in the right places.

Please use [piaware_builder](https://github.com/flightaware/piaware_builder) to build the
piaware package; this is a mostly automated build that knows how to assemble and build
the different parts of the piaware pacakge. It is used to build the Raspbian piaware
release packages that FlightAware provides. It should also work on other Debian-based systems.

piaware program
---

The piaware program establishes a compressed, encrypted TLS connection to FlightAware and authenticates
either by MAC address, or by a registered FlightAware username (or email address) and password.

It then starts faup1090 to translate ADS-B data from a raw Beast-format feed on port 30005 to a filtered
ADS-B format. The filtered data is uploaded to FlightAware over the previously established TLS
connection.

Every five minutes piaware also sends a message containing basic health information about the local machine
such as system clock, CPU temperature, CPU load, basic filesystem capacity and system uptime.

Piaware will start the multilateration client fa-mlat-adept on request. fa-mlat-client extracts raw messages
from port 30005 and selectively forwards them by UDP to the FlightAware servers. UDP is used as this
message forwarding is time-sensitive, but it's not too important if some messages get dropped. Multilateration
control messages are sent over the main piaware TCP connection.

Piaware uses several techniques to keep the connection established and disconnect and reconnect if something goes wrong.


piaware-config program
---

piaware-config provides a way for you to configure piaware's settings to control authentication, updates, and
multilateration.

The configuration is read once when piaware starts. If you change piaware's configuration, you should then restart
piaware by:

```
$ sudo service piaware restart
```

Displaying the current configuration
---

Running piaware-config with no arguments will show the current configuration:

```
$ piaware-config
```

The ""-showall"" argument will show all settings, including those that are using the default values:

```
$ piaware-config -showall
```

Configuring updates
---

To configure whether piaware will accept requests for automatic (requested by FlightAware) or manual (requested
by you via the FlightAware website control panel) updates and restarts:

```
# disable auto updates:
$ sudo piaware-config allow-auto-updates no
# disable manual updates:
$ sudo piaware-config allow-manual-updates no
```

Updates default to enabled for Piaware sdcard images, and disabled for package installs.

Configuring multilateration support
---

Multilateration data is sent to FlightAware by default. To disable it:

```
# disable multilateration:
$ sudo piaware-config allow-mlat no
```

Configuring multilateration results
---

By default, multilateration positions resulting from the data that you feed to FlightAware
are returned to you by sending them to the local dump1090 process on port 30104; dump1090
will then include them on the web map it generates.

There are two controls for this. There is an overall enable/disable
control that can be used to entirely disable returning results if they are not needed:

```
$ sudo piaware-config mlat-results no
```

If you want to send the results elsewhere, you can modify where they are sent and the format used:

```
  # Connect to localhost:30104 and send multilateration results in Beast format.
  # Listen on port 310003 and provide multilateration results in Basestation format to anyone who connects

$ sudo piaware-config mlat-results-format ""beast,connect,localhost:30104 basestation,listen,31003""
```

The default configuration now connects to port 30104, not 30004. The default FlightAware dump1090 configuration has
been updated to match this. This change is to avoid accidentally feeding mlat results to an older dump1090
that is not mlat-aware and might end up feeding the results to places you don't want to feed them to. If you really
do want to feed to port 30004, and you know that's not going to cause problems with mlat results going where they
shouldn't, you can return to the older behaviour by:

```
$ sudo piaware-config mlat-results-format ""beast,connect,localhost:30004""
```

piaware-status program
---

piaware-status will examine your system and try to figure out what's going on.  It will report on whether dump1090, faup1090 and piaware are running or not and it will identify what program, if any, is producing data on port 30005 and whether or not piaware is connected to FlightAware.

log file
---

piaware logs to the file **/var/log/piaware.log**.  This is rotated weekly; older logs are at **/var/log/piaware.log.0**, **/var/log/piaware.log.1**, etc.

fa_adept_client package
---

The fa_adept_client package provides a class library for being a FlightAware aviation data exchange protocol (ADEPT) client.

fa_adept_config package
---

The fa_adept_config package provides functions for reading and writing the piaware config file.

piaware package
---

The piaware package provides functions used by various of the piaware programs.

systemd service file
---

piaware is started as a systemd service (""piaware.service""). It can be started and stopped with:

    sudo systemctl start piaware
    sudo systemctl stop piaware
    sudo systemctl restart piaware

The current state can be checked with:

    systemctl status piaware


FlightAware
---
FlightAware has released over a dozen applications  (under the free and liberal BSD license) into the open source community. FlightAware's repositories are available on GitHub for public use, discussion, bug reports, and contribution. Read more at https://flightaware.com/about/code/

",,2014-08-27T16:32:36Z,2023-11-10T08:30:10Z,16,11,471,91,"('mutability', 515), ('lehenbauer', 173), ('eric1tran', 97), ('Eric Tran', 28), ('Taylor Vaughn', 8), ('dbaker', 5), ('TaylorVaughn', 5), ('brookst', 5), ('toofishes', 4), ('eric.tran@flightaware.com', 3), ('anish', 3), ('Daniel Baker', 2), ('n2aws', 1), ('saiarcot895', 1), ('smkelly', 1), ('dschaper', 1)",4,4,
liuyangming/ByteTCC,ByteTCC is a distributed transaction manager based on the TCC(Try/Confirm/Cancel) mechanism. It’s compatible with the JTA specification. User guide: https://github.com/liuyangming/ByteTCC/wiki,"﻿
**ByteTCC** is an implementation of Distributed Transaction Manager, based on Try-Confirm-Cancel (TCC) mechanism. 

**ByteTCC** is comptible with JTA and could be seamlessly integrated with Spring and other Java containers.


## 1. Quick Start

#### 1.1 Add maven depenency
###### 1.1.1. Spring Cloud
```xml

	org.bytesoft
	bytetcc-supports-springcloud
	0.5.12

```
###### 1.1.2. dubbo
```xml

	org.bytesoft
	bytetcc-supports-dubbo
	0.5.12

```

#### 1.2 Compose a business service
```java
@Service(""accountService"")
@Compensable(
  interfaceClass = IAccountService.class 
, confirmableKey = ""accountServiceConfirm""
, cancellableKey = ""accountServiceCancel""
)
public class AccountServiceImpl implements IAccountService {

	@Resource(name = ""jdbcTemplate"")
	private JdbcTemplate jdbcTemplate;

	@Transactional
	public void increaseAmount(String accountId, double amount) throws ServiceException {
	    this.jdbcTemplate.update(""update tb_account set frozen = frozen + ? where acct_id = ?"", amount, acctId);
	}

}
```


#### 1.3 Compose a confirm service
```java
@Service(""accountServiceConfirm"")
public class AccountServiceConfirm implements IAccountService {

	@Resource(name = ""jdbcTemplate"")
	private JdbcTemplate jdbcTemplate;

	@Transactional
	public void increaseAmount(String accountId, double amount) throws ServiceException {
	    this.jdbcTemplate.update(""update tb_account set amount = amount + ?, frozen = frozen - ? where acct_id = ?"", amount, amount, acctId);
	}

}
```


#### 1.4 Compose a cancel service
```java
@Service(""accountServiceCancel"")
public class AccountServiceCancel implements IAccountService {

	@Resource(name = ""jdbcTemplate"")
	private JdbcTemplate jdbcTemplate;

	@Transactional
	public void increaseAmount(String accountId, double amount) throws ServiceException {
	    this.jdbcTemplate.update(""update tb_account set frozen = frozen - ? where acct_id = ?"", amount, acctId);
	}

}
```


## 2. Documentation & Samples
* [Document](https://github.com/liuyangming/ByteTCC/wiki)
* [Sample](https://github.com/liuyangming/ByteTCC-sample)



## 3. Features
* support declarative transaction management
* support normal transaction, TCC transaction, compensating service transaction
* support distributed transaction scenarios. e.g. multi-datasource, cross-applications and cross-servers transaction
* support long live transaction
* support Dubbo framework
* support Spring Cloud
* provide solutions for service idempotence in framework layer


## 4. Contact Me
If you have any questions or comments regarding this project, please feel free to contact me at:

1. send mail to _[bytefox#126.com](bytefox@126.com)_
~OR~
2. add Tecent QQ group 537445956/606453172/383515467

We will review all the suggestions and implement good ones in future release.
","'distributed-transaction', 'dubbo', 'jta', 'spring-cloud', 'tcc', 'transaction'",2016-02-12T11:51:14Z,2022-04-15T13:50:00Z,5,2,2891,258,"('liuyangming', 523), ('liuyangming9f', 16), ('Alagu Swrnam Karruppiah', 9), ('icefox', 3), ('liuyangming', 2)",0,0,
Clans/FloatingActionButton,Android Floating Action Button based on Material Design specification,"# WARNING! FURTHER DEVELOPMENT AND SUPPORT IS DISCONTINUED.
# FloatingActionButton
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/com.github.clans/fab/badge.svg)](https://maven-badges.herokuapp.com/maven-central/com.github.clans/fab) [![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Clans%2FFloatingActionButton-blue.svg?style=flat)](http://android-arsenal.com/details/1/1684)

Yet another implementation of [Floating Action Button](http://www.google.com/design/spec/components/buttons.html#buttons-floating-action-button) for Android with lots of features.

# Requirements
The library requires Android **API Level 14+**.

# Demo
Watch a short **[Demo Video](https://youtu.be/XngUY3PN1IQ)** on YouTube or try it using **[Android simulator in the browser](https://appetize.io/app/ffreudbwmyedw5trzhyjknd2jg)** on Appetize.io.  
Sample APK can be found in **[Releases](https://github.com/Clans/FloatingActionButton/releases)** section.

# Screenshots
![Main screen](/screenshots/main_screen.png) ![Menu closed](/screenshots/menu_closed.png) ![Menu default opened](/screenshots/menu_default_opened.png) ![Menu custom opened](/screenshots/menu_custom_opened.png) ![Menu mini opened](/screenshots/menu_mini_opened.png) ![Menu right opened](/screenshots/menu_right_opened.png) ![Menu down opened](/screenshots/menu_down_opened.png) ![Progress background](/screenshots/progress_background.png) ![Progress no background](/screenshots/progress_no_background.png)

# Features
- Ripple effect on Android Lollipop devices
- Option to set custom **normal**/**pressed**/**ripple** colors
- Option to set custom shadow color and offsets
- Option to disable shadow for buttons and (or) labels
- Option to set custom animations
- Option to set custom icon drawable
- Support for **normal** `56dp` and **mini** `40dp` button sizes
- Custom FloatingActionMenu icon animations
- Option to expand menu up and down
- Option to show labels to the left and to the right of the menu
- Option to show circle progress on `FloactinActionButton`
- Option to add button to the `FloatingActionMenu` programmatically
- Option to dim the `FloatinActionMenu`'s background
- *Option to remove all buttons from the `FloatingActionMenu`*
- *Option to set a label for the `FloatingActionMenu`'s button*

# Usage
Add a dependency to your `build.gradle`:
```
dependencies {
    compile 'com.github.clans:fab:1.6.4'
}
```
Add the `com.github.clans.fab.FloatingActionButton` to your layout XML file.
```XML
<FrameLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    xmlns:fab=""http://schemas.android.com/apk/res-auto""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent"">

    <ListView
        android:id=""@+id/list""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent"" />

    <com.github.clans.fab.FloatingActionButton
        android:id=""@+id/fab""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_gravity=""bottom|right""
        android:layout_marginBottom=""8dp""
        android:layout_marginRight=""8dp""
        android:src=""@drawable/ic_menu""
        fab:fab_colorNormal=""@color/app_primary""
        fab:fab_colorPressed=""@color/app_primary_pressed""
        fab:fab_colorRipple=""@color/app_ripple""/>


```
You can set an icon for the **FloatingActionButton** using `android:src` xml attribute. Use drawables of size `24dp` as specified by [guidlines](http://www.google.com/design/spec/components/buttons.html#buttons-floating-action-button). Icons of desired size can be generated with [Android Asset Studio](http://romannurik.github.io/AndroidAssetStudio/icons-generic.html).

### Floating action button
Here are all the **FloatingActionButton**'s xml attributes with their **default values** which means that you don't have to set all of them:
```XML
<com.github.clans.fab.FloatingActionButton
        android:id=""@+id/fab""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_gravity=""bottom|right""
        android:layout_marginBottom=""8dp""
        android:layout_marginRight=""8dp""
        android:src=""@drawable/your_icon_drawable""
        app:fab_colorNormal=""#DA4336""
        app:fab_colorPressed=""#E75043""
        app:fab_colorRipple=""#99FFFFFF""
        app:fab_showShadow=""true""
        app:fab_shadowColor=""#66000000""
        app:fab_shadowRadius=""4dp""
        app:fab_shadowXOffset=""1dp""
        app:fab_shadowYOffset=""3dp""
        app:fab_size=""normal""
        app:fab_showAnimation=""@anim/fab_scale_up""
        app:fab_hideAnimation=""@anim/fab_scale_down""
        app:fab_label=""""
        app:fab_progress_color=""#FF009688""
        app:fab_progress_backgroundColor=""#4D000000""
        app:fab_progress_indeterminate=""false""
        app:fab_progress_max=""100""
        app:fab_progress=""0""
        app:fab_progress_showBackground=""true""/>
```
All of these **FloatingActionButton**'s attributes has their corresponding getters and setters. So you can set them **programmatically**.

### Floating action menu
Here are all the **FloatingActionMenu**'s xml attributes with their **default values** which means that you don't have to set all of them:
```XML
<com.github.clans.fab.FloatingActionMenu
        android:id=""@+id/menu""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_alignParentBottom=""true""
        android:layout_alignParentRight=""true""
        android:layout_marginRight=""10dp""
        android:layout_marginBottom=""10dp""
        android:layout_marginLeft=""10dp""
        fab:menu_fab_size=""normal""
        fab:menu_showShadow=""true""
        fab:menu_shadowColor=""#66000000""
        fab:menu_shadowRadius=""4dp""
        fab:menu_shadowXOffset=""1dp""
        fab:menu_shadowYOffset=""3dp""
        fab:menu_colorNormal=""#DA4336""
        fab:menu_colorPressed=""#E75043""
        fab:menu_colorRipple=""#99FFFFFF""
        fab:menu_animationDelayPerItem=""50""
        fab:menu_icon=""@drawable/fab_add""
        fab:menu_buttonSpacing=""0dp""
        fab:menu_labels_margin=""0dp""
        fab:menu_labels_showAnimation=""@anim/fab_slide_in_from_right""
        fab:menu_labels_hideAnimation=""@anim/fab_slide_out_to_right""
        fab:menu_labels_paddingTop=""4dp""
        fab:menu_labels_paddingRight=""8dp""
        fab:menu_labels_paddingBottom=""4dp""
        fab:menu_labels_paddingLeft=""8dp""
        fab:menu_labels_padding=""8dp""
        fab:menu_labels_textColor=""#FFFFFF""
        fab:menu_labels_textSize=""14sp""
        fab:menu_labels_cornerRadius=""3dp""
        fab:menu_labels_colorNormal=""#333333""
        fab:menu_labels_colorPressed=""#444444""
        fab:menu_labels_colorRipple=""#66FFFFFF""
        fab:menu_labels_showShadow=""true""
        fab:menu_labels_singleLine=""false""
        fab:menu_labels_ellipsize=""none""
        fab:menu_labels_maxLines=""-1""
        fab:menu_labels_style=""@style/YourCustomLabelsStyle""
        fab:menu_labels_position=""left""
        fab:menu_openDirection=""up""
        fab:menu_backgroundColor=""@android:color/transparent""
        fab:menu_fab_label=""your_label_here""
        fab:menu_fab_show_animation=""@anim/my_show_animation""
        fab:menu_fab_hide_animation=""@anim/my_hide_animation"">

        <com.github.clans.fab.FloatingActionButton
            android:id=""@+id/menu_item""
            android:layout_width=""wrap_content""
            android:layout_height=""wrap_content""
            android:src=""@drawable/ic_star""
            fab:fab_size=""mini""
            fab:fab_label=""Menu item 1"" />

    
```

If you're using custom style for labels - other labels attributes will be ignored.

Labels shadow preferences depends on their corresponding **FloatingActionButtons**' shadow preferences.

For more usage examples check the **sample** project.

# Changelog
Please see the [Changelog](https://github.com/Clans/FloatingActionButton/wiki/Changelog) page to see what's recently changed.

# Credits
I used [android-floating-action-button](https://github.com/futuresimple/android-floating-action-button) library by Jerzy Chalupski as a base for development.

# License
```
Copyright 2015 Dmytro Tarianyk

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
","'android', 'floatingactionbutton'",2015-03-21T12:36:16Z,2019-07-11T20:43:07Z,9,6,5231,173,"('Clans', 131), ('Dmytro Tarianyk', 15), ('rgabrysiak', 2), ('anothem', 1), ('cziemba', 1), ('Sean McQuillan', 1), ('Tankery Chen', 1), ('zsoltk', 1), ('jzeferino', 1)",6,4,
gistflow/gistflow,OpenSource code of Gistflow's first version,"# Important notice

> Since 01.01.2014 Gistflow was updated and goes private. **This code is outdated**.

#### Gistflow - social learning. [![Build Status](https://secure.travis-ci.org/gistflow/gistflow.png)](http://travis-ci.org/gistflow/gistflow) [![Code Climate](https://codeclimate.com/badge.png)](https://codeclimate.com/github/gistflow/gistflow)

Micro-blog platform for developers inspired by [Github:Gist](http://gist.github.com) and [Twitter](http://twitter.com).

#### Contributing

You are always welcome to contribute or create issue. Checkout [issues page](https://github.com/gistflow/gistflow/issues).

#### Setup

* git clone
* bundle
* cp config/database.yml.example config/database.yml
* configure your database.yml file
* be sure you have [postgres](http://russbrooks.com/2010/11/25/install-postgresql-9-on-os-x) and [redis](https://github.com/defunkt/resque#installing-redis) installed and launched
* rake db:setup
* download and run [ElasticSearch](http://www.elasticsearch.org) (simply `brew install elasticsearch` if you're on MacOSx and follow instructions)

##### Github Authorization on your local machine

You should run app at `http://gistflow.dev/` on the `:80` port to speak with GitHub omniauth freely. [Pow](http://pow.cx/) and [Powder](https://github.com/rodreegez/powder) will help you much with it.

```
curl get.pow.cx | sh
gem install powder
powder link
```

#### Testing

Every new feature comes with bunch of rspec and capybara tests. Be sure to write all necessary tests and launch `rspec .` to check all of them passed.

#### Contributors

* [Jan Bernacki](https://github.com/releu) (releu)
* [Anatoli Makarevich](https://github.com/makaroni4) (makaroni4)
* [Nick Shebanov](https://github.com/killthekitten) (killthekitten)
* [Vasilij Melnychuk](https://github.com/SqREL) (SqREL)
* [Mac Shifford](https://github.com/shiroginne) (shiroginne)

#### License

The source code for Gistflow is available under the [Creative Commons Attribution-NonCommercial 3.0 Unported License](http://creativecommons.org/licenses/by-nc/3.0)
",,2012-01-25T15:03:50Z,2022-10-05T22:45:18Z,14,8,112,10,"('releu', 903), ('makaroni4', 379), ('killthekitten', 11), ('Alexander Maslov', 3), ('Alexander', 2), ('KL-7', 2), ('SqREL', 2), ('Andrew Savill', 1), ('harrykiselev', 1), ('Jan Bernacki', 1), ('Johnson Wang', 1), ('shiroginne', 1), ('Trung Lê', 1), ('DNNX', 1)",7,3,
buildroot/buildroot,"Buildroot, making embedded Linux easy. Note that this is not the official repository, but only a mirror. The official Git repository is at https://gitlab.com/buildroot.org/buildroot/. Do not open issues or file pull requests here.","Buildroot is a simple, efficient and easy-to-use tool to generate embedded
Linux systems through cross-compilation.

The documentation can be found in docs/manual. You can generate a text
document with 'make manual-text' and read output/docs/manual/manual.text.
Online documentation can be found at http://buildroot.org/docs.html

To build and use the buildroot stuff, do the following:

1) run 'make menuconfig'
2) select the target architecture and the packages you wish to compile
3) run 'make'
4) wait while it compiles
5) find the kernel, bootloader, root filesystem, etc. in output/images

You do not need to be root to build or run buildroot.  Have fun!

Buildroot comes with a basic configuration for a number of boards. Run
'make list-defconfigs' to view the list of provided configurations.

Please feed suggestions, bug reports, insults, and bribes back to the
buildroot mailing list: buildroot@buildroot.org
You can also find us on #buildroot on OFTC IRC.

If you would like to contribute patches, please read
https://buildroot.org/manual.html#submitting-patches
",,2013-04-29T16:03:25Z,2024-06-17T05:54:49Z,1597,341,2557,120,"('ffontaine', 7663), ('jacmet', 7225), ('bkuhls', 6324), ('gustavoz', 5610), ('tpetazzoni', 5564), ('yann-morin-1998', 2777), ('jameshilliard', 1757), ('fperrad', 1697), ('RomainNaour', 1547), ('baruchsiach', 1312), ('pseiderer', 1264), ('ErikBAndersen', 1163), ('culssw', 955), ('aldot', 924), ('aduskett', 888), ('arnout', 883), ('Vicente Olivert Riera', 867), ('giuliobenetti', 769), ('yegorich', 661), ('asafkahlon', 588), ('patrickdepinguin', 565), ('joerg-krause', 536), ('jolivain', 446), ('tSed', 445), ('vapier', 437), ('fabioestevam', 415), ('wbx-github', 390), ('paralin', 337), ('ricardo-martincoski', 326), ('angeloc', 320), ('rc-matthew-l-weber', 291), ('hthiery', 283), ('lucaceresoli', 278), ('maximeh', 263), ('Jerzy Grzegorek', 261), ('aperezdc', 256), ('pauliuszaleckas', 235), ('pevik', 229), ('gibsson', 225), ('spdawson', 222), ('elebihan', 206), ('fabio-porcedda', 198), ('texierp', 194), ('martinbark', 185), ('John Voltz', 172), ('joudinet', 169), ('danomimanchego123', 163), ('daniel-lang', 161), ('Adam Duskett', 158), ('heinemml', 155), ('gtalis', 154), ('mniestroj', 152), ('sjhill71', 148), ('Will Wagner', 145), ('abrodkin', 145), ('Manuel Novoa III', 141), ('geomatsi', 135), ('Carlos Santos', 133), ('trabucayre', 129), ('Fabio Estevam', 123), ('markcorbinuk', 120), ('jerome-pouiller', 118), ('jcmvbkbc', 117), ('passgat', 117), ('casantos', 116), ('bbilas', 115), ('fhunleth', 114), ('nealfrager', 114), ('sergioprado', 112), ('nolange', 107), ('AndreRH', 107), ('AxelLin', 104), ('Sven Neumann', 103), ('gblach', 103), ('troglobit', 102), ('fidomax', 99), ('etienne-lms', 91), ('Rahul Bedarkar', 90), ('gportay', 85), ('Yann E. MORIN', 84), ('jfloret', 83), ('djdeath', 83), ('cpackham', 82), ('Titouan Christophe', 81), ('Hans-Christian Egtvedt', 80), ('nkukard', 80), ('rahul-bedarkar', 76), ('mripard', 75), ('sebszymanski', 75), ('marcusfolkesson', 73), ('Jörg Krause', 71), ('rjbarnet', 71), ('brgl', 68), ('Carlos Santos', 68), ('chrismcc-gmail', 68), ('Spenser309', 64), ('ymorin-orange', 64), ('nismoryco', 63), ('correa', 62), ('shenki', 61), ('ThomasDevoogdt', 61), ('jakogut', 60), ('vfazio', 60), ('vstehle', 60), ('allannielsen', 59), ('Hamish Moffatt', 59), ('enunes', 57), ('Markos Chandras', 56), ('ldesroches', 55), ('Ivan Kuten', 54), ('MartinBanky', 54), ('fatih-asici', 54), ('David Anders', 54), ('Daniel Laird', 54), ('michael1413', 53), ('willnewton', 53), ('blmaier', 53), ('zgyarmati', 52), ('Nicolas Cavallari', 51), ('pbassa', 50), ('EvgeniiDidin', 50), ('bthebaudeau', 49), ('arsv', 48), ('pcercuei', 47), ('atenart', 47), ('alistair23', 46), ('kmaincent', 46), ('rmelotte', 45), ('ezequielgarcia', 45), ('openedev', 45), ('merge', 45), ('sviau', 43), ('olivierschonken', 42), ('alexandrebelloni', 41), ('maxnet', 41), ('Julien Boibessot', 41), ('gwbres', 41), ('dickolsson', 41), ('sagaertj', 40), ('vkochan', 40), ('Yegor Yefremov', 39), ('Marcus Hoffmann', 39), ('James Knight', 39), ('Shyam Saini', 38), ('ndreys', 38), ('eaibmz', 38), ('clshotwe', 37), ('johnkeeping', 37), ('Zakharov Vlad', 37), ('jdknight', 36), ('lkundrak', 36), ('mischajonker', 36), ('rrebello', 36), ('daggs1', 36), ('legraps', 35), ('titouanc', 35), ('gevans', 35), ('unilogicbv', 34), ('mwalle', 34), ('LeSpocky', 33), ('Jesseeee', 33), ('kkasza', 33), ('eepp', 33), ('agners', 33), ('ssorensen', 31), ('Markus Mayer', 31), ('aleksander0m', 31), ('Jared Bents', 30), ('Julien BOIBESSOT', 30), ('minimaxwell', 30), ('hcodina', 29), ('Ryan Barnett', 29), ('mikebwilliams', 29), ('lfelten', 28), ('Jerzy Grzegorek', 28), ('Andreas Ziegler', 28), ('anthony-kolesov', 27), ('mcondarelli', 27), ('jubalh', 27), ('steho', 27), ('zhaojh329', 26), ('QSchulz', 26), ('tianyuanhao', 26), ('jcEcaSinters', 26), ('cmchao', 25), ('Thomas Lundquist', 25), ('jorisoffouga', 25), ('glevand', 25), ('bjornfor', 24), ('mrothNET', 24), ('philenotfound', 24), ('vivien', 24), ('sfroberg', 23), ('cvubrugier', 23), ('H Hartley Sweeten', 23), ('jugurthab', 23), ('sambltc', 23), ('Trent Piepho', 23), ('aimukhin', 22), ('joshua-henderson', 22), ('tycho', 22), ('grandwolf', 22), ('egorenar', 21), ('chrisdimich', 21), ('nicolas-s', 21), ('Nicolas Carrier', 21), ('iazz', 21), ('guoren83', 21), ('bheading', 20), ('Davide Viti', 20), ('ffainelli', 20), ('kelvincheung', 20), ('nandra', 20), ('frankvanbever', 20), ('ghermant', 19), ('boucman', 19), ('yairbenavraham', 19), ('wberrier', 19), ('glebm', 19), ('ehristev', 19), ('ismaell', 19), ('Carsten Schoenert', 19), ('erthink', 18), ('ndilieto', 18), ('mirzak', 18), ('mlang', 18), ('kadambininema', 18), ('Joeri Barbarien', 18), ('dlech', 18), ('zonque', 18), ('aussedatlo', 17), ('agamez', 17), ('Valentin Korenblit', 17), ('Sven Neumann', 17), ('nroach44', 17), ('Pekkari', 17), ('Jeremy Rosen', 17), ('Jan Viktorin', 17), ('Guido Martínez', 17), ('edgar-bonet', 17), ('Victor Huesca', 16), ('gitvb', 16), ('sonicz', 16), ('masahir0y', 16), ('jlsalvador', 16), ('jlijssen', 16), ('hbouttev', 16), ('ftapajos', 16), ('ckhardin', 16), ('Benoît Allard', 16), ('angt', 16), ('andy-shev', 16), ('vkorenblit', 15), ('nathanlynch', 15), ('mlyszczek', 15), ('MJNowakowski', 15), ('mthuurne', 15), ('simias', 15), ('benavrhm', 15), ('PeterMacleodThompson', 14), ('vancepym', 14), ('paguilar', 14), ('Jesper Baekdahl', 14), ('eiffel-fl', 14), ('rdkehn', 14), ('bryanbrattlof', 14), ('andrwwbstr', 14), ('lp35', 13), ('sammj', 13), ('Will Newton', 13), ('Vineet Gupta', 13), ('rgenoud', 13), ('pmundt', 13), ('Paul Cercueil', 13), ('Matt Weber', 13), ('net147', 13), ('jk-ozlabs', 13), ('plagnioj', 13), ('Adam Duskett', 13), ('shmuelzon', 13), ('bagasme', 13), ('dbachelart', 13), ('dgouarin', 12), ('huth', 12), ('Steve Kenton', 12), ('sen-h', 12), ('Ricardo Martincoski', 12), ('Nikolay Dimitrov', 12), ('gentoo-root', 12), ('ts-kris', 12), ('Damien Le Moal', 12), ('legoater', 12), ('czankel', 12), ('camh-', 12), ('Arnar Mar Sigurðsson', 12), ('Maeva Manuel', 11), ('Marcus Hoffmann', 11), ('solarx', 11), ('havmind', 11), ('pieterjanc', 11), ('smvoss-collins', 11), ('Sebastian Weyer', 11), ('Thomas Preston', 11), ('Tian Yuanhao', 11), ('JoelsonCarl', 11), ('akkusativk', 11), ('JGrossholtz', 11), ('jktjkt', 11), ('ortogonal', 11), ('0intro', 11), ('alukichev', 11), ('Daniel Nyström', 11), ('Daniel Mack', 11), ('cyrilbur-ibm', 11), ('chhitz', 11), ('darander', 11), ('yurovsky', 11), ('trishika', 11), ('Nylon Chen', 10), ('Raphael Pavlidis', 10), ('bobrofon', 10), ('stefanb2', 10), ('sunielmahesh', 10), ('Yuvaraj Patil', 10), ('hundeboll', 10), ('BubuOT', 10), ('Laurent Hartanerot', 10), ('hsiangkao', 10), ('lbmeng', 10), ('ashcharles', 10), ('Arnaud Rébillout', 10), ('antocout', 10), ('Adam Duskett', 10), ('sverdlin', 9), ('sonologic', 9), ('kurt-vd', 9), ('klutchell', 9), ('chickenkiller', 9), ('floatious', 9), ('Patrick Ziegler', 9), ('PeeJay', 9), ('Brainik', 9), ('rarbab', 9), ('Romain Perier', 9), ('vsergeev', 9), ('snickl', 9), ('skif-web', 9), ('clementleger', 9), ('clementperon', 9), ('codyps', 9), ('pdp7', 9), ('felipec', 9), ('Florian La Roche', 9), ('Hollis Blanchard', 9), ('sairon', 9), ('jens-maus', 9), ('joaopmpinto', 9), ('Johan Sagaert', 9), ('julianscheel', 9), ('kamel-bouhara', 9), ('Marleen Vos', 8), ('kraai', 8), ('maxim2405', 8), ('mpetazzoni', 8), ('syntheticpp', 8), ('akennedy-adtran', 8), ('richardbraun', 8), ('skazemi', 8), ('Sebastien Bourdelin', 8), ('lyctw', 8), ('commodo', 8), ('anssih', 8), ('ChrisLesiak', 8), ('tomoveu', 8), ('gilles-chanteperdrix', 8), ('gclement', 8), ('jamiegibbons', 8), ('jkraval', 8), ('kbingham', 8), ('Lada Trimasova', 8), ('deltabeard', 8), ('Marcelo Gutiérrez(UTN/FRH)', 8), ('AlexTMjugador', 7), ('ltekieli', 7), ('Malte Starostik', 7), ('mcpat', 7), ('panicking', 7), ('xuminready', 7), ('Phlogistique', 7), ('ps-m', 7), ('Rafał Miłecki', 7), ('smvoss', 7), ('simark', 7), ('Simon Rowe', 7), ('cockroach', 7), ('blunderer', 7), ('Vincent Stehlé', 7), ('Will Newton', 7), ('robadenshi', 7), ('it-klinger', 7), ('Andrew Ruder', 7), ('dywisor', 7), ('André Hentschel', 7), ('atharvalele', 7), ('cdhmanning', 7), ('Christian Stewart via buildroot', 7), ('cpriouzeau', 7), ('ed-blake1', 7), ('ecorm', 7), ('imrehg', 7), ('gregd72002', 7), ('ggardet', 7), ('Ivan Sergeev', 7), ('joakim-tjernlund', 7), ('Joerg Krause', 7), ('Refik Tuzakli', 6), ('orempel', 6), ('michaelrommel', 6), ('mohicks', 6), ('martin-cherry', 6), ('marcows', 6), ('vivier', 6), ('Julien Olivain', 6), ('anisse', 6), ('Robert Hancock', 6), ('Sergey Matyukevich', 6), ('Simon Dawson', 6), ('Théo Lebrun', 6), ('Tim Riker', 6), ('Tzu-Jung Lee', 6), ('Xuanhao Shi', 6), ('universe II', 6), ('erico.nunes', 6), ('Arnaud Aujon', 6), ('biagiom', 6), ('clementramirez', 6), ('limpens', 6), ('Eric Nelson', 6), ('esben', 6), ('Ferdinand van Aartsen', 6), ('jyelloz', 6), ('zx2c4', 6), ('heyleke', 6), ('HoratiuVultur', 6), ('Heiko Zuerker', 6), ('manoj23', 6), ('Frederic Bassaler', 6), ('Florian La Roche', 6), ('Rob Landley', 5), ('Ramon Fried', 5), ('Pieter Smith', 5), ('Pierre Ducroquet', 5), ('Paresh Chaudhary', 5), ('Nuno Gonçalves', 5), ('Nuno Gonçalves', 5), ('Miquel Raynal', 5), ('Michel Alex', 5), ('Mark Jackson', 5), ('Maksim Kiselev', 5), ('Leon Anavi', 5), ('Konstantin Menyaev', 5), ('Julien Viard de Galbert', 5), ('Jon Nelson', 5), ('Jesse Taube', 5), ('Javad Rahimi', 5), ('Charlie Turner', 5), ('bradford barr', 5), ('Xiangyu Chen', 5), ('Woodrow Douglass', 5), ('Volkov Viacheslav', 5), ('Vivien Didelot', 5), ('Uladzimir Bely', 5), ('Trent Piepho', 5), ('Tobias Klauser', 5), ('Tilman Keskinöz', 5), ('Thomas Perale', 5), ('Thomas Devoogdt', 5), ('Thierry Bultel', 5), ('Sergey Kuzminov', 5), ('Sergey Bobrenok', 5), ('Semyon Kolganov', 5), ('Romain Izard', 5), ('Robin Jarry', 5), ('Robert Marko', 5), ('Charles Hardin', 5), ('Chan, Donald', 5), ('Chakra Divi', 5), ('Casey Reeves', 5), ('Bryce Ferguson', 5), ('Ben Shelton', 5), ('Ben Hutchings', 5), ('Arnaud Aujon', 5), (""Ariel D'Alessandro"", 5), ('Antoine Tenart', 5), ('Andreas Wetzel', 5), ('Alexey Roslyakov', 5), ('Alexandre Esse', 5), ('Alexander Khryukin', 5), ('Akihiko Odaki', 5), ('Akhilesh Nema', 5), ('Jarkko Sakkinen', 5), ('Jan Havran', 5), ('Henk Fijnvandraat', 5), ('Heiko Abraham', 5), ('Geoffrey Le Gourriérec', 5), ('Frederik Pasch', 5), ('Fabrice Fontaine', 5), ('Esben Haabendal', 5), ('Einar Jon Gunnarsson', 5), ('Darius Augulis', 5), ('Danilo Bargen', 5), ('Damien Le Moal', 5), ('DUPONCHEEL Sébastien', 5), ('Cédric Marie', 5), ('Colin Foster', 5), ('Chris Dimich', 5), ('Mircea Gliga', 4), ('Moritz Bitsch', 4), ('Murat Demirten', 4), ('Nayab Sayed', 4), ('Neal Frager', 4), ('Nicholas Sielicki', 4), ('Nicolas Tran', 4), ('Oleg Lyovin', 4), ('Oleksandr Zhadan', 4), ('Oli Vogt', 4), ('Pawel Sikora', 4), ('Michael Cullen', 4), ('Maxime Ripard', 4), ('Matt Flax', 4), ('Marcus Hoffmann', 4), ('Marcin Bis', 4), ('Manuel Vögele', 4), ('Lionel Landwerlin', 4), ('Linus Kaschulla', 4), ('Laurent Cans', 4), ('Dennis Van Hoorick', 4), ('Wojciech M. Zabolotny', 4), ('Yi Zheng', 4), ('Yunhao Tian', 4), ('nmenegale', 4), ('Witold Lipieta', 4), ('Vincent Prince', 4), ('Vasant Hegde', 4), ('Vadym Kochan', 4), ('Ulf Magnusson', 4), ('Tomi Valkeinen', 4), ('Tom Sparks', 4), ('Thijs Vermeir', 4), ('Sven Oliver Moll', 4), ('Stephan Henningsen', 4), ('Santosh Multhalli', 4), ('Rico Bachmann', 4), ('Richard van Paasen', 4), ('Ray Kinsella', 4), ('Pieter De Gendt', 4), ('Philippe Reynes', 4), ('Peter Rosin', 4), ('Davide Viti', 4), ('David Barbion', 4), ('Danomi Mocelopolis', 4), ('Daniel Nicoletti', 4), ('Damien Lanson', 4), ('Christian Kellermann', 4), ('Chris Frederick', 4), ('Chris Brandt', 4), ('Bram Vlerick', 4), ('Brad Love', 4), ('Bilal Wasim', 4), ('Arthur Courtel', 4), ('Artem Panfilov', 4), ('Antoine Ténart', 4), ('Alfredo Alvarez Fernandez', 4), ('Alexandre PAYEN', 4), ('Aleksandr Makarov', 4), ('Adam Duskett', 4), ('Konrad Eisele', 4), ('Judd Meinders', 4), ('John Faith', 4), ('Jeroen Roovers', 4), ('Jeremy J. Peper', 4), ('Jens Kleintje', 4), ('Jan Kiszka', 4), ('James Hogan', 4), ('James Byrne', 4), ('Ezequiel Garcia', 4), ('Francois Dugast', 4), ('Gaël PORTAY', 4), ('Gero Schwäricke', 4), ('Gonçalo Salazar', 4), ('Graeme Smecher', 4), ('Gregory CLEMENT', 4), ('Gustavo Sverzut Barbieri', 4), ('Ilya Averyanov', 4), ('Ivo Slanina', 4), ('Nicolas Dechesne', 3), ('Nicolas Robin', 3), ('Nicolas Serafini', 3), ('Noé Rubinstein', 3), ('Ofer Heifetz', 3), ('Pascal Vizeli', 3), ('Pascal de Bruijn', 3), ('Peter Sanford', 3), ('Philipp Claves', 3), ('Philippe Reynes', 3), ('Philippe Reynes', 3), ('Refik TUZAKLI', 3), ('Renaud AUBIN', 3), ('Reuben Dowle', 3), ('Roberto Medina', 3), ('Sam Bobroff', 3), ('Sen Hastings', 3), ('David PICARD', 3), ('Lee Jones', 3), ('Luca Pesce', 3), ('Maeva Manuel', 3), ('Marcelo Gutierrez', 3), ('Mario Rugiero', 3), ('Masahiro Yamada', 3), ('Mathieu Audat', 3), ('Matt Weber', 3), ('Matthew Fornero', 3), ('Matthew Shyu', 3), ('Maxime Ripard', 3), ('Michal Sojka', 3), ('Mircea GLIGA', 3), ('Naoki Matsumoto', 3), ('Nick Leverton', 3), ('Nicolas Carrier', 3), ('Tobias Waldekranz', 3), ('Trevor Woerner', 3), ('Urja Rannikko', 3), ('Vasily Khoruzhick', 3), ('Viacheslav Bocharov', 3), ('Viallard Anthony', 3), ('Victor Hiairrassary', 3), ('Viktar Palstsiuk', 3), ('Vincent Stehlé', 3), ('Vlad Zakharov', 3), ('Waldemar Rymarkiewicz', 3), ('William Wagner', 3), ('Wojciech Niziński', 3), ('trem', 3), ('alex.bennee@linaro.org', 3), ('Yugendra Sai Babu Nadupuru', 3), ('Wojciech Slenska', 3), ('Sergey Alyoshin', 3), ('Serj Kalichev', 3), ('Shawn J. Goff', 3), ('Shawn Landden', 3), ('Shlomi Vaknin', 3), ('Simon Maes', 3), ('Simon Rowe', 3), ('Stephan Hoffmann', 3), ('Steve James', 3), ('Steve Thomas', 3), ('Sven Haardiek', 3), ('Takumi Takahashi', 3), ('Tan En De', 3), ('Thierry Bultel', 3), ('Thierry Bultel', 3), ('Thomas Ruschival', 3), ('Tim Gover', 3), ('David Owens', 3), ('David Johnson', 3), ('David Bender', 3), ('Danny Wood', 3), ('Daniel Price', 3), ('Dan Walkes', 3), ('Clement Ramirez', 3), ('Christophe Vu-Brugier', 3), ('Christophe Vu-Brugier', 3), ('Carsten Schoenert', 3), ('Carlo Caione', 3), ('Calin Crisan', 3), ('Brian Redbeard', 3), ('Bin Meng', 3), ('Bimal Jacob', 3), ('Benoît Mauduit', 3), ('Avi Shukron', 3), ('Atul Singh', 3), ('Andrea Daoud', 3), ('Anders Roxell', 3), ('Anders Darander', 3), ('Alistair Francis', 3), ('Alexey Neyman', 3), ('Alexey Mednyy', 3), ('Alexandre Belloni', 3), ('Alexander Clouter', 3), ('Alexander Clouter', 3), ('Alex Baldwin', 3), ('Alan Ott', 3), ('Alan Ott', 3), ('Phil Edworthy', 3), ('Laurent Charpentier', 3), ('Khem Raj', 3), ('Kalpesh Panchal', 3), ('Julius Kriukas', 3), ('Josh.Wu', 3), ('Johan Derycke', 3), ('Jerônimo Lopes', 3), ('Jerry Huang', 3), ('Jerome Oufella', 3), ('Javier Viguera', 3), ('Javad Rahimipetroudi', 3), ('Jan Kotas', 3), ('Jan Heylen', 3), ('Jaap Crezee', 3), ('Illia Bitkov', 3), ('Ilias Apalodimas', 3), ('Dimitry Golubovsky', 3), ('Dmitry Chestnykh', 3), ('Dominik Michael Rauh', 3), ('Doug Kehn', 3), ('Eelco Chaudron', 3), ('Eloi Bail', 3), ('Erik Larsson', 3), ('Fabien Marteau', 3), ('Federico Pellegrin', 3), ('Frank Bergmann', 3), ('Gervais, Francois', 3), ('Grégoire Delattre', 3), ('Guillermo A. Amaral', 3), ('Gustavo Pimentel', 3), ('Heiko Stuebner', 3), ('Hugues Fruchet', 3), ('Noam Camus', 2), ('Nityananda Padhan', 2), ('Nimai Mahajan', 2), ('Nikolay Dimitrov', 2), ('Nicolas POIROT', 2), ('Nicolas Ferre', 2), ('Nicolas Boichat', 2), ('Nevo Hed', 2), ('Neal J. Buchmeyer', 2), ('Nathan Ford', 2), ('Mohana Datta Yelugoti', 2), ('Misha Komarovskiy', 2), ('Mischa Jonker', 2), ('Mirza Kapetanovic', 2), ('Mikhail Boiko', 2), ('Norbert Lange', 2), ('Oleg Lyovin', 2), ('Oleksandr G Zhadan', 2), ('Olivier Singla', 2), ('Ormund Williams', 2), ('Padraig James Connolly', 2), ('Pascal Huerst', 2), ('Patrick Gerber', 2), ('Patrick Gerber', 2), ('Patrick Keroulas', 2), ('Paul B. Henson', 2), ('Paul Burton', 2), ('Pauli Sundberg', 2), ('Tan En De', 2), ('Justin Maggard', 2), ('Jérôme Oufella', 2), ('Kalpesh Panchal', 2), ('Klaus Heinrich Kiwi', 2), ('Klaus Schwarzkopf', 2), ('Laine Walker-Avina', 2), ('Laurent GAUTHIER', 2), ('Laurent GONZALEZ', 2), ('Lucas De Marchi', 2), ('Lucile Quirion', 2), ('Ludwig Kormann', 2), ('Luke D. Jones', 2), ('Maksim Salau', 2), ('Marc Gauthier', 2), ('Marc Gonzalez', 2), ('Mario Fink', 2), ('Mark Jackson', 2), ('Martijn de Gouw', 2), ('Martin Böh', 2), ('Martin Kelly', 2), ('Matthew Starr', 2), ('Matthias Fritzsche', 2), ('Michael Baudino', 2), ('Michael Drake', 2), ('Michaël Burtin', 2), ('Michel Stempin', 2), ('Mika Westerberg', 2), ('Mike Crowe', 2), ('Mike Frampton', 2), ('Tatsuyuki Ishi', 2), ('Theo Debrouwere', 2), ('Thomas Bonnefille', 2), ('Thomas Perrot', 2), ('Tom Marcuzzi', 2), ('Ubaldo Porcheddu', 2), ('Vellemans Noel', 2), ('Vicente Bergas', 2), ('Vincent Dehors', 2), ('Vinicius Tinti', 2), ('Vladimir Svoboda', 2), ('Vyacheslav Bocharov', 2), ('Václav Kubernát', 2), ('Will Wagner', 2), ('Xavier Ruppen', 2), ('Yang Li', 2), ('Yanghao Cheng', 2), ('Yann Droneaud', 2), ('Yann Sionneau', 2), ('Yannick Brosseau', 2), ('Zenichi Amano', 2), ('florent valette', 2), ('jpinto', 2), ('kyak', 2), ('przemyslaw', 2), ('rvpaasen', 2), ('niranjan.reddy', 2), ('mathieu benoit', 2), ('Paulo Serra Filho', 2), ('Peter Huewe', 2), ('Philipp Skadorov', 2), ('Philippe Reynes', 2), ('Pierre CROKAERT', 2), ('Pranit Sirsat', 2), ('Qais Yousef', 2), ('Rafal Susz', 2), ('Ralph Siemsen', 2), ('Raphael Pavlidis', 2), ('Raphaël Poggi', 2), ('Robert J. Heywood', 2), ('Robert P. J. Day', 2), ('Robert Rose', 2), ('Robert Sohn', 2), ('Roland Franke', 2), ('Romain Reignier', 2), ('Sam Lancia', 2), ('Sam Voss', 2), ('Serhii Sakhno', 2), ('Shyam Saini', 2), ('Simon Doppler', 2), ('Simon Pasch', 2), ('Stanislav Bogatyrev', 2), ('Stany MARCEL', 2), ('Stefan Sørensen', 2), ('Steve Calfee', 2), ('Stewart Smith', 2), ('Sven Haardiek', 2), ('Bin Meng', 2), ('Boerge Struempfel', 2), ('Bogdan Radulescu', 2), ('Bram Oosterhuis', 2), ('Brent Generous', 2), ('Brian Beattie', 2), ('Bryan Brinsko', 2), ('Charles Duffy', 2), ('Charles Hardin', 2), ('Christian Ambach', 2), ('Christoph Muellner', 2), ('Christoph Müllner', 2), ('Ciro Santilli', 2), ('Clément Leger', 2), ('Clément Léger', 2), ('Dale Ghent', 2), ('Damien Le Moal', 2), ('Damien Riegel', 2), ('Damien Thébault', 2), ('Daniel Black', 2), ('Daniel Hobi', 2), ('Daniil Stas', 2), ('Danilo', 2), ('David Graziano', 2), ('David J. Fogle', 2), ('David Pierret', 2), ('David Raeman', 2), ('David Rosca', 2), ('Nasser Afshin', 2), ('Abhimanyu Vishwakarma', 2), ('Adrien Béraud', 2), ('Alex Kaplan', 2), ('Alex Michel', 2), ('Alex Xu', 2), ('Alexander Shiyan', 2), ('Alexander Shiyan', 2), ('Alexis Lothoré', 2), ('Alper Yildirim', 2), ('Andre Renaud', 2), ('Andreas Dannenberg', 2), ('Andreas Ehmanns', 2), ('Andreas Hilse', 2), ('Andreas Larsson', 2), ('Andrey Nechypurenko', 2), ('Anthony Viallard', 2), ('Antoine Tenart', 2), ('Anton Blanchard', 2), ('Arn R', 2), ('Artem Panfilov', 2), ('Artem Senichev', 2), ('Artyom Panfilov', 2), ('Atsushi Nemoto', 2), ('Austin Foxley', 2), ('Ben Boeckel', 2), ('Benjamin Kamath', 2), ('Benoit Mauduit', 2), ('Henri Roosen', 2), ('Henrique Camargo', 2), ('Herve Codina', 2), ('Ian Haylock', 2), ('Ilya Kuzmich', 2), ('Ismael Luceno', 2), ('Iulian Onofrei', 2), ('J Evans', 2), ('J. Neuschäfer', 2), ('J.C. Woltz', 2), ('Jakub Skrzypnik', 2), ('James Balean', 2), ('James Grant', 2), ('James Hebden', 2), ('Jason Abele', 2), ('Jason Pruitt', 2), ('Jason Spence', 2), ('Jean-Christian de Rivaz', 2), ('Jeff Zignego', 2), ('Jens Stimpfle', 2), ('Jim Brennan', 2), ('Joao Marcos Costa', 2), ('Johan Derycke', 2), ('Jonah Petri', 2), ('Jordi Llonch', 2), ('Jouko Nikula', 2), ('Julian Lunz', 2), ('Davide Viti', 2), ('Diego Hurtado de Mendoza', 2), ('Dmytro Milinevskyy', 2), ('Dominik Faessler', 2), ('Doug Brown', 2), ('Douglas RAILLARD', 2), ('Dustin Johnson', 2), ('Eric Benard', 2), ('Erik Stromdahl', 2), ('Eugene Tarassov', 2), ('Evan Zelkowitz', 2), ('Ezequiel Garcia', 2), ('Fabio Porcedda', 2), ('Hector Oron', 2), ('Gustavo Heinz', 2), ('Guillaume Gardet', 2), ('Giulio Benetti', 2), ('Giovanni Zantedeschi', 2), ('Gerome Burlats', 2), ('Gero Schwäricke', 2), ('George Redivo', 2), ('Geoffrey Ragot', 2), ('Gary Coulbourne', 2), ('Francesco Nwokeka', 2), ('Florian Larysch', 2), ('Fiona Klute', 2), ('Filip Skoneczny', 2), ('NikitaSobolev', 1), ('Nikita Sobolev', 1), ('Niels Skou Olsen', 1), ('Nicolas Toromanoff', 1), ('Nicolas Dufresne', 1), ('Nicolas Dichtel', 1), ('Nicolas Dechesne', 1), ('Nicolas Carrier', 1), ('Neil Armstrong', 1), ('Neha Bairathi', 1), ('Mika Joenpera', 1), ('Niranjan Reddy', 1), ('Nisarg Jhaveri', 1), ('Nitin Mendiratta', 1), ('Nix', 1), ('Noah Huetter', 1), ('Oleg Kitain', 1), ('Olivier Dautricourt', 1), (""Olivier L'Heureux"", 1), ('Olivier Matz', 1), ('Oscar Hellström', 1), ('Mikael Bourhis-Cloarec', 1), ('Mikael Eliasson', 1), ('Mike Harmony', 1), ('Mike Williams', 1), ('Miken Valabdas', 1), ('Mikhail Karpenko', 1), ('Mikhail Peselnik', 1), ('Milton Soares Filho', 1), ('Miquel Raynal', 1), ('Mircea GLIGA', 1), ('Mirko Langisch', 1), ('Morgan Delestre', 1), ('Mylene JOSSERAND', 1), ('Mylène Josserand', 1), ('Mylène Josserand', 1), ('Nate Ford', 1), ('Nathaniel Husted', 1), ('Nathaniel Roach', 1), ('Nayna Jain', 1), ('Nazım Gediz AYDINDOĞMUŞ', 1), ('Philip Molloy', 1), ('Philip Paeps', 1), ('Philipp Richter', 1), ('Philipp Wagner', 1), ('Philipp Wagner', 1), ('Philippe Pepiot', 1), ('Pierre Ficheux', 1), ('Pierre Floury', 1), ('Pierre Le Magourou', 1), ('Pierre-Louis Bossart', 1), ('Pieter Ronsijn', 1), ('Pieter Ronsijn', 1), ('Pieterjan Camerlynck', 1), ('Piotr Nakraszewicz', 1), ('Prabhu Sannachi', 1), ('Prasanthi Chellakumar', 1), ('Przemyslaw Wrzos', 1), ('Pwalters', 1), ('Qais Yousef', 1), ('Sven Klomp', 1), ('Ossy', 1), ('Owen Walpole', 1), ('Parnell Springmeyer', 1), ('Patrick Devlin', 1), ('Patrick Oppenlander', 1), ('Patryk Duda', 1), ('Paul Burton', 1), ('Paul Jones', 1), ('Paul Soucy', 1), ('Paulo Matos', 1), ('Paulo Zaneti', 1), ('Pavel Roskin', 1), ('Pedro Jardim', 1), ('Petar Koretic', 1), ('Peter Bouda', 1), ('Peter Meerwald', 1), ('Petr Vorel', 1), ('Petri Gynther', 1), ('Phelip Etienne', 1), ('Phil Eichinger', 1), ('Laurent Badel', 1), ('Marcelo Roberto Jimenez', 1), ('Marcin Jabrzyk', 1), ('Marcin Niestroj', 1), ('Marcus Osdoba', 1), ('Marek Belisko', 1), ('Marek Metelski', 1), ('Mario Haustein', 1), ('Mario J. Rugiero', 1), ('Mario Mintel', 1), ('Mark Hirota', 1), ('Mark Thompson', 1), ('Mark Wickham', 1), ('Markus Kaindl', 1), ('Markus Steinhilber', 1), ('Martin Creutziger', 1), ('Martin Kurbanov', 1), ('Martin Povišer', 1), ('Martin Whitaker', 1), ('Massimo Callegari', 1), ('Mathias De Mare', 1), ('Laurent GONZALEZ', 1), ('Leach, Daniel J', 1), ('Lecopzer Chen', 1), ('Leger Charlie', 1), ('Leo Soares', 1), ('Leon Rinkel', 1), ('Lorenzo Catucci', 1), ('Louis Chauvet', 1), ('Louis Rannou', 1), ('Luc Creti', 1), ('Ludovic Desroches', 1), ('Luis Araneda', 1), ('Lukasz Pulka', 1), ('Lyle Franklin', 1), ('Lévai Tamás', 1), ('Mamatha Inamdar', 1), ('Manfred Schlaegl', 1), ('Marc', 1), ('Marc Khouri', 1), ('Marc-André Chénier', 1), ('Maxime Hadjinlian', 1), ('Maxime Madau', 1), ('Maxime Ripard', 1), ('Maximilian Senftleben', 1), ('McCabe, Robert J', 1), ('Mehmet Sami Tok', 1), ('Merlin Büge', 1), ('Michael Heinemann', 1), ('Michael J. Hammel', 1), ('Michael J. Hammel', 1), ('Michael Klein', 1), ('Michael Nosthoff via buildroot', 1), ('Michael Opdenacker', 1), ('Michael S. Zick', 1), ('Michael Schenk', 1), ('Michaël Blanc', 1), ('Michał Kalbarczyk', 1), ('Michał Leśniewski', 1), ('Michel Marti', 1), ('Michele Comignano', 1), ('Mathias De Maré', 1), ('Mathieu Briand', 1), ('Mathieu Maret', 1), ('Mathieu Mirmont', 1), ('Matt Fleming', 1), ('Matt Johnson', 1), ('Matt Silva', 1), ('Matt Wood', 1), ('Matthew Bastian', 1), ('Matthew Weber', 1), ('Matthew Weber via buildroot', 1), ('Matthias Weisser', 1), ('Maurice van der Pot', 1), ('Mauro Meneghin', 1), ('Max Berger', 1), ('Maxim Cournoyer', 1), ('Maxim Grigoriev', 1), ('Maxim Kochetkov via buildroot', 1), ('Maxime Brunelle', 1), ('Maxime Coquelin', 1), ('Timothy Lee', 1), ('Tobias Blass', 1), ('Tom Rini', 1), ('Tony Lindgren', 1), ('Tudor Holton', 1), ('Tzu-Jung Lee', 1), ('Uwe Kindler', 1), ('Vadim Kochan', 1), ('Vanessa Maegima', 1), ('Venkateswara Rao Mandela', 1), ('Veronika Kremneva', 1), ('Victor Dumas', 1), ('Vincent Palatin', 1), ('Vlad Zakharov', 1), ('Volker Krause', 1), ('Vyacheslav', 1), ('Víctor Manuel Jáquez Leal', 1), ('Waldemar Brodkorb', 1), ('Wesley Chow', 1), ('Wilfred Mallawa', 1), ('Sylvain Raybaud', 1), ('Tal Shorer', 1), ('Tal Zilcer', 1), ('Tarek El-Sherbiny', 1), ('Theo Debrouwere', 1), ('Theo Debrouwere', 1), ('Thierry GUIBERT', 1), ('Thomas Brandstetter', 1), ('Thomas Davis', 1), ('Thomas Ehrhardt', 1), ('Thomas Ehrhardt', 1), ('Thomas Faivre', 1), ('Thomas Pedersen', 1), ('Thomas Rudin', 1), ('Thuan Ho', 1), ('Tiago Brusamarello', 1), ('Tianrui Wei', 1), ('Tibault Damman', 1), ('Tim Hammer', 1), ('Tim Sheridan', 1), ('Zikui Zhao', 1), ('angus salkeld', 1), ('austinf', 1), ('claurita', 1), ('david.barbion@ext.leroymerlin.fr', 1), ('f8cfe@free.fr', 1), ('friedtj@free.fr', 1), ('grante', 1), ('itzwam', 1), ('laurent laffont', 1), ('lothar felten', 1), ('roylee17', 1), ('serj.kalichev', 1), ('tbultel', 1), ('tiago.brusamarello', 1), ('vicencb@gmail.com', 1), ('Émeric Vigier', 1), ('ʎɐH ǝʌǝʇS', 1), ('Роман Донченко', 1), ('陈小 刚', 1), ('Will Moore', 1), ('William Wennerström', 1), ('Wojciech Nizinski', 1), ('Woody Douglass', 1), ('Wouter Vermeiren', 1), ('Xh Xiao', 1), ('Xiangyu Chen', 1), ('Xiaobing Luo', 1), ('Xinglong Liao', 1), ('Yair Ben Avraham', 1), ('Yann CARDAILLAC', 1), ('Yannick Kiekens', 1), ('Yannis Damigos', 1), ('Yaroslav Syrytsia', 1), ('Yauheni Saldatsenka', 1), ('Yurii Monakov', 1), ('Yves Deweerdt', 1), ('Zach Vargas', 1), ('Zenichi Amano', 1), ('Zeno Endemann', 1), ('Quentin Barbe', 1), ('Robert Griebl', 1), ('Robert Marko', 1), ('Robin Holt', 1), ('Roeland Van Praet', 1), ('Rohan Fletcher', 1), ('Roman Gorbenkov', 1), ('Ronak Desai', 1), ('Roosen Henri', 1), ('Roy Kollen Svendsen', 1), ('Roy Kollen Svendsen', 1), ('Rufus Segar', 1), ('Ryan Barnett', 1), ('Ryan Mallon', 1), ('Ryan Steffens', 1), ('Ryan Wilkins', 1), ('Ryota Kinukawa', 1), ('Rémi Duraffort', 1), ('Rémi Rérolle', 1), ('Sam Voss', 1), ('Sascha Arthur', 1), ('RJ Ascani', 1), ('Rafal Fabich', 1), ('Rainer Jonsson', 1), ('Ralf Dragon', 1), ('Ramon Crichlow', 1), ('Raul Hidalgo Caballero', 1), ('Raúl Sánchez Siles', 1), ('Reed Nightingale', 1), ('Remi Jouannet', 1), ('Remi Pommarel', 1), ('Rhys Williams', 1), ('Ricardo Martincoski', 1), ('Richard Braun', 1), ('Richard Kunze', 1), ('Richard Palethorpe', 1), ('Rick Taylor', 1), ('Risto Avila', 1), ('Rob Alley', 1), ('Rob Mellor', 1), ('Robert Beckett', 1), ('Slava Zanko', 1), ('Sol Bekic', 1), ('Soren Brinkmann', 1), ('Spenser Gilliland', 1), ('Stafford Horne', 1), ('Stanislas Bach', 1), ('Stanislav Bogatyrev', 1), ('Stanislav Vasic', 1), ('Stefan Maksimovic', 1), ('Stefan Mayrhofer', 1), ('Stephan Thamm', 1), ('Stephen Agate', 1), ('Stephen Bos', 1), ('Steve Critchlow', 1), ('Stuart Summers', 1), ('Stéphane Veyret', 1), ('Subramaniam C.A', 1), ('Sumit Garg', 1), ('Svein-Erik Skjelbred', 1), ('Sven Fischer', 1), ('Sasha Shyrokov', 1), ('Sassen, Rutger', 1), ('Schenk Michael', 1), ('Schenk, Michael', 1), ('Scott Ellis', 1), ('Sebastian Bauer', 1), ('Sebastian Frias', 1), ('Sebastien Laveze', 1), ('Sebastien Roy', 1), ('Sebastien Van Cauwenberghe', 1), ('Sefan Rommel', 1), ('Sergey Organov', 1), ('Sergi Granell', 1), ('Sergi Granell', 1), ('Sergio Prado', 1), ('Shahab Vahedi', 1), ('Shawn J. Goff', 1), ('Signed-off-by: Alex Xu', 1), ('Simon Richter', 1), ('Simon van der Veldt', 1), ('Bradford Barr', 1), ('Christoph Engelbert', 1), ('Christoph Hellwig', 1), ('Christophe Priouzeau', 1), ('Christopher Pelloux', 1), ('Clark Rawlins', 1), ('Clark Rawlins', 1), ('Clayton Shotwell', 1), ('Cody Guldner', 1), ('Colin Didier', 1), ('Colleen', 1), ('Conrad Ratschan', 1), ('Conrad Ratschan', 1), ('Corentin GUILLEVIC', 1), ('Corentin Labbe', 1), ('Cornelia Huck', 1), ('Cédric Chépied', 1), ('Damian Kaczmarek', 1), ('Damien DUVAL', 1), ('Dan Moulding', 1), ('Dan Pattison', 1), ('Breno Lima', 1), ('Brett Gyarfas', 1), (""Brian 'redbeard' Harrington"", 1), ('Brian Kim', 1), ('Brock Williams', 1), ('Bruno Marie', 1), ('Béla Becker', 1), ('Cam Mannett', 1), ('Cam Mannett', 1), ('Cameron Hutchison', 1), ('Carlo Caione', 1), ('Carlos Quijano', 1), ('Changming Huang', 1), ('Charlie LEGER', 1), ('Chen Pei', 1), ('Cherniaev Andrei', 1), ('Chris Seawood', 1), ('Chris Simons', 1), ('Chris Smart', 1), ('Christian Artin', 1), ('David Kessler', 1), ('David Kosir', 1), ('David Picard', 1), ('David Pierret', 1), ('David Purdy', 1), ('David Wagner', 1), ('Denis Bodor', 1), ('Denis Mingulov', 1), ('Denis Osterland', 1), ('Denis THULIN', 1), ('Derrick Lyndon Pallas', 1), ('Derycke, Johan', 1), ('Dima Zavin', 1), ('Dimitrij Kotrev', 1), ('Dimitrios Siganos', 1), ('Dmitrii Kolesnichenko', 1), ('Dmitry', 1), ('Dmitry Ilyin', 1), ('Dmitry Rokosov', 1), ('Jan Viktorin', 1), ('Dan Riegsecker', 1), ('Daniel Fahlgren', 1), ('Daniel J. Leach', 1), ('Daniel Mack', 1), ('Daniel Nelson', 1), ('Daniel Sabogal', 1), ('Daniel Sangue', 1), ('Daniel Semkowicz', 1), ('Daniel Serpell', 1), ('Daniele Salvatore Albano', 1), ('Daniele Salvatore Albano', 1), ('Daniele Salvatore Albano', 1), ('Darcy Watkins', 1), ('Dave Skok', 1), ('David Barbion', 1), ('David Bender', 1), ('David Corbeil', 1), ('David De Grave (Essensium/Mind)', 1), ('David Glessner', 1), ('David HENG', 1), ('Michael Durrant', 1), ('Adrien Decostre', 1), ('Adrien Grassein', 1), ('Adrien Ricciardi', 1), ('Ahmad Fatoum', 1), ('Akshay Bhat', 1), ('Alan Yaniger', 1), ('Albert Lee', 1), ('Alessandro Partesotti', 1), ('Alex Dobrynin', 1), (""Alexander 'z33ky' Hirsch"", 1), ('Alexander Egorenkov', 1), ('Alexander Kurz', 1), ('Alexander Lukichev', 1), ('Alexander Varnin', 1), ('Alexandre Belloni', 1), ('Alexandre Pereira da Silva', 1), ('Alexey Romanov', 1), ('Alifer Moraes', 1), ('Alisa Volk', 1), ('Anatoly Borodin', 1), ('Andreas Ehmanns', 1), ('Adam Duskett', 1), ('Ben Wolsieffer', 1), ('Timo Ketola', 1), ('Rahul Jain', 1), ('A.R.D', 1), ('Aaltonen Eero', 1), ('Aaron Sierra', 1), ('Aaron Sierra', 1), ('Abdelmalek Benelouezzane', 1), ('Abdul Hussain', 1), ('Abel Bernabeu', 1), ('Abhimanyu Vishwakarma', 1), ('Abhishek Singh', 1), ('Abilio Marques', 1), ('Adam Duskett', 1), ('Adam Heinrich', 1), ('Adam Wujek', 1), ('Adrian Amaglio', 1), ('Adrian Sweet', 1), ('Arthur LAMBERT', 1), ('Asgeir Bjarni Ingvarsson', 1), ('Atanas Palavrov Updating wiringPi to add support for RPi3B+', 1), ('Attila Wagner', 1), ('Audrey Motheron', 1), ('Augustin Thiercelin', 1), ('Avishay Orpaz', 1), ('Bai Yingjie', 1), ('Bamvor Jian Zhang', 1), ('Baptiste Moraine', 1), ('Ben Dooks', 1), ('Ben Leinweber', 1), ('Benjamin Calderon', 1), ('Benjamin Kamath', 1), ('Benoît Mauduit', 1), ('Bernd Amend', 1), ('Bernhard Petschina', 1), ('Bert Outtier', 1), ('Bert Schueszler', 1), ('Blomme, Maarten', 1), ('Anders Darander', 1), ('Andi Shyti', 1), ('Andre Renaud', 1), ('Andreas Naumann', 1), ('Andrei Gherghescu', 1), ('AndreiCherniaev', 1), ('Andrew Barnes', 1), ('Andrew Donnellan', 1), ('Andrew Donnellan', 1), ('Andrew Parlane', 1), ('Andrey Grafin', 1), ('Andrey Skvortsov', 1), ('Andy Gibbs', 1), ('Angus Salkeld', 1), ('Antoine Pierlot-Garcin', 1), ('Antony Pavlov', 1), ('Aras Vaichas', 1), ('Arno Messiaen', 1), ('Arnold Bloemert', 1), ('Artem Panfilov', 1), ('Jerry Kooyman', 1), ('Jim Persson', 1), ('Jiri Novotny', 1), ('Joao Mano', 1), ('Joao Pinto', 1), ('Jochen Baltes', 1), ('Joe Lin', 1), ('Joe Schultz', 1), ('Joel Carlson', 1), ('Johan Oudinet', 1), ('Johan Thelin', 1), ('Johannes Agricola', 1), ('Johannes Schmitz', 1), ('John Keeping', 1), ('John Stile', 1), ('Jon Henrik Bjørnstad', 1), ('Jon Ringle', 1), ('Jonas Zaddach', 1), ('Jonathan Borne', 1), ('Jona",646,0,
Netflix/zeno,Netflix's In-Memory Data Propagation Framework,"Netflix Zeno
============

![NetflixOSS Lifecycle](https://img.shields.io/osslifecycle/Netflix/zeno.svg)

_Zeno is now retired.  See [hollow](http://github.com/Netflix/hollow) for Netflix's replacement technology._

Some applications have data sets with extremely low latency tolerance.  For Netflix, this applies to metadata about our movies and TV shows.  We store this data directly in RAM on the servers responsible for powering the Netflix experience.

Netflix leans heavily on the Zeno framework to manage, transport, and keep updated these gigabytes of constantly-changing data replicated across thousands of servers.  Zeno: 

* Creates compact serialized representations of a set of Java Objects.
* Automatically detects and removes duplication in a data set.
* Automatically produces a minimal set of changes required to keep data up-to-date.
* Is efficient about resource impact when deserializing data.
* Provides powerful tools to debug data sets.
* Defines a pattern for separation between data model and data operations, increasing the agility of development teams.

Zeno is highly optimized.  See [The Netflix Tech Blog](http://techblog.netflix.com/2013/12/announcing-zeno-netflixs-in-memory-data.html) for a description of how Netflix has benefited from the development and application of the Zeno framework.

Artifacts
---------
Zeno binaries are published to Maven Central.

|GroupID/Org|ArtifactID/Name|Latest Version|
|-----------|---------------|--------------|
|com.netflix.zeno|netflix-zeno|2.6|

In a Maven .pom file:

        ...
        
        	com.netflix.zeno
        	netflix-zeno
        	2.6
        
        ...

Documentation
-------------
Documentation is available on the [wiki](https://github.com/Netflix/zeno/wiki).

Build
-----
Zeno is built via Gradle (www.gradle.org).  To build from the command line:

       ./gradlew build


Support
-------
Zeno is actively used and maintained by the Metadata Infrastructure team at Netflix.  Issues will be addressed in a timely manner.  Support can be obtained through the [Zeno google group](https://groups.google.com/group/netflix-zeno)

",,2013-10-28T17:36:46Z,2024-03-04T12:26:29Z,18,8,201,461,"('dkoszewnik', 108), ('Bob T Builder', 53), ('Deva Jayaraman', 43), ('timurua', 12), ('Darren Bathgate', 9), ('Brian Moore', 2), ('Darren Bathgate', 2), ('vuzilla', 2), ('puneetlakhina', 2), ('Andrew Spyker', 1), ('David Su', 1), ('jatin146', 1), ('joesondow', 1), ('Justin Ryan', 1), ('pborreli', 1), ('rspieldenner', 1), ('djayaraman', 1), ('davesu', 1)",9,5,
anphilippou/lambda-xbmc-addons,lambda's XBMC Addons,,,2013-07-27T05:59:10Z,2013-07-19T17:40:37Z,3,1,0,1,"('lambda81', 55), ('devnullpointer', 3), ('Vasilios Kyriakakis', 1)",1,0,
WorldBrain/Memex,"Browser extension to curate, annotate, and discuss the most valuable content and ideas on the web. As individuals, teams and communities.","# WorldBrain's Memex

[![Financial Contributors on Open Collective](https://opencollective.com/worldbrain/all/badge.svg?label=financial+contributors)](https://opencollective.com/worldbrain)

## Table Of Content

1. [Memex Features](#memex-features)
1. [Changelog and Roadmap](#changelog--roadmap)
1. [Contributing](#contributing)
    1. [Report Bugs & Feature Requests](#bugs--feature-requests)
    1. [Getting started as a developer](#getting-started-as-a-developer)
1. [License](#license)
1. [Our Funders](#funders)

# Memex Features

A browser extension to eliminate time spent bookmarking, retracing steps to recall an old webpage, or copy-pasting notes into scattered documents.
Its name and functionalities are heavily inspired by [Vannevar Bush's vision of a Memex](http://memex.link/S1zVMgKzX/en.wikipedia.org/wiki/Memex).


## Full-Text Search in Bookmarks:

Search with every word of all websites & PDFs you bookmarked, tagged, listed, or annotated. Filter by time, domain, list, or tags.
![](https://user-images.githubusercontent.com/7870039/75158724-a8b7d500-570e-11ea-9d35-0255cb9ea2da.gif)

## Highlights, Notes & Annotations:

Add notes to websites as a whole and to individual components (e.g. text, images)
![](https://user-images.githubusercontent.com/7870039/75158717-a3f32100-570e-11ea-901d-8241b0710d60.gif)

## Tags, Lists, Bookmarks

Add bookmarks, tags or sort websites into lists on the fly.
![](https://user-images.githubusercontent.com/7870039/75158720-a786a800-570e-11ea-9891-0ef26f7066f3.gif)

## Mobile Apps for iOS & Android + Encrypted Sync

With [Memex Go](https://getmemex.com) you can save & organise content on the go.
Sync is end2end encrypted with [TweetNaCl](https://github.com/dchest/tweetnacl-js)



## No VC Money, No Exit: Your Data & Attention Stays Yours

Memex is funded without VC money or selling shares. Instead we are funded with a model called ""Steward Ownership"". This model ensures that the company can never be sold and our investors are rewarded with a capped profit share. This way we will never be tempted by incentivizes to optimise our company for maximising growth and shareholder profits at the expense of your privacy, attention, or freed to choose a provider.
You can find more about our choice [in this post](https://community.worldbrain.io/t/why-worldbrain-io-does-not-take-venture-capital/75).

## Other:

⛅ Backup and restore your data to any of your favorite cloud providers including Google Drive

📲 Import bookmarks and history from other services

⌨ Keyboard Shortcuts for everything

🗂 Tab manager: add all open tabs to a collection or tag

## Changelog & Roadmap:

See a list of our past updates and upcoming features [here](https://www.notion.so/Release-Notes-Roadmap-262a367f7a2a48ff8115d2c71f700c14).

# Contributing

## Near term features where contributions are welcome

⭐️Archiving websites + reader mode + offline-viewing on mobile

⭐️Mobile Annotations

⭐️Support for Brave and Firefox on mobile

⭐️API to import/export your data & integrate with other apps

⭐️Bulk tag, delete, add to lists & bookmark of items

⭐️Nested Collections

Drop by in our [team chat](https://join.slack.com/t/worldbrain/shared_invite/enQtOTcwMjQxNTgyNTE4LTRhYTAzN2QwNmM3ZjQwMGE5MzllZDM3N2E5OTFjY2FmY2JmOTY3ZWJhNGEyNWRiMzU5NTZjMzU0MWJhOTA2ZDA) if you're interested in contributing to those features.
**_Experience in React or React Native & Test Driven Development required_**

## Bugs & Feature Requests

Head over to our [community forums](https://community.worldbrain.io) to post your requests.

## Getting started as a developer

[Click here](./GETTING-STARTED.md#installation) for all instructions on how to build Memex so you can hack on it.

## Contributors

### Code Contributors

This project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].



### Financial Contributors

Become a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/worldbrain/contribute)]

#### Individuals



#### Organizations

Support this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/worldbrain/contribute)]



# License

Memex is MIT licensed. View full [License](./License)

# Funders

WorldBrain.io, the company behind Memex, has been funded by a set of courageous investors & grant givers.
See a full & up-to-date list [here](https://www.notion.so/worldbrain/The-Worldbrain-io-Team-9ca5429f6a5c480289386a5cb49f173c#480df7140d124dc68595316dd666fd9a).
","'annotate', 'annotation', 'annotations', 'browser-extension', 'chrome-extension', 'firefox-addon', 'full-text-search', 'javascript', 'note-taking', 'research', 'typescript', 'web-extension'",2017-04-01T20:33:06Z,2024-06-18T09:52:03Z,64,58,4358,68,"('poltak', 4838), ('blackforestboi', 4679), ('ShishKabab', 1090), ('cdharris', 422), ('digi0ps', 354), ('Treora', 339), ('mukeshkharita', 284), ('Sean Coley', 169), ('subrat-sahu', 121), ('TheExGenesis', 87), ('iammohitsakhuja', 86), ('urbancvek', 54), ('kellective', 45), ('swissums', 45), ('reficul31', 30), ('szymonkaliski', 23), ('aswinmprabhu', 21), ('bohrium272', 21), ('aquibm', 17), ('rafaelpivato', 15), ('pranshuchittora', 14), ('Infi-Knight', 12), ('SaxenaKartik', 12), ('JessicaML', 11), ('LuccaHellriegel', 11), ('AireshBhat', 10), ('agrim123', 7), ('Arpit Gogia', 7), ('Eik-S', 7), ('Lam Huc Minh', 7), ('nileshgulia1', 7), ('Rohanhacker', 5), ('the-fallen', 5), ('jamestthompson3', 5), ('davidshq', 4), ('surya-prakash-susarla', 4), ('heliostatic', 3), ('simonljus', 3), ('subrat', 2), ('willian-viana', 2), ('Vexatos', 2), ('RajPratim21', 2), ('marcus-crane', 2), ('jnv', 2), ('GaurangTandon', 2), ('Chaitya62', 2), ('monkeywithacupcake', 1), ('gastonche', 1), ('ansh103', 1), ('Yager Anderson', 1), ('elimisteve', 1), ('Rik Smith-Unna', 1), ('tilgovi', 1), ('pvinis', 1), ('kryptokinght', 1), ('localjo', 1), ('jean', 1), ('Janidai', 1), ('JCGoran', 1), ('Harirai', 1), ('JohnstonCode', 1), ('tctara', 1), ('AriaMinaei', 1), ('alxmiron', 1)",18,16,
Myprivateclonelibrary/openBilibili-1,b站后台源码,"# openBilibili
",,2019-06-06T22:50:37Z,2023-03-20T08:10:24Z,1,1,251,6,"('yzxcxya', 2)",0,0,
xaviershay/db2s3,A rails plugin to backup Mysql to Amazon S3,"= DB2S3

A rails plugin to backup Mysql to Amazon S3. You're looking at a monthly spend of four cents. So pony up you cheap bastard, and store your backups on S3

== This gem is unmaintained

I don't use this gem anymore so cannot maintain it. There is a newer, shinier alternative called db2fog which supports many different backends, not just S3, and doesn't rely on the aws-s3 gem which is a bit crufty:

https://github.com/yob/db2fog

You should use that rather than this.

== Usage

  # In config/environment.rb
  config.gem ""db2s3"", :source => ""http://gemcutter.org""

  # In Rakefile
  require 'db2s3/tasks'

  # In config/initializers/db2s3.rb
  DB2S3::Config.instance_eval do
    S3 = {
      :access_key_id     => 'yourkey',
      :secret_access_key => 'yoursecretkey',
      :bucket            => 'yourapp-db-backup'
    }
  end
  # DB credentials are read from your rails environment

  rake gems:install

  # Add to your crontab or whatever
  rake db2s3:backup:full
  rake db2s3:backup:incremental # Unimplemented

  # Handy tasks
  rake db2s3:statistics      # Shows you the size of your DB
  rake db2s3:backup:restore  # You should be testing this regularly
  rake db2s3:backup:clean    # Clean up old backups - cron this

== Development

Specs are really week. This code is bit hackish but is being used by quite a few people.

== Kudos

http://github.com/pauldowman/blog_code_examples/tree/master/mysql_s3_backup
",,2009-03-07T03:18:26Z,2011-07-23T21:53:33Z,1,1,69,4,"('xaviershay', 39)",0,0,
voxxit/s3-static-site,"Using Ruby and Capistrano, build and deploy a static website to Amazon S3","# s3-static-site

> Allows static websites deployment to Amazon S3 website buckets using Capistrano.

## Hosting your website with Amazon S3

S3 provides special website enabled buckets that allows you to deliver website pages directly from S3.
The most important difference is that theses buckets serves an index document (ex. index.html) whenever a user specifies the URL for the root of your website, or a subfolder. And you can point your domain name directly to the S3 bucket cname.

To learn how to setup your website bucket, see [Amazon Documentation](http://docs.amazonwebservices.com/AmazonS3/latest/dev/index.html?HostingWebsiteQS1.html).

## Getting started

Setup capistrano, create a public folder and set your S3 bucket configurations in `deploy.rb`.

    $ capify .
    $ mkdir public
    $ touch config/deploy.rb #see config instructions bellow
    $ cap deploy

### Configuring deployment

s3-static-site overrides the default Capistrano recipes for Rails projects with its own simple s3 publishing scripts.

    # config/deploy.rb
    require 's3-static-site'

    set :bucket, ""www.cool-website-bucket.com""
    set :access_key_id, ""CHANGETHIS""
    set :secret_access_key, ""CHANGETHIS""

If you want to deploy to multiple buckets, have a look at
[Capistrano multistage](https://github.com/capistrano/capistrano/wiki/2.x-Multistage-Extension)
and  configure a bucket per stage configuration.

#### S3 write options

s3-static-site sets files `:content_type` and `:acl` to `:public_read`, add or override with :

    set :bucket_write_options, {
        cache_control: ""max-age=94608000, public""
    }

See aws-sdk [S3Object.write doc](http://rubydoc.info/github/amazonwebservices/aws-sdk-for-ruby/master/AWS/S3/S3Object#write-instance_method) for all available options.

### Built-in HAML template rendering and SASS compile
  
On deployment, `.haml` and `.sass` are generated and uploaded (source .haml and .sass are not uploaded).

### Advanced static website generation & assets management

If you wish to manage your assets with a packaging system, a simple way do to it
is using a combination of :

- [Sinatra](https://github.com/sinatra/sinatra) : simple web framework that we extend for our needs
- [Sinatra-AssetPack](https://github.com/rstacruz/sinatra-assetpack) : deals with version management for all kind of assets
- [Sinatra-Static](https://github.com/paulasmuth/sinatra-static) : generate your complete website in `public/`, allowing an `s3-static-site` deployment

IMPORTANT : to achieve `Sinatra-AssetPack` and `Sinatra-Static` compatibility, see [pull request #1](https://github.com/paulasmuth/sinatra-static/pull/1)
or use [a patched fork](https://github.com/hooktstudios/sinatra-static).

Once you get this together, add a capistrano task to trigger website generation before deploy :

    # config/deploy.rb
    before 'deploy' do
      run_locally ""bundle exec ruby app.rb""
      run_locally ""bundle exec rake assetpack:build""
    end

## Copyright

Copyright (c) 2012 Josh Delsman & miomoba, Inc. See LICENSE.txt for details.",,2011-02-22T23:51:29Z,2013-07-12T15:49:06Z,4,3,22,2,"('Josh Delsman', 18), ('j15e', 6), ('inkblot', 4), ('nprbsg', 2)",0,0,
DexterInd/BrickPi,The BrickPi Project Combining the Raspberry Pi and LEGO MINDSTORMS,"BrickPi
=====

This project combines the brains of a Raspberry Pi with the brawn of a LEGO MINDSTORMS NXT.  Read more about it here:  http://www.dexterindustries.com/BrickPi

These files have been made available online through a [Creative Commons Attribution-ShareAlike 3.0](http://creativecommons.org/licenses/by-sa/3.0/) license.

## Compatibility
This repository is for the BrickPi and BrickPi+. For the BrickPi3 (hardware version 3.x.x) see the [BrickPi3 repository](https://github.com/DexterInd/BrickPi3).

## Getting Started
We've devoted some serious time to trying to make sure that it's easy to get started.  If you're lost, we would like to first direct you to our [website for the BrickPi](http://www.dexterindustries.com/BrickPi/getting-started/).

## Quick Install

In order to quick install the `BrickPi` repository, open up a terminal and type the following command:
```
curl -kL dexterindustries.com/update_brickpi_plus | bash
```
The same command can be used for updating the `BrickPi` to the latest version.

## This Repository
This repository holds firmware and hardware designs, as well as software examples for Python, C, and Scratch.  

## Image for the SD Card
Our custom image for the Raspberry Pi makes using the BrickPi easy.  We've modified the standard Raspbian a little bit.  You can download the latest image here [on our getting started section.](https://www.dexterindustries.com/howto/install-raspbian-for-robots-image-on-an-sd-card/)

	
## Firmware
The board firmware is made in Arduino in order to make it super-hackable.  The firmware is written in Arduino 1.0 and can be uploaded via an ISP programmer.  It can also be uploaded with an Arduino Uno, with an adapter explained in this repository.

The board supports LEGO NXT motors, EV3 motors, and LEGO NXT sensors, as well as many of Dexter Industries sensors for LEGO Mindstorms.

[Dexter Industries](http://www.dexterindustries.com/)
[BrickPi for the Raspberry Pi](http://www.dexterindustries.com/BrickPi)
",,2013-03-25T11:15:45Z,2021-10-29T17:49:29Z,15,11,262,66,"('Dexter Industries', 68), ('sitfit', 60), ('karan259', 15), ('CleoQc', 11), ('RobertLucian', 5), ('johnisanerd', 4), ('Shoban94', 3), ('graykevinb', 2), ('rafiyagi', 2), ('dlech', 1), ('f4814', 1), ('JaikrishnaTS', 1), ('John Is A Nerd', 1), ('Matthew Richardson', 1), ('woolfel', 1)",6,4,
ANYbotics/anymal_b_simple_description,Simplified robot description of the ANYmal B quadrupedal robot.,"# ANYmal B Robot Description (URDF)
## Overview

This package contains a simplified robot description (URDF) of the [ANYmal B robot](https://www.anybotics.com/anymal) developed by [ANYbotics](https://www.anybotics.com).

The extended ANYmal B robot description, simulation, and control software is available exclusively to members of the [ANYmal Research community](https://www.anymal-research.org). For more information and membership applications, contact info@anybotics.com.

**Author & Maintainer: Linus Isler, [ANYbotics](https://www.anybotics.com)**

[![ANYmal B Robot Description](doc/anymal_b_rviz.png)](doc/anymal_b_rviz.png)

## License

This software is released under a [BSD 3-Clause license](LICENSE).

## Publications

If you use this work in an academic context, please cite the following publications:

> M. Hutter, C. Gehring, A. Lauber, F. Gunther, C. D. Bellicoso, V. Tsounis, P. Fankhauser, R. Diethelm, S. Bachmann, M. Bloesch, H. Kolvenbach, M. Bjelonic, L. Isler and K. Meyer
> **""ANYmal - toward legged robots for harsh environments“**,
> in Advanced Robotics, 31.17, 2017. ([DOI](https://doi.org/10.1080/01691864.2017.1378591))

    @article{anymal2017,
        title={ANYmal-toward legged robots for harsh environments},
        author={Hutter, Marco and Gehring, Christian and Lauber, Andreas and Gunther, Fabian and Bellicoso, Carmine Dario and Tsounis, Vassilios and Fankhauser, P{\'e}ter and Diethelm, Remo and Bachmann, Samuel and Bl{\""o}sch, Michael and Kolvenbach, Hendrik and Bjelonic, Marko and Isler, Linus and Meyer, Konrad},
        journal={Advanced Robotics},
        volume={31},
        number={17},
        pages={918--931},
        year={2017},
        publisher={Taylor \& Francis}
    }

> ANYbotics,
> **""ANYmal – Autonomous Legged Robot“**,
> [https://www.anybotics.com/anymal](https://www.anybotics.com/anymal) (accessed: 01.01.2019)

    @misc{anymal,
        author = {ANYbotics},
        title = {{ANYmal - Autonomous Legged Robot}},
        howpublished = {\url{https://www.anybotics.com/anymal}},
        note = {Accessed: 2019-01-01}
    }

## Usage

Load the ANYmal description to the ROS parameter server:

    roslaunch anymal_b_simple_description load.launch

To visualize and debug the robot description, start the standalone visualization (note that you have to provide the following additional dependencies: `joint_state_publisher`, `robot_state_publisher`, `rviz`):

    roslaunch anymal_b_simple_description standalone.launch

### Launch files

* **`load.launch`:** Loads the URDF to the parameter server. Meant to be included in higher level launch files.

* **`standalone.launch`:** A standalone launch file that starts RViz and a joint state publisher to debug the description.
",,2019-04-08T13:55:49Z,2020-11-11T12:06:12Z,5,5,76,17,"('remod', 6), ('hogabrie', 3), ('lisler', 3), ('aravindev', 2), ('pfankhauser', 2)",0,0,
raphy202/E-WAY,Cheapest Travel option from any destinations A to B,"# E-WAY
Cheapest Travel option from any destinations A to B
",,2017-06-27T05:46:36Z,2018-11-01T00:35:05Z,3,2,0,2,"('ansanvarkey', 3), ('raphy202', 2), ('administrator', 1)",1,0,
lyusupov/UAT-test-signal,UAT (ADS-B 978) test signal generator,"# UAT (ADS-B 978) test signal generator

## Disclaimer

This low power UAT test source is designed for a lab or an aircraft hangar use only.

## Legitimate use

Radio being used in the project is rated for 14 dBm (25 mW) of maximum transmit power.
FCC compliant built-in RF filter reduces the power even more, down to approximately 1 mW on the reference frequency.
This power is sufficient to cover an area of just only few meters around the transmitter.

## Hardware

### Variant 1. Basic.

[TI SimpleLink CC1310 LaunchPad kit (915 MHz)](http://www.ti.com/tool/LAUNCHXL-CC1310)







### Variant 2. Advanced.







Schematics of the adapter and Gerber files of the PCB will be published soon after I'll receive the PCB samples
and will make sure that the design has no any critical issues.

#### Bill of materials

Number|Part|Qty|Picture|Source
---|---|---|---|---
1|PCB|1||&nbsp;TBD&nbsp;   -->
2|Ebyte E70-915T14SRF module|1|![](https://github.com/lyusupov/UAT-test-signal/raw/master/notes/pics/E70-915T14S.jpg)|[AliExpress](http://s.click.aliexpress.com/e/nysD1eu)
3|Female SMA-KHD|1||[AliExpress](https://www.aliexpress.com/item/10-Pcs-SMA-Female-Jack-Solder-Edge-1-6mm-Space-PCB-Mount-Straight-RF-Connector-New/32842094243.html)
4|2x7 female header 2.54mm|1|![](https://github.com/lyusupov/SoftRF/blob/master/documents/images/bom/f2x7.jpg)|Local
5|1x40 male header 2.54mm|2||[AliExpress](https://www.aliexpress.com/item/10pcs-40-Pin-1x40-Single-Row-Male-2-54-Breakable-Pin-Header-Connector-Strip-for-Arduino/32806313091.html)
6|XDS110 cJTAG debug tool (clone)|1||[AliExpress](https://www.aliexpress.com/item/-/32938193571.html)
7|40 pcs. female DuPont jumper wires|1||[AliExpress](http://www.aliexpress.com/item/40-pcs-30cm-1p-1p-female-to-female-2-54mm-Spacing-Jumper-Wire-Dupont-Cable/1905309688.html) 



## Firmware

### Build instructions

1) either:
- download this CCS project from GitHub, then upload it into your [TI CCS Cloud IDE](https://dev.ti.com/), or ;
- if you have a GitHub account: ""fork"" this project into your GitHub space, then import directly into TI CCS Cloud IDE.
2) build, then run the firmware on your CC1310 hardware with assistance of [TI Cloud Agent](http://processors.wiki.ti.com/index.php/TI_Cloud_Agent) and [TI Cloud Agent Bridge](https://chrome.google.com/webstore/detail/ticloudagent-bridge/pfillhniocmjcapelhjcianojmoidjdk) plug-in for Google Chrome browser.

## Validation

### Raw data

```
pi@raspberrypi:/run/tmp/dump978-master $ rtl_sdr -f 915000000 -s 2083334 -g 8 - | ./dump978
Found 1 device(s):
  0:  Generic, RTL2832U, SN: 77771111153705700

Using device 0: Generic RTL2832U
Found Rafael Micro R820T tuner
Exact sample rate is: 2083334.141630 Hz
[R82XX] PLL not locked!
Sampling at 2083334 S/s.
Tuned to 915000000 Hz.
Tuner gain set to 7.70 dB.
Reading samples in async mode...
-0d1abba154d8ec198ba602f0800000000074c28d855bfd0b4aa5c2a0000000000000;
...
```

### Text

```
pi@raspberrypi:/run/tmp/dump978-master $ rtl_sdr -f 915000000 -s 2083334 -g 8 - | ./dump978 | ./uat2text
Found 1 device(s):
  0:  Generic, RTL2832U, SN: 77771111153705700

Using device 0: Generic RTL2832U
Found Rafael Micro R820T tuner
Exact sample rate is: 2083334.141630 Hz
[R82XX] PLL not locked!
Sampling at 2083334 S/s.
Tuned to 915000000 Hz.
Tuner gain set to 7.70 dB.
Reading samples in async mode...
HDR:
 MDB Type:          1
 Address:           1ABBA1 (Fixed ADS-B Beacon Address)
SV:
 NIC:               0
 Latitude:          +59.6583
 Longitude:         +17.9617
 Altitude:          150 ft (barometric)
 Dimensions:        15.0m L x 11.5m W
 UTC coupling:      no
 TIS-B site ID:     0
MS:
 Emitter category:  Service vehicle
 Callsign:          RAMPTEST
 Emergency status:  No emergency
 UAT version:       2
 SIL:               3
 Transmit MSO:      18
 NACp:              10
 NACv:              2
 NICbaro:           1
 Capabilities:      CDTI ACAS
 Active modes:
 Target track type: true heading
AUXSV:
 Sec. altitude:     unavailable
...
```

### Map

```
pi@raspberrypi:/run/tmp $ rtl_sdr -f 915000000 -s 2083334 -g 8 - | ./dump978-master/dump978 | ./dump978-master/uat2json /run/tmp/dump1090-master/public_html/data/
Found 1 device(s):
  0:  Generic, RTL2832U, SN: 77771111153705700

Using device 0: Generic RTL2832U
Found Rafael Micro R820T tuner
Exact sample rate is: 2083334.141630 Hz
[R82XX] PLL not locked!
Sampling at 2083334 S/s.
Tuned to 915000000 Hz.
Tuner gain set to 7.70 dB.
Reading samples in async mode...
...
```




### ADS-B receiver


![](https://github.com/lyusupov/SoftRF/raw/master/documents/images/UATbridge_Stratux.JPG)


## Signal

[IQ file](https://github.com/lyusupov/UAT-test-signal/raw/master/notes/UAT_977MHz-8_333_MSps.wav) (WAV).
Taken at base frequency: 977 MHz . Sampling rate: 8.333 MSps.

![](https://github.com/lyusupov/UAT-test-signal/raw/master/notes/pics/UAT_Signal.JPG)



![](https://github.com/lyusupov/UAT-test-signal/raw/master/notes/pics/UAT_Spectrum.JPG)



## Data customization

1. Execute *UATEncoder.py* script with `` `` `` `` `` arguments:
```
$ python UATEncoder.py RAMPTEST 0x1ABBA1 59.6583 17.9617 137.8

#define UAT_DATA    ""0d1abba154d8ec198ba602f0800000000074c28d855bfd0b4aa5c2a0000000000000""


```

2. Edit *UAT_data.h* file:
```
#ifndef UAT_DATA

#define UAT_DATA    ""0d1abba154d8ec198ba602f0800000000074c28d855bfd0b4aa5c2a0000000000000""

#endif
```

3. Build your custom firmware and download it into your signal generator hardware.

","'ads-b', 'aviation', 'cc1310', 'radio', 'uat'",2018-12-21T16:06:31Z,2021-02-18T20:07:19Z,1,1,46,10,"('lyusupov', 29)",0,0,
Ingothq/ingot,Automated A/B Testing For WordPress,"# Ingot - Automated A/B Test Tool
All of the benefits of A/B Testing, none of the hassle.

Ingot is a commercial plugin available from [IngotHQ.com](http://ingothq.com). The plugin is hosted here on a public Github repository in order to better faciliate community contributions from developers and users alike. If you have a suggestion, a bug report, or a patch for an issue, feel free to submit it here. We do ask, however, that if you are using the plugin on a live site that you please purchase a valid license from the website. We cannot provide support or troubleshooting to anyone that does not hold a valid license key.

### DEVELOPERS: READ BEFORE CLONING THIS REPO OR DOWNLOADING
If you clone this repo, you will need to get the dependencies via Composer and Bower. Reading the grunt file should make that clear. If you don't know how to do that, but have a reason to need to clone this repo, and make it work, buy a license and contact our support.

### Copyright/ License
Copyright 2015 Josh Pollock & Ingot LLC. Licensed under the terms of the GNU GPL v2 or later.
",,2015-09-11T03:35:14Z,2016-08-12T01:51:58Z,4,3,24,7,"('Shelob9', 608), ('royboy789', 39), ('Roy Sivan', 25), ('Ramoonus', 3)",0,0,
mwaterfall/MWPhotoBrowser,"A simple iOS photo and video browser with grid view, captions and selections.","# MWPhotoBrowser


[![Version](https://img.shields.io/cocoapods/v/MWPhotoBrowser.svg?style=flat)](http://cocoapods.org/pods/MWPhotoBrowser)
[![License](https://img.shields.io/cocoapods/l/MWPhotoBrowser.svg?style=flat)](http://cocoapods.org/pods/MWPhotoBrowser)
[![Platform](https://img.shields.io/cocoapods/p/MWPhotoBrowser.svg?style=flat)](http://cocoapods.org/pods/MWPhotoBrowser)

[![Flattr this git repo](http://api.flattr.com/button/flattr-badge-large.png)](https://flattr.com/submit/auto?user_id=mwaterfall&url=https://github.com/mwaterfall/MWPhotoBrowser&title=MWPhotoBrowser&language=&tags=github&category=software)

## A simple iOS photo and video browser with optional grid view, captions and selections.

MWPhotoBrowser can display one or more images or videos by providing either `UIImage` objects, `PHAsset` objects, or URLs to library assets, web images/videos or local files. The photo browser handles the downloading and caching of photos from the web seamlessly. Photos can be zoomed and panned, and optional (customisable) captions can be displayed.

The browser can also be used to allow the user to select one or more photos using either the grid or main image view.

[![Alt][screenshot1_thumb]][screenshot1]    [![Alt][screenshot2_thumb]][screenshot2]    [![Alt][screenshot3_thumb]][screenshot3]    [![Alt][screenshot4_thumb]][screenshot4]    [![Alt][screenshot5_thumb]][screenshot5]    [![Alt][screenshot6_thumb]][screenshot6]

[screenshot1_thumb]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser1t.png
[screenshot1]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser1.png
[screenshot2_thumb]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser2t.png
[screenshot2]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser2.png
[screenshot3_thumb]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser3t.png
[screenshot3]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser3.png
[screenshot4_thumb]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser4t.png
[screenshot4]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser4.png
[screenshot5_thumb]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser5t.png
[screenshot5]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser5.png
[screenshot6_thumb]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser6t.png
[screenshot6]: https://raw.github.com/mwaterfall/MWPhotoBrowser/master/Screenshots/MWPhotoBrowser6.png

Works on iOS 7+. All strings are localisable so they can be used in apps that support multiple languages.

## Usage

MWPhotoBrowser is designed to be presented within a navigation controller. Simply set the delegate (which must conform to `MWPhotoBrowserDelegate`) and implement the 2 required delegate methods to provide the photo browser with the data in the form of `MWPhoto` objects. You can create an `MWPhoto` object by providing a `UIImage` object, `PHAsset` object, or a URL containing the path to a file, an image online or an asset from the asset library.

`MWPhoto` objects handle caching, file management, downloading of web images, and various optimisations for you. If however you would like to use your own data model to represent photos you can simply ensure your model conforms to the `MWPhoto` protocol. You can then handle the management of caching, downloads, etc, yourself. More information on this can be found in `MWPhotoProtocol.h`.

See the code snippet below for an example of how to implement the photo browser. There is also a simple demo app within the project.

```obj-c
// Create array of MWPhoto objects
self.photos = [NSMutableArray array];

// Add photos
[photos addObject:[MWPhoto photoWithURL:[NSURL fileURLWithPath:[[NSBundle mainBundle] pathForResource:@""photo2l"" ofType:@""jpg""]]]];
[photos addObject:[MWPhoto photoWithURL:[NSURL URLWithString:@""http://farm4.static.flickr.com/3629/3339128908_7aecabc34b.jpg""]]];
[photos addObject:[MWPhoto photoWithURL:[NSURL URLWithString:@""http://farm4.static.flickr.com/3590/3329114220_5fbc5bc92b.jpg""]]];

// Add video with poster photo
MWPhoto *video = [MWPhoto photoWithURL:[NSURL URLWithString:@""https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/11192696_824079697688618_1761661_n.jpg""]];
video.videoURL = [[NSURL alloc] initWithString:@""https://scontent.cdninstagram.com/hphotos-xpa1/t50.2886-16/11200303_1440130956287424_1714699187_n.mp4""];
[photos addObject:video];

// Create browser (must be done each time photo browser is
// displayed. Photo browser objects cannot be re-used)
MWPhotoBrowser *browser = [[MWPhotoBrowser alloc] initWithDelegate:self];

// Set options
browser.displayActionButton = YES; // Show action button to allow sharing, copying, etc (defaults to YES)
browser.displayNavArrows = NO; // Whether to display left and right nav arrows on toolbar (defaults to NO)
browser.displaySelectionButtons = NO; // Whether selection buttons are shown on each image (defaults to NO)
browser.zoomPhotosToFill = YES; // Images that almost fill the screen will be initially zoomed to fill (defaults to YES)
browser.alwaysShowControls = NO; // Allows to control whether the bars and controls are always visible or whether they fade away to show the photo full (defaults to NO)
browser.enableGrid = YES; // Whether to allow the viewing of all the photo thumbnails on a grid (defaults to YES)
browser.startOnGrid = NO; // Whether to start on the grid of thumbnails instead of the first photo (defaults to NO)
browser.autoPlayOnAppear = NO; // Auto-play first video

// Customise selection images to change colours if required
browser.customImageSelectedIconName = @""ImageSelected.png"";
browser.customImageSelectedSmallIconName = @""ImageSelectedSmall.png"";

// Optionally set the current visible photo before displaying
[browser setCurrentPhotoIndex:1];

// Present
[self.navigationController pushViewController:browser animated:YES];

// Manipulate
[browser showNextPhotoAnimated:YES];
[browser showPreviousPhotoAnimated:YES];
[browser setCurrentPhotoIndex:10];
```

Then respond to the required delegate methods:

```obj-c
- (NSUInteger)numberOfPhotosInPhotoBrowser:(MWPhotoBrowser *)photoBrowser {
    return self.photos.count;
}

- (id )photoBrowser:(MWPhotoBrowser *)photoBrowser photoAtIndex:(NSUInteger)index {
    if (index < self.photos.count) {
        return [self.photos objectAtIndex:index];
    }
    return nil;
}
```

You can present the browser modally simply by wrapping it in a new navigation controller and presenting that. The demo app allows you to toggle between the two presentation types.


### Videos

You can represent videos in MWPhoto objects by providing a standard MWPhoto image object with a `videoURL`. You can also use a `PHAsset` object or a URL to an assets library video.

```obj-c

// Video with URL including poster photo
MWPhoto *video = [MWPhoto photoWithURL:[NSURL URLWithString:@""https://scontent.cdninstagram.com/hphotos-xpt1/t51.2885-15/e15/11192696_824079697688618_1761661_n.jpg""]];
video.videoURL = [NSURL URLWithString:@""https://scontent.cdninstagram.com/hphotos-xpa1/t50.2886-16/11200303_1440130956287424_1714699187_n.mp4""];

// Video with PHAsset
MWPhoto *video = [MWPhoto photoWithAsset:asset targetSize:[UIScreen mainScreen].bounds.size]; // Example sizing

// Video with ALAsset
MWPhoto *video = [MWPhoto photoWithURL:asset.defaultRepresentation.url];
if ([asset valueForProperty:ALAssetPropertyType] == ALAssetTypeVideo) {
    photo.videoURL = asset.defaultRepresentation.url;
}

// Video with no poster photo
MWPhoto *video = [MWPhoto videoWithURL:[NSURL URLWithString:@""https://scontent.cdninstagram.com/hphotos-xfa1/t50.2886-16/11237510_945154435524423_2137519922_n.mp4""]];

// Video grid thumbnail
MWPhoto *videoThumb = [MWPhoto photoWithURL:[NSURL URLWithString:@""https://scontent.cdninstagram.com/hphotos-xaf1/t51.2885-15/s150x150/e15/11240463_963135443745570_1519872157_n.jpg""]];
videoThumb.isVideo = YES;

// Video grid thumbnail for video with no poster photo
MWPhoto *videoThumb = [MWPhoto new];
videoThumb.isVideo = YES;

```


### Grid

In order to properly show the grid of thumbnails, you must ensure the property `enableGrid` is set to `YES`, and implement the following delegate method:

```obj-c
- (id )photoBrowser:(MWPhotoBrowser *)photoBrowser thumbPhotoAtIndex:(NSUInteger)index;
```

The photo browser can also start on the grid by enabling the `startOnGrid` property.


### Actions

By default, if the action button is visible then the image (and caption if it exists) are sent to a UIActivityViewController.

You can provide a custom action by implementing the following delegate method:

```obj-c
- (void)photoBrowser:(MWPhotoBrowser *)photoBrowser actionButtonPressedForPhotoAtIndex:(NSUInteger)index {
    // Do your thing!
}
```


### Photo Captions

Photo captions can be displayed simply by setting the `caption` property on specific photos:

```obj-c
MWPhoto *photo = [MWPhoto photoWithURL:[NSURL URLWithString:@""http://farm4.static.flickr.com/3629/3339128908_7aecabc34b.jpg""]];
photo.caption = @""Campervan"";
```

No caption will be displayed if the caption property is not set.


#### Custom Captions

By default, the caption is a simple black transparent view with a label displaying the photo's caption in white. If you want to implement your own caption view, follow these steps:

1. Optionally use a subclass of `MWPhoto` for your photos so you can store more data than a simple caption string.
2. Subclass `MWCaptionView` and override `-setupCaption` and `-sizeThatFits:` (and any other UIView methods you see fit) to layout your own view and set it's size. More information on this can be found in `MWCaptionView.h`
3. Implement the `-photoBrowser:captionViewForPhotoAtIndex:` MWPhotoBrowser delegate method (shown below).

Example delegate method for custom caption view:

```obj-c
- (MWCaptionView *)photoBrowser:(MWPhotoBrowser *)photoBrowser captionViewForPhotoAtIndex:(NSUInteger)index {
    MWPhoto *photo = [self.photos objectAtIndex:index];
    MyMWCaptionViewSubclass *captionView = [[MyMWCaptionViewSubclass alloc] initWithPhoto:photo];
    return captionView;
}
```


#### Selections

The photo browser can display check boxes allowing the user to select one or more of the photos. To use this feature, simply enable the `displaySelectionButtons` property, and implement the following delegate methods:

```obj-c
- (BOOL)photoBrowser:(MWPhotoBrowser *)photoBrowser isPhotoSelectedAtIndex:(NSUInteger)index {
    return [[_selections objectAtIndex:index] boolValue];
}

- (void)photoBrowser:(MWPhotoBrowser *)photoBrowser photoAtIndex:(NSUInteger)index selectedChanged:(BOOL)selected {
    [_selections replaceObjectAtIndex:index withObject:[NSNumber numberWithBool:selected]];
}
```


## Installation

MWPhotoBrowser is available through [CocoaPods](http://cocoapods.org). To install
it, simply add the following line to your Podfile:

```ruby
pod ""MWPhotoBrowser""
```


## Usage

To run the example project, clone the repo, and run `pod install` from the Example directory first.

Then import the photo browser into your source files (or into your bridging header if you're using with Swift and not using frameworks with Cocoapods):

```obj-c
#import ""MWPhotoBrowser.h""
```

If you are using Swift and frameworks, then you can just import the browser into your Swift source file:

```swift
import MWPhotoBrowser
```


## Author

Michael Waterfall, michael@d3i.com


## License

MWPhotoBrowser is available under the MIT license. See the LICENSE file for more info.


## Notes

Demo photos kindly provided by [Oliver Waters]().
",,2010-10-21T15:40:47Z,2023-11-19T03:11:12Z,5,4,8742,301,"('mwaterfall', 184), ('David Muir', 1), ('dchohfi', 1), ('DeepFriedTwinkie', 1), ('ninjinkun', 1)",4,3,
racofix/architecture-for-android,🙈 Coroutines + flow + mvvm-clean / mvp,"# architectures
🙈 Coroutines + flow + mvvm-clean / mvp
","'coroutines-flow', 'mvp', 'mvvm-clean'",2016-03-17T07:08:27Z,2023-09-10T14:52:50Z,2,1,882,54,"('racofix', 6), ('leyi.zhou', 3)",0,0,
zalando-stups/planb-tokeninfo,Plan B Token Info service for JWT tokens,"=========================
Plan B Token Info Service
=========================

.. image:: https://travis-ci.org/zalando/planb-tokeninfo.svg?branch=master
    :target: https://travis-ci.org/zalando/planb-tokeninfo

.. image:: https://codecov.io/github/zalando/planb-tokeninfo/coverage.svg?branch=master
    :target: https://codecov.io/github/zalando/planb-tokeninfo?branch=master

.. image:: https://goreportcard.com/badge/github.com/zalando/planb-tokeninfo
    :target: https://goreportcard.com/report/github.com/zalando/planb-tokeninfo

.. image:: https://readthedocs.org/projects/planb/badge/?version=latest
   :target: https://readthedocs.org/projects/planb/?badge=latest
   :alt: Documentation Status

Lightweight service providing an OAuth 2 token info HTTP endpoint to validate JWT tokens issued by the `Plan B OpenID Connect Provider`_.

Current features:

* Download public keys (`set of JWKs`_) from OpenID provider
* Verify signed JWT tokens using the right public key (identified by ""kid"" `JOSE header`_)
* Proxy to upstream tokeninfo for non-JWT tokens and cache the response
* Download revocation lists from `Plan B Revocation Service`_
* Deny JWT tokens matching any revocation list

More information is available in our `Plan B Documentation`_.


Building
========

Requires Go 1.5 or higher.

.. code-block:: bash

    $ sudo apt-get install golang  # how to install Go on Ubuntu 15.10
    $ export GOPATH=$(pwd)         # first set GOPATH if not done already
    $ go get -t github.com/zalando/planb-tokeninfo
    $ go test github.com/zalando/planb-tokeninfo/...
    $ go install github.com/zalando/planb-tokeninfo

Running
=======

.. code-block:: bash

    $ export OPENID_PROVIDER_CONFIGURATION_URL=https://planb-provider.example.org/.well-known/openid-configuration
    $ export REVOCATION_PROVIDER_URL=https://planb-revocation.example.org/revocations
    $ $GOPATH/bin/planb-tokeninfo  # start server on port 9021

Now we can test our token info endpoint with a valid JWT access token:

.. code-block:: bash

    $ # using the Authorization header is the preferred method
    $ curl -H 'Authorization: Bearer MjoxLjUuMS0wdW..' localhost:9021/oauth2/tokeninfo
    $ # simple GET query parameter works too (not recommended!)
    $ curl localhost:9021/oauth2/tokeninfo?access_token=MjoxLjUuMS0wdW..

Running with Docker:

.. code-block:: bash

    $ TAG=$(curl https://registry.opensource.zalan.do/teams/stups/artifacts/planb-tokeninfo/tags | jq -r .[].name | tail -n 1)
    $ docker run -it -v /etc/ssl/certs:/etc/ssl/certs -p 9021:9021 -e OPENID_PROVIDER_CONFIGURATION_URL=https://planb-provider.example.org/.well-known/openid-configuration registry.opensource.zalan.do/stups/planb-tokeninfo:$TAG

Configuration
=============

The following environment variables are supported:

``OPENID_PROVIDER_CONFIGURATION_URL``
    URL of the `OpenID Connect configuration discovery document`_ containing the ``jwks_uri`` which points to a `set of JWKs`_.
``OPENID_PROVIDER_REFRESH_INTERVAL``
    The OpenID Connect configuration refresh interval. See `Time based settings`_
``UPSTREAM_TOKENINFO_URL``
    URL of upstream OAuth 2 token info for non-JWT Bearer tokens. Optional.
``UPSTREAM_CACHE_MAX_SIZE``
    Maximum number of entries for upstream token cache. It defaults to 10000.
``UPSTREAM_CACHE_TTL``
    The TTL for upstream token cache entries. It defaults to 60 seconds. Zero will disable the cache. See also `Time based settings`_
``REVOCATION_PROVIDER_URL``
    URL of of the Revocation service.
``REVOCATION_PROVIDER_REFRESH_INTERVAL``
    Refresh interval for polling the Revocation service. See `Time based settings`_
``REVOCATION_REFRESH_TOLERANCE``
    Amount of time to account for network latencies when polling the revocation service. Default is 60 seconds. See `Time based settings`_
``REVOCATION_CACHE_TTL``
    The TTL for Revocation cache entries. Default is 30 days. See `Time based settings`_
``REVOCATION_HASHING_SALT``
    Shared salt with Revocation service. Used for comparing hashed tokens from the Revocation service.
``LISTEN_ADDRESS``
    The address for the application listener. It defaults to ':9021'
``METRICS_LISTEN_ADDRESS``
    The address for the metrics listener. Should be different from the application listener. It defaults to ':9020'
``HTTP_CLIENT_TIMEOUT``
    The timeout for the default HTTP client. See `Time based settings`_
``HTTP_CLIENT_TLS_TIMEOUT``
    The timeout for the default HTTP client when using TLS. See `Time based settings`_

Time based settings
-------------------

Some of the above settings accept time based definitions. Those definitions can be specified as a string that can be understood by time.ParseDuration().
For ex., '10s' for 10 seconds, '1h10m' for 1 hour and 10 minutes, '100ms' for 100 milliseconds.
A simple numeric value is interpreted as Seconds. For ex., '30' is interpreted as 30 seconds.

Metrics
=======

Metrics are exposed by default on port 9020 ""/metrics"". They include:

``planb.openidprovider.numkeys``
    Number of public keys in memory.
``planb.tokeninfo.proxy``
    Timer for the proxy handler (includes cached results and upstream calls).
``planb.tokeninfo.proxy.cache.hits``
    Number of upstream cache hits.
``planb.tokeninfo.proxy.cache.misses``
    Number of upstream cache misses.
``planb.tokeninfo.proxy.cache.expirations``
    Number of upstream cache misses because of expiration.
``planb.tokeninfo.proxy.upstream``
    Timer for calls to the upstream tokeninfo. Cached responses are not measured here.

.. _Plan B OpenID Connect Provider: https://github.com/zalando/planb-provider
.. _Plan B Revocation Service: https://github.com/zalando/planb-revocation
.. _Plan B Documentation: http://planb.readthedocs.org/
.. _JOSE header: https://tools.ietf.org/html/rfc7515#section-4
.. _set of JWKs: https://tools.ietf.org/html/rfc7517#section-5
.. _OpenID Connect configuration discovery document: https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfigurationResponse
",,2016-02-11T10:00:50Z,2017-05-17T17:19:26Z,12,9,17,20,"('hjacobs', 97), ('Jeff Santarossa', 78), ('lmineiro', 49), ('lmineiro', 12), ('jeffsantarossa', 11), ('Víctor Roldán Betancort', 10), ('vroldanbet', 9), ('vetinari', 9), ('smirnov', 4), ('aryszka', 3), ('jbspeakr', 2), ('gargravarr', 1)",1,1,
AtomLinter/linter-perl,"Lint Perl 5 on the fly, using perl (B::Lint).","linter-perl package
===================

This linter plugin for [Linter](https://github.com/AtomLinter/Linter) provides an interface to perl.
It will be used with files that have the ""Perl"" syntax.

## Installation

* Install [Perl 5](http://www.perl.org/).
* `apm install linter` (optional)
  * If you didn't install linter package, it will be installed on first activation.
* `apm install linter-perl`

## Settings

You can configure linter-perl by editing ~/.atom/config.cson (choose Open Your Config in Atom menu):

```coffee
""linter-perl"":
  # The absolute path of perl interpreter.
  # If this was given, executeCommandViaShell and autoDetectCarton are ignored.
  ""executablePath"": null
  # Is the command executed via `$SHELL -l`?
  # This is useful when PATH is setup in .bash_profile, etc.
  # If true, executablePath option is ignored.
  ""executeCommandViaShell"": false
  # Is carton enabled if there are both ""cpanfile.snapshot"" and ""local/""
  # in the current root directory?
  ""autoDetectCarton"": true
  # This is passed to the perl interpreter directly.
  ""additionalPerlOptions"": null
  # Relative include paths from the current root directory.
  ""incPathsFromProjectRoot"": [""."", ""lib""]
  # B::Lint options. ""-MO=Lint,HERE""
  # ex. ""all,no-bare-subs,no-context""
  ""lintOptions"": ""all""
```

NOTE: ""The current root directory"" is the root directory in tree-view
which contains the file opened in the active text editor.
If no root directories contain the file, its parent directory is selected
as the current root directory.

### plenv Support

There are three ways to use this package with [plenv](https://github.com/tokuhirom/plenv):

- Open a project by `atom .` in your shell.
- Otherwise (e.g. drag & drop),
  - set `""/absolute/path/to/.plenv/shims""` to `perlExecutablePath` (this way is not portable)
  - set `true` to `executeCommnadViaShell` (`perlExecutablePath` is ignored)

[Perlbrew](http://perlbrew.pl/) is not tested, but those methods could be used.

## Contributing

If you would like to contribute enhancements or fixes, please do the following:

1. Fork the plugin repository.
1. Hack on a separate topic branch created from the latest `master`.
1. Commit and push the topic branch.
1. Make a pull request.
1. welcome to the club

Please note that modifications should follow these coding guidelines:

- Indent is 2 spaces.
- Code should pass coffeelint linter.
- Vertical whitespace helps readability, don’t be afraid to use it.

Thank you for helping out!
",,2014-06-21T05:37:19Z,2022-03-07T09:47:21Z,7,4,9,3,"('s-shin', 63), ('Arcanemagus', 19), ('renovate-bot', 3), ('Alex Koz. 👾', 1), ('Heinrich', 1), ('fand', 1), ('ryozi-tn', 1)",4,1,
sindresorhus/maxmin,"Get a pretty output of the original, minified, gzipped size of a string or buffer: 130 B → 91 B → 53 B (gzip)","# maxmin

> Get a pretty output of the original, minified, gzipped size of a string or buffer

![](screenshot.png)

Useful for logging the difference between original and minified file in, for example, a build-system.

## Install

```sh
npm install maxmin
```

## Usage

```js
import maxmin from 'maxmin';

const max = 'function smoothRangeRandom(min,max){var num=Math.floor(Math.random()*(max-min+1)+min);return this.prev=num===this.prev?++num:num};';

const min = '(function(b,c){var a=Math.floor(Math.random()*(c-b+1)+b);return this.a=a===this.a?++a:a})()';

console.log(maxmin(max, min, true));
//=> '130 B → 91 B → 53 B (gzip)'
```

## API

### maxmin(max, min, useGzip?)

#### max

Type: `string | Buffer | number`

Original string or its size in bytes.

#### min

Type: `string | Buffer | number`

Minified string or its size in bytes.

#### useGzip

Type: `boolean`\
Default: `false`

Show gzipped size of `min`. Pretty slow. Not shown when `min` is a `number`.
",,2014-02-28T21:05:17Z,2024-06-04T11:38:54Z,5,5,56,8,"('sindresorhus', 30), ('philippsimon', 1), ('Richienb', 1), ('ntwb', 1), ('TomerAberbach', 1)",4,4,
SangKa/PWA-Book-CN,第一本 PWA 中文书,"# PWA实战：面向下一代的Progressive Web APP

## 重要通知

2018-6-20

**由于中文纸质书的出版，原作者通过中文出版物了解到此仓库，对于在网上开源半本书的行为比较担心，所以找到我并希望能将内容下架，出于对原作者的尊重，暂时先将之前的翻译内容全部下架，希望大家能够理解。**

2018-6-15

**[赠书活动获奖名单](https://github.com/SangKa/PWA-Book-CN/issues/37)出炉，恭喜拿到新书的小伙伴**

2018-6-7

**开放网上预售: [预售链接](https://item.jd.com/12365091.html)**

2018-6-6

**感谢大家一直以来的支持，赠书活动来了，想第一时间拿到纸质书的小伙伴行动起来吧。[活动链接](https://github.com/SangKa/PWA-Book-CN/issues/36)**

2018-5-17

**编辑工作已经全部完成，现已进入印刷阶段。**

2018-4-18

**预计五月份正式出版，现已进入收尾阶段，后面会第一时间放出预售链接，敬请关注。另外，感谢大家这段时间以来的支持与鼓励。**

2017-12-10

**目前已经和本书中文版权方博文视点达成出版意向，目前已开放章节仅作为纸版书的开放阅读部分，并非完整和最终版本，后续还有大量修订和优化，后续章节目前正在紧张翻译中，虽然不会再同步开源至 GitHub ，但会第一时间在这里将翻译出版进度同步给各位 ([查看出版进度](https://github.com/SangKa/PWA-Book-CN/wiki/%E5%87%BA%E7%89%88%E8%BF%9B%E5%BA%A6))。敬请大家关注纸版书的发布，预计出版时间: 2018年上半年。另外感谢大家的关注与支持，部分读者将有机会第一时间获赠纸质书。**

![Progressive Web Apps](./cover.png)

## 本书相关资源

* [PWA 官网](https://developers.google.com/web/progressive-web-apps/)
* [全书代码示例](https://github.com/deanhume/progressive-web-apps-book)
* [Let’s Encrypt](https://letsencrypt.org) - 免费的 HTTPS 证书授权
* [Lighthouse](https://github.com/GoogleChrome/lighthouse) - PWA 的审核、性能指标和最佳实践工具
* [webpagetest.org](https://www.webpagetest.org/) - 网站性能测试工具
* [Service Worker Toolbox](https://github.com/GoogleChromeLabs/sw-toolbox) - Service Worker 工具库
* [Manifest Validator](https://manifest-validator.appspot.com/) 清单文件验证工具
* [OneSignal](https://onesignal.com/) 第三方跨平台推送通知工具
","'progressive-web-app', 'pwa', 'pwa-book', 'pwa-chinese-book', 'service-worker'",2017-11-27T16:03:25Z,2018-06-20T09:27:05Z,1,1,3465,159,"('SangKa', 1)",1,1,
norsez/BDDynamicGridViewController,Data-aware view-controller that displays a UIView list in an automatically laid out grid,"#BDDynamicGridViewController - Data-aware view-controller that displays a UIView list in an automatically laid out grid.

Data-aware view controller that displays a UIView list (typically, UIImageView list) in a row-dominated grid layout. This class automatically lay out the UIViews with help from a delegate class (which is supplier by you.) The class is inspired by the beautiful [iCarousel](https://github.com/nicklockwood/iCarousel) class by [Nick Lockwood](https://github.com/nicklockwood)

##Sample Screenshot (better viewed in the iOS demo project.)

These are sample layout of the same UIView list automatically laid out by this class.

[![](https://github.com/norsez/BDDynamicGridViewController/raw/master/BDDynamicGridViewDemo/screencap1.png)](https://github.com/norsez/BDDynamicGridViewController/raw/master/BDDynamicGridViewDemo/screencap1.png) [![](https://github.com/norsez/BDDynamicGridViewController/raw/master/BDDynamicGridViewDemo/screencap2.png)](https://github.com/norsez/BDDynamicGridViewController/raw/master/BDDynamicGridViewDemo/screencap2.png) [![](https://github.com/norsez/BDDynamicGridViewController/raw/master/BDDynamicGridViewDemo/screencap3.png)](https://github.com/norsez/BDDynamicGridViewController/raw/master/BDDynamicGridViewDemo/screencap3.png)

##How to use
###Installation 
- Copy `.h/.m` files from the `Classes` folder into your code base
- Or you can use Cocoapods, add the following line into your Podfile

    dependency 'BDDynamicGridViewController'

###Implementation
####`BDDynamicGridViewController`
This is the main view controller initialized using `init`. Subclassing is recommended. Once initialized, set a delegate class to it. It receives delegate of type `BDDynamicGridViewDelegate`. See next. 

One you have your delegate set up. Call `reloadData` to see the layout. Each call to `reloadData` creates a new layout.

Once the view is loaded. User can tap on each view. There are two gestures supported, namely, long press and double tap. These are configurable using blocks through the following properties: `onLongPress` and `onDoubleTap`. Each block call is supplied with the gesture-recognized UIView and its index corresponding to the index in the `-viewAtIndex` method.


####`BDDynamicGridViewDelegate`
This is the delegate protocol needed by `BDDynamicGridViewController`. All methods are required to implement.

- `-numberOfViews` returns the total count of UIViews to display.
- `-viewAtIndex:` returns a UIView at an index specified.
- `-maximumViewsPerCell` returns the maximum number of UIViews per row. `BDDynamicGridViewController` uses this method to determine how many UIViews it can fill in each row at the most.
- `-rowHeightForRowInfo` `BDDynamicGridViewController` calls this method in order to set each row's height. The supplied `rowInfo` contains the information useful for the delegate to decide on the row height, such as, the number of UIViews contained in this row, etc.

That's it!

##Requirements
- Tested on simulator for iOS 5.1, 6.1 and 7.0
- Requires ARC


##How to use
- Be sure to checkout the latest __tag__, as opposed to the latest commit. Only tagged points are stable.
- Include h/.m files in Classes folder to your source code
- or use [Cocoapods](https://github.com/CocoaPods/CocoaPods/), add the following line into your Podfile

    dependency 'BDDynamicGridViewController'
    
- Check out the iPhone demo. Read the comments. Send me questions, if any.

##Apps using BDDynamicGridViewController

- [Photosophia iOS for Flickr Groups](http://www.google.com/url?sa=t&rct=j&q=photosophia%20app&source=web&cd=4&cad=rja&ved=0CDYQFjAD&url=http%3A%2F%2Fitunes.apple.com%2Fus%2Fapp%2Fphotosophia-for-flickr-groups%2Fid530161971%3Fmt%3D8&ei=2DA8UPDzEcLsrAed3YGwAQ&usg=AFQjCNEqFsfzipOIXDlFn1gzTmcioNsV2A&sig2=4J9p4wXIWYC-rGLzF5LXbg) (Shameless plug :)
- Please let me know of your apps so I can extend this list. Thanks!

##License
BDDynamicGridViewController is licensed under BSD. More info in LICENSE file.",,2012-06-22T04:00:50Z,2016-02-11T08:08:11Z,9,3,554,66,"('norsez', 49), ('norsez', 25), ('nor', 19), ('norsez', 9), ('Norsez Orankijanan', 4), ('nebiros', 1), ('Nuno Sousa', 1), ('nunofgs', 1), ('Nuno Sousa', 1)",4,2,
ghmartin77/B-ROBOT_EVO2_ESP32,ESP32 port of JJRobots brilliant B-ROBOT_EVO2,"# B-ROBOT_EVO2_ESP32
ESP32 port of JJRobots brilliant B-ROBOT_EVO2

The robot:
![Robot](assets/Robot.png)

Circuit top:
![Circuit Top](assets/CircuitTop.png)

Circuit bottom:
![Circuit Bottom](assets/CircuitBottom.png)


Pin connections (refer to defines.h to change):
* Enable motors: P12
* Servo: P17
* Motor1 Dir: P27
* Motor1 Step: P14
* Motor2 Dir: P25
* Motor2 Step: P26
* I2C pins for gyro: (defaults) SDA=P21, SCL=P22

ESP-32 Board is a NodeMCU ESP32s, see [Pinout](http://esp32.net/images/Ai-Thinker/NodeMCU-32S/Ai-Thinker_NodeMCU-32S_DiagramPinout.png).

**Important note:** At the time of this writing (January 2018) the recent version of arduino-esp32 contains changes that break the I2C communication with the IMU a few seconds after startup.
This version is known to work reliably for the purpose of the robot:
https://github.com/espressif/arduino-esp32/tree/32c028a27e6b3c3c3df769bb42f0d87917e0309c

For more details on the I2C problem mentioned, please refer to these issues (haven't tried the forks mentioned there):
* https://github.com/espressif/arduino-esp32/issues/834
* https://github.com/espressif/arduino-esp32/issues/839

Further discussions, information, circuit diagrams and more you can find in the corresponding thread in JJRobots forum at http://forums.jjrobots.com/showthread.php?tid=1399

",,2017-10-13T23:48:42Z,2021-12-15T14:13:00Z,1,1,54,11,"('ghmartin77', 11)",0,0,
thenerdery/nerdbot,The Nerdery's Hubot,"# Nerd-bot

This is The Nerdery's [Hubot](https://github.com/github/hubot). Nerds: Hop in the ""Nerd Bot"" room if you have questions.

## Running locally (OSX)

*Prerequisites:*

 * Install Homebrew (http://brew.sh/) `ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""`
 * `brew install node`
 * `brew install icu4c`
 * `brew install redis`
 * `chmod 755 bin/hubot`
 
To run, start redis and initialize with a shell

 # `redis-server /usr/local/etc/redis.conf &`
 # `bin/hubot -a shell`

To test your scripts, type commands such as `hubot howdy`

```
Hubot> hubot howdy
Hubot> Good 'aye!, Shell
Hubot> Shell: Hubot at your service!
```

## Contributing

To add new commands, find an [existing Hubot script](http://hubot-script-catalog.herokuapp.com/), or [write your own](https://github.com/github/hubot/blob/master/docs/scripting.md):

* Fork the repo, and clone it locally.
* Add .coffee file to `scripts` folder
* Push to your fork and submit a pull request.
    * It is considered good form to add a pun to pun.coffee with every pull request
",,2014-06-25T16:08:49Z,2018-04-23T14:00:26Z,24,13,19,7,"('tvanfosson', 39), ('pb30', 32), ('cmetcalf-nerdery', 26), ('apticknor', 23), ('jeremy-nerdery', 23), ('chadmetcalf', 12), ('Sherman Bausch', 11), ('Bendetta', 7), ('Justin Mullin', 7), ('Phillip Brand', 6), ('Josh Klun', 5), ('Drew Brown', 4), ('Justin Mullin', 4), ('JustinMullin', 4), ('Ken Sykora', 3), ('jmullin', 3), ('damionbroadaway', 2), ('kingchills', 2), ('amarasco', 1), ('Alexander Arbit', 1), ('amorger', 1), ('dly', 1), ('Matthew Loberg', 1), ('Nick Mallare', 1)",6,3,
infofiend/Hue_B_Smart,"Hue B Smart - total control of Hue Bulbs, Groups, Scenes, and more!","# **HUE B SMART**
Hue B Smart - total control of Hue Bulbs, Groups, Scenes, and more!


This is a follow-up to my earlier Hue Connect Service Manager called Hue Lights Groups Scenes (oh my).  This version has ability to integrate & control all of your (i) Hue Color Bulbs, (ii) Hue Lux Bulbs, (iii) Hue Color Groups, (iv) Hue Lux-Only Groups, and (v) Hue Scenes.

Its very fast and responsive (whether controlling a bulb, group, or a scene).  It is a complete overhaul from the HLGS app, so if you are switching from that app, you will unfortunately need to start over.  A PITA, yes, but I'm sure that you'll be very happy with the end result.

**Installation**
To install, you will need to import the Hue B Smart app *AND* all of the relevant DTHs into the IDE.  If you only have Hue Color bulbs, then you will need to import (i) the bridge DTH, (ii) the Hue Bulb DTH, (iii) the Hue Group DTH, (iv) and the Hue Scenes DTH.  If you also have Hue Lux bulbs, then you will also need to import (v) the Hue Lux Bulb DTH and (vi) the Hue Lux Group DTH.

This version does not have the ability to create, delete, or modify groups or the ability to create or delete scenes directly.  That functionality will come in version 1.1, along with the ability to incorporate Hue Hub schedules (and maybe more!).  In the meantime, if you need to create / delete groups or scenes, you will need to use either the Philips Hue app or the CLIP API debugger (instructions for the CLIP debugger can be found [here](http://www.developers.meethue.com/documentation/getting-started).  

You _can_ update the level, hue, and saturation settings for an existing scene by clicking the ""Update Scene"" tile in any Scene device.  Note, however, that all of the lights of that scene will be updated when you do so.

**Scenes**
As in the HLGS app, scenes are momentary devices.  A new feature is the ""setToGroup"" function for scenes.  This function (which you can use in CoRE) allows you to apply the selected scene to a single Group -- rather than to all of the bulbs in that Scene.  This means that you do not need to set up individual scenes for each Room / Group, thus drastically reducing the number of scenes you need.  

For example, I have 25 Hue lights in my house.  I set up a single scene for each of my location modes (e.g., ""Morning"", ""Daytime"", ""Nighttime"", ""Late"", etc.).  I then set up a CoRE Piston for each room of my house, and when the appropriate conditions are met for each room, I use the same Scene momentary device as the action, calling the ""setToGroup"" function and use that room's group number as the parameter.  My Living Room group has the groupID of ""1"" (each  Group device displays its groupID number), so to apply the Morning Scene only in my Living Room, I select the ""Morning"" momentary switch, use the ""setToGroup"" task, and set Parameter #1 (type Number) to the value of 1.  I then limit that action to execute only when my house is in Morning mode, and repeat this for each of my modes.  

In this way, I really don't use the groups themselves at all -- they are just parameters for how / where I want my Scenes to work.  

Of course, if I want any scene to work on all of the lights, I just push that Scene's momentary button (scenes, by default, use a Group of ""0"" - which the Hue Hub interprets as ""all lights"").


Please let me know if you run into any problems, or have any suggestions.  

And, if you feel like making a donation for these community efforts, it would be greatly appreciated: https://www.paypal.me/anthonypastor . Thanks!
",,2016-10-21T06:47:43Z,2020-04-06T05:08:20Z,2,1,29,13,"('Anthony Pastor', 27), ('infofiend', 3)",0,0,
scratchfoundation/scratch-blocks,Scratch Blocks is a library for building creative computing interfaces.,"# scratch-blocks

Scratch Blocks is a library for building creative computing interfaces.

[![CircleCI](https://dl.circleci.com/status-badge/img/gh/LLK/scratch-blocks/tree/develop.svg?style=shield)](https://dl.circleci.com/status-badge/redirect/gh/LLK/scratch-blocks/tree/develop)

![An image of Scratch Blocks running on a tablet](https://cloud.githubusercontent.com/assets/747641/15227351/c37c09da-1854-11e6-8dc7-9a298f2b1f01.jpg)

## Introduction

Scratch Blocks is a fork of Google's [Blockly](https://github.com/google/blockly) project that provides a design
specification and codebase for building creative computing interfaces. Together with the [Scratch Virtual Machine
(VM)](https://github.com/scratchfoundation/scratch-vm) this codebase allows for the rapid design and development of visual
programming interfaces. Unlike [Blockly](https://github.com/google/blockly), Scratch Blocks does not use [code
generators](https://developers.google.com/blockly/guides/configure/web/code-generators), but rather leverages the
[Scratch Virtual Machine](https://github.com/scratchfoundation/scratch-vm) to create highly dynamic, interactive programming
environments.

*This project is in active development and should be considered a ""developer preview"" at this time.*

## Two Types of Blocks

![A divided image showing horizontal blocks on the left and vertical blocks on the right](https://cloud.githubusercontent.com/assets/747641/15255731/dad4d028-190b-11e6-9c16-8df7445adc96.png)

Scratch Blocks brings together two different programming ""grammars"" that the Scratch Team has designed and continued
to refine over the past decade. The standard [Scratch](https://scratch.mit.edu) grammar uses blocks that snap together
vertically, much like LEGO bricks. For our [ScratchJr](https://scratchjr.org) software, intended for younger children,
we developed blocks that are labelled with icons rather than words, and snap together horizontally rather than
vertically. We have found that the horizontal grammar is not only friendlier for beginning programmers but also better
suited for devices with small screens.

## Documentation

The ""getting started"" guide including [FAQ](https://scratch.mit.edu/developers#faq) and [design
documentation](https://github.com/scratchfoundation/scratch-blocks/wiki/Design) can be found in the
[wiki](https://github.com/scratchfoundation/scratch-blocks/wiki).

## Donate

We provide [Scratch](https://scratch.mit.edu) free of charge, and want to keep it that way! Please consider making a
[donation](https://secure.donationpay.org/scratchfoundation/) to support our continued engineering, design, community,
and resource development efforts. Donations of any size are appreciated. Thank you!

## Committing

This project uses [semantic release](https://github.com/semantic-release/semantic-release) to ensure version bumps
follow semver so that projects depending on it don't break unexpectedly.

In order to automatically determine version updates, semantic release expects commit messages to follow the
[conventional-changelog](https://github.com/bcoe/conventional-changelog-standard/blob/master/convention.md)
specification.

You can use the [commitizen CLI](https://github.com/commitizen/cz-cli) to make commits formatted in this way:

```bash
npm install -g commitizen@latest cz-conventional-changelog@latest
```

Now you're ready to make commits using `git cz`.
",,2016-01-07T15:49:10Z,2024-06-18T06:11:33Z,142,116,2545,165,"('rachel-fenichel', 884), ('renovatebot', 828), ('NeilFraser', 771), ('dependabot-previewbot', 452), ('tmickel', 331), ('paulkaplan', 304), ('ericrosenbaum', 236), ('kchadha', 205), ('semantic-release-bot', 163), ('chrisgarrity', 161), ('seanlip', 159), ('renovate-bot', 157), ('picklesrus', 115), ('marisaleung', 104), ('thisandagain', 100), ('AnmAtAnm', 78), ('Nikerabbit', 73), ('drigz', 63), ('cwillisf', 61), ('espertus', 53), ('rschamp', 45), ('towerofnix', 39), ('Ray Schamp', 37), ('siebrand', 34), ('fsih', 26), ('quachtina96', 24), ('edauterman', 23), ('daarond', 20), ('CoryDCode', 18), ('carlosperate', 18), ('TheBrokenRail', 17), ('epicfaace', 16), ('RoboErikG', 14), ('Immortalin', 12), ('timdawborn', 11), ('mrjacobbloom', 10), ('Ron de las Alas', 10), ('Kenny2github', 10), ('DD Liu', 8), ('joaoh1', 8), ('benjiwheeler', 8), (""Andy O'Neill"", 7), ('K-ran', 7), ('trodi', 7), ('tansly', 7), ('adroitwhiz', 7), ('Kaworru', 6), ('gnarf', 6), ('mzgoddard', 6), ('khanning', 6), ('Cori Hudson', 6), ('dlaliberte', 5), ('miguel76', 5), ('kyleplo', 5), ('joshyrobot', 5), ('Tymewalk', 5), ('Mathias Søholm', 5), ('Lee Howett', 5), ('Christopher Willis-Ford', 5), ('carloslfu', 4), ('shirletan', 4), ('pkendall64', 4), ('Clark-E', 4), ('Brian Geppert', 4), ('svbatalov', 4), ('aoneill01', 4), ('allisonshaw', 4), ('julescubtree', 3), ('ivanixgames', 3), ('cori hudson', 3), ('vincentbriglia', 3), ('MicrosoftSam', 3), ('mfrtrifork', 3), ('MarkusBordihn', 3), ('Ivan Wang', 3), ('ErikMejerHansen', 3), ('ZenithRogue', 3), ('zgtm', 2), ('vicng', 2), ('hyperobject', 2), ('apple502j', 2), ('bigeyex', 2), ('harbaum', 2), ('seotts', 2), ('samelhusseini', 2), ('RaniSputnik', 2), ('pjkui', 2), ('niccokunzmann', 2), ('moniika', 2), ('madCode', 2), ('tarling', 2), ('twodee', 2), ('BryceLTaylor', 2), ('TechplexEngineer', 2), ('TonyLianLong', 1), ('petrusek', 1), ('ensonic', 1), ('gengshenghong', 1), ('svipul', 1), ('sclements', 1), ('Shane Clements', 1), ('rexpie', 1), ('Grahack', 1), ('Patrick', 1), ('NAllred91', 1), ('cesium12', 1), ('Wang Yu', 1), ('Winston', 1), ('vetrovosk', 1), ('dependabotbot', 1), ('g-rocket', 1), ('howettl', 1), ('a49594a', 1), ('joker314', 1), ('sjhuang26', 1), ('lindt', 1), ('steven dale', 1), ('BBI-YggyKing', 1), ('IAmAnubhavSaini', 1), ('benjie', 1), ('Bryce Taylor', 1), ('cdjackson', 1), ('ciaranj', 1), ('DerekTBrown', 1), ('Emma Dauterman', 1), ('ewpatton', 1), ('hasso', 1), ('eqot', 1), ('jano42', 1), ('jimmo', 1), ('jordiorlando', 1), ('justingeeslin', 1), ('Katelyn Mann', 1), ('Ke, Mingze', 1), ('waitingcheung', 1), ('takaokouji', 1), ('lizlooney', 1), ('Lord Niels N. Horn', 1), ('Madeeha', 1), ('mraerino', 1), ('MichaelZawadzki', 1), ('Muthiah Annamalai', 1)",48,35,
dreikanter/ruby-bookmarks,Ruby and Ruby on Rails bookmarks collection,"# Ruby Bookmarks [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

This is a curated collection of essential Ruby and Ruby on Rails resources. The project aims to maintain a well-structured reference equally useful both for beginners and advanced web developers.

★&nbsp;stands here for Editors' Choice.

This list is not intended to include any random resource related to Ruby programming (we already have a most complete gem catalogue at [ruby-toolbox.com](https://ruby-toolbox.com) and [Awesome Ruby](https://ruby.libhunt.com)), but only the best and most actual alternatives in each area. You will find here latest editions of the most important books, time and community tested gems (alive projects only!), and actively updated websites. *Sharing and pull requests are very much appreciated!*

**[Fork and edit](https://github.com/dreikanter/ruby-bookmarks/edit/master/README.md)**

PS: Check out [awesome-awesomeness](https://github.com/bayandin/awesome-awesomeness) for other community-driven bookmark collections.

## Table of Contents

- [Books](#books)
  - [For beginners and intermediate level developers](#for-beginners-and-intermediate-level-developers)
  - [Advancing Ruby knowledge](#advancing-ruby-knowledge)
  - [Ruby on Rails for beginners](#ruby-on-rails-for-beginners)
  - [Ruby on Rails, advanced level](#ruby-on-rails-advanced-level)
  - [Testing](#testing)
  - [Other frameworks and tools](#other-frameworks-and-tools)
- [Blogs](#blogs)
- [Screencasts and courses](#screencasts-and-courses)
- [Other Learning Materials](#other-learning-materials)
- [Style Guides](#style-guides)
- [Podcasts](#podcasts)
- [Tools](#tools)
  - [IDEs and text editors](#ides-and-text-editors)
  - [Code quality analysis](#code-quality-analysis)
  - [Environment management](#environment-management)
  - [Ruby distributions](#ruby-distributions)
  - [Documentation](#documentation)
  - [Application and Web Servers](#application-and-web-servers)
  - [Deployment Automation and Configuration Management](#deployment-automation-and-configuration-management)
  - [Other tools](#other-tools)
- [Quizzes, tests, exams](#quizzes-tests-exams)
- [Deployment](#deployment)
- [Security](#security)
- [Gems](#gems)
  - [ActiveRecord](#activerecord)
  - [API](#api)
  - [Authentication](#authentication)
  - [Authorization](#authorization)
  - [Avatars](#avatars)
  - [Background Jobs](#background-jobs)
  - [Bootstrap](#bootstrap)
  - [CLI](#cli)
  - [CSS](#css)
  - [Configuration and environment variables](#configuration-and-environment-variables)
  - [Debugging](#debugging)
  - [E-commerce](#e-commerce)
  - [Graphics](#graphics)
  - [HTML, XML](#html-xml)
  - [Logging](#logging)
  - [Mail](#mail)
  - [Markdown](#markdown)
  - [Message Queuing](#message-queuing)
  - [Misc](#misc)
  - [Multithreading](#multithreading)
  - [Profiling and Performance](#profiling-and-performance)
  - [Rack](#rack)
  - [Rails](#rails)
  - [Scheduling](#scheduling)
  - [SDKs and API Wrappers](#sdks-and-api-wrappers)
  - [Search](#search)
  - [Security](#security)
  - [Serialization](#serialization)
  - [State Machines](#state-machines)
  - [Syntax Highlighters](#syntax-highlighters)
  - [Template engines](#template-engines)
  - [Testing](#testing)
  - [Web Frameworks](#web-frameworks)


## Books

### For beginners and intermediate level developers

- ★ [Eloquent Ruby](http://www.amazon.com/Eloquent-Ruby-Addison-Wesley-Professional/dp/0321584104/) by *Russ Olsen*
- [I Love Ruby](https://i-love-ruby.gitlab.io/) by Karthikeyan A. K.
- [Programming Ruby](http://pragprog.com/book/ruby4/programming-ruby-1-9-2-0) by *Dave Thomas*, *Andy Hunt*, and *Chad Fowler*
- [Learn Ruby The Hard Way](https://www.amazon.com/dp/032188499X) by *Zed A. Shaw* ([Official site](http://ruby.learncodethehardway.org/book/))
- [The Ruby Programming Language](http://www.amazon.com/dp/0596516177) by *David Flanagan* and *Yukihiro ""Matz"" Matsumoto*
- [Why's Poignant Guide to Ruby](http://mislav.uniqpath.com/poignant-guide/) by *Why the Lucky Stiff*

### Advancing Ruby knowledge

- ★ [Practical Object-Oriented Design in Ruby](http://poodr.com) by *Sandi Metz*
- ★ [Ruby Under a Microscope: An Illustrated Guide to Ruby Internals](http://www.amazon.com/dp/1593275277/) by *Pat Shaughnessy* ([Official site](http://patshaughnessy.net/ruby-under-a-microscope))
- ★ [Confident Ruby: 32 Patterns for Joyful Coding](http://www.amazon.com/dp/B00ETE0D2S/) by *Avdi Grimm* ([Official site](http://www.confidentruby.com/))
- [Modern Front-End Development for Rails](https://pragprog.com/titles/nrclient2/modern-front-end-development-for-rails-second-edition/)
- [Polished Ruby Programming](https://www.amazon.com/Polished-Ruby-Programming-maintainable-high-performance-ebook/dp/B093TH9P7C) by *Jeremy Evans*
- [Exceptional Ruby: Master the Art of Handling Failure in Ruby](http://pragprog.com/book/ager/exceptional-ruby) by *Avdi Grimm*
- [Metaprogramming Ruby: Program Like the Ruby Pros](http://www.amazon.com/dp/B00A376YAK/) by *Paolo Perrotta*
- [The Well-Grounded Rubyist](http://www.amazon.com/The-Well-Grounded-Rubyist-David-Black/dp/1617291692/) by *David A. Black*
- [Clean Ruby](http://clean-ruby.com/) by *Jim Gay*
- [Reliably Deploying Rails Applications](https://leanpub.com/deploying_rails_applications) by *Ben Dixon*
- [Rubyfu](http://rubyfu.net) - Collection of ideas, tricks and skills for hackers, an open source book.
- [Demystifying Rails](https://launchschool.com/books/demystifying_rails/read/introduction) by *Launch School* — This book doesn't teach how to use Rails to build prototypes. Instead, this book dives one layer below the surface to expose how Rails is pieced together.
- [The Ruby Bibliography](http://rubybib.org/) - Academic writing on the Ruby programming language.

### Ruby on Rails for beginners

- ★ [The Rails 5 Way](https://www.amazon.com/dp/B077D9X5NM/) by *Obie Fernandez*
- [Agile Web Development with Rails 6](https://pragprog.com/book/rails6/agile-web-development-with-rails-6)
- [The Ruby on Rails Tutorial](https://www.railstutorial.org/book) by *Michael Hartl*
- [Learn Ruby on Rails](http://www.amazon.com/dp/B00QK2T1SY) by *Daniel Kehoe*

### Ruby on Rails, advanced level

- [Crafting Rails 4 Applications: Expert Practices for Everyday Rails Development](http://www.amazon.com/Crafting-Rails-Applications-Practices-Development/dp/1937785556/) by *José Valim*
- [Rails AntiPatterns: Best Practice Ruby on Rails Refactoring](http://www.amazon.com/Rails-AntiPatterns-Refactoring-Addison-Wesley-Professional/dp/0321604814/) by *Chad Pytel*, *Tammer Saleh*
- [Deploying Rails: Automate, Deploy, Scale, Maintain, and Sleep at Night](http://www.amazon.com/Deploying-Rails-Automate-Deploy-Maintain/dp/1934356956/) by *Tom Copeland*, *Anthony Burns*
- [Multitenancy with Rails](http://leanpub.com/multi-tenancy-rails) by *Ryan Bigg*
- [Ruby Science](https://gumroad.com/l/ruby-science) by *thoughtbot*
- [Rebuilding Rails](https://rebuilding-rails.com/) by *Noah Gibbs*
- [The Complete Guide to Rails Performance](https://www.railsspeed.com/) by *Nate Berkopec*

### Testing

- [The RSpec Book: Behaviour Driven Development with RSpec, Cucumber, and Friends](http://www.amazon.com/The-RSpec-Book-Behaviour-Development/dp/1934356379/) by *David Chelimsky*, *Dave Astels*, *Bryan Helmkamp*, *Dan North*, *Zach Dennis*, *Aslak Hellesoy*
- [Rails 5 Test Prescriptions: Build a Healthy Codebase](https://pragprog.com/book/nrtest3/rails-5-test-prescriptions) by *Noel Rappin*
- [Continuous Testing](http://pragprog.com/news/continuous-testing-with-ruby-rails-and-javascript-now-in-print) by *Ben Rady* and *Rod Coffin*
- [Everyday Rails Testing with RSpec](https://leanpub.com/everydayrailsrspec) by *Aaron Sumner*
- [What Do I Test?](https://whatdoitest.com/) by *Eric Steele*
- [Testing Rails](http://testingrailsbook.com) by *thoughtbot*
- [Rails Testing Handbook](https://semaphoreci.com/ebooks/rails-testing-handbook) by *Semaphore*

### Other frameworks and tools

- [RubyMotion](http://www.amazon.com/RubyMotion-Pragmatic-Programmers-Clay-Allsopp/dp/1937785289/) by *Clay Allsopp*
- [Build Awesome Command-Line Applications in Ruby 2](http://pragprog.com/book/dccar2/build-awesome-command-line-applications-in-ruby-2) by *David Copeland*
- [Sinatra Book](https://github.com/sinatra/sinatra-book/) — a cookbook full of excellent tutorials and recipes for developing Sinatra web applications.
- [The Guide to Cuba](http://theguidetocuba.io) — this book will teach you how to create a Ruby web application from scratch using Cuba microframework.

## Blogs

- [Arkency Blog](https://blog.arkency.com/)
- [BigBinary Blog](https://www.bigbinary.com/blog) — Ruby on Rails, ReactJS, React Native, open source, engineering and design.
- [Drifting Ruby](https://www.driftingruby.com/episodes)
- [Everyday Rails](https://everydayrails.com/)
- [Justin Weiss](http://www.justinweiss.com/blog/archives/)
- [Official Rails Blog](https://rubyonrails.org/blog/)
- [RubyFlow](http://rubyflow.com)
- [RubyGuides](https://www.rubyguides.com) — Ruby tutorials & articles to help you become a better developer
- [Sandi Metz](https://www.sandimetz.com/blog/) - Writes about flexible object-oriented code in Ruby and Rails, avid speaker.
and author of [Practical Object-Oriented Design in Ruby](http://poodr.com).

## Community Resources

- [/r/rails](http://reddit.com/r/rails) — Rails community on Reddit.
- [/r/ruby](http://reddit.com/r/ruby) — Ruby community on Reddit.
- [dev.to/t/ruby](https://dev.to/t/ruby) — dev.to posts on Ruby.
- [Explore Ruby Libraries](https://kandi.openweaver.com/explore/ruby) — Discover & find a curated list of popular & new libraries, top authors, trending project kits, discussions, tutorials & learning resources on kandi.
- [lobste.rs/t/ruby](https://lobste.rs/t/ruby) - Stories tagged as `ruby` on Lobste.rs.
- [Rails Girls](http://guides.railsgirls.com/) — Rails tutorials for girls in a variety of languages.
- [Ruby Weekly](https://rubyweekly.com/) – A free, once–weekly e-mail round-up of Ruby news and articles.
- [StackOverflow](https://stackoverflow.com/questions/tagged/ruby) — Questions tagged with `ruby`.
- [StackOverflow](https://stackoverflow.com/questions/tagged/ruby-on-rails) — Questions tagged with `ruby-on-rails`.

## Screencasts and courses

- ★ [Pluralsight](https://www.pluralsight.com/search?q=ruby) Ruby Course Library.
- ★ [RubyTapas](http://rubytapas.com) by Avdi Grimm.
- ★ [GoRails](https://gorails.com) — a series of screencasts and guides for all aspects of Ruby on Rails. Learn how to setup your machine, build a Rails application, and deploy it to a server.
- ★ [The Pragmatic Studio](http://pragmaticstudio.com)
- ★ [Lynda.com](http://www.lynda.com/search?q=ruby)
- ★ [Thoughtbot Upcase](https://thoughtbot.com/upcase/)
- [Hanami Mastery](https://hanamimastery.com) - Articles & screencasts about awesome ruby projects.
- [Ruby From Scratch](https://www.codemy.net/posts/rfs-introduction-to-ruby-001/sets/ruby-from-scratch)
- [Rails Foundation](https://www.codemy.net/posts/rails-generating-an-app/sets/rails-foundation)
- [Rails API](https://www.codemy.net/posts/rails-api-generating-an-api-only-rails-app-001/sets/rails-api)
- [RubyPlus](https://rubyplus.com/episodes)
- [Ruby screencasts at TutsPlus.com](http://code.tutsplus.com/categories/ruby/courses)
- [Rails screencasts at TutsPlus.com](http://code.tutsplus.com/categories/rails/courses)
- [RailsCasts](http://railscasts.com)
- [Learn Rails the Zombie Way](http://railsforzombies.org)
- [CodeAcademy](http://www.codecademy.com/tracks/ruby)
- [confreaks.com](http://confreaks.com/) — expert recording services for conferences, seminars, and workshops.
- [Learnable](https://learnable.com/topics/ruby) — video courses and books ($30 per month).
- [Destroy All Software](https://www.destroyallsoftware.com/) — by Gary Bernhardt.
- [RubySteps](https://www.rubysteps.com) - daily emails on Ruby, Rails, TDD, OOP, and Refactoring with code examples and challenges. Also mob programming events with guest developers and Pat Maddox. ($149 per month).
- [UT on Rails](http://www.schneems.com/ut-rails/) - 10 weeks long Ruby on Rails
  screencasts. It assumes you know little about programming and not used Ruby,
Rails or databases previously. Good for beginners.
- [Drifting Ruby](https://www.driftingruby.com/)
- [The Complete Ruby on Rails Developer Course](https://www.udemy.com/the-complete-ruby-on-rails-developer-course/) - A complete begginer friendly low price course on udemy with a lot of extra infos.

## Other Learning Materials

- [Ruby Videos](https://rubyvideo.dev) – index of all Ruby-related videos from conferences and meetups worldwide.
- [TryRuby](http://tryruby.org) — online Ruby console and 15 minute interactive Ruby tutorial.
- [Project Euler](http://projecteuler.net) — a huge amount of programming problems to learn any language.
- [PuzzleNode](http://puzzlenode.com) — a site for coders who enjoy to work on challenging problems, and is inspired by similar efforts such as Project Euler and the Internet Problem Solving Contest.
- [Ruby on Rails Guides](http://guides.rubyonrails.org) — These guides are designed to make you immediately productive with Rails, and to help you understand how all of the pieces fit together.
- [Ruby Koans](http://rubykoans.com) — will walk you along the path to enlightenment in order to learn Ruby. The goal is to learn the Ruby language, syntax, structure, and some common functions and libraries. We also teach you culture. Testing is not just something we pay lip service to, but something we live. It is essential in your quest to learn and do great things in the language.
- [RubyMonk](https://rubymonk.com) — free, interactive tutorials to help you discover Ruby idioms, in your browser!
- [SitePoint](http://www.sitepoint.com/ruby/) — articles on Ruby programming.
- [Better Specs](http://betterspecs.org) — RSpec best practices.
- [Sourcegraph](https://sourcegraph.com) — search engine for code examples/ Here is a [demo video](https://www.youtube.com/watch?v=YYL0ZoPeB5w).
- [Basic Algorithms written in Ruby](https://github.com/Djo/algorithms).
- [Algorithms and Data Structures in Ruby](https://github.com/kumar91gopi/Algorithms-and-Data-Structures-in-Ruby)
- [Jumpstart Lab](http://tutorials.jumpstartlab.com/) — a list of beginner and advanced-level Ruby, Rails, and Sinatra project tutorials.  Includes challenging independent projects as well.
- [RubyOffRails](https://rubyoffrails.com/) — An online Ruby course recently open sourced.
- [The Odin Project](http://www.theodinproject.com/ruby-programming) — an online Ruby lesson plan with a community to help.
- [Ruby one-liners cookbook](https://learnbyexample.github.io/learn_ruby_oneliners/preface.html) — free guide for text processing with Ruby from the command line.
- [Ruby Regexp](https://learnbyexample.github.io/Ruby_Regexp/preface.html) — free ebook to learn Ruby regular expressions, includes exercises.
- [Kandi](https://kandi.openweaver.com/explore/ruby#Top-Authors) - Explore Ruby and all its libraries along with many projects.
- [Ruby Cheatsheet](https://github.com/lifeparticle/Ruby-Cheatsheet) — a cheatsheet for beginners.

## Style Guides

- [The Ruby Style Guide](https://github.com/bbatsov/ruby-style-guide)
- [The Rails Style Guide](https://github.com/bbatsov/rails-style-guide)
- [GitHub Ruby Coding Style](https://github.com/styleguide/ruby)
- [Thoughtbot Style Guides](https://github.com/thoughtbot/guides) (Ruby, Rails, Git some other technologies)

See also:

- [Semantic Versioning](http://semver.org)
- [Keep a CHANGELOG](http://keepachangelog.com) — don’t let your friends dump git logs into CHANGELOGs™
- [Code quality analysis tools](#code-quality-analysis).

## Podcasts

- [Code and the Coders Who Code it](https://podcast.drbragg.dev/)
- [Remote Ruby](https://remoteruby.transistor.fm/)
- [Ruby5](http://ruby5.envylabs.com)
- [Ruby Rogues](http://rubyrogues.com)
- [Ruby on Rails Podcast](http://5by5.tv/rubyonrails)
- [Giant Robots Smashing into Other Giant Robots](http://podcasts.thoughtbot.com/giantrobots)

## Tools

### IDEs and text editors

- StackOverflow: [What Ruby IDE do you prefer?](http://stackoverflow.com/questions/16991/what-ruby-ide-do-you-prefer)
- ★ [Sublime Text](http://www.sublimetext.com) — one of the best text editors for coding. Take a look at [Sublime Bookmarks](https://github.com/dreikanter/sublime-bookmarks) — a comprehensive list of plugins and other related stuff.
- [RubyMine](http://jetbrains.com/ruby/) — intelligent Ruby and Rails IDE.
- [Atom](http://atom.io) — a brand-new hackable text editor from Github.
- [Visual Studio Code](code.visualstudio.com) — Redefined code editor from Microsoft with [Ruby debugging support](https://marketplace.visualstudio.com/items?itemName=rebornix.Ruby).

### Code quality analysis
- [sonarlint-intellij](https://github.com/SonarSource/sonarlint-intellij) - An IDE extension that helps you detect and fix quality issues as you write code.
- [RuboCop](https://github.com/bbatsov/rubocop) — a Ruby static code analyzer, based on the community Ruby style guide.
- [Guard plugin for RuboCop](https://github.com/yujinakayama/guard-rubocop) — allows you to automatically check Ruby code style with RuboCop when files are modified.
- [RubyCritic](https://github.com/whitesmith/rubycritic) — a gem that wraps around static analysis gems such as Reek, Flay and Flog to provide a quality report of your Ruby code.

### Environment management

- ★ [rbenv](https://github.com/sstephenson/rbenv) — a tool to pick a Ruby version for your application and guarantee that your development environment matches production. Put rbenv to work with Bundler for painless Ruby upgrades and bulletproof deployments.
- [rbenv-vars](https://github.com/sstephenson/rbenv-vars) — an rbenv plugin that safely sets global and per-project environment variables.
- [RVM](https://rvm.io) — a command-line tool which allows you to easily install, manage, and work with multiple ruby environments from interpreters to sets of gems.
- [chruby](https://github.com/postmodern/chruby) — a tool that changes the current Ruby.

### Ruby distributions

- [RubyInstaller](http://rubyinstaller.org) — a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.
- [RubyStack](https://bitnami.com/stack/ruby) — a complete development environment for Ruby on Rails that can be deployed in one click. It includes the latest stable release of Ruby, RVM, Rails, Apache, NGinx, MySQL, SQLite, Git and Subversion, Memcache and Varnish, Sphinx, PHP and phpMyAdmin.

### Documentation

- [Dash](http://kapeli.com/dash) — an API Documentation Browser and Code Snippet Manager. Dash stores snippets of code and instantly searches offline documentation sets for 150+ APIs, including Ruby core libraries, and Ruby on Rails.
- [Zeal](http://zealdocs.org) – Dash alternative for Linux & Windows.
- [DevDocs](http://devdocs.io) — multiple API documentations in a fast, organized, and searchable interface (web).
- [OmniRef](https://omniref.com) — comprehensive ruby documentation search (web).

### Application and Web Servers

- [Unicorn](http://unicorn.bogomips.org) – Rack HTTP server for fast clients and Unix.
- [Phusion Passenger](https://phusionpassenger.com) — a fast and robust web server and application server for Ruby, Python and Node.js.
- [Thin](http://code.macournoyer.com/thin/) – A very fast & simple Ruby web server.
- [Puma](https://github.com/puma/puma) — a Ruby web server built for concurrency.
- [Pow!](http://pow.cx) — a zero-config Rack server for Mac OS X.
    - [Powder](https://github.com/Rodreegez/powder) — user-friendly CLI wrapper for Pow.
    - [Powify](https://github.com/sethvargo/powify) — a management tool for Pow by 37 signals. It allows you to easily install, update, and manage pow and pow applications seamlessly.
- [Prax](http://ysbaddaden.github.io/prax/) — a pure ruby alternative to Pow! that runs on GNU/Linux.
- [TorqueBox](http://torquebox.org) — an application platform that supports popular technologies such as Ruby on Rails and Sinatra, while extending the footprint of Ruby applications to include built-in support for services such as messaging, scheduling, caching, and daemons. TorqueBox provides an all-in-one environment, built upon the latest JBoss AS Java application server and JRuby. Functionality such as clustering, load-balancing and high-availability is included right out-of-the-box.

See also:

- [The Ruby Web Benchmark Report](http://www.madebymarket.com/blog/dev/ruby-web-benchmark-report.html) (July 2014) — „I benchmarked every single version of Ruby available as of the beginning of this test — January 2014. On each version I benchmarked every Rack server and web framework combination I could find. I tested with both Apache Bench and wrk to see if there are flaws that one benchmarking tool picks up on that the other didn’t. The goal of the benchmark is the fastest benchmark run, not the average.“
- [App Server Arena](https://blog.engineyard.com/2014/ruby-app-server-arena-pt1) — a comparison of popular ruby application servers.

### Deployment Automation and Configuration Management

- [Capistrano](https://github.com/capistrano/capistrano) — remote multi-server automation tool.
- [Chef](https://github.com/opscode/chef) — a systems integration framework, built to bring the benefits of configuration management to your entire infrastructure.
- ★ [Mina](https://github.com/mina-deploy/mina) – really fast deployer and server automation tool.
- [Rails + Nginx + Unicorn Dockerfile](https://github.com/seapy/dockerfiles/tree/master/rails-nginx-unicorn) — easy useable docker for rails. less configuration, affordable production.

### Other tools

- [Pry](http://pryrepl.org) — a powerful alternative to the standard IRB shell for Ruby. It features syntax highlighting, a flexible plugin architecture, runtime invocation and source and documentation browsing.
- [Reek](https://github.com/troessner/reek) — code smell detection for Ruby.
- [Foreman](https://github.com/ddollar/foreman) — manage Procfile-based applications.
- [Rubular](http://rubular.com) — a Ruby-based regular expression editor. It's a handy way to test regular expressions as you write them.
- [httpie](https://github.com/jakubroztocil/httpie) — extremely handy  command line HTTP client, a user-friendly cURL replacement.
- [ngrok](https://ngrok.com) — introspected tunnels to localhost. ngrok creates a tunnel from the public internet (http://subdomain.ngrok.com) to a port on your local machine. You can give this URL to anyone to allow them to try out a web site you're developing without doing any deployment.
- [eye](https://github.com/kostya/eye) — a process monitor.
- [god](https://github.com/mojombo/god) - the Ruby Framework for Process Management
- [DuckRails](https://github.com/iridakos/duckrails) - development tool for mocking API endpoints quickly & dynamically.
- [Cloud 66](https://help.cloud66.com/) - build, deploy, and manage your applications on any cloud, or on your own server. 

## Quizzes, tests, exams

- [CodeQuizzes](https://www.codequizzes.com) — Learn programming by doing, not by reading.
- [codewars.com](http://www.codewars.com) — Achieve mastery through challenge.
- [21 Essential Ruby Interview Questions](https://www.toptal.com/ruby/interview-questions) at Toptal.

## Deployment

- [A guide to setting up a Ruby on Rails production environment](https://gorails.com/deploy/ubuntu/14.04) at DigitalOcean.
- [How To Automate Ruby On Rails Application Deployments Using Capistrano](https://www.digitalocean.com/community/tutorials/how-to-automate-ruby-on-rails-application-deployments-using-capistrano)
- [How to Use the DigitalOcean Dokku Application](https://www.digitalocean.com/community/tutorials/how-to-use-the-digitalocean-dokku-application)
- [How To Use the Dokku One-Click DigitalOcean Image to Run a Ruby on Rails App](https://www.digitalocean.com/community/tutorials/how-to-use-the-dokku-one-click-digitalocean-image-to-run-a-ruby-on-rails-app)

## Security

- [OWASP Ruby on Rails Cheat Sheet](https://cheatsheetseries.owasp.org/cheatsheets/Ruby_on_Rails_Cheat_Sheet.html)
- [Ultimate Guide to Rack::Attack](https://wafris.org/guides/ultimate-guide-to-rack-attack)
- [Awesome Ruby Security](https://github.com/pxlpnk/awesome-ruby-security)

## Gems

### ActiveRecord

- [Annotate](https://github.com/ctran/annotate_models) — Add a comment summarizing the current schema to the top or bottom of each of your ActiveRecord models, fixtures, tests and specs, factory_girl factories, routes.rb file, etc.
- [Paperclip](https://github.com/thoughtbot/paperclip) — easy file attachment management for ActiveRecord.
- [Thinking Sphinx](https://github.com/pat/thinking-sphinx) — a library for connecting ActiveRecord to the Sphinx full-text search tool, and integrates closely with Rails (but also works with other Ruby web frameworks).
- [Ancestry](https://github.com/stefankroes/ancestry) — organise ActiveRecord model into a tree structure.
- [Squeel](https://github.com/activerecord-hackery/squeel) — lets you write your Active Record queries with fewer strings, and more Ruby, by making the Arel awesomeness that lies beneath Active Record more accessible.
- [pp_sql](https://github.com/kvokka/pp_sql) - Rails ActiveRecord SQL queries log beautifier.

### API

- [RABL](https://github.com/nesquena/rabl) — a Rails and Padrino ruby templating system for generating JSON, XML, MessagePack, PList and BSON.
- [Grape](https://github.com/intridea/grape) — an opinionated micro-framework for creating REST-like APIs in Ruby.
- [Pliny](https://github.com/interagent/pliny) – write excellent APIs in Ruby.
- [Committee](https://github.com/interagent/committee) - A collection of middleware to help build services with JSON Schema, OpenAPI 2, OpenAPI 3.
- [Savon](https://github.com/savonrb/savon) - a micro-framework to handle all the soap(WSDL) requests.

### Authentication

- [Devise](https://github.com/plataformatec/devise) — flexible authentication solution for Rails with Warden.
- [OmniAuth](https://github.com/intridea/omniauth) — a flexible authentication system utilizing Rack middleware.
- [Authlogic](https://github.com/binarylogic/authlogic) — a clean, simple, and unobtrusive ruby authentication solution.
- [sorcery](https://github.com/NoamB/sorcery) — magical Authentication for Rails 3 and 4, with OAuth support. Supports ActiveRecord, DataMapper, Mongoid and MongoMapper.

### Authorization

- [CanCanCan](https://github.com/CanCanCommunity/cancancan) — a continuation of the dead. [CanCan](https://github.com/ryanb/cancan) project. Our mission is to keep CanCan alive and moving forward, with maintenance fixes and new features.
- [Pundit](https://github.com/elabs/pundit) — minimal authorization through OO design and pure Ruby classes.

### Avatars

- [avatarly](https://github.com/lucek/avatarly) — a simple gem for creating gmail-like user avatars based on user email or any other string passed.

### Background Jobs

- [Sidekiq](http://sidekiq.org) — a full-featured background processing framework for Ruby. It aims to be simple to integrate with any modern Rails application and much higher performance than other existing solutions.
- [Backburner](https://github.com/nesquena/backburner) — a beanstalkd-powered job queue that can handle a very high volume of jobs.
- [Delayed::Job](https://github.com/tobi/delayed_job) — database backed asynchronous priority queue.
- [que](https://github.com/chanks/que) — a Ruby job queue that uses PostgreSQL's advisory locks for speed and reliability.
- [Resque](https://github.com/resque/resque) — a Redis-backed Ruby library for creating background jobs, placing them on multiple queues, and processing them later.
- [Sucker Punch](https://github.com/brandonhilkert/sucker_punch) — an asynchronous processing library using Celluloid, heavily influenced by Sidekiq and girl_friday.
- [Ohm](https://github.com/soveran/ohm) — object-hash mapping for Redis.
- [Karafka](https://github.com/karafka/karafka) - Ruby and Rails multi-threaded efficient Kafka processing framework. It allows you to capture everything that happens in your systems in large scale.

### Bootstrap

- [bootstrap-sass](https://github.com/twbs/bootstrap-sass) — official SASS port of Twitter Bootstrap.
- [twitter-bootstrap-rails](https://github.com/seyhunak/twitter-bootstrap-rails) — Twitter Bootstrap for Rails asset pipeline.

### CLI

- [colorize](https://github.com/fazibear/colorize) — String class extension. It add some methods to set color, background color and text effect on console easier using ANSI escape sequences.
- [TTY](https://github.com/peter-murach/tty) — a toolbox for developing beautiful command line clients in Ruby.

### CSS

- [LESS](https://github.com/cowboyd/less.rb) — leaner CSS, in your browser or Ruby.
- [Bourbon](http://bourbon.io) — a lightweight mixin library for Sass.
- [SASS](https://github.com/sass/sass) — an extension of CSS3, adding nested rules, variables, mixins, selector inheritance, and more. It's translated to well-formatted, standard CSS using the command line tool or a web-framework plugin.
- [Bitters](https://github.com/thoughtbot/bitters) — add a dash of pre-defined style to your Bourbon.
- [Autoprefixer](https://github.com/ai/autoprefixer-rails) — a tool to parse CSS and add vendor prefixes to CSS rules using values from the Can I Use. This gem provides Ruby and Ruby on Rails integration with this JavaScript tool.

### Configuration and environment variables

- ★ [dotenv](https://github.com/bkeepers/dotenv) — loads environment variables from .env file into ENV in development.
- [Chamber](https://github.com/thekompanee/chamber) — A surprisingly configurable convention-based approach to managing your application's custom configuration settings.
- [Figaro](https://github.com/laserlemon/figaro) — simple, Heroku-friendly Rails app configuration using ENV and a single YAML file.

### Debugging

- [Pry](http://pryrepl.org) - A runtime developer console and IRB alternative with powerful introspection capabilities.
- [Byebug](https://github.com/deivid-rodriguez/byebug) — a simple to use, feature rich debugger for Ruby 2. It uses the new TracePoint API for execution control and the new Debug Inspector API for call stack navigation, so it doesn't depend on internal core sources. It's developed as a C extension, so it's fast. And it has a full test suite so it's reliable.

### E-commerce

- [FastSpring](https://github.com/fastspring/fastspring-ruby) — subscription API for Rails.
- [Active Merchant](https://github.com/Shopify/active_merchant) — a simple and unified API to access dozens of different payment gateways with very different internal APIs.
- [PayPal](https://github.com/paypal/rest-api-sdk-ruby) — this SDK provides Ruby APIs to create, process and manage payment.
- [Solidus](https://github.com/solidusio/solidus) — An open source ecommerce solution built with Ruby on Rails.

### Graphics

- [RMagick](https://github.com/rmagick/rmagick) — an interface to the ImageMagick and GraphicsMagick image processing libraries.
- [MiniMagick](https://github.com/minimagick/minimagick) — a ruby wrapper for ImageMagick or GraphicsMagick command line.
- [psd.rb](https://github.com/layervault/psd.rb) Parse Photoshop files in Ruby with ease.

### HTML, XML

- [Nokogiri](http://nokogiri.org) — an HTML, XML, SAX, and Reader ","'awesome', 'awesome-list', 'bookmarks', 'list', 'rails', 'ruby'",2014-06-25T13:23:41Z,2024-01-31T06:35:40Z,65,60,2199,133,"('dreikanter', 233), ('ekremkaraca', 5), ('GaganGupta19', 5), ('Colin Hart', 3), ('matugm', 3), ('amyhong52', 2), ('bensheldon', 2), ('kolomeetz', 2), ('iridakos', 2), ('MarkFChavez', 2), ('learnbyexample', 2), ('wscourge', 2), ('dblack', 1), ('aj-foster', 1), ('ahmadsoe', 1), ('Trevoke', 1), ('aspyatkin', 1), ('Arman Jon Villalobos', 1), ('absterjr', 1), ('bobbilee19', 1), ('calonso', 1), ('cassianoblonski', 1), ('consti', 1), ('DanielKehoe', 1), ('cloudbring', 1), ('speric', 1), ('cesc1989', 1), ('franzejr', 1), ('kumar91gopi', 1), ('JamesPaden', 1), ('jdickey', 1), ('jmettraux', 1), ('janosrusiczki', 1), ('KINGSABRI', 1), ('mindaslab', 1), ('Kasia66', 1), ('lujanfernaud', 1), ('MehmetCelik4', 1), ('mensfeld', 1), ('markoa', 1), ('matt-lough', 1), ('mezbahalam', 1), ('mpron', 1), ('torokmark', 1), ('jastix', 1), ('oshanz', 1), ('thesp0nge', 1), ('oicitrapdraz', 1), ('pedrosmmoreira', 1), ('rebornix', 1), ('spekulatius', 1), ('skywinder', 1), ('robbyrussell', 1), ('radar', 1), ('cllns', 1), ('swilgosz', 1), ('BravoSimone', 1), ('StanBright', 1), ('Wolg', 1), ('Steve', 1), ('Toby Woller', 1), ('Vetal4eg', 1), ('Yatish Mehta', 1), ('zacksiri', 1), ('juboucher', 1)",53,49,
cityboy001/Bilibili,B站自动答题,"# Bilibili
1. 将lib文件夹下的代码复制
2. 打开一个chrome/360/QQ浏览器等现代浏览器,进入B站答题页面,按下f12打开控制台
3. 将复制的粘贴到console页,回车执行,即可自动做完第一部分,后面的两部分请自行百度搜索答案.
4. 由于B站的答题机制问题,答题时间最低不能少于20分钟,请注意最提交时间
",,2019-06-03T01:00:32Z,2019-06-04T05:03:25Z,1,1,22,0,"('cityboy001', 6)",0,0,
Bukkit/Bukkit,The Minecraft Mod API,"Bukkit
======

A Minecraft Server API.

Website: [http://bukkit.org](http://bukkit.org)  
Bugs/Suggestions: [http://leaky.bukkit.org](http://leaky.bukkit.org)  
Contributing Guidelines: [CONTRIBUTING.md](https://github.com/Bukkit/Bukkit/blob/master/CONTRIBUTING.md)

Compilation
-----------

We use maven to handle our dependencies.

* Install [Maven 3](http://maven.apache.org/download.html)
* Check out this repo and: `mvn clean install`
",,2011-01-02T23:47:25Z,2023-12-17T05:19:57Z,123,103,2381,174,"('Dinnerbone', 392), ('EvilSeph', 184), ('Wolvereness', 119), ('sk89q', 96), ('grum', 85), ('feildmaster', 69), ('EvilSeph', 51), ('durron597', 48), ('amaranth', 37), ('CelticMinstrel', 31), ('Cogito', 21), ('rmichela', 21), ('tahg', 21), ('Taylor Kelly', 20), ('stevenh', 18), ('t00thpick1', 18), ('sunkid', 17), ('Raphfrk', 17), ('mikeprimm', 13), ('gmcferrin', 9), ('Rigby90', 9), ('TomyLobo', 8), ('mbax', 7), ('gravitylow', 7), ('VictorD', 6), ('lukegb', 5), ('Celtic Minstrel', 5), ('Erik Broes', 5), ('speakeasy', 4), ('riking', 4), ('zml2008', 4), ('EdGruberman', 4), ('crast', 4), ('SagaciousZed', 4), ('FrozenCow', 4), ('jlogsdon', 4), ('Zeerix', 4), ('ScoreUnder', 4), ('natemort', 4), ('Lymia', 4), ('holic', 3), ('md-5', 3), ('tips48', 3), ('DeltaWhy', 3), ('angelsl', 3), ('Afforess', 3), ('Warren', 3), ('T00thpick1', 3), ('verrier', 3), ('SpaceManiac', 3), ('Peter200lx', 3), ('sleak', 2), ('fullwall', 2), ('eueln', 2), ('aPunch', 2), ('Timberjaw', 2), ('eisental', 2), ('psycowithespn', 2), ('Meaglin', 2), ('LordRalex', 2), ('jrtc27', 2), ('Forsaken87', 2), ('dashkal16', 2), ('Black-Hole', 2), ('andrepl', 2), ('MisterVector', 2), ('admtnnr', 2), ('Acrobot', 2), ('Xephi', 1), ('thvortex', 1), ('wizjany', 1), ('willurd', 1), ('V10lator', 1), ('turt2live', 1), ('Tanel Suurhans', 1), ('Simon Rigby', 1), ('wilsonsd', 1), ('ST-DDT', 1), ('sargant', 1), ('robbiet480', 1), ('Protected', 1), ('Alexander Hesse', 1), ('YLivay', 1), ('aPunch', 1), ('bendem', 1), ('aviansie-ben', 1), ('Crazy-Uncle-Harris', 1), ('craftycreeper', 1), ('culturespy', 1), ('mcasper', 1), ('meiskam', 1), ('mushroomhostage', 1), ('nitnelave', 1), ('obnoxint', 1), ('anpage', 1), ('starrynte', 1), ('Animosity', 1), ('authorblues', 1), ('baharclerode', 1), ('TriPhoenix', 1), ('desht', 1), ('fernferret', 1), ('FeepingCreature', 1), ('GuntherDW', 1), ('jlitewski', 1), ('krinsdeath', 1), ('dumptruckman', 1), ('JeromSar', 1), ('mooman219', 1), ('attrib', 1), ('Kezz101', 1), ('KODZIO', 1), ('Likaos', 1), ('Limb', 1), ('stuntguy3000', 1), ('maxammann', 1), ('MikeMatrix', 1), ('Morgan Humes', 1), ('Morphan1', 1), ('Nathan Wolf', 1), ('oloflarsson', 1), ('plamoni', 1), ('pschichtel', 1)",55,47,
brendangregg/bpf-perf-tools-book,Official repository for the BPF Performance Tools book,"# BPF Performance Tools

This is the official repository of BPF (eBPF) tools from the book [BPF Performance Tools: Linux and Application Observability](http://www.brendangregg.com/bpf-performance-tools-book.html). The directories are:

- [originals](originals): The original published version of the tools.
- [updated](updated): Updated versions of the tools.
- [exercises](exercises): Exercise solutions.

These tools are documented in the book.

#### Tools:


In red are many of the new tools developed for the book, which are all in this repository. In black are the prior tools from BCC and bpftrace, many of which are also covered in the book.

## Updated tools

You may contribute updated versions of the tools to the updated/ directory as you find they need fixes for newer kernels or other distributions (which can change CONFIG options or library paths, changing the probes). Please avoid ifdef's where possible, and create separate tools as they can be tested and maintained independently. Filename examples:

- opensnoop_5.4.bt: opensnoop.bt for Linux 5.4 onwards
- opensnoop_redfrog.bt: opensnoop for the RedFrog Linux distribution (I made that up).
- opensnoop_redfrog11.bt: opensnoop for RedFrog release 11 onwards.
- opensnoop_redfrog11_5.4.bt: opensnoop for RedFrog release 11 onwards, with Linux 5.4 onwards.

By contributing updates to this repository, you agree that the publisher has the necessary permissions to include your updates in possible later editions of the book. Attribution will be given: make it clear in the PR what your name is. Note that the tools are deliberately short to serve as textbook examples and to simplify maintenance, and updates should not add functionality. For that, see the next section.

## Enhanced tools

A small selection of tools from this book has been added to the bpftrace and BCC repositories. It is expected that the BCC versions will be enhanced with various command line options. We are not planning to add any more of these tools to those repositories: they are limited to ensure that they can be well supported by the repository community.
",,2019-05-13T18:11:59Z,2024-04-30T11:20:32Z,2,2,1524,87,"('brendangregg', 37), ('hdhoang', 1)",1,1,
google/blockly-games,Games for tomorrow's programmers.,"![Blockly Games](https://raw.githubusercontent.com/wiki/google/blockly-games/title.png)

Google's Blockly Games is a series of educational games that teach programming.
It is based on the [Blockly](https://developers.google.com/blockly/) library.
All code is free and open source.

**The games are available at https://blockly.games/**

**The developer's site is at https://github.com/google/blockly-games/wiki**
",,2014-08-25T16:09:42Z,2024-05-13T12:01:12Z,23,19,1283,109,"('NeilFraser', 452), ('translatewiki', 337), ('kozbial', 228), ('seanlip', 89), ('Nikerabbit', 64), ('siebrand', 32), ('smuda', 31), ('Monica Kozbial', 6), ('moniika', 4), ('John Allberg', 3), ('cpcallen', 2), ('oldfritter', 2), ('alschmiedt', 2), ('jsarenik', 1), ('kamidox', 1), ('madCode', 1), ('mcv', 1), ('moshfeu', 1), ('mapmeld', 1), ('Surya0511', 1), ('solovyovs', 1), ('rustedfish', 1), ('nobody', 1)",10,9,
akexorcist/BluetoothSPPLibrary,[UNMAINTAINED][Android] Bluetooth Serial Port Profile which comfortable to developer application to communication with microcontroller via bluetooth,"
# ⚠ WARNING: This project is no longer being maintained

[![Build Status](https://travis-ci.org/akexorcist/Android-BluetoothSPP.svg?branch=master)](https://travis-ci.org/akexorcist/Android-BluetoothSPP)
Android-BluetoothSPPLibrary
===========================


![BluetoothSPP Library](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/header.png)


Bluetooth Serial Port Profile which comfortable to developer application to communication with microcontroller or android device via bluetooth.

This libraly include all important methods for serial port profile on bluetooth communication. It has built-in bluetooth device list.



Feature
--------------

• It's very easy to use

• Solve the lack of data like as ""abcdefg"" which divided to ""abc"" and ""defg"" when receive these data

• Auto add LF (0x0A) and CR (0x0D) when send data to connection device

• No need to create layout for bluetooth device list to select device for connection. You can use built-in layout in this library and you can customize layout if you want

• Auto connection supported

• Listener for receive data from connection device


Download
--------------

Maven
```

  com.akexorcist
  bluetoothspp
  1.0.0

```

Gradle
```
compile 'com.akexorcist:bluetoothspp:1.0.0'
```


Simple Usage
--------------

• Import this library to your workspace and include in to your android project 
For Eclipse ADT : Download this library and import into your workspace and include this library to your project
For Android Studio : Use Gradle to download this library from Maven


• Declare permission for library

```xml


```

• Declare BluetoothSPP like this
```java
BluetoothSPP bt = new BluetoothSPP(Context);
```

• Check if bluetooth is now available
```java
if(!bt.isBluetoothAvailable()) {
    // any command for bluetooth is not available
}
```

• Check if bluetooth is not enable when activity is onStart
```java
public void onStart() {
    super.onStart();
    if(!bt.isBluetoothEnable()) {
        // Do somthing if bluetooth is disable
    } else {
        // Do something if bluetooth is already enable
    }
}
```

• if bluetooth is ready call this method to start service

For connection with android device 
```java
bt.startService(BluetoothState.DEVICE_ANDROID);
```


![Communicate with android](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/Connection.png)


For connection with any microcontroller which communication with bluetooth serial port profile module
```java
bt.startService(BluetoothState.DEVICE_OTHER);
```


![Communicate with microcontroller](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/Connection2.png)


![Bluetooth module with SPP](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/BlueStick.png)


• Stop service with
```java
bt.stopService();
```

• Intent to choose device activity 
```java
Intent intent = new Intent(getApplicationContext(), DeviceList.class);
startActivityForResult(intent, BluetoothState.REQUEST_CONNECT_DEVICE);
```

don't forget declare library activty like this
```java

```

• After intent to choose device activity and finish that activity. You need to check result data on onActivityResult
```java
public void onActivityResult(int requestCode, int resultCode, Intent data) {
    if(requestCode == BluetoothState.REQUEST_CONNECT_DEVICE) {
        if(resultCode == Activity.RESULT_OK)
            bt.connect(data);
    } else if(requestCode == BluetoothState.REQUEST_ENABLE_BT) {
        if(resultCode == Activity.RESULT_OK) {
            bt.setupService();
            bt.startService(BluetoothState.DEVICE_ANDROID);
            setup();
        } else {
            // Do something if user doesn't choose any device (Pressed back)
        }
    }
}
```

• If you want to send any data. boolean parameter is mean that data will send with ending by LF and CR or not. If yes your data will added by LF & CR
```java
bt.send(""Message"", true);
```
or
```java
bt.send(new byte[] { 0x30, 0x38, ....}, false);
```

• Listener for data receiving
```java
bt.setOnDataReceivedListener(new OnDataReceivedListener() {
    public void onDataReceived(byte[] data, String message) {
        // Do something when data incoming
    }
});
```

• Listener for bluetooth connection atatus
```java
bt.setBluetoothConnectionListener(new BluetoothConnectionListener() {
    public void onDeviceConnected(String name, String address) {
        // Do something when successfully connected
    }

    public void onDeviceDisconnected() {
        // Do something when connection was disconnected
    }

    public void onDeviceConnectionFailed() {
        // Do something when connection failed
    }
});
```

• Listener when bluetooth connection has changed
```java
bt.setBluetoothStateListener(new BluetoothStateListener() {                
    public void onServiceStateChanged(int state) {
        if(state == BluetoothState.STATE_CONNECTED)
            // Do something when successfully connected
        else if(state == BluetoothState.STATE_CONNECTING)
            // Do something while connecting
        else if(state == BluetoothState.STATE_LISTEN)
            // Do something when device is waiting for connection
        else if(state == BluetoothState.STATE_NONE)
            // Do something when device don't have any connection
    }
});
```

• Using auto connection
```java
bt.autoConnect(""Keyword for filter paired device"");
```

• Listener for auto connection
```java
bt.setAutoConnectionListener(new AutoConnectionListener() {
    public void onNewConnection(String name, String address) {
        // Do something when earching for new connection device
    }
            
    public void onAutoConnectionStarted() {
        // Do something when auto connection has started
    }
});
```

• Customize device list's layout by create layout which include 

list view with id name = ""list_devices""

button with id name = ""button_scan""

*Example*
```xml

<RelativeLayout xmlns:android=""http://schemas.android.com/apk/res/android""
    android:layout_width=""fill_parent""
    android:layout_height=""fill_parent""
    android:background=""#FDE182"" >

    <ListView
        android:id=""@+id/list_devices""
        android:layout_width=""match_parent""
        android:layout_height=""wrap_content""
        android:layout_alignParentTop=""true""
        android:layout_marginLeft=""20dp""
        android:layout_marginRight=""20dp""
        android:layout_marginTop=""20dp""
        android:smoothScrollbar=""true"" />
        
    <Button
        android:id=""@+id/button_scan""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_alignParentRight=""true""
        android:layout_alignParentTop=""true""
        android:padding=""20dp""
        android:background=""#FFC600""
        android:text=""SCAN""
        android:textSize=""25sp""
        android:textColor=""#7A481B""
        android:textStyle=""bold"" />
        

```

![Custom Device List Layout](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/005.png)


But if you don't need to create layout file. You just want to change only text on device list layout. You can use bundle to change text on device list

![Custom Device List Text](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/006.png)

![Custom Device List Text](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/007.png)

![Custom Device List Text](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/008.png)

![Custom Device List Text](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/009.png)

```java
Intent intent = new Intent(getApplicationContext(), DeviceList.class);
intent.putExtra(""bluetooth_devices"", ""Bluetooth devices"");
intent.putExtra(""no_devices_found"", ""No device"");
intent.putExtra(""scanning"", ""กำลังทำการค้นหา"");
intent.putExtra(""scan_for_devices"", ""Search"");
intent.putExtra(""select_device"", ""Select"");
startActivityForResult(intent, BluetoothState.REQUEST_CONNECT_DEVICE);
```

![Custom Device List Text](https://raw.githubusercontent.com/akexorcist/Android-BluetoothSPPLibrary/master/image/010.png)



What's next?
===========================
- Connection Dialog 
- Add Insecure Connection
- Fix bug on this issue https://github.com/akexorcist/Android-BluetoothSPPLibrary/issues/21
- Merge the code from https://github.com/akexorcist/Android-BluetoothSPPLibrary/pull/14 for a problem of auto connection
- Human Readable Log https://github.com/akexorcist/Android-BluetoothSPPLibrary/issues/19



License
--------------

Copyright (c) 2014 Akexorcist

Licensed under the Apache License, Version 2.0 (the ""License"");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an ""AS IS"" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.


",,2014-03-25T18:37:50Z,2021-01-27T11:35:54Z,1,1,1698,107,"('akexorcist', 55)",0,0,
balanced/balanced-docs,Balanced's API Documentation,"# Balanced Docs

[![Build Status](https://secure.travis-ci.org/balanced/balanced-docs.png)](http://travis-ci.org/balanced/balanced-docs)

This project builds the following Balanced documentation:

- [Specification](https://github.com/balanced/balanced-api)
- [Reference](https://docs.balancedpayments.com/api)
- [Overview](https://docs.balancedpayments.com/overview)

## Contributing

All contributions, even simple grammar fixes, are greatly appreciated.

1. Check for open [issues](https://github.com/balanced/balanced-docs/issues) or
   [open](https://github.com/balanced/balanced-docs/issues/new) a fresh issue
   to start a discussion around a feature idea or a bug.
1. Fork the repository on Github to start making your changes to the develop branch (or branch off of it).
1. Send a pull request!

Make sure to add yourself to `CONTRIBUTORS`. We will showcase the `CONTRIBUTORS` file on our
[COMMUNITY PAGE](https://balancedpayments.com/community).

After your pull request, email support [@] balancedpayments.com with
your address and the link to your pull request with your address and
your t-shirt size so we can send you your very own
[Balanced t-shirt!](https://twitter.com/damon_sf/status/266768984744017920/photo/1)

## Setup

You'll first need:

* python 2.7+
* [virtualenvwrapper](http://virtualenvwrapper.readthedocs.org/en/latest/install.html)
* [bower](http://bower.io/)

And then you can setup your environment like this:

```bash
git clone git@github.com:balanced/balanced-docs.git
cd balanced-docs
git submodule update --init --recursive --remote
mkvirtualenv balanced-docs
python setup.py develop
pip install -r requirements.txt
```

If you've done that before just do:

```bash
cd /path/to/balanced-docs
workon balanced-docs
git submodule update --init --recursive --remote
```

## Build

Now that your environment is setup, let's build the documentation. To build
them all at once do:

```bash
make all
```

### Specification

To build the [specification](https://github.com/balanced/balanced-api) do:

```bash
make spec
```

### Overview

To build the [overview](https://balancedpayments.com/docs/overview) do:

```bash
make overview
```

### Reference

To build the [reference](https://balancedpayments.com/docs/api) do:

```bash
make api
```

## Preview

Let's take a look at what we've built using [mongoose](https://github.com/valenok/mongoose):

```bash
cd build
mongoose
// Mongoose web server v. 3.8 started on port(s) 8080 with web root [.]
```

### Specification

Open up `http://localhost:8080/spec`

### Overview

Open up `http://localhost:8080/overview.shtml`

### Reference

Open up `http://localhost:8080/api.shtml`

## Hacking

### rST

All of the documentation is written in r(e)S(tructured)T(ext) which you can read
about [here](http://docutils.sourceforge.net/docs/user/rst/quickstart.html).

### dcode

We've added a custom rST directive called `dcode` which uses external scripts to
generate rST content. For example:

```
.. dcode:: scenario credit_create_new_bank_account
```

Here we are asking `dcode` to run the `credit_create_new_bank_account`. The
output for that `scenario` will end up in place of the directive.

You'll also see a corresponding `dcode-default` directive. For example:

```
.. dcode-default:: scenario
    :script: ../scenario.py -d ../scenarios -c scenario.cache
    :section-chars: ~^
    :lang: ruby
```

Which registers an external script for `scenario`. As a result the `dcode`
directive above will result in this call:

```bash
../scenario.py -d ../scenarios -c scenario.cache credit_create_new_bank_account --lang ruby
```

### Run individual scenario

```bash
scripts/lang-scenario.py -d clients/{REVISION}/curl hold_create
```

### Edit field descriptions for scenarios 

Field descriptions are from balanced.rev1.json, which are generated from 
balanced-api. The ""forms"" used in balanced-docs are assembled from parameters 
supplied in the scenarios in balanced-api. Those scenarios should be 
updated to include the fields missing the specific scenario section and a 
newly generated balanced.rev1.json be committed into the docs. To generate 
balanced.rev1.json in balanced-api run:

```bash
bundle exec rake features:all
```
DO NOT run

```bash
bundle exec rake parallel:features
```

doing so causes the file to overwrite itself.
",,2012-12-13T01:39:11Z,2015-01-21T23:44:05Z,46,32,21,16,"('remear', 528), ('rserna2010', 131), ('mahmoudimus', 109), ('pnegahdar', 67), ('bninja', 48), ('matthewfl', 38), ('NodeSocket', 29), ('kyungmin', 24), ('rloomba', 20), ('mjallday', 17), ('jenkins', 16), ('Marshall Jones', 16), ('Balanced Marshall', 12), ('Jareau Wade', 12), ('Patrick Cieplak', 11), ('nodesocket', 9), ('andrew', 9), ('Richard Serna', 7), ('Mahmoud Abdelkader', 5), ('jeremymarc', 4), ('Justin Keller', 4), ('steveklabnik', 3), ('msherry', 3), ('dclausen', 3), ('jrus', 2), ('sophistry', 2), ('andrewnossiter', 2), ('coderanger', 2), ('MDrollette', 2), ('Marc Sherry', 2), ('jbafford', 2), ('bnoguchi', 2), ('groovecoder', 1), ('woahdae', 1), ('TrevorHinesley', 1), ('thomasboyt', 1), ('rmm5t', 1), ('rca', 1), ('Patrick Cieplak', 1), ('matin', 1), ('kfr2', 1), ('macleanjr', 1), ('James Dullaghan', 1), ('davidfischer', 1), ('michetti', 1), ('alandotcom', 1)",14,12,
startup-class/bitstarter-ssjs-db,"Very simple SSJS app that writes crowdfunder preorders to a local database. Uses Sequelize, Express, Async.","Installation
============
The following instructions will set up a more complex bitstarter than the
one you've done to date. Now you will be recording orders to a database.
The following commands are to be executed on your EC2 remote machine.

```sh
curl https://raw.github.com/startup-class/setup/master/setup.sh | bash
exit # and then log in again
git clone https://github.com/startup-class/bitstarter-ssjs-db.git
cd bitstarter-ssjs-db
./setup-ssjs.sh
```

Local and Remote Testing
========================
Once you have done this you will need to :
 
1. Edit the `.env` file to include your API key from
http://coinbase.com/account/integrations so that it looks like this:

```bash
[you@ec2~/bitstarter]$head .env
COINBASE_API_KEY=cb27e2ef0a8e872f792612d4d57937e70476ab8041455b00b35d1196cf80f50d
PORT=8080
```

2. Then you can run the server locally and preview at URLs like http://ec2-54-213-131-228.us-west-2.compute.amazonaws.com:8080 as follows:

```sh
foreman start
```

Try placing some orders and then going to the ""/orders"" URL at the top to
try it out. Note that you will get an ""invalid api key"" error if you didn't
do the `.env` step above.


3. For remote servers, deploy and push configuration variables

```sh
git push heroku master
heroku config:push
```

Then you can go to a URL like http://safe-dawn-4440.herokuapp.com and submit
orders to test it out. Note again that you will get an ""invalid api key""
error if you didn't do the `.env` step above.

",,2013-08-09T01:16:36Z,2013-08-09T16:24:59Z,2,1,61,37,"('balajis', 4), ('Dinislam Tebuev', 1)",1,0,
Admin-backups/AR-B-P-B,,"A=SS

#AR多用户管理脚本（基于官方mujson版本）

## 介绍 ##


谨慎使用，有问题概不负责！！！

谨慎使用，有问题概不负责！！！ 

谨慎使用，有问题概不负责！！！

此版本为备份版！！！
原汁原味！使用更佳！

一个Shell脚本，集成AR多用户管理，流量限制，加密更改等基本操作。是一个基于AR官方的mujson的辅助脚本。方便用户操作

## 备份日志 ##
- 2017-7-20 作者的最后版本
- 2019-10-13 作者的最后版本的非官方延伸版本

## 系统支持 ##
* Ubuntu 14
* Ubuntu 16
* Debian 7
* Debian 8
* CentOS 6
* CentOS 7

## 功能 ##
- 一键开启、关闭AR服务
- 添加、删除、修改用户端口和密码
- 自由限制用户端口流量使用及端口网速
- 自动修改防火墙规则
- 自助修改AR加密方式、协议、混淆等参数
- 自动统计，方便查询每个用户端口的流量使用情况
- 自动安装Libsodium库以支持Chacha20等加密方式

## 缺点 ##
- 无法删除最后一名用户（官方限制）
- 未设置开机启动

## 安装 ##
    wget -N --no-check-certificate https://raw.githubusercontent.com/Admin-backups/AR-B-P-B/master/install.sh && bash install.sh
    
## 高级版-非官方项目 ##
    wget -N --no-check-certificate https://raw.githubusercontent.com/Admin-backups/AR-B-P-B/master/develop-install.sh && bash develop-install.sh

## 自检 ##
    wget -N --no-check-certificate https://raw.githubusercontent.com/Admin-backups/AR-B-P-B/master/self-check.sh && bash self-check.sh

",,2017-07-27T12:56:50Z,2019-10-13T05:55:44Z,1,1,14,2,"('Admin-backups', 38)",0,0,
OpenAgricultureFoundation/gro-controller,**DEPRECATED** Code running on bot's controller (Raspberry Pi 2 Model B v1.1).,"# gro-controller

**DEPRECATED**
This repository is no longer being actively maintained.

Code running on each food computer's embedded system. Current embedded system uses both a controller (Raspberry Pi 2 Model B v1.1) and microcontroller (Arduino Mega 2560).
",,2015-09-12T19:02:09Z,2016-05-03T19:24:34Z,4,3,36,26,"('Jake Rye', 51), ('mirskiy', 3), ('jakerye', 1), ('LeonChambers', 1)",2,2,
jxnblk/rebranch,"React context-based, conditional rendering components for A/B experiments","
# Rebranch

React context-based, conditional rendering components for A/B experiments

[![Build Status][build-badge]][build-status]

**Requires React v16.3.0 and up**

[build-badge]: https://img.shields.io/travis/jxnblk/rebranch/master.svg?style=flat-square
[build-status]: https://travis-ci.org/jxnblk/rebranch

```sh
npm i rebranch
```

```jsx
// example App.js
import React from 'react'
import { BranchProvider } from 'rebranch'

// initialize the provider with the current session's
// A/B experimentation state
// This should be an object of experiment names,
// with...
import experimentsState from './experiments'
import Home from './Home'

/* example experimentsState object
{
  HOME_SIGN_UP: 'VARIANT',
  FOOTER_SIGN_UP: 'DEFAULT'
}
*/

export default class App extends React.Component {
  render () {
    return (
      
        
      
    )
  }
}
```

```jsx
// example Home.js
import React from 'react'
import { BranchConsumer } from 'rebranch'
import SignUpForm from './SignUpForm'

// duplicated SignUpForm component, optimized for code deletion
import VARIANT_SignUpForm from './experiments/VARIANT_SignUpForm'

export default class Home extends React.Component {
  render () {
    return (
      
        {state => {
          switch (state) {
            case 'VARIANT':
              return 
            case 'DEFAULT':
            default:
              return 
          }
        }}
      
    )
  }
}
```

## Alternative Branch Component API

```jsx
// example Home.js
import React from 'react'
import { Branch } from 'rebranch'
import SignUpForm from './SignUpForm'
import VARIANT_SignUpForm from './experiments/VARIANT_SignUpForm'

// for true A/B tests (not multivariant)
// the first child will render when the experiment state is 'DEFAULT'
// the second child will render when the experiment state is *not* `'DEFAULT'`
export default class Home extends React.Component {
  render () {
    return (
      
        
        
      
    )
  }
}
```

## Demo

[View the example](examples) for a basic demo

[MIT License](LICENSE.md)
",,2018-05-29T17:39:36Z,2018-05-31T13:56:26Z,1,1,107,5,"('jxnblk', 4)",0,0,
cpiz/BubbleView,"A control/container with an arrow for Android, which can be fully customized by code or XML layout file.","# BubbleView for Android

[![build](https://travis-ci.org/cpiz/BubbleView.svg?branch=master)](https://travis-ci.org/cpiz/BubbleView) [ ![Download](https://api.bintray.com/packages/cpiz/maven/bubbleview/images/download.svg)](https://bintray.com/cpiz/maven/bubbleview/_latestVersion) [![build](https://jitpack.io/v/cpiz/BubbleView.svg)](https://jitpack.io/#cpiz/BubbleView)


[中文版README](README_CN.md)

BubbleView is a control/container with an arrow for Android, which can be fully customized by code or XML layout file.

* Arrow direction: up, down, left, right or none
* Should arrow auto point to its target
* Customizable arrow properties: size and location
* Customizable bubble properties: color, padding, borders and corner radius
* Bubble can be plain text view(BubbleTextView) or layout container(BubbleXxxLayout)

Download
--------
Add `jcenter()` to your project-level `build.gradle`
```
allprojects {
    repositories {
        jcenter()
    }
}
```

Add `compile 'com.cpiz.bubbleview:bubbleview:{X.Y.Z}'` to your module-level `build.gradle`(see X.Y.Z in [Releases](https://github.com/cpiz/BubbleView/releases))
```
dependencies {
    ...
    compile 'com.cpiz.bubbleview:bubbleview:{X.Y.Z}'
}
```

Specify the direction of arrow
-------
You can use app:bb_arrowDirection attribute to specify the direction of arrow. Its value can be: Left, Up, Right, Down or None. Arrow will be placed in the middle of the corresponding edge of bubble.

![Specify the direction of arrow](./screenshots/1.png)

```XML
<com.cpiz.android.bubbleview.BubbleTextView
    android:id=""@+id/bb1""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_centerVertical=""true""
    android:layout_toLeftOf=""@id/iv1""
    android:padding=""6dp""
    android:text=""ArrowRight""
    android:textColor=""@android:color/white""
    app:bb_arrowDirection=""Right""
    app:bb_cornerRadius=""4dp""/>
```

Point arrow to a specific target
-------
You can use app:bb_arrowTo attribute to specify the id of target view. The direction of arrow will be calculated automatically and it will point to the center of target.

![Point arrow to specific target](screenshots/2.png)

```XML
<RelativeLayout
    android:id=""@+id/group2""
    android:layout_width=""match_parent""
    android:layout_height=""180dp""
    android:layout_marginBottom=""30dp""
    android:background=""#bdc3c7""
    android:padding=""10dp"">

    <ImageView
        android:id=""@+id/iv2""
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_centerHorizontal=""true""
        android:layout_centerVertical=""true""
        android:layout_margin=""4dp""
        android:src=""@android:drawable/ic_btn_speak_now""
        android:tint=""#FFFFFF""/>

    <com.cpiz.android.bubbleview.BubbleTextView
        android:layout_width=""wrap_content""
        android:layout_height=""wrap_content""
        android:layout_alignTop=""@id/iv2""
        android:layout_toLeftOf=""@id/iv2""
        android:padding=""6dp""
        android:text=""Get your apps ready for Android 6.0 Marshmallow! ""
        android:textColor=""@android:color/white""
        app:bb_arrowTo=""@id/iv2""/>

```

Customize style
-------
![Customize style](./screenshots/3.png)

```XML
<com.cpiz.android.bubbleview.BubbleTextView
    android:id=""@+id/big4""
    android:layout_width=""wrap_content""
    android:layout_height=""wrap_content""
    android:layout_below=""@+id/big2""
    android:layout_margin=""4dp""
    android:layout_toRightOf=""@id/big3""
    android:padding=""30dp""
    android:text=""WithBorder""
    android:textColor=""@android:color/white""
    app:bb_arrowDirection=""Down""
    app:bb_arrowHeight=""10dp""
    app:bb_arrowOffset=""30dp""
    app:bb_arrowWidth=""40dp""
    app:bb_borderColor=""@color/colorPrimary""
    app:bb_borderWidth=""6dp""
    app:bb_cornerBottomLeftRadius=""0dp""
    app:bb_cornerBottomRightRadius=""10dp""
    app:bb_cornerTopLeftRadius=""0dp""
    app:bb_cornerTopRightRadius=""4dp""
    app:bb_fillColor=""@android:color/holo_red_light""
    app:bb_fillPadding=""4dp""/>
```

### Use it as layout container
--------
Beside using BubbleTextView to display text, you can also use

* BubbleRelativeLayout
* BubbleLinearLayout
* BubbleFrameLayout

as bubble layout container and put customized content into it.

![As container](./screenshots/4.png)

### Popup
--------
Can use BubblePopupWindow to wrap bubble, and show as popup.

![popup](./screenshots/5.gif)

* Support touch outside to close
* Support touch inside to close
* Support close in time

```
    View rootView = LayoutInflater.from(this).inflate(R.layout.simple_text_bubble, null);
    BubbleTextView bubbleView = (BubbleTextView) rootView.findViewById(R.id.popup_bubble);
    window = new BubblePopupWindow(rootView, bubbleView);
    window.setCancelOnTouch(true);
    window.setCancelOnTouchOutside(true);
    window.setCancelOnLater(3000);
    window.showArrowTo(v, BubbleStyle.ArrowDirection.Left);
```

### Misc.

* Invoke methods like setBackground/setBackgroundColor of BubbleView will make the style settings invalid.

License
-------
	Copyright 2017 Cpiz

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
",,2016-05-27T15:58:13Z,2023-03-09T18:15:33Z,6,4,982,25,"('cpiz', 85), ('iceboundrock', 15), ('junyuecao', 1), ('Ruoshi Li', 1), ('bryant1410', 1), ('caipiz@gmail.com', 1)",4,2,
mattt/SkyLab,Multivariate & A/B Testing for iOS and Mac,"> This library is no longer being maintained.
> You can continue to use SkyLab in your projects,
> but we recommend switching another solution whenever you have the opportunity.

# SkyLab
**Multivariate & A/B Testing for iOS and Mac**

SkyLab is a backend-agnostic framework for [multivariate](http://en.wikipedia.org/wiki/Multivariate_testing) and [A/B testing](http://en.wikipedia.org/wiki/A/B_testing).

Test conditions are persisted across sessions and launches using `NSUserDefaults`, ensuring that every user will have a consistent experience, no matter which testing bucket they end up in.

SkyLab integrates easily into any existing statistics web service. Depending on your particular needs, this may include posting to an endpoint in test blocks, or perhaps setting an HTTP header for a shared API client.

**Requests for integration with any particular backend are heartily encouraged.**

> This project is part of a series of open source libraries covering the mission-critical aspects of an iOS app's infrastructure. Be sure to check out its sister projects: [GroundControl](https://github.com/mattt/GroundControl), [CargoBay](https://github.com/mattt/CargoBay), [houston](https://github.com/mattt/houston), and [Orbiter](https://github.com/mattt/Orbiter).

## Usage

Check out the included example project to see everything in action.

### Simple A/B Test

```objective-c
[SkyLab abTestWithName:@""Title"" A:^{
    self.titleLabel.text = NSLocalizedString(@""Hello, World!"", nil);
} B:^{
    self.titleLabel.text = NSLocalizedString(@""Greetings, Planet!"", nil);
}];
```

### Split Test with Weighted Probabilities

You can pass either an `NSDictionary` (with values representing the weighted probability of their corresponding key) or an `NSArray` (with each value having an equal chance of being chosen) into the `choices` parameter.

```objective-c
[SkyLab splitTestWithName:@""Subtitle"" conditions:@{
    @""Red"" : @(0.15),
    @""Green"" : @(0.10),
    @""Blue"" : @(0.50),
    @""Purple"" : @(0.25)
} block:^(id choice) {
    self.subtitleLabel.text = NSLocalizedString(@""Please Enjoy This Colorful Message"", nil);

    if ([choice isEqualToString:@""Red""]) {
        self.subtitleLabel.textColor = [UIColor redColor];
    } else if ([choice isEqualToString:@""Green""]) {
        self.subtitleLabel.textColor = [UIColor greenColor];
    } else if ([choice isEqualToString:@""Blue""]) {
        self.subtitleLabel.textColor = [UIColor blueColor];
    } else if ([choice isEqualToString:@""Purple""]) {
        self.subtitleLabel.textColor = [UIColor purpleColor];
    }
}];
```

### Multivariate Test

```objective-c
[SkyLab multivariateTestWithName:@""Switches"" variables:@{
    @""Left"" : @(0.5),
    @""Center"" : @(0.5),
    @""Right"" : @(0.5)
 } block:^(NSSet *activeVariables) {
     self.leftSwitch.on = [activeVariables containsObject:@""Left""];
     self.centerSwitch.on = [activeVariables containsObject:@""Center""];
     self.rightSwitch.on = [activeVariables containsObject:@""Right""];
}];
```

## License

SkyLab is available under the MIT license. See the LICENSE file for more info.
",,2012-09-05T16:19:27Z,2021-04-06T17:34:20Z,5,5,787,34,"('mattt', 36), ('aburgel', 2), ('abrahamvegh', 1), ('alistra', 1), ('gregkrsak', 1)",3,3,
google-research/bert,TensorFlow code and pre-trained models for BERT,"# BERT

**\*\*\*\*\* New March 11th, 2020: Smaller BERT Models \*\*\*\*\***

This is a release of 24 smaller BERT models (English only, uncased, trained with WordPiece masking) referenced in [Well-Read Students Learn Better: On the Importance of Pre-training Compact Models](https://arxiv.org/abs/1908.08962).

We have shown that the standard BERT recipe (including model architecture and training objective) is effective on a wide range of model sizes, beyond BERT-Base and BERT-Large. The smaller BERT models are intended for environments with restricted computational resources. They can be fine-tuned in the same manner as the original BERT models. However, they are most effective in the context of knowledge distillation, where the fine-tuning labels are produced by a larger and more accurate teacher.

Our goal is to enable research in institutions with fewer computational resources and encourage the community to seek directions of innovation alternative to increasing model capacity.

You can download all 24 from [here][all], or individually from the table below:

|   |H=128|H=256|H=512|H=768|
|---|:---:|:---:|:---:|:---:|
| **L=2**  |[**2/128 (BERT-Tiny)**][2_128]|[2/256][2_256]|[2/512][2_512]|[2/768][2_768]|
| **L=4**  |[4/128][4_128]|[**4/256 (BERT-Mini)**][4_256]|[**4/512 (BERT-Small)**][4_512]|[4/768][4_768]|
| **L=6**  |[6/128][6_128]|[6/256][6_256]|[6/512][6_512]|[6/768][6_768]|
| **L=8**  |[8/128][8_128]|[8/256][8_256]|[**8/512 (BERT-Medium)**][8_512]|[8/768][8_768]|
| **L=10** |[10/128][10_128]|[10/256][10_256]|[10/512][10_512]|[10/768][10_768]|
| **L=12** |[12/128][12_128]|[12/256][12_256]|[12/512][12_512]|[**12/768 (BERT-Base)**][12_768]|

Note that the BERT-Base model in this release is included for completeness only; it was re-trained under the same regime as the original model.

Here are the corresponding GLUE scores on the test set:

|Model|Score|CoLA|SST-2|MRPC|STS-B|QQP|MNLI-m|MNLI-mm|QNLI(v2)|RTE|WNLI|AX|
|---|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|
|BERT-Tiny|64.2|0.0|83.2|81.1/71.1|74.3/73.6|62.2/83.4|70.2|70.3|81.5|57.2|62.3|21.0|
|BERT-Mini|65.8|0.0|85.9|81.1/71.8|75.4/73.3|66.4/86.2|74.8|74.3|84.1|57.9|62.3|26.1|
|BERT-Small|71.2|27.8|89.7|83.4/76.2|78.8/77.0|68.1/87.0|77.6|77.0|86.4|61.8|62.3|28.6|
|BERT-Medium|73.5|38.0|89.6|86.6/81.6|80.4/78.4|69.6/87.9|80.0|79.1|87.7|62.2|62.3|30.5|

For each task, we selected the best fine-tuning hyperparameters from the lists below, and trained for 4 epochs:
- batch sizes: 8, 16, 32, 64, 128
- learning rates: 3e-4, 1e-4, 5e-5, 3e-5

If you use these models, please cite the following paper:

```
@article{turc2019,
  title={Well-Read Students Learn Better: On the Importance of Pre-training Compact Models},
  author={Turc, Iulia and Chang, Ming-Wei and Lee, Kenton and Toutanova, Kristina},
  journal={arXiv preprint arXiv:1908.08962v2 },
  year={2019}
}
```

[2_128]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-2_H-128_A-2.zip
[2_256]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-2_H-256_A-4.zip
[2_512]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-2_H-512_A-8.zip
[2_768]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-2_H-768_A-12.zip
[4_128]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-4_H-128_A-2.zip
[4_256]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-4_H-256_A-4.zip
[4_512]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-4_H-512_A-8.zip
[4_768]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-4_H-768_A-12.zip
[6_128]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-6_H-128_A-2.zip
[6_256]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-6_H-256_A-4.zip
[6_512]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-6_H-512_A-8.zip
[6_768]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-6_H-768_A-12.zip
[8_128]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-8_H-128_A-2.zip
[8_256]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-8_H-256_A-4.zip
[8_512]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-8_H-512_A-8.zip
[8_768]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-8_H-768_A-12.zip
[10_128]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-10_H-128_A-2.zip
[10_256]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-10_H-256_A-4.zip
[10_512]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-10_H-512_A-8.zip
[10_768]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-10_H-768_A-12.zip
[12_128]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-12_H-128_A-2.zip
[12_256]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-12_H-256_A-4.zip
[12_512]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-12_H-512_A-8.zip
[12_768]: https://storage.googleapis.com/bert_models/2020_02_20/uncased_L-12_H-768_A-12.zip
[all]: https://storage.googleapis.com/bert_models/2020_02_20/all_bert_models.zip

**\*\*\*\*\* New May 31st, 2019: Whole Word Masking Models \*\*\*\*\***

This is a release of several new models which were the result of an improvement
the pre-processing code.

In the original pre-processing code, we randomly select WordPiece tokens to
mask. For example:

`Input Text: the man jumped up , put his basket on phil ##am ##mon ' s head`
`Original Masked Input: [MASK] man [MASK] up , put his [MASK] on phil
[MASK] ##mon ' s head`

The new technique is called Whole Word Masking. In this case, we always mask
*all* of the the tokens corresponding to a word at once. The overall masking
rate remains the same.

`Whole Word Masked Input: the man [MASK] up , put his basket on [MASK] [MASK]
[MASK] ' s head`

The training is identical -- we still predict each masked WordPiece token
independently. The improvement comes from the fact that the original prediction
task was too 'easy' for words that had been split into multiple WordPieces.

This can be enabled during data generation by passing the flag
`--do_whole_word_mask=True` to `create_pretraining_data.py`.

Pre-trained models with Whole Word Masking are linked below. The data and
training were otherwise identical, and the models have identical structure and
vocab to the original models. We only include BERT-Large models. When using
these models, please make it clear in the paper that you are using the Whole
Word Masking variant of BERT-Large.

*   **[`BERT-Large, Uncased (Whole Word Masking)`](https://storage.googleapis.com/bert_models/2019_05_30/wwm_uncased_L-24_H-1024_A-16.zip)**:
    24-layer, 1024-hidden, 16-heads, 340M parameters

*   **[`BERT-Large, Cased (Whole Word Masking)`](https://storage.googleapis.com/bert_models/2019_05_30/wwm_cased_L-24_H-1024_A-16.zip)**:
    24-layer, 1024-hidden, 16-heads, 340M parameters

Model                                    | SQUAD 1.1 F1/EM | Multi NLI Accuracy
---------------------------------------- | :-------------: | :----------------:
BERT-Large, Uncased (Original)           | 91.0/84.3       | 86.05
BERT-Large, Uncased (Whole Word Masking) | 92.8/86.7       | 87.07
BERT-Large, Cased (Original)             | 91.5/84.8       | 86.09
BERT-Large, Cased (Whole Word Masking)   | 92.9/86.7       | 86.46

**\*\*\*\*\* New February 7th, 2019: TfHub Module \*\*\*\*\***

BERT has been uploaded to [TensorFlow Hub](https://tfhub.dev). See
`run_classifier_with_tfhub.py` for an example of how to use the TF Hub module,
or run an example in the browser on
[Colab](https://colab.sandbox.google.com/github/google-research/bert/blob/master/predicting_movie_reviews_with_bert_on_tf_hub.ipynb).

**\*\*\*\*\* New November 23rd, 2018: Un-normalized multilingual model + Thai +
Mongolian \*\*\*\*\***

We uploaded a new multilingual model which does *not* perform any normalization
on the input (no lower casing, accent stripping, or Unicode normalization), and
additionally inclues Thai and Mongolian.

**It is recommended to use this version for developing multilingual models,
especially on languages with non-Latin alphabets.**

This does not require any code changes, and can be downloaded here:

*   **[`BERT-Base, Multilingual Cased`](https://storage.googleapis.com/bert_models/2018_11_23/multi_cased_L-12_H-768_A-12.zip)**:
    104 languages, 12-layer, 768-hidden, 12-heads, 110M parameters

**\*\*\*\*\* New November 15th, 2018: SOTA SQuAD 2.0 System \*\*\*\*\***

We released code changes to reproduce our 83% F1 SQuAD 2.0 system, which is
currently 1st place on the leaderboard by 3%. See the SQuAD 2.0 section of the
README for details.

**\*\*\*\*\* New November 5th, 2018: Third-party PyTorch and Chainer versions of
BERT available \*\*\*\*\***

NLP researchers from HuggingFace made a
[PyTorch version of BERT available](https://github.com/huggingface/pytorch-pretrained-BERT)
which is compatible with our pre-trained checkpoints and is able to reproduce
our results. Sosuke Kobayashi also made a
[Chainer version of BERT available](https://github.com/soskek/bert-chainer)
(Thanks!) We were not involved in the creation or maintenance of the PyTorch
implementation so please direct any questions towards the authors of that
repository.

**\*\*\*\*\* New November 3rd, 2018: Multilingual and Chinese models available
\*\*\*\*\***

We have made two new BERT models available:

*   **[`BERT-Base, Multilingual`](https://storage.googleapis.com/bert_models/2018_11_03/multilingual_L-12_H-768_A-12.zip)
    (Not recommended, use `Multilingual Cased` instead)**: 102 languages,
    12-layer, 768-hidden, 12-heads, 110M parameters
*   **[`BERT-Base, Chinese`](https://storage.googleapis.com/bert_models/2018_11_03/chinese_L-12_H-768_A-12.zip)**:
    Chinese Simplified and Traditional, 12-layer, 768-hidden, 12-heads, 110M
    parameters

We use character-based tokenization for Chinese, and WordPiece tokenization for
all other languages. Both models should work out-of-the-box without any code
changes. We did update the implementation of `BasicTokenizer` in
`tokenization.py` to support Chinese character tokenization, so please update if
you forked it. However, we did not change the tokenization API.

For more, see the
[Multilingual README](https://github.com/google-research/bert/blob/master/multilingual.md).

**\*\*\*\*\* End new information \*\*\*\*\***

## Introduction

**BERT**, or **B**idirectional **E**ncoder **R**epresentations from
**T**ransformers, is a new method of pre-training language representations which
obtains state-of-the-art results on a wide array of Natural Language Processing
(NLP) tasks.

Our academic paper which describes BERT in detail and provides full results on a
number of tasks can be found here:
[https://arxiv.org/abs/1810.04805](https://arxiv.org/abs/1810.04805).

To give a few numbers, here are the results on the
[SQuAD v1.1](https://rajpurkar.github.io/SQuAD-explorer/) question answering
task:

SQuAD v1.1 Leaderboard (Oct 8th 2018) | Test EM  | Test F1
------------------------------------- | :------: | :------:
1st Place Ensemble - BERT             | **87.4** | **93.2**
2nd Place Ensemble - nlnet            | 86.0     | 91.7
1st Place Single Model - BERT         | **85.1** | **91.8**
2nd Place Single Model - nlnet        | 83.5     | 90.1

And several natural language inference tasks:

System                  | MultiNLI | Question NLI | SWAG
----------------------- | :------: | :----------: | :------:
BERT                    | **86.7** | **91.1**     | **86.3**
OpenAI GPT (Prev. SOTA) | 82.2     | 88.1         | 75.0

Plus many other tasks.

Moreover, these results were all obtained with almost no task-specific neural
network architecture design.

If you already know what BERT is and you just want to get started, you can
[download the pre-trained models](#pre-trained-models) and
[run a state-of-the-art fine-tuning](#fine-tuning-with-bert) in only a few
minutes.

## What is BERT?

BERT is a method of pre-training language representations, meaning that we train
a general-purpose ""language understanding"" model on a large text corpus (like
Wikipedia), and then use that model for downstream NLP tasks that we care about
(like question answering). BERT outperforms previous methods because it is the
first *unsupervised*, *deeply bidirectional* system for pre-training NLP.

*Unsupervised* means that BERT was trained using only a plain text corpus, which
is important because an enormous amount of plain text data is publicly available
on the web in many languages.

Pre-trained representations can also either be *context-free* or *contextual*,
and contextual representations can further be *unidirectional* or
*bidirectional*. Context-free models such as
[word2vec](https://www.tensorflow.org/tutorials/representation/word2vec) or
[GloVe](https://nlp.stanford.edu/projects/glove/) generate a single ""word
embedding"" representation for each word in the vocabulary, so `bank` would have
the same representation in `bank deposit` and `river bank`. Contextual models
instead generate a representation of each word that is based on the other words
in the sentence.

BERT was built upon recent work in pre-training contextual representations —
including [Semi-supervised Sequence Learning](https://arxiv.org/abs/1511.01432),
[Generative Pre-Training](https://blog.openai.com/language-unsupervised/),
[ELMo](https://allennlp.org/elmo), and
[ULMFit](http://nlp.fast.ai/classification/2018/05/15/introducting-ulmfit.html)
— but crucially these models are all *unidirectional* or *shallowly
bidirectional*. This means that each word is only contextualized using the words
to its left (or right). For example, in the sentence `I made a bank deposit` the
unidirectional representation of `bank` is only based on `I made a` but not
`deposit`. Some previous work does combine the representations from separate
left-context and right-context models, but only in a ""shallow"" manner. BERT
represents ""bank"" using both its left and right context — `I made a ... deposit`
— starting from the very bottom of a deep neural network, so it is *deeply
bidirectional*.

BERT uses a simple approach for this: We mask out 15% of the words in the input,
run the entire sequence through a deep bidirectional
[Transformer](https://arxiv.org/abs/1706.03762) encoder, and then predict only
the masked words. For example:

```
Input: the man went to the [MASK1] . he bought a [MASK2] of milk.
Labels: [MASK1] = store; [MASK2] = gallon
```

In order to learn relationships between sentences, we also train on a simple
task which can be generated from any monolingual corpus: Given two sentences `A`
and `B`, is `B` the actual next sentence that comes after `A`, or just a random
sentence from the corpus?

```
Sentence A: the man went to the store .
Sentence B: he bought a gallon of milk .
Label: IsNextSentence
```

```
Sentence A: the man went to the store .
Sentence B: penguins are flightless .
Label: NotNextSentence
```

We then train a large model (12-layer to 24-layer Transformer) on a large corpus
(Wikipedia + [BookCorpus](http://yknzhu.wixsite.com/mbweb)) for a long time (1M
update steps), and that's BERT.

Using BERT has two stages: *Pre-training* and *fine-tuning*.

**Pre-training** is fairly expensive (four days on 4 to 16 Cloud TPUs), but is a
one-time procedure for each language (current models are English-only, but
multilingual models will be released in the near future). We are releasing a
number of pre-trained models from the paper which were pre-trained at Google.
Most NLP researchers will never need to pre-train their own model from scratch.

**Fine-tuning** is inexpensive. All of the results in the paper can be
replicated in at most 1 hour on a single Cloud TPU, or a few hours on a GPU,
starting from the exact same pre-trained model. SQuAD, for example, can be
trained in around 30 minutes on a single Cloud TPU to achieve a Dev F1 score of
91.0%, which is the single system state-of-the-art.

The other important aspect of BERT is that it can be adapted to many types of
NLP tasks very easily. In the paper, we demonstrate state-of-the-art results on
sentence-level (e.g., SST-2), sentence-pair-level (e.g., MultiNLI), word-level
(e.g., NER), and span-level (e.g., SQuAD) tasks with almost no task-specific
modifications.

## What has been released in this repository?

We are releasing the following:

*   TensorFlow code for the BERT model architecture (which is mostly a standard
    [Transformer](https://arxiv.org/abs/1706.03762) architecture).
*   Pre-trained checkpoints for both the lowercase and cased version of
    `BERT-Base` and `BERT-Large` from the paper.
*   TensorFlow code for push-button replication of the most important
    fine-tuning experiments from the paper, including SQuAD, MultiNLI, and MRPC.

All of the code in this repository works out-of-the-box with CPU, GPU, and Cloud
TPU.

## Pre-trained models

We are releasing the `BERT-Base` and `BERT-Large` models from the paper.
`Uncased` means that the text has been lowercased before WordPiece tokenization,
e.g., `John Smith` becomes `john smith`. The `Uncased` model also strips out any
accent markers. `Cased` means that the true case and accent markers are
preserved. Typically, the `Uncased` model is better unless you know that case
information is important for your task (e.g., Named Entity Recognition or
Part-of-Speech tagging).

These models are all released under the same license as the source code (Apache
2.0).

For information about the Multilingual and Chinese model, see the
[Multilingual README](https://github.com/google-research/bert/blob/master/multilingual.md).

**When using a cased model, make sure to pass `--do_lower=False` to the training
scripts. (Or pass `do_lower_case=False` directly to `FullTokenizer` if you're
using your own script.)**

The links to the models are here (right-click, 'Save link as...' on the name):

*   **[`BERT-Large, Uncased (Whole Word Masking)`](https://storage.googleapis.com/bert_models/2019_05_30/wwm_uncased_L-24_H-1024_A-16.zip)**:
    24-layer, 1024-hidden, 16-heads, 340M parameters
*   **[`BERT-Large, Cased (Whole Word Masking)`](https://storage.googleapis.com/bert_models/2019_05_30/wwm_cased_L-24_H-1024_A-16.zip)**:
    24-layer, 1024-hidden, 16-heads, 340M parameters
*   **[`BERT-Base, Uncased`](https://storage.googleapis.com/bert_models/2018_10_18/uncased_L-12_H-768_A-12.zip)**:
    12-layer, 768-hidden, 12-heads, 110M parameters
*   **[`BERT-Large, Uncased`](https://storage.googleapis.com/bert_models/2018_10_18/uncased_L-24_H-1024_A-16.zip)**:
    24-layer, 1024-hidden, 16-heads, 340M parameters
*   **[`BERT-Base, Cased`](https://storage.googleapis.com/bert_models/2018_10_18/cased_L-12_H-768_A-12.zip)**:
    12-layer, 768-hidden, 12-heads , 110M parameters
*   **[`BERT-Large, Cased`](https://storage.googleapis.com/bert_models/2018_10_18/cased_L-24_H-1024_A-16.zip)**:
    24-layer, 1024-hidden, 16-heads, 340M parameters
*   **[`BERT-Base, Multilingual Cased (New, recommended)`](https://storage.googleapis.com/bert_models/2018_11_23/multi_cased_L-12_H-768_A-12.zip)**:
    104 languages, 12-layer, 768-hidden, 12-heads, 110M parameters
*   **[`BERT-Base, Multilingual Uncased (Orig, not recommended)`](https://storage.googleapis.com/bert_models/2018_11_03/multilingual_L-12_H-768_A-12.zip)
    (Not recommended, use `Multilingual Cased` instead)**: 102 languages,
    12-layer, 768-hidden, 12-heads, 110M parameters
*   **[`BERT-Base, Chinese`](https://storage.googleapis.com/bert_models/2018_11_03/chinese_L-12_H-768_A-12.zip)**:
    Chinese Simplified and Traditional, 12-layer, 768-hidden, 12-heads, 110M
    parameters

Each .zip file contains three items:

*   A TensorFlow checkpoint (`bert_model.ckpt`) containing the pre-trained
    weights (which is actually 3 files).
*   A vocab file (`vocab.txt`) to map WordPiece to word id.
*   A config file (`bert_config.json`) which specifies the hyperparameters of
    the model.

## Fine-tuning with BERT

**Important**: All results on the paper were fine-tuned on a single Cloud TPU,
which has 64GB of RAM. It is currently not possible to re-produce most of the
`BERT-Large` results on the paper using a GPU with 12GB - 16GB of RAM, because
the maximum batch size that can fit in memory is too small. We are working on
adding code to this repository which allows for much larger effective batch size
on the GPU. See the section on [out-of-memory issues](#out-of-memory-issues) for
more details.

This code was tested with TensorFlow 1.11.0. It was tested with Python2 and
Python3 (but more thoroughly with Python2, since this is what's used internally
in Google).

The fine-tuning examples which use `BERT-Base` should be able to run on a GPU
that has at least 12GB of RAM using the hyperparameters given.

### Fine-tuning with Cloud TPUs

Most of the examples below assumes that you will be running training/evaluation
on your local machine, using a GPU like a Titan X or GTX 1080.

However, if you have access to a Cloud TPU that you want to train on, just add
the following flags to `run_classifier.py` or `run_squad.py`:

```
  --use_tpu=True \
  --tpu_name=$TPU_NAME
```

Please see the
[Google Cloud TPU tutorial](https://cloud.google.com/tpu/docs/tutorials/mnist)
for how to use Cloud TPUs. Alternatively, you can use the Google Colab notebook
""[BERT FineTuning with Cloud TPUs](https://colab.research.google.com/github/tensorflow/tpu/blob/master/tools/colab/bert_finetuning_with_cloud_tpus.ipynb)"".

On Cloud TPUs, the pretrained model and the output directory will need to be on
Google Cloud Storage. For example, if you have a bucket named `some_bucket`, you
might use the following flags instead:

```
  --output_dir=gs://some_bucket/my_output_dir/
```

The unzipped pre-trained model files can also be found in the Google Cloud
Storage folder `gs://bert_models/2018_10_18`. For example:

```
export BERT_BASE_DIR=gs://bert_models/2018_10_18/uncased_L-12_H-768_A-12
```

### Sentence (and sentence-pair) classification tasks

Before running this example you must download the
[GLUE data](https://gluebenchmark.com/tasks) by running
[this script](https://gist.github.com/W4ngatang/60c2bdb54d156a41194446737ce03e2e)
and unpack it to some directory `$GLUE_DIR`. Next, download the `BERT-Base`
checkpoint and unzip it to some directory `$BERT_BASE_DIR`.

This example code fine-tunes `BERT-Base` on the Microsoft Research Paraphrase
Corpus (MRPC) corpus, which only contains 3,600 examples and can fine-tune in a
few minutes on most GPUs.

```shell
export BERT_BASE_DIR=/path/to/bert/uncased_L-12_H-768_A-12
export GLUE_DIR=/path/to/glue

python run_classifier.py \
  --task_name=MRPC \
  --do_train=true \
  --do_eval=true \
  --data_dir=$GLUE_DIR/MRPC \
  --vocab_file=$BERT_BASE_DIR/vocab.txt \
  --bert_config_file=$BERT_BASE_DIR/bert_config.json \
  --init_checkpoint=$BERT_BASE_DIR/bert_model.ckpt \
  --max_seq_length=128 \
  --train_batch_size=32 \
  --learning_rate=2e-5 \
  --num_train_epochs=3.0 \
  --output_dir=/tmp/mrpc_output/
```

You should see output like this:

```
***** Eval results *****
  eval_accuracy = 0.845588
  eval_loss = 0.505248
  global_step = 343
  loss = 0.505248
```

This means that the Dev set accuracy was 84.55%. Small sets like MRPC have a
high variance in the Dev set accuracy, even when starting from the same
pre-training checkpoint. If you re-run multiple times (making sure to point to
different `output_dir`), you should see results between 84% and 88%.

A few other pre-trained models are implemented off-the-shelf in
`run_classifier.py`, so it should be straightforward to follow those examples to
use BERT for any single-sentence or sentence-pair classification task.

Note: You might see a message `Running train on CPU`. This really just means
that it's running on something other than a Cloud TPU, which includes a GPU.

#### Prediction from classifier

Once you have trained your classifier you can use it in inference mode by using
the --do_predict=true command. You need to have a file named test.tsv in the
input folder. Output will be created in file called test_results.tsv in the
output folder. Each line will contain output for each sample, columns are the
class probabilities.

```shell
export BERT_BASE_DIR=/path/to/bert/uncased_L-12_H-768_A-12
export GLUE_DIR=/path/to/glue
export TRAINED_CLASSIFIER=/path/to/fine/tuned/classifier

python run_classifier.py \
  --task_name=MRPC \
  --do_predict=true \
  --data_dir=$GLUE_DIR/MRPC \
  --vocab_file=$BERT_BASE_DIR/vocab.txt \
  --bert_config_file=$BERT_BASE_DIR/bert_config.json \
  --init_checkpoint=$TRAINED_CLASSIFIER \
  --max_seq_length=128 \
  --output_dir=/tmp/mrpc_output/
```

### SQuAD 1.1

The Stanford Question Answering Dataset (SQuAD) is a popular question answering
benchmark dataset. BERT (at the time of the release) obtains state-of-the-art
results on SQuAD with almost no task-specific network architecture modifications
or data augmentation. However, it does require semi-complex data pre-processing
and post-processing to deal with (a) the variable-length nature of SQuAD context
paragraphs, and (b) the character-level answer annotations which are used for
SQuAD training. This processing is implemented and documented in `run_squad.py`.

To run on SQuAD, you will first need to download the dataset. The
[SQuAD website](https://rajpurkar.github.io/SQuAD-explorer/) does not seem to
link to the v1.1 datasets any longer, but the necessary files can be found here:

*   [train-v1.1.json](https://rajpurkar.github.io/SQuAD-explorer/dataset/train-v1.1.json)
*   [dev-v1.1.json](https://rajpurkar.github.io/SQuAD-explorer/dataset/dev-v1.1.json)
*   [evaluate-v1.1.py](https://github.com/allenai/bi-att-flow/blob/master/squad/evaluate-v1.1.py)

Download these to some directory `$SQUAD_DIR`.

The state-of-the-art SQuAD results from the paper currently cannot be reproduced
on a 12GB-16GB GPU due to memory constraints (in fact, even batch size 1 does
not seem to fit on a 12GB GPU using `BERT-Large`). However, a reasonably strong
`BERT-Base` model can be trained on the GPU with these hyperparameters:

```shell
python run_squad.py \
  --vocab_file=$BERT_BASE_DIR/vocab.txt \
  --bert_config_file=$BERT_BASE_DIR/bert_config.json \
  --init_checkpoint=$BERT_BASE_DIR/bert_model.ckpt \
  --do_train=True \
  --train_file=$SQUAD_DIR/train-v1.1.json \
  --do_predict=True \
  --predict_file=$SQUAD_DIR/dev-v1.1.json \
  --train_batch_size=12 \
  --learning_rate=3e-5 \
  --num_train_epochs=2.0 \
  --max_seq_length=384 \
  --doc_stride=128 \
  --output_dir=/tmp/squad_base/
```

The dev set predictions will be saved into a file called `predictions.json` in
the `output_dir`:

```shell
python $SQUAD_DIR/evaluate-v1.1.py $SQUAD_DIR/dev-v1.1.json ./squad/predictions.json
```

Which should produce an output like this:

```shell
{""f1"": 88.41249612335034, ""exact_match"": 81.2488174077578}
```

You should see a result similar to the 88.5% reported in the paper for
`BERT-Base`.

If you have access to a Cloud TPU, you can train with `BERT-Large`. Here is a
set of hyperparameters (slightly different than the paper) which consistently
obtain around 90.5%-91.0% F1 single-system trained only on SQuAD:

```shell
python run_squad.py \
  --vocab_file=$BERT_LARGE_DIR/vocab.txt \
  --bert_config_file=$BERT_LARGE_DIR/bert_config.json \
  --init_checkpoint=$BERT_LARGE_DIR/bert_model.ckpt \
  --do_train=True \
  --train_file=$SQUAD_DIR/train-v1.1.json \
  --do_predict=True \
  --predict_file=$SQUAD_DIR/dev-v1.1.json \
  --train_batch_size=24 \
  --learning_rate=3e-5 \
  --num_train_epochs=2.0 \
  --max_seq_length=384 \
  --doc_stride=128 \
  --output_dir=gs://some_bucket/squad_large/ \
  --use_tpu=True \
  --tpu_name=$TPU_NAME
```

For example, one random run with these parameters produces the following Dev
scores:

```shell
{""f1"": 90.87081895814865, ""exact_match"": 84.38978240302744}
```

If you fine-tune for one epoch on
[TriviaQA](http://nlp.cs.washington.edu/triviaqa/) before this the results will
be even better, but you will need to convert TriviaQA into the SQuAD json
format.

### SQuAD 2.0

This model is also implemented and documented in `run_squad.py`.

To run on SQuAD 2.0, you will first need to download the dataset. The necessary
files can be found here:

*   [train-v2.0.json](https://rajpurkar.github.io/SQuAD-explorer/dataset/train-v2.0.json)
*   [dev-v2.0.json](https://rajpurkar.github.io/SQuAD-explorer/dataset/dev-v2.0.json)
*   [evaluate-v2.0.py](https://worksheets.codalab.org/rest/bundles/0x6b567e1cf2e041ec80d7098f031c5c9e/contents/blob/)

Download these to some directory `$SQUAD_DIR`.

On Cloud TPU you can run with BERT-Large as follows:

```shell
python run_squad.py \
  --vocab_file=$BERT_LARGE_DIR/vocab.txt \
  --bert_config_file=$BERT_LARGE_DIR/bert_config.json \
  --init_checkpoint=$BERT_LARGE_DIR/bert_model.ckpt \
  --do_train=True \
  --train_file=$SQUAD_DIR/train-v2.0.json \
  --do_predict=True \
  --predict_file=$SQUAD_DIR/dev-v2.0.json \
  --train_batch_size=24 \
  --learning_rate=3e-5 \
  --num_train_epochs=2.0 \
  --max_seq_length=384 \
  --doc_stride=128 \
  --output_dir=gs://some_bucket/squad_large/ \
  --use_tpu=True \
  --tpu_name=$TPU_NAME \
  --version_2_with_negative=True
```

We assume you have copied everything from the output directory to a local
directory called ./squad/. The initial dev set predictions will be at
./squad/predictions.json and the differences between the score of no answer ("""")
and the best non-null answer for each question will be in the file
./squad/null_odds.json

Run this script to tune a threshold for predicting null versus non-null answers:

python $SQUAD_DIR/evaluate-v2.0.py $SQUAD_DIR/dev-v2.0.json
./squad/predictions.json --na-prob-file ./squad/null_odds.json

Assume the script outputs ""best_f1_thresh"" THRESH. (Typical values are between
-1.0 and -5.0). You can now re-run the model to generate predictions with the
derived threshold or alternatively you can extract the appropriate answers from
./squad/nbest_predictions.json.

```shell
python run_squad.py \
  --vocab_file=$BERT_LARGE_DIR/vocab.txt \
  --bert_config_file=$BERT_LARGE_DIR/bert_config.json \
  --init_checkpoint=$BERT_LARGE_DIR/bert_model.ckpt \
  --do_train=False \
  --train_file=$SQUAD_DIR/train-v2.0.json \
  --do_predict=True \
  --predict_file=$SQUAD_DIR/dev-v2.0.json \
  --train_batch_size=24 \
  --learning_rate=3e-5 \
  --num_train_epochs=2.0 \
  --max_seq_length=384 \
  --doc_stride=128 \
  --output_dir=gs://some_bucket/squad_large/ \
  --use_tpu=True \
  --tpu_name=$TPU_NAME \
  --version_2_with_negative=True \
  --null_score_diff_threshold=$THRESH
```

### Out-of-memory issues

All experiments in the paper were fine-tuned on a Cloud TPU, which has 64GB of
device RAM. Therefore, when using a GPU with 12GB - 16GB of RAM, you are likely
to encounter out-of-memory issues if you use the same hyperparameters described
in the paper.

The factors that affect memory usage are:

*   **`max_seq_length`**: The released models were trained with sequence lengths
    up to 512, but you can fine-tune with a shorter max sequence length to save
    substantial memory. This is controlled by the `max_seq_length` flag in our
    example code.

*   **`train_batch_size`**: The memory usage is also directly proportional to
    the batch size.

*   **Model type, `BERT-Base` vs. `BERT-Large`**: The `BERT-Large` model
    requires significantly more memory than `BERT-Base`.

*   **Optimizer**: The default optimizer for BERT is Adam, which requires a lot
    of extra memory to store the `m` and `v` vectors. Switching to a more memory
    efficient optimizer can reduce memory usage, but can also affect the
    results. We have not experimented with other optimizers for fine-tuning.

Using the default training scripts (`run_classifier.py` and `run_squad.py`), we
benchmarked the maximum batch size on single Titan X GPU (12GB RAM","'google', 'natural-language-processing', 'natural-language-understanding', 'nlp', 'tensorflow'",2018-10-25T22:57:34Z,2024-05-02T18:33:48Z,30,25,37322,999,"('jacobdevlin-google', 65), ('Abhishek Rao', 9), ('cbockman', 3), ('dalequark', 3), ('abhishekraok', 2), ('BogdanDidenko', 2), ('eric-haibin-lin', 2), ('Mathis Chenuet', 2), ('slavpetrov', 2), ('msramalho', 1), ('Ming-Wei Chang', 1), ('pengli09', 1), ('Ruchen Zhang', 1), ('stefan-it', 1), ('tianxin1860', 1), ('ywkim', 1), ('hsm207', 1), ('iuliaturc-google', 1), ('soloice', 1), ('zhaoyongke', 1), ('Leo Zhao', 1), ('JasonJPu', 1), ('qwfy', 1), ('rodgzilla', 1), ('georgefeng', 1), ('craigcitro', 1), ('imcaspar', 1), ('ammarasmro', 1), ('aijunbai', 1), ('0xflotus', 1)",21,18,
chaozh/awesome-blockchain-cn,收集所有区块链(BlockChain)技术开发相关资料，包括Fabric和Ethereum开发资料,"# Awesome Blockchain [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)

>  收集所有区块链(BlockChain)技术开发相关资料

*Please read the contribution [guidelines](https://github.com/sindresorhus/awesome/blob/master/contributing.md) before contributing. 请在为本项目贡献信息前仔细阅读 [操作指南](https://github.com/sindresorhus/awesome/blob/master/contributing.md)*

欢迎到Issues提交区块链相关项目，我们会第一时间处理。
提交的项目格式如下：
项目名称：XXXXX
相关介绍: XXXXXX

## CONTENTS

- [INTRO 介绍](#intro-%E4%BB%8B%E7%BB%8D)
- [TUTORIAL 教程](#tutorial-%E6%95%99%E7%A8%8B)
- [PROJECT 项目](#project-%E9%A1%B9%E7%9B%AE)
- [DOCUMENT 资料](#document-%E8%B5%84%E6%96%99)
- [APPLICATION 应用](#application-%E5%BA%94%E7%94%A8)

## INTRO 介绍 

### Started 入门 

- [（一）简单易懂地介绍什么是区块链](https://zhuanlan.zhihu.com/p/22228902) 比特币区块链关键词讲解
- [（二）简单易懂地介绍什么是区块链（技术篇）](https://zhuanlan.zhihu.com/p/23243289) 比特币区块链技术图解
- [一文看懂区块链：一步一步发明比特币](https://charlesliuyx.github.io/2017/09/24/%E4%B8%80%E6%96%87%E5%BC%84%E6%87%82%E5%8C%BA%E5%9D%97%E9%93%BE-%E4%BB%A5%E6%AF%94%E7%89%B9%E5%B8%81%E4%B8%BA%E4%BE%8B/)
- [一步一步学区块链](http://blog.csdn.net/jwter87/article/details/53322642) 按步骤的实际操作入门指南
- [区块链技术指南](https://yeasy.gitbooks.io/blockchain_guide) 区块链领域比较系统的入门资料
- [理解区块链](http://blog.csdn.net/csolo/article/details/52858236) 区块链关键技术要点讲解
- [一文看懂区块链架构设计](http://www.8btc.com/ebook-blockchain) 从技术分层解构架构
- [共识算法与如何解决拜占庭将军问题](https://charlesliuyx.github.io/2018/03/03/%E3%80%90%E5%8C%BA%E5%9D%97%E9%93%BE%E3%80%91%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E6%8B%9C%E5%8D%A0%E5%BA%AD%E5%B0%86%E5%86%9B%E9%97%AE%E9%A2%98/)
- [Blockchain Demo](https://blockchaindemo.io/)  A visual demo of blockchain technology
- [Defi Mooc教程](https://defi-learning.org/) Defi公开课程

### Ethereum 以太坊进阶

- [区块链技术-智能合约-以太坊](http://ethfans.org/posts/block-chain-technology-smart-contracts-and-ethereum) 以太坊智能合约入门概念
- [以太坊白皮书](http://ethfans.org/wikis/以太坊白皮书)
- [The Ethereum Wiki](https://theethereum.wiki/w/index.php/Main_Page) *(English)*
- [以太坊设计原理](http://ethfans.org/posts/510)
- [以太坊Dapp开发入门](http://me.tryblockchain.org/getting-up-to-speed-on-ethereum.html)
- [以太坊Gas使用](https://hackernoon.com/ether-purchase-power-df40a38c5a2f) Calculating Costs in Ethereum Contracts *(English)*
- [以太坊代码剖析](http://ethfans.org/topics/227)
- [以太坊源码阅读](http://www.cnblogs.com/baizx/category/1011749.html)
- [Merkle Tree学习](http://blog.csdn.net/jiange_zh/article/details/53386250) 
- [以太坊的指南针](https://github.com/laalaguer/ethereum-compass)


### Fabric 联盟链进阶

- [Blockchain区块链架构设计之一：成员管理](https://zhuanlan.zhihu.com/p/23356616)
- [Blockchain区块链架构设计之二：分布式账本技术对比](https://zhuanlan.zhihu.com/p/23463699)
- [Blockchain区块链架构设计之三：Hyperledger Fabric介绍](https://zhuanlan.zhihu.com/p/23947372)
- [Blockchain区块链架构设计之四：Fabric多通道和下一代账本设计](https://zhuanlan.zhihu.com/p/24605987)
- [Blockchain区块链架构设计之五：让DLT产生协作，对Corda和GSL的思考](https://zhuanlan.zhihu.com/p/25061575)
- [Blockchain区块链架构设计之六：Fabric 1.0账本设计（1）](https://zhuanlan.zhihu.com/p/25119939)
- [Blockchain区块链架构设计之七：Fabric 1.0 Endorse背书策略](https://zhuanlan.zhihu.com/p/25295608)
- [Hyperledger架构解读：Hyperledger Fabric1.0架构概览](http://www.wanbizu.com/blockchain/201702078984.html)

## TUTORIAL 教程

### BitCoin 比特币

- [Bitcoin and Cryptocurrency Technologies](https://www.coursera.org/learn/cryptocurrency) Cousera上的比特币教程 *(English)*

### Ethereum 以太坊

- [以太坊从零开始入门](http://www.jianshu.com/p/220130b39e22)
- [以太坊开发入门经验](http://me.tryblockchain.org/getting-up-to-speed-on-ethereum.html)
- [以太坊智能合约编程之菜鸟教程](http://ethfans.org/posts/101-noob-intro)
- [Solidity智能合约](https://github.com/WTFAcademy/WTF-Solidity-Internals) 介绍Solidity智能合约中的存储布局，内存布局，以及ABI编码规则，帮助大家理解Solidity的内部规则。
- [区块链语言Solidity校验椭圆曲线加密数字签名（附实例）](http://www.toutiao.com/i6401418700217385473/?tt_from=weixin&utm_campaign=client_share&from=groupmessage&app=news_article&utm_source=weixin&iid=8932715408&utm_medium=toutiao_ios&wxshare_count=2&pbid=35867484354)
- [Create your own crypto-currency](https://www.ethereum.org/token) 来自以太坊官方的代币创建教程 *(English)*
- [ETHEREUM PET SHOP](http://truffleframework.com/tutorials/pet-shop) Truffle框架逐步案例教程 *(English)*
- [ROBUST SMART CONTRACTS WITH OPENZEPPELIN](http://zeppelin.tryblockchain.org/robust-smart-contracts-with-openzeppelin.html) OpenZeppelin集成Truffle编写健壮安全的合约 *(English)*
- [Truffle3.0案例教程](http://truffle.tryblockchain.org/truffle3.0-integrate-nodejs.html) 集成NodeJS并完全跑通，附详细实例和可能的错误 *(English)*
- [以太坊开发入门教程](http://blog.csdn.net/wo541075754/article/category/6502432/1)
- [useWeb3教程](https://www.useweb3.xyz/) web3开发教程合集 *(English)*
- [cryptozombies教程](https://cryptozombies.io/) solidity游戏式教程 *(English)*
- [chainshot教程](https://www.chainshot.com/courses) web3开发教程合集 *(English)*
- [smartcontract教程](https://www.smartcontract.engineer/)  solidity leetcode模式教程 *(English)*
- [solidity案例教程](https://solidity-by-example.org/app/ether-wallet/) solidity案例学习 *(English)*

### Fabric 联盟链

- [Fabric Basics](https://github.com/angrbrd/hyperledger-fabric-basics)  使用Docker Toolbox来搭建Fabric的开发环境 *(English)*
- [Learn Chaincode](https://github.com/IBM-Blockchain/learn-chaincode) Fabric Chaincode入门 *(English)*
- [Marbles Project Tutorial: Part One](https://github.com/IBM-Blockchain/marbles/blob/master/docs/tutorial_part1.md) 官方Chaincode案例教程第一部分 *(English)*
- [Marbles Project Tutorial: Part Two](https://github.com/IBM-Blockchain/marbles/blob/master/docs/tutorial_part2.md) 官方Chaincode案例教程第二部分 *(English)*
- [Hyperledger Fabric V1.0– 开发者快速入门](https://zhuanlan.zhihu.com/p/25070745) 这个是基于baseos 0.2.2 的
- [搭建运行Fabric V1.0-alpha版本](http://blog.csdn.net/kojhliang/article/details/66971404) 针对Fabric1.0版本的开发环境搭建指引
- [Fabric v1.0-alpha 开发镜像编译](http://blog.csdn.net/remote_roamer/article/details/70228662) 使用Fabric源码编译v1.0-alpha版本的Docker镜像指引
- [Hyperledger Composer使用入门](http://www.jianshu.com/p/7bc258810b77) 官方Fabric应用开发工具Hyperledger Composer入门
- [Fabric-CA-1.0-Alpha小结](http://www.jianshu.com/p/ec7d4216c3cf)

### Videos 视频

- [Devcon 0 (Berlin, 2014) talks and videos](https://www.youtube.com/watch?v=_BvvUlKDqp0&amp;list=PLJqWcTqh_zKEjpSej3ddtDOKPRGl_7MhS) *(English)*
- [Devcon 1 (London, 2015) talks and videos](https://www.youtube.com/watch?v=BUARih8_f68&list=PLJqWcTqh_zKHQUFX4IaVjWjfT2tbS4NVk) *(English)*
- [Devcon 2 (Shanghai, 2016) talks and videos](https://www.youtube.com/watch?v=1wayaZ1-iBE&list=PLaM7G4Llrb7xqzgOwbvNv63_KM7VH84Rd) *(English)*
- [Devcon 3 (Cancún, 2017) talks and videos](https://www.youtube.com/watch?v=7BKegezSXIU&list=PLaOiBfasbC4nULu0Ikv55hR1FpmCfNDdB&ab_channel=EthereumFoundation) *(English)*
- [Devcon 4 (Prague, 2018) talks and videos](https://www.youtube.com/watch?v=xU-aCLSXk04&list=PLAvgWf9pPaiPNtLtHQI1TdYqDWKrwV5kl&ab_channel=EthereumFoundation) *(English)*
- [Devcon 5 (Osaka, 2019) talks and videos](https://www.youtube.com/watch?v=y9A8wHhNjJA&list=PLAvgWf9pPaiO3S1dWdnvrQuXJBy89JFXy&ab_channel=EthereumFoundation) *(English)*
- [Devcon 6 (Bogota, 2022) talks and videos](https://www.youtube.com/watch?v=h4MP1vwnyEE&list=PLaM7G4Llrb7wPaWK47GNSGvPoXUZGYVKX&ab_channel=EthereumFoundation) *(English)*

### Roadmaps 路线图

- [Blockchain Roadmap](https://roadmap.sh/blockchain)
- [Roadmap of learning blockchain](https://github.com/Blockchain-zju/blockchainer-roadmap)
- [DeFi Developer Roadmap](https://github.com/OffcierCia/DeFi-Developer-Road-Map)

## PROJECT 项目

### Chain 区块链底层

- [Metaverse](https://github.com/mvs-org/metaverse) 原界链源码
- [EOS](https://github.com/EOSIO/eos) EOS链源码
- [BYTOM](https://github.com/Bytom/bytom) 比原链源码
- [NEO](https://github.com/neo-project/neo) NEO链源码
- [CITA](https://github.com/cryptape/cita) cita联盟链的底层源码
- [Nervos](https://github.com/nervosnetwork/ckb) 公链 Nervos CKB 的底层源码
- [比特币0.1](https://github.com/fkysly/bitcoin0.1.0) 最原始的比特币代码
- [Quorum](https://github.com/jpmorganchase/quorum) 来自JP Morgan基于Go-Ethereum数据隐私加强的以太坊实现
- [FISCO-BCOS](https://github.com/FISCO-BCOS/FISCO-BCOS) 来自金链盟的聚焦金融行业的区块链底层平台
- [Presto-Ethereum](https://github.com/xiaoyao1991/presto-ethereum) 以太坊增加Presto的SQL访问能力
- [IPFS](https://github.com/ipfs/go-ipfs) IPFS的GO语言实现 [原理](https://github.com/ipfs/ipfs)

### SDK 工具包

- [Remix](https://ethereum.github.io/browser-solidity/) 在线以太坊编译器
- [Truffle](https://github.com/trufflesuite/truffle) 以太坊Dapp开发脚手架
- [Zeppelin](https://github.com/OpenZeppelin/zeppelin-solidity) 用于编写安全的以太坊合约框架
- [Web3j](https://github.com/web3j/web3j) 以太坊官方Web3轻量级java SDK
- [Embark](https://github.com/embark-framework/embark) 以太坊Dapp开发框架，支持IPFS、Whisper及Orbit调用 
- [Web3Swift](https://github.com/BANKEX/web3swift) 一个Web3的swift SDK
- [Porosity](https://github.com/comaeio/porosity) 反编译以太坊智能合约工具
- [Solidity-Coverage](https://github.com/sc-forks/solidity-coverage) 检测Solidity代码覆盖
- [Caliper](https://github.com/hyperledger-archives/caliper) hyperledger区块链性能测试工具
- [Composer](https://github.com/hyperledger/composer) 官方可视化Fabric应用开发框架
- [Cakeshop](https://github.com/jpmorganchase/cakeshop) 来自JP Morgan的以太坊可视化管理工具
- [btcschools.net](https://www.btcschools.net) 一个区块链的PHP SDK

### Research 最新研究

- [eWASM](https://github.com/ewasm/design) 让以太坊支持WebAssembly
- [FSolidM](https://cps-vo.org/group/SmartContracts) 可视化智能合约生成工具 [源码](https://github.com/anmavrid/smart-contracts)
- [Maian](https://github.com/MAIAN-tool/MAIAN) 以太坊智能合约漏洞查找工具
- [Oyente](https://github.com/melonproject/oyente) 以太坊智能合约分析工具
- [Blockbench](https://github.com/ooibc88/blockbench) 区块链性能测试工具
- [Zokrates](https://github.com/JacobEberhardt/ZoKrates) 以太坊使用zkSNARKS工具包(实验用)
- [libsnark](https://github.com/scipr-lab/libsnark) zkSNARKS C++库


## DOCUMENT 资料

### BitCoin 比特币

- [精通比特币](https://github.com/bitcoinbook/bitcoinbook) 精通比特币开发Oreilly开源书 [中文翻译版](https://github.com/tianmingyun/MasterBitcoin2CN)
- [blockchaindev.org](http://blockchaindev.org/) 区块链创业公司维优CTO的专栏
- [区块链研习社](http://www.jianshu.com/u/30081a05cf95) 比特币源码解读

### Ethereum 以太坊

- [Mastering Ethereum](https://github.com/ethereumbook/ethereumbook) 精通以太坊开发Oreilly开源书
- [区块链技术博客](http://me.tryblockchain.org/) 关注以太坊
- [以太坊系列教程](http://gi1.cn/topics/category/solidity) solidity语言学习
- [Solidity语言文档](http://www.tryblockchain.org/) 语言中文手册
- [Web3.JS接口文档](http://web3.tryblockchain.org/) 接口中文手册
- [Truffle框架文档](http://truffle.tryblockchain.org/) 框架中文手册
- [Open Zeppelin框架文档](http://zeppelin.tryblockchain.org/) 框架中文手册
- [Ethplorer接口](https://github.com/EverexIO/Ethplorer/wiki/Ethplorer-API?from=etop) Ethplorer接口文档
- [以太坊常见问题FAQ](http://8btc.com/thread-23195-1-1.html)
- [Ethereum Smart Contract Security Best Practices](https://consensys.github.io/smart-contract-best-practices/) *(English)*
- [EthList](https://github.com/Scanate/EthList) 以太坊开发相关学习资料收集 *(English)*
- [以太坊开发者工具列表](https://github.com/ConsenSys/ethereum-developer-tools-list/blob/master/README_Chinese.md) 以太坊开发资料收集

### Fabric 联盟链

- [Fabric Official Docs](https://hyperledger-fabric.readthedocs.io/en/latest/) Fabric官方最新文档
- [yeasy的专栏](http://blog.csdn.net/yeasy) IBM fabric核心开发者yeasy的专栏
- [菜鸟的博客](http://blog.csdn.net/xjmtxwd24/) fabric0.6及1.0源码分析
- [jiang_xinxing的博客](http://blog.csdn.net/jiang_xinxing/article/category/6642179) fabric0.6源码分析

## APPLICATION 应用 

### Explorer 链浏览

- [Blockchain](https://blockchain.info) 比特币区块链浏览器
- [Etherscan](https://etherscan.io) 以太坊区块链浏览器
- [Ethplorer](https://ethplorer.io) 以太坊区块链浏览器，提供API调用
- [Eth Gas Station](https://ethgasstation.info/index.php) 以太坊Gas目前定价
- [Etherscope](https://etherscope.io) 以太坊区块链浏览器
- [Oklink](https://www.oklink.com/eth/defi) Defi市场状况浏览器
- [Tokenview](https://tokenview.io) The General Multi-chain Explorer and Blockchain API
- [3xpl](https://3xpl.com) 最快的无广告通用区块浏览器

### Wallet 钱包

- [My Ether Wallet](https://myetherwallet.com) 网页版以太坊钱包 [源码](https://github.com/kvhnuke/etherwallet)
- [MetaMask](https://metamask.io/) Chrome Extension浏览器插件版
- [Multi-platform Jaxx Wallet](https://jaxx.io/) 同时兼容以太坊和比特币钱包
- [Mist Wallet](https://github.com/ethereum/mist/releases/latest) 官方版轻量级钱包
- [Parity Wallet](https://github.com/paritytech/parity/releases/latest) 
- [Harmony Wallet](https://github.com/ether-camp/ethereum-harmony/releases/latest)
- [imToken](https://token.im/) 移动App版钱包
- [Trust](https://trustwalletapp.com/) iOS / Android 原生钱包 + DApp 浏览器
- [Cipher](https://www.cipherbrowser.com/) iOS / Android 钱包 + DApp 浏览器
- [Ledger Nano S](https://theethereum.wiki/w/index.php/Ledger_Nano_S) 硬件钱包
- [Trezor](https://blog.trezor.io/trezor-integration-with-myetherwallet-3e217a652e08) 硬件钱包
- [DeBank](https://debank.com/) 以太坊 DeFi 钱包
- [web3modal](https://github.com/WalletConnect/web3modal) Web3 provider solution for all Wallets

### Exchange 交易所

- [0x](https://www.0xproject.com/otc) 0x交易所平台 [源码](https://github.com/0xProject/contracts)
- [IDEX](https://idex.market) IDEX交易所，目前最活跃 [源码](https://github.com/AuroraDAO)
- [ethdelf](https://etherdelta.github.io/#ZRX-ETH) etherdelta交易所 [源码](https://github.com/etherdelta/smart_contract)
- [forkdelta](https://forkdelta.github.io) forkdelta交易所,较活跃 [源码](https://github.com/forkdelta/smart_contract)
- [kyber](https://kyber.network/) kyber交易所 [源码](https://github.com/kyberNetwork/smart_contract)
- [Dmarket](https://dmarket.io) dmarket交易所 [源码](https://github.com/suntechsoft/dmarket-smartcontract)
- [augur](https://augur.net/) 对赌交易所 [源码](https://github.com/AugurProject)
- [melonport](https://melonport.com/) 数字资产交易所 [源码](https://github.com/melonproject)

### Defi 去中心化金融

- [Uniswap](https://uniswap.org/) Uniswap [源码](https://github.com/Uniswap)
- [Synthetix](https://www.synthetix.io/) Synthetix 衍生品[源码](https://github.com/synthetixio)
- [Aave](https://aave.com/) Aave 借贷机制 [源码](https://github.com/aave)
- [Compound](https://compound.finance/governance/comp) Compound 借贷机制 [源码](https://github.com/compound-finance/compound-protocol)
- [MakerDao](https://makerdao.com/) MakerDao 做市Dai代币 [源码](https://github.com/makerdao)
- [Wrapped BTC](https://wbtc.network) BTC锚定资产 [源码](https://github.com/WrappedBTC/bitcoin-token-smart-contracts)
- [USDT](https://tether.to/) USDT稳定币

### Game 游戏

- [CryptoKitties](https://www.cryptokitties.co/) 以太猫
- [Etheremon](https://www.etheremon.com/#/) 以太神奇宝贝
- [Edgeless](https://www.edgeless.io/) 虚拟币在线赌场 [源码](https://github.com/EdgelessCasino/Smart-Contracts)

### IM 通信

- [status-im](https://github.com/status-im/status-network-token) status.im项目开源代码
- [nostr](https://github.com/nostr-protocol/nostr) Nostr协议目录
- [nostr-rs-relay](https://github.com/scsibug/nostr-rs-relay) Nostr Relay Rust实现
  
### Social 社会

- [Oraclize](http://docs.oraclize.it/#background) 第三方信息提供
- [Aragon](https://aragon.one/) 公司业务 [源码](https://github.com/aragon/aragon-core/tree/master/contracts)
- [dharma](https://dharma.io/) 第三方增信 [源码](https://github.com/dharmaprotocol/dharma-cli)
- [Chronobank](https://chronobank.io/) 共享机制
- [slockit](https://slock.it/) 租借智能设备 [源码](https://github.com/slockit/smart-contract)
- [DAO](https://github.com/slockit/DAO) DAO提案

### Cross Chain 跨链

- [Cosmos](https://cosmos.network) cosmos跨链交易，包括BTC到ETH [源码](https://github.com/cosmos)
- [polkadot](https://polkadot.io) polkadot跨链，实现了一个轻量级以太坊客户端 [源码](https://github.com/paritytech/parity)

### Token 代币

- [ERC20](https://github.com/ethereum/EIPs/pull/610) 以太坊的ICO代币标准
- [Token Sale](http://vitalik.ca/general/2017/06/09/sales.html) 代币销售模型
- [NFT](https://www.nft.org/) NFT代币

## [Awesome Ethereum](https://github.com/chaozh/awesome-blockchain/tree/master/Ethereum) 

以太坊相关详细开发资源收集

## [Awesome Fabric](https://github.com/chaozh/awesome-blockchain/tree/master/Hyperledger%20Fabric) 

Fabric联盟链相关详细开发资源收集

## DONATE 赞助

BTC：1JnC15WwDVcC3QbQRUY6ChqRLucLpTGaJN

ETH：0x81847890eecdecb20ee145824eaa1aec079a712c

## License

[![CC0](http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)

To the extent possible under law, [Chaozh](http://www.chaozh.com) has waived all copyright and related or neighboring rights to this work.
",,2017-03-12T06:02:46Z,2024-02-29T07:33:18Z,13,10,18244,1014,"('chaozh', 53), ('chaozh', 14), ('unknown', 3), ('Kevin Zhan', 2), ('BoynChan', 1), ('wooparadog', 1), ('Mine77', 1), ('hewigovens', 1), ('bxq2011hust', 1), ('laalaguer', 1), ('evseevnn-zzz', 1), ('syedmouaazfarrukh', 1), ('xuziyan001', 1)",9,9,
NicholasAStuart/myo-java,Java API for Thalmic's Myo Device,"myo-java
========

Java Bindings for Myo
---------------------

Java language bindings for the Myo Developer Kit. The JNI libraries are all enclosed for OSX and Windows. 

If you need to build the Libraries yourself, please refer to this project: https://github.com/NicholasAStuart/myo-java-JNI-Library",,2014-08-02T06:09:38Z,2016-09-14T15:30:10Z,4,3,41,15,"('NicholasAStuart', 47), ('nstuart-at-salesforce', 2), ('deepjoshi11th', 1), ('voidplus', 1)",2,1,
jamiebuilds/babel-handbook,:blue_book: A guided handbook on how to use Babel and how to create plugins for Babel.,"# Babel Handbook

Written by [Jamie Kyle](https://jamie.build/)

A guided handbook on how to use Babel and how to create plugins for Babel.

**Translations**

- [English](https://github.com/thejameskyle/babel-handbook/tree/master/translations/en/README.md)
- [Afrikaans](https://github.com/thejameskyle/babel-handbook/tree/master/translations/af/README.md)
- [العربية](https://github.com/thejameskyle/babel-handbook/tree/master/translations/ar/README.md)
- [Català](https://github.com/thejameskyle/babel-handbook/tree/master/translations/ca/README.md)
- [Čeština](https://github.com/thejameskyle/babel-handbook/tree/master/translations/cs/README.md)
- [Dansk](https://github.com/thejameskyle/babel-handbook/tree/master/translations/da/README.md)
- [Deutsch](https://github.com/thejameskyle/babel-handbook/tree/master/translations/de/README.md)
- [Ελληνικά](https://github.com/thejameskyle/babel-handbook/tree/master/translations/el/README.md)
- [Español](https://github.com/thejameskyle/babel-handbook/tree/master/translations/es-ES/README.md)
- [فارسی](https://github.com/thejameskyle/babel-handbook/tree/master/translations/fa-IR/README.md)
- [Français](https://github.com/thejameskyle/babel-handbook/tree/master/translations/fr/README.md)
- [עִברִית](https://github.com/thejameskyle/babel-handbotree/master/ok/translations/he/README.md)
- [Italiano](https://github.com/thejameskyle/babel-handbook/tree/master/translations/it/README.md)
- [日本語](https://github.com/thejameskyle/babel-handbook/tree/master/translations/ja/README.md)
- [한국어](https://github.com/thejameskyle/babel-handbook/tree/master/translations/ko/README.md)
- [Magyar](https://github.com/thejameskyle/babel-handbook/tree/master/translations/hu/README.md)
- [Nederlands](https://github.com/thejameskyle/babel-handbook/tree/master/translations/nl/README.md)
- [Norsk](https://github.com/thejameskyle/babel-handbook/tree/master/translations/no/README.md)
- [Polskie](https://github.com/thejameskyle/babel-handbook/tree/master/translations/pl/README.md)
- [Português](https://github.com/thejameskyle/babel-handbook/tree/master/translations/pt-PT/README.md)
- [Português (Brasil)](https://github.com/thejameskyle/babel-handbook/tree/master/translations/pt-BR/README.md)
- [Română](https://github.com/thejameskyle/babel-handbook/tree/master/translations/ro/README.md)
- [Русский](https://github.com/thejameskyle/babel-handbook/tree/master/translations/ru/README.md)
- [Српски језик (Ћирилица)](https://github.com/thejameskyle/babel-handbook/tree/master/translations/sr/README.md)
- [Suomi](https://github.com/thejameskyle/babel-handbook/tree/master/translations/fi/README.md)
- [Svenska](https://github.com/thejameskyle/babel-handbook/tree/master/translations/sv-SE/README.md)
- [Türkçe](https://github.com/thejameskyle/babel-handbook/tree/master/translations/tr/README.md)
- [Tiếng Việt](https://github.com/thejameskyle/babel-handbook/tree/master/translations/vi/README.md)
- [Українська](https://github.com/thejameskyle/babel-handbook/tree/master/translations/uk/README.md)
- [中文](https://github.com/thejameskyle/babel-handbook/tree/master/translations/zh-Hans/README.md)
- [繁體中文](https://github.com/thejameskyle/babel-handbook/tree/master/translations/zh-Hant/README.md)

**[Request another translation](https://github.com/thejameskyle/babel-plugin-handbook/issues/new?title=Translation%20Request:%20[Please%20enter%20language%20here]&body=I%20am%20able%20to%20translate%20this%20language%20[yes/no])**

If you are reading a non-English translation of this document you will find a
number of English words that are programming concepts. If these were translated
to other languages there would be a lack of consistency and fluency when reading
about them. In many cases you will find the literal translation followed by the
English term in parenthesis `()`. For example: Abstract Syntax Trees (ASTs).

Special thanks to [@sebmck](https://github.com/sebmck/),
[@hzoo](https://github.com/hzoo),
[@jdalton](https://github.com/jdalton),
[@abraithwaite](https://github.com/abraithwaite),
[@robey](https://github.com/robey), and others for their
amazing help on this handbook.
","'babel', 'handbook'",2015-10-25T19:55:05Z,2024-02-27T06:29:25Z,51,41,11953,233,"('thejameskylebot', 112), ('jamiebuilds', 77), ('hzoo', 26), ('brigand', 6), ('aaronang', 4), ('Kent C. Dodds', 3), ('peey', 3), ('sarupbanskota', 3), ('Taitu Lizenbaum', 2), ('maurobringolf', 2), ('hugovk', 2), ('Andrew Levine', 2), ('whatwg6', 1), ('keyz', 1), ('kishorevarma', 1), ('MOTA PC', 1), ('markmiro', 1), ('MehdiRaash', 1), ('mkonikov', 1), ('mwilc0x', 1), ('mamadoo', 1), ('Nadim Tuhin', 1), ('udnisap', 1), ('STRML', 1), ('shidhincr', 1), ('MunGell', 1), ('paldepind', 1), ('tanhauhau', 1), ('Turbo87', 1), ('c0b41', 1), ('ishanray', 1), ('rektide', 1), ('0x01f7', 1), ('lin', 1), ('hootlex', 1), ('Andrii Kravets', 1), ('Andy', 1), ('arthurchipdean', 1), ('brianchung808', 1), ('bvaughn', 1), ('buunguyen', 1), ('chrisvfritz', 1), ('davegomez', 1), ('diervo', 1), ('eligolding', 1), ('EricSimons', 1), ('forresst', 1), ('jmm', 1), ('Josh Black', 1), ('Kelly Selden', 1), ('octylFractal', 1)",39,32,
bgrimstad/splinter,"Library for multivariate function approximation with splines (B-spline, P-spline, and more) with interfaces to C++, C, Python and MATLAB","[![GitHub release](https://img.shields.io/github/release/bgrimstad/splinter.svg?style=flat-square)](https://github.com/bgrimstad/splinter/releases)
[![license](https://img.shields.io/github/license/bgrimstad/splinter.svg?style=flat-square)]()

| **`Master branch`** | **`Develop branch`** |
|-----------------|---------------------|
| [![Build Status](https://travis-ci.org/bgrimstad/splinter.svg?branch=master)](https://travis-ci.org/bgrimstad/splinter) | [![Build Status](https://travis-ci.org/bgrimstad/splinter.svg?branch=develop)](https://travis-ci.org/bgrimstad/splinter) |

## SPLINTER
SPLINTER (SPLine INTERpolation) is a library for *multivariate function approximation with splines*. The library can be used for function approximation, regression, data smoothing, data reduction, and much more. Spline approximations are represented by a speedy C++ implementation of the tensor product B-spline.

The B-spline consists of piecewise polynomial basis functions, offering a high flexibility and smoothness. The B-spline can be fitted to data using ordinary least squares (OLS), possibly with regularization. The library also offers construction of penalized splines (P-splines).

![Illustration of a B-spline](assets/bspline.png)
Figure: Illustration of a bicubic B-spline generated with the SPLINTER library.

### Sharing
SPLINTER is the result of several years of development towards a fast and general library for multivariate function approximation. The initial intention with the library was to build splines for use in mathematical programming (nonlinear optimization). Thus, some effort has been put into functionality that supports this, e.g. Jacobian and Hessian computations for the B-spline.

By making SPLINTER publicly available we hope to help anyone looking for a multivariate function approximation library. In return, we expect nothing but your suggestions, improvements, and feature requests. If you use SPLINTER in a scientific work we kindly ask you to cite it. You can cite it as shown in the bibtex entry below (remember to update the date accessed).
```
@misc{SPLINTER,
  title={{SPLINTER: a library for multivariate function approximation with splines}},
  author={Bjarne Grimstad and others},
  howpublished={\url{http://github.com/bgrimstad/splinter}},
  year={2015},
  note={Accessed: 2015-05-16}
}
```
### Contributing
Everyone is welcome to use and contribute to SPLINTER. We believe that collective effort over time is the only way to create a great library: one that makes multivariate function approximation with splines more accessible to practitioners and researchers.

The current goals with the library are:

1. To make the library more accessible by improving the interfaces and documentation
2. To implement new features
3. To improve the current code via testing

The simplest way to contribute to SPLINTER is to use it and give us feedback on the experience. If you would like to contribute by coding, you can get started by picking a suitable issue from the [list of issues](https://github.com/bgrimstad/splinter/issues). The issues are labeled with the type of work (`Bug`, `Docs`, `Enhancement`, `New feature`, `Refactoring`, `Tests`) and level of difficulty (`Beginner`, `Intermediate`, `Advanced`). Some issues are also labeled as `Critical`, which means that they deserve our attention and prioritization.

### Requirements for use
A standards compliant C++11 compiler.

### Guides
* [Basic usage](docs/basic_usage.md)
* [C++ interface](docs/cpp_interface.md)
* [MatLab interface](docs/matlab_interface.md)
* [Python interface](docs/python_interface.md)
* [C interface](docs/c_interface.md)
* [Compilation](docs/compile.md)
","'b-splines', 'c-plus-plus', 'function-approximation', 'interpolation', 'p-spline', 'python', 'smoothing', 'splines'",2014-06-27T11:51:24Z,2023-02-15T09:34:14Z,10,6,409,27,"('bgrimstad', 341), ('Anders Wenhaug', 287), ('gablank', 89), ('gablank', 38), ('hxdnshx', 9), ('novacrazy', 8), ('skific', 2), ('jkhoogland', 1), ('Mark Cutler', 1), ('sdrdis', 1)",3,2,
thenextweb/cro,A/B + Multivariate Testing via Google Tag Manager,"# A/B/n Testing with Google Tag Manager
Scripts that support A/B/n + Multivariate Testing (for [The Next Web]
(http://thenextweb.com)), via [Google Tag Manager](http://tagmanager.google.com).

Features
--------
* Supports: A/B/n testing and Multivariate testing.
* Integration with Google Analytics, will send data for event to the dataLayer.
* Supported via Google Tag Manager but also easily configurable to run natively.



## Usage
Both scripts work in a similar order and require the use of Google Tag Manager
to make sure it will work. You can add a new tag there to make sure your
variants are working.

* `prefix` - a string that is going to be used to set cookies + check for tests.
* `randomNumber` - the randon number variable used in Google Tag Manager. Make
sure you enabled Random Number as a variable in GTM.
* `variants` - the code for the variants, you can add an unlimited amount of variants.

We'll check if a user is in a certain variant to make sure that the user doesn't
get any mixed up experiences. Next to that we also make sure the user is not in
any other test currently by checking for any cookies that start with: `tnw`.

### Quick start:
Include the whole script and at the top of the script change the testing variables:

	// Variables
	var prefix = 'tnw';
	var randomNumber = {{Random Number}};
	var changes = {
	    1: {
	        variants: {
	            1: {
	                execute: function () {

	                }
	            }
	        }
	    },
	    2: {
	        variants: {
	            1: {
	                execute: function () {

	                }
	            },
	            2: {
	                execute: function () {

	                }
	            }
	        }
	    }
	};

*Note:* You'll never have to add 0, which is the original, it will take care of
the original variant itself.
You can read more about [how to add a test in Google Tag Manager here](https://github.com/MartijnSch/cro/wiki/How-to-add-a-test-in-Google-Tag-Manager-(GTM)).

#### Google Analytics
To measure the variants + experiments in Google Analytics we send the data to
Google Analytics via the dataLayer. In both scripts we send the data via the
`abTest` event.
You'll have to create a custom report in Google Analytics to show you the
specific data for your variants.

Data in Google Analytics for different variants will show up like:

* `prefix-{testID}-{testVariant}` for A/B testing.
* `prefix-{testID}-{changeID}-{testVariant}` for multivariate testing (MVT).

#### Cookies
We set the cookies for the length of the test that is added in the variables at
the beginning of a test. The names and values of the cookies look like:

* Name: `prefix-{testID}`, with the value: `{testVariant}` for A/B testing.
* Name: `prefix-{testID}`, with the value: `{changeID}-{testVariant}` for
multivariate testing (MVT).

*Note:* We prepend the cookie name: `tnw` but obviously you can change this to
whatever you'd like by changing the prefix variable: `prefix`.

History
=======
#### April 27, 2016 (2016-04-27)
* Allow for running A/B/n tests.
* Change the use of the pre-fix.
* Add support for the dataLayer.
* Clean & tidy up a lot of code.

#### November 21, 2015 (2015-11-21)
* Add a preview URL.

#### September 27, 2015 (2015-09-27)
* Added a check to see if Google Analytics is initialized.

#### August 18, 2015 (2015-08-18)
* Initial commit to add more information to the README.


# Want to contribute?
Contributions are welcome! There are just a few requested guidelines:

* Please create a feature branch for your changes and squash commits.
* Don't worry about updating the version, changelog, or minified version.
* Please respect the original syntax/formatting stuff.
* If proposing a new feature, it may be a good idea to create an issue first to discuss.

Maintainer history
------------------
  * [Martijn Scheijbeler](https://github.com/martijnsch/cro) (Current)
  * [Simon Vreeman](https://github.com/simonvreeman/a-b-testing-with-google-tag-manager) (Current)
",,2015-08-18T07:54:53Z,2016-04-27T10:26:32Z,4,4,144,25,"('MartijnSch', 13), ('simonvreeman', 5), ('eblaauw', 1), ('koveshhs', 1)",2,2,
stuartjmoore/sBooks,App Store safe iBooks-esque page turn,"UPDATE: As of iOS 5 (I wrote this right before it came out), this class is useless. Use UIPageViewController instead.

A class that can turn an empty view into an iBooks like page turning view. Each page is a full UIViewController, and the curl follows your finger (rotation included).

This is a pretty simple project; the code was written for a client, so I've obviously stripped all of their data out and put in some Mark Twain. They wanted a page turning effect, but iBooks uses a private API and the other options didn't rotate or look good enough.

Add the ""book/"" directory to your project.

The ""ExampleView"" is a subclass of SMBookController and where the pages appear (any back image has to be in a separate view or the controller will delete it).

""PageView"" is an example of a page. This project only uses on page view and modifies the data for each page. You can easily add different pages nibs.

Check out the screenshots.",,2011-05-03T23:30:25Z,2012-04-16T12:48:05Z,1,1,27,3,"('stuartjmoore', 7)",0,0,
alice-mkh/Minecraft-mods,Exalm's Minecraft mods,"OldDays, NBXlite and SpawnHuman return old things that were removed.
NBXlite is fork of InsanityBringer's NoBiomesX.

SSPC is a fork of simo_415's Single Player Commands 3.2.2.
Everything in src/client/spc, bin/spc-* and bin-old/spc-* is licenced under GNU LGPLv3.

To set this up:

1.  Download MCP.

2.  Decompile client using MCP.

3.  Clone this repository to **src-mods** directory.

4.  Go to **src-mods/build** and run **deploy.sh** script. (Or **deploy.bat** if you use Windows)

5.  It is ready. You may now recompile client and start it.

To build a release, run **make.sh** script **in the MCP directory**. Not from src-mods/build!
Resulting zips will be in **reobf/result2**.

build/ln.exe source code can be found here: https://github.com/neosmart/ln-win",,2012-03-07T07:35:38Z,2014-04-27T18:59:03Z,11,4,24,5,"('alice-mkh', 1059), ('Exalm', 967), ('danix111', 24), ('Kodehawa', 13), ('15382', 4), ('ficion', 3), ('gus33000', 3), ('Ficion', 2), ('TheSnowSvK', 2), ('Exalm', 1), ('Ficion', 1)",2,0,
camunda/camunda-bpm-spring-boot-starter,Camunda BPM bootified!,"# Deprecated

This repository moved here: https://github.com/camunda/camunda-bpm-platform/tree/master/spring-boot-starter

# camunda-bpm-spring-boot-starter

[cols=""a,a,a""]
,====
// license
image::https://img.shields.io/badge/License-Apache%202.0-blue.svg[link=""./LICENSE""]
// mvn central
image::https://maven-badges.herokuapp.com/maven-central/org.camunda.bpm.springboot/camunda-bpm-spring-boot-starter/badge.svg[link=""https://maven-badges.herokuapp.com/maven-central/org.camunda.bpm.springboot/camunda-bpm-spring-boot-starter""]
// openhub
image::https://www.openhub.net/p/camunda-bpm-spring-boot-starter/widgets/project_thin_badge.gif[link=""https://www.openhub.net/p/camunda-bpm-spring-boot-starter""]
,====

This project provides Spring Boot starters that allow you to integrate the Camunda BPM Platform into your Spring Boot applications.

Please check out the https://docs.camunda.org/manual/develop/user-guide/spring-boot-integration/[Documentation],
the https://docs.camunda.org/get-started/spring-boot/[Getting Started Guide] and
the https://github.com/camunda/camunda-bpm-examples/tree/master/spring-boot-starter[Examples].

## Resources

* https://app.camunda.com/jira/browse/CAM/component/13850[Issue Tracker] - if you have an idea for a new feature or want to file a bug ... this is the place to go.
* https://github.com/camunda/camunda-bpm-spring-boot-starter/blob/master/.github/CONTRIBUTING.md[Contributing] - check this if you want to contribute
* https://forum.camunda.org/c/spring-boot-starter[Discussion Forum] - this project has it's own sub-category at the camunda forum ... use it!

### JDK 9 and onwards
Beginning with version 3.1-alpha2, Camunda Spring Boot Starter can be used in conjunction with JDK 9 / 10.
As Hibernate is part of Camunda Spring Boot Starter it requires JAXB. However, JAXB is deactivated by default 
(and marked as deprecated) in JDK 9 / 10 and removed entirely in JDK 11. Therefore, it is sensible to 
re-add JAXB to your Camunda Spring Boot Starter project.

There exist various implementations of JAXB. The following Maven coordinates represent the implementation which is 
included in the JDKs up to version 10:

```xml

  com.sun.xml.bind
  jaxb-impl

```

## Resources for versions older than 2.3.0

Before version 2.2.0, the project existed as a community extension. Therefore the resources were located in different paths. You can find all the links below.

* https://github.com/camunda/camunda-bpm-spring-boot-starter/issues[Issue Tracker] - please DON'T create new issues here.
* https://github.com/camunda/camunda-bpm-spring-boot-starter/blob/2.2.0/docs/src/main/asciidoc/index.adoc[Documentation]

### 2.x

* https://github.com/camunda/camunda-bpm-spring-boot-starter/milestone/8?closed=1[Release Notes 2.2.0]
* https://github.com/camunda/camunda-bpm-spring-boot-starter/milestone/10?closed=1[Release Notes 2.1.2]
* https://github.com/camunda/camunda-bpm-spring-boot-starter/milestone/6?closed=1[Release Notes 2.1.0]
* https://github.com/camunda/camunda-bpm-spring-boot-starter/milestone/3?closed=1[Release Notes 2.0.0]

### 1.3.0

* https://github.com/camunda/camunda-bpm-spring-boot-starter/milestone/4?closed=1[Release Notes 1.3.0]

#### Migration hints from = 1.3.0

[IMPORTANT]
We have decided to refactor the configuration mechanism. Especially, we removed the  `org.camunda.bpm.spring.boot.starter.configuration.CamundaConfiguration` interface. For now, each configuration is a `org.camunda.bpm.engine.impl.cfg.ProcessEnginePlugin`. With this it is possible to hook into `preInit`, `postInit` and `postProcessEngineBuild`, which supports more complex situations.
If you have implemented a `CamundaConfiguration`, you have to switch to `ProcessEnginePlugin` (and its `preInit` method). You can also extend your configuration from `org.camunda.bpm.spring.boot.starter.configuration.impl.AbstractCamundaConfiguration` to avoid a cast to `SpringProcessEngineConfiguration`.

### 1.2.1

* https://github.com/camunda/camunda-bpm-spring-boot-starter/milestone/5?closed=1[Release Notes 1.2.1]
* https://blog.camunda.org/post/2016/06/camunda-spring-boot-1.2.0-released/[Blog Article for release 1.2.0]

## Credits

The Camunda Spring Boot Starter project used to be the community extension, created and supported by

*  _https://github.com/osteinhauer[Oliver Steinhauer]_
*  _https://github.com/jangalinski[Jan Galinski]_
*  _https://github.com/hawky-4s-[Christian Lipphardt]_

Starting from version 2.3.0 it was adopted as part of the Camunda BPM Platform.

## License

* The source files in this repository are made available under the link:./LICENSE[Apache License, Version 2.0].
","'camunda', 'spring-boot'",2015-06-16T04:05:20Z,2022-07-28T09:55:38Z,38,28,323,55,"('jangalinski', 227), ('osteinhauer', 122), ('sdorokhova', 40), ('camunda-jenkins', 39), ('yanavasileva', 38), ('koevskinikola', 32), ('hawky-4s-', 29), ('Jenkins', 20), ('ThorbenLindhauer', 18), ('tasso94', 18), ('tmetzke', 12), ('stefanzilske', 5), ('mboskamp', 5), ('berndruecker', 3), ('scheffel', 2), ('zambrovski', 2), ('ronalders', 2), ('romansmirnov', 2), ('Nikola Koevski', 2), ('marstamm', 2), ('Malte Sörensen', 2), ('Galinski, Jan / Kuehne + Nagel / HAM GI-DB/ external', 2), ('FrJ', 2), ('ninckblokje', 1), ('mburke84', 1), ('dependabot-previewbot', 1), ('adakl', 1), ('Zapata', 1), ('tobiasschaefer', 1), ('stephanpelikan', 1), ('Ruslan Gainutdinov', 1), ('rweisleder', 1), ('FrVaBe', 1), ('falko', 1), ('g00glen00b', 1), ('christian-sahlmann', 1), ('Carsten Piepel', 1), ('arnoschutijzer', 1)",15,12,
zulip/zulip-gci-submissions,Student submissions for Zulip's GCI 2017 program,"# Zulip Google Code-In Submissions Repository

This is a repository for student submissions in Zulip's Google Code In, 
an awesome high school program where students compete by making contributions
participating open source projects. Zulip has 
[a separate repo](https://github.com/zulip/zulip-gci) for holding documentation, 
and task descriptions. This repo is where we store contributions that don't yet 
have a place in the other Zulip repositories. If you want to get started contributing, 
try making your 
[first pull request](https://github.com/zulip/zulip-gci/blob/master/tasks/2017/submit-a-pull-request.md)
to this repo.
",,2017-11-15T00:07:49Z,2021-02-07T14:34:00Z,168,135,7,15,"('Privisus', 14), ('MadElf1337', 9), ('ViRu-ThE-ViRuS', 8), ('ivche1337', 6), ('kiy4h', 6), ('Lyla-Fischer', 5), ('roberthoenig', 5), ('marco', 5), ('iksinskiyt', 4), ('Abijith10', 4), ('itstakenalr', 4), ('YoussefRizkalla', 4), ('jerrywzhang', 4), ('Hrishikesh', 4), ('jerzh', 3), ('mkcrwv', 3), ('abhayKashyap03', 3), ('Caffetaria', 3), ('XavierCooney', 3), ('vedarshshah', 3), ('tejasprak', 3), ('omsv135', 3), ('fremiller', 3), ('adityajeppu', 3), ('Alexander Chu', 3), ('Smehnov', 3), ('symt', 3), ('Ivche1337', 3), ('alenavolk', 3), ('kx-chen', 3), ('KubsHD', 3), ('alextangchao', 2), ('anikasehgal', 2), ('anshulagx', 2), ('brandonm6', 2), ('priyank-p', 2), ('cfalas', 2), ('chmuhammadsohaib', 2), ('glazec', 2), ('ddxtanx', 2), ('dhs-biyu', 2), ('dritesh644', 2), ('seniormeow', 2), ('manmita', 2), ('ad591964', 2), ('abhikuchibhotla', 2), ('abhijeetc66', 2), ('a1coderv', 2), ('VishalVSV', 2), ('vatsalsharma376', 2), ('tjatkowski', 2), ('Toby Latino', 2), ('timabbott', 2), ('Tajniak96', 2), ('Szymon Miś', 2), ('SivagiriVisakan', 2), ('ShrinandhanPrabu', 2), ('gracepfohl', 2), ('きゃろっと', 2), ('yvsja', 2), ('yashii', 2), ('ultrakross', 2), ('Benjamin-Mueggenburg', 2), ('tch1001', 2), ('spellew', 2), ('somyaraj', 2), ('singhharnoor', 2), ('shreyasvinaya', 2), ('shavolkov', 2), ('sahranhashim', 2), ('sColin16', 2), ('russianPotato', 2), ('ravinhwg', 2), ('nyan-salmon', 2), ('nicogramm', 2), ('mayank2592', 2), ('luke-yuan', 2), ('lokshiv', 2), ('ryoarmanda', 2), ('imangla', 2), ('hy0609', 2), ('hrishi3108', 2), ('hk1510', 2), ('harshrajB', 2), ('gcihelloworld', 2), ('gabries20', 2), ('fedor1113', 2), ('dwijthaker', 2), ('GCREDI57@oprfad.oprfhs.org', 2), ('FineDiamond', 2), ('femilamptey', 2), ('zanilli', 2), ('EdenYigzaw', 2), ('barreeeiroo', 2), ('DanielHDeng', 2), ('swalsh15', 2), ('synicalsyntax', 2), ('Courteously', 2), ('Colin Siles', 2), ('Circador', 2), ('Squishy123', 2), ('Chris', 2), ('cxy1117', 2), ('chahatbansal', 2), ('dhs17y1cwongweijiebrion', 2), ('Brandon Cravener', 2), ('tarolling', 2), ('AshwinS27', 2), ('Aoldri', 2), ('Nako68l', 2), ('AmyKeigwin', 2), ('Aliii-F', 2), ('alexeiASC4', 2), ('Abinavraj5427', 2), ('abhijeetkaur', 2), ('elskhn', 2), ('Abderian1', 2), ('Shizerq', 2), ('sharanyapogaku', 2), ('Sharan SP', 2), ('ShameekDutta', 2), ('Schwaatz', 2), ('sarveshpro', 2), ('Sarang S', 2), ('Samyak2', 2), ('Ron Michael', 2), ('aero31aero', 2), ('Renderhaf', 2), ('Prakhar2826', 2), ('mbyzhang', 2), ('NoahCristino', 2), ('Nilay2000', 2), ('Guneetconvent2002', 2), ('Hoàng Hải', 2), ('iChanger', 2), ('ishankc', 2), ('Jaswinder Dhah', 2), ('Jeremy Stanton', 2), ('joie188', 2), ('hellcoder2002', 2), ('krpar', 2), ('LarsZauberer', 2), ('Li Ruiqi', 2), ('LiTO773', 2), ('MRayyanSait', 2), ('Madhuri', 2), ('senryokusha', 2), ('wikananda', 1), ('Tejas-P-Herle', 1), ('abhinav-surendra', 1), ('AbhinavSurendra', 1), ('andymina', 1), ('chrishowes55', 1), ('nicku1', 1), ('rxnnae', 1), ('sakshic5', 1), ('sasha', 1), ('jajodiaraghav', 1), ('HydraulicSheep', 1), ('lonerz', 1), ('Jandy324', 1), ('Hrishikesh Patil', 1), ('Gronekmaster', 1), ('egartley', 1), ('Clemens Dautermann', 1), ('Balaji2198', 1), ('Andy Mina', 1), ('AjgorXD', 1)",21,15,
MattHall/bort,Base Rails app with email login instead of username. Bort: Programmed to feel pain.,"!http://clients.fudgestudios.com/chester.jpg!

h1. Bort

Bort is a base Rails 2.1 application that makes creating new projects easier and faster. Bort is developed and maintained by ""Fudge Studios"":http://www.fudgestudios.com, ""Jim Neath"":http://jimneath.org and ""Matt Hall"":http://matthall.wordpress.com

*This fork changes the normal authentication behaviour to use email addresses instead of usernames.*

If you have any suggestions for improvements then feel free to leave a request on ""User Voice"":http://bort.uservoice.com

h2. Install

* Download and unzip Bort
* Edit the database.yml and the settings.yml files
* Changed the default password in the bort migration
* Edit the REST_AUTH_SITE_KEY in each of the environment files
* Rake db:migrate
* Have a brew and celebrate

h2. Plugins Installed

Bort comes with a few commonly used plugins installed and already setup.

h3. RESTful Authentication

RESTful Authentication is already setup. The routes are setup, along with the mailers and observers.
Forgotten password comes setup, so you don't have to mess around setting it up with every project.

The AASM plugin comes pre-installed. RESTful Authentication is also setup to use user activation.

h3. User Roles

Bort now comes with ""Role Requirement"":http://code.google.com/p/rolerequirement/ by Tim Harper. A default 
admin role is predefined along with a default admin user. See the migrations for the admin login details.

h3. Open ID Authentication

Bort, as of 0.3, has Open ID integrated with RESTful Authentication. Rejoice!

h3. Will Paginate

We use will_paginate in pretty much every project we use, so Bort comes with it pre-installed.

h3. Rspec & Rspec-rails

You should be testing your code, so Bort comes with Rspec and Rspec-rails already installed so you're
ready to roll.

h3. Exception Notifier

You don't want your applications to crash and burn so Exception Notifier is already installed to let 
you know when everything goes to shit.

h3. Asset Packager

Packages up your css/javascript so you're not sending 143 files down to the user at the same time. Reduces
load times and saves you bandwidth.

h2. Routes

The routes for RESful Auth and the forgot password stuff are already sorted for you.

h2. Settings YAML

There is a settings.yml file that contains site-wide stuff. The site name, url and admin email are all used
in the RESTful Auth mailers, so you don't need to worry about editing them.

h2. Database YAML

The database.yml defaults to sqlite3 but also contains the settings for MySQL in comments so you can switch
over easily.

h2. Capistrano Recipe

Bort comes ready to rock capistrano. The recipe that is setup is based on using git and passenger. It's ready
to go with multistage deployments. It deploys to the production config by default, so if you don't need it
you can ignore it. Just update config/deploy/production.rb with your deployment settings.

More info on capistrano-ext/multistage deployments can be found here: http://weblog.jamisbuck.org/2007/7/23/capistrano-multistage

h2. Uses the Database for Sessions

Bort is setup to use the database to store sessions by default. 

h2. Misc 

* password and password_confirmation are set up to be filtered
* there is a default application layout file
* a page title helper has been added
* index.html is already deleted
* rails.png is already deleted
* a few changes have been made to the default views
* a default css file with blank selectors for common rails elements

h2. Credits

Bort put together by people at ""Fudge"":http://www.fudgestudios.com/ ",,2008-08-25T09:15:32Z,2008-11-12T09:36:13Z,7,2,84,2,"('Jim Neath', 70), ('MattHall', 19), ('Phil Jeffs', 4), ('philjeffs', 3), ('unknown', 2), ('Daniel Haran', 1), ('JimNeath', 1)",2,0,
ivaldi/brimir,Email helpdesk built using Ruby on Rails and Zurb Foundation,"**Brimir is no longer used and maintained by Ivaldi, so this repository is switched to archived mode on Github.**

Brimir [![Build Status](https://travis-ci.org/ivaldi/brimir.png)](https://travis-ci.org/ivaldi/brimir) [![Coverage Status](https://coveralls.io/repos/ivaldi/brimir/badge.png)](https://coveralls.io/r/ivaldi/brimir)
======
[Brimir](http://getbrimir.com/) is a simple helpdesk system that can be used to handle support requests
via incoming email. Brimir is currently used in production at [Ivaldi](http://ivaldi.nl/).

Installation
------------
Brimir is a rather simple Ruby on Rails application. The only difficulty in setting things up is how to get incoming email to work. See the next section for details.

Any Rails application needs a web server with Ruby support first. We use Phusion Passenger (`mod_rails`) ourselves, but you can also use Thin, Puma or Unicorn. Phusion Passenger can be installed for Nginx or Apache, you can chose wichever you like best. The installation differs depending on your distribution, so have a look at their [Nginx installation manual](https://www.phusionpassenger.com/documentation/Users%20guide%20Nginx.html) or their [Apache installation manual](https://www.phusionpassenger.com/documentation/Users%20guide%20Apache.html).

After setting up a webserver, you have to create a database for Brimir and modify the config file in `config/database.yml` to reflect the details. Set your details under the production section. We advise to use `adapter: postgresql` or `adapter: mysql2` for production usage, because those are the only two adapters and database servers we test. *If you plan to use MySQL, make sure you use utf8 as your charset and collation.*

Your server will need a JavaScript runtime supported by [execjs](https://github.com/rails/execjs). We recommend [Node.js](https://nodejs.org/). The Node.js packages shipped by your distribution should be sufficient for this application.  Install via `apt-get install nodejs` on Debian/Ubuntu or `yum install nodejs` on RHEL/CentOS.

Next up: configuring your outgoing email address and url. This can be set in `config/environments/production.rb` by adding the following lines *before* the keyword `end`:

    config.action_mailer.default_options = { from: 'brimir@yoururl.com' }

    config.action_mailer.default_url_options = { host: 'brimir.yoururl.com' }

Now install the required gems by running the following command if you want **PostgreSQL support**:

    bundle install --without sqlite mysql development test --deployment

Run the following command to install gems if you want **MySQL support**:

    bundle install --without sqlite postgresql development test --deployment

Generate a secret\_key\_base in the secrets.yml file:

    LINUX: sed -i ""s//`bin/rake secret`/g"" config/secrets.yml
    MAC: sed -i """" ""s//`bin/rake secret`/g"" config/secrets.yml

Next, load the database schema and precompile assets:

    bin/rake db:schema:load RAILS_ENV=production
    bin/rake assets:precompile RAILS_ENV=production

If you want to use LDAP, configure config/ldap.yml accordingly, then change the auth strategy in your application config in file config/application.rb:

    config.devise_authentication_strategy = :ldap_authenticatable

(Optional for LDAP) Last thing left to do before logging in is making a user and adding some statuses. You can do this by running:

    bin/rails console production
    u = User.new({ email: 'your@email.address', password: 'somepassword' }); u.agent = true; u.save!

Configuring Captcha's
---------------------
If you want to use recaptcha in production you have to go to
https://www.google.com/recaptcha, create your private and public keys and export these to your production environment, by running:

    export RECAPTCHA_SITE_KEY=""[YOUR_KEY]""
    export RECAPTCHA_SECRET_KEY=""[YOUR_KEY]""

Remove the recaptcha lines from config/secrets.yml if you don't want to use captcha's all together.

Updating
--------
First download the new code in the same directory by unpacking a release tarball or by running `git pull` (when you cloned the repo earlier). After updating code run the following commands to install necessary gem updates, migrate the database and regenerate precompiled assets.

    bundle install
    bin/rake db:migrate RAILS_ENV=production
    bin/rake assets:precompile RAILS_ENV=production

Don't forget to restart your application server (`touch tmp/restart.txt` for Passenger).

Customization
-------------
Some applicant level configuration can be set through `config/settings.yml`

Brimir is available in several languages. By default, it will use the locale corresponding to the user browser agent, if it was among the supported locales. If you want to change this and force certain locale, you can do that by setting:   `ignore_user_agent_locale: true`  in  `config/settings.yml`

Incoming email
--------------

Brimir features several hooks to receive incoming mail. These hook URLs are protected by a mail_key which can be retrieved with:

    rake secret:mail_key

Make sure you replace `{MAIL_KEY}` in the examples below with the output from the above command.

:warning: The mail_key is derived from the secret\_key\_base. Whenever you modify the latter in the secrets.yml file, you have to update the hook URLs as well!

### MTA Alias

Incoming emails can be posted to Brimir by use of `scripts/post-mail`. Create an alias in the `aliases` file of your MTA as follows:

    brimir: ""|/bin/sh /path/to/your/brimir/repo/script/post-mail http://yoururl.com/post-mail/{MAIL_KEY}/tickets.json""

Now sending an email to brimir@yoururl.com should execute curl and post the email to your Brimir installation.

### Mailgun

On Mailgun, add the IP of the server running Brimir to the [IP whitelist](https://app.mailgun.com/app/account/security). Then copy your [private API key](https://app.mailgun.com/app/account/security) and either paste it after ""mailgun_private_api_key:"" in `config/secrets.yml` or set the `MAILGUN_PRIVATE_API_KEY` environment variable accordingly. Finally, [create a route](https://app.mailgun.com/app/routes) with action ""store and notify"" and assign the following URL to this action:

    http://yoururl.com/mailgun/{MAIL_KEY}/tickets.json

Since you are receiving mails via Mailgun now, you might want to use the same provider to send mails as well. This can be set in `config/environments/production.rb` by adding the following lines *before* the keyword `end`:

    config.action_mailer.delivery_method = :smtp
    config.action_mailer.smtp_settings = {
      port: 587,
      address: 'smtp.mailgun.org',
      user_name: 'postmaster@yoururl.com',
      password: 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-xxxxxxxx-xxxxxxxx'
    }

The above `address`, `user_name` and `password` are examples, you find the real ones on the Mailgun [domain details page](https://app.mailgun.com/app/domains). Also, for this to work you have to be at least on the [""Concept"" billing plan](https://app.mailgun.com/app/account/settings).

Contributing
------------
We appreciate all contributions! If you would like to contribute, please follow these steps:
- Fork the repo.
- Create a branch with a name that describes the change.
- Make your changes in the branch.
- Submit a pull-request to merge your feature-branch in our master branch.

Localization
------------
English (en) is the primary and default locale which should always be up-to-date and contain all translation keys currently in use. To keep the other locale files up to date, use the `locales:completeness` task to diff the translation keys of all available locales against English. Here's a commented example:

```
$ rake locales:completeness
Diffing against default locale files (en.yml).

WARNING: `it.yml' does not exist    <-- available locale :it has no YAML file

--- config/locales/en.yml
+++ config/locales/de.yml
  - close                           <-- translation for :de missing
  - wait
  + prefer_plain_text               <-- superfluous translation in :de or key
  + created_at                          removed from :en by mistake
```

More translations are welcome! To work on a new language, say Esperanto (eo), simply copy English as a template and start working on it:

    cp config/locales/en.yml config/locales/eo.yml

Once finished and quality checked, make sure you add the new locale to `config.i18n.available_locales` in `config/application.rb`. To disable a no longer maintained locale, simply remove it from `config.i18n.available_locales`, but leave the locale file checked in for future reference.

Requested features
------------------
Some users have made requests for the following features. If you would like to contribute, you could add any of these.
- Allowing customers to update ticket status, with correct email notifications.
- Switchable property to support threads by using special tags in the subject line instead of relying on mail headers.
- Support for hosted incoming mail services (Sendgrid, Mandrill), possibly using griddler gem.
- Ability to sign in using a Single Sign On functionality based on Shared Token or JWT.
- Private note addition to tickets.
- Automated replies based on the current rule system.
- Adding knowledge base functionality.
- Set labels on the create ticket form.
- Assign tickets to groups of users
- When replying, select a response from pre-defined canned responses and modify to your needs
- TicketsController#create should limit access to IP and be user/pass protected
- Integration with OpsWeekly
- Social media integration such as FreshDesk and Zoho have (reply to requests via social media)
- Ticket creation api (and improving existing api)
- Ticket search that also searches in from field and replies.
- Mark tickets as duplicate, linking it to the duplicated ticket.
- Ability to rename tickets (change their subject).
- Improve rule form to allow only valid statuses (#150).
- Timed rules, such as re-assigning when no reply is added withing 24 hours (#203).
- Desktop notifications using web notifications (#218).
- Custom ticket statuses, all via database. (#217)
- IMAP or POP3 pull mechanism for new tickets. (#249)
- Notes field for customer account, to add info about them, such as website url.

License
-------
Brimir is licensed under the GNU Affero General Public License Version 3.
","'e-mail', 'helpdesk', 'rails', 'ruby', 'ticket'",2012-11-23T12:31:36Z,2018-12-22T15:01:41Z,64,46,1386,74,"('Frank Groeneveld', 723), ('frenkel', 134), ('Sem Goedknegt', 89), ('basschoen', 84), ('fiedl', 57), ('git-jls', 49), ('Sven Schwyn', 25), ('modsaid', 18), ('lostapathy', 17), ('Frank Groeneveld', 15), ('Houke de Kwant', 14), ('alisnic', 13), ('jamgregory', 11), ('mickael-kerjean', 11), ('bsylvain', 9), ('mantoine96', 8), ('marbball', 7), ('FloHin', 7), ('vrish88', 5), ('dependabot-support', 5), ('fkonigy', 4), ('fshahy', 4), ('hadifarnoud', 4), ('Caio Tarifa', 3), ('Janne Mäntyharju', 3), ('sapslaj', 3), ('kidush', 2), ('nshopik', 2), ('mpakus', 2), ('Michel Fiege', 2), ('stricte', 2), ('viddypiddy', 2), ('crf444', 2), ('laCour', 2), ('straight-shoota', 2), ('davidelbe', 2), ('stormsw', 2), ('Houke', 1), ('igmarin', 1), ('boutcher', 1), ('maxhungry', 1), ('m1es', 1), ('mortzu', 1), ('neilor', 1), ('ppiontek', 1), ('Ryan Bibby', 1), ('vikassy', 1), ('andryyy', 1), ('yongqianme', 1), ('git-jls', 1), ('sjors sparreboom', 1), ('e1th0r', 1), ('Guilherme Trein', 1), ('Grafton Daniels', 1), ('Frank', 1), ('dadoce', 1), ('cschlack', 1), ('Chris Hunt', 1), ('caiotarifa', 1), ('Britaliope', 1), ('abrophy', 1), ('sapk', 1), ('Alvin', 1), ('Keni', 1)",27,18,
JoeyChiou/B20150325,20150325,"# B20150325
20150325
",,2015-03-25T00:55:52Z,2015-03-25T01:44:57Z,1,1,0,2,"('JoeyChiou', 1)",1,1,
prusswan/hw2_rottenpotatoes,RottenPotatoes version for starting HW 2 part (b),"== Welcome to Rails

Rails is a web-application framework that includes everything needed to create
database-backed web applications according to the Model-View-Control pattern.

This pattern splits the view (also called the presentation) into ""dumb""
templates that are primarily responsible for inserting pre-built data in between
HTML tags. The model contains the ""smart"" domain objects (such as Account,
Product, Person, Post) that holds all the business logic and knows how to
persist themselves to a database. The controller handles the incoming requests
(such as Save New Account, Update Product, Show Post) by manipulating the model
and directing data to the view.

In Rails, the model is handled by what's called an object-relational mapping
layer entitled Active Record. This layer allows you to present the data from
database rows as objects and embellish these data objects with business logic
methods. You can read more about Active Record in
link:files/vendor/rails/activerecord/README.html.

The controller and view are handled by the Action Pack, which handles both
layers by its two parts: Action View and Action Controller. These two layers
are bundled in a single package due to their heavy interdependence. This is
unlike the relationship between the Active Record and Action Pack that is much
more separate. Each of these packages can be used independently outside of
Rails. You can read more about Action Pack in
link:files/vendor/rails/actionpack/README.html.


== Getting Started

1. At the command prompt, create a new Rails application:
       rails new myapp (where myapp is the application name)

2. Change directory to myapp and start the web server:
       cd myapp; rails server (run with --help for options)

3. Go to http://localhost:3000/ and you'll see:
       ""Welcome aboard: You're riding Ruby on Rails!""

4. Follow the guidelines to start developing your application. You can find
the following resources handy:

* The Getting Started Guide: http://guides.rubyonrails.org/getting_started.html
* Ruby on Rails Tutorial Book: http://www.railstutorial.org/


== Debugging Rails

Sometimes your application goes wrong. Fortunately there are a lot of tools that
will help you debug it and get it back on the rails.

First area to check is the application log files. Have ""tail -f"" commands
running on the server.log and development.log. Rails will automatically display
debugging and runtime information to these files. Debugging info will also be
shown in the browser on requests from 127.0.0.1.

You can also log your own messages directly into the log file from your code
using the Ruby logger class from inside your controllers. Example:

  class WeblogController < ActionController::Base
    def destroy
      @weblog = Weblog.find(params[:id])
      @weblog.destroy
      logger.info(""#{Time.now} Destroyed Weblog ID ##{@weblog.id}!"")
    end
  end

The result will be a message in your log file along the lines of:

  Mon Oct 08 14:22:29 +1000 2007 Destroyed Weblog ID #1!

More information on how to use the logger is at http://www.ruby-doc.org/core/

Also, Ruby documentation can be found at http://www.ruby-lang.org/. There are
several books available online as well:

* Programming Ruby: http://www.ruby-doc.org/docs/ProgrammingRuby/ (Pickaxe)
* Learn to Program: http://pine.fm/LearnToProgram/ (a beginners guide)

These two books will bring you up to speed on the Ruby language and also on
programming in general.


== Debugger

Debugger support is available through the debugger command when you start your
Mongrel or WEBrick server with --debugger. This means that you can break out of
execution at any point in the code, investigate and change the model, and then,
resume execution! You need to install ruby-debug to run the server in debugging
mode. With gems, use sudo gem install ruby-debug. Example:

  class WeblogController < ActionController::Base
    def index
      @posts = Post.all
      debugger
    end
  end

So the controller will accept the action, run the first line, then present you
with a IRB prompt in the server window. Here you can do things like:

  >> @posts.inspect
  => ""[#<Post:0x14a6be8
          @attributes={""title""=>nil, ""body""=>nil, ""id""=>""1""}>,
       #<Post:0x14a6620
          @attributes={""title""=>""Rails"", ""body""=>""Only ten.."", ""id""=>""2""}>]""
  >> @posts.first.title = ""hello from a debugger""
  => ""hello from a debugger""

...and even better, you can examine how your runtime objects actually work:

  >> f = @posts.first
  => #nil, ""body""=>nil, ""id""=>""1""}>
  >> f.
  Display all 152 possibilities? (y or n)

Finally, when you're ready to resume execution, you can enter ""cont"".


== Console

The console is a Ruby shell, which allows you to interact with your
application's domain model. Here you'll have all parts of the application
configured, just like it is when the application is running. You can inspect
domain models, change values, and save to the database. Starting the script
without arguments will launch it in the development environment.

To start the console, run rails console from the application
directory.

Options:

* Passing the -s, --sandbox argument will rollback any modifications
  made to the database.
* Passing an environment name as an argument will load the corresponding
  environment. Example: rails console production.

To reload your controllers and models after launching the console run
reload!

More information about irb can be found at:
link:http://www.rubycentral.org/pickaxe/irb.html


== dbconsole

You can go to the command line of your database directly through rails
dbconsole. You would be connected to the database with the credentials
defined in database.yml. Starting the script without arguments will connect you
to the development database. Passing an argument will connect you to a different
database, like rails dbconsole production. Currently works for MySQL,
PostgreSQL and SQLite 3.

== Description of Contents

The default directory structure of a generated Ruby on Rails application:

  |-- app
  |   |-- assets
  |       |-- images
  |       |-- javascripts
  |       `-- stylesheets
  |   |-- controllers
  |   |-- helpers
  |   |-- mailers
  |   |-- models
  |   `-- views
  |       `-- layouts
  |-- config
  |   |-- environments
  |   |-- initializers
  |   `-- locales
  |-- db
  |-- doc
  |-- lib
  |   `-- tasks
  |-- log
  |-- public
  |-- script
  |-- test
  |   |-- fixtures
  |   |-- functional
  |   |-- integration
  |   |-- performance
  |   `-- unit
  |-- tmp
  |   |-- cache
  |   |-- pids
  |   |-- sessions
  |   `-- sockets
  `-- vendor
      |-- assets
          `-- stylesheets
      `-- plugins

app
  Holds all the code that's specific to this particular application.

app/assets
  Contains subdirectories for images, stylesheets, and JavaScript files.

app/controllers
  Holds controllers that should be named like weblogs_controller.rb for
  automated URL mapping. All controllers should descend from
  ApplicationController which itself descends from ActionController::Base.

app/models
  Holds models that should be named like post.rb. Models descend from
  ActiveRecord::Base by default.

app/views
  Holds the template files for the view that should be named like
  weblogs/index.html.erb for the WeblogsController#index action. All views use
  eRuby syntax by default.

app/views/layouts
  Holds the template files for layouts to be used with views. This models the
  common header/footer method of wrapping views. In your views, define a layout
  using the layout :default and create a file named default.html.erb.
  Inside default.html.erb, call  to render the view using this
  layout.

app/helpers
  Holds view helpers that should be named like weblogs_helper.rb. These are
  generated for you automatically when using generators for controllers.
  Helpers can be used to wrap functionality for your views into methods.

config
  Configuration files for the Rails environment, the routing map, the database,
  and other dependencies.

db
  Contains the database schema in schema.rb. db/migrate contains all the
  sequence of Migrations for your schema.

doc
  This directory is where your application documentation will be stored when
  generated using rake doc:app

lib
  Application specific libraries. Basically, any kind of custom code that
  doesn't belong under controllers, models, or helpers. This directory is in
  the load path.

public
  The directory available for the web server. Also contains the dispatchers and the
  default HTML files. This should be set as the DOCUMENT_ROOT of your web
  server.

script
  Helper scripts for automation and generation.

test
  Unit and functional tests along with fixtures. When using the rails generate
  command, template test files will be generated for you and placed in this
  directory.

vendor
  External libraries that the application depends on. Also includes the plugins
  subdirectory. If the app has frozen rails, those gems also go here, under
  vendor/rails/. This directory is in the load path.
",,2012-03-05T06:22:51Z,2012-03-11T12:37:11Z,4,3,7,2,"('armandofox', 44), ('prusswan', 10), ('Richard Xia', 2), ('samwhitlock', 2)",0,0,
Zyeus/OpenB,backup for bili backend,"### Kratos

##### 项目规范
1,每个目录 需要有独立的README.md  CHANGELOG.md CONTRIBUTORS.md，具体可以参考：
http://git.bilibili.co/platform/go-common/tree/master/business/service/archive

2,以后每个业务或者基础组件维护自己的版本号，在CHANGELOG.md中，rider 构建以后的tag关联成自己的版本号；

3,整个大仓库不再有tag，只有master 主干分支，所有mr发送前，一定要注意先merge master；

4,使用Rider构建以后（retag），回滚可以基于Rider的retag来回滚，而不是回滚大仓库的代码；

5,提供RPC内部服务放置在business/service中，任务队列放置在business/job中，对外网关服务放置在business/interface，管理后台服务放置在business/admin

6,每个业务自建cmd文件夹,将main.go文件和test配置文件迁移进去

7,构建的时候自定义脚本选择krotos_buil.sh,自定义参数选择自己所在业务的路径 （ps：例如 interface/web-show）

8,大仓库的mr合并方式为，在mr中留言""+merge""，鉴权依据服务根目录下 CONTRIBUTORS.md 文件解析，具体可以参考：
http://info.bilibili.co/pages/viewpage.action?pageId=7539410

## 负责人信息

展开查看
.
├── Owner: maojian,haoguanwei
├── app
│   ├── Owner: maojian,haoguanwei,linmiao
│   ├── admin
│   │   ├── ep
│   │   │   ├── merlin
│   │   │   │   └── Owner: maojian,yuanmin,fengyifeng,xuneng
│   │   │   └── saga
│   │   │       └── Owner: tangyongqiang
│   │   ├── main
│   │   │   ├── activity
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei
│   │   │   ├── answer
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── apm
│   │   │   │   └── Owner: haoguanwei,lintanghui
│   │   │   ├── app
│   │   │   │   └── Owner: haoguanwei,peiyifei
│   │   │   ├── appstatic
│   │   │   │   └── Owner: liweijia,renwei
│   │   │   ├── bfs-apm
│   │   │   │   └── Owner: wangweizhen
│   │   │   ├── block
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── cache
│   │   │   │   └── Owner: lintanghui
│   │   │   ├── config
│   │   │   │   └── Owner: haoguanwei,lintanghui
│   │   │   ├── coupon
│   │   │   │   └── Owner: yubaihai,zhaogangtao
│   │   │   ├── creative
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── credit
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── dm
│   │   │   │   └── Owner: liangkai,renwei
│   │   │   ├── esports
│   │   │   │   └── Owner: liweijia,renwei
│   │   │   ├── filter
│   │   │   │   └── Owner: zhaogangtao,muyang
│   │   │   ├── growup
│   │   │   │   └── Owner: gaopeng
│   │   │   ├── laser
│   │   │   │   └── Owner: haoguanwei,shencen,wangzhe01
│   │   │   ├── manager
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei
│   │   │   ├── member
│   │   │   │   └── Owner: linmiao,haoguanwei,zhoujiahui,zhoujixiang,chenjianrong
│   │   │   ├── point
│   │   │   │   └── Owner: yubaihai,zhaogangtao
│   │   │   ├── push
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei
│   │   │   ├── relation
│   │   │   │   └── Owner: linmiao,zhoujiahui
│   │   │   ├── reply
│   │   │   │   └── Owner: chenzhihui,lujinhui
│   │   │   ├── search
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei,guanhuaxin
│   │   │   ├── sms
│   │   │   │   └── Owner: renwei,zhapuyu
│   │   │   ├── spy
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── tag
│   │   │   │   └── Owner: renwei,renyashun
│   │   │   ├── tv
│   │   │   │   └── Owner: liweijia,renwei
│   │   │   ├── up
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── upload
│   │   │   │   └── Owner: haoguanwei,zhapuyu
│   │   │   ├── usersuit
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── videoup
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── videoup-task
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── vip
│   │   │   │   └── Owner: zhaogangtao
│   │   │   └── workflow
│   │   │       └── Owner: haoguanwei,zhapuyu,zhuangzhewei,zhoushuguang
│   │   └── openplatform
│   │       └── sug
│   │           └── Owner: changxuanran,xucheng
│   ├── common
│   │   └── openplatform
│   │       └── Owner: liuzhan,huangshancheng
│   ├── interface
│   │   ├── live
│   │   │   ├── Owner: liuzhen
│   │   │   └── push-live
│   │   │       └── Owner: kuangxibin
│   │   └── main
│   │       ├── account
│   │       │   └── Owner: wanghuan01,zhoujiahui,zhaogangtao,chenjianrong,zhoujixiang
│   │       ├── activity
│   │       │   └── Owner: liweijia
│   │       ├── answer
│   │       │   └── Owner: zhaogangtao
│   │       ├── app-channel
│   │       │   └── Owner: peiyifei
│   │       ├── app-feed
│   │       │   └── Owner: peiyifei
│   │       ├── app-interface
│   │       │   └── Owner: peiyifei
│   │       ├── app-player
│   │       │   └── Owner: peiyifei
│   │       ├── app-resource
│   │       │   └── Owner: peiyifei
│   │       ├── app-show
│   │       │   └── Owner: peiyifei
│   │       ├── app-tag
│   │       │   └── Owner: peiyifei
│   │       ├── app-view
│   │       │   └── Owner: peiyifei
│   │       ├── app-wall
│   │       │   └── Owner: peiyifei
│   │       ├── article
│   │       │   └── Owner: changxuanran,lijiadong,qiuliang
│   │       ├── broadcast
│   │       │   └── Owner: chenzhihui,caoguoliang,guhao
│   │       ├── captcha
│   │       │   └── Owner: chenzhihui
│   │       ├── creative
│   │       │   └── Owner: shencen,wangzhe01
│   │       ├── credit
│   │       │   └── Owner: zhaogangtao
│   │       ├── dm
│   │       │   └── Owner: liangkai,renwei
│   │       ├── dm2
│   │       │   └── Owner: liangkai,renwei
│   │       ├── esports
│   │       │   └── Owner: liweijia,zhapuyu
│   │       ├── favorite
│   │       │   └── Owner: chenzhihui,lujinhui
│   │       ├── feedback
│   │       │   └── Owner: peiyifei
│   │       ├── growup
│   │       │   └── Owner: gaopeng
│   │       ├── history
│   │       │   └── Owner: renwei,wangxu01
│   │       ├── kvo
│   │       │   └── Owner: liweijia,zhapuyu
│   │       ├── laser
│   │       │   └── Owner: haoguanwei,shencen
│   │       ├── player
│   │       │   └── Owner: liweijia,zhapuyu
│   │       ├── playlist
│   │       │   └── Owner: liweijia
│   │       ├── push
│   │       │   └── Owner: renwei,zhapuyu
│   │       ├── push-archive
│   │       │   └── Owner: zhapuyu,shencen,renwei,liweijia,wangzhe01
│   │       ├── reply
│   │       │   └── Owner: lujinhui,chenzhihui,caoguoliang
│   │       ├── report-click
│   │       │   └── Owner: zhangshengchao,chenzhihui,renyashun
│   │       ├── shorturl
│   │       │   └── Owner: peiyifei,zhapuyu
│   │       ├── space
│   │       │   └── Owner: liweijia,zhapuyu
│   │       ├── spread
│   │       │   └── Owner: zhapuyu,renwei
│   │       ├── tag
│   │       │   └── Owner: renwei,renyashun
│   │       ├── tv
│   │       │   └── Owner: renwei,liweijia
│   │       ├── upload
│   │       │   └── Owner: peiyifei,zhapuyu
│   │       ├── videoup
│   │       │   └── Owner: shencen,wangzhe01
│   │       ├── web
│   │       │   └── Owner: liweijia,zhapuyu
│   │       ├── web-feed
│   │       │   └── Owner: zhapuyu,liweijia,renwei
│   │       ├── web-goblin
│   │       │   └── Owner: liweijia,renwei
│   │       └── web-show
│   │           └── Owner: liweijia
│   ├── job
│   │   ├── live
│   │   │   ├── Owner: liuzhen
│   │   │   └── wallet
│   │   │       └── Owner: lixiang,zhouzhichao
│   │   ├── main
│   │   │   ├── account-notify
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── account-summary
│   │   │   │   └── Owner: zhoujiahui
│   │   │   ├── activity
│   │   │   │   └── Owner: liweijia
│   │   │   ├── answer
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── app
│   │   │   │   └── Owner: peiyifei
│   │   │   ├── app-wall
│   │   │   │   └── Owner: peiyifei,renwei,haoguanwei
│   │   │   ├── archive
│   │   │   │   └── Owner: peiyifei
│   │   │   ├── archive-kisjd
│   │   │   │   └── Owner: peiyifei
│   │   │   ├── article
│   │   │   │   └── Owner: qiuliang,changxuanran,lijiadong
│   │   │   ├── block
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── broadcast
│   │   │   │   └── Owner: chenzhihui,caoguoliang,guhao
│   │   │   ├── click
│   │   │   │   └── Owner: peiyifei
│   │   │   ├── coin
│   │   │   │   └── Owner: lintanghui,linmiao,zhapuyu
│   │   │   ├── coupon
│   │   │   │   └── Owner: zhaogangtao,yubaihai
│   │   │   ├── creative
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── credit
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── credit-timer
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── dm
│   │   │   │   └── Owner: liangkai,renwei
│   │   │   ├── dm2
│   │   │   │   └── Owner: liangkai,renwei
│   │   │   ├── favorite
│   │   │   │   └── Owner: lujinhui,chenzhihui
│   │   │   ├── feed
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei
│   │   │   ├── figure
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── figure-timer
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── growup
│   │   │   │   └── Owner: gaopeng
│   │   │   ├── history
│   │   │   │   └── Owner: renwei,wangxu01
│   │   │   ├── identify
│   │   │   │   └── Owner: linmiao,wanghuan01
│   │   │   ├── member
│   │   │   │   └── Owner: chenjianrong,zhoujiahui,linmiao,zhoujixiang
│   │   │   ├── passport
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── passport-auth
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── passport-encrypt
│   │   │   │   └── Owner: linmiao
│   │   │   ├── passport-game-cloud
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── passport-game-data
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── passport-game-local
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── playlist
│   │   │   │   └── Owner: liweijia
│   │   │   ├── point
│   │   │   │   └── Owner: yubaihai,zhaogangtao
│   │   │   ├── push
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei
│   │   │   ├── relation
│   │   │   │   └── Owner: linmiao,zhoujiahui
│   │   │   ├── reply
│   │   │   │   └── Owner: chenzhihui,lujinhui,caoguoliang
│   │   │   ├── search
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei,guanhuaxin
│   │   │   ├── sms
│   │   │   │   └── Owner: renwei,zhapuyu
│   │   │   ├── spy
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── stat
│   │   │   │   └── Owner: peiyifei
│   │   │   ├── tag
│   │   │   │   └── Owner: renwei,renyashun
│   │   │   ├── tv
│   │   │   │   └── Owner: renwei,liweijia
│   │   │   ├── upload
│   │   │   │   └── Owner: zhapuyu,renwei,zhuangzhewei
│   │   │   ├── usersuit
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── videoup
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── videoup-report
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── vip
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── web-goblin
│   │   │   │   └── Owner: liweijia,renwei
│   │   │   └── workflow
│   │   │       └── Owner: haoguanwei,zhapuyu
│   │   └── openplatform
│   │       └── open-market
│   │           └── Owner: changxuanran,liuyan02,qiuliang
│   ├── service
│   │   ├── ep
│   │   │   └── saga-agent
│   │   │       └── Owner: muyang,tangyongqiang,fangrongchang
│   │   ├── live
│   │   │   ├── Owner: liuzhen
│   │   │   ├── userexp
│   │   │   │   └── Owner: kuangxibing
│   │   │   └── wallet
│   │   │       └── Owner: lixiang,zhouzhichao
│   │   ├── main
│   │   │   ├── account
│   │   │   │   └── Owner: wanghuan01,zhoujiahui
│   │   │   ├── antispam
│   │   │   │   └── Owner: chenzhihui,lujinhui
│   │   │   ├── archive
│   │   │   │   └── Owner: haoguanwei,peiyifei
│   │   │   ├── assist
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── block
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── bns
│   │   │   │   └── Owner: haoguawnei weicheng
│   │   │   ├── broadcast
│   │   │   │   └── Owner: chenzhihui,caoguoliang,guhao
│   │   │   ├── canal
│   │   │   │   └── Owner: haoguanwei
│   │   │   ├── coin
│   │   │   │   └── Owner: lintanghui,linmiao,zhapuyu
│   │   │   ├── config
│   │   │   │   └── Owner: maojian
│   │   │   ├── coupon
│   │   │   │   └── Owner: zhaogangtao,yubaihai
│   │   │   ├── dapper
│   │   │   │   └── Owner: maojian,haoguanwei
│   │   │   ├── databus
│   │   │   │   └── Owner: haoguanwei
│   │   │   ├── discovery
│   │   │   │   └── Owner: haoguanwei,lintanghui
│   │   │   ├── dynamic
│   │   │   │   └── Owner: liweijia,zhapuyu
│   │   │   ├── favorite
│   │   │   │   └── Owner: chenzhihui,lujinhui
│   │   │   ├── feed
│   │   │   │   └── Owner: renwei,zhapuyu
│   │   │   ├── figure
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── filter
│   │   │   │   └── Owner: zhaogangtao,muyang
│   │   │   ├── identify
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── identify-game
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── location
│   │   │   │   └── Owner: peiyifei,haoguanwei
│   │   │   ├── member
│   │   │   │   └── Owner: zhaogangtao,wanghuan01,zhoujiahui,chenjianrong,zhoujixiang
│   │   │   ├── msm
│   │   │   │   └── Owner: maojian
│   │   │   ├── notify
│   │   │   │   └── Owner: haoguanwei,lintanghui
│   │   │   ├── passport
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── passport-auth
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── passport-game
│   │   │   │   └── Owner: wanghuan01
│   │   │   ├── point
│   │   │   │   └── Owner: yubaihai,zhaogangtao
│   │   │   ├── push
│   │   │   │   └── Owner: renwei,zhapuyu
│   │   │   ├── push-strategy
│   │   │   │   └── Owner: renwei,zhapuyu
│   │   │   ├── relation
│   │   │   │   └── Owner: linmiao,zhoujiahui
│   │   │   ├── resource
│   │   │   │   └── Owner: haoguanwei,peiyifei
│   │   │   ├── search
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei,guanhuaxin
│   │   │   ├── secure
│   │   │   │   └── Owner: zhaogangtao,lintanghui
│   │   │   ├── seq-server
│   │   │   │   └── Owner: peiyifei
│   │   │   ├── share
│   │   │   │   └── Owner: peiyifei,haoguanwei
│   │   │   ├── sms
│   │   │   │   └── Owner: renwei,zhapuyu
│   │   │   ├── spy
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── tag
│   │   │   │   └── Owner: renwei,renyashun
│   │   │   ├── thumbup
│   │   │   │   └── Owner: liweijia,zhapuyu,renwei
│   │   │   ├── up
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── upcredit
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── usersuit
│   │   │   │   └── Owner: zhaogangtao
│   │   │   ├── videoup
│   │   │   │   └── Owner: shencen,wangzhe01
│   │   │   ├── vip
│   │   │   │   └── Owner: lintanghui,zhaogangtao
│   │   │   └── workflow
│   │   │       └── Owner: haoguanwei,zhapuyu,zhoushuguang
│   │   └── openplatform
│   │       ├── abtest
│   │       │   └── Owner: lijiadong,qiuliang
│   │       ├── anti-fraud
│   │       │   └── Owner: wanglitao,wangminda,jiayanxiang
│   │       ├── ticket-item
│   │       │   └── Owner: yangyucheng
│   │       └── ticket-sales
│   │           └── Owner: liuzhan,yangyucheng
│   └── tool
│       ├── cache
│       │   └── Owner: zhapuyu
│       ├── ci
│       │   └── Owner: tangyongqiang
│       ├── creater
│       │   └── Owner: chenjianrong
│       ├── gdoc
│       │   └── Owner: lintanghui
│       ├── saga
│       │   └── Owner: muyang,tangyongqiang
│       └── warden
│           └── Owner: weicheng
└── library
    ├── cache
    │   ├── memcache
    │   │   └── Owner: maojian
    │   └── redis
    │       └── Owner: maojian
    ├── container
    │   └── pool
    │       └── Owner: zhapuyu
    ├── database
    │   ├── elastic
    │   │   └── Owner: haoguanwei,renwei,zhapuyu
    │   └── sql
    │       └── Owner: 
    ├── ecode
    │   ├── Owner: all
    │   └── tip
    │       └── Owner: all
    ├── exp
    │   └── feature
    │       └── Owner: zhoujiahui
    ├── log
    │   └── Owner: maojian
    ├── naming
    │   └── discovery
    │       └── Owner: lintanghui,caoguoliang
    ├── net
    │   ├── http
    │   │   ├── Owner: maojian
    │   │   └── blademaster
    │   │       ├── Owner: 
    │   │       ├── middleware
    │   │       │   ├── Owner: 
    │   │       │   ├── antispam
    │   │       │   │   └── Owner: 
    │   │       │   ├── auth
    │   │       │   │   └── Owner: maojian,zhoujiahui
    │   │       │   ├── cache
    │   │       │   │   └── Owner: 
    │   │       │   ├── identify
    │   │       │   │   └── Owner: 
    │   │       │   ├── limit
    │   │       │   │   └── aqm
    │   │       │   │       └── Owner: 
    │   │       │   ├── proxy
    │   │       │   │   └── Owner: 
    │   │       │   ├── rate
    │   │       │   │   └── Owner: 
    │   │       │   ├── supervisor
    │   │       │   │   └── Owner: 
    │   │       │   ├── tag
    │   │       │   │   └── Owner: maojian
    │   │       │   └── verify
    │   │       │       └── Owner: maojian,zhoujiahui
    │   │       └── render
    │   │           └── Owner: 
    │   ├── metadata
    │   │   └── Owner: 
    │   ├── netutil
    │   │   └── breaker
    │   │       └── Owner: 
    │   ├── rpc
    │   │   └── warden
    │   │       ├── Owner: maojian,caoguoliang
    │   │       ├── balancer
    │   │       │   └── wrr
    │   │       │       └── Owner: caoguoliang
    │   │       └── resolver
    │   │           └── Owner: caoguoliang
    │   └── trace
    │       └── Owner: maojian
    ├── rate
    │   └── limit
    │       └── bench
    │           └── stress
    │               └── Owner: lintanghui
    ├── stat
    │   └── sys
    │       └── cpu
    │           └── Owner: caoguoliang
    └── sync
        └── errgroup
            └── Owner: 


",,2019-04-22T10:33:29Z,2019-04-22T10:32:15Z,1,1,2,1,"('HarukaMa', 1)",1,1,
Thomvis/BrightFutures,Write great asynchronous code in Swift using futures and promises,"BrightFutures
=============

**:warning: BrightFutures has reached end-of-life.** After a long period of limited development activity, Swift's Async/Await has made the library obsolete. Please consider migrating from BrightFutures to async/await. When you do so, the async `get()` method will prove to be useful:

```swift
// in an async context...

let userFuture = User.logIn(username, password)
let user = try await userFuture.get()

// or simply:
let posts = try await Posts.fetchPosts(user).get()
```



The remainder of the README has not been updated recently, but is preserved for historic reasons.

---

How do you leverage the power of Swift to write great asynchronous code? BrightFutures is our answer.

BrightFutures implements proven [functional concepts](http://en.wikipedia.org/wiki/Futures_and_promises) in Swift to provide a powerful alternative to completion blocks and support typesafe error handling in asynchronous code.

The goal of BrightFutures is to be *the* idiomatic Swift implementation of futures and promises.
Our Big Hairy Audacious Goal (BHAG) is to be copy-pasted into the Swift standard library.

The stability of BrightFutures has been proven through extensive use in production. It is currently being used in several apps, with a combined total of almost 500k monthly active users. If you use BrightFutures in production, we'd love to hear about it!

## Latest news
[![Join the chat at https://gitter.im/Thomvis/BrightFutures](https://badges.gitter.im/Thomvis/BrightFutures.svg)](https://gitter.im/Thomvis/BrightFutures?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![GitHub Workflow tests.yml status badge](https://github.com/Thomvis/BrightFutures/actions/workflows/tests.yml/badge.svg?branch=master)](https://travis-ci.org/Thomvis/BrightFutures) [![Carthage compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage) [![CocoaPods version](https://img.shields.io/cocoapods/v/BrightFutures.svg)](https://cocoapods.org/pods/BrightFutures) [![CocoaPods](https://img.shields.io/cocoapods/metrics/doc-percent/BrightFutures.svg?maxAge=2592000)](http://cocoadocs.org/docsets/BrightFutures)

BrightFutures 8.0 is now available! This update adds Swift 5 compatibility.

## Installation
### [CocoaPods](http://cocoapods.org/)

1. Add the following to your [Podfile](http://guides.cocoapods.org/using/the-podfile.html):

    ```rb
    pod 'BrightFutures'
    ```

2. Integrate your dependencies using frameworks: add `use_frameworks!` to your Podfile. 
3. Run `pod install`.

### [Carthage](https://github.com/Carthage/Carthage)

1. Add the following to your [Cartfile](https://github.com/Carthage/Carthage/blob/master/Documentation/Artifacts.md#cartfile):

    ```
    github ""Thomvis/BrightFutures""
    ```

2. Run `carthage update` and follow the steps as described in Carthage's [README](https://github.com/Carthage/Carthage#adding-frameworks-to-an-application).

## Documentation
- This README covers almost all features of BrightFutures
- The [tests](Tests/BrightFuturesTests) contain (trivial) usage examples for every feature (97% test coverage)
- The primary author, Thomas Visser, gave [a talk](https://www.youtube.com/watch?v=lgJT2KMMEmU) at the April 2015 CocoaHeadsNL meetup
- The [Highstreet Watch App](https://github.com/GetHighstreet/HighstreetWatchApp) was an Open Source WatchKit app that made extensive use of an earlier version of BrightFutures

## Examples
We write a lot of asynchronous code. Whether we're waiting for something to come in from the network or want to perform an expensive calculation off the main thread and then update the UI, we often do the 'fire and callback' dance. Here's a typical snippet of asynchronous code:

```swift
User.logIn(username, password) { user, error in
    if !error {
        Posts.fetchPosts(user, success: { posts in
            // do something with the user's posts
        }, failure: handleError)
    } else {
        handleError(error) // handeError is a custom function to handle errors
    }
}
```

Now let's see what BrightFutures can do for you:

```swift
User.logIn(username, password).flatMap { user in
    Posts.fetchPosts(user)
}.onSuccess { posts in
    // do something with the user's posts
}.onFailure { error in
    // either logging in or fetching posts failed
}
```

Both `User.logIn` and `Posts.fetchPosts` now immediately return a `Future`. A future can either fail with an error or succeed with a value, which can be anything from an Int to your custom struct, class or tuple. You can keep a future around and register for callbacks for when the future succeeds or fails at your convenience.

When the future returned from `User.logIn` fails, e.g. the username and password did not match, `flatMap` and `onSuccess` are skipped and `onFailure` is called with the error that occurred while logging in. If the login attempt succeeded, the resulting user object is passed to `flatMap`, which 'turns' the user into an array of his or her posts. If the posts could not be fetched, `onSuccess` is skipped and `onFailure` is called with the error that occurred when fetching the posts. If the posts could be fetched successfully, `onSuccess` is called with the user's posts.

This is just the tip of the proverbial iceberg. A lot more examples and techniques can be found in this readme, by browsing through the tests or by checking out the official companion framework [FutureProofing](https://github.com/Thomvis/FutureProofing).

## Wrapping expressions
If you already have a function (or really any expression) that you just want to execute asynchronously and have a Future to represent its result, you can easily wrap it in an `asyncValue` block:

```swift
DispatchQueue.global().asyncValue {
    fibonacci(50)
}.onSuccess { num in
    // value is 12586269025
}
```

`asyncValue` is defined in an extension on GCD's `DispatchQueue`. While this is really short and simple, it is equally limited. In many cases, you will need a way to indicate that the task failed. To do this, instead of returning the value, you can return a Result. Results can indicate either a success or a failure:

```swift
enum ReadmeError: Error {
    case RequestFailed, TimeServiceError
}

let f = DispatchQueue.global().asyncResult { () -> Result in
    if let now = serverTime() {
        return .success(now)
    }
    
    return .failure(ReadmeError.TimeServiceError)
}

f.onSuccess { value in
    // value will the NSDate from the server
}
```

The future block needs an explicit type because the Swift compiler is not able to deduce the type of multi-statement blocks.

Instead of wrapping existing expressions, it is often a better idea to use a Future as the return type of a method so all call sites can benefit. This is explained in the next section.

## Providing Futures
Now let's assume the role of an API author who wants to use BrightFutures. A Future is designed to be read-only, except for the site where the Future is created. This is achieved via an initialiser on Future that takes a closure, the completion scope, in which you can complete the Future. The completion scope has one parameter that is also a closure which is invoked to set the value (or error) in the Future.

```swift
func asyncCalculation() -> Future {
    return Future { complete in
        DispatchQueue.global().async {
            // do a complicated task and then hand the result to the promise:
            complete(.success(""forty-two""))
        }
    }
}
```

`Never` indicates that the `Future` cannot fail. This is guaranteed by the type system, since `Never` has no initializers. As an alternative to the completion scope, you could also create a `Promise`, which is the writeable equivalent of a Future, and store it somewhere for later use.

## Callbacks
You can be informed of the result of a `Future` by registering callbacks: `onComplete`, `onSuccess` and `onFailure`. The order in which the callbacks are executed upon completion of the future is not guaranteed, but it is guaranteed that the callbacks are executed serially. It is not safe to add a new callback from within a callback of the same future.

## Chaining callbacks

Using the `andThen` function on a `Future`, the order of callbacks can be explicitly defined. The closure passed to `andThen` is meant to perform side-effects and does not influence the result. `andThen` returns a new Future with the same result as this future that completes after the closure has been executed.

```swift
var answer = 10
    
let _ = Future(value: 4).andThen { result in
    switch result {
    case .success(let val):
        answer *= val
    case .failure(_):
        break
    }
}.andThen { result in
    if case .success(_) = result {
        answer += 2
    }
}

// answer will be 42 (not 48)
```

## Functional Composition

### map

`map` returns a new Future that contains the error from this Future if this Future failed, or the return value from the given closure that was applied to the value of this Future.

```swift
fibonacciFuture(10).map { number -> String in
    if number > 5 {
        return ""large""
    }
    return ""small""
}.map { sizeString in
    sizeString == ""large""
}.onSuccess { numberIsLarge in
    // numberIsLarge is true
}
```

### flatMap

`flatMap` is used to map the result of a future to the value of a new Future.

```swift
fibonacciFuture(10).flatMap { number in
    fibonacciFuture(number)
}.onSuccess { largeNumber in
    // largeNumber is 139583862445
}
```

### zip

```swift
let f = Future(value: 1)
let f1 = Future(value: 2)

f.zip(f1).onSuccess { a, b in
    // a is 1, b is 2
}
```

### filter
```swift
Future(value: 3)
    .filter { $0 > 5 }
    .onComplete { result in
        // failed with error NoSuchElementError
    }

Future(value: ""Swift"")
    .filter { $0.hasPrefix(""Sw"") }
    .onComplete { result in
        // succeeded with value ""Swift""
    }
```

## Recovering from errors
If a `Future` fails, use `recover` to offer a default or alternative value and continue the callback chain.

```swift
// imagine a request failed
Future(error: .RequestFailed)
    .recover { _ in // provide an offline default
        return 5
    }.onSuccess { value in
        // value is 5 if the request failed or 10 if the request succeeded
    }
```

In addition to `recover`, `recoverWith` can be used to provide a Future that will provide the value to recover with.

## Utility Functions
BrightFutures also comes with a number of utility functions that simplify working with multiple futures. These are implemented as free (i.e. global) functions to work around current limitations of Swift.

## Fold
The built-in `fold` function allows you to turn a list of values into a single value by performing an operation on every element in the list that *consumes* it as it is added to the resulting value. A trivial usecase for fold would be to calculate the sum of a list of integers.

Folding a list of Futures is not very convenient with the built-in `fold` function, which is why BrightFutures provides one that works especially well for our use case. BrightFutures' `fold` turns a list of Futures into a single Future that contains the resulting value. This allows us to, for example, calculate the sum of the first 10 Future-wrapped elements of the fibonacci sequence:

```swift
let fibonacciSequence = [fibonacciFuture(1), fibonacciFuture(2),  ..., fibonacciFuture(10)]

// 1+1+2+3+5+8+13+21+34+55
fibonacciSequence.fold(0, f: { $0 + $1 }).onSuccess { sum in
    // sum is 143
}
```

## Sequence
With `sequence`, you can turn a list of Futures into a single Future that contains a list of the results from those futures.

```swift
let fibonacciSequence = [fibonacciFuture(1), fibonacciFuture(2),  ..., fibonacciFuture(10)]
    
fibonacciSequence.sequence().onSuccess { fibNumbers in
    // fibNumbers is an array of Ints: [1, 1, 2, 3, etc.]
}
```

## Traverse
`traverse` combines `map` and `fold` in one convenient function. `traverse` takes a list of values and a closure that takes a single value from that list and turns it into a Future. The result of `traverse` is a single Future containing an array of the values from the Futures returned by the given closure.

```swift
(1...10).traverse {
    i in fibonacciFuture(i)
}.onSuccess { fibNumbers in
    // fibNumbers is an array of Ints: [1, 1, 2, 3, etc.]
}
```

## Delay
`delay` returns a new Future that will complete after waiting for the given interval with the result of the previous Future.
To simplify working with `DispatchTime` and `DispatchTimeInterval`, we recommend to use this [extension](https://gist.github.com/Thomvis/b378f926b6e1a48973f694419ed73aca).

```swift
Future(value: 3).delay(2.seconds).andThen { result in
    // execute after two additional seconds
}
```

## Default Threading Model
BrightFutures tries its best to provide a simple and sensible default threading model. In theory, all threads are created equally and BrightFutures shouldn't care about which thread it is on. In practice however, the main thread is _more equal than others_, because it has a special place in our hearts and because you'll often want to be on it to do UI updates.

A lot of the methods on `Future` accept an optional _execution context_ and a block, e.g. `onSuccess`, `map`, `recover` and many more. The block is executed (when the future is completed) in the given execution context, which in practice is a GCD queue. When the context is not explicitly provided, the following rules will be followed to determine the execution context that is used:

- if the method is called from the main thread, the block is executed on the main queue
- if the method is not called from the main thread, the block is executed on a global queue

If you want to have custom threading behavior, skip do do not the section. next [:wink:](https://twitter.com/nedbat/status/194452404794691584)

## Custom execution contexts
The default threading behavior can be overridden by providing explicit execution contexts. You can choose from any of the built-in contexts or easily create your own. Default contexts include: any dispatch queue, any `NSOperationQueue` and the `ImmediateExecutionContext` for when you don't want to switch threads/queues.

```swift
let f = Future { complete in
    DispatchQueue.global().async {
        complete(.success(fibonacci(10)))
    }
}

f.onComplete(DispatchQueue.main.context) { value in
    // update the UI, we're on the main thread
}
```

Even though the future is completed from the global queue, the completion closure will be called on the main queue.

## Invalidation tokens
An invalidation token can be used to invalidate a callback, preventing it from being executed upon completion of the future. This is particularly useful in cases where the context in which a callback is executed changes often and quickly, e.g. in reusable views such as table views and collection view cells. An example of the latter:

```swift
class MyCell : UICollectionViewCell {
    var token = InvalidationToken()
    
    public override func prepareForReuse() {
        super.prepareForReuse()
        token.invalidate()
        token = InvalidationToken()
    }
    
    public func setModel(model: Model) {
        ImageLoader.loadImage(model.image).onSuccess(token.validContext) { [weak self] UIImage in
            self?.imageView.image = UIImage
        }
    }
}
```

By invalidating the token on every reuse, we prevent that the image of the previous model is set after the next model has been set.

Invalidation tokens _do not_ cancel the task that the future represents. That is a different problem. With invalidation tokens, the result is merely ignored. Invalidating a token after the original future completed does nothing.

If you are looking for a way to cancel a running task, you could look into using [NSProgress](https://developer.apple.com/library/ios/documentation/Foundation/Reference/NSProgress_Class/Reference/Reference.html).

## Credits

BrightFutures' primary author is [Thomas Visser](https://twitter.com/thomvis). He is lead iOS Engineer at [Highstreet](http://www.highstreetapp.com/). We welcome any feedback and pull requests. Get your name on [this list](https://github.com/Thomvis/BrightFutures/graphs/contributors)!

BrightFutures was inspired by Facebook's [BFTasks](https://github.com/BoltsFramework/Bolts-iOS), the Promises & Futures implementation in [Scala](http://docs.scala-lang.org/overviews/core/futures.html) and Max Howell's [PromiseKit](https://github.com/mxcl/PromiseKit).

## License

BrightFutures is available under the MIT license. See the LICENSE file for more info.
","'asynchronous-programming', 'concurrency', 'futures', 'promises', 'swift'",2014-06-08T10:57:27Z,2022-07-02T18:27:43Z,51,39,1899,53,"('Thomvis', 576), ('Oleksii Dykan', 20), ('kimdv', 20), ('nvh', 16), ('bkase', 11), ('Blair McArthur', 9), ('RomanPodymov', 8), ('zenkimoto', 6), ('tmu', 5), ('possen', 4), ('Ward van Teijlingen', 3), ('phimage', 3), ('danj-stripe', 3), ('Noobish1Reviewer', 3), ('Anthony Mittaz', 3), ('Andrew Arnopoulos', 3), ('paiv', 2), ('nghialv', 2), ('Yonas Kolb', 2), ('wvteijlingen', 2), ('wiruzx', 2), ('mathebox', 2), ('JeroenB-Triple', 2), ('e-marchand', 2), ('AndrewSB', 2), ('mattfenwick', 1), ('mickeyreiss', 1), ('peyton', 1), ('slessans', 1), ('gitter-badger', 1), ('tonyarnold', 1), ('yonaskolb', 1), ('chunkerchunker', 1), ('jgh-', 1), ('kennytm', 1), ('robertoaceves', 1), ('Sajjon', 1), ('shindyu', 1), ('mac-cain13', 1), ('mlilback', 1), ('lluisgerard', 1), ('jonandersen', 1), ('Jacques Fortier', 1), ('helje5', 1), ('oysta', 1), ('SpacyRicochet', 1), ('Brian Tiger Chow', 1), ('bjpbakker', 1), ('sync', 1), ('Angel Casado', 1), ('215', 1)",26,21,
dynatrace-sockshop/k8s-deploy-production,,# k8s-deploy-production,,2018-10-30T20:17:21Z,2019-02-25T06:49:50Z,6,5,0,7,"('johannes-b', 19), ('dirkwall', 16), ('jetzlstorfer', 13), ('bacherfl', 12), ('Jürgen Etzlstorfer', 4), ('collinjlesko', 2)",0,0,
gregdingle/genetify,An unobtrusive way to A/B test and optimize webpages,see http://github.com/gregdingle/genetify/wikis,,2008-11-28T00:19:23Z,2013-07-15T06:12:45Z,5,4,370,21,"('gregdingle', 48), ('Greg Dingle', 13), ('ddn', 4), ('mvasilkov', 1), ('bymerej', 1)",2,2,
thomasleveil/b3-plugin-chatlogger,BigBrotherBot plugin that logs to database all in-game chat,"chatlogger plugin for Big Brother Bot (www.bigbrotherbot.net)
=============================================================

By Courgette


Description
-----------

This plugin logs to database and/or file all clients' messages (chat, team chat, private chat).
Forum : http://www.bigbrotherbot.com/forums/index.php?topic=423

******
*NOTE: since B3 v1.10.1 beta this plugin has been included in the standard plugins set, thus all patches and updates will be performed in the official B3 repository.*
******

Installation
------------

 * copy the chatlogger directory into your B3 `extplugins` directory
 * copy plugin_chatlogger.ini into into your config directory
 * create the chatlog table in your database importing the `sql/chatlogger.sql` file.
 * update your main b3 config file as follow:

   - if you are using b3.ini, add to the `[plugins]` section:

```
chatlogger: @conf/plugin_chatlogger.ini
```
   
   - if you are using b3.xml, add to the `` section:

```

```

NOTE : if you are using the censor plugin, make sure the chatlogger plugin is loaded before the censor plugin or you
won't log any messages containing censored words.


Changelog
---------

### 1.4 - 18/08/2013 - Courgette
 - can now save SQUAD chat (for games that have squads)
 - UPGRADE NOTE: run the `upgrade_1.4.sql` script on your MySQL database
 
### 1.3.2 - 18/08/2013 - Courgette
 - plugin config file is now a .ini file

### 1.3.1 - 12/08/2012 - Courgette
 - gracefully fallback on default values when part of the config is missing

### 1.3 - 09/08/2012 - Courgette
 - now also log events EVT_CLIENT_RADIO, EVT_CLIENT_CALLVOTE and EVT_CLIENT_VOTE when available

### 1.2 - 03/03/2012 - OliverWieland
 - add new setting max_age_cmd

### 1.1.3 - 20/12/2011 - Courgette
 - fixes #2 : Error DELETE FROM cmdlog WHERE msg_time (thanks to Mariodu62)

### 1.1.2 - 12/09/2011 - Courgette
 - start without failure even if the plugin is loaded before the admin plugin
 - do not fail to handle SQLite database errors

### 1.1.1 - 01/09/2011 - Courgette
 - refactoring to reduce code duplication
 - better test coverage
 - update authors credit

### 1.1.0 - 01/09/2011 - BlackMamba
 - log commands to db

### 1.0.0 - 16/04/2011 - Courgette
 - can log to a file instead of logging to db (or both)
 - requires B3 1.6+

### 0.2.1 - 11/04/2011 - Courgette
 - update the sql script to use the utf8 charset

### 0.2.0 - 22/12/2008 - Courgette
 - allow to use a customized table name for storing the
   log to database. Usefull if multiple instances of the
   bot share the same database.
   Thanks to Eire.32 for bringing up the idea and testing.

### 0.1.2 - 7/11/2008 - xlr8or
 - added missing 'import b3.timezones'

### 0.1.1 - 13/09/2008
 - in config, the hour defined for the purge is now understood in the timezone defined in the main B3 config file (before, was understood as UTC time)
 - fix mistake in log text
 
### 0.1.0 - 14/08/2008
 - fix security issue with player names or messages containing double quote or antislash characters (Thx to Anubis for report and tests)
 - option to setup a daily purge of old messages to keep your database size reasonable
 
### 0.0.1 - 28/07/2008
 - manage say, teamsay and privatesay messages
","'b3-plugin', 'bigbrotherbot'",2009-10-13T19:55:03Z,2015-06-27T12:49:28Z,6,2,11,3,"('thomasleveil', 24), ('Courgette', 15), ('OliverWieland', 2), ('Thomas LÉVEIL', 2), ('BlackMamba', 1), ('Courgette', 1)",2,0,
bingoogolapple/BGASwipeBackLayout-Android,Android Activity 滑动返回。支持微信滑动返回样式、横屏滑动返回、全屏滑动返回,":running:BGASwipeBackLayout-Android:running:
============

强烈建议与 **[StatusBarUtil](https://github.com/laobie/StatusBarUtil)** 结合着一起使用

## 常见问题与反馈

### 1.使用透明主题时，滑动返回看见了 Launcher

保证栈底 Activity 的主题是不透明的。例如 demo 中的首个 Activity 是 SplashActivity，进入主界面后 SplashActivity 就销毁了，此时 MainActivity 就是栈底 Activity，需保证 MainActivity 的主题不透明

### 2.使用非透明主题时，滑动返回结束时立即触摸界面应用程序崩溃

把该崩溃界面里比较特殊的 View 的 class 添加到集合中作为「BGASwipeBackHelper.init」的第2个参数，例如地图控件。目前在库中已经添加了 WebView 和 SurfaceView，不用再次添加这两个了

## 功能介绍

- [x] 通过修改 support-v4 包中 SlidingPaneLayout 的源码来实现滑动返回布局
- [x] 支持非透明主题滑动返回，不影响 Activity 生命周期
- [x] 动态设置滑动返回是否可用
- [x] 动态设置是否仅仅跟踪左侧边缘的滑动返回
- [x] 动态设置是否是微信滑动返回样式
- [x] 动态设置是否显示滑动返回的阴影效果
- [x] 支持全屏、横屏和竖屏

## 效果图与示例 apk

| 普通滑动返回样式 | 微信滑动返回样式 |
| ------------ | ------------- |
| ![BGASwipeBackLayoutDemo](https://cloud.githubusercontent.com/assets/8949716/21512903/fac699f8-ccec-11e6-8437-1bfe8b9bd9d3.gif) | ![BGASwipeBackLayoutDemo-WeChat](https://cloud.githubusercontent.com/assets/8949716/21536263/7aa0fe88-cdbb-11e6-801d-4b370d6c454c.gif)  |

| 配合滑动删除列表一起使用 | 配合 RecycerView 一起使用 |
| ------------ | ------------- |
| ![bgaswipebacklayout-swipe-delete](https://cloud.githubusercontent.com/assets/8949716/21843157/ec74aeec-d824-11e6-9579-77549892e273.gif) | ![bgaswipebacklayout-recycler-index](https://cloud.githubusercontent.com/assets/8949716/21843158/ec784a3e-d824-11e6-9649-7397e5aad7eb.gif)  |

[点击下载 BGASwipeBackLayoutDemo.apk](http://fir.im/BGASwipeBackLayout) 或扫描下面的二维码安装

![BGASwipeBackLayoutDemo apk 文件二维码](https://cloud.githubusercontent.com/assets/8949716/21510942/c8e9c9e0-ccd4-11e6-9757-bbc6653cccdb.png)

### 1.添加 Gradle 依赖

* 把 `maven { url 'https://jitpack.io' }` 添加到 root build.gradle 的 repositories 中
* 在 app build.gradle 中添加如下依赖，末尾的「latestVersion」指的是徽章 [![](https://jitpack.io/v/bingoogolapple/BGASwipeBackLayout-Android.svg)](https://jitpack.io/#bingoogolapple/BGASwipeBackLayout-Android) 里的版本名称，请自行替换

```groovy
implementation 'com.github.bingoogolapple:BGASwipeBackLayout-Android:latestVersion'
// 换成己工程里依赖的 support-v4 的版本
implementation 'androidx.legacy:legacy-support-v4:1.0.0'
```

### 2.必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回

```java
public class App extends Application {

    @Override
    public void onCreate() {
        super.onCreate();

        /**
         * 必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回
         * 第一个参数：应用程序上下文
         * 第二个参数：如果发现滑动返回后立即触摸界面时应用崩溃，请把该界面里比较特殊的 View 的 class 添加到该集合中，目前在库中已经添加了 WebView 和 SurfaceView
         */
        BGASwipeBackHelper.init(this, null);
    }
}
```

### 3.将下面的代码拷贝到你自己的 BaseActivity 中，建议参考 demo 里的这个 [BaseActivity](https://github.com/bingoogolapple/BGASwipeBackLayout-Android/blob/master/demo/src/main/java/cn/bingoogolapple/swipebacklayout/demo/activity/BaseActivity.java) 来设置界面跳转动画

```java
public abstract class BaseActivity extends AppCompatActivity implements BGASwipeBackHelper.Delegate {
    protected BGASwipeBackHelper mSwipeBackHelper;
    protected Toolbar mToolbar;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        // 「必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回」
        // 在 super.onCreate(savedInstanceState) 之前调用该方法
        initSwipeBackFinish();
        super.onCreate(savedInstanceState);
    }

    /**
     * 初始化滑动返回。在 super.onCreate(savedInstanceState) 之前调用该方法
     */
    private void initSwipeBackFinish() {
        mSwipeBackHelper = new BGASwipeBackHelper(this, this);

        // 「必须在 Application 的 onCreate 方法中执行 BGASwipeBackHelper.init 来初始化滑动返回」
        // 下面几项可以不配置，这里只是为了讲述接口用法。

        // 设置滑动返回是否可用。默认值为 true
        mSwipeBackHelper.setSwipeBackEnable(true);
        // 设置是否仅仅跟踪左侧边缘的滑动返回。默认值为 true
        mSwipeBackHelper.setIsOnlyTrackingLeftEdge(true);
        // 设置是否是微信滑动返回样式。默认值为 true
        mSwipeBackHelper.setIsWeChatStyle(true);
        // 设置阴影资源 id。默认值为 R.drawable.bga_sbl_shadow
        mSwipeBackHelper.setShadowResId(R.drawable.bga_sbl_shadow);
        // 设置是否显示滑动返回的阴影效果。默认值为 true
        mSwipeBackHelper.setIsNeedShowShadow(true);
        // 设置阴影区域的透明度是否根据滑动的距离渐变。默认值为 true
        mSwipeBackHelper.setIsShadowAlphaGradient(true);
        // 设置触发释放后自动滑动返回的阈值，默认值为 0.3f
        mSwipeBackHelper.setSwipeBackThreshold(0.3f);
        // 设置底部导航条是否悬浮在内容上，默认值为 false
        mSwipeBackHelper.setIsNavigationBarOverlap(false);
    }

    /**
     * 是否支持滑动返回。这里在父类中默认返回 true 来支持滑动返回，如果某个界面不想支持滑动返回则重写该方法返回 false 即可
     *
     * @return
     */
    @Override
    public boolean isSupportSwipeBack() {
        return true;
    }

    /**
     * 正在滑动返回
     *
     * @param slideOffset 从 0 到 1
     */
    @Override
    public void onSwipeBackLayoutSlide(float slideOffset) {
    }

    /**
     * 没达到滑动返回的阈值，取消滑动返回动作，回到默认状态
     */
    @Override
    public void onSwipeBackLayoutCancel() {
    }

    /**
     * 滑动返回执行完毕，销毁当前 Activity
     */
    @Override
    public void onSwipeBackLayoutExecuted() {
        mSwipeBackHelper.swipeBackward();
    }

    @Override
    public void onBackPressed() {
        // 正在滑动返回的时候取消返回按钮事件
        if (mSwipeBackHelper.isSliding()) {
            return;
        }
        mSwipeBackHelper.backward();
    }
}
```

### 4.强烈强烈强烈建议把 [BGASwipeBackHelper](https://github.com/bingoogolapple/BGASwipeBackLayout-Android/blob/master/library/src/main/java/cn/bingoogolapple/swipebacklayout/BGASwipeBackHelper.java) 里的每个方法的注释看一遍，只看注释就好

## demo 中用到的第三方库

* [StatusBarUtil](https://github.com/laobie/StatusBarUtil) A util for setting status bar style on Android App
* [BGABaseAdapter-Android](https://github.com/bingoogolapple/BGABaseAdapter-Android) 在 AdapterView 和 RecyclerView 中通用的 Adapter 和 ViewHolder。RecyclerView 支持 DataBinding 、多种 Item 类型、添加 Header 和 Footer。RecyclerView 竖直方向通用分割线 BGADivider，吸顶分类
* [BGAProgressBar-Android](https://github.com/bingoogolapple/BGAProgressBar-Android) 带百分比数字的水平、圆形进度条
* [BGARefreshLayout-Android](https://github.com/bingoogolapple/BGARefreshLayout-Android) 多种下拉刷新效果、上拉加载更多、可配置自定义头部广告位
* [BGASwipeItemLayout-Android](https://github.com/bingoogolapple/BGASwipeItemLayout-Android) 类似 iOS 带弹簧效果的左右滑动控件，可作为 AbsListView 和 RecyclerView 的 item
* 谷爹的 support 包

## 代码是最好的老师，更多详细用法请查看 [demo](https://github.com/bingoogolapple/BGASwipeBackLayout-Android/tree/master/demo):feet:

## 关于我

| 个人主页 | 邮箱 | BGA 系列开源库 QQ 群 | GitHub 喵(专注于 GitHub 等一切与程序员有关的内容) |
| ------------- | ------------ | ------------ | ------------ |
| bingoogolapple.cn  | bingoogolapple@gmail.com | ![BGA_CODE_CLUB](http://bgashare.bingoogolapple.cn/BGA_CODE_CLUB.png?imageView2/2/w/200) | ![GitHub喵](https://user-images.githubusercontent.com/8949716/99201262-1fd55200-27e5-11eb-8097-c06d2497f477.jpeg) |

## 打赏支持

如果您觉得 BGA 系列开源库帮你节省了大量的开发时间，请扫描下方的二维码随意打赏，要是能打赏个 10.24 :monkey_face:就太:thumbsup:了。您的支持将鼓励我继续创作:octocat:

如果您目前正打算购买通往墙外的梯子，可以使用我的邀请码「YFQ9Q3B」购买 [Lantern](https://github.com/getlantern/forum)，双方都赠送三个月的专业版使用时间:beers:


  


## License

    Copyright (C) 2012 The Android Open Source Project
    Copyright 2016 bingoogolapple

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
","'androidx', 'swipeback', 'swipebackactivity', 'swipebacklayout'",2016-12-27T09:06:24Z,2021-07-17T17:27:36Z,6,4,2312,44,"('bingoogolapple', 88), ('weiyu', 2), ('880634', 1), ('chenjunjie', 1), ('foolchen', 1), ('limuyang2', 1)",4,3,
austenallred/lswebhomework3,The homework for LambdaSchool's mini bootcamp - lesson 3,"# LambdaSchool Free Mini Bootcamp Homework 3 #

## Task One ##

1. Fork this repository

2. Clone it to your own machine

3. Edit the information below:


```

My name is:

I like to:

I'm learning:

```

4. Add a screenshot (.jpg or .png is fine) of a tweet you've altered using Inspect Element in Chrome to the project folder.

4. Push it up to your own repository on Github (don't try to override the original).

## Task Two ##

1. Create a new repository on Github at github.com/yourusername/hellolambdaschool.

2. Inside that repository create a file at README.md, and enter the following in that file:

```
I am learning how to use git at Lambda School's [online code bootcamp](https://lambdaschool.com/mini-bootcamp)
```

3. Push your changes to your new repository.

That's it. Good luck!

*For extra credit, practice this a few times with a few different repositories.*",,2017-05-22T23:21:46Z,2018-05-29T17:43:28Z,1,1,4,4,"('austenallred', 3)",0,0,
l0ss/Get-GPTrashfire,B-Sides CBR 2018 talk about group policy and Grouper,"# Get-GPTrashFire

Watch the actual talk on YouTube!

https://www.youtube.com/watch?v=JfyiWspXpQo
",,2018-04-14T00:44:07Z,2019-05-03T05:21:40Z,3,1,39,2,"('Mike Loss', 3), ('l0ss', 3), ('C-Sto', 1)",1,1,
VincentTV/VincentTV-Code,B站视频演示源码，@VincentTV,"# B站视频演示源码

* 各文件夹对应各个视频源码

****

| Author | [Vincent](https://space.bilibili.com/402141442 ""B站"") |
|:---:|:---:|
| B站 | [VincentTV (点击跳转)](https://space.bilibili.com/402141442) |
| GitHub | [GitHub (点击跳转)](https://github.com/VincentTV/VincentTV-Code) |
| 效果预览 | [主页 (点击跳转)](https://vincenttv.github.io/VincentTV-Code) |

****

>### 点击文字跳转

|#|视频|源码|预览|
|:---:|:----:|:-----:|:-----:|
|10|[CSS+JS幸运转盘](https://www.bilibili.com/video/av59227889/ ""CSS+JS幸运转盘"")|[Luck-Wheel](https://github.com/VincentTV/VincentTV-Code/tree/master/Luck-Wheel)| [index.html](https://vincenttv.github.io/VincentTV-Code/Luck-Wheel) | 
|10|[原生JS图片Before/After效果](https://www.bilibili.com/video/av59227889/ ""原生JS图片Before/After效果"")|[Before&After-Slider](https://github.com/VincentTV/VincentTV-Code/tree/master/Before&After-Slider)| [index.html](https://vincenttv.github.io/VincentTV-Code/Before&After-Slider) | 
|9|[JS霓虹动态时钟](https://www.bilibili.com/video/av55264319/ ""JS霓虹动态时钟"")|[NeonClock-JS](https://github.com/VincentTV/VincentTV-Code/tree/master/NeonClock-JS)| [NeonClock.html](https://vincenttv.github.io/VincentTV-Code/NeonClock-JS/NeonClock.html) |
|8|[霓虹灯字体闪烁特效](https://www.bilibili.com/video/av54768012/ ""霓虹灯字体闪烁特效"")|[NeonText-CSS3](https://github.com/VincentTV/VincentTV-Code/tree/master/NeonText-CSS3)| [NeonText.html](https://vincenttv.github.io/VincentTV-Code/NeonText-CSS3/NeonText.html) |
|7|[原生JS冒泡动画](https://www.bilibili.com/video/av52296076/ ""原生JS冒泡动画"")|[BubbleUp-JSanimation](https://github.com/VincentTV/VincentTV-Code/tree/master/BubbleUp-JSanimation)| [BubbleUp.html](https://vincenttv.github.io/VincentTV-Code/BubbleUp-JSanimation/BubbleUp.html) |
|6|[原生JS点赞特效](https://www.bilibili.com/video/av51351273/ ""原生JS点赞特效"")|[Like-ClickEffects](https://github.com/VincentTV/VincentTV-Code/tree/master/Like-ClickEffects)| [index.html](https://vincenttv.github.io/VincentTV-Code/Like-ClickEffects) |
|5|[复联轮播Banner](https://www.bilibili.com/video/av50437887 ""复联轮播Banner"")|[Avengers-Swiper](https://github.com/VincentTV/VincentTV-Code/tree/master/Avengers-Swiper)| [index.html](https://vincenttv.github.io/VincentTV-Code/Avengers-Swiper) |
|4|[3D立方体](https://www.bilibili.com/video/av49984936 ""3D立方体"")|[3D-Cube](https://github.com/VincentTV/VincentTV-Code/tree/master/3D-Cube)| [cube.html](https://vincenttv.github.io/VincentTV-Code/3D-Cube/cube.html) [cube2.html](https://vincenttv.github.io/VincentTV-Code/3D-Cube/cube2.html) |
|3|[3D卡片翻转](https://www.bilibili.com/video/av49517141 ""3D卡片翻转"")|[3D-Flipping](https://github.com/VincentTV/VincentTV-Code/tree/master/3D-Flipping)| [index.html](https://vincenttv.github.io/VincentTV-Code/3D-Flipping) |
|2|[jQuery火箭](https://www.bilibili.com/video/av49252072 ""jQuery火箭"")|[Rocket-ScrollToTop](https://github.com/VincentTV/VincentTV-Code/tree/master/Rocket-ScrollToTop)| [index.html](https://vincenttv.github.io/VincentTV-Code/Rocket-ScrollToTop) |
|1|[边框循环动画](https://www.bilibili.com/video/av48988967 ""边框循环动画"")|[Border-Animation](https://github.com/VincentTV/VincentTV-Code/tree/master/Border-Animation)| [index.html](https://vincenttv.github.io/VincentTV-Code/Border-Animation) |",,2019-04-27T18:07:12Z,2022-07-25T08:09:52Z,1,1,57,0,"('VincentTV', 24)",0,0,
AJMartel/MeGa-RAT-Pack,Remote Administration Tools & Remote access trojans in MEGA RAT PACK by B®AGA,"# MeGa-RAT-Pack
Remote Administration Tools &amp; Remote access trojans : MEGA RAT PACK by B®AGA

https://i.ibb.co/RDd28tD/rat-list.png


!_ANDROID ( Spy Note 5 ) Free Download 
888 RAT Private - Cracked  Free Download 
888_RAT_1.0.8_O _ Cracked  Free Download 
CinaRAT  Free Download 
CobianRAT v1.0.40.7  Free Download 
Coringa-RAT  Free Download 
Death-RATV0.10  Free Download 
Eagle RAT v2.5  Free Download 
HichamRAT v0.9d  Free Download 
Hidra Force v4.0  Free Download 
Kronus RAT  Free Download 
LeGend Rat v1.9  Free Download 
LimeRAT v0.1.8.5C  Free Download 
LuxNET RAT v1.1.0.4 Cracked  Free Download 
Mega RAT 1.5 Beta  Free Download 
NanoCore 1.2.2.0_Fixed_Cracked By Alcatraz3222  Free Download 
NjRat 0.7D Danger Edition 2018  Free Download 
NjRat Lime Edition 0.8.0  Free Download 
PentagonRAT  Free Download 
Quasar 1.3 modified by Deos  Free Download 
Quasar Golden Edition 1.4.1.0  Free Download 
README.md	Update README.md	10 minutes ago
REMCOS v1.7 Professional  Free Download 
Revenge-RAT v0.3  Free Download 
SaherBlueEagle_Splitter[RAT]  Free Download 
Shia Hacker School -Rat v1.0  Free Download 
SlayerRAT v0.7.2 By X-Slayer  Free Download 
VayneRat  Free Download 
Viral RAT 1.0 by Sameed  Free Download 
Virus Rat v8.0 Beta  Free Download 
WARZONE 1.2 Cracked  Free Download 
njRAT v0.11G  Free Download 
wiRAT v0.1.5F  Free Download 

",,2019-02-18T17:40:52Z,2023-03-06T12:23:16Z,1,1,173,12,"('AJMartel', 2)",0,0,
csyangbinbin/adsb_encoder,ads-b encode,"# adsb_encoder
ads-b encode
",,2017-07-19T03:49:14Z,2017-07-19T06:22:46Z,1,1,18,3,"('csyangbinbin', 3)",0,0,
mattm/abtestcalculator,A/B Test Calcualtor,"# A/B Test Calculator

This repository hosts the source code for [ABTestCalculator.com](http://www.abtestcalculator.com), a visual A/B test significance calculator.

## Development

First, clone this repository and ensure you have [npm](https://github.com/npm/npm) installed.

Next, install the project's dependencies by running `npm install`.

Finally, simply run `gulp` from the command line and then open `build/index.html` in your browser.

Because this uses ECMAScript 2015, you'll need to ensure you run `gulp` with the `--harmony` flag. You can do this with the following alias:

```alias gulp='node --harmony `which gulp`'```

## The Math

For an explanation of the math behind A/B testing significance calculations, checkout this excellent series by Aaron O'Connell:

* [The Math of Split Testing Part 1: Statistical Sampling Uncertainty](http://blog.42floors.com/math-split-testing-part-1-statistical-sampling-uncertainty/)
* [The Math of Split Testing Part 2: Chance of Being Better](http://blog.42floors.com/math-split-testing-part-2-chance-better/)
* [The Math of Split Testing Part 3: The Chance of being Similar](http://blog.42floors.com/math-split-testing-part-3-chance-similar/)

This tool uses the Wald method to estimate the distribution of the sample proportions and tests are considered significant at the p = 0.10 confidence level.

# Contact

If you have any suggestions, find a bug, or just want to say hey drop me a note at [@mhmazur](https://twitter.com/mhmazur) on Twitter or by email at matthew.h.mazur@gmail.com.

# License

MIT © [Matt Mazur](http://mattmazur.com)
",,2015-01-25T22:39:15Z,2022-02-15T14:52:49Z,1,1,75,10,"('mattm', 261)",0,0,
Yomguithereal/baobab,JavaScript & TypeScript persistent and optionally immutable data tree with cursors.,"[![Build Status](https://travis-ci.org/Yomguithereal/baobab.svg)](https://travis-ci.org/Yomguithereal/baobab)

# Baobab

**Baobab** is a JavaScript & TypeScript [persistent](http://en.wikipedia.org/wiki/Persistent_data_structure) and [immutable](http://en.wikipedia.org/wiki/Immutable_object) (at least by default) data tree supporting cursors and enabling developers to easily navigate and monitor nested data through events.

It is mainly inspired by functional [zippers](http://clojuredocs.org/clojure.zip/zipper) (such as Clojure's ones) and by [Om](https://github.com/swannodette/om)'s cursors.

It aims at providing a centralized model holding an application's state and can be paired with **React** easily through mixins, higher order components, wrapper components or decorators (available [there](https://github.com/Yomguithereal/baobab-react)).

**Fun fact**: A [Baobab](http://en.wikipedia.org/wiki/Adansonia_digitata), or *Adansonia digitata*, is a very big and magnificent African tree.

## Summary

* [Example](#example)
* [Installation](#installation)
* [Usage](#usage)
  * [Basics](#basics)
    * [Instantiation](#instantiation)
    * [Cursors](#cursors)
    * [Updates](#updates)
      * [set](#set)
      * [unset](#unset)
      * [push](#push)
      * [unshift](#unshift)
      * [concat](#concat)
      * [pop](#pop)
      * [shift](#shift)
      * [splice](#splice)
      * [apply](#apply)
      * [merge](#merge)
      * [deepMerge](#deepMerge)
    * [Events](#events)
  * [Advanced](#advanced)
    * [Polymorphisms](#polymorphisms)
    * [Computed data](#computed-data-or-monkey-business)
    * [Specialized getters](#specialized-getters)
    * [Traversal](#traversal)
    * [Options](#options)
    * [History](#history)
    * [Common pitfalls](#common-pitfalls)
* [Philosophy](#philosophy)
* [Migration](#migration)
* [Contribution](#contribution)
* [License](#license)

## Example

```js
var Baobab = require('baobab');

var tree = new Baobab({
  palette: {
    colors: ['yellow', 'purple'],
    name: 'Glorious colors'
  }
});

var colorsCursor = tree.select('palette', 'colors');

colorsCursor.on('update', function() {
  console.log('Selected colors have updated!');
});

colorsCursor.push('orange');
```

## Installation

If you want to use **Baobab** with node.js or browserify/webpack etc., you can use npm.

```sh
npm install baobab

# Or if you need the latest dev version
npm install git+https://github.com/Yomguithereal/baobab.git
```

If you want to use it in the browser, just include the minified script located [here](https://raw.githubusercontent.com/Yomguithereal/baobab/master/build/baobab.min.js).

Note that the library comes along with its own declaration files so you can use it comfortably with TypeScript also.

```html

```

Or install with bower:

```js
bower install baobab
```

The library (as a standalone) currently weighs ~8kb gzipped.

## Usage

### Basics

#### Instantiation

Creating a tree is as simple as instantiating *Baobab* with an initial data set.

```js
var Baobab = require('baobab');

var tree = new Baobab({hello: 'world'});

// Retrieving data from your tree
tree.get();
>>> {hello: 'world'}
```

#### Cursors

Then you can create cursors to easily access nested data in your tree and listen to changes concerning the part of the tree you selected.

```js
// Considering the following tree
var tree = new Baobab({
  palette: {
    name: 'fancy',
    colors: ['blue', 'yellow', 'green']
  }
});

// Creating a cursor on the palette
var paletteCursor = tree.select('palette');
paletteCursor.get();
>>> {name: 'fancy', colors: ['blue', 'yellow', 'green']}

// Creating a cursor on the palette's colors
var colorsCursor = tree.select('palette', 'colors');
colorsCursor.get();
>>> ['blue', 'yellow', 'green']

// Creating a cursor on the palette's third color
var thirdColorCursor = tree.select('palette', 'colors', 2);
thirdColorCursor.get();
>>> 'green'

// Note that you can also perform subselections if needed
var colorCursor = paletteCursor.select('colors');
```

#### Updates

A *baobab* tree can obviously be updated. However, one has to understand that, even if you can write the tree synchronously, `update` events won't be, at least by default, fired until next frame.

If you really need to fire an update synchronously (typically if you store a form's state within your app's state, for instance), your remain free to use the `tree.commit()` method or tweak the tree's [options](#options) to fit your needs.

**Important**: Note that the tree, being a persistent data structure, will shift the references of the objects it stores in order to enable *immutable* comparisons between one version of the state and another (this is especially useful when using strategies as such as React's [pure rendering](https://facebook.github.io/react/docs/pure-render-mixin.html)).

*Example*

```js
var tree = new Baobab({hello: 'world'});

var initialState = tree.get();
tree.set('hello', 'monde');

// After asynchronous update...
assert(initialState !== tree.get());
```

---

* [tree/cursor.set](#set)
* [tree/cursor.unset](#unset)
* [tree/cursor.push](#push)
* [tree/cursor.unshift](#unshift)
* [tree/cursor.concat](#concat)
* [tree/cursor.pop](#pop)
* [tree/cursor.shift](#shift)
* [tree/cursor.splice](#splice)
* [tree/cursor.apply](#apply)
* [tree/cursor.merge](#merge)
* [tree/cursor.deepMerge](#deepMerge)

---

tree/cursor.set

Replaces value at the given key or the cursor's value altogether if no value is supplied.

It will also work if you want to replace a list's item.

```js
// Replacing the cursor's value
var newValue = cursor.set(newValue);

// Setting a precise key
var newValue = cursor.set('key', newValue);

// Setting a nested key
var newValue = cursor.set(['one', 'two'], newValue);
var newValue = cursor.select('one', 'two').set(newValue);
var newValue = cursor.select('one').set('two', newValue);
```

tree/cursor.unset

Unsets the given key.

It will also work if you want to delete a list's item.

```js
// Removing data at cursor
cursor.unset();

// Removing a precise key
cursor.unset('key');

// Removing a nested key
cursor.unset(['one', 'two']);
```

tree/cursor.push

Pushes a value into the selected list. This will of course fail if the selected node is not a list.

```js
// Pushing a value
var newList = cursor.push(newValue);

// Pushing a value in the list at key
var newList = cursor.push('key', newValue);

// Pushing into a nested path
var newList = cursor.push(['one', 'two'], newValue);
var newList = cursor.select('one', 'two').push(newValue);
var newList = cursor.select('one').push('two', 'world');
```

tree/cursor.unshift

Unshifts a value into the selected list. This will of course fail if the selected node is not a list.

```js
// Unshifting a value
var newList = cursor.unshift(newValue);

// Unshifting a value in the list at key
var newList = cursor.unshift('key', newValue);

// Unshifting into a nested path
var newList = cursor.unshift(['one', 'two'], newValue);
var newList = cursor.select('one', 'two').unshift(newValue);
var newList = cursor.select('one').unshift('two', newValue);
```

tree/cursor.concat

Concatenates a list into the selected list. This will of course fail if the selected node is not a list.

```js
// Concatenating a list
var newList = cursor.concat(list);

// Concatenating a list in the list at key
var newList = cursor.concat('key', list);

// Concatenating into a nested path
var newList = cursor.concat(['one', 'two'], list);
var newList = cursor.select('one', 'two').concat(list);
var newList = cursor.select('one').concat('two', list);
```

tree/cursor.pop

Removes the last item of the selected list. This will of course fail if the selected node is not a list.

```js
// Popping the list
var newList = cursor.pop();

// Popping the list at key
var newList = cursor.pop('key');

// Popping list at path
var newList = cursor.pop(['one', 'two']);
var newList = cursor.select('one', 'two').pop();
var newList = cursor.select('one').pop('two');
```

tree/cursor.shift

Removes the first item of the selected list. This will of course fail if the selected node is not a list.

```js
// Shifting the list
var newList = cursor.shift();

// Shifting the list at key
var newList = cursor.shift('key');

// Shifting list at path
var newList = cursor.shift(['one', 'two']);
var newList = cursor.select('one', 'two').shift();
var newList = cursor.select('one').shift('two');
```

tree/cursor.splice

Splices the selected list. This will of course fail if the selected node is not a list.

The `splice` specifications works the same as for [`Array.prototype.splice`](https://developer.mozilla.org/fr/docs/Web/JavaScript/Reference/Objets_globaux/Array/splice).
There is one exception though: Per specification, splice deletes no values if the `deleteCount` argument is not parseable as a number.
The `splice` implementation of Baobab instead throws an error, if the given `deleteCount` argument could not be parsed.

```js
// Splicing the list
var newList = cursor.splice([1, 1]);

// Omitting the deleteCount argument makes splice delete no elements.
var newList = cursor.splice([1]);

// Inserting an item etc.
var newList = cursor.splice([1, 0, 'newItem']);
var newList = cursor.splice([1, 0, 'newItem1', 'newItem2']);

// Splicing the list at key
var newList = cursor.splice('key', [1, 1]);

// Splicing list at path
var newList = cursor.splice(['one', 'two'], [1, 1]);
var newList = cursor.select('one', 'two').splice([1, 1]);
var newList = cursor.select('one').splice('two', [1, 1]);
```

tree/cursor.apply

Applies the given function to the selected value.

```js
var inc = function(nb) {
  return nb + 1;
};

// Applying the function
var newList = cursor.apply(inc);

// Applying the function at key
var newList = cursor.apply('key', inc);

// Applying the function at path
var newList = cursor.apply(['one', 'two'], inc);
var newList = cursor.select('one', 'two').apply(inc);
var newList = cursor.select('one').apply('two', inc);
```

tree/cursor.merge

Shallow merges the selected object with another one. This will of course fail if the selected node is not an object.

```js
// Merging
var newList = cursor.merge({name: 'John'});

// Merging at key
var newList = cursor.merge('key', {name: 'John'});

// Merging at path
var newList = cursor.merge(['one', 'two'], {name: 'John'});
var newList = cursor.select('one', 'two').merge({name: 'John'});
var newList = cursor.select('one').merge('two', {name: 'John'});
```

tree/cursor.deepMerge

Deep merges the selected object with another one. This will of course fail if the selected node is not an object.

```js
// Merging
var newList = cursor.deepMerge({user: {name: 'John'}});

// Merging at key
var newList = cursor.deepMerge('key', {user: {name: 'John'}});

// Merging at path
var newList = cursor.deepMerge(['one', 'two'], {user: {name: 'John'}});
var newList = cursor.select('one', 'two').deepMerge({user: {name: 'John'}});
var newList = cursor.select('one').deepMerge('two', {user: {name: 'John'}});
```

#### Events

Whenever an update is committed, events are fired to notify relevant parts of the tree that data was changed so that bound elements, UI components, for instance, may update.

Note however that **only** relevant cursors will be notified of a change.

Events can be bound to either the tree or cursors using the `on` method.

*Example*

```js
// Considering the following tree
var tree = new Baobab({
  users: {
    john: {
      firstname: 'John',
      lastname: 'Silver'
    },
    jack: {
      firstname: 'Jack',
      lastname: 'Gold'
    }
  }
});

// And the following cursors
var usersCursor = tree.select('users'),
    johnCursor = usersCursor.select('john'),
    jackCursor = usersCursor.select('jack');

// If we update both users
johnCursor.set('firstname', 'John the third');
jackCursor.set('firstname', 'Jack the second');
// Every cursor above will be notified of the update

// But if we update only john
johnCursor.set('firstname', 'John the third');
// Only the users and john cursors will be notified
```

##### Tree level

*update*

Will fire if the tree is updated (this concerns the asynchronous updates of the tree).

```js
tree.on('update', function(e) {
  var eventData = e.data;

  console.log('Current data:', eventData.currentData);
  console.log('Previous data:', eventData.previousData);
  console.log('Transaction details:', eventData.transaction);
  console.log('Affected paths', eventData.paths);
});
```

*write*

Will fire whenever the tree is written (synchronously, unlike the `update` event).

```js
tree.on('write', function(e) {
  console.log('Affected path:', e.data.path);
});
```

*invalid*

Will fire if the `validate` function (see [options](#options)) returned an error for the current update.

```js
tree.on('invalid', function(e) {
  console.log('Error:', e.data.error);
});
```

*get*

Will fire whenever data is accessed in the tree.

```js
tree.on('get', function(e) {
  console.log('Path:', e.data.path);
  console.log('Solved path:', e.data.solvedPath);
  console.log('Target data:', e.data.data);
});
```

*select*

Will fire whenever a path is selected in the tree.

```js
tree.on('select', function(e) {
  console.log('Path:', e.data.path);
  console.log('Resultant cursor:', e.data.cursor);
});
```

##### Cursor level

*update*

Will fire if data watched over by the cursor has updated.

```js
cursor.on('update', function(e) {
  var eventData = e.data;
  console.log('Current data:', eventData.currentData);
  console.log('Previous data:', eventData.previousData);
});
```

##### N.B.

For more information concerning **Baobab**'s event emitting, see the [emmett](https://github.com/jacomyal/emmett) library.

### Advanced

#### Polymorphisms

If you ever need to, know that there are many ways to select and retrieve data within a *baobab*.

```js
var tree = new Baobab({
  palette: {
    name: 'fancy',
    colors: ['blue', 'yellow', 'green'],
    currentColor: 1,
    items: [{id: 'one', value: 'Hey'}, {id: 'two', value: 'Ho'}]
  }
});

// Selecting
var colorsCursor = tree.select('palette', 'colors');
var colorsCursor = tree.select(['palette', 'colors']);
var colorsCursor = tree.select('palette').select('colors');

var paletteCursor = tree.select('palette');

// Retrieving data
colorsCursor.get(1);
>>> 'yellow'

paletteCursor.get('colors', 2);
>>> 'green'

tree.get('palette', 'colors');
tree.get(['palette', 'colors']);
>>> ['blue', 'yellow', 'green']

// Retrieving or selecting data by passing a function in the path
var complexCursor = tree.select('palette', 'colors', function(color) {
  return color === 'green';
});

tree.get('palette', 'colors', function(color) {
  return color === 'green';
});
>>> 'green'

// Retrieving or selecting data by passing a descriptor object in the path
var complexCursor = tree.select('palette', 'items', {id: 'one'}, 'value');
tree.get('palette', 'items', {id: 'one'}, 'value');
>>> 'Hey'

// Creating a blank tree
var blankTree = new Baobab();
```

**Note**: when using a function or a descriptor object in a path, you are not filtering but rather selecting the first matching element. (It's actually the same as using something like [lodash](https://lodash.com/docs#find)'s `_.find`).

#### Computed data or ""Monkey Business""

For convenience, **Baobab** allows you to store computed data within the tree.

It does so by letting you create ""monkeys"" that you should really consider as dynamic nodes within your tree (*v1 users*: ""monkeys"" are merely the evolution of ""facets"").

As such, while monkeys represent reduction of the current state (a filtered list used by multiple components throughout your app, for instance), they do have a physical existence within the tree.

This means that you can add / modify / move / remove monkeys from the tree at runtime and place them wherever you want.

The reason why computed data now sits within the tree itself is so that components don't need to know from which kind of data, static or computed, they must draw their dependencies and so that read/select API might stay the same across the whole library.

**Example**

```js
var monkey = Baobab.monkey;
// Or if you hate similes and fancy naming
var dynamicNode = Baobab.dynamicNode;

// Declarative definition syntax
var tree = new Baobab({
  user: {
    name: 'John',
    surname: 'Smith',
    fullname: monkey({
      cursors: {
        name: ['user', 'name'],
        surname: ['user', 'surname']
      },
      get: function(data) {
        return data.name + ' ' + data.surname;
      }
    })
  },
  data: {
    messages: [
      {from: 'John', txt: 'Hey'},
      {from: 'Jack', txt: 'Ho'}
    ],
    fromJohn: monkey({
      cursors: {
        messages: ['data', 'messages'],
      },
      get: function(data) {
        return data.messages.filter(function(m) {
          return m.from === 'John';
        });
      }
    })
  }
});

// Alternate shorthand definition syntax
var tree = new Baobab({
  user: {
    name: 'John',
    surname: 'Smith',
    fullname: monkey(
      ['user', 'name'],
      ['user', 'surname'],
      function(name, surname) {
        return name + ' ' + surname;
      }
    )
  },
  data: {
    messages: [
      {from: 'John', txt: 'Hey'},
      {from: 'Jack', txt: 'Ho'}
    ],
    fromJohn: monkey(
      ['data', 'messages'],
      function(messages) {
        return messages.filter(function(m) {
          return m.from === 'John';
        });
      }
    )
  }
});

// Possibility to disable a single monkey's immutability
var tree = new Baobab({
  data: {
    users: ['Jack', 'John'],
    onlyJack: monkey({
      cursors: {
        users: ['data', 'users'],
        get: function(data) {
          return data.users.filter(function(user) {
            return user === 'Jack';
          });
        },
        options: {
          immutable: false
        }
      }
    }),

    // Using the shorthand
    onlyJohn: monkey(
      ['data', 'users'],
      function(users) {
        return users.filter(function(user) {
          return user === 'John';
        });
      },
      {immutable: false}
    )
  }
});

// Finally, know that you can use relative paths for convenience
var tree = new Baobab({
  data: {
    user: {
      name: 'John',
      surname: 'Smith',
      fullname: monkey(
        ['.', 'name'],
        ['.', 'surname'],
        function(name, surname) {
          return name + ' ' + surname;
        }
      ),
      evenMoreNested: {
        fullname: monkey(
          ['..', 'name'],
          ['..', 'surname'],
          function(name, surname) {
            return name + ' ' + surname;
          }
        )
      }
    }
  }
});

// You can then access or select data naturally
tree.get('user', 'fullname');
>>> 'John Smith'

tree.get('data', 'fromJohn');
>>> [{from: 'John', txt: 'Hey'}]

// You can also access/select data beneath a monkey
tree.get('data', 'fromJohn', 'txt');
>>> 'Hey'

var cursor = tree.select('data', 'fromJohn', 'txt');

// Just note that computed data node is read-only and that the tree
// will throw if you try to update a path lying beyond a computed node
tree.set(['data', 'fromJohn', 'txt'], 'Yay');
>>> Error!

// You can add / remove / modify a monkey at runtime using the same API
tree.set(['data', 'fromJack'], monkey({
  cursors: {
    messages: ['data', 'messages'],
    function(messages) {
      return messages.filter(function(m) {
        return m.from === 'Jack';
      });
    }
  }
}));
```

**Notes**

* The dynamic nodes will of course automatically update whenever at least one of the watched paths is updated.
* The dynamic nodes are lazy and won't actually be computed before you get them (plus they will only compute once before they need to change, so if you get the same dynamic node twice, the computation won't rerun).
* There are cases where it is clearly overkill to rely on a dynamic node. For instance, if only a single component of your app needs to access a computed version of the central state, then compute this version into the rendering logic of said component for simplicity's sake (a React component's render function for instance). Dynamic nodes are somewhat part of an optimization scheme.
* Know that the `tree/cursor.serialize` method exists would you need to retrieve data stripped of dynamic nodes from your tree.
* For the time being, placing monkeys beneath array nodes is not allowed for performance reasons.

#### Specialized getters

**tree/cursor.exists**

Check whether a specific path exists within the tree (won't fire a `get` event).

```js
// Probably true
tree.exists();

// Does the cursor points at an existing path?
cursor.exists();

// Can also take a path
tree.exists('hello');
tree.exists('hello', 'message');
tree.exists(['hello', 'message']);
```

**tree/cursor.clone**

Shallow clone the cursor's data. The method takes an optional nested path.

```js
var tree = new Baobab({user: {name: 'John'}}),
    cursor = tree.select('user');

assert(cursor.get() !== cursor.clone());
```

**tree/cursor.deepClone**

Same as the `tree/cursor.clone` except that it will deep clone the data.

**tree/cursor.serialize**

Retrieve only raw data (therefore avoiding computed data) from the tree or a cursor.

This is useful when you want to serialize your tree into JSON, for instance.

```js
tree.serialize();
cursor.serialize();

// Can also take a path
tree.serialize('hello');
tree.serialize('hello', 'message');
tree.serialize(['hello', 'message']);
```

**tree.watch**

Create a watcher that will fire an `update` event if any of the given paths is affected by a transaction.

This is useful to create modules binding a state tree to UI components.

```js
// Considering the following tree
var tree = new Baobab({
  one: {
    name: 'John'
  },
  two: {
    surname: 'Smith'
  }
});

var watcher = tree.watch({
  name: ['one', 'name'],
  surname: ['two', 'surname']
});

watcher.on('update', function(e) {
  // One of the watched paths was updated!
});

watcher.get();
>>> {
  name: 'John',
  surname: 'Smith'
}
```

**tree/cursor.project**

Retrieve data from several parts of the tree by following the given projection:

```js
// Considering the following tree
var tree = new Baobab({
  one: {
    name: 'John'
  },
  two: {
    surname: 'Smith'
  }
});

// Using an object projection
tree.project({
  name: ['one', 'name'],
  surname: ['two', 'surname']
});
>>> {name: 'John', surname: 'Smith'}

// Using an array projection
tree.project([
  ['one', 'name'],
  ['two', 'surname']
]);
>>> ['John', 'Smith']
```

#### Traversal

*Getting root cursor*

```js
var tree = new Baobab({first: {second: 'yeah'}}),
    cursor = tree.select('first');

var rootCursor = tree.root;
// or
var rootCursor = cursor.root();
```

*Going up in the tree*

```js
var tree = new Baobab({first: {second: 'yeah'}})
    secondCursor = tree.select('first', 'second');

var firstCursor = secondCursor.up();
```

*Going left/right/down in lists*

```js
var tree = new Baobab({
  list: [[1, 2], [3, 4]],
  longList: ['one', 'two', 'three', 'four']
});

var listCursor = tree.select('list'),
    twoCursor = tree.select('longList', 1);

listCursor.down().right().get();
>>> [3, 4]

listCursor.select(1).down().right().get();
>>> 4

listCursor.select(1).down().right().left().get();
>>> 3

twoCursor.leftmost().get();
>>> 'one'

twoCursor.rightmost().get();
>>> 'four'
```

*Mapping cursors over a list node*

```js
var tree = new Baobab({list: [1, 2, 3]});

tree.select('list').map(function(cursor, i) {
  console.log(cursor.get());
});
>>> 1
>>> 2
>>> 3
```

*Getting information about the cursor's location in the tree*

```js
cursor.isRoot();
cursor.isBranch();
cursor.isLeaf();
```

#### Options

You can pass those options at instantiation.

```js
var baobab = new Baobab(

  // Initial data
  {
    palette: {
      name: 'fancy',
      colors: ['blue', 'green']
    }
  },

  // Options
  {
    autoCommit: false
  }
)
```

* **autoCommit** *boolean* [`true`]: should the tree auto commit updates or should it let the user do so through the `commit` method?
* **asynchronous** *boolean* [`true`]: should the tree delay the update to the next frame or fire them synchronously?
* **immutable** *boolean* [`true`]: should the tree's data be immutable? Note that immutability is performed through `Object.freeze` and should be disabled in production for performance reasons.
* **lazyMonkeys** *boolean* [`true`]: should the monkeys be lazy? Disable this option for easier debugging in your console (getter functions are sometimes hard to read in the console).
* **monkeyBusiness** *boolean* [`true`]: should the tree support monkeys? Disabling this yields significant performance boost for large trees without monkeys.
* **persistent** *boolean* [`true`]: should the tree be persistent. Know that disabling this option, while bringing a significant performance boost on heavy data, will make you lose the benefits of your tree's history and `O(1)` comparisons of objects.
* **pure** *boolean* [`true`]: by default, on `set` and `apply` operations, the tree will check if the given value and the target node are stricly equal. If they indeed are, the tree won't update.
* **validate** *function*: a function in charge of validating the tree whenever it updates. See below for an example of such function.
* **validationBehavior** *string* [`rollback`]: validation behavior of the tree. If `rollback`, the tree won't apply the current update and fire an `invalid` event while `notify` will only emit the event and let the tree enter the invalid state anyway.

*Validation function*

```js
function validationFunction(previousState, newState, affectedPaths) {
  // Perform validation here and return an error if
  // the tree is invalid
  if (!valid)
    return new Error('Invalid tree because of reasons.');
}

var tree = new Baobab({...}, {validate: validationFunction});
```

#### History

**Baobab** lets you record the successive states of any cursor so you can seamlessly implement undo/redo features.

*Example*

```js
// Synchronous tree so that examples are simpler
var baobab = new Baobab({colors: ['blue']}, {asynchronous: false}),
    cursor = baobab.select('colors');

// Starting to record state, with 10 records maximum
cursor.startRecording(10);

cursor.push('yellow');
cursor.push('purple');
cursor.push('orange');

cursor.get();
>>> ['blue', 'yellow', 'purple', 'orange']

cursor.undo();
cursor.get();
>>> ['blue', 'yellow', 'purple']

cursor.undo(2);
cursor.get();
>>> ['blue']
```

*Starting recording*

If you do not provide a maximum number of records, will record everything without any limit.

```js
cursor.startRecording(maxNbOfRecords);
```

*Stoping recording*

```js
cursor.stopRecording();
```

*Undoing*

```js
cursor.undo();
cursor.undo(nbOfSteps);
```

*Clearing history*

```js
cursor.clearHistory();
```

*Checking if the cursor has an history*

```js
cursor.hasHistory();
```

*Retrieving the cursor's history*

```js
cursor.getHistory();
```

#### Common pitfalls

**Releasing**

In most complex use cases, you might need to release the manipulated objects,
i.e. kill their event emitters and wipe their associated data. For example,
cursors with a dynamic path (e.g. `var cursor = tree.select(['items', { id: 5 }])`), will
always create a cursor with listeners that need to be released when you are done
using the cursor.

Thus, any tree or cursor object can be cleared from memory by using the `release` method.

```js
tree.release();
cursor.release();
watcher.release();
```

Note also that releasing a tree will consequently and automatically release every of its cursors and computed data nodes.

## Philosophy

**User interfaces as pure functions**

User interfaces should be, as far as possible, considered as pure functions. Baobab is just a way to provide the needed arguments, i.e. the data representing your app's state, to such a function.

Considering your UIs like pure functions comes along with collateral advantages like easy undo/redo features, state storing (just save your tree in the `localStorage` and here you go) and easy usage in both client & server.

**Only data should enter the tree**

You shouldn't try to shove anything else than raw data into the tree. The tree hasn't been conceived to hold classes or fancy indexes with many circular references and cannot perform its magic on it. But, probably such magic is not desirable for those kind of abstractions anyway.

That is to say the data you insert into the tree should logically be JSON-serializable else you might be missing the point.

## Migration

**From v1 to v2**

* The tree is now immutable by default (but you can shunt this behavior through a dedicated [option](#options)).
* Writing to the tree is now synchronous for convenience. Updates remain asynchronous for obvious performance reasons.
* You cannot chain update methods now since those will return the affected node's data to better tackle immutability.
* The strange concat-like behavior of the `push` and `unshift` method was dropped in favor of the `concat` method.
* Facets are now full-fledged dynamic nodes called monkeys.
* The weird `$cursor` sugar has been dropped.
* The update specifications have been dropped.

**From v0.4.x to v1**

A lot of changes occurred between `0.4.x` and `1.0.0`. Most notable changes being the following ones:

* The tree now shift references by default.
* React integration has improved and is now handled by [baobab-react](https://github.com/Yomguithereal/baobab-react).
* `cursor.edit` and `cursor.remove` have been replaced by `cursor.set` and `cursor.unset` single argument polymorphisms.
* A lot of options (now unnecessary) have been dropped.
* Validation is no longer handled by [`typology`](https://github.com/jacomyal/typology) so you can choose you own validation system and so the library can remain lighter.
* Some new features such as: `$splice`, facets and so on...

For more information, see the [changelog](./CHANGELOG.md).

## Contribution

See [CONTRIBUTING.md](CONTRIBUTING.md).

## License
MIT
",,2014-12-03T10:00:42Z,2022-05-10T23:49:10Z,46,38,3149,70,"('Yomguithereal', 705), ('Zacharias Björngren', 7), ('anthony-redFox', 6), ('jrust', 4), ('Nimelrian', 4), ('jondot', 4), ('christianalfoni', 4), ('jacomyal', 3), ('BrendanAnnable', 3), ('denisw', 3), ('roark', 3), ('fmal', 2), ('charlieschwabacher', 2), ('Zache', 2), ('Tijs Hendriks', 2), ('Matej Kieres', 2), ('kirjs', 2), ('nivekmai', 2), ('jblz', 2), ('hnordt', 2), ('fraunigai', 2), ('mkuklis', 1), ('Niklas van Megen', 1), ('ogennadi', 1), ('Rodolfo Rodriguez', 1), ('remidej', 1), ('tschwecke', 1), ('vog', 1), ('angus-c', 1), ('bverjat', 1), ('huntr.dev | the place to protect open source', 1), ('nikvm', 1), ('pindamonhangaba', 1), ('basicdays', 1), ('marciaga', 1), ('marcin-mazurek', 1), ('Luqmaan Dawoodjee', 1), ('antimatter15', 1), ('bebraw', 1), ('Tuhis', 1), ('zerkms', 1), ('ivan-kleshnin', 1), ('elibarzilay', 1), ('cyrusbowman', 1), ('cvallance', 1), ('alexmingoia', 1)",25,20,
DICL/FAST_FAIR,Endurable Transient Inconsistency in Byte-Addressable Persistent B+-Tree,"# FAST_FAIR
Implementation of the paper, ""__Endurable Transient Inconsistency in Byte-Addressable Persistent B+-Tree__"".

The paper is to appear in [FAST 2018](https://www.usenix.org/conference/fast18).

Failure-Atomic ShifT(FAST) and Failure-Atomic In-place Rebalancing(FAIR) are simple and novel algorithms that make B+-Tree tolerant againt system failures without expensive COW or logging for Non-Volatile Memory(NVM).
A B+-Tree with FAST and FAIR can achieve high performance comparing to the-state-of-the-art data structures for NVM.
Because the B+-Tree supports the sorted order of keys like a legacy B+-Tree, it is also beneficial for range queries.

In addition, a read query can detect a transient inconsistency in a B+-Tree node during a write query is modifying it.
It allows read threads to search keys without any lock. That is, the B+-Tree with FAST and FAIR increases throughputs of multi-threaded application with lock-free search.

We strongly recommend to refer to the paper for the details.

* Directories 
  * single - a single thread version without lock
  * concurrent - a multi-threaded version with std::mutex in C++11

* How to run (single)
1. git clone https://github.com/DICL/FAST_FAIR.git
2. cd FAST_FAIR/single
3. make
4. `./btree -n [the # of data] -w [write latency of NVM] -i [path]` (e.g. ./btree -n 10000 -w 300 -i ~/input.txt)

* How to run (concurrent)
1. git clone https://github.com/DICL/FAST_FAIR.git
2. cd FAST_FAIR/concurrent
3. make
4. There are two versions of concurrent test programs - One is only search and only insertion, the other is a mixed workload.
    1. `./btree_concurrent -n [the # of data] -w [write latency of NVM] -i [input path] -t [the # of threads]` (e.g. ./btree -n 10000 -w 300 -i ~/input.txt -t 16)
    2. `./btree_concurrent_mixed -n [the # of data] -w [write latency of NVM] -i [input path] -t [the # of threads]` (e.g. ./btree -n 10000 -w 300 -i ~/input.txt -t 16)
",,2018-01-12T14:57:26Z,2021-03-12T09:04:01Z,4,4,114,15,"('deukyeon', 9), ('bsnam', 1), ('okie90', 1), ('Skian12', 1)",3,3,
mbebenita/Broadway,A JavaScript H.264 decoder.,"Broadway.js
===========
A JavaScript H.264 decoder.


View a Live Demo:  
http://mbebenita.github.io/Broadway/foxDemo.html  
http://mbebenita.github.io/Broadway/storyDemo.html  
http://mbebenita.github.io/Broadway/treeDemo.html  

The video player first needs to download the entire video before it can start playing, thus appearing to be a bit slow at first, so have patience. You can start the video by clicking on each player. The top left player runs on the main thread, while the remaining players run in background worker threads.

Use an example node app as template:  
https://github.com/soliton4/BroadwayStream  

Technical info
==============

The demo is Android's H.264 decoder compiled with Emscripten to JavaScript, then further optimized with
Google's JavaScript closure compiler and further optimized by hand to use WebGL.

Building the demo:

Install and configure Emscripten (https://github.com/kripken/emscripten)  
The current version of Broadway was built with emscripten 1.35.12  

The code for the demo is in the Decoder folder, to build it run the make.py python script. (Requires at least python 2.7)

Encoding Video
==============

The decoder expects an .mp4 file and does not support weighted prediction for P-frames and CABAC entropy encoding. To create such bitstreams use ffmpeg and x264 with the following command line options:

```
ffmpeg -y -i sourceFile -r 30000/1001 -b:a 2M -bt 4M -vcodec libx264 -pass 1 -coder 0 -bf 0 -flags -loop -wpredp 0 -an targetFile.mp4
```

API
===

Player.js, Decoder.js and YUVWebGLCanvas.js all have a unified module definition.  
You can use them as plain js files or with common.js / AMD  

# Player.js:  

```
var p = new Player({
  
});

p.canvas; // the canvas - put it where you want it

p.decode();
```

## Options:  

useWorker true / false  
Decode in a worker thread  

workerFile   
Path to Decoder.js. Only neccessary when using worker. Defaults to ""Decoder.js""  

webgl true / ""auto"" / false  
Use webgl. defaults to ""auto""  

size { width: , height:  }  
Initial size of the canvas. Canvas will resize after video starts streaming.  

## Properties:  

canvas  
domNode  

refers to the canvas element.  

## methods:  

decode ()

Feed the decoder with h264 stream data.  


# Decoder.js:  

```
var p = new Decoder({
  
});

p.onPictureDecoded; // override with a callback function

p.decode();
```

## options:  

rgb true / false  
If true will convert the image to rgb. sligtly slower.  

## properties:  

onPictureDecoded  callback function(, width, height)

Will be called for each frame.

## methods:  

decode ()

Feed the decoder with h264 stream data.  


# [Real World Uses of Broadway.js](https://github.com/mbebenita/Broadway/wiki/Real-World-Uses)
",,2011-10-14T18:20:43Z,2023-01-22T15:40:35Z,14,12,2714,116,"('Michael Bebenita', 63), ('soliton4', 54), ('kripken', 45), ('mbebenita', 32), ('p01', 4), ('saste', 3), ('Bill Papadimas', 2), ('emersion', 2), ('evolvedhat', 2), ('fresswolf', 1), ('hikari-no-yume', 1), ('bkw', 1), ('samsamm777', 1), ('hotsphink', 1)",5,5,
monetate/s3nb,S3-backed notebook manager for IPython,"# S3-backed notebook manager for IPython

## Setup

1. Install:

    from pypi:
    ```bash
    pip install s3nb
    ```

    from source with pip:
    ```bash
    pip install git+https://github.com/monetate/s3nb
    ```

    or from source the old fashioned way:
    ```bash
    git clone git@github.com:monetate/s3nb.git
    cd s3nb
    python ./setup.py install
    ```

2. Configure

    ``` bash
    # set this - notebooks will be stored relative to this uri
    S3_NOTEBOOK_URI=s3://path/to/notebooks/

    # and this
    IPYTHON_MAJOR_VERSION=4

    # optionally set this - checkpoints will be stored locally, relative to this path (for IPython 3)
    CHECKPOINT_ROOT_DIR=~/.checkpoints

    # optionally set this
    PROFILE=s3nbserver

    # shouldn't need to edit beyond this point

    ## IPython 2.x
    IPYNB_MANAGER=S3NotebookManager
    IPYNB_MANAGER_CFG=notebook_manager_class

    ## IPython 3.x or 4.x
    if [ $IPYTHON_MAJOR_VERSION == 3 ] || [ $IPYTHON_MAJOR_VERSION == 4 ]; then
        IPYNB_MANAGER=S3ContentsManager
        IPYNB_MANAGER_CFG=contents_manager_class
    fi

    IPYTHONDIR=${IPYTHONDIR:-$HOME/.ipython}
    PROFILE_DIR=${IPYTHONDIR}/profile_${PROFILE}

    if [ ! -d $PROFILE_DIR ]; then
        ipython profile create $PROFILE
        IPYNB_CONFIG=${PROFILE_DIR}/ipython_notebook_config.py
        mv $IPYNB_CONFIG $IPYNB_CONFIG.orig
        cat > $IPYNB_CONFIG <<EOF
    c = get_config()
    c.NotebookApp.${IPYNB_MANAGER_CFG} = 's3nb.${IPYNB_MANAGER}'
    c.${IPYNB_MANAGER}.s3_base_uri = '$S3_NOTEBOOK_URI'
    EOF
    fi


    if  [ $IPYTHON_MAJOR_VERSION == 3 ] || [$IPYTHON_MAJOR_VERSION == 4 ] ; then
        echo ""c.S3ContentsManager.checkpoints_kwargs = {'root_dir': '${CHECKPOINT_ROOT_DIR}'}""  >> ${IPYNB_CONFIG}
    fi
    ```

3. If you haven't already, configure AWS variables for boto.  [Follow these instructions](http://blogs.aws.amazon.com/security/post/Tx3D6U6WSFGOK2H/A-New-and-Standardized-Way-to-Manage-Credentials-in-the-AWS-SDKs).

4. Run
    ``` bash
    jupyter notebook --config=~/.ipython/s3nbserver/ipython_notebook_config.py
    ```

## Development

1. Provision a virtual machine with `vagrant up`
2. Create an IPython profile with `make configure -e S3_BASE_URI=YOUR_BUCKET`
4. Share you AWS credentials with the virtual machine with `make creds -e AWS_USER=YOUR_USER`
4. Run the notebook server with `make run`
",,2014-08-27T22:19:27Z,2017-05-01T19:52:36Z,6,4,28,75,"('Gil Raphaelli', 43), ('AustinRochford', 28), ('hanleyhansen', 3), ('JeffPatti', 2), ('patrick-russell', 2), ('AustinRochford', 1)",1,0,
lmatteis/node-trello,Node wrapper for Trello's HTTP API.,"# Node wrapper for Trello’s HTTP API.
[This project is now maintained by adunkman.](https://github.com/adunkman/node-trello)

All pull requests and issues should be directed at that repository.",,2011-12-18T19:36:21Z,2016-12-04T09:08:35Z,7,4,98,8,"('lmatteis', 17), ('bovine', 4), ('Herman A. Junge', 3), ('adunkman', 1), ('francois2metz', 1), ('Matthias Luebken', 1), ('Micah Silverman', 1)",4,2,
Ricar123/GRUPO_B,"Trabajos subidos por los alumnos de 2ºBAC A,B,C ",,,2018-09-27T10:04:43Z,2019-11-06T08:10:54Z,18,18,3,1,"('Ricar123', 233), ('VikAlex', 37), ('raulmj01', 36), ('alexdiaz2601', 29), ('Andresitopg', 28), ('Adrins01', 25), ('SaulLozano', 25), ('inesfdzfdz17', 23), ('valdi734', 19), ('trabajosTICIIRoberto', 19), ('gonzalez999', 15), ('Amanda-MF', 13), ('Miguel462', 12), ('jorgels24', 10), ('Pablo-PMR', 9), ('Seergiioo00', 6), ('ericmn2112', 1), ('fergballes', 1)",2,2,
Gaohaoyang/cv,GaoHaoyang's Curriculum Vitae,"# cv

Gao Haoyang's Curriculum Vitae

我的个人在线简历

http://gaohaoyang.github.io/cv/
",,2015-06-30T13:17:54Z,2015-09-04T07:26:53Z,1,1,45,4,"('Gaohaoyang', 32)",0,0,
Emudofus/Dofus,Dofus client's sources,"Dofus Source Code
=================

Decompilation of Dofus Beta client version :

- 2.22
- 2.23
- 2.26 _(current)_

Ui Modules version :

- 2.26 _(current)_

To see previous versions, please check old commits and [master](https://github.com/Emudofus/Dofus/tree/master) branch.
",,2012-08-25T16:25:27Z,2015-05-04T12:11:22Z,4,3,46,15,"('LuaxY', 24), ('volgar1x', 15), ('vendethiel', 2), ('Sorrow', 1)",1,0,
topcoat/topcoat.github.com,Topcoat's home,"# topcoat.github.com

TopCoat Organization

### Adding a blog post
Watch [this screencast](http://vimeo.com/topcoat/contributing-to-the-topcoat-blog).

### Making Changes

1. Clone the repo locally:

	```shell
	git clone git@github.com:topcoat/topcoat.github.com.git
	```
2. Install [DocPad](http://docpad.org/) (make sure you have [node](http://www.nodejs.org) and npm installed):

	```shell
	npm install -g docpad
	```
3. Install all the docpad plugins (configuration located in the `package.json` file):

	```shell
	npm install
	```
4. You can start up docpad to test out your changes locally:

	```shell
	docpad run
	```
5. Open your browser and go to http://localhost:9778/
	* Live reload is enabled, so while you are making changes and saving the files, the browser should update automatically.
	* To stop docpad hit `⌃ + c`
6. Make changes only to the `src/` directory, everything else could be overwritten later.
	* All the dynamic content (jade, stylus, md, etc) is in `src/documents/`, the templates are in `src/layouts/`, and static files (images, etc) are in `src/static`.
	* While docpad is running locally, it will output the files to the `out/` directory
7. When you finish making changes, stop docpad (`⌃ + c`), and generate the static site:

	```shell
	docpad generate --env static
	```
8. Deploy to git:

	```shell
	git status
	```
	(to check your changes)
	```shell
	git commit -am 'type some descriptive message here
	```
",,2013-02-14T16:34:28Z,2017-01-09T23:00:03Z,12,11,108,5,"('GarthDB', 91), ('kristoferjoseph', 34), ('nnnnic', 28), ('Kristofer Joseph', 11), ('brianleroux', 3), ('cperkinsintel', 2), ('nodoherty', 2), ('agcolom', 1), ('g1sh', 1), ('kennethormandy', 1), ('marnen', 1), ('rafaelstz', 1)",5,5,
junzis/pyModeS,Python decoder for Mode S and ADS-B signals,"The Python ADS-B/Mode-S Decoder
===============================

PyModeS is a Python library designed to decode Mode-S (including ADS-B) messages. It can be imported to your python project or used as a standalone tool to view and save live traffic data.

This is a project created by Junzi Sun, who works at `TU Delft `_, `Aerospace Engineering Faculty `_, `CNS/ATM research group `_. It is supported by many `contributors `_ from different institutions.

Introduction
------------

pyModeS supports the decoding of following types of messages:

- DF4 / DF20: Altitude code
- DF5 / DF21: Identity code (squawk code)

- DF17 / DF18: Automatic Dependent Surveillance-Broadcast (ADS-B)

  - TC=1-4  / BDS 0,8: Aircraft identification and category
  - TC=5-8  / BDS 0,6: Surface position
  - TC=9-18 / BDS 0,5: Airborne position
  - TC=19   / BDS 0,9: Airborne velocity
  - TC=28   / BDS 6,1: Airborne status [to be implemented]
  - TC=29   / BDS 6,2: Target state and status information [to be implemented]
  - TC=31   / BDS 6,5: Aircraft operational status [to be implemented]

- DF20 / DF21: Mode-S Comm-B messages

  - BDS 1,0: Data link capability report
  - BDS 1,7: Common usage GICB capability report
  - BDS 2,0: Aircraft identification
  - BDS 3,0: ACAS active resolution advisory
  - BDS 4,0: Selected vertical intention
  - BDS 4,4: Meteorological routine air report (experimental)
  - BDS 4,5: Meteorological hazard report (experimental)
  - BDS 5,0: Track and turn report
  - BDS 6,0: Heading and speed report



If you find this project useful for your research, please considering cite this tool as::

  @article{sun2019pymodes,
      author={J. {Sun} and H. {V\^u} and J. {Ellerbroek} and J. M. {Hoekstra}},
      journal={IEEE Transactions on Intelligent Transportation Systems},
      title={pyModeS: Decoding Mode-S Surveillance Data for Open Air Transportation Research},
      year={2019},
      doi={10.1109/TITS.2019.2914770},
      ISSN={1524-9050},
  }




Resources
-----------
Check out and contribute to this open-source project at:
https://github.com/junzis/pyModeS

Detailed manual on Mode-S decoding is published at:
https://mode-s.org/decode

The API documentation of pyModeS is at:
https://mode-s.org/api



Basic installation
-------------------

Installation examples::

  # stable version
  pip install pyModeS

  # conda (compiled) version
  conda install -c conda-forge pymodes

  # development version
  pip install git+https://github.com/junzis/pyModeS


Dependencies ``numpy``, and ``pyzmq`` are installed automatically during previous installations processes. 

If you need to connect pyModeS to a RTL-SDR receiver, ``pyrtlsdr`` need to be installed manually::

  pip install pyrtlsdr


Advanced installation (using c modules)
------------------------------------------

If you want to make use of the (faster) c module, install ``pyModeS`` as follows::

  # conda (compiled) version
  conda install -c conda-forge pymodes

  # stable version
  pip install pyModeS

  # development version
  git clone https://github.com/junzis/pyModeS
  cd pyModeS
  poetry install -E rtlsdr


View live traffic (modeslive)
----------------------------------------------------

General usage::

  $ modeslive [-h] --source SOURCE [--connect SERVER PORT DATAYPE]
              [--latlon LAT LON] [--show-uncertainty] [--dumpto DUMPTO]

  arguments:
   -h, --help            show this help message and exit
   --source SOURCE       Choose data source, ""rtlsdr"" or ""net""
   --connect SERVER PORT DATATYPE
                         Define server, port and data type. Supported data
                         types are: ['raw', 'beast', 'skysense']
   --latlon LAT LON      Receiver latitude and longitude, needed for the surface
                         position, default none
   --show-uncertainty    Display uncertainty values, default off
   --dumpto DUMPTO       Folder to dump decoded output, default none


Live with RTL-SDR
*******************

If you have an RTL-SDR receiver connected to your computer, you can use the ``rtlsdr`` source switch (require ``pyrtlsdr`` package), with command::

  $ modeslive --source rtlsdr


Live with network data
***************************

If you want to connect to a TCP server that broadcast raw data. use can use ``net`` source switch, for example::

  $ modeslive --source net --connect localhost 30002 raw
  $ modeslive --source net --connect 127.0.0.1 30005 beast



Example screenshot:

.. image:: https://github.com/junzis/pyModeS/raw/master/doc/modeslive-screenshot.png
   :width: 700px


Use the library
---------------

.. code:: python

  import pyModeS as pms


Common functions
*****************

.. code:: python

  pms.df(msg)                 # Downlink Format
  pms.icao(msg)               # Infer the ICAO address from the message
  pms.crc(msg, encode=False)  # Perform CRC or generate parity bit

  pms.hex2bin(str)      # Convert hexadecimal string to binary string
  pms.bin2int(str)      # Convert binary string to integer
  pms.hex2int(str)      # Convert hexadecimal string to integer
  pms.gray2int(str)     # Convert grey code to integer


Core functions for ADS-B decoding
*********************************

.. code:: python

  pms.adsb.icao(msg)
  pms.adsb.typecode(msg)

  # Typecode 1-4
  pms.adsb.callsign(msg)

  # Typecode 5-8 (surface), 9-18 (airborne, barometric height), and 20-22 (airborne, GNSS height)
  pms.adsb.position(msg_even, msg_odd, t_even, t_odd, lat_ref=None, lon_ref=None)
  pms.adsb.airborne_position(msg_even, msg_odd, t_even, t_odd)
  pms.adsb.surface_position(msg_even, msg_odd, t_even, t_odd, lat_ref, lon_ref)
  pms.adsb.surface_velocity(msg)

  pms.adsb.position_with_ref(msg, lat_ref, lon_ref)
  pms.adsb.airborne_position_with_ref(msg, lat_ref, lon_ref)
  pms.adsb.surface_position_with_ref(msg, lat_ref, lon_ref)

  pms.adsb.altitude(msg)

  # Typecode: 19
  pms.adsb.velocity(msg)          # Handles both surface & airborne messages
  pms.adsb.speed_heading(msg)     # Handles both surface & airborne messages
  pms.adsb.airborne_velocity(msg)


Note: When you have a fix position of the aircraft, it is convenient to use `position_with_ref()` method to decode with only one position message (either odd or even). This works with both airborne and surface position messages. But the reference position shall be within 180NM (airborne) or 45NM (surface) of the true position.


Decode altitude replies in DF4 / DF20
**************************************
.. code:: python

  pms.common.altcode(msg)   # Downlink format must be 4 or 20


Decode identity replies in DF5 / DF21
**************************************
.. code:: python

  pms.common.idcode(msg)   # Downlink format must be 5 or 21



Common Mode-S functions
************************

.. code:: python

  pms.icao(msg)           # Infer the ICAO address from the message
  pms.bds.infer(msg)      # Infer the Modes-S BDS register

  # Check if BDS is 5,0 or 6,0, give reference speed, track, altitude (from ADS-B)
  pms.bds.is50or60(msg, spd_ref, trk_ref, alt_ref)

  # Check each BDS explicitly
  pms.bds.bds10.is10(msg)
  pms.bds.bds17.is17(msg)
  pms.bds.bds20.is20(msg)
  pms.bds.bds30.is30(msg)
  pms.bds.bds40.is40(msg)
  pms.bds.bds44.is44(msg)
  pms.bds.bds50.is50(msg)
  pms.bds.bds60.is60(msg)



Mode-S Elementary Surveillance (ELS)
*************************************

.. code:: python

  pms.commb.ovc10(msg)      # Overlay capability, BDS 1,0
  pms.commb.cap17(msg)      # GICB capability, BDS 1,7
  pms.commb.cs20(msg)       # Callsign, BDS 2,0


Mode-S Enhanced Surveillance (EHS)
***********************************

.. code:: python

  # BDS 4,0
  pms.commb.selalt40mcp(msg)   # MCP/FCU selected altitude (ft)
  pms.commb.selalt40fms(msg)   # FMS selected altitude (ft)
  pms.commb.p40baro(msg)    # Barometric pressure (mb)

  # BDS 5,0
  pms.commb.roll50(msg)     # Roll angle (deg)
  pms.commb.trk50(msg)      # True track angle (deg)
  pms.commb.gs50(msg)       # Ground speed (kt)
  pms.commb.rtrk50(msg)     # Track angle rate (deg/sec)
  pms.commb.tas50(msg)      # True airspeed (kt)

  # BDS 6,0
  pms.commb.hdg60(msg)      # Magnetic heading (deg)
  pms.commb.ias60(msg)      # Indicated airspeed (kt)
  pms.commb.mach60(msg)     # Mach number (-)
  pms.commb.vr60baro(msg)   # Barometric altitude rate (ft/min)
  pms.commb.vr60ins(msg)    # Inertial vertical speed (ft/min)


Meteorological reports [Experimental]
**************************************

To identify BDS 4,4 and 4,5 codes, you must set ``mrar`` argument to ``True`` in the ``infer()`` function:

.. code:: python

  pms.bds.infer(msg. mrar=True) 

Once the correct MRAR and MHR messages are identified, decode them as follows:


Meteorological routine air report (MRAR)
+++++++++++++++++++++++++++++++++++++++++

.. code:: python

  # BDS 4,4
  pms.commb.wind44(msg)     # Wind speed (kt) and direction (true) (deg)
  pms.commb.temp44(msg)     # Static air temperature (C)
  pms.commb.p44(msg)        # Average static pressure (hPa)
  pms.commb.hum44(msg)      # Humidity (%)


Meteorological hazard air report (MHR)
+++++++++++++++++++++++++++++++++++++++++

.. code:: python

  # BDS 4,5
  pms.commb.turb45(msg)     # Turbulence level (0-3)
  pms.commb.ws45(msg)       # Wind shear level (0-3)
  pms.commb.mb45(msg)       # Microburst level (0-3)
  pms.commb.ic45(msg)       # Icing level (0-3)
  pms.commb.wv45(msg)       # Wake vortex level (0-3)
  pms.commb.temp45(msg)     # Static air temperature (C)
  pms.commb.p45(msg)        # Average static pressure (hPa)
  pms.commb.rh45(msg)       # Radio height (ft)



Customize the streaming module
******************************
The TCP client module from pyModeS can be re-used to stream and process Mode-S data as you like. You need to re-implement the ``handle_messages()`` function from the ``TcpClient`` class to write your own logic to handle the messages.

Here is an example:

.. code:: python

  import pyModeS as pms
  from pyModeS.extra.tcpclient import TcpClient

  # define your custom class by extending the TcpClient
  #   - implement your handle_messages() methods
  class ADSBClient(TcpClient):
      def __init__(self, host, port, rawtype):
          super(ADSBClient, self).__init__(host, port, rawtype)

      def handle_messages(self, messages):
          for msg, ts in messages:
              if len(msg) != 28:  # wrong data length
                  continue

              df = pms.df(msg)

              if df != 17:  # not ADSB
                  continue

              if pms.crc(msg) !=0:  # CRC fail
                  continue

              icao = pms.adsb.icao(msg)
              tc = pms.adsb.typecode(msg)

              # TODO: write you magic code here
              print(ts, icao, tc, msg)

  # run new client, change the host, port, and rawtype if needed
  client = ADSBClient(host='127.0.0.1', port=30005, rawtype='beast')
  client.run()


Unit test
---------
To perform unit tests, ``pytest`` must be install first.

Build Cython extensions
::

  $ make ext

Run unit tests
::

  $ make test

Clean build files
::

  $ make clean
","'ads-b', 'adsb', 'aircraft', 'ehs', 'mode-s', 'python', 'tracking'",2015-03-17T16:49:21Z,2024-03-03T16:22:24Z,32,26,521,38,"('junzis', 295), ('xoolive', 48), ('Flyer350', 11), ('Alexander Hirsch', 10), ('dependabotbot', 8), ('hv92', 7), ('dforsi', 6), ('JoseAndresMR', 5), ('Ka-zam', 5), ('boringow', 4), ('alcibiade', 3), ('TimA346', 3), ('Akasch', 3), ('JWyman482', 3), ('federicoorta', 2), ('wrobell', 1), ('tuftedocelot', 1), ('maranov', 1), ('kaback', 1), ('xander-hirsch', 1), ('astrofrog', 1), ('rwnobrega', 1), ('Richard Janssen', 1), ('Paul de Jong', 1), ('paulmadejong', 1), ('Novak, Marek', 1), ('nkruzan', 1), ('Junzi Sun', 1), ('watterso', 1), ('jhegr', 1), ('espinielli', 1), ('ctlajoie', 1)",17,12,
wiredtiger/wiredtiger,WiredTiger's source tree,"WiredTiger 11.3.0: (November 16, 2023)

This is version 11.3.0 of WiredTiger.

WiredTiger release packages and documentation can be found at:

    https://source.wiredtiger.com

The WiredTiger source code can be found at:

    https://github.com/wiredtiger/wiredtiger

WiredTiger uses JIRA for issue management:

    https://jira.mongodb.org/browse/WT

Please do not report issues through GitHub.

WiredTiger licensing information can be found at:

    https://source.wiredtiger.com/license.html

For general questions and discussion, there's a WiredTiger group:

    https://groups.google.com/group/wiredtiger-users
",'hacktoberfest',2011-12-09T00:43:19Z,2024-06-18T13:23:36Z,93,82,2150,103,"('keithbostic', 10594), ('Michael Cahill', 3261), ('agorrod', 2049), ('sueloverso', 1886), ('michaelcahill', 1126), ('ddanderson', 906), ('etienneptl', 395), ('quchenhao', 381), ('Michael Cahill', 347), ('kommiharibabu', 274), ('daveh86', 249), ('luke-pearson', 246), ('raviprakashgiri29', 170), ('tetsuo-cpp', 168), ('sulabhM', 163), ('lukech', 153), ('jiechenbo', 152), ('korteland', 137), ('ajmorton', 122), ('pmacko86', 106), ('mm-ng', 98), ('keitharnoldsmith', 96), ('Siddhartha8899', 92), ('sauclovian-wt', 90), ('markbenvenuto', 90), ('rueckstiess', 81), ('jeremythorp', 74), ('bvpvamsikrishna', 72), ('mickgraham-mongodb', 70), ('Sean04', 70), ('hbokhari', 69), ('ruby-oujo', 66), ('clarissecheah', 65), ('tammybailey', 65), ('alisonfel', 60), ('AlexeyAnisimovAU', 46), ('nehakhatri5', 41), ('y123456yz', 38), ('fedorova', 38), ('ershov', 35), ('marcbutler', 31), ('bzm-jas', 24), ('lting0804', 19), ('mariammojid', 17), ('adelinexchen', 17), ('jeremytay90', 15), ('fionaochee', 15), ('sonar3ddy', 14), ('tod-johnson-mongodb', 13), ('Pat Gunn', 12), ('bingx1', 10), ('Alex Gorrod', 8), ('Alex Gorrod', 8), ('jbergler', 8), ('GWlodarek', 8), ('JulienBalestra', 7), ('Waqas', 7), ('dgottlieb', 6), ('Alex', 6), ('Sasha Fedorova', 5), ('andym03', 5), ('amiyuki7', 4), ('acmorrow', 4), ('ZombieKim', 3), ('baiwfg2', 3), ('guddnjs91', 3), ('AGSaidi', 3), ('EC2 Default User', 2), ('Meilianggang', 2), ('Quentin Conner', 2), ('huajingyun01', 2), ('jbreams', 2), ('frasator', 1), ('qconner', 1), ('RoeyMaor', 1), ('tychoish', 1), ('turchanov', 1), ('shipujin', 1), ('wh5a', 1), ('kabu1204', 1), ('zackwintermdb', 1), ('neighbourhoodnerd', 1), ('zengwei2000', 1), ('tinfoil-knight', 1), ('JacksonDagger', 1), ('igorsol', 1), ('hyeonseok92', 1), ('Chenhao-Huang', 1), ('GeertBosch', 1), ('EshaMaharishi', 1), ('milkie', 1), ('erh', 1), ('bsamek', 1)",21,21,
coolnameismy/BabyBluetooth,":baby: The easiest way to use Bluetooth (BLE )in ios/os ,even bady can use . 一个非常容易使用的蓝牙库,适用于ios和os","
![](logo.png)

The easiest way to use Bluetooth (BLE )in ios,even bady can use. 简单易用的蓝牙库，基于CoreBluetooth的封装，并兼容ios和mac osx.

**为什么使用它？**

- 1：基于原生CoreBluetooth框架封装的轻量级的开源库，可以帮你更简单地使用CoreBluetooth API。
- 2：CoreBluetooth所有方法都是通过委托完成，代码冗余且顺序凌乱。BabyBluetooth使用block方法，可以重新按照功能和顺序组织代码，并提供许多方法减少蓝牙开发过程中的代码量。
- 3:链式方法体，代码更简洁、优雅。
- 4:通过channel切换区分委托调用，并方便切换
- 5:便利的工具方法
- 6:完善的文档，且项目处于活跃状态，不断的更新中
- 7:github上star最多的纯Bluetooth类库
- 8:包含多种类型的demo和ios蓝牙开发教程
- 9:同时支持蓝牙设备中心模式和外设模式（central model and peripheral model）

当前版本 0.7.0 

[更新说明](https://github.com/coolnameismy/BabyBluetooth/wiki/%E6%9B%B4%E6%96%B0%E8%AF%B4%E6%98%8E)


详细文档请参考wiki The full documentation of the project is available on its wiki.
# [english readme link,please click it!](https://github.com/coolnameismy/BabyBluetooth/blob/master/README_en.md)

# Table Of Contents

* [QuickExample](#user-content-QuickExample)
* [如何安装](#如何安装)
* [如何使用](#如何使用)
* [示例程序说明](#示例程序说明)
* [兼容性](#兼容性)
* [后期更新](#后期更新)
* [蓝牙学习资源](#蓝牙学习资源)
* [期待](#期待)
* [常见问题](https://github.com/coolnameismy/BabyBluetooth/issues)

# QuickExample

## 中心模式 central model 
>   app作为中心，连接其他BLE4.0外设

```objc

//导入.h文件和系统蓝牙库的头文件
#import ""BabyBluetooth.h""
//定义变量
BabyBluetooth *baby;

-(void)viewDidLoad {
    [super viewDidLoad];

    //初始化BabyBluetooth 蓝牙库
    baby = [BabyBluetooth shareBabyBluetooth];
    //设置蓝牙委托
    [self babyDelegate];
    //设置委托后直接可以使用，无需等待CBCentralManagerStatePoweredOn状态
    baby.scanForPeripherals().begin();
}

//设置蓝牙委托
-(void)babyDelegate{

    //设置扫描到设备的委托
    [baby setBlockOnDiscoverToPeripherals:^(CBCentralManager *central, CBPeripheral *peripheral, NSDictionary *advertisementData, NSNumber *RSSI) {
        NSLog(@""搜索到了设备:%@"",peripheral.name);
    }];
   
    //过滤器
    //设置查找设备的过滤器
    [baby setFilterOnDiscoverPeripherals:^BOOL(NSString *peripheralName, NSDictionary *advertisementData, NSNumber *RSSI) {
        //最常用的场景是查找某一个前缀开头的设备 most common usage is discover for peripheral that name has common prefix
        //if ([peripheralName hasPrefix:@""Pxxxx""] ) {
        //    return YES;
        //}
        //return NO;
        //设置查找规则是名称大于1 ， the search rule is peripheral.name length > 1
        if (peripheralName.length >1) {
            return YES;
        }
        return NO;
    }];

    //.......
}

```

更多蓝牙操作方法和委托请参考[wiki](https://github.com/coolnameismy/BabyBluetooth/wiki)

中心模式使用示例请参考:[BabyBluetoothAppDemo](https://github.com/coolnameismy//BabyBluetoothExamples/BabyBluetoothAppDemo)

## 外设模式 peripheral model 
>   app模拟一个，BLE4.0外设，可以被其他设备连接和使用


模拟一个有2个service和6个characteristic的外设

````objc
//导入.h文件和系统蓝牙库的头文件
#import ""BabyBluetooth.h""
//定义变量
BabyBluetooth *baby;

-(void)viewDidLoad {
    [super viewDidLoad];

    //配置第一个服务s1
    CBMutableService *s1 = makeCBService(@""FFF0"");
    //配置s1的3个characteristic
    makeCharacteristicToService(s1, @""FFF1"", @""r"", @""hello1"");//读
    makeCharacteristicToService(s1, @""FFF2"", @""w"", @""hello2"");//写
    makeCharacteristicToService(s1, genUUID(), @""rw"", @""hello3"");//可读写,uuid自动生成
    makeCharacteristicToService(s1, @""FFF4"", nil, @""hello4"");//默认读写字段
    makeCharacteristicToService(s1, @""FFF5"", @""n"", @""hello5"");//notify字段
    //配置第一个服务s2
    CBMutableService *s2 = makeCBService(@""FFE0"");
    makeStaticCharacteristicToService(s2, genUUID(), @""hello6"", [@""a"" dataUsingEncoding:NSUTF8StringEncoding]);//一个含初值的字段，该字段权限只能是只读
   
    //实例化baby
    baby = [BabyBluetooth shareBabyBluetooth];
    //配置委托
    [self babyDelegate];
    //启动外设
    baby.bePeripheral().addServices(@[s1,s2]).startAdvertising();
}

//设置蓝牙外设模式的委托
-(void)babyDelegate{

     //设置添加service委托 | set didAddService block
    [baby peripheralModelBlockOnPeripheralManagerDidUpdateState:^(CBPeripheralManager *peripheral) {
        NSLog(@""PeripheralManager trun status code: %ld"",(long)peripheral.state);
    }];
    
    //设置添加service委托 | set didAddService block
    [baby peripheralModelBlockOnDidStartAdvertising:^(CBPeripheralManager *peripheral, NSError *error) {
        NSLog(@""didStartAdvertising !!!"");
    }];
    
    //设置添加service委托 | set didAddService block
    [baby peripheralModelBlockOnDidAddService:^(CBPeripheralManager *peripheral, CBService *service, NSError *error) {
        NSLog(@""Did Add Service uuid: %@ "",service.UUID);
    }];

    //.....
}

````
  
更多蓝牙外设模式委托请参考[wiki](https://github.com/coolnameismy/BabyBluetooth/wiki)

中心模式使用示例请参考:[BluetoothStubOnIOS](https://github.com/coolnameismy//BabyBluetoothExamples/BluetoothStubOnIOS)

# 如何安装

##1 手动安装
step1:将项目Classes/objc 文件夹中的文件直接拖入你的项目中即可

step2:导入.h文件

````objc
#import ""BabyBluetooth.h""
````

##2 cocoapods
step1:add the following line to your Podfile:
````
pod 'BabyBluetooth','~> 0.7.0'
````

step2:导入.h文件
````objc
#import ""BabyBluetooth.h""
````

# 如何使用
[用法请见wiki](https://github.com/coolnameismy/BabyBluetooth/wiki)

# 示例程序说明

**BabyBluetoothExamples/BabyBluetoothAppDemo** :一个类似lightblue的程序，蓝牙操作全部使用BabyBluetooth完成。
功能：
- 1：扫描周围设备
- 2：连接设备，扫描设备的全部services和characteristic
- 3：显示characteristic，读取characteristic的value，和descriptors以及Descriptors对应的value
- 4：写0x01到characteristic
- 5：订阅/取消订阅 characteristic的notify

**BabyBluetoothExamples/BluetoothStubOnIOS** : 一个iOS程序，启动后会用手机模拟一个外设，提供2个服务和若干characteristic。
该程序作为Babybluetooth 外设模式使用的示例程序

**BabyBluetoothExamples/BabyBluetoothOSDemo** :一个mac os程序，因为os和ios的蓝牙底层方法都一样，所以BabyBluetooth可以ios/os通用。但是os程序有个好处就是直接可以在mac上跑蓝牙设备，不像ios，必须要真机才能跑蓝牙设备。所以不能真机调试时可以使用os尝试蓝牙库的使用。

功能：
- 1：扫描周围设备、连接设备、显示characteristic，读取characteristic的value，和descriptors以及Descriptors对应的value的委托设置，并使用nslog打印信息。

**BabyBluetoothExamples/BluetoothStubOnOSX** :一个mac os程序，该程序可以作为蓝牙外设使用，解决学习蓝牙时没有外设可用的囧境，并且可以作为peripheral model模式的学习示例。改程序用swift编码。




功能：
- 1：作为蓝牙外设使用，可以被发现，连接，读写，订阅
- 2：提供1个service，包含了3个characteristic，分别具有读、读写、订阅功能

# 兼容性
- 蓝牙4.0，也叫做ble，ios6以上和iPhone4s以上可以自由使用
- os和ios通用
- 蓝牙设备相关程序必须使用真机才能运行。如果不能使用真机调试的情况，可以使用os程序调试蓝牙。可以参考示例程序中的BabyBluetoothOSDemo
- 本项目和示例程序是使用ios 8.3开发，使用者可以自行降版本，但必须大于6.0 


# 后期更新
 
- 增加对Carthage Install的支持
- [swift版本开发,目前项目已经兼容swift，详细见这里](https://github.com/coolnameismy/BabyBluetooth-swift)

已经更新的版本说明，请在wiki中查看

# 蓝牙学习资源
>  温馨提示：零基础做蓝牙开发很困难，所以就算使用babybluetooth降低了代码量,仍然任很有必要花上几天时间把蓝牙的基础概念弄明白后才开始动手~

- [ios蓝牙开发（一）蓝牙相关基础知识](http://liuyanwei.jumppo.com/2015/07/17/ios-BLE-1.html)
- [ios蓝牙开发（二）蓝牙中心模式的ios代码实现](http://liuyanwei.jumppo.com/2015/08/14/ios-BLE-2.html)
- [ios蓝牙开发（三）app作为外设被连接的实现](http://liuyanwei.jumppo.com/2015/09/07/ios-BLE-3.html)
- [ios蓝牙开发（四）BabyBluetooth蓝牙库介绍](http://liuyanwei.jumppo.com/2015/09/11/ios-BLE-4.html)
- 暂未完成-ios蓝牙开发（五）BabyBluetooth实现原理
- 待定...
- [官方CoreBuetooth支持页](https://developer.apple.com/bluetooth)
- [Bluetooth Accessory Design Guidelines for Apple Products](https://developer.apple.com/hardwaredrivers/BluetoothDesignGuidelines.pdf)
- [知乎live：一小时蓝牙应用开发科普 文字整理](http://liuyanwei.jumppo.com/2017/01/23/zhihu-live-a-hour-for-bluetooth-0.html)

# 组织和交流
- qq交流群6: 284341984(满）
- qq交流群5: 426082944(满）
- qq交流群4: 313084771(满）
- qq交流群3：530142592(满）
- qq交流群2：168756967(满）
- qq交流群1：426603940(满)
- 个人微信公众号

![个人微信公众号](qrcode.jpg)

# 招聘

  阿里云-iot事业部招人，p6 p7 前端,android,iOS,风光无限 一起造作，有兴趣的投简历到 coolnameismy@gmail.com

# 期待

  - 蓝牙库写起来很辛苦，不要忘记点击右上角小星星star和[follow](https://github.com/coolnameismy)支持一下~
  - 如果在使用过程中遇到BUG，或发现功能不够用，希望你能Issues我，谢谢
  - 如果你的app用到了Babybluetooth，希望你能发邮件（[coolnameismy@hotmail.com](mailto:coolnameismy@hotmail.com?subject=Babybluetooth用在的了我们的app中)）告诉我，我会在readme中展现出来。
  - 期待大家也能一起为BabyBluetooth输出代码，这里我只是给BabyBluetooth开了个头，他可以增加和优化的地方还是非常多。也期待和大家在Pull Requests一起学习，交流，成长。
  


",,2015-07-31T13:57:36Z,2021-03-10T06:54:03Z,8,5,4718,166,"('coolnameismy', 122), ('liuyanwei', 73), ('Antony.Wong', 3), ('sunnyyoung', 2), ('Andy', 1), ('CoderLT', 1), ('donly', 1), ('wangxumin', 1)",4,3,
uxsolutions/bootstrap-datepicker,A datepicker for twitter bootstrap (@twbs),"# bootstrap-datepicker

[![Join the chat at https://gitter.im/uxsolutions/bootstrap-datepicker](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/uxsolutions/bootstrap-datepicker?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![Build Status](https://travis-ci.org/uxsolutions/bootstrap-datepicker.svg?branch=master)](https://travis-ci.org/uxsolutions/bootstrap-datepicker)
[![GitHub license](https://img.shields.io/badge/license-Apache%202-blue.svg)](https://raw.githubusercontent.com/uxsolutions/bootstrap-datepicker/master/LICENSE)
[![npm](https://img.shields.io/npm/dt/bootstrap-datepicker.svg)](https://github.com/uxsolutions/bootstrap-datepicker)
[![Twitter Follow](https://img.shields.io/twitter/follow/bsdatepicker.svg?style=social&label=Follow)](https://twitter.com/bsdatepicker)

Versions are incremented according to [semver](https://semver.org/).

## CDN

You can use the [CloudFlare](https://www.cloudflare.com) powered [cdnjs.com](https://cdnjs.com) on your website.

[bootstrap-datepicker](https://cdnjs.com/libraries/bootstrap-datepicker) on cdnjs

Please note: It might take a few hours until a new version is available on cdnjs.

## Links

* [Online Demo](https://uxsolutions.github.io/bootstrap-datepicker/)
* [Online Docs](https://bootstrap-datepicker.readthedocs.org/en/stable/) (ReadTheDocs.com)
* [Google Group](https://groups.google.com/group/bootstrap-datepicker/)
* [Travis CI](https://travis-ci.org/uxsolutions/bootstrap-datepicker)

#### Snippets
* [Booking demo with two pickers](https://jsfiddle.net/azaret/25bqa6ho/)

## Development

Once you cloned the repo, you'll need to install [grunt](https://gruntjs.com/) and the development dependencies using a package manager:

* [yarn](https://yarnpkg.com/) (recommended):

```
$ [sudo] yarn global add grunt-cli
$ yarn install
```

* [npm](https://www.npmjs.com/):

```
$ [sudo] npm install --global grunt-cli
$ npm install
```
","'bootstrap', 'bootstrap-datepicker', 'javascript'",2012-03-17T01:11:40Z,2024-06-17T13:32:01Z,387,313,12653,448,"('eternicode', 466), ('acrobat', 444), ('hebbet', 53), ('vsn4ik', 52), ('vitalets', 17), ('gregoire-d', 15), ('Azaret', 11), ('t3chn0r', 10), ('Phoenix Zerin', 9), ('Maximilian Zimmer', 8), ('abibell', 7), ('stanpalatnik', 7), ('tcrosen', 7), ('dependabotbot', 7), ('orifn', 7), ('tigranbalayan', 6), ('Jeroen Thora', 6), ('ragulka', 6), ('Grégoire D', 6), ('fdaugan', 6), ('programcsharp', 5), ('Jaran Nilsen', 5), ('jelhan', 5), ('osama9', 5), ('nwhittaker', 4), ('vicocamacho', 4), ('fadomire', 4), ('tpeter1985', 4), ('Simon FLORENTIN', 4), ('kylethielk', 4), ('janv8000', 4), ('Daryll Doyle', 4), ('lakenen', 4), ('adam-lynch', 3), ('tgirardi', 3), ('aliusa', 3), ('anvoz', 3), ('juanmcasanova', 3), ('divpreet', 3), ('gdw2', 3), ('grudolf', 3), ('hayk', 3), ('jogaco', 3), ('n9', 3), ('edgardmessias', 3), ('korun', 3), ('fluffels', 3), ('dionysiosarvanitis', 3), ('Frederick John Milens III', 3), ('imylyanyk', 3), ('levani', 3), ('michaeljb', 3), ('michaek', 3), ('mostafar', 3), ('nickmccurdy', 3), ('vanack', 3), ('linsolas', 3), ('RubenKruiswijk', 3), ('somethvictory', 3), ('laserlemon', 3), ('tomalec', 2), ('willrjmarshall', 2), ('Warren Seymour', 2), ('visaruruqi', 2), ('thetimbanks', 2), ('teoulas', 2), ('Demonixz', 2), ('chappoo', 2), ('steffendietz', 2), ('steunix', 2), ('sandipbgt', 2), ('n0nick', 2), ('cdeszaq', 2), ('Quent-in', 2), ('PeterDaveHello', 2), ('wrozka', 2), ('r0ro', 2), ('laltin', 2), ('RGunning', 2), ('andrezsanchez', 2), ('omninonsense', 2), ('unknown', 2), ('jojosati', 2), ('radmax', 2), ('person03', 2), ('nfaiz', 2), ('moderndegree', 2), ('matiasalvarez87', 2), ('lytay', 2), ('leesei', 2), ('jstoone', 2), ('azwar', 2), ('wkrsz', 2), ('Milo Toor', 2), ('erubboli', 2), ('donnyreza', 2), ('daniel-franz', 2), ('Daniel', 2), ('clemens', 2), ('Chris van Leeuwen', 2), ('CauanCabral', 2), ('caarlos0', 2), ('Bob Olde Hampsink', 2), ('bbarry', 2), ('Bert Bruynooghe', 2), ('ajb', 2), ('WedgeSama', 2), ('AubreyHewes', 2), ('Arkaitz', 2), ('Alex Delegard', 2), ('markovic131', 2), ('subdee', 2), ('colavitam', 2), ('ansman', 2), ('Max Furman', 2), ('poulinjulien', 2), ('johnnyreilly', 2), ('joaomatossilva', 2), ('jsalonen', 2), ('HuBandiT', 2), ('SolidSoils', 2), ('Grégoire D', 2), ('Gregoire D', 2), ('GabrielGil', 2), ('FrankWu100', 2), ('Ersoy', 2), ('StefanDanneil', 1), ('Steffen Maabjerg', 1), ('Sten Muchow', 1), ('kix', 1), ('Stephen Reindl', 1), ('StevenMaude', 1), ('badge2033', 1), ('Lacisan', 1), ('SlimerDude', 1), ('Simon Mulser', 1), ('sippsolutions', 1), ('Maharramoff', 1), ('Serkan Algur', 1), ('sadortun', 1), ('nkante', 1), ('merk', 1), ('dataxpress', 1), ('timgates42', 1), ('tiagoblackcode', 1), ('Thorsten Rinne', 1), ('jonssonth', 1), ('zires', 1), ('t-mdo', 1), ('theodorjohannesen', 1), ('gitter-badger', 1), ('Talat Uspanov', 1), ('ssaunier', 1), ('inukshuk', 1), ('webknjaz', 1), ('pimplesushant', 1), ('stephane', 1), ('DennisBirkholz', 1), ('nicomollet', 1), ('Nicop06', 1), ('PEKTOP', 1), ('Nils-Berghs', 1), ('suzuki', 1), ('olanb7', 1), ('mologie', 1), ('Pasvaz', 1), ('dentarg', 1), ('Pauli Sundberg', 1), ('Pavel Kornilov', 1), ('sunhater', 1), ('Munter', 1), ('phlipper', 1), ('pjlammertyn', 1), ('YegorPo', 1), ('rjfranco', 1), ('raphaelstolt', 1), ('Razvan AVRAMESCU', 1), ('mrgoltstein', 1), ('xrmx', 1), ('RichardFrontwise', 1), ('RobertSmits', 1), ('Robert M', 1), ('zaynetro', 1), ('realityking', 1), ('Rovain', 1), ('invisibleroads', 1), ('magefad', 1), ('Ruud Klaver', 1), ('samzurcher', 1), ('multimike', 1), ('MRigal', 1), ('mneuhaus', 1), ('mikkel-busch', 1), ('mavsan', 1), ('marshall-lee', 1), ('marioosh-net', 1), ('marcduren', 1), ('lytay-cltag', 1), ('kongr45gpen', 1), ('jinto', 1), ('infosrabah', 1), ('ierrasti', 1), ('hyderali', 1), ('gboer', 1), ('Xavier Dutreilh', 1), ('ocarreterom', 1), ('zhangyuan', 1), ('ximi', 1), ('waynebrantley', 1), ('vulgarcoder', 1), ('n-kostov', 1), ('vincenttouzet', 1), ('tyskin', 1), ('ttomor', 1), ('tlshaheen', 1), ('taskinoz', 1), ('sculove', 1), ('sarunas', 1), ('renhammington', 1), ('MichalRemis', 1), ('prespic', 1), ('pha', 1), ('Witchfinder', 1), ('wsyms', 1), ('vprenner', 1), ('vladwing', 1), ('buzinas', 1), ('vvo', 1), ('Victor Taranenko', 1), ('Ulf Urdén', 1), ('tuomassalo', 1), ('TorbenHedstrom', 1), ('tommysanterre', 1), ('defkode', 1), ('tomukas', 1), ('tomwjerry', 1), ('tcrossland', 1), ('timrwood', 1), ('et', 1), ('ErgiK', 1), ('dukebody', 1), ('crimsonP', 1), ('crabonature', 1), ('chuvikovd', 1), ('cdchild', 1), ('chandon', 1), ('camohub', 1), ('bogatykh', 1), ('bjorkgard', 1), ('gtors', 1), ('allenpiscitello', 1), ('alexquast', 1), ('accraze', 1), ('zgohr', 1), ('yoichisatoyoshi', 1), ('denis-sokolov', 1), ('David Rosen', 1), ('DavidChristiansen', 1), ('Dave Laird', 1), ('Danny Lloyd', 1), ('danielhusar', 1), ('Dan Le', 1), ('dbackowski', 1), ('finebytes', 1), ('coderofsalvation', 1), ('Christoph', 1), ('chripede', 1), ('throup', 1), ('cvrebert', 1), ('hemp', 1), ('angelyordanov', 1), ('bskyb-monitoring-github', 1), ('gcotelli', 1), ('gabriel', 1), ('gbedardsice', 1), ('Fredrik Sundmyhr', 1), ('frapontillo', 1), ('montogeek', 1), ('freegenie', 1), ('parkeugene', 1), ('Erin Swenson-Healey', 1), ('Eric Nolte', 1), ('debanne', 1), ('emnsen', 1), ('nilbus', 1), ('Dudemullet', 1), ('Dozer', 1), ('derylseale', 1), ('krauzand', 1), ('avityuk', 1), ('Andrew Beverley', 1), ('ajbeaven', 1), ('anroots', 1), ('Anderson Fortaleza', 1), ('Saturate', 1), ('AlexeyShirshov', 1), ('alsofronie', 1), ('alexserdyuk', 1), ('akoskm', 1), ('addbrick', 1), ('wishmaster80', 1), ('abuabdul', 1), ('Abraham', 1), ('wpasternak', 1), ('CherryDT', 1), ('gobifox', 1), ('cheshireoctopus', 1), ('chanafdo', 1), ('cenkingunlugu', 1), ('Cenk Ebret', 1), ('zalog', 1), ('Bruno Bonamin', 1), ('milboj', 1), ('rhoggSugarcrm', 1), ('Bob Hogg', 1), ('Bloafer', 1), ('lvancrayelynghe', 1), ('bakhtiyor', 1), ('artis101', 1), ('ardeman', 1), ('asapostolov', 1), ('mkoubik', 1), ('Mark Funk', 1), ('Marek Lichtner', 1), ('macodev', 1), ('endelwar', 1), ('mediavrog', 1), ('LytayTOUCH', 1), ('Lukáš Sahula', 1), ('lukeburden', 1), ('Loek Wetzels', 1), ('Stichoza', 1), ('leonardehrenfried', 1), ('openthink-laurent', 1), ('landlockedsurfer', 1), ('hovsater', 1), ('jakobdo', 1), ('Nex4rius', 1), ('nnnnathann', 1), ('npinchot', 1), ('nbayramberdiyev', 1), ('mozza', 1), ('Mohammed Alshehri', 1), ('Mithgol', 1), ('miodragnikac', 1), ('rap1ds', 1), ('mikedebock', 1), ('mikenac', 1), ('dermike', 1), ('mshafrir', 1), ('mreinsch', 1), ('michael-langford', 1), ('michaelbrooks', 1), ('mentortori', 1), ('jpdevries', 1), ('bjjb', 1), ('Ivan Nieto sousa', 1), ('Ivan Nieto', 1), ('polinom', 1), ('javarr', 1), ('hinrik', 1), ('hendricius', 1), ('Gwenn Meynier', 1), ('guyoun', 1), ('glipecki', 1), ('gr2m', 1), ('Gregoire Daussin', 1), ('chancancode', 1), ('Nettsentrisk', 1), ('vicox', 1), ('Kerry Johnson', 1), ('kennsippell', 1), ('Itach1Uchixa', 1), ('jermorin', 1), ('champierre', 1), ('joaobhering', 1), ('Jon Uhlmann', 1), ('johnnyRose', 1), ('jpknoll', 1), ('jmontane', 1), ('jenyayel', 1), ('JaySkyworker', 1), ('javierpico', 1), ('zakjan', 1), ('jstoup111', 1), ('CalamityJames', 1), ('coopernurse', 1)",261,211,
youzan/bugCatcher,方便产品、开发、测试三方协同管理、测试、监控项目进度和质量，以持续交付。,"![bug](README/capture_bug.png)

# 捉虫记

`【招聘】Java开发、测试开发等岗位，有意者请将简历投递至`

-------------------

## 捉虫记特性

**捉虫记** 设计初衷是为了方便开发人员自测（当然了，对于需要自行完成测试的测试团队也是适用的），其主要特性为：

- **项目管理** ：由需求方发起项目，并按照`瀑布流`软件开发模型跟踪整个项目的完成情况；
- **用例管理** ：方便添加和管理测试用例，也支持Excel、Xmind等文件形式的用例上传，支持用例筛选，并为项目分配需要执行的用例；
- **项目质量报表** ：报表以时间线的方式展示各个项目的质量变化；
- **自测质量排名** ：以积分排名的方式展示项目成员自测质量高低；
- **精细化的权限控制** ：精细的角色分离（产品、开发、测试），提供精细化的权限控制，某角色可以做什么，不可以做什么一目了然；

### 典型使用场景
![Alt text](README/liu.jpeg)
> **提示：**具体可参考下面`典型场景使用图示`一节，但是什么角色做什么不是绝对的，可以根据团队实际情况调整，比如，可以由测试人员发起项目。

## 使用方法

### 环境依赖
- **系统：**Linux
- **语言：**Java （Version>1.8）
- **数据库：**Mysql
- **其他工具：**Maven

### 初始化
- 修改pfcase-schema.sql中的admin账号的密码和E-mail地址（bugCatcher/src/main/resources/database/pfcase-schema.sql）  
``` sql
INSERT INTO signon VALUES('admin','Your Password');
INSERT INTO account VALUES('admin','Your E-mail address','admin');
```

- 修改jdbc.properties中的mysql配置（bugCatcher/src/main/resources/orm/jdbc.properties）
```
# local
jdbc.driverClassName=com.mysql.jdbc.Driver
jdbc.url=jdbc:mysql://:/pfcase
jdbc.username=
jdbc.password=
```

- 修改setup.sh中的mysql配置（bugCatcher/setup.sh）
``` bash
#!/usr/bin/env bash

mkdir ~/fileupload
mysql -h  -P  -u  -p 
```

执行`setup.sh`完成初始化

### 启动
mvn tomcat7:run -Dmaven.tomcat.port= &
>**提示：**``设置为任意未被占用的端口即可

以部署在本机8080端口为例，打开 http://localhost:8080/ 即能打开捉虫记登录页面
![Alt text](README/signin.jpeg)

## 典型场景使用图示
### 新用户注册
![Alt text](README/new.jpeg)

#### `角色-功能对照表`
| 角色/功能 | 我的任务 | 执行用例 | 执行评价 | 新建任务 |  新建用例 | 查看用例 | 分配用例 | 上传用例 | 执行质量 | 华山论剑
| :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: | :-: |
| 测试 | 展示所有人的任务 |  —  | ○   | ○   | ○   |  ○  | ○  | ○   |  ○  |    ○  |
| 开发 | 只展示自己的任务 |○ |   —    |   ○ | ○   |   ○ |  ○ |  ○  |   ○ |   —     |
| 产品 | 只展示自己的任务 |  —  |  —     |  ○  |  ○  |   ○ |  —    |   ○ |  ○  |   —     |
| admin | 展示所有人的任务 |○| ○  |   ○ |  ○  | ○   |  ○  | ○  | ○   | ○  |
>**admin：**内置账户，拥有最高权限，可以做任何操作，慎用。

### 产品发起项目，指定项目开发人员:


### 测试设计用例，将相关用例分配给该项目的开发人员:
新建用例，模块支持新建或者选择已有的:  
![Alt text](README/new_case.jpeg)

选择项目，勾选该项目需要执行的用例并分配（用例支持按指定条件搜索/筛选）:  
![Alt text](README/fenpei.jpeg)

捉虫记也支持Excel、Xmind等文件形式的用例上传，但仅做备份用例使用：  
![Alt text](README/upload.jpeg)


### 开发人员执行用例
执行一条，已执行栏目下勾选一条：  
![Alt text](README/my.jpeg)

### 测试检查开发人员用例执行情况并给出评价
测试人员一条条检查下去，功能无误点击good按钮，执行不到位点击bad按钮（可以将bug链接填写上去），当项目下的用例全部执行完成以后会在项目概况下自动打分  
![Alt text](README/pingfen.jpeg)

### 项目自测质量的打分会以图表的形式展现
![Alt text](README/pic.jpeg)

### 华山论剑
此栏目主要对执行用例的开发人员进行自测质量评价，评分有A（+20）/ B（+10）/ C（-10）三个等级，具体评价标准可以自行定义，最终会给所有人员一个积分排名  
![Alt text](README/jian.jpeg)

## Todo List
- bug管理与跟踪

## 反馈与建议
- 请在Issues中讨论

## License

The project is open-sourced software licensed under the [MIT license][1]


[1]: https://opensource.org/licenses/MIT
","'bootstrap', 'bootstrap-theme', 'jquery', 'mybatis', 'spring', 'spring-mvc', 'spring-security'",2017-03-31T10:34:29Z,2020-07-15T14:59:14Z,3,3,486,52,"('sunjun-qima', 114), ('canyuns', 12), ('winglechen', 1)",1,1,
silver13/BoldClash-BWHOOP-B-03,firmware for BoldClash BWHOOP B-03 quadcopter,"[![Build Status](https://travis-ci.org/silver13/BoldClash-BWHOOP-B-03.svg?branch=master)](https://travis-ci.org/silver13/BoldClash-BWHOOP-B-03)

## SilverWare - BoldClash BWHOOP B-03 version

_Also works with B03 Pro_

Currently does not account for centered throttle! ( no altitude hold ) It uses normal throttle, low = motors off. That means it should be used with Devo / multimodule or another tx.

Programming connector is a Microjst 1.25 pitch connector. Don't wire positive to st-link as you may overcharge the battery if connected or damage the st-link.

Programming instructions ( uses St-link Utility program ):
https://www.rcgroups.com/forums/showthread.php?2876797-Boldclash-bwhoop-B-03-opensource-firmware

Compiling instructions ( uses Keil uVision IDE):
https://www.rcgroups.com/forums/showthread.php?2877480-Compilation-instructions-for-silverware#post37391059

### Level / acro mode change
By default ""gestures"" are used to change modes, move the stick *left-left-down* for acro mode , and *right-right-down* for level mode.

### Pid gestures and save
Pid gestures allow the pilot to change the acro mode pids by a percentage, and such tune the quadcopter without a computer. The new pids can be saved so that they will be restored after the quad is power cycled.The new pids will remain active if saved, until the pid values in file pid.c are changed. If the values are not changed, flashing the quad will not erase the pids unless the erase command is manually issued when programming.

*See also*
http://sirdomsen.diskstation.me/dokuwiki/doku.php?id=pidgesture

### Accel calibration / pid save
The gesture for accel calibration is down - down - down. If pids have been changed using the respective gestures since the last powerup or save, the pids will be saved instead.

### Telemetry
DeviationTx and multimodule+taranis can support telemetry, this requires no changes from the defaults on the quad. For devo, when selecting the Bayang protocol, hit Enter to see options, and enable telemetry there. Telemetry currently contains received number of data and telemetry packets, and 2 voltages, battery raw voltage and compensated voltage ( against voltage drop )

For multimodule, you need to add telemetry ( as an option ) to the bayang protocol in the protocol table ( configuration file ). Note the telemetry protocol won't work with stock quads.

*See also*
http://sirdomsen.diskstation.me/dokuwiki/doku.php?id=telemetry

### Android App telemetry
The Android app ""SilverVISE"" by SilverAG (not me) is able to receive telemetry from the quad using BLE packets. To use, the app protocol should be set in the quadcopter. The app will also show the pids.

*More information*
http://sirdomsen.diskstation.me/dokuwiki/doku.php?id=silvervise

### Linux/gcc version
The gcc version compiles close to 16k, and may need turning off features in order to make it fit. It's also possible to flash up to 32K with changes. Read __install.md__ for additional information. 

The boldclash settings may need changes to work with gcc well. Turn off the software lpf filters except the last 2, the loop time is longer, at 1400, which affects the frequency of other soft lpf filters. You could set loop time to 1500 but it may not be needed.

### Wiki
http://sirdomsen.diskstation.me/dokuwiki/doku.php?id=start

### 01.18
* 2 new D term filters, 1st and 2nd order with custom frequency
* improved led flash timing
* the throttle smooth feature is gone 
* nrf24 support added, bayang protocol + telemetry
* softi2c support for 1 pullup only ( e011 )

### 29.08.17
* moved flash save to 31k
* added 2 looptime independent soft lpf
* added lowerthrottlemix3 from h8
* added motor filter 2 replacing original,much better performance
* pid save has own led flash now
* cleanup of unused features: headless and some other


### xx.06.17
* pid gestures - pids can be changed by gestures at the field
* pid save - new pids are saved to flash by the d-d-d gesture

### 02.05.17
* level pid is tuned more aggressive
* added filter between level pid and  acro pid
* fixed issue where ""Overclock"" option broke level mode (i2c) - overclock can be used on the bwhoop now
* removed level mode I term - this was not usually used
* minor cleanup and efficiency
* GCC autovdrop now functional
* LVC throttle lowering disabled by default just in case it malfunctions

### initial changes

* autovdrop improved, and better compensation
* new measured motor curve at 24K pwm
* added a new way of lowering throttle below a certain voltage
* lvc now flashes below an ""uncompensated"" voltage, too, just in case
",,2017-04-06T07:08:19Z,2020-03-03T05:00:04Z,7,7,66,28,"('www', 117), ('silver13', 49), ('silverag123', 10), ('bikemike', 9), ('mrvanes', 2), ('nicolas-van', 2), ('psmacmur', 1)",1,1,
zhisheng17/blog,SpringBoot + Mybatis + thymeleaf 搭建的个人博客 http://www.54tianzhisheng.cn/,"## Blog

fork from [My Blog](https://github.com/ZHENFENG13/My-Blog) , 该作者是在 [Tale](https://github.com/otale/tale) 博客系统基础上进行修改的。

`Tale` 使用了轻量级 mvc 框架 `Blade` 开发，默认主题使用了漂亮的 `pinghsu` 。

`My-Blog` 使用的是 Docker + SpringBoot + Mybatis + thymeleaf 打造的一个个人博客模板。

自己花了十天的时间把整个项目的代码都敲了一遍，熟悉了整个项目，做了优化，去除了 Docker，
其中修改了原来的一些 bug，并在原作者的项目中提出了 issue ， 原作者已修复。

喜欢该项目的话，可以给项目点个 star，如果你想在这基础上修改，那么建议你 fork 该项目，然后再修改哦。

## 功能如下：

 博客首页：
 ![](img/index.png)

 归档：
 ![](img/metas.png)

 友链：
 ![](img/links.png)
 
 关于：
 ![](img/about.png)
 
 搜索：
 ![](img/search.png)
 
 **后台管理**
 
 管理登录：
 ![](img/admin-login.png)
 
 管理首页：
 ![](img/admin-index.png)
 
 发布文章：
 ![](img/admin-publish.png)
 
 文章管理：
 ![](img/admin-article.png)
 
 页面管理：
 ![](img/admin-pages.png)
 
 分类标签：
 ![](img/admin-category.png)
 
 文件管理：
 ![](img/admin-upload.png)
  
 友链管理：
 ![](img/admin-links.png)
   
 系统设置：
 ![](img/admin-setting.png)
 
## 开源协议

[MIT](./LICENSE)

## 感谢

[ZHENFENG13](https://github.com/ZHENFENG13)
[otale](https://github.com/otale)
","'mybatis', 'mysql', 'spring-boot', 'thymeleaf'",2017-06-17T09:26:59Z,2022-10-05T18:37:43Z,2,1,1598,50,"('TZS', 3), ('zhisheng17', 2)",0,0,
junyanz/BicycleGAN,Toward Multimodal Image-to-Image Translation,"



# BicycleGAN
[Project Page](https://junyanz.github.io/BicycleGAN/) |  [Paper](https://arxiv.org/abs/1711.11586) | [Video](https://youtu.be/JvGysD2EFhw)


Pytorch implementation for multimodal image-to-image translation. For example,  given the same night image, our model is able to synthesize possible day images with different types of lighting, sky and clouds. The training requires paired data.

**Note**: The current software works well with PyTorch 0.41+. Check out the older [branch](https://github.com/junyanz/BicycleGAN/tree/pytorch0.3.1) that supports PyTorch 0.1-0.3.

  

**Toward Multimodal Image-to-Image Translation.**  
[Jun-Yan Zhu](https://www.cs.cmu.edu/~junyanz/),
 [Richard Zhang](https://richzhang.github.io/), [Deepak Pathak](http://people.eecs.berkeley.edu/~pathak/), [Trevor Darrell](https://people.eecs.berkeley.edu/~trevor/), [Alexei A. Efros](https://people.eecs.berkeley.edu/~efros/), [Oliver Wang](http://www.oliverwang.info/), [Eli Shechtman](https://research.adobe.com/person/eli-shechtman/).  
 UC Berkeley and Adobe Research  
In Neural Information Processing Systems, 2017.

## Example results
  


## Other Implementations
- [[Tensorflow]](https://github.com/gitlimlab/BicycleGAN-Tensorflow) by Youngwoon Lee (USC CLVR Lab).
- [[Tensorflow]](https://github.com/kvmanohar22/img2imgGAN) by Kv Manohar.

## Prerequisites
- Linux or macOS
- Python 3
- CPU or NVIDIA GPU + CUDA CuDNN


## Getting Started ###
### Installation
- Clone this repo:
```bash
git clone -b master --single-branch https://github.com/junyanz/BicycleGAN.git
cd BicycleGAN
```
- Install PyTorch and dependencies from http://pytorch.org
- Install python libraries [visdom](https://github.com/facebookresearch/visdom), [dominate](https://github.com/Knio/dominate), and [moviepy](https://github.com/Zulko/moviepy).   

For pip users:
```bash
bash ./scripts/install_pip.sh
```

For conda users:
```bash
bash ./scripts/install_conda.sh
```


### Use a Pre-trained Model
- Download some test photos (e.g., edges2shoes):
```bash
bash ./datasets/download_testset.sh edges2shoes
```
- Download a pre-trained model (e.g., edges2shoes):
```bash
bash ./pretrained_models/download_model.sh edges2shoes
```

- Generate results with the model
```bash
bash ./scripts/test_edges2shoes.sh
```
The test results will be saved to a html file here: `./results/edges2shoes/val/index.html`.

- Generate results with synchronized latent vectors
```bash
bash ./scripts/test_edges2shoes.sh --sync
```
Results can be found at `./results/edges2shoes/val_sync/index.html`.

### Generate Morphing Videos
- We can also produce a morphing video similar to this [GIF](imgs/day2night.gif) and Youtube [video](http://www.youtube.com/watch?v=JvGysD2EFhw&t=2m21s).
```bash
bash ./scripts/video_edges2shoes.sh
```
Results can be found at `./videos/edges2shoes/`.

### Model Training
- To train a model, download the training images (e.g., edges2shoes).
```bash
bash ./datasets/download_dataset.sh edges2shoes
```

- Train a model:
```bash
bash ./scripts/train_edges2shoes.sh
```
- To view training results and loss plots, run `python -m visdom.server` and click the URL http://localhost:8097. To see more intermediate results, check out  `./checkpoints/edges2shoes_bicycle_gan/web/index.html`
- See more training details for other datasets in `./scripts/train.sh`.

### Datasets (from pix2pix)
Download the datasets using the following script. Many of the datasets are collected by other researchers. Please cite their papers if you use the data.
- Download the testset.
```bash
bash ./datasets/download_testset.sh dataset_name
```
- Download the training and testset.
```bash
bash ./datasets/download_dataset.sh dataset_name
```
- `facades`: 400 images from [CMP Facades dataset](http://cmp.felk.cvut.cz/~tylecr1/facade). [[Citation](datasets/bibtex/facades.tex)]
- `maps`: 1096 training images scraped from Google Maps
- `edges2shoes`: 50k training images from [UT Zappos50K dataset](http://vision.cs.utexas.edu/projects/finegrained/utzap50k). Edges are computed by [HED](https://github.com/s9xie/hed) edge detector + post-processing. [[Citation](datasets/bibtex/shoes.tex)]
- `edges2handbags`: 137K Amazon Handbag images from [iGAN project](https://github.com/junyanz/iGAN). Edges are computed by [HED](https://github.com/s9xie/hed) edge detector + post-processing. [[Citation](datasets/bibtex/handbags.tex)]
- `night2day`: around 20K natural scene images from  [Transient Attributes dataset](http://transattr.cs.brown.edu/) [[Citation](datasets/bibtex/transattr.tex)]

## Models
Download the pre-trained models with the following script.
```bash
bash ./pretrained_models/download_model.sh model_name
```
- `edges2shoes` (edge -> photo) trained on UT Zappos50K dataset.
- `edges2handbags` (edge -> photo) trained on Amazon handbags images..
```bash
bash ./pretrained_models/download_model.sh edges2handbags
bash ./datasets/download_testset.sh edges2handbags
bash ./scripts/test_edges2handbags.sh
```
- `night2day` (nighttime scene -> daytime scene) trained on around 100 [webcams](http://transattr.cs.brown.edu/).
```bash
bash ./pretrained_models/download_model.sh night2day
bash ./datasets/download_testset.sh night2day
bash ./scripts/test_night2day.sh
```
- `facades` (facade label -> facade photo) trained on the CMP Facades dataset.
```bash
bash ./pretrained_models/download_model.sh facades
bash ./datasets/download_testset.sh facades
bash ./scripts/test_facades.sh
```
- `maps` (map photo -> aerial photo) trained on 1096 training images scraped from Google Maps.
```bash
bash ./pretrained_models/download_model.sh maps
bash ./datasets/download_testset.sh maps
bash ./scripts/test_maps.sh
```

### Metrics

Figure 6 shows realism vs diversity of our method.

- **Realism** We use the Amazon Mechanical Turk (AMT) Real vs Fake test from [this repository](https://github.com/phillipi/AMT_Real_vs_Fake), first introduced in [this work](http://richzhang.github.io/colorization/).

- **Diversity** For each input image, we produce 20 translations by randomly sampling 20 `z` vectors. We compute LPIPS distance between consecutive pairs to get 19 paired distances. You can compute this by putting the 20 images into a directory and using [this script](https://github.com/richzhang/PerceptualSimilarity/blob/master/compute_dists_pair.py) (note that we used version 0.0 rather than default 0.1, so use flag `-v 0.0`). This is done for 100 input images. This results in 1900 total distances (100 images X 19 paired distances each), which are averaged together. A larger number means higher diversity.

### Citation

If you find this useful for your research, please use the following.

```
@inproceedings{zhu2017toward,
  title={Toward multimodal image-to-image translation},
  author={Zhu, Jun-Yan and Zhang, Richard and Pathak, Deepak and Darrell, Trevor and Efros, Alexei A and Wang, Oliver and Shechtman, Eli},
  booktitle={Advances in Neural Information Processing Systems},
  year={2017}
}

```
If you use modules from CycleGAN or pix2pix paper, please use the following:
```
@inproceedings{CycleGAN2017,
  title={Unpaired Image-to-Image Translation using Cycle-Consistent Adversarial Networkss},
  author={Zhu, Jun-Yan and Park, Taesung and Isola, Phillip and Efros, Alexei A},
  booktitle={Computer Vision (ICCV), 2017 IEEE International Conference on},
  year={2017}
}


@inproceedings{isola2017image,
  title={Image-to-Image Translation with Conditional Adversarial Networks},
  author={Isola, Phillip and Zhu, Jun-Yan and Zhou, Tinghui and Efros, Alexei A},
  booktitle={Computer Vision and Pattern Recognition (CVPR), 2017 IEEE Conference on},
  year={2017}
}
```
### Acknowledgements

This code borrows heavily from the [pytorch-CycleGAN-and-pix2pix](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix) repository.
","'deep-learning', 'gans', 'generative-adversarial-network', 'pix2pix', 'pytorch'",2017-11-14T04:12:01Z,2020-08-05T01:00:21Z,7,5,1466,48,"('junyanz', 52), ('junyanz', 28), ('richzhang', 8), ('ploth', 3), ('cuihaoleo', 1), ('Jun-Yan Zhu', 1), ('yenchenlin', 1)",3,2,
component/s3,Upload files to s3 from the client,"
# s3

  S3 client upload library.

## Installation

    $ component install component/s3

## Config

  An `S3` global must be initialized with some configuration:

  - `policy` - the base64 json policy
  - `signature` - the policy signature
  - `bucket` the bucket name
  - `acl` ACL such as ""public-read""
  - `key` access key

## Example

```js
var Upload = require('s3');
var drop = require('drop-anywhere');

drop(function(err, drop){
  if ('upload' != drop.type) return;
  var file = drop.item.file;
  console.log('upload %s', file.name);
  var uid = Math.random() * 1e10 | 0;
  var upload = Upload(file, { name: uid })

  var prog = document.querySelector('#progress');
  upload.on('progress', function(e){
    prog.textContent = (e.percent | 0) + '%';
  });

  upload.end(function(err){
    if (err) throw err;
    console.log('upload complete %s', upload.name);
    console.log(upload.url);
  });
});
```

## API

### Upload(options)

  - `name` remote filename or `file.name`
  - `type` content-type or `file.type`

Events:

  - `abort` upload was aborted
  - `progress` upload in progress (`e.percent` etc)
  - `end` upload is complete

## Testing

  First populate `./config.json` with your credentials:

```json
{
  ""key"": ""asdfasdfasdfasdf"",
  ""secret"": ""asdfasdfasdfasdfasdfadsfasfdsfdasdf+fHgg"",
  ""bucket"": ""files.example.com""
}
```

  Boot the test server:

```
$ node test
```

## License

  MIT
",,2013-03-12T17:40:05Z,2016-02-17T01:16:00Z,8,7,45,9,"('tj', 28), ('TooTallNate', 8), ('matthewmueller', 2), ('ForbesLindesay', 1), ('jonathanong', 1), ('lancejpollard', 1), ('pgherveou', 1), ('markreg', 1)",5,4,
OnionBrowser/OnionBrowser,"An open-source, privacy-enhancing web browser for iOS, utilizing the Tor anonymity network","# Onion Browser

[![Backers on Open Collective](https://opencollective.com/OnionBrowser/backers/badge.svg)](#backers)
 [![Sponsors on Open Collective](https://opencollective.com/OnionBrowser/sponsors/badge.svg)](#sponsors) 
  
[Official Site][official] | [Support][help] | [Release History][releases] | [Donate][donate]  
&copy; 2012-2023, Tigas Ventures, LLC ([Mike Tigas][miketigas])

*This is the Onion Browser 3.X branch. The older versions of Onion Browser can be found [here][2.X] and [here][1.X].*

**Onion Browser** is a free web browser for iPhone and iPad that encrypts and tunnels web traffic through the [Tor network][tor] with the help of [Orbot iOS][orbot]. See the [official site][official] for more details and App Store links.

Please see the [LICENSE][license] file for usage and redistribution terms.

---

* **Onion Browser**: 3.1.3 - See [official release history][releases] and [changelog][changelog].

[official]: https://onionbrowser.com/
[help]: https://github.com/OnionBrowser/OnionBrowser/wiki/Help
[releases]: https://github.com/OnionBrowser/OnionBrowser/releases
[changelog]: https://raw.github.com/OnionBrowser/OnionBrowser/2.X/CHANGELOG.md
[donate]: https://onionbrowser.com/donate
[miketigas]: https://mike.tig.as/
[license]: https://github.com/OnionBrowser/OnionBrowser/blob/3.X/LICENSE
[orbot]: https://orbot.app/
[tor]: https://www.torproject.org/
[2.X]: https://github.com/OnionBrowser/OnionBrowser/tree/2.X
[1.X]: https://github.com/OnionBrowser/OnionBrowser/tree/1.X

## Notable 3.X Features

The following features are new to Onion Browser, mostly by leveraging [Orbot iOS][orbot]:

- Use of newer, more secure, faster rendering engine `WKWebView`. 

- Finally all traffic, including audio/video streams tunneled through Tor.

- Everything downloadable now, including web pages.

- Search in page from iOS 16 and up.

- Multiple windows support on iPad.

## Acknowledgements

These people helped with translations. Thank you so much, folks!

- Albanian:
  Besnik, Kristina_Millona, alter2000, elioqoshi, vilisuli, marianaballa
- Arabic: 
  AboShanab, mada19, BNasr, Hujairi, MissPeace, ahmedessamdev, Bild96, Israel.K
- Bengali: 
  codesmite, Al_Shahrior, BNasr, hasan_md_rakib, nr072
- Catalán: 
  Ecron, pau.selles, Aetheria, Fitoschido, jmontane
- Chinese (Simplified): 
  Selinaf, feeblebiscuit, tsaizb, Lafrenze, ff98sha, 99yongliu, Lafrenze, chrisx8_, jxtsai
- Chinese (Traditional): 
  Selinaf, s8321414, jxtsai, MengPangWang, tsaizb, austinchang
- Croatian
  milotype, paranatox
- Czech: 
  Plarome, Lumeriol, hernikplays
- Dutch: 
  SilverXp, biancahey, kwadronaut, pljmn, Meteor0id, ChillT, lucasz10
- Finnish:
  PyryL, RJuho, olavinto
- French: 
  yahoe.001
- German: 
  Atalanttore, beonex1, nautilusx, ChristophSchulz, L10N, LordExtra, m_rey
- Greek: 
  dmaroulidis, KAUTH, pappasadrian, ssk1, apapac, arammos, beonex1, giormatsis
- Hebrew: 
  IONIL
- Hindi: 
  balapandu222, drashti4, umkdikshit, josprachi, libregeekingkid, philo_math, sonusandeep, suremak
- Hungarian: 
  benewfy, vargaviktor
- Icelandic: 
  anarchodin, sveinki
- Indonesian:
  myusuffin, Kholidraf, Razmawardhana, andika, ic.debora77, icaldua, khrlzhfr, kiwed
- Irish: 
  kscanne
- Italian:
  EllipticSet, Rhaal, RickDeckard, ryuw
- Khmer:
  Cantaloupe, PisethKONG, mosesngeth, rasy, sokty, sophatchy
- Korean:
  MinGyu19, jmj050716, sector429
- Japanese: 
  Naofumi, Songbogong, TokumeiNanashi, pluto987, jpanonowl, TENCO, kiririn
- Macedonian: 
  Liljana_Ackovska, Zarko_Gjurov, MatejMecka
- Norwegian (Bokmål): 
  kingu, eirik174
- Persian: 
  ariaa, arminoza, nariman, sabs, magnifico, Gilberto1, Zaefarani, alinbipr, hamidreza_yazdani, mo.hoseini, noneck, voxp, gonjayesh, koofi, nonecknoel
- Polish:
  GEEZET1, Pihjun, tenderloin, weegoor, wiktoriatomzik
- Portuguese (Brazil): 
  flaviove, CypherZnnb, Bk__13, CRCF, darkcrystal, eduaddadbr, leovasone, nopum, vmattos, Communia
- Portuguese (Portugal): 
  manuelarodsilva,  Bk__13, mrBatsu
- Romanian:
  alex1lazar, libertatemes, tud0r
- Russian: 
  anm, dianazryn, emedvedev, Ifti, foxing29, neocaching, Pihjun, ZiPERR
- Spanish: 
  arielbarbosa, Maria_Jose, emmapeel, strel, zakooch, Aetheria, Fabiola.mauriceh, Fitoschido, kodachi, lenazun, nosense, supermigue2000, vareli, antonela_
- Tatar:
  seber
- Thai:
  bact'
- Turkish:  
  falcontr06, kayazeren, ali_demirtas
- Ukrainian: 
  Herenko, lyubomyr, MykolaBubelich, Kataphan, Pihjun, gr3ttle
- Vietnamese: 
  AshCopper, PMinhDuc, Shinigami


## Contributors

This project exists thanks to all the people who contribute. 



## Backers

Thank you to all our backers! 🙏 [[Become a backer](https://opencollective.com/OnionBrowser#backer)]




## Sponsors

Support this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/OnionBrowser#sponsor)]













## How to build yourself

Build instructions can be found in [BUILD.md](BUILD.md).


## Further reading

https://tordev.guardianproject.info
","'anonymity', 'browser', 'ios', 'mobile', 'mpl', 'objective-c', 'onion', 'privacy', 'security', 'tor', 'tor-network', 'web-browser'",2012-02-24T08:50:51Z,2024-06-03T10:48:10Z,15,15,2227,162,"('tladesignz', 976), ('jcs', 343), ('mtigas', 112), ('LucasLarson', 2), ('userNameIsBoris', 1), ('GEEZET1', 1), ('janpio', 1), ('monkeywithacupcake', 1), ('mabaeyens', 1), ('mikezs', 1), ('fel1x-developer', 1), ('tsekityam', 1), ('ingfabby', 1), ('isak-n', 1), ('kosyloa', 1)",11,11,
jehiah/urlnorm,Convert URL's to a normalized unicode format,"urlnorm.py
==========

Normalize a URL to a standard unicode representation

urlnorm normalizes a URL by:

  * lowercasing the scheme and hostname
  * converting the hostname to IDN format
  * taking out default port if present (e.g., http://www.foo.com:80/)
  * collapsing the path (./, ../, etc)
  * removing the last character in the hostname if it is '.'
  * unquoting any % escaped characters (where possible)

Installation
============

    pip install urlnorm


Example
=======

    >>> import urlnorm
    >>> urlnorm.norm(""http://xn--q-bga.com./u/u/../%72/l/"")
    u'http://q\xe9.com/u/r/l/'

",,2010-07-15T02:45:13Z,2018-02-08T23:59:27Z,4,3,67,5,"('jehiah', 20), ('ninowalker', 1), ('Oliver Hardt', 1), ('talam', 1)",3,2,
metowolf/BilibiliHelper,:taco: B 站自动领瓜子、直播挂机脚本，!!! 非 B 站后台源码 !!!,"








# BilibiliHelper

B 站挂机实用脚本，[>> 点此返回 PHP 旧版](https://github.com/metowolf/BilibiliHelper/tree/0.9x)

## 功能组件

|plugin      |version  |description   |
|------------|---------|--------------|
|Auth        |19.02.11 |帐号登录组件    |
|Capsule     |19.02.12 |扭蛋机(普通)    |
|DailyBag    |19.04.22 |每日礼包领取    |
|Group       |19.02.11 |应援团签到     |
|Guard       |19.05.03 |舰长亲密度领取  |
|Heart       |19.02.11 |双端直播间心跳  |
|Silver      |19.02.11 |免费宝箱领取    |
|Silver2Coin |19.02.12 |银瓜子兑换硬币  |
|Task        |19.02.11 |每日任务       |


## 环境依赖

|Requirement|
|-------|
|Node.js (>=8.x)|


## 搭建指南

 - [Docker 搭建指南](https://github.com/metowolf/BilibiliHelper/wiki/Docker-%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97)  
 - [Node.js 搭建指南](https://github.com/metowolf/BilibiliHelper/wiki/Node.js-%E9%83%A8%E7%BD%B2%E6%8C%87%E5%8D%97)


## License 许可证

本项目基于 MIT 协议发布，并增加了 SATA 协议。

当你使用了使用 SATA 的开源软件或文档的时候，在遵守基础许可证的前提下，你必须马不停蹄地给你所使用的开源项目 “点赞” ，比如在 GitHub 上 star，然后你必须感谢这个帮助了你的开源项目的作者，作者信息可以在许可证头部的版权声明部分找到。

本项目的所有代码文件、配置项，除另有说明外，均基于上述介绍的协议发布，具体请看分支下的 LICENSE。

此处的文字仅用于说明，条款以 LICENSE 文件中的内容为准。
","'bilibili', 'docker', 'nodejs'",2017-07-24T14:45:02Z,2023-02-03T02:27:57Z,8,6,952,35,"('metowolf', 56), ('XiaoLin', 4), ('NeverBehave', 3), ('OrdosX', 2), ('flasco', 2), ('LynMoe', 1), ('dependabotbot', 1), ('gtbl2012', 1)",3,3,
angular-ui/bootstrap,"PLEASE READ THE PROJECT STATUS BELOW.  Native AngularJS (Angular) directives for Bootstrap. Smaller footprint (20kB gzipped), no 3rd party JS dependencies (jQuery, bootstrap JS) required. Please read the README.md file before submitting an issue!","# Project Status (please read)
Due to [Angular](https://angular.io)'s continued adoption, our creation of [the Angular version of this library](https://ng-bootstrap.github.io), and the the project maintainers' moving on to other things, this project is considered feature-complete and is no longer being maintained.

We thank you for all your contributions over the years and hope you've enjoyed using this library as much as we've had developing and maintaining it.  It would not have been successful without them.

---

### UI Bootstrap - [AngularJS](http://angularjs.org/) directives specific to [Bootstrap](http://getbootstrap.com)

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular-ui/bootstrap?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![Build Status](https://secure.travis-ci.org/angular-ui/bootstrap.svg)](http://travis-ci.org/angular-ui/bootstrap)
[![devDependency Status](https://david-dm.org/angular-ui/bootstrap/dev-status.svg?branch=master)](https://david-dm.org/angular-ui/bootstrap#info=devDependencies)
[![CDNJS](https://img.shields.io/cdnjs/v/angular-ui-bootstrap.svg)](https://cdnjs.com/libraries/angular-ui-bootstrap/)

### Quick links
- [Demo](#demo)
- [Angular 2](#angular-2)
- [Installation](#installation)
    - [NPM](#install-with-npm)
    - [Bower](#install-with-bower)
    - [NuGet](#install-with-nuget)
    - [Custom](#custom-build)
    - [Manual](#manual-download)
- [Webpack / JSPM](#webpack--jspm)
- [Support](#support)
    - [FAQ](#faq)
    - [Code of Conduct](#code-of-conduct)
    - [PREFIX MIGRATION GUIDE](#prefix-migration-guide)
    - [Supported browsers](#supported-browsers)
    - [Need help?](#need-help)
    - [Found a bug?](#found-a-bug)
- [Contributing to the project](#contributing-to-the-project)
- [Development, meeting minutes, roadmap and more.](#development-meeting-minutes-roadmap-and-more)


# Demo

Do you want to see directives in action? Visit https://angular-ui.github.io/bootstrap/!

# Angular 2

Are you interested in Angular 2? We are on our way! Check out [ng-bootstrap](https://github.com/ui-bootstrap/core).

# Installation

Installation is easy as UI Bootstrap has minimal dependencies - only the AngularJS and Twitter Bootstrap's CSS are required.
*Notes:*
* Since version 0.13.0, UI Bootstrap depends on [ngAnimate](https://docs.angularjs.org/api/ngAnimate) for transitions and animations, such as the accordion, carousel, etc. Include `ngAnimate` in the module dependencies for your app in order to enable animation.
* UI Bootstrap depends on [ngTouch](https://docs.angularjs.org/api/ngTouch) for swipe actions. Include `ngTouch` in the module dependencies for your app in order to enable swiping.

## Angular Requirements
* UI Bootstrap 1.0 and higher _requires_ Angular 1.4.x or higher and it has been tested with Angular 1.4.8.
* UI Bootstrap 0.14.3 is the _last_ version that supports Angular 1.3.x.
* UI Bootstrap 0.12.0 is the _last_ version that supports Angular 1.2.x.

## Bootstrap Requirements
* UI Bootstrap requires Bootstrap CSS version 3.x or higher and it has been tested with Bootstrap CSS 3.3.6.
* UI Bootstrap 0.8 is the _last_ version that supports Bootstrap CSS 2.3.x.

#### Install with NPM

```sh
$ npm install angular-ui-bootstrap
```

This will install AngularJS and Bootstrap NPM packages.

#### Install with Bower
```sh
$ bower install angular-bootstrap
```

Note: do not install 'angular-ui-bootstrap'.  A separate repository - [bootstrap-bower](https://github.com/angular-ui/bootstrap-bower) - hosts the compiled javascript file and bower.json.

#### Install with NuGet
To install AngularJS UI Bootstrap, run the following command in the Package Manager Console

```sh
PM> Install-Package Angular.UI.Bootstrap
```

#### Custom build

Head over to https://angular-ui.github.io/bootstrap/ and hit the *Custom build* button to create your own custom UI Bootstrap build, just the way you like it.

#### Manual download

After downloading dependencies (or better yet, referencing them from your favorite CDN) you need to download build version of this project. All the files and their purposes are described here:
https://github.com/angular-ui/bootstrap/tree/gh-pages#build-files
Don't worry, if you are not sure which file to take, opt for `ui-bootstrap-tpls-[version].min.js`.

### Adding dependency to your project

When you are done downloading all the dependencies and project files the only remaining part is to add dependencies on the `ui.bootstrap` AngularJS module:

```js
angular.module('myModule', ['ui.bootstrap']);
```

# Webpack / JSPM

To use this project with webpack, follow the [NPM](#install-with-npm) instructions.
Now, if you want to use only the accordion, you can do:

```js
import accordion from 'angular-ui-bootstrap/src/accordion';

angular.module('myModule', [accordion]);
```

You can import all the pieces you need in the same way:

```js
import accordion from 'angular-ui-bootstrap/src/accordion';
import datepicker from 'angular-ui-bootstrap/src/datepicker';

angular.module('myModule', [accordion, datepicker]);
```

This will load all the dependencies (if any) and also the templates (if any).

Be sure to have a loader able to process `css` files like `css-loader`.

If you would prefer not to load your css through your JavaScript file loader/bundler, you can choose to import the `index-nocss.js` file instead, which is available for the modules:
* carousel
* datepicker
* datepickerPopup
* dropdown
* modal
* popover
* position
* timepicker
* tooltip
* typeahead

The other modules, such as `accordion` in the example below, do not have CSS resources to load, so you should continue to import them as normal:

```js
import accordion from 'angular-ui-bootstrap/src/accordion';
import typeahead from 'angular-ui-bootstrap/src/typeahead/index-nocss.js';

angular.module('myModule', [accordion, typeahead]);
```

# Versioning

Pre-2.0.0 does not follow a particular versioning system. 2.0.0 and onwards follows [semantic versioning](http://semver.org/). All release changes can be viewed on our [changelog](CHANGELOG.md).

# Support

## FAQ

https://github.com/angular-ui/bootstrap/wiki/FAQ

# Code of Conduct

Take a moment to read our [Code of Conduct](CODE_OF_CONDUCT.md)

## PREFIX MIGRATION GUIDE

If you're updating your application to use prefixes, please check the [migration guide](https://github.com/angular-ui/bootstrap/wiki/Migration-guide-for-prefixes).

## Supported browsers

Directives from this repository are automatically tested with the following browsers:
* Chrome (stable and canary channel)
* Firefox
* IE 9 and 10
* Opera
* Safari

Modern mobile browsers should work without problems.

## Need help?
Need help using UI Bootstrap?

* Live help in the IRC (`#angularjs` channel at the `freenode` network). Use this [webchat](https://webchat.freenode.net/) or your own IRC client.
* Ask a question in [StackOverflow](http://stackoverflow.com/) under the [angular-ui-bootstrap](http://stackoverflow.com/questions/tagged/angular-ui-bootstrap) tag.

**Please do not create new issues in this repository to ask questions about using UI Bootstrap**

## Found a bug?
Please take a look at [CONTRIBUTING.md](CONTRIBUTING.md#you-think-youve-found-a-bug) and submit your issue [here](https://github.com/angular-ui/bootstrap/issues/new).


----


# Contributing to the project

We are always looking for the quality contributions! Please check the [CONTRIBUTING.md](CONTRIBUTING.md) for the contribution guidelines.

# Development, meeting minutes, roadmap and more.

Head over to the [Wiki](https://github.com/angular-ui/bootstrap/wiki) for notes on development for UI Bootstrap, meeting minutes from the UI Bootstrap team, roadmap plans, project philosophy and more.
",,2012-10-05T18:27:01Z,2019-02-10T12:36:40Z,444,358,14304,760,"('wesleycho', 610), ('pkozlowski-opensource', 256), ('Foxandxss', 211), ('bekos', 130), ('chrisirhc', 110), ('ajoslin', 65), ('RobJacobs', 46), ('icfantv', 42), ('petebacondarwin', 20), ('deeg', 17), ('karianna', 17), ('joshdmiller', 13), ('Robin van Baalen', 10), ('Justin Hall', 9), ('davious', 9), ('chenyuzhcy', 7), ('mvhecke', 7), ('SidhNor', 5), ('navarroaxel', 4), ('Wei Wang', 4), ('zachlysobey', 3), ('BobbieBarker', 3), ('Wesley Cho', 3), ('inukshuk', 3), ('OzzieOrca', 3), ('ericzou', 3), ('pbrit', 2), ('paulorbpacheco', 2), ('lazychino', 2), ('RichardLitt', 2), ('realityking', 2), ('scamden', 2), ('tobigun', 2), ('tjgrathwell', 2), ('antonellopasella', 2), ('blah238', 2), ('ggcat', 2), ('hitautodestruct', 2), ('jodytate', 2), ('kwiateusz', 2), ('mokesmokes', 2), ('onjiro', 2), ('rvanbaalen', 2), ('wawyed', 2), ('matiboy', 2), ('mabi', 2), ('chicoxyzzy', 2), ('cvrebert', 2), ('svetlyak40wt', 2), ('adam187', 2), ('ayakovlevgh', 2), ('aitboudad', 2), ('AndriIushchuk', 2), ('fedyk', 2), ('Anthony Cleaver', 2), ('Antoine Pairet', 2), ('Caitlin Potter', 2), ('cvn', 2), ('dabos-GFI', 2), ('dlukez', 2), ('DaveWM', 2), ('dolevd', 2), ('bifodus', 2), ('Gias Kay Lee', 2), ('jiniguez', 2), ('SanjoSolutions', 2), ('JonathanGawrych', 2), ('just-boris', 2), ('mattlewis92', 2), ('sullivanpt', 2), ('Nathan Williams', 2), ('Slimmmo', 1), ('smithl', 1), ('Sneha Jain', 1), ('sdesmond', 1), ('trash', 1), ('SteffanLong', 1), ('nonplus', 1), ('Stepan Riha', 1), ('steven-prybylynskyi', 1), ('ravi-123', 1), ('nolsherry', 1), ('shayanelhami', 1), ('shaungrady', 1), ('Sergii Stotskyi', 1), ('soul-wish', 1), ('seankenny', 1), ('Sean Desmond', 1), ('Scottkao85', 1), ('schmuli', 1), ('samjulien', 1), ('sccheruku', 1), ('rysilva', 1), ('Venkatraman D', 1), ('Valentyn Shybanov', 1), ('musically-ut', 1), ('Urigo', 1), ('Umer Farooq', 1), ('tteke', 1), ('fidian', 1), ('Tuomo Jokimies', 1), ('Towne, Jeremy', 1), ('brentahiti', 1), ('tmcgee123', 1), ('Tom France', 1), ('SystemDisc', 1), ('tkothe', 1), ('Thorsten Möller', 1), ('tompi', 1), ('thienedits', 1), ('gitter-badger', 1), ('tkrotoff', 1), ('taktran', 1), ('Sylwester Grabowski', 1), ('Swiip', 1), ('iamfozzy', 1), ('say25', 1), ('Pavel R3VoLuT1OneR Zhytomirsky', 1), ('pdesgarets', 1), ('pschuegr', 1), ('psgibbs', 1), ('PatrickJS', 1), ('trickpattyFH20', 1), ('pjohnmeyer', 1), ('Paolo Milani', 1), ('zaknuces', 1), ('oleduc', 1), ('gonzoyumo', 1), ('oliversalzburg', 1), ('nunoarruda', 1), ('nivivive', 1), ('nishesj', 1), ('nils-wisiol', 1), ('ndelvalle', 1), ('nonmanifold', 1), ('NickHeiner', 1), ('suncat2000', 1), ('nickheiner-usds', 1), ('nherzing', 1), ('gorork', 1), ('rmckeel', 1), ('roomond', 1), ('Romain Laï-King', 1), ('Robbert Merlier', 1), ('rickirunge', 1), ('richardTowers', 1), ('Ricardo Faria', 1), ('RevanProdigalKnight', 1), ('ramdog', 1), ('claushellsing', 1), ('rafbgarcia', 1), ('RaananW', 1), ('palaslet', 1), ('prayagverma', 1), ('PowerKiKi', 1), ('Pierre Tardy', 1), ('philippd', 1), ('philBrown', 1), ('Petr Kotek', 1), ('Peter af Geijerstam', 1), ('PeterDaveHello', 1), ('perryhoffman', 1), ('Pem Taira', 1), ('c-vetter', 1), ('plondon', 1), ('plainkeyman', 1), ('philjones', 1), ('patricksmms', 1), ('nkpz', 1), ('nmccready', 1), ('mseancole', 1), ('mrmrs', 1), ('mme-private', 1), ('mattcollier', 1), ('slid1amo2n3e4', 1), ('lgaudez', 1), ('lepit31', 1), ('lastnico', 1), ('khlevon', 1), ('kfb', 1), ('trueinviso', 1), ('jvanbouchaute', 1), ('jsdevel', 1), ('jpmitche11', 1), ('jburson', 1), ('christianzzz', 1), ('lukasz-zak', 1), ('yoann-antoviaque', 1), ('wkh176', 1), ('venuatu', 1), ('unknown', 1), ('tomchentw', 1), ('stryju', 1), ('tiagoroldao', 1), ('thiagofelix', 1), ('themikelee', 1), ('tariqporter', 1), ('strille', 1), ('stonelee', 1), ('stan-z', 1), ('squelix', 1), ('sonofbjorn', 1), ('sohai', 1), ('mazavr', 1), ('MaarOfOz', 1), ('scarletsky', 1), ('sashless', 1), ('ruiann', 1), ('renkaixin', 1), ('rcholic', 1), ('zackarychapple', 1), ('kukac7', 1), ('btrauma8', 1), ('bryanbak', 1), ('bowenisdum', 1), ('bleggett', 1), ('ayu48', 1), ('atrinh', 1), ('ankit5990', 1), ('andrej.anafinow', 1), ('adam77', 1), ('lanterndev', 1), ('_pants', 1), ('yjukaku', 1), ('yakirac', 1), ('thomaswinckell', 1), ('WilliamRandol', 1), ('wil93', 1), ('wkonkel', 1), ('wking', 1), ('VitalyVoroshilov', 1), ('AVVS', 1), ('vli-say', 1), ('flachware', 1), ('jgleason', 1), ('imagentleman', 1), ('hsubu', 1), ('hamfastgamgee', 1), ('germannj', 1), ('jiimaho', 1), ('fassetar', 1), ('es128', 1), ('ehteshamkafeel', 1), ('wtc-dstone', 1), ('dgermek', 1), ('dmitry-dedukhin', 1), ('dlemstra', 1), ('deplay', 1), ('davidrus', 1), ('humphd', 1), ('dasu908', 1), ('damon.friendship', 1), ('crisbeto', 1), ('crhistianramirez', 1), ('Mrman', 1), ('cookfront', 1), ('ciplazar', 1), ('mismith', 1), ('Douglas Ludlow', 1), ('dmatteo', 1), ('dimitriwalters', 1), ('ddomingues', 1), ('DiHuang1986', 1), ('decafdennis', 1), ('uxtx', 1), ('TomaszZieleskiewicz', 1), ('Daniel Smith', 1), ('Daniel Smith', 1), ('Daniel Blanco', 1), ('DanWahlin', 1), ('Dan Caddigan', 1), ('Coridyn', 1), ('Corey Wilson', 1), ('connyay', 1), ('CloudNiner', 1), ('Christopher Rued', 1), ('cbebry', 1), ('cherbst', 1), ('krico', 1), ('christopherthielen', 1), ('cgat', 1), ('ianjosephwilson', 1), ('Henri Hietala', 1), ('gnesher', 1), ('mebibou', 1), ('Igosuki', 1), ('agrahamlincoln', 1), ('Graham Rounds', 1), ('Graham Rounds', 1), ('typesafe', 1), ('gerardorn', 1), ('thorn0', 1), ('groupsky', 1), ('gazoakley', 1), ('Franz Torghele', 1), ('fpipita', 1), ('filso', 1), ('fernando-sendMail', 1), ('Evan.Duncan', 1), ('svegliar', 1), ('kreigiron', 1), ('eweast', 1), ('eddiemonge', 1), ('duncanbeevers', 1), ('charlierudolph', 1), ('echo-bravo-yahoo', 1), ('arve0', 1), ('Arnaud Lachaume', 1), ('Armin Cifuentes', 1), ('unkleara', 1), ('anton-dev-ua', 1), ('Ankit Kumar', 1), ('andrenarchy', 1), ('ashaffer', 1), ('andreialecu', 1), ('a5sk4s', 1), ('adjohnson916', 1), ('amirhhz', 1), ('Alexandre David', 1), ('asurinov', 1), ('aeharding', 1), ('Alex Knowles', 1), ('alexmaze', 1), ('Alevale', 1), ('aroop', 1), ('nurikk', 1), ('Adam Tentis', 1), ('Aaron Mendez', 1), ('Charuru', 1), ('Chad King', 1), ('Casey Garland', 1), ('camjc', 1), ('caitp', 1), ('bgrohman', 1), ('RPGillespie6', 1), ('brunolellis', 1), ('tritonrc', 1), ('Brian Lewis', 1), ('BrianGenisio', 1), ('uberspeck', 1), ('bodia-uz', 1), ('bogdanalexe90', 1), ('Blackbaud-PatrickOFriel', 1), ('bitdeli-chef', 1), ('Bernd Helzer', 1), ('benthepoet', 1), ('bsiddiqui', 1), ('bgever', 1), ('amahfouz', 1), ('Avi Cherry', 1), ('Astashenkau', 1), ('stereocilia', 1), ('martco', 1), ('martin-brennan-csnet', 1), ('RopoMen', 1), ('Johnnyrook777', 1), ('marknadig', 1), ('mariocasciaro', 1), ('Siggen', 1), ('DSI-Entreprises', 1), ('MacTEC', 1), ('mwinkels', 1), ('lgalfaso', 1), ('luber', 1), ('Loyc59', 1), ('Louis Sivillo', 1), ('leyanlo', 1), ('Leonard Seymore', 1), ('L42y', 1), ('KyleUpchurch', 1), ('KyleMit', 1), ('kkruit', 1), ('kuitos', 1), ('david-kirkland', 1), ('Monish Parajuli', 1), ('onumossn', 1), ('mbuttu', 1), ('MikeMatusz', 1), ('Mike Fisher', 1), ('mhchen', 1), ('ChewTeaYeah', 1), ('mysza', 1), ('Michal Wesolowski', 1), ('Michal Charemza', 1), ('mlilli', 1), ('mikeknoll', 1), ('ballmw', 1), ('maxkorp', 1), ('maxfierke', 1), ('matthias-ccri', 1), ('Matthew McLeod', 1), ('daviesgeek', 1), ('mraible', 1), ('Matt Lewis', 1), ('MattEvanoff', 1), ('Narretz', 1), ('MartinNuc', 1), ('khashayar', 1), ('jimrollenhagen', 1), ('Tobino', 1), ('JeremyWeir', 1), ('jengeb', 1), ('Hadev-JHH', 1), ('jbarrus', 1), ('Jeff Treuting', 1), ('jeffcarey', 1), ('jkandasa', 1), ('Rouche', 1), ('Hypercubed', 1), ('jaydiablo', 1), ('JasonTypesCodes', 1), ('Janne', 1), ('jczerwinski', 1), ('jsanders', 1), ('Jacobs', 1), ('JDeuker', 1), ('jbruni', 1), ('ivanvoznyakovsky', 1), ('yuyokk', 1), ('Incell', 1), ('B8li', 1), ('kmccaw', 1), ('kevinoid', 1), ('kbaltrinic', 1), ('karol-f', 1), ('ksieburg', 1), ('kyh', 1), ('th-kjohnson', 1), ('jdecool', 1), ('JuliaUsanova', 1), ('joshkurz', 1), ('Josh Friend', 1), ('joshuacc', 1), ('Jose Martinez', 1), ('selfservices', 1), ('ajpz', 1), ('BarryThePenguin', 1), ('Jon Jaques', 1), ('jonbcard', 1), ('jroxendal', 1), ('thisboyiscrazy', 1), ('zacronos', 1), ('Joe Grund', 1), ('Gahen', 1)",373,298,
aosp-mirror/platform_build,,"# Android Make Build System

This is the Makefile-based portion of the Android Build System.

For documentation on how to run a build, see [Usage.txt](Usage.txt)

For a list of behavioral changes useful for Android.mk writers see
[Changes.md](Changes.md)

For an outdated reference on Android.mk files, see
[build-system.html](/core/build-system.html). Our Android.mk files look similar,
but are entirely different from the Android.mk files used by the NDK build
system. When searching for documentation elsewhere, ensure that it is for the
platform build system -- most are not.

This Makefile-based system is in the process of being replaced with [Soong], a
new build system written in Go. During the transition, all of these makefiles
are read by [Kati], and generate a ninja file instead of being executed
directly. That's combined with a ninja file read by Soong so that the build
graph of the two systems can be combined and run as one.

[Kati]: https://github.com/google/kati
[Soong]: https://android.googlesource.com/platform/build/soong/+/master
",,2008-10-21T18:19:56Z,2024-06-18T10:06:48Z,1569,239,421,61,"('Treehugger Robot', 7612), ('The Android Automerger', 4217), ('android-build-team Robot', 4024), ('colincross', 3759), ('Ying Wang', 3471), ('Android Build Coastguard Worker', 3345), ('Tao Bao', 3133), ('danw', 2532), ('Treehugger Robot', 2128), ('Adam Seaton', 2066), ('scottamain', 1963), ('TreeHugger Robot', 1799), ('Anton Hansson', 1738), ('Yifan Hong', 1202), ('The Android Open Source Project', 1175), ('android-build-merge-worker-robot', 1146), ('enh-google', 1103), ('Ying Wang', 974), ('DanAlbert', 968), ('The Android Automerger', 949), ('Paul Scovanner', 925), ('Jean-Baptiste Queru', 853), ('chih-hung', 837), ('jiyongp', 813), ('Tianjie Xu', 765), ('delphij', 721), ('Kelvin Zhang', 715), ('Colecf', 711), ('silverneko', 627), ('ddougherty', 606), ('Steve Berbary', 596), ('smore-lore', 494), ('marstj', 474), ('Doug Zongker', 466), ('onoratoj', 459), ('Dennis Shen', 449), ('szuweilin', 449), ('bowgotsai', 446), ('bbadour', 440), ('Wei Li', 423), ('Jooyung Han', 411), ('bohu-google', 410), ('stephenhines', 402), ('narayank', 394), ('Baligh Uddin', 392), ('Nicolas Geoffray', 381), ('Mathieu Chartier', 380), ('Ulyana Trafimovich', 344), ('Alex Klyubin', 342), ('iskim517', 340), ('nickkral', 337), ('paulduffin', 309), ('agampe', 304), ('bdcgoogle', 303), ('Bill Yi', 297), ('Ian Pedowitz', 290), ('Justin Yun', 290), ('amhk', 288), ('Dan Shi', 281), ('Bassem Khalife', 280), ('Zach Jang', 276), ('gyias', 270), ('Daniel-Norman', 270), ('gkousik', 261), ('shinh', 248), ('Yohann Roussel', 247), ('Zhi Dou', 246), ('Lokesh Kumar Goel', 242), ('eugenis', 238), ('Tom Cherry', 233), ('dimitry-', 230), ('desprezj', 227), ('devinmoore-goog', 223), ('roland-levillain', 223), ('alexbuy', 220), ('Dianne Hackborn', 220), ('nfuller', 219), ('asmundak', 218), ('Android (Google) Code Review', 214), ('digit-android', 212), ('Daniel Zheng', 205), ('Steve Muckle', 205), ('Andrew Hsieh', 201), ('Isaac Chen', 201), ('Mark Salyzyn', 199), ('dvandercorp', 198), ('jiakaiz-g', 194), ('Nan Zhang', 194), ('android-build SharedAccount', 191), ('ankbakshi', 190), ('cferris1000', 189), ('bpeckham64', 185), ('15characterlimi', 179), ('Calin Juravle', 178), ('brazdil', 174), ('Elisa Pascual Trevino', 172), ('dasspandan', 171), ('Android Build Merger (Role)', 168), ('Ben Cheng', 168), ('arkassay', 164), ('ivanloz', 164), ('captain5050', 158), ('nioffe', 155), ('Xavier Ducrohet', 152), ('Kiyoung Kim', 149), ('lamontj', 149), ('pirama-arumuga-nainar', 146), ('ikicha', 141), ('mathjeff', 139), ('Artur-Satayev', 137), ('kruton', 137), ('Doug Zongker', 137), ('Vishwath Mohan', 134), ('fmayer', 127), ('dariofreni', 126), ('ramymedhat', 122), ('deymo', 121), ('Robert Ly', 120), ('kongy', 120), ('jeffvanderstoep', 118), ('jihoonkang0829', 117), ('Tim Murray', 116), ('yabinc', 113), ('joefernandez', 112), ('Raphael', 112), ('mkayyash', 108), ('Ted Bauer', 108), ('Roman Kiryanov', 100), ('samitolvanen', 100), ('Adam Lesinski', 99), ('Android Build Merger (Role)', 98), ('rpius', 97), ('Duy Truong', 96), ('Hridya Valsaraju', 95), ('Joe Onorato', 95), ('RemiNVG', 95), ('Simran Basi', 94), ('Keun young Park', 93), ('loganchien', 92), ('William Roberts', 91), ('Martijn Coenen', 91), ('Tri Vo', 90), ('sgjesse', 89), ('Hung-ying Tyan', 87), ('pcc', 87), ('ohodson', 85), ('ralf-at-android', 85), ('pszc', 84), ('Ed Heyl', 84), ('nocry22', 83), ('Hongguang Chen', 83), ('wileyatgoogle', 82), ('alanv', 81), ('jin', 81), ('Kalesh Singh', 80), ('Tianjie', 80), ('Guang Zhu', 79), ('tornewuff', 78), ('clay-murphy', 77), ('Jeff Brown', 76), ('gcondra', 76), ('Michael Runge', 75), ('Ulya Trafimovich', 73), ('davidz25', 72), ('jmgao', 72), ('drosen-google', 71), ('thedmail', 71), ('Sundong Ahn', 71), ('denniscy1993', 70), ('yuntaoxu6', 70), ('marcone', 69), ('jsharkey', 69), ('gitkaiser', 69), ('Bart Sears', 69), ('mathewinwood', 68), ('Michael Wright', 68), ('hctim', 68), ('Presubmit Automerger Backend', 67), ('victorhsieh', 67), ('chriswailes', 67), ('Jaegeuk Kim', 66), ('opggoog', 65), ('dcashman', 65), ('JayXon', 65), ('stnma7e', 65), ('miaowang14', 65), ('Ed Heyl', 65), ('Alan Leung', 65), ('Chen Xu', 63), ('yliu98', 63), ('Alyssa Ketpreechasawat', 61), ('Ibrahim Kanouche', 61), ('Jeff Sharkey', 60), ('melcz', 60), ('iam', 59), ('android-merger', 59), ('Brett Chabot', 58), ('cwgroos', 58), ('deepanshu-', 58), ('jdduke', 58), ('lpy', 57), ('Makoto Onuki', 57), ('hsinyichen-google', 57), ('Aditya Choudhary', 56), ('gvictor', 55), ('rprichard', 55), ('apolyudov', 54), ('J. Avila', 53), ('Vinh Tran', 53), ('medialajos', 52), ('ryanjcampbell', 51), ('android-merger', 51), ('Yihan Dong', 51), ('jyescas', 50), ('Ulya Trofimovich', 50), ('Bjoern Johansson', 50), ('Sebastien Hertz', 49), ('Sriram Raman', 49), ('lizkammer', 48), ('android-build-prod (mdb)', 48), ('allight', 47), ('Howard Chen', 47), ('Jae Shin', 47), ('Vilas Bhat', 47), ('Yurii Zubrytskyi', 47), ('leozwang-google', 46), ('vmarko', 46), ('Oliver Nguyen', 46), ('dsrbecky', 46), ('Luca Farsi', 45), ('patils', 45), ('jham', 45), ('Eric Laurent', 45), ('TheCoryBarker', 44), ('Dan Bornstein', 44), ('Lubo Hristov', 44), ('t-rad679', 43), ('Rob Seymour', 42), ('jpa468', 41), ('Bruce Beare', 41), ('Pete Gillin', 40), ('Petri Gynther', 40), ('surenbaghdasaryan', 40), ('sganov', 40), ('Brian Muramatsu', 39), ('741g', 39), ('nelsonli', 38), ('weivincewang', 38), ('vijaykv-google', 38), ('Vic Yang', 38), ('Sarah Chin', 38), ('Dima Zavin', 38), ('James Dong', 37), ('ptosi', 37), ('roozbehp', 37), ('yangbill', 37), ('Iliyan Malchev', 36), ('Jim Tang', 36), ('scrubskip', 36), ('laverst', 36), ('Tsu Chiang Chuang', 36), ('gkasten', 35), ('Wink Saville', 35), ('Raphael Moll', 35), ('prbprbprb', 34), ('sfutenma', 34), ('Ben Cheng', 33), ('cco3', 33), ('wgtdkp', 33), ('Todd Kennedy', 32), ('Steve Fung', 32), ('sbgoog', 32), ('Nelson Li', 32), ('Jayant Chowdhary', 32), ('Bill Rassieur', 32), ('fadden', 32), ('Ben Murdoch', 32), ('theandi666', 31), ('Chong Zhang', 31), ('Ji-Hwan Lee', 31), ('Jin Qian', 31), ('midodd', 31), ('Mike Lockwood', 31), ('Roman Nurik', 31), ('timvpGoogle', 31), ('allenhair', 31), ('Zhuoyao Zhang', 30), ('ZeekWang', 30), ('pixelflinger', 30), ('Eino-Ville Talvala', 30), ('danielcdh', 30), ('David Sehr', 30), ('pattjin', 29), ('k311093', 29), ('agespi-g', 29), ('Jeff Arneson', 29), ('mschwart', 29), ('freeinfra', 29), ('Lucas Wei', 29), ('Pranav Gupta', 29), ('samccone', 29), ('xt0032rus', 28), ('gmdimino', 28), ('Stuart Scott', 28), ('Ken Sumrall', 27), ('Mohammad Samiul Islam', 27), ('Patrice Arruda', 27), ('Steve Moyer', 27), ('egnor', 27), ('swetland', 27), ('jeffyhao', 26), ('richard-uhler', 26), ('KenChen23', 26), ('Justin Ho', 26), ('Janis Danisevskis', 26), ('Ian Kasprzak', 26), ('Gurpreet Singh', 26), ('greghackmann', 26), ('danielmentzgoogle', 26), ('Claes Elgemark', 26), ('Akilesh Kailash', 26), ('borgerag', 25), ('mikeandroid', 25), ('pprabhu-oss', 25), ('Savitha Gouda', 25), ('tnorbye', 25), ('keunyoung', 24), ('toddpoynor', 24), ('Andres Morales', 24), ('amarkg', 24), ('2nd-half', 24), ('stephensmalley', 24), ('Shih-wei Liao', 24), ('rupertks', 24), ('rajekumar', 24), ('spicklg', 23), ('Steve Block', 23), ('marwahvikas', 23), ('yoshisatoyanagisawa', 23), ('wangzhou', 23), ('Po Hu', 23), ('lev-prol', 23), ('dsandler', 23), ('zachriggle', 22), ('ducrohet', 22), ('Sophie Zheng', 22), ('Pawin Vongmasa', 22), ('Paul Hu', 22), ('Motomu Utsumi', 22), ('Mikhail Naganov', 22), ('Mark Chien', 22), ('Kun Niu', 22), ('Konstantinos Menychtas', 22), ('XSJoJo', 22), ('Jing Ji', 22), ('Jesse Wilson', 22), ('Jeff Hamilton', 22), ('Dmitry Shmidt', 22), ('benoitlamarche', 22), ('Albert Martin', 22), ('Thierry Strudel', 21), ('Simon Wilson', 21), ('rbraunstein', 21), ('luca020400', 21), ('jgaillard85', 21), ('Christopher Tate', 21), ('Sanket Chinchalkar', 20), ('Ryosuke Matsuuchi', 20), ('rmuthiah', 20), ('Michael Butler', 20), ('Malcolm Chen', 20), ('Jose ""Pepe"" Galmes', 20), ('jpd236', 20), ('jmtrivi', 20), ('Griff Hazen', 20), ('George Mount', 20), ('Dirk Dougherty', 20), ('adrianroos', 20), ('jreck', 19), ('Justin Klaassen', 19), ('Lucas Dupin', 19), ('mitchellwills', 19), ('primiano', 19), ('tjohns', 19), ('vharrong', 19), ('vdonnefort', 19), ('patricktu', 19), ('Jing Yu', 19), ('Ilya Matyukhin', 19), ('Iavor-Valentin Iftime', 19), ('Henry Fang', 19), ('gburgessiv', 19), ('dpa-g', 19), ('Chris Banes', 19), ('brettchabot', 19), ('Benjamin Schwartz', 19), ('Alistair Strachan', 19), ('Paul Miller', 18), ('Ramji Jiyani', 18), ('roman-yepishev', 18), ('Scott Main', 18), ('0405ysj', 18), ('schfan-1', 18), ('yahanzhou', 18), ('yigit', 18), ('Yike Zhang', 18), ('Yuxin Hu', 18), ('Badhri Jagan Sridharan', 18), ('Badash', 18), ('Bjorn Bringert', 18), ('thestinger', 18), ('Dongwon Kang', 18), ('Fabien Sanglard', 18), ('omo', 18), ('Hung-Wei Chen', 18), ('taralx', 18), ('Joe LaPenna', 18), ('Joseph Murphy', 18), ('krocard', 18), ('Yang Ni', 17), ('wescande', 17), ('lcolitti', 17), ('Jay Aliomer', 17), ('gauravsh-google', 17), ('dougkwan', 17), ('dimorinny', 17), ('Dave Langemak', 17), ('cwren', 17), ('Bruce Beare', 17), ('Ben Dodson', 17), ('adelva1984', 17), ('Wenshan Fu', 16), ('Weilun Du', 16), ('Victoria Lease', 16), ('twasilczyk', 16), ('Ruchi Kandoi', 16), ('Ricardo Cervera', 16), ('waghpawan', 16), ('Matt Casey', 16), ('Marcin Kosiba', 16), ('lukewinds', 16), (""Julius D'souza"", 16), ('Jordan Demeulenaere', 16), ('Jesse Zhao', 16), ('Chris Li', 16), ('billnapier', 16), ('Bartosz Fabianowski', 16), ('AndrewScull', 16), ('mrahs', 16), ('amithds-aosp', 16), ('critsec', 15), ('Jimmy Chen', 15), ('mateuszz-ggl', 15), ('Omar Eissa', 15), ('Omer Osman', 15), ('hex539', 15), ('divegeek', 15), ('Shunkai Yao', 15), ('ukirazci', 15), ('Vineetas', 15), ('blackhogz', 15), ('adamp', 15), ('AlanStokes', 15), ('liutikas', 15), ('sbrocket', 15), ('sadmac7000', 15), ('Chen Zhu', 15), ('dmitriplotnikov', 15), ('duanes', 15), ('Fabián Cañas', 15), ('Fang Deng', 15), ('Hang Lu', 15), ('Nimrod Gileadi', 14), ('Paul Trautrim', 14), ('Phil Dubach', 14), ('Romain Jobredeaux', 14), ('Sooraj Sasindran', 14), ('Than McIntosh', 14), ('Tim Kilbourn', 14), ('Timothy Yiu', 14), ('Vladimir Chtchetkine', 14), ('Youkichi Hosoi', 14), ('Ziwei Zhang', 14), ('rassb@google.com', 14), ('Yqwed', 14), ('Amit Mahajan', 14), ('edliaw', 14), ('hhb', 14), ('Harshit Mahajan', 14), ('Jaesoo Lee', 14), ('Joe Wang', 14), ('justin-morey', 14), ('Kevin Dagostino', 14), ('Kevin Lau Fang', 14), ('Matthew Mintz', 14), ('Nicholas Sauer', 14), ('Lev Rumyantsev', 13), ('Lukács T. Berki', 13), ('Maciej Zenczykowski', 13), ('Neha Pattan', 13), ('Owen Lin', 13), ('Patrik Fimml', 13), ('Santos Cordon', 13), ('Siva Velusamy', 13), ('Yifeng Zeng', 13), ('gitbuildkicker', 13), ('huans', 13), ('Amith Yamasani', 13), ('Andrew Boie', 13), ('Android Git Automerger', 13), ('Ben Fennema', 13), ('Chris Poultney', 13), ('Daniel Cashman', 13), ('Gavin Corkery', 13), ('Hiroshi Yamauchi', 13), ('Hyunyoung Song', 13), ('Jing-yan, Jang', 13), ('Jordan Liu', 13), ('Yu Shan', 12), ('Xiao Ma', 12), ('Xiangyu/Malcolm Chen', 12), ('Sreeram Ramachandran', 12), ('Sasha Levitskiy', 12), ('Sandro Montanari', 12), ('Nick Sanders', 12), ('Michael Groover', 12), ('Kostya Kortchinsky', 12), ('Adam Hampson', 12), ('Chengyou Ho', 12), ('David Gross', 12), ('Eric Fischer', 12), ('Evgeny Eltsin', 12), ('Furquan Shaikh', 12), ('Hamzeh Zawawy', 12), ('Hans Boehm', 12), ('Hunter Knepshield', 12), ('Kevin Cheng', 12), ('Al Sutton', 11), ('Michael Merg', 11), ('Mohammad Islam', 11), ('Muhammad Haseeb Ahmad', 11), ('Oli Lan', 11), ('Pavel Salomatov', 11), ('Philip P. Moltmann', 11), ('Pierre Couillaud', 11), ('Roberto Gil Del Sol', 11), ('Seth Moore', 11), ('Thiébaud Weksteen', 11), ('android-build SharedAccount', 11), ('xunchang', 11), ('Brad Ebinger', 11), ('Bryan Eyler', 11), ('Chad Jones', 11), ('Cheonho Park', 11), ('Emilian Peev', 11), ('Felix', 11), ('Frank Wang', 11), ('Greg Hartman', 11), ('Hui Shu', 11), ('Kirill Grouchnikov', 11), ('Lee Campbell', 11), ('Marie Janssen', 11), ('Alice Wang', 10), ('Nick Pelly', 10), ('Nikola Veljkovic', 10), ('Paul Crowley', 10), ('Raman Tenneti', 10), ('Ray Essick', 10), ('Robert Shih', 10), ('Scott Kennedy', 10), ('Steve Howard', 10), ('Tim Joines', 10), ('Tony Mantler', 10), ('William Loh', 10), ('Yan Yan', 10), ('Yunlian Jiang', 10), ('hungweichen', 10), ('Andrew Solovay', 10), ('Ari Hausman-Cohen', 10), ('Chia-chi Yeh', 10), ('Chih-Chung Chang', 10), ('Chuong Hoang', 10), ('Dave Allison', 10), ('Dolly Dhariwal', 10), ('Eran Messeri', 10), ('Geoff Lang', 10), ('Islam Elbanna', 10), ('Jack He', 10), ('Jeff Tinker', 10), ('Matt Wachowski', 10), ('Nick Desaulniers', 10), ('Kevin Han', 9), ('Marius Renn', 9), ('Michael Dooley', 9), ('Mike Frysinger', 9), ('Paul Lawrence', 9), ('Po-Chien Hsueh', 9), ('Rahul Chaudhry', 9), ('Ryan Longair', 9), ('Stefan De Clercq', 9), ('Victoria Lease', 9), ('Wale Ogunwale', 9), ('Yan Wang', 9), ('Yao Chen', 9), ('Yusuf Ozuysal', 9), ('dianlujitao', 9), ('Abhishek Nigam', 9), ('Andrew Chant', 9), ('Anthony Hugh', 9), ('Ashwini Oruganti', 9), ('Billy Lamberta', 9), ('Dan Cashman', 9), ('Dan Morrill', 9), ('Dave Mankoff', 9), ('Erick Alvarez', 9), ('Frederick Mayle', 9), ('Iván Budnik', 9), ('Jean-Luc Brouillet', 9), ('Jim Huang', 9), ('Juho Kim', 9), ('Jusik Chung', 9), ('Omari Stephens', 8), ('Patrick Rohr', 8), ('Patrick Scott', 8), ('Pavel Chupin', 8), ('Peter Kalauskas', 8), ('Raph Levien', 8), ('Rich Slogar', 8), ('Richard Xie', 8), ('jiajia tang', 8), ('Nick Vaccaro', 8), ('Neha Jain', 8), ('Mike Ritter', 8), ('Micha Schwab', 8), ('Max Bires', 8), ('Matthew Sedam', 8), ('Mateusz Cicheński', 8), ('Mark Renouf', 8), ('hansson', 8), ('Zi Wang', 8), ('Yu Ning', 8), ('Wonsik Kim', 8), ('Will McVicker', 8), ('Usta Shrestha', 8), ('Tongbo Liu', 8), ('Tiffany Yang', 8), ('Sunny Goyal', 8), ('Sunil Ravi', 8), ('Sudheer Shanka', 8), ('Sijie Chen', 8), ('Seigo Nonaka', 8), ('Santiago Aboy Solanes', 8), ('Sandeep Dhavale', 8), ('Robert Greenwalt', 8), ('Dan Stoza', 8), (""Connor O'Brien"", 8), ('Chris Fries', 8), ('Chih-Wei Huang', 8), ('Bruno BELANYI', 8), ('Beth Thibodeau', 8), ('Avichal Rakesh', 8), ('Andriy Naborskyy', 8), ('Alistair Strachan', 8), ('Alexander Levitskiy', 8), ('Alex Ray', 8), ('Alex Márquez Pérez Muñíz Díaz Púras Thaureaux', 8), ('Albert Wang', 8), ('Alain Vongsouvanh', 8), ('Ahmad Khalil', 8), ('Adam Shih', 8), ('Luis Hector Chavez', 8), ('Ken Sun', 8), ('Junfeng Wu', 8), ('Joshua Lang', 8), ('Johan Redestig', 8), ('Jamie Gennis', 8), ('James Chen', 8), ('Jack Palevich', 8), ('Ivan Podogov', 8), ('Hsiu-Chang Chen', 8), ('Harpreet ""Eli"" Sangha', 8), ('Handa Wang', 8), ('Gustav Sennton', 8), ('Gilad Arnold', 8), ('Fred Quintana', 8), ('Felipe Leme', 8), ('Maxim Siniavine', 7), ('Meng Wang', 7), ('Ming-Chen Chung', 7), ('Nick Kovacs', 7), ('Niranjan Pendharkar', 7), ('Oleg Aravin', 7), ('Paul Westbrook', 7), ('Prashant Dubey', 7), ('yawanng', 7), ('Kadir Çetinkaya', 7), ('Justin DeMartino', 7), ('Jon Boekenoogen', 7), ('Jim Kaye', 7), ('Jason Tholstrup', 7), ('Jason Monk', 7), ('Jaikumar Ganesh', 7), ('Jack Yu', 7), ('paulhu', 7), ('madym', 7), ('karenluo', 7), ('Zheng Zhang', 7), ('Zhen Zhang', 7), ('Yin-Chia Yeh', 7), ('Xianyuan Jia', 7), ('Shaju Mathew', 7), ('Serik Beketayev', 7), ('Sebastian Ene', 7), ('Santiago Seifert', 7), ('Ryan Zuklie', 7), ('Roberto Gil', 7), ('Robert Craig', 7), ('Qing Shen', 7), ('Priyanka Advani', 7), ('Issei Suzuki', 7), ('Courtney Goeltzenleuchter', 7), ('Cindy Zhou', 7), ('Chung-yih Wang', 7), ('Chun-Yi Lee', 7), ('Christoffer Quist Adamsen', 7), ('Christine Tsai', 7), ('Chet Haase', 7), ('C. Sean Young', 7), ('Bram Bonné', 7), ('Beverly Tai', 7), ('Benoit Goby', 7), ('Ankit Goyal', 7), ('Android Code Review', 7), ('Andrei Popescu', 7), ('Amy Zhang', 7), ('Akshay Thakker', 7), ('Insaf Latypov', 7), ('Håkan Kvist', 7), ('Hyundo Moon', 7), ('Huan Ren', 7), ('Gaurav Mathur', 7), ('Firman Prayoga', 7), ('Ficus Kirkpatrick', 7), ('Esteban Talavera', 7), ('Eric Miao', 7), ('Diego Wilson', 7), ('Devarshi Bhatt', 7), ('David Su', 7), ('David Iserovich', 7), ('David Fu', 7), ('Dave Bort', 7), ('Daniel Sandler', 7), ('Ralph Nathan', 6), ('Pascal Mütschard', 6), ('Palmer Dabbelt', 6), ('Mike Reed', 6), ('Marissa Wall', 6), ('Mariano Giardina', 6), ('Luan Nguyen', 6), ('Linzhao Ye', 6), ('Lee Shombert', 6), ('Kristian Monsen', 6), ('Kris Alder', 6), ('Keun-young Park', 6), ('Kedar Chitnis', 6), ('Ahaan Ugale', 6), ('Ronish Kalia', 6), ('Roopa Sattiraju', 6), ('Saravana Kannan', 6), ('Sharif Elcott', 6), ('Shikha Panwar', 6), ('Shubham Ajmera', 6), ('T.R. Fullhart', 6), ('Vinit Deshpande', 6), ('Will Burr', 6), ('Winson Chiu', 6), ('Yu-Han Yang', 6), ('Zach Johnson', 6), ('hamzeh', 6), ('markchien', 6), ('Ahmed ElArabawy', 6), ('Alina Kalyakina', 6), ('Alon Albert', 6), ('Android Git Automerger', 6), ('Andy Hung', 6), ('Ayush Sharma', 6), ('Carmen Jackson', 6), ('Christopher Parsons', 6), ('Cynthia Wasonga', 6), ('Daeho Jeong', 6), ('Daniel Cardenas', 6), ('Felix Elsner', 6), ('Flavio Lerda', 6), ('Kavi Gupta', 6), ('Juju Sung', 6), ('Joseph Jang', 6), ('Joanne Chung', 6), ('Joachim Sauer', 6), ('Jerry Jia', 6), ('Jason Wu', 6), ('Jakub Adamek', 6), ('Jacky Liu', 6), ('Huang Jianan', 6), ('Howard Ro', 6), ('Harry Zhang', 6), ('George Chang', 6), ('Frank Feng', 6), ('Raghu Gandham', 5), ('Peter Qiu', 5), ('Patrick Tu', 5), ('Pangyen Chen', 5), ('P.Adarsh Reddy', 5), ('Olof Johansson', 5), ('Noreen Tolland', 5), ('Nick Chameyev', 5), ('Mike Ma', 5), ('Meike Baumgärtner', 5), ('Martin Brabham', 5), ('Martin Blumenstingl', 5), ('Magnus Strandh', 5), ('Ludovic Barman', 5), ('Louis Chang', 5), ('Justin Harrison', 5), ('David Hu', 5), ('zhidou', 5), ('synergydev', 5), ('easoncylee', 5), ('Zhomart Mukhamejanov', 5), ('Zhihai Xu', 5), ('Yasuhiro Kubota', 5), ('Will Osborn', 5), ('Wei Su', 5), ('Siyamed Sinir', 5), ('Shuzhen Wang', 5), ('Scott James Remnant', 5), ('Ryan Mitchell', 5), ('Robert Sesek', 5), ('Richard Haines', 5), ('Ricardo Garcia', 5), ('Rett Berg', 5), ('Ravi K Yenduri', 5), ('Daniel Colascione', 5), ('Christopher Tate', 5), ('Chris Elliott', 5), ('Chris Dearman', 5), ('Chiao Cheng', 5), ('Cheney Ni', 5), ('Brandon Ballinger', 5), ('Anton Kulakov', 5), ('Anna Zhuravleva', 5), ('Anna Bauza', 5), ('Andy Huang', 5), ('Andrew Lehmer', 5), ('Amin Shaikh', 5), ('Alexander Ivchenko', 5), ('Alex Naidis', 5), ('Adam Bliss', 5), ('John Grossman', 5), ('Jesse Pai', 5), ('Jason Monk', 5), ('Jakub Pawlowski', 5), ('Jaikumar Ganesh', 5), ('Ivan Kozlov 🤷🏻\u200d♂️', 5), ('Hassan Ali', 5), ('Harpreet \\""Eli\\"" Sangha', 5), ('Diego Vela', 5), ('Elliot Waite', 5), ('Ethan Xia', 5), ('Etienne Ruffieux', 5), ('Filip Gruszczynski', 5), ('George Lin', 5), ('Guillaume Chelfi', 5), ('Hai Zhang', 5), ('Hansen Kurli', 5), ('Morris Lin', 4), ('My Name', 4), ('Nate Myren', 4), ('Nishant Panwar', 4), ('Paul Hobbs', 4), ('Paul Jensen', 4), ('Paul Keith', 4), ('Phil Burk', 4), ('Phil Dubach', 4), ('Pierre Imai', 4), ('Prashant Patil', 4), ('Pulkit Bhuwalka', 4), ('Rafal Slawik', 4), ('Rebecca Schultz Zavin', 4), ('yidong.zhang', 4), ('Michael Jurka', 4), ('Maurice Lam', 4), ('Matthew Ng', 4), ('Mark Teffeteller', 4), ('Maciej Żenczykowski', 4), ('Maarten Hooft', 4), ('Lukacs T. Berki', 4), ('Liana Kazanova', 4), ('Lance Jin-woong Chang', 4), ('Lance Chang', 4), ('Kyriakos Ispoglou', 4), ('Kris Giesing', 4), ('Kevin Cernekee', 4), ('Jun Tian', 4), ('Julie Pan', 4), ('yelinhsieh', 4), ('wufei3', 4), ('kaichieh', 4), ('joker.yang', 4), ('evitayan', 4), ('chenbruce', 4), ('cfig', 4), ('bralee', 4), ('bowen_lai', 4), ('Zhi An Ng', 4), ('Yuncheol Heo', 4), ('Yueming Wang', 4), ('Yorke Lee', 4), ('Yike', 4), ('Yanting Yang', 4), ('Wu-cheng Li', 4), ('Wei Huang', 4), ('Wally Yau', 4), ('Vikram Aggarwal', 4), ('Victor Liu', 4), ('Varun Shah', 4), ('The Android Automerger', 4), ('ShuJie Wang', 4), ('Shawn Yang', 4), ('Sandeep Vijayasekar', 4), ('Roopesh Nataraja', 4), ('Rong Xu', 4), ('Rom Lemarchand', 4), ('Robert Quattlebaum', 4), ('Daniel Nishi', 4), ('Dan Willemsen', 4), ('Dan Sinkiewicz', 4), ('Daichi Hirono', 4), ('Cyan Hsieh', 4), ('Chris Tate', 4), ('Chris Morin', 4), ('Chirayu Desai', 4), ('Chien-Yu Chen', 4), ('Cherry Ng', 4), ('Chenbo Feng', 4), ('Chen, ZhiminX', 4), ('Changyeon Jo', 4), ('Bruno Martins', 4), ('Brian Muramatsu', 4), ('Brandon Lee', 4), ('Brad Fitzpatrick', 4), ('Bill Yang', 4), ('Bertrand Simonnet', 4), ('Benjamin Gordon', 4), ('Benedict Wong', 4), ('Bart Van Assche', 4), ('Aurelio Jargas', 4), ('Andrei-Valentin Onea', 4), ('Alice Ryhl', 4), ('Alexander Mishkovets', 4), ('Alan Ma', 4), ('Adrien Schildknecht', 4), ('Adam Vartanian', 4), ('Jose Galmes', 4), ('John Muir', 4), ('Johan Harvyl', 4), ('Joe Malin', 4), ('Jerry Zhang', 4), ('Jeff DeCew', 4), ('Jean-Philippe Lesot', 4), ('Jason Sams', 4), ('Jason Parks', 4), ('Jared Lim', 4), ('James Lemieux', 4), ('Jag', 4), ('Isaac Lee', 4), ('Ikjoon Jang', 4), ('David Dai', 4), ('Derek Sollenberger', 4), ('Dharmaray Kundargi', 4), ('Doheon Lee', 4), ('Duane Sand', 4), ('Edwin Wong', 4), ('Eric Holk', 4), ('Eric Jeong', 4), ('Erik Gilling', 4), ('Evan Charlton', 4), ('Gloria Wang', 4), ('Herbert Xue', 4), ('Hongyi Zhang', 4), ('Hristo Bojinov', 4), ('Hugo Hudson', 4), ('Liz Prucka', 3), ('LuK1337', 3), ('Lucas Henneman', 3), ('Mac Wang', 3), ('Marc Kassis', 3), ('Maria Bornski', 3), ('Mark-PK Tsai', 3), ('Matthew Xie', 3), ('Michael Chan', 3), ('Miroslav Tisma', 3), ('Mohammed Habibulla', 3), ('tyiu', 3), ('Linus Tufvesson', 3), ('Lingfeng Guan', 3), ('Krzysztof Kosiński', 3), ('Kean Mariotti', 3), ('Karthik Ravi Shankar', 3), ('Kan-Ru Chen', 3), ('Ján Sebechlebský', 3), ('Jose Lima', 3), ('Jorg Pleumann', 3), (""Jiwen 'Steve' Cai"", 3), ('Jason Chen', 3), ('Jasmine Cha', 3), ('sophiez', 3), ('jiangxu5', 3), ('Yuli Huang', 3), ('Yohei Yukawa', 3), ('Woody Lin', 3), ('Wilson Sung', 3), ('Vinay Kalia', 3), ('Vignesh Venkatasubramanian', 3), ('Tyler Gunn', 3), ('Tim Tsai', 3), ('Tej Singh', 3), ('Tamas Petz', 3), ('T.J. Mercier', 3), ('Stefan Stanacar', 3), ('Serban Constantinescu', 3), ('Scott Anderson', 3), ('San Mehat', 3), ('Sam Dubey', 3), ('Romain Guy', 3), ('Rohit Mungee', 3), ('Oleh Cherpak', 3), ('Nicolas Prevot', 3), ('Ng Zhi An', 3), ('Debajit Ghosh', 3), ('Dave Sparks', 3), ('Daisuke Miyakawa', 3), ('Christoffer Dall', 3), ('Chris Forbes', 3), ('Chris Dearman', 3), ('Chirayu Desai', 3), ('Chih-Wei Huang', 3), ('ChengYou Ho', 3), ('Chaoren Lin', 3), ('Calvin Huang', 3), ('Brigid Smith', 3), ('Bob Hanji', 3), ('Björn Davidsson', 3), ('Bernhard Rosenkränzer', 3), ('Benjamin Pujol', 3), ('Ben Gilad', 3), ('Atte Peltomaki', 3), ('Anonymous Coward', 3), ('Andrew Stadler', 3), ('Amit Pawar', 3), ('Alexander Dorokhine', 3), ('Alex Medina', 3), ('Jan Sebechlebsky', 3), ('James Hawkins', 3), ('Jakub Adámek', 3), ('Jake Hamby', 3), ('Jackal Guo', 3), ('Ivailo Karamanolev', 3), ('Hugo Drumond Jacob', 3), ('Huan Song', 3), ('Hongguang', 3), ('Gina Ko', 3), ('Geoff Mendal', 3), ('Denis Vnukov', 3), ('Devin Kim', 3), ('Douglas Leung', 3), ('Ed Tam', 3), ('Edwin Tung', 3), ('Enrico Granata', 3), ('Erik Pasternak', 3), ('Frank Salim', 3), ('Gaelle Nassiet', 3), ('Gary King', 3), ('Gaurav Mathur', 3), ('Gaurav Sarode', 3), ('Ryo Fujii', 2), ('Ruchir Rastogi', 2), ('Romain Guy', 2), ('Rom Lemarchand', 2), ('Rock.Yeh', 2), ('Robert Greenwalt', 2), ('Rashid Zaman', 2), ('Ramanan Rajeswaran', 2), ('Raghu Gandham', 2), ('Quddus Chong', 2), ('Qiao Li', 2), ('Matt Alexander', 2), ('Saeid Farivar Asanjan', 2), ('Sam Lin', 2), ('Sandro', 2), ('Santiago Etchebehere', 2), ('Sasha Kuznetsov', 2), ('Satish Sampath', 2), ('Satoshi Niwa', 2), ('Scott Su', 2), ('Sean McNeil', 2), ('Sergei Makarov', 2), ('Shashikant Baviskar', 2), ('Matt Pape', 2), ('Maurice Chu', 2), ('Michael Bestas', 2), ('Mina Granic', 2), ('Miodrag Dinic', 2), ('Mridul Agarwal', 2), ('Muhammad Qureshi', 2), ('Mukesh Agrawal', 2), ('Myles Watson', 2), ('Mårten Kongstad', 2), ('Nahian Ashraf', 2), ('Naseer Ahmed', 2), ('Naveen Kalla', 2), ('Nicholas Ambur', 2), ('Oleksiy Avramchenko', 2), ('Orhan Uysal', 2), ('P Adarsh Reddy', 2), ('P.Y. Laligand', 2), ('Pascal Muetschard', 2), ('Pedro Loureiro', 2), ('Pete Delaney', 2), ('Piotr Jastrzebski', 2), ('Shimeng (Simon) Wang', 2), ('William McVicker', 2), ('William Roberts', 2), ('Woody Lin', 2), ('Xindong Xu', 2), ('Xusong Wang', 2), ('Ye Wen', 2), ('Yi Jin', 2), ('Yifei Zhang', 2), ('Yisroel Forta', 2), ('Yongqin Liu', 2), ('Ytai Ben-Tsvi', 2), ('Yu Wu', 2), ('Yu-Ting Tseng', 2), ('Zhong Dong', 2), ('changho.shin', 2), ('doheon1.lee', 2), ('frankfeng', 2), ('hkuang', 2), ('mukesh agrawal', 2), ('qiaoli', 2), ('rpcraig', 2), ('shared_user android-merger-prebuild', 2), ('Siarhei Vishniakou', 2), ('Slava Shklyaev', 2), ('Sravan Kumar Reddy Kallu', 2), ('Stephen Ho', 2), ('Stephen Li', 2), ('Steven Thomas', 2), ('Sumedh Sen', 2), ('Sungsoo Lim', 2), ('Tammo Spalink', 2), ('Terry Wang', 2), ('Thiago Amanajas', 2), ('Thiago Amanajás', 2), ('Thomas Tuttle', 2), ('Thorsten Glaser', 2), ('Timi', 2), ('Ting-Hsin Chen', 2), ('Tomasz Mikolajewski', 2), ('Tomislav Novak', 2), ('Valerie Hau', 2), ('Vasu Nori', 2), ('Vikram Dattu', 2), ('Wei-Ta Chen', 2), ('Aaron Holden', 2), ('Charisee Chiw', 2), ('Chris Craik', 2), ('Chris Parsons', 2), ('Chris Ye', 2), ('Christian Mehlmauer', 2), ('Christian Oder', 2), ('Cliff Wang', 2), ('Clinton Ke', 2), ('Dan Chapin', 2), ('Danica Chang', 2), ('Daniel Berlin', 2), ('Daniel Tsai', 2), ('David Riley', 2), ('David Wagner', 2), ('Diego Perez', 2), ('Dominik Laskowski', 2), ('DroidFreak32', 2), ('Etan Cohen', 2), ('Eugene Susla', 2), ('Fabrice Di Meglio', 2), ('Felka Chang', 2), ('Feng Qian', 2), ('Adam Buchbinder', 2), ('Adam Wright', 2), ('Aditya Kumar', 2), ('Ady Abraham', 2), ('Alec Mouri', 2), ('Alex Cheung', 2), ('Alex Sakhartchouk', 2), ('Alexey Tarasov', 2), ('Alfred Piccioni', 2), ('Amos Bianchi', 2), ('Andrew Flynn', 2), ('Andrew Lewis', 2), ('Android Culprit Assistant', 2), ('Anh Pham', 2), ('Anil Admal', 2), ('Anthony Stange', 2), ('Benoit Fradin', 2), ('Bernhard Rosenkraenzer', 2), ('Billy Lamberta', 2), ('Bookatz', 2), ('Carlos Martinez Romero', 2), ('Cary Clark', 2), ('Filip', 2), ('Jigar Thakkar', 2), ('Jim Miller', 2), ('Joey Jiao', 2), ('John Tsai', 2), ('Jonathan Dixon', 2), ('Jong Wook Kim', 2), ('Joseph Wen', 2), ('Josh Wu', 2), ('Joshua J. Drake', 2), ('Joshua Trask', 2), ('Kailin Luo', 2), ('Karthik Mahesh', 2), ('Kevin Chyn', 2), ('Kevin Hester', 2), ('Kimberly Kreider', 2), ('Kito Cheng', 2), ('Lalit Maganti', 2), ('Liming Wu', 2), ('Marc Blank', 2), ('Mark D Horn', 2), ('Mark Punzalan', 2), ('Masha Khokhlova', 2), ('Filip Zakrzewski', 2), ('Fredrik Roubert', 2), ('Fyodor Kupolov', 2), ('Garfield Tan', 2), ('Gaurav Johari', 2), ('GeQi', 2), ('Gregory Montoir', 2), ('Hai Shalom', 2), ('Hangyu Kuang', 2), ('Haoxiang Li', 2), ('Jayachandran C', 2), ('Jason parks', 2), ('Jagadeesh Pakaravoor', 2), ('Jag Ghoshal', 2), ('Jack Yu', 2), ('Ivan Krasin', 2), ('Isaac J. Manjarres', 2), ('Howard Yen', 2), ('Hidefumi Kaneko', 2), ('Helen Qin', 2), ('Hayden Gomes', 2), ('Harry Cutts', 2), ('zijunzhao', 1), ('Shibin George', 1), ('Shalini Salomi Bodapati', 1), ('Sergiu Ferentz', 1), ('Selene Huang', 1), ('Sean Dykeman', 1), ('SangWook Han', 1), ('SangWook Han', 1), ('Saagar Jha', 1), ('Ryo Hashimoto', 1), ('Ryan Lin', 1), ('Roger Chen', 1), ('Rod Whitby', 1), ('Robin Hsu', 1), ('Risan', 1), ('Riley Spahn', 1), ('Rick Zhang', 1), ('Ricardo Quesada', 1), ('Regnier, Philippe', 1), ('Ray-cy.lee', 1), ('Tim Roes', 1), ('Tim Becker', 1), ('Thomas Joseph Avila', 1), ('Tapas Pradhan', 1), ('Takeshi Kanemoto', 1), ('Taesu Lee', 1), ('TJ Rhoades', 1), ('Szu-An Lu', 1), ('Suprabh Shukla', 1), ('Sungtak Lee', 1), ('Sungmin Choi', 1), ('Suchi Amalapurapu', 1), ('Stefen Wakefield', 1), ('Stefanot', 1), ('Stefano Tommasini', 1), ('Stan Iliev', 1), ('Siyuan Zhou', 1), ('Shu Zhang', 1), ('Shin-ichiro KAWASAKI', 1), ('Nucca Chen', 1), ('Noah Presler', 1), ('Nikolas Havrikov', 1), ('Niko Catania', 1), ('Nicolas Catania', 1), ('Nick Reuter', 1), ('Nick Glorioso', 1), ('Negreanu Marius Adrian', 1), ('Nate Karstens', 1), ('Nariyasu Heseri', 1), ('Mårten Kongstad', 1), ('Mårten Kongstad', 1), ('Miroslav Ignjatovic', 1), ('Mingwei Shi', 1), ('Mike Ma', 1), ('Mike Hearn', 1), ('Mihail Dumitrescu', 1), ('Michael Bestas', 1), ('Menghan Li', 1), ('Ravneet Dhanjal', 1), ('Rashed Abdel-Tawab', 1), ('Raphael Gault', 1), ('Rakesh Iyer', 1), ('Raff Tsai', 1), ('RafayKamran', 1), ('Rafay Kamran', 1), ('Qiming Shi', 1), ('Prashanth Swaminathan', 1), ('Prabir Pradhan', 1), ('Peter Ammon', 1), ('Per Astrand', 1), ('Paul Mclean', 1), ('Paul McLean', 1), ('Owner Cleanup Bot', 1), ('Oreste Salerno', 1), ('Oleksiy Avramchenko', 1), ('Oleg Lyovin', 1), ('Octavian Purdila', 1), ('mariagpuyol', 1), ('mamik', 1), ('luoqiangwei1', 1), ('liulvping', 1), ('liuchao', 1), ('liminghao', 1), ('lesl', 1), ('kgui', 1), ('kellyhung', 1), ('jwilson', 1), ('junki486.lee', 1), ('jschung', 1), ('josephjang', 1), ('jiabin', 1), ('goodway.wang_cp', 1), ('goneil', 1), ('gomo', 1), ('fionaxu', 1), ('felipeal', 1), ('zhangyongpeng', 1), ('zhang jun', 1), ('yroussel', 1), ('ynwang', 1), ('yike', 1), ('xi yu', 1), ('weisu', 1), ('weiqiao', 1), ('wei qiao', 1), ('wangshumin', 1), ('synergy', 1), ('sergiuferentz', 1), ('ryanlwlin', 1), ('ronish', 1), ('randy.jeong', 1), ('rago', 1), ('normanwhl', 1), ('noda', 1), ('mike dooley', 1), ('YOUNG HO CHA', 1), ('Xuanang Zhao', 1), ('Xu Chao', 1), ('Xavier Ducrohet', 1), ('William Roberts', 1), ('William Roberts', 1), ('William Roberts', 1), ('Will Drewry', 1), ('Weilin Wu', 1), ('Wei Wang', 1), ('Wang Han', 1), ('Virajitha Daibala', 1), ('Vinit Deshapnde', 1), ('Varvara Rainchik', 1), ('Valentin Kravtsov', 1), ('Trevor Drake', 1), ('Tom Cherry', 1), ('Todd Lee', 1), ('Tim Zimmermann', 1), ('david', 1), ('celeste wang', 1), ('caozhiyuan', 1), ('bryant_liu', 1), ('aurelien...@free.fr', 1), ('android-build SharedAccount', 1), ('akushner', 1), ('aimitakeshi', 1), ('adattatr', 1), ('Zhou Xuezan', 1), ('Yuexi Ma', 1), ('Yu Liu', 1), ('Ytai Ben-tsvi', 1), ('YoungJoon Yang', 1), ('Yong Ma', 1), ('Yingzhe Li', 1), ('Ye Jiao', 1), ('Yasuhiro Matsuda', 1), ('Yan Han', 1), ('DarkJoker360', 1), ('Daniel Zhang', 1), ('Daniel Leung', 1), ('Cody Schuffelen', 1), ('Cloud You', 1), ('Cliff Spradlin', 1), ('Claes Elgemark', 1), ('Christian Bejram', 1), ('Chris Phoenix', 1), ('Chris Peterson', 1), ('Chris Palmer', 1), ('Chris Palmer', 1), ('Chema Gonzalez', 1), ('Charles Chen', 1), ('Charisee', 1), ('Changho Shin', 1), ('Carlos Eduardo Seo', 1), ('Brock Atchison', 1), ('Brian Stack', 1), ('Fredrik Markström', 1), ('Fan Zhang', 1), ('Evan JIANG', 1), ('Eric Rahm', 1), ('Eric Frohnhoefer', 1), ('Elvis Chien', 1), ('Edwin', 1), ('Edward Hervey', 1), ('Edgar Arriaga García', 1), ('Edgar Arriaga', 1), ('Ecco Park', 1), ('Doug Felt', 1), ('Doris Ling', 1), ('Donghyun Jo', 1), ('Donghoon Yu', 1), ('Dominic Binks', 1), ('David Warren', 1), ('David Duarte', 1), ('David Chen', 1), ('Andrew Walbran', 1), ('Andreas Makris', 1), ('Anatolii Shuba', 1), ('Anatol Pomazau', 1), ('Amir Voskoboynik', 1), ('Alice Kuo', 1), ('Alexey Zaytsev', 1), ('Alexey Volkov', 1), ('Alexey Alexandrov', 1), ('Alexander Potapenko', 1), ('Alexander Koskovich', 1), ('Alex Spradlin', 1), ('Alessandro Astone', 1), ('Ajay Dudani', 1), ('Aidan Wolter', 1), ('AdityaK', 1), ('Abhinav1997', 1), ('Aaron Kling', 1), ('-b master', 1), ('Bram Bonne', 1), ('Brad Hinegardner', 1), ('Bjorn Andersson', 1), ('Bertrand SIMONNET', 1), ('Benoit Lize', 1), ('Benno Leslie', 1), ('Benjamin Peterson', 1), ('Ben Taitelbaum', 1), ('Ben Lin', 1), ('Ben Leslie', 1), ('Atneya Nair', 1), ('Ashok Mutyala', 1), ('Arun Johnson', 1), ('Arthur Ishiguro', 1), ('Artem Serov', 1), ('Ard Biesheuvel', 1), ('Angus Lees', 1), ('Android Build QA', 1), ('Andrey Belous', 1), ('Keyi Gui', 1), ('Kevin Brodsky', 1), ('Kenny Root', 1), ('Kennet Belenky', 1), ('Keith Deacon', 1), ('Kathan Shukla', 1), ('Juyu Chen', 1), ('Justin Mattson', 1), ('Junda Liu', 1",305,0,
data-8/jupyterhub-k8s,[Deprecated] Data 8's deployment of JupyterHub on Kubernetes,"**Deprecated**

Note that this repo is deprecated. If you want to deploy JupyterHub for your own use, please look at the [Zero to JupyterHub guide](https://z2jh.jupyter.org) which grew out of this repo!

",,2016-10-18T01:00:09Z,2017-08-22T01:28:02Z,16,13,34,12,"('yuvipanda', 194), ('ryanlovett', 161), ('tonyyanga', 109), ('SaladRaider', 87), ('derrickmar', 75), ('SamLau95', 65), ('Jeff Gong', 42), ('gunjanbaid', 26), ('allanlwu', 15), ('marklescroart', 7), ('jasonyzhang', 3), ('Ryan Lovett', 2), ('Sumukh', 2), ('Carl Mason', 1), ('papajohn', 1), ('micahcarroll', 1)",3,2,
NSFI/ppfish-components,Fish Design: 面向B端设计的企业级UI组件库,"
  
    
  


Fish Design



[![Travis branch](https://api.travis-ci.org/NSFI/ppfish-components.svg?branch=master)](https://www.travis-ci.org/NSFI/ppfish-components) ![CI Status](https://github.com/NSFI/ppfish-components/workflows/test/badge.svg) [![](https://badgen.net/npm/v/ppfish?icon=npm)](https://www.npmjs.com/package/ppfish) [![NPM downloads](http://img.shields.io/npm/dm/ppfish.svg?style=flat-square)](https://www.npmjs.com/package/ppfish) [![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FNSFI%2Fppfish-components.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FNSFI%2Fppfish-components?ref=badge_shield)



## Introduction

Fish Design is an enterprise-class UI component library which based on React, helps designers and developers quickly build systems.

## Features

- Babel with ES6
- Hot reloading
- Testing
- Linting
- Working example app
- Server side rendering

## Browsers Support

- Modern browsers and Internet Explorer 11+

| [](http://godban.github.io/browsers-support-badges/)IE / Edge | [](http://godban.github.io/browsers-support-badges/)Firefox | [](http://godban.github.io/browsers-support-badges/)Chrome | [](http://godban.github.io/browsers-support-badges/)Safari | [](http://godban.github.io/browsers-support-badges/)Opera | [](http://godban.github.io/browsers-support-badges/)Electron |
| --- | --- | --- | --- | --- | --- |
| IE11, Edge | last 2 versions | last 2 versions | last 2 versions | last 2 versions | last 2 versions |

## Initial Machine Setup

- Install [Node.js](https://nodejs.org/en/)
- （Optional）Install taobao NPM image

  ```bash
  $ npm install -g cnpm --registry=https://registry.npm.taobao.org
  ```

## Install

```bash
npm install ppfish --save
```

## Usage

Browser

```js
import React from 'react';
import ReactDOM from 'react-dom';
import { Button } from 'ppfish';

ReactDOM.render(Primary, document.getElementById('app'));
```

## Development

Install npm(or cnpm) package

```
$ npm install
```

Start development in your default browser

```
$ npm run dev
```

Open your browser and visit http://127.0.0.1:5000

## Build

Build scripts and css etc.

```
$ npm run build
```

Build site

```
$ npm run docs:build
```

## Links

- [ant-design](http://ant.design/)
- [react](https://github.com/facebook/react)
- [WebPack](http://webpack.github.io/docs/)
- [Less](https://github.com/less/less.js)
- [Jest](https://facebook.github.io/jest/)
- [enzyme](https://github.com/airbnb/enzyme/blob/master/docs/api/mount.md)

## The directory structure

```
.
├── /coverage/                        # 运行npm run test:cover输出的测试覆盖率文件
├── /dist/                            # 构建输出的文件，使用全局变量方式引用，可用于发布到CDN
├── /docs                             # 项目文档
├── /lib/                             # 构建输出的文件
├── /node_modules/                    #
├── /site/                            # 组件库官网
| ├── /assets                         #
| ├── /componentsPage                 # 组件库官网页面
| ├── /docs                           # 组件库官网文档
| ├── /locales                        # 组件库官网本地化文案
| ├── /pages                          #
| ├── /static                         # 组件库官网Demo使用的icon
| ├── /styles                         #
| ├── /index.html                     #
| └── /index.js                       #
├── /source/                          # 组件源码
│ ├── /assets/                        #
│ ├── /components/                    # React components
│ ├── /hooks/                         #
│ ├── /typings /                      #
│ └── /utils/                         #
├── /tools/                           # 项目脚本
├── .babelrc                          #
├── .editorconfig                     #
├── .eslintignore                     #
├── .eslintrc.js                      #
├── .gitignore                        #
├── .npmignore                        #
├── .stylelintignore                  #
├── .stylelintrc.js                   #
├── .travis.yml                       #
├── jets.config.js                    #
├── package.json                      #
├── postcss.config.js                 #
├── README.md                         #
├── tsconfig.json                     #
├── webpack.config.dev.site.js        # 文档网站本地开发编译配置
└── webpack.config.prod.site.js       # 文档网站生产环境编译配置
```
","'css', 'ppfish-components', 'react', 'ui-design', 'ui-kit'",2018-02-28T02:15:01Z,2023-10-13T02:55:34Z,35,19,274,13,"('gtopia', 1514), ('qingze9410', 569), ('wangxiaoling', 490), ('and80506', 295), ('SummerOverture', 172), ('eynol', 47), ('bushuai', 42), ('octopusccc1', 38), ('hangaoke1', 35), ('netys666', 28), ('Grewer', 26), ('yanglu04', 22), ('shockingsrose', 21), ('chenchen32', 19), ('zhangyu', 14), ('zhangyu', 11), ('xyst123', 6), ('王晓玲', 4), ('yeaaaling', 4), ('onshinpei', 4), ('CN\\chx', 4), ('hzchenhuanxu', 3), ('zrj1031', 3), ('张艳玲', 3), ('maxutian', 3), ('guozhenyong', 2), ('wenxinping', 2), ('zhoumy96', 2), ('张焱寒', 2), ('guyifan', 1), ('hzshachaoheng', 1), ('jianfulee', 1), ('qiancheng', 1), ('lhx6538665', 1), ('邱瑶瑶', 1)",6,1,
Luricz285/GoS,Gaming on Steroids Scripts,,,2015-08-02T17:11:25Z,2015-08-02T14:39:17Z,1,0,0,2,"('D3ftsu', 134)",0,0,
woxingxiao/BubbleSeekBar,"A beautiful Android custom seekbar, which has a bubble view with progress appearing upon when seeking. 自定义SeekBar，进度变化更以可视化气泡样式呈现","[![API](https://img.shields.io/badge/API-16%2B-blue.svg?style=flat)](https://android-arsenal.com/api?level=16)
[![License](http://img.shields.io/badge/License-Apache%202.0-brightgreen.svg?style=flat)](https://opensource.org/licenses/Apache-2.0)

[**中文说明**](https://github.com/woxingxiao/BubbleSeekBar/blob/master/README_zh.md)

![logo](https://github.com/woxingxiao/BubbleSeekBar/blob/master/app/src/main/res/mipmap-xxhdpi/ic_launcher.png)

**A beautiful Android custom seek bar, which has a bubble view with progress appearing upon when seeking. Highly customizable, mostly demands has been considered. `star` or `pull request` will be welcomed**
****
## Screenshot
![demo1](https://github.com/woxingxiao/BubbleSeekBar/blob/master/screenshot/demo1.gif)
![demo2](https://github.com/woxingxiao/BubbleSeekBar/blob/master/screenshot/demo2.gif)
******
![demo3](https://github.com/woxingxiao/BubbleSeekBar/blob/master/screenshot/demo3.gif)
![demo4](https://github.com/woxingxiao/BubbleSeekBar/blob/master/screenshot/demo4.gif)

## Download
The **LATEST_VERSION**: [![Download](https://api.bintray.com/packages/woxingxiao/maven/bubbleseekbar/images/download.svg)](https://bintray.com/woxingxiao/maven/bubbleseekbar/_latestVersion)
```groovy
  dependencies {
     // lite version (recommended)
     // e.g. implementation 'com.xw.repo:bubbleseekbar:3.20-lite'
        implementation 'com.xw.repo:bubbleseekbar:${LATEST_VERSION}-lite'

     // enhanced version
     // e.g. implementation 'com.xw.repo:bubbleseekbar:3.20'
     // implementation 'com.xw.repo:bubbleseekbar:${LATEST_VERSION}'
  }
```

## Usage  
### Init in xml
```xml
<com.xw.repo.BubbleSeekBar
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content""
    app:bsb_bubble_color=""@color/color_red_light""
    app:bsb_bubble_text_color=""@color/colorPrimaryDark""
    app:bsb_max=""50.0""
    app:bsb_min=""-50""
    app:bsb_progress=""0""
    app:bsb_second_track_color=""@color/color_red""
    app:bsb_section_count=""5""
    app:bsb_section_text_position=""bottom_sides""
    app:bsb_show_progress_in_float=""true""
    app:bsb_show_section_mark=""true""
    app:bsb_show_section_text=""true""
    app:bsb_show_thumb_text=""true""
    app:bsb_track_color=""@color/color_red_light""/>
```
```xml
<com.xw.repo.BubbleSeekBar
    android:layout_width=""match_parent""
    android:layout_height=""wrap_content""
    app:bsb_auto_adjust_section_mark=""true""
    app:bsb_second_track_color=""@color/color_blue""
    app:bsb_section_count=""5""
    app:bsb_section_text_position=""below_section_mark""
    app:bsb_show_section_mark=""true""
    app:bsb_show_section_text=""true""
    app:bsb_show_thumb_text=""true""
    app:bsb_thumb_text_size=""18sp""
    app:bsb_touch_to_seek=""true""/>
```
### Init in java (not for **_lite_** version)
```java
mBbubbleSeekBar.getConfigBuilder()
               .min(0.0)
               .max(50)
               .progress(20)
               .sectionCount(5)
               .trackColor(ContextCompat.getColor(getContext(), R.color.color_gray))
               .secondTrackColor(ContextCompat.getColor(getContext(), R.color.color_blue))
               .thumbColor(ContextCompat.getColor(getContext(), R.color.color_blue))
               .showSectionText()
               .sectionTextColor(ContextCompat.getColor(getContext(), R.color.colorPrimary))
               .sectionTextSize(18)
               .showThumbText()
               .thumbTextColor(ContextCompat.getColor(getContext(), R.color.color_red))
               .thumbTextSize(18)
               .bubbleColor(ContextCompat.getColor(getContext(), R.color.color_green))
               .bubbleTextSize(18)
               .showSectionMark()
               .seekBySection()
               .autoAdjustSectionMark()
               .sectionTextPosition(BubbleSeekBar.TextPosition.BELOW_SECTION_MARK)
               .build();
```
Check out the demo for more details. Or download the apk: [**sample.apk**](https://github.com/woxingxiao/BubbleSeekBar/raw/master/apk/sample.apk)
## Attentions  
- There are two versions of this library.The differences as follow:  

  version | init | getter/setter
  -------- | ---|---
  lite|xml|min, max, progress
  enhanced|xml, java|all attrs

  **_lite_** version is recommended.
- You must correct the offsets by setting `ScrollListener` when `BubbleSeekBar`'s parent view is scrollable
(such as `ScrollView`, except `ViewPager`), otherwise, the appearing position of the bubble may be wrong. For example:
```java
   mContainer.setOnYourContainerScrollListener(new OnYourContainerScrollListener() {
       @Override
       public void onScroll() {
           // call this method to correct offsets
           mBubbleSeekBar.correctOffsetWhenContainerOnScrolling();
       }
   });
```
- When customize the section texts, you should make sure that the attr `bsb_section_text_position`
has been set to `below_section_mark` at first, then follow the example below in your java code:
```java
   mBubbleSeekBar.setCustomSectionTextArray(new BubbleSeekBar.CustomSectionTextArray() {
       @NonNull
       @Override
       public SparseArray onCustomize(int sectionCount, @NonNull SparseArray array) {
           array.clear();
           array.put(1, ""bad"");
           array.put(4, ""ok"");
           array.put(7, ""good"");
           array.put(9, ""great"");

           return array;
       }
   });
```
BTW, the attr `bsb_show_thumb_text` will be set to `false` automatically for avoiding the text coverage display problems.
- The attr `bsb_always_show_bubble` is not supported in the `RecyclerView`, `ListView` and `GridView`.

## Attributes
[attr.xml](https://github.com/woxingxiao/BubbleSeekBar/blob/master/bubbleseekbar/src/main/res/values/attr.xml)
## How to submit a valid issue
- **Make sure you compiled the latest version.** If it still doesn't work out, don't hesitate to open a new issue.
- Describe the scenarios or operates when crash happened as much as possible(pictures would be better).
- Tell me your device type and Android OS version is very helpful.
- Paste your xml or java code.
- Paste the crash log.
- Please be polite.

## License
```
   Copyright 2017 woxingxiao

   Licensed under the Apache License, Version 2.0 (the ""License"");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
```
","'android', 'seekbar'",2016-11-03T14:31:05Z,2022-06-29T13:11:46Z,6,5,3340,58,"('woxingxiao', 109), ('hgourvest', 1), ('hfeky', 1), ('VankaIn', 1), ('koliong', 1), ('maikun', 1)",5,4,
pbeshai/d3-interpolate-path,Interpolates path `d` attribute smoothly when A and B have different number of points.,"# d3-interpolate-path

[![npm version](https://badge.fury.io/js/d3-interpolate-path.svg)](https://badge.fury.io/js/d3-interpolate-path)

d3-interpolate-path is a zero-dependency that adds an [interpolator](https://github.com/d3/d3-interpolate)
optimized for SVG &lt;path&gt; elements. It can also work directly with object representations of path commands that can be later interpreted for use with canvas or WebGL. 

**Note this package no longer has a dependency on d3 or d3-interpolate**, but in web usage adds itself to the d3 namespace like other d3 plugins do.

Blog: [Improving D3 Path Animation](https://bocoup.com/weblog/improving-d3-path-animation)

Demo: https://pbeshai.github.io/d3-interpolate-path/

![d3-interpolate-path demo](https://pbeshai.github.io/d3-interpolate-path/d3-interpolate-path-demo.gif)



## Example Usage

```js
var line = d3.line()
  .curve(d3.curveLinear)
  .x(function (d) { return x(d.x); })
  .y(function (d) { return y(d.y); });

d3.select('path.my-path')
  .transition()
  .duration(2000)
  .attrTween('d', function (d) {
    var previous = d3.select(this).attr('d');
    var current = line(d);
    return d3.interpolatePath(previous, current);
  });
```

If you're using it in a module environment, you can import it as follows:

```js
import { interpolatePath } from 'd3-interpolate-path';
```

Otherwise, you can use it via a `` tag as follows:

```js

```


## Development

Get rollup watching for changes and rebuilding

```bash
npm run watch
```

Run a web server in the docs directory

```bash
cd docs
php -S localhost:8000
```

Go to http://localhost:8000


## Installing

If you use NPM, `npm install d3-interpolate-path`. Otherwise, download the [latest release](https://github.com/pbeshai/d3-interpolate-path/releases/latest).

## API Reference


# interpolatePath(*a*, *b*, *excludeSegment*)

Returns an interpolator between two path attribute `d` strings *a* and *b*. The interpolator extends *a* and *b* to have the same number of points before applying linear interpolation on the values. It uses De Castlejau's algorithm for handling bezier curves.

```js
var pathInterpolator = interpolatePath('M0,0 L10,10', 'M10,10 L20,20 L30,30')
pathInterpolator(0)   // 'M0,0 L10,10 L10,10'
pathInterpolator(0.5) // 'M5,5 L15,15 L20,20'
pathInterpolator(1)   // 'M10,10 L20,20 L30,30'
```

You can optionally provide a function *excludeSegment* that takes two adjacent path commands and returns true if that segment should be excluded when splitting the line. A command object has form `{ type, x, y }` (with possibly more attributes depending on type). An example object:

```js
// equivalent to M0,150 in a path `d` string
{
  type: 'M',
  x: 0,
  y: 150
}
```

This is most useful when working with d3-area. Excluding the final segment (i.e. the vertical line at the end) from being split ensures a nice transition. If you know that highest `x` value in the path, you can exclude the final segment by passing an excludeSegment function similar to:

```js
function excludeSegment(a, b) {
  return a.x === b.x && a.x === 300; // here 300 is the max X
}
```



# interpolatePathCommands(*aCommands*, *bCommands*, *excludeSegment*)

Returns an interpolator between two paths defined as arrays of command objects *a* and *b*. The interpolator extends *a* and *b* to have the same number of points if they differ. This can be useful if you want to work with paths in other formats besides SVG (e.g. canvas or WebGL).

Command objects take the following form:

```ts
| { type: 'M', x: number, y: number },
| { type: 'L', x, y }
| { type: 'H', x }
| { type: 'V', y }
| { type: 'C', x1, y1, x2, y2, x, y }
| { type: 'S', x2, y2, x, y }
| { type: 'Q', x1, y1, x, y }
| { type: 'T', x, y }
| { type: 'A', rx, ry, xAxisRotation, largeArcFlag, sweepFlag, x, y }
| { type: 'Z' }
```

Example usage:

```js
const a = [
  { type: 'M', x: 0, y: 0 },
  { type: 'L', x: 10, y: 10 },
];
const b = [
  { type: 'M', x: 10, y: 10 },
  { type: 'L', x: 20, y: 20 },
  { type: 'L', x: 200, y: 200 },
];

const interpolator = interpolatePathCommands(a, b);

> interpolator(0);
[
  { type: 'M', x: 0, y: 0 },
  { type: 'L', x: 5, y: 5 },
  { type: 'L', x: 10, y: 10 },
]

> interpolator(0.5);
[
  { type: 'M', x: 5, y: 5 },
  { type: 'L', x: 12.5, y: 12.5 },
  { type: 'L', x: 105, y: 105 },
]
```



# pathCommandsFromString(*pathDString*)

Converts a path `d` string into an array of path command objects to work with [**interpolatePathCommands**](#interpolatePathCommands).

Example usage:

```js
const a = 'M0,0L10,10';

> pathCommandsFromString(a)
[
  { type: 'M', x: 0, y: 0 },
  { type: 'L', x: 10, y: 10 },
]
```
",,2016-08-25T02:19:58Z,2023-01-07T04:11:44Z,8,5,314,8,"('pbeshai', 91), ('Peter Beshai', 10), ('dependabotbot', 3), ('andyrichardson', 2), ('David-Desmaisons', 2), ('Mattias Wikstrom', 1), ('danielverejan', 1), ('oluckyman', 1)",3,1,
scotthmurray/d3-book,Code examples for “Interactive Data Visualization for the Web”,"# d3-book

These are sample code files to accompany the book “Interactive Data Visualization for the Web, Second Edition” by Scott Murray, published in July 2017 by O’Reilly.

- [O’Reilly book page](http://shop.oreilly.com/product/0636920037316.do)
- [Author’s website](http://alignedleft.com/)

Always find the latest book info at: [d3book.com](http://d3book.com)



## Version

**Important:** Make sure you are using the correct version of these sample files!  Otherwise, the code you see here may not exactly match what you see in the book.

This is version **2.0** of the examples, which should sync perfectly with what appears in the second edition. (Fingers crossed.)

For code shown in the **first edition of the book** (published March 2013), find version 1.0 on [the releases page](https://github.com/alignedleft/d3-book/releases).
",,2012-10-26T21:16:52Z,2019-12-07T21:40:33Z,4,1,2398,173,"('Scott Murray', 77), ('Scott Murray', 26), ('scotthmurray', 16), ('Scott Murray', 4)",0,0,
HubSpot/BuckyServer,Node server that receives metric data over HTTP & forwards to your service of choice,"## Bucky Server

Bucky uses a Node server to forward the HTTP requests with your monitoring data to
Statsd/Graphite, OpenTSDB, or whatever other service you'd like.

Also see the [Bucky Client](http://github.hubspot.com/BuckyClient/).

## Hosting

Everything you need to run Bucky on Heroku or Nodejitsu is included, just update the
[config file](config/default.yaml) and push to the service of your choice.

### Heroku

```bash
heroku create
git push heroku master
```

### Nodejitsu

```bash
jitsu deploy
```

The jitsu application will ask you for a subdomain to run the service on, and will
increment the version of the application whenever you deploy.

### EC2 / Bare Metal

If you'd rather host Bucky on EC2 directly or on raw hardware, you just need something
which will run `./start.js` in a reliable way.

You can use environment variables to control runtime options, or put them in your [config file](config/default.yaml)
in the `server` section.

You'll need to have [nodejs](http://nodejs.org/) installed.  Anything in the 0.8.x series or above should work
fine.  We recommend using [nvm](https://github.com/creationix/nvm), as it gives you an extra dimension
of flexibility, but using your system's package manager should work just as well.

```bash
# In the project directory:

npm install
PORT=3333 APP_ROOT=bucky/ ./start.js
```

The `APP_ROOT` (or `config.server.appRoot`) will prefix all endpoints.

Bucky will respond to all requests at `/APP_ROOT/v1/health-check`, if you need a health check url.

Bucky can be setup to receive data at multiple endpoints, but by default it listens
to `/APP_ROOT/v1/send` on whichever port you specify.

#### Ubuntu (12.04)

```bash
# Install nodejs
# This assumes you're on a 64 bit machine
wget http://nodejs.org/dist/v0.10.19/node-v0.10.19-linux-x64.tar.gz
tar xvf node-v0.10.19-linux-x64.tar.gz 
sudo ln -s `pwd`/node-v0.10.19-linux-x64/bin/{node,npm} /usr/local/bin/

# Grab a Bucky release
# You should use the latest release available at https://github.com/HubSpot/BuckyServer/releases
wget https://github.com/HubSpot/BuckyServer/archive/v0.3.0.tar.gz -O BuckyServer.tar.gz
tar xvf BuckyServer.tar.gz
cd BuckyServer

# Install Bucky
sudo npm install -g

# Make any config changes by editing /usr/local/lib/node_modules/bucky-server/config/default.yaml

# You can start bucky by running bucky-server

# Add the upstart script so Bucky starts on startup and respawns
sudo cp init/bucky-server.conf /etc/init/

# Start Bucky with
sudo start bucky-server

# Log files will appear in /var/log/bucky.log by default
```

You can run bucky on a specific port (make sure to open that port in your security group
if you're using EC2), or you can use a reverse proxy like Nginx or HAProxy to serve it
on the same domain and port as your website, it's up to you.

## Configuring

If you're not already running a stats collection service, you should take a look at our
[help doc](http://github.hubspot.com/BuckyServer/getting_started/choosing_a_stats_service/).

Most people will only need to specify [the config](config/default.yaml) they're interested in
and start up the server.

If you need more customization, you can write a module:

### Modules

There are a few of types of modules:


- Logger - Use to have Bucky log to something other than the console
- Config - Use to have Bucky pull config from somewhere other than the default file
- App - Use to do things when Bucky loads and/or on requests.  Auth, monitoring initialization, etc.
- Collectors - Use to send Bucky data to new and exciting places.

We can only have one logger and one config, but you can specify as many app and collector modules
as you like.

All modules follow the same basic sketch.  You export a method which is called when Bucky
starts up.  That method is provided with as much of `{app, config, logger}` as we have
loaded so far, and is expected to call a callback when it's ready for the loading to continue.

#### Logger

Used to log output.  Defaults to a wrapper around console.log/console.error.

Should export a function which will be called when the server is started:

```coffeescript
module.exports = ({logger}, next) ->
  # logger is the previous logger (just the console)

  next myNewLogger
```

This function should call the callback with a logger object which implements
`log` and `error`:

```coffeescript
module.exports = ({logger}, next) ->
  myNewLogger = {
    log: ->
      console.log ""Bucky message:"", arguments...
    error: ->
      console.error ""Bucky error:"", arguments...
  }

  next myNewLogger
```

#### Config

By default config comes from the config files loaded using the node `config` module.

If specified, this module will replace that config.  Please note that the list of
modules comes from the `config` module, so the list of modules must always be
specified there.  All other config options can be moved to your config solution
of choice using this extension point.

At HubSpot, we're believers in config which can be changed without restarting
services. For this reason, the config api is a bit more complex than you might
expect.  A wrapper is provided in `lib/configWrapper.coffee` for you to use
should you wish to use a simpler solution.

```coffeescript
module.exports = ({config, logger}, next) ->
  # config is the old config which was being used
  # before this module was loaded

  # logger.log and logger.error should be used rather than
  # console

  next myConfigObject
```

A config value will be retrieved from the config object the callback is
called with like this:

```coffeescript
  config.get('some.config').get()

  config.get('some.config').on 'change', ->
    # The config changed!
```

You are free to implement the `on` method as a dud if live reloading doesn't
make sense using your config system.  Take a look at [lib/configWrapper.coffee](lib/configWrapper.coffee)
for an example of how a basic object can be converted (and feel free to use it).
  
#### App

App modules get loaded once, and can optionally provide a function to be ran with each request.

Simple app modules are a good place to put any server config, initialization code, etc.

We use app modules to make [little tweaks](modules/trustProxy.coffee) to how express works and enable
monitoring.

App modules are called at initialize-time with a hash including a reference to the express app:

```coffeescript
module.exports = ({app, logger, config}, next) ->
```

If your app module calls the callback with a function, that function will be executed on all requests to
`/v1/send`, which is the default endpoint.

If the callback is called with a hash, it is expected to be a mapping between endpoints and handler functions.

```coffeescript
module.exports = ({app, logger, config}, next) ->
  next
    send: (req, res, _next) ->
      # Standard express request handling stuff in here

    someOtherEndpoint: (req, res, _next) ->
       # Will get requests which are sent to /v1/someOtherEndpoint
```

These functions work like middleware, they are called sequentially.  You can use them to implement
things like [auth](modules/auth.coffee) if you need it.

#### Collectors

It's not a standard type of module (the core of Bucky has no idea about it), but the default
[collectors app module](modules/collectors.coffee) looks to a fourth type of module to know
where to send data.

[Statsd](modules/statsd.coffee) and [OpenTSDB](modules/openTSDB.coffee) collectors are included.

Collectors should export a function which is called on initialize, and call the callback with a hash
mapping endpoints to handlers.

```coffeescript
module.exports = ({app, logger, config}, next) ->
  next
    send: (data) ->
      # This collector will receive any requests to /v1/send (the default endpoint)

      logger.log ""We got some data!""
```

### Format

If you are interested in writing new clients, the format of metric data is the same as is used by statsd:

```
:|[@]
```

For example:

```
my.awesome.metric:35|ms
some.other.metric:3|c@0.5
```

All requests are sent with content-type `text/plain`.
",,2013-09-13T02:02:25Z,2016-04-11T04:55:41Z,8,5,195,171,"('zackbloom', 53), ('Michael Cebrian', 6), ('gaurim17', 5), ('soloman1124', 4), ('gward', 1), ('JSMike', 1), ('Pierce', 1), ('Zack Bloom', 1)",4,2,
sammchardy/python-binance,Binance Exchange API python implementation for automated trading,"=================================
Welcome to python-binance v1.0.19
=================================

Updated 11th Aug 2023

.. image:: https://img.shields.io/pypi/v/python-binance.svg
    :target: https://pypi.python.org/pypi/python-binance

.. image:: https://img.shields.io/pypi/l/python-binance.svg
    :target: https://pypi.python.org/pypi/python-binance

.. image:: https://img.shields.io/travis/sammchardy/python-binance.svg
    :target: https://travis-ci.org/sammchardy/python-binance

.. image:: https://img.shields.io/coveralls/sammchardy/python-binance.svg
    :target: https://coveralls.io/github/sammchardy/python-binance

.. image:: https://img.shields.io/pypi/wheel/python-binance.svg
    :target: https://pypi.python.org/pypi/python-binance

.. image:: https://img.shields.io/pypi/pyversions/python-binance.svg
    :target: https://pypi.python.org/pypi/python-binance

This is an unofficial Python wrapper for the `Binance exchange REST API v3 `_. I am in no way affiliated with Binance, use at your own risk.

If you came here looking for the `Binance exchange `_ to purchase cryptocurrencies, then `go here `_.
If you want to automate interactions with Binance stick around.

If you're interested in Binance's new DEX Binance Chain see my `python-binance-chain library `_

Source code
  https://github.com/sammchardy/python-binance

Documentation
  https://python-binance.readthedocs.io/en/latest/

Binance API Telegram
  https://t.me/binance_api_english

Blog with examples including async
  https://sammchardy.github.io

- `Async basics for Binance `_
- `Understanding Binance Order Filters `_

Make sure you update often and check the `Changelog `_ for new features and bug fixes.

Features
--------

- Implementation of all General, Market Data and Account endpoints.
- Asyncio implementation
- Testnet support for Spot, Futures and Vanilla Options
- Simple handling of authentication include RSA keys
- No need to generate timestamps yourself, the wrapper does it for you
- Response exception handling
- Websocket handling with reconnection and multiplexed connections
- Symbol Depth Cache
- Historical Kline/Candle fetching function
- Withdraw functionality
- Deposit addresses
- Margin Trading
- Futures Trading
- Vanilla Options
- Support other domains (.us, .jp, etc)

Upgrading to v1.0.0+
--------------------

The breaking changes include the migration from wapi to sapi endpoints which related to the
wallet endpoints detailed in the `Binance Docs `_

The other breaking change is for websocket streams and the Depth Cache Manager which have been
converted to use Asynchronous Context Managers. See examples in the Async section below or view the
`websockets `_ and
`depth cache `_ docs.

Quick Start
-----------

`Register an account with Binance `_.

`Generate an API Key `_ and assign relevant permissions.

If you are using an exchange from the US, Japan or other TLD then make sure pass `tld='us'` when creating the
client.

To use the `Spot `_ or `Vanilla Options `_ Testnet,
pass `testnet=True` when creating the client.


.. code:: bash

    pip install python-binance


.. code:: python

    from binance import Client, ThreadedWebsocketManager, ThreadedDepthCacheManager
    client = Client(api_key, api_secret)

    # get market depth
    depth = client.get_order_book(symbol='BNBBTC')

    # place a test market buy order, to place an actual order use the create_order function
    order = client.create_test_order(
        symbol='BNBBTC',
        side=Client.SIDE_BUY,
        type=Client.ORDER_TYPE_MARKET,
        quantity=100)

    # get all symbol prices
    prices = client.get_all_tickers()

    # withdraw 100 ETH
    # check docs for assumptions around withdrawals
    from binance.exceptions import BinanceAPIException
    try:
        result = client.withdraw(
            asset='ETH',
            address='',
            amount=100)
    except BinanceAPIException as e:
        print(e)
    else:
        print(""Success"")

    # fetch list of withdrawals
    withdraws = client.get_withdraw_history()

    # fetch list of ETH withdrawals
    eth_withdraws = client.get_withdraw_history(coin='ETH')

    # get a deposit address for BTC
    address = client.get_deposit_address(coin='BTC')

    # get historical kline data from any date range

    # fetch 1 minute klines for the last day up until now
    klines = client.get_historical_klines(""BNBBTC"", Client.KLINE_INTERVAL_1MINUTE, ""1 day ago UTC"")

    # fetch 30 minute klines for the last month of 2017
    klines = client.get_historical_klines(""ETHBTC"", Client.KLINE_INTERVAL_30MINUTE, ""1 Dec, 2017"", ""1 Jan, 2018"")

    # fetch weekly klines since it listed
    klines = client.get_historical_klines(""NEOBTC"", Client.KLINE_INTERVAL_1WEEK, ""1 Jan, 2017"")

    # socket manager using threads
    twm = ThreadedWebsocketManager()
    twm.start()

    # depth cache manager using threads
    dcm = ThreadedDepthCacheManager()
    dcm.start()

    def handle_socket_message(msg):
        print(f""message type: {msg['e']}"")
        print(msg)

    def handle_dcm_message(depth_cache):
        print(f""symbol {depth_cache.symbol}"")
        print(""top 5 bids"")
        print(depth_cache.get_bids()[:5])
        print(""top 5 asks"")
        print(depth_cache.get_asks()[:5])
        print(""last update time {}"".format(depth_cache.update_time))

    twm.start_kline_socket(callback=handle_socket_message, symbol='BNBBTC')

    dcm.start_depth_cache(callback=handle_dcm_message, symbol='ETHBTC')

    # replace with a current options symbol
    options_symbol = 'BTC-210430-36000-C'
    dcm.start_options_depth_cache(callback=handle_dcm_message, symbol=options_symbol)

    # join the threaded managers to the main thread
    twm.join()
    dcm.join()

For more `check out the documentation `_.

Async Example
-------------

Read `Async basics for Binance `_
for more information.

.. code:: python

    import asyncio
    import json

    from binance import AsyncClient, DepthCacheManager, BinanceSocketManager

    async def main():

        # initialise the client
        client = await AsyncClient.create()

        # run some simple requests
        print(json.dumps(await client.get_exchange_info(), indent=2))

        print(json.dumps(await client.get_symbol_ticker(symbol=""BTCUSDT""), indent=2))

        # initialise websocket factory manager
        bsm = BinanceSocketManager(client)

        # create listener using async with
        # this will exit and close the connection after 5 messages
        async with bsm.trade_socket('ETHBTC') as ts:
            for _ in range(5):
                res = await ts.recv()
                print(f'recv {res}')

        # get historical kline data from any date range

        # fetch 1 minute klines for the last day up until now
        klines = client.get_historical_klines(""BNBBTC"", AsyncClient.KLINE_INTERVAL_1MINUTE, ""1 day ago UTC"")

        # use generator to fetch 1 minute klines for the last day up until now
        async for kline in await client.get_historical_klines_generator(""BNBBTC"", AsyncClient.KLINE_INTERVAL_1MINUTE, ""1 day ago UTC""):
            print(kline)

        # fetch 30 minute klines for the last month of 2017
        klines = client.get_historical_klines(""ETHBTC"", Client.KLINE_INTERVAL_30MINUTE, ""1 Dec, 2017"", ""1 Jan, 2018"")

        # fetch weekly klines since it listed
        klines = client.get_historical_klines(""NEOBTC"", Client.KLINE_INTERVAL_1WEEK, ""1 Jan, 2017"")

        # setup an async context the Depth Cache and exit after 5 messages
        async with DepthCacheManager(client, symbol='ETHBTC') as dcm_socket:
            for _ in range(5):
                depth_cache = await dcm_socket.recv()
                print(f""symbol {depth_cache.symbol} updated:{depth_cache.update_time}"")
                print(""Top 5 asks:"")
                print(depth_cache.get_asks()[:5])
                print(""Top 5 bids:"")
                print(depth_cache.get_bids()[:5])

        # Vanilla options Depth Cache works the same, update the symbol to a current one
        options_symbol = 'BTC-210430-36000-C'
        async with OptionsDepthCacheManager(client, symbol=options_symbol) as dcm_socket:
            for _ in range(5):
                depth_cache = await dcm_socket.recv()
                count += 1
                print(f""symbol {depth_cache.symbol} updated:{depth_cache.update_time}"")
                print(""Top 5 asks:"")
                print(depth_cache.get_asks()[:5])
                print(""Top 5 bids:"")
                print(depth_cache.get_bids()[:5])

        await client.close_connection()

    if __name__ == ""__main__"":

        loop = asyncio.get_event_loop()
        loop.run_until_complete(main())


Donate
------

If this library helped you out feel free to donate.

- ETH: 0xD7a7fDdCfA687073d7cC93E9E51829a727f9fE70
- LTC: LPC5vw9ajR1YndE1hYVeo3kJ9LdHjcRCUZ
- NEO: AVJB4ZgN7VgSUtArCt94y7ZYT6d5NDfpBo
- BTC: 1Dknp6L6oRZrHDECRedihPzx2sSfmvEBys

Other Exchanges
---------------

If you use `Binance Chain `_ check out my `python-binance-chain `_ library.

If you use `Kucoin `_ check out my `python-kucoin `_ library.

If you use `IDEX `_ check out my `python-idex `_ library.

.. image:: https://ga-beacon.appspot.com/UA-111417213-1/github/python-binance?pixel&useReferer
","'api', 'binance', 'cryptocurrency', 'python', 'python2', 'python3', 'websockets'",2017-08-14T12:09:45Z,2024-06-13T19:36:34Z,159,144,5851,216,"('sammchardy', 912), ('kimchirichie', 39), ('samjosephmark', 23), ('Ollie-Hooper', 21), ('gbozee', 21), ('flashnuke', 12), ('AlexNik', 11), ('ttamg', 8), ('Philippe Prados', 8), ('PiyushDixit96', 6), ('mfiro', 6), ('pprados', 5), ('lancechua', 4), ('sinaFa', 4), ('Jolium', 4), ('t2o2', 3), ('jack', 3), ('indrasweb', 3), ('g00dnight', 3), ('cmollen', 3), ('Vegard Botnen', 3), ('r41d', 3), ('knaperek', 3), ('junghoon-vans', 3), ('hughsw', 3), ('guillemap', 3), ('byronformwalt', 3), ('anson-vandoren', 3), ('Jannik Vogel', 2), ('alexey.kolmakov', 2), ('d33m00n', 2), ('m0bb1n', 2), ('ishuen', 2), ('liana28jane1992', 2), ('mishaker', 2), ('rezaya92', 2), ('wobuup', 2), ('sapph1re', 2), ('MennovDijk', 2), ('danwalkeruk', 2), ('JSRossiter', 2), ('heckad', 2), ('Lcstyle', 2), ('MarCorCon', 2), ('matze19999', 2), ('jiyoungsin', 2), ('halfelf', 2), ('slazarov', 2), ('xyshell', 2), ('Yimura', 1), ('leo4048111', 1), ('akgnah', 1), ('alexpvpmindustry', 1), ('alexjnelson', 1), ('amirmehdi', 1), ('bmarengo', 1), ('bbayer', 1), ('casper-hansen', 1), ('dependabotbot', 1), ('enekochan', 1), ('friday-james', 1), ('KageRyo', 1), ('wiseinvoker', 1), ('jumutc', 1), ('TobCar', 1), ('timgates42', 1), ('tperalta82', 1), ('Reidaa', 1), ('ThomasHoutrique', 1), ('tomcur', 1), ('TheSeacfr', 1), ('Th0masL', 1), ('maxoja', 1), ('Syphilis', 1), ('zume2020', 1), ('sujitnair', 1), ('ismailbayram', 1), ('sh4dowb', 1), ('zweix123', 1), ('zig2015', 1), ('yoavweber', 1), ('xulngx', 1), ('wranai', 1), ('wangsheng', 1), ('uamrws', 1), ('tamycova', 1), ('snapo', 1), ('48ClubIan', 1), ('shr00mie', 1), ('riccstef', 1), ('phinahara', 1), ('peroksid90', 1), ('oliver-zehentleitner', 1), ('nardew', 1), ('aqasemi', 1), ('mhcassiem', 1), ('mhawry', 1), ('marc0f', 1), ('liujingzecooper', 1), ('krullig', 1), ('killerbhai', 1), ('karanveersp', 1), ('javayu', 1), ('henrywkk', 1), ('Kyzegs', 1), ('youknowone', 1), ('Jeffrey Ryan', 1), ('jawkhan', 1), ('purejamie', 1), ('Jafte', 1), ('IgorKilipenko', 1), ('Henry Morris', 1), ('huster-wgm', 1), ('gabriel-milan', 1), ('flepied', 1), ('fpf3', 1), ('erik404', 1), ('EC2 Default User', 1), ('DiggidyDev', 1), ('goldan', 1), ('DenisDeFaria', 1), ('daviduhm', 1), ('dpetrou', 1), ('Chris Hill', 1), ('CJNA', 1), ('AurelReb', 1), ('alexanderkoumis', 1), ('raviolispy', 1), ('thisismygitrepo', 1), ('AlexanderSov', 1), ('talesa', 1), ('0b100100', 1), ('sam-kleiner', 1), ('Ronbalt', 1), ('ron7684', 1), ('rafaelvc', 1), ('Olegt0rr', 1), ('normoes', 1), ('Noilly-Prat', 1), ('nijanthanh', 1), ('NeverSummer', 1), ('miohtama', 1), ('mixartemev', 1), ('Michael James', 1), ('mfuellbier', 1), ('iloveitaly', 1), ('kheaactua', 1), ('kormang', 1), ('Solaxun', 1), ('Makiyu-py', 1), ('Enebz', 1), ('s2t2', 1), ('Luminous13', 1), ('coire1', 1), ('bsliran', 1), ('2pd', 1), ('LeoThern', 1), ('Kilian Kielman', 1), ('K-Kit', 1)",110,100,
dcm4che/dcm4chee-xds,XDS.b Implementation,"dcm4chee-xds
============
Sources: https://github.com/dcm4che/dcm4chee-xds  
Binaries:   
Issue Tracker: http://www.dcm4che.org/jira/browse/XDSB 

XDS.b Implementation running on JBoss 7 application server


Build
-----
After installation of [Maven 3](http://maven.apache.org):

   for java preferences config profile:
 
      mvn install -Ddb={db2|firebird|h2|mysql|oracle|psql|sqlserver}
      
   for ldap config profile:
  
      mvn install -Ddb={db2|firebird|h2|mysql|oracle|psql|sqlserver} -Pldap -Dldap={apacheds|opends|slapd}

Installation
------------
See [INSTALL.md](https://github.com/dcm4che/dcm4chee-xds/blob/master/INSTALL.md).

License
-------
* [Mozilla Public License Version 1.1](http://www.mozilla.org/MPL/1.1/)
",,2012-05-29T10:35:23Z,2016-11-02T13:22:13Z,9,4,15,22,"('fwiller', 234), ('romank-agfa', 233), ('romank', 26), ('rawmahn', 23), ('mjuecker', 15), ('Michael Backhaus', 11), ('robert-david', 10), ('awprc', 3), ('alessio.roselli', 1)",1,0,
github/brubeck,A Statsd-compatible metrics aggregator,"# Brubeck (unmaintained)

Brubeck is a [statsd](https://github.com/etsy/statsd)-compatible stats
aggregator written in C. Brubeck is currently unmaintained.

## List of known maintained forks

- https://github.com/lukepalmer/brubeck-new

## What is statsd?

Statsd is a metrics aggregator for Graphite (and other data storage backends). This
technical documentation assumes working knowledge of what statsd is and how it works;
please read the [statsd documentation](https://github.com/etsy/statsd#statsd-) for
more details.

Statsd is a good idea, and if you're using Graphite for metrics collection in your
infrastructure, you probably want a statsd-compatible aggregator in front of it.

## Tradeoffs

- Brubeck is missing many of the features of the original StatsD. We've only implemented what we felt was necessary for our metrics stack.

- Brubeck only runs on Linux. It won't even build on Mac OS X.

- Some of the performance features require a (moderately) recent version of the kernel that you may not have.

## Building

Brubeck has the following dependencies:

- A Turing-complete computing device running a modern version of the Linux kernel
  (the kernel needs to be at least 2.6.33 in order to use multiple recvmsg support)

- A compiler for the C programming language

- Jansson (`libjansson-dev` on Debian) to load the configuration (version 2.5+ is required)

- OpenSSL (`libcrypto`) if you're building StatsD-Secure support

- libmicrohttpd (`libmicrohttpd-dev`) to have an internal HTTP stats endpoint. Build with `BRUBECK_NO_HTTP` to disable this.

Build brubeck by typing:

    ./script/bootstrap

Other operating systems or kernels can probably build Brubeck too. More specifically,
Brubeck has been seen to work under FreeBSD and OpenBSD, but this is not supported.

## Supported Metric Types

Brubeck supports most of the metric types from statsd and many other implementations.

- `g` - Gauges
- `c` - Meters
- `C` - Counters
- `h` - Histograms
- `ms` - Timers (in milliseconds)

Client-sent sampling rates are ignored.

Visit the [statsd docs](https://github.com/etsy/statsd/blob/master/docs/metric_types.md) for more information on metric types.

## Interfacing

The are several ways to interact with a running Brubeck daemon.

### Signals

Brubeck answers to the following signals:

- `SIGINT`, `SIGTERM`: shutdown cleanly
- `SIGHUP`: reopen the log files (in case you're using logrotate or an equivalent)
- `SIGUSR2`: dump a newline-separated list of all the metrics currently aggregated by the
    daemon and their types.

### HTTP Endpoint

If enabled on the config file, Brubeck can provide an HTTP API to poll its status. The following routes are available:

- `GET /ping`: return a short JSON payload with the current status of the daemon (just to check it's up)
- `GET /stats`: get a large JSON payload with full statistics, including active endpoints and throughputs
- `GET /metric/{{metric_name}}`: get the current status of a metric, if it's being aggregated
- `POST /expire/{{metric_name}}`: expire a metric that is no longer being reported to stop it from being aggregated to the backend

## Configuration

The configuration for Brubeck is loaded through a JSON file, passed on the commandline.

    ./brubeck --config=my.config.json

If no configuration file is passed to the daemon, it will load `config.default.json`, which
contains useful defaults for local development/testing.

The JSON file can contain the following sections:

- `server_name`: a string identifying the name for this specific Brubeck instance. This will
    be used by the daemon when reporting its internal metrics.

- `dumpfile`: a path where to store the metrics list when triggering a dump (see the section on
    Interfacing with the daemon)

- `http`: if existing, this string sets the listen address and port for the HTTP API
    
- `backends`: an array of the different backends to load. If more than one backend is loaded,
    brubeck will function in sharding mode, distributing aggregation load evenly through all
    the different backends through constant-hashing.

    -   `carbon`: a backend that aggregates data into a Carbon cache. The backend sends all the
        aggregated data once every `frequency` seconds. By default the data is sent to the port 2003
        of the Carbon cache (plain text protocol), but the pickle wire protocol can be enabled by
        setting `pickle` to `true` and changing the port accordingly.

        ```
        {
          ""type"" : ""carbon"",
          ""address"" : ""0.0.0.0"",
          ""port"" : 2003,
          ""frequency"" : 10,
          ""pickle: true
        }
        ```

        We strongly encourage you to use the pickle wire protocol instead of plaintext,
        because carbon-relay.py is not very performant and will choke when parsing plaintext
        under enough load. Pickles are much softer CPU-wise on the Carbon relays,
        aggregators and caches.

        Hmmmm pickles. Now I'm hungry. Lincoln when's lunch?

- `samplers`: an array of the different samplers to load. Samplers run on parallel and gather
incoming metrics from the network.

    -  `statsd`: the default statsd-compatible sampler. It listens on an UDP port for metrics
    packets. You can have more than one statsd sampler on the same daemon, but Brubeck was
    designed to support a single sampler taking the full metrics load on a single port.

        ```
        {
          ""type"" : ""statsd"",
          ""address"" : ""0.0.0.0"",
          ""port"" : 8126,
        }
        ```

        The StatsD sampler has the following options (and default values) for performance tuning:

        - `""workers"" : 4` number of worker threads that will service the StatsD socket endpoint. More threads means emptying the socket faster, but the context switching and cache smashing will affect performance. In general, you can saturate your NIC as long as you have enough worker threads (one per core) and a fast enough CPU. Set this to 1 if you want to run the daemon in event-loop mode. But that'd be silly. This is not Node.

        - `""multisock"" : false` if set to true, Brubeck will use the `SO_REUSEPORT` flag available since Linux 3.9 to create one socket per worker thread and bind it to the same address/port. The kernel will then round-robin between the threads without forcing them to race for the socket. This improves performance by up to 30%, try benchmarking this if your Kernel is recent enough.

        - `""multimsg"" : 1` if set to greater than one, Brubeck will use the `recvmmsg` syscall (available since Linux 2.6.33) to read several UDP packets (the specified amount) in a single call and reduce the amount of context switches. This doesn't improve performance much with several worker threads, but may have an effect in a limited configuration with only one thread. Make it a power of two for better results. As always, benchmark. YMMV.

    - `statsd-secure`: like StatsD, but each packet has a HMAC that verifies its integrity. This is hella useful if you're running infrastructure in The Cloud (TM) (C) and you want to send back packets back to your VPN without them being tampered by third parties.

        ```
        {
          ""type"" : ""statsd-secure"",
          ""address"" : ""0.0.0.0"",
          ""port"" : 9126,
          ""max_drift"" : 3,
          ""hmac_key"" : ""750c783e6ab0b503eaa86e310a5db738"",
          ""replay_len"" : 8000
        }
        ```

        The `address` and `port` parts are obviously the same as in statsd.

        - `max_drift` defines the maximum time (in seconds) that packets can be delayed
        since they were sent from the origin. All metrics come with a timestamp, so metrics
        that drift more than this value will silently be discared.

        - `hmac_key` is the shared HMAC secret. The client sending the metrics must also know
        this in order to sign them.

        - `replay_len` is the size of the bloom filter that will be used to prevent replay
        attacks. We use a rolling bloom filter (one for every drift second), so `replay_len`
        should roughly be the amount of **unique** metrics you expect to receive in a 1s
        interval.

        **NOTE**: StatsD-secure doesn't run with multiple worker threads because verifying
        signatures is already slow enough. Don't use this in performance critical scenarios.

        **NOTE**: StatsD-secure uses a bloom filter to prevent replay attacks, so a small
        percentage of metrics *will* be dropped because of false positives. Take this into
        consideration.

        **NOTE**: An HMAC does *not* encrypt the packets, it just verifies its integrity.
        If you need to protect the content of the packets from eavesdropping, get those
        external machines in your VPN.

        **NOTE**: StatsD-secure may or may not be a good idea. If you have the chance to
        send all your metrics inside a VPN, I suggest you do that instead.

## Testing

There's some tests in the `test` folder for key parts of the system (such as packet parsing,
and all concurrent data access); besides that we test the behavior of the daemon live on staging
and production systems.

- Small changes are deployed into production as-is, straight from their feature branch.
Deployment happens in 3 seconds for all the Brubeck instances in our infrastructure, so
we can roll back into the master branch immediately if something fails.

- For critical changes, we multiplex a copy of the metrics stream into an Unix domain socket,
so we can have two instances of the daemon (old and new) aggregating to the production
cluster and a staging cluster, and verify that the metrics flow into the two clusters is equivalent.

- Benchmarking is performed on real hardware in our datacenter. The daemon is spammed with fake
metrics across the network and we ensure that there are no regressions (particularly in the linear
scaling between cores for the statsd sampler).

When in doubt, please refer to the part of the MIT license that says *""THE SOFTWARE IS PROVIDED
'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED""*. We use Brubeck in production and
have been doing so for years, but we cannot make any promises regarding availability or
performance.

## FAQ

- **I cannot hit 4 million UDP metrics per second. I want my money back.**

Make sure receiver-side scaling is properly configured in your kernel and that IRQs
are being serviced by different cores, and that the daemon's threads are not
pinned to a specific core. Make sure you're running the daemon in a physical machine
and not a cheap cloud VPS. Make sure your NIC has the right drivers and it's not
bottlenecking. Install a newer kernel and try running with `SO_REUSEPORT`.

If nothing works, refunds are available upon request. Just get mad at me on Twitter.
",,2015-06-10T09:51:42Z,2019-11-14T10:59:50Z,15,11,1188,35,"('vmg', 34), ('Vicent Marti', 19), ('haneefmubarak', 4), ('Vicent Martí', 3), ('goir', 2), ('Jason Lunz', 2), ('MikeMcQuaid', 2), ('alindeman', 1), ('linkslice', 1), ('carlosmn', 1), ('IonicaBizau', 1), ('joeshaw', 1), ('Michal Hruby', 1), ('mhr3', 1), ('iamfletch', 1)",8,7,
bitcoinbook/bitcoinbook,Mastering Bitcoin 3rd Edition - Programming the Open Blockchain,"# Mastering Bitcoin

Mastering Bitcoin is a technical book that explains what Bitcoin is and how it works.

This repository contains the complete text of three editions of the book Mastering Bitcoin as published in paperback and ebook formats by O'Reilly Media. Different editions of this book are covered by different open licenses (see [LICENSE](LICENSE)). The three editions are:

* The [first edition, second print](https://github.com/bitcoinbook/bitcoinbook/releases/tag/Edition1Print2), published in December 2014
* The [second edition, third print](https://github.com/bitcoinbook/bitcoinbook/releases/tag/second_edition_print3), published in March 2018
* The [third edition, first print](https://github.com/bitcoinbook/bitcoinbook/releases/tag/third_edition_print1), published in December 2023

# Reading This Book

To read this book *for free*, see [BOOK.md](https://github.com/bitcoinbook/bitcoinbook/blob/develop/BOOK.md). Click on each of the chapters to read in your browser. 

_Please note that some of the links in each chapter do not work when reading the book on Github. This is because those links are intended for the print and ebook editions of the book and only work when all the chapters are rendered together. Unfortunatelly, Github does not have the ability to render the complete book at once._

## Where is the PDF?

**The current edition is not available as a PDF, deliberately**. Why? Because the publisher (O'Reilly Media) is a for-profit publisher who puts considerable resources behind producing, editing and distributing this book. The third edition of ""Mastering Bitcoin"" is available under a CC-BY-NC-ND license, not a CC-BY-SA license. The book will eventually (within a year of publication) be released under a CC-BY-SA license, at which point PDF copies and translations will be allowed (a PDF is a ""derivative"" product, which is what the ""ND-NoDerivatives"" part of the license prohibits). 

Making PDF copies violates the license and interferes with the publisher's and the authors' ability to earn from their work. Furthermore, if you make it so the publisher can't recoup their investment, they may delay the release into CC-BY-SA. A beautifully rendered PDF or epub version of this book is offered for sale by the publisher. Convenient packaging is the for-profit product, whereas the version available here is slightly less convenient but entirely free for personal and non-commercial use. If you want convenience and nice packaging, buy the book!

Please don't create or distribute PDFs until the license is changed to CC-BY-SA. It is rare for a publisher to even agree to a CC-BY-NC-ND license. Don't make it harder for free culture by violating even that, already generous, license. 

# Mastering Bitcoin Third Edition

*""Mastering Bitcoin: Programming the Open Blockchain (3rd Edition)""* is now available in paperback and ebook formats by many booksellers worldwide, such as:

* [EBooks.com](https://www.ebooks.com/en-us/book/211147266/mastering-bitcoin/andreas-m-antonopoulos/)
* [Amazon](https://www.amazon.com/Mastering-Bitcoin-Programming-Open-Blockchain/dp/1098150090)
* [Barnes and Noble](https://www.barnesandnoble.com/w/mastering-bitcoin-andreas-m-antonopoulos/1126323222?ean=9781098150051)

The tag [third_edition_print_1](https://github.com/bitcoinbook/bitcoinbook/releases/tag/third_edition_print1) corresponds to the first print of the third edition of Mastering Bitcoin as published in paperback and ebook by O'Reilly Media in December 2023.

 Mastering Bitcoin: Programming the Open Blockchain (Third Edition) by Andreas M. Antonopoulos, David A. Harding is licensed under Attribution-NonCommercial-NoDerivatives 4.0 International 

# Other Editions and Languages

## Mastering Bitcoin - First Edition

The tags [Edition1Print1](https://github.com/bitcoinbook/bitcoinbook/releases/tag/Edition1Print1), [Edition1Print2](https://github.com/bitcoinbook/bitcoinbook/releases/tag/Edition1Print2) correspond to the two existing prints of Mastering Bitcoin (First Edition) as published by O'Reilly Media.

Mastering Bitcoin - First Edition by aantonop Books LLC is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.

## Mastering Bitcoin - Second Edition

The tags, [second_edition_print_1](https://github.com/bitcoinbook/bitcoinbook/releases/tag/second_edition_print_1)  [second_edition_print2](https://github.com/bitcoinbook/bitcoinbook/releases/tag/second_edition_print2),  [second_edition_print3](https://github.com/bitcoinbook/bitcoinbook/releases/tag/second_edition_print3), correspond to the first (June 8th, 2017), second (July 20th, 2017) and third (March  23rd, 2018) print of Mastering Bitcoin (Second Edition), as published by O'Reilly Media.

Mastering Bitcoin - Second Edition by aantonop Books LLC is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.

Mastering Bitcoin (Open Second Edition), based on the Seond Edition, is also available in English and Spanish at https://aantonop.com. Mastering Bitcoin 2nd Edition is also published in German, Polish, Japanese, Korean, Chinese and other languages by publishers in the respective countries.

# Issues, Errors, Comments, Contributions

To contribute to this book, see [CONTRIBUTING.md](CONTRIBUTING.md). All contributions must be your original work and contributed under a public domain (CC0), or attribution (CC-BY) license. You must include your own attribution in the pull request, as an edit to the github_contrib.asciidoc file. 

If you know how to make a pull request to contribute a fix, please write the correction and use a pull request to submit it for consideration against the [develop branch](https://github.com/bitcoinbook/bitcoinbook/tree/develop). If you are making several changes, please use a separate commit for each to make it easier to cherry-pick or resolve conflicts. Otherwise, please submit an issue, explaining the error or comment. If you would like to contribute extensive changes or new material, please coordinate with the author first; contact information can be found on his website: https://aantonop.com/

# Translations

If you are interested in translating this book, please join our team of volunteers at: https://www.transifex.com/bitcoinbook/mastering-bitcoin/
","'bitcoin', 'bitcoin-api', 'blockchain', 'oreilly', 'oreilly-books'",2013-08-11T23:18:28Z,2024-06-18T09:26:08Z,215,176,23085,1063,"('aantonop', 840), ('clenser', 612), ('IndexPro', 576), ('myarbrough', 483), ('wbnns', 456), ('nadamsoreilly', 367), ('harding', 302), ('claylock-oreilly', 283), ('enderminh', 199), ('drusselloctal@gmail.com', 190), ('rating89us', 112), ('krupawan5618', 61), ('kristenORM', 59), ('Nellie McKesson', 51), ('hackermatthew', 36), ('theresa-jones', 30), ('edeykholt', 27), ('Lornestar', 22), ('dimitris-t', 18), ('cclauss', 16), ('0xmichalis', 16), ('zaremba', 15), ('erikwam', 14), ('Chris Pappas', 12), ('allymacdonald', 12), ('rgordon', 12), ('Quuxplusone', 10), ('ffilozov', 9), ('aseronick', 9), ('jerzybrzoska', 9), ('tmcgovern@oreilly.com', 9), ('Sanders Kleinfeld', 8), ('oboukli', 8), ('winchell', 8), ('danra', 8), ('blip151', 7), ('theStack', 7), ('sklise', 6), ('genjix', 6), ('user135711', 6), ('wbinns', 6), ('Rfurse', 6), ('hebasto', 6), ('Atlas Worker', 5), ('edposnak', 5), ('Steve Klise', 5), ('Will Binns', 4), ('ziggamon', 4), ('richardkiss', 4), ('philippgille', 4), ('syncom', 4), ('bilthon', 4), ('MarcoFalke', 4), ('jonathancross', 4), ('fjrojasgarcia', 4), ('physicsdude', 4), ('yurigeorgiev4', 3), ('jachiang', 3), ('ethers', 3), ('Yky', 3), ('Seiichi Uchida', 3), ('pamelawjd', 3), ('nagarajhubli', 3), ('Meghan Jones', 3), ('sedaghatfar', 3), ('cherouvim', 3), ('cgodley', 3), ('adamwitwer', 2), ('rrthomas', 2), ('runemadsen', 2), ('Sarah Schneider', 2), ('Steve Klise', 2), ('wlk', 2), ('ishotjr', 2), ('mjones@wordco.com', 2), ('sanders@oreilly.com', 2), ('wbnns', 2), ('michaelcippolito', 2), ('wintercooled', 2), ('achiku', 2), ('Alex Waters', 2), ('elias19r', 2), ('himanshudabas', 2), ('Jameson Lopp', 2), ('porcupinenick', 2), ('MihailRussu', 2), ('mattmcgiv', 2), ('ysangkok', 2), ('bokobza', 2), ('mz7mz7mz7', 2), ('satwo', 1), ('sandersk', 1), ('sandroconforto', 1), ('simondlr', 1), ('Stacie Waleyko', 1), ('Stacie Waleyko', 1), ('Emzy', 1), ('thiagoarrais', 1), ('Thomas Kerin', 1), ('tiagocanto01', 1), ('tochicool', 1), ('tkuye', 1), ('vasild', 1), ('vincentdnl', 1), ('wlbentley', 1), ('yancyribbens', 1), ('netsamir', 1), ('sunnyville01', 1), ('Sam Ritchie', 1), ('slynchoreilly', 1), ('raulsiles', 1), ('randolf', 1), ('waterst0ne', 1), ('patstockwell', 1), ('ogennadi', 1), ('oleiba', 1), ('jobnomade', 1), ('Nekomata', 1), ('thecodefactory', 1), ('murchandamus', 1), ('MichalisK', 1), ('trustkim', 1), ('sudeshnas25', 1), ('ratijas', 1), ('practicalswift', 1), ('pphili', 1), ('ottosch', 1), ('milansismanovic', 1), ('mikong', 1), ('marco zandonadi', 1), ('lilac-ss', 1), ('koshikraj', 1), ('kenjiszk', 1), ('katesalazar', 1), ('joebauers', 1), ('ivigamberdiev', 1), ('ivangreene', 1), ('hizzvizz', 1), ('halseth', 1), ('francyi', 1), ('evoskuil', 1), ('emag', 1), ('effectsToCause', 1), ('drstrangeM', 1), ('Jolly-Pirate', 1), ('dkrm', 1), ('DanGitOreilly', 1), ('dallyshalla', 1), ('coinradar', 1), ('chrisd95', 1), ('bitcoinsSG', 1), ('ChunshengZhao', 1), ('64H-1', 1), ('schinzelh', 1), ('morenoh149', 1), ('guenterrote', 1), ('Gus', 1), ('gyousuf', 1), ('Frank Höger', 1), ('fballares', 1), ('whiteath', 1), ('fabienhinault', 1), ('codingisacopingstrategy', 1), ('EdLeafe', 1), ('biafra23', 1), ('diegoviola', 1), ('DavidHuie', 1), ('trulex', 1), ('Dan-Nolan', 1), ('Siecje', 1), ('cihati', 1), ('THEHighlander', 1), ('Chris Kleeschulte', 1), ('belovachap', 1), ('cflynn07', 1), ('bchase', 1), ('bitcoinctf', 1), ('andremaha', 1), ('ALeschinsky', 1), ('grkvlt', 1), ('aminmazi', 1), ('dindinw', 1), ('Administrator', 1), ('Enegnei', 1), ('Maximilian Reichel', 1), ('Matthiti', 1), ('matt-wesley', 1), ('terzim', 1), ('María', 1), ('marzig76', 1), ('harrigan', 1), ('manjeetbhati', 1), ('MaloneGod', 1), ('MG-ng', 1), ('lclc', 1), ('asymmetric', 1), ('lrettig', 1), ('xosach', 1), ('kristjanr', 1), ('kaibakker', 1), ('juanesarango', 1), ('Jorgeminator', 1), ('Johannes Keyser', 1), ('joflynn', 1), ('jowo-io', 1), ('wjx', 1), ('JerJohn15', 1), ('reachjason', 1), ('jbisterfeldt', 1), ('Jameson Lopp', 1), ('jlopp', 1), ('jcramer', 1), ('jayaddison', 1), ('johnpaulkiser', 1), ('RunesReader', 1)",125,107,
EbookFoundation/free-programming-books,:books: Freely available programming books,"# List of Free Learning Resources In Many Languages



[![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)&#160;
[![License: CC BY 4.0](https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg)](https://creativecommons.org/licenses/by/4.0/)&#160;
[![Hacktoberfest 2023 stats](https://img.shields.io/github/hacktoberfest/2023/EbookFoundation/free-programming-books?label=Hacktoberfest+2023)](https://github.com/EbookFoundation/free-programming-books/pulls?q=is%3Apr+is%3Amerged+created%3A2023-10-01..2023-10-31)



Search the list at [https://ebookfoundation.github.io/free-programming-books-search/](https://ebookfoundation.github.io/free-programming-books-search/) [![https://ebookfoundation.github.io/free-programming-books-search/](https://img.shields.io/website?style=flat&logo=www&logoColor=whitesmoke&label=Dynamic%20search%20site&down_color=red&down_message=down&up_color=green&up_message=up&url=https%3A%2F%2Febookfoundation.github.io%2Ffree-programming-books-search%2F)](https://ebookfoundation.github.io/free-programming-books-search/).

This page is available as an easy-to-read website. Access it by clicking on [![https://ebookfoundation.github.io/free-programming-books/](https://img.shields.io/website?style=flat&logo=www&logoColor=whitesmoke&label=Static%20site&down_color=red&down_message=down&up_color=green&up_message=up&url=https%3A%2F%2Febookfoundation.github.io%2Ffree-programming-books%2F)](https://ebookfoundation.github.io/free-programming-books/).


  
    
     
    
  


## Intro

This list was originally a clone of [StackOverflow - List of Freely Available Programming Books](https://web.archive.org/web/20140606191453/http://stackoverflow.com/questions/194812/list-of-freely-available-programming-books/392926) with contributions from Karan Bhangui and George Stocker.

The list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of [GitHub's most popular repositories](https://octoverse.github.com/).



[![GitHub repo forks](https://img.shields.io/github/forks/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Forks)](https://github.com/EbookFoundation/free-programming-books/network)&#160;
[![GitHub repo stars](https://img.shields.io/github/stars/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Stars)](https://github.com/EbookFoundation/free-programming-books/stargazers)&#160;
[![GitHub repo contributors](https://img.shields.io/github/contributors-anon/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Contributors)](https://github.com/EbookFoundation/free-programming-books/graphs/contributors)    
[![GitHub org sponsors](https://img.shields.io/github/sponsors/EbookFoundation?style=flat&logo=github&logoColor=whitesmoke&label=Sponsors)](https://github.com/sponsors/EbookFoundation)&#160;
[![GitHub repo watchers](https://img.shields.io/github/watchers/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Watchers)](https://github.com/EbookFoundation/free-programming-books/watchers)&#160;
[![GitHub repo size](https://img.shields.io/github/repo-size/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=whitesmoke&label=Repo%20Size)](https://github.com/EbookFoundation/free-programming-books/archive/refs/heads/main.zip)



The [Free Ebook Foundation](https://ebookfoundation.org) now administers the repo, a not-for-profit organization devoted to promoting the creation, distribution, archiving, and sustainability of free ebooks. [Donations](https://ebookfoundation.org/contributions.html) to the Free Ebook Foundation are tax-deductible in the US.


## How To Contribute

Please read [CONTRIBUTING](docs/CONTRIBUTING.md). If you're new to GitHub, [welcome](docs/HOWTO.md)! Remember to abide by our adapted from ![Contributor Covenant 1.3](https://img.shields.io/badge/Contributor%20Covenant-1.3-4baaaa.svg) [Code of Conduct](docs/CODE_OF_CONDUCT.md) too ([translations](#translations) also available).

Click on these badges to see how you might be able to help:



[![GitHub repo Issues](https://img.shields.io/github/issues/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=red&label=Issues)](https://github.com/EbookFoundation/free-programming-books/issues)&#160;
[![GitHub repo Good Issues for newbies](https://img.shields.io/github/issues/EbookFoundation/free-programming-books/good%20first%20issue?style=flat&logo=github&logoColor=green&label=Good%20First%20issues)](https://github.com/EbookFoundation/free-programming-books/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22)&#160;
[![GitHub Help Wanted issues](https://img.shields.io/github/issues/EbookFoundation/free-programming-books/help%20wanted?style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20issues)](https://github.com/EbookFoundation/free-programming-books/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)    
[![GitHub repo PRs](https://img.shields.io/github/issues-pr/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=orange&label=PRs)](https://github.com/EbookFoundation/free-programming-books/pulls)&#160;
[![GitHub repo Merged PRs](https://img.shields.io/github/issues-search/EbookFoundation/free-programming-books?style=flat&logo=github&logoColor=green&label=Merged%20PRs&query=is%3Amerged)](https://github.com/EbookFoundation/free-programming-books/pulls?q=is%3Apr+is%3Amerged)&#160;
[![GitHub Help Wanted PRs](https://img.shields.io/github/issues-pr/EbookFoundation/free-programming-books/help%20wanted?style=flat&logo=github&logoColor=b545d1&label=%22Help%20Wanted%22%20PRs)](https://github.com/EbookFoundation/free-programming-books/pulls?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22)



## How To Share


Share on Facebook
Share on LinkedIn
Share on Mastodon/Fediverse    
Share on Telegram
Share on 𝕏 (Twitter)


## Resources

This project lists books and other resources grouped by genres:

### Books

[English, By Programming Language](books/free-programming-books-langs.md)

[English, By Subject](books/free-programming-books-subjects.md)

#### Other Languages

+ [Arabic / al arabiya / العربية](books/free-programming-books-ar.md)
+ [Armenian / Հայերեն](books/free-programming-books-hy.md)
+ [Azerbaijani / Азәрбајҹан дили / آذربايجانجا ديلي](books/free-programming-books-az.md)
+ [Bengali / বাংলা](books/free-programming-books-bn.md)
+ [Bulgarian / български](books/free-programming-books-bg.md)
+ [Burmese / မြန်မာဘာသာ](books/free-programming-books-my.md)
+ [Chinese / 中文](books/free-programming-books-zh.md)
+ [Czech / čeština / český jazyk](books/free-programming-books-cs.md)
+ [Catalan / catalan/ català](books/free-programming-books-ca.md)
+ [Danish / dansk](books/free-programming-books-da.md)
+ [Dutch / Nederlands](books/free-programming-books-nl.md)
+ [Estonian / eesti keel](books/free-programming-books-et.md)
+ [Finnish / suomi / suomen kieli](books/free-programming-books-fi.md)
+ [French / français](books/free-programming-books-fr.md)
+ [German / Deutsch](books/free-programming-books-de.md)
+ [Greek / ελληνικά](books/free-programming-books-el.md)
+ [Hebrew / עברית](books/free-programming-books-he.md)
+ [Hindi / हिन्दी](books/free-programming-books-hi.md)
+ [Hungarian / magyar / magyar nyelv](books/free-programming-books-hu.md)
+ [Indonesian / Bahasa Indonesia](books/free-programming-books-id.md)
+ [Italian / italiano](books/free-programming-books-it.md)
+ [Japanese / 日本語](books/free-programming-books-ja.md)
+ [Korean / 한국어](books/free-programming-books-ko.md)
+ [Latvian / Latviešu](books/free-programming-books-lv.md)
+ [Malayalam / മലയാളം](books/free-programming-books-ml.md)
+ [Norwegian / Norsk](books/free-programming-books-no.md)
+ [Persian / Farsi (Iran) / فارسى](books/free-programming-books-fa_IR.md)
+ [Polish / polski / język polski / polszczyzna](books/free-programming-books-pl.md)
+ [Portuguese (Brazil)](books/free-programming-books-pt_BR.md)
+ [Portuguese (Portugal)](books/free-programming-books-pt_PT.md)
+ [Romanian (Romania) / limba română / român](books/free-programming-books-ro.md)
+ [Russian / Русский язык](books/free-programming-books-ru.md)
+ [Serbian / српски језик / srpski jezik](books/free-programming-books-sr.md)
+ [Slovak / slovenčina](books/free-programming-books-sk.md)
+ [Spanish / español / castellano](books/free-programming-books-es.md)
+ [Swedish / Svenska](books/free-programming-books-sv.md)
+ [Tamil / தமிழ்](books/free-programming-books-ta.md)
+ [Telugu / తెలుగు](books/free-programming-books-te.md)
+ [Thai / ไทย](books/free-programming-books-th.md)
+ [Turkish / Türkçe](books/free-programming-books-tr.md)
+ [Ukrainian / Українська](books/free-programming-books-uk.md)
+ [Vietnamese / Tiếng Việt](books/free-programming-books-vi.md)

### Cheat Sheets

+ [All Languages](more/free-programming-cheatsheets.md)

### Free Online Courses

+ [Arabic / al arabiya / العربية](courses/free-courses-ar.md)
+ [Bengali / বাংলা](courses/free-courses-bn.md)
+ [Bulgarian / български](courses/free-courses-bg.md)
+ [Burmese / မြန်မာဘာသာ](courses/free-courses-my.md)
+ [Chinese / 中文](courses/free-courses-zh.md)
+ [English](courses/free-courses-en.md)
+ [Finnish / suomi / suomen kieli](courses/free-courses-fi.md)
+ [French / français](courses/free-courses-fr.md)
+ [German / Deutsch](courses/free-courses-de.md)
+ [Greek / ελληνικά](courses/free-courses-el.md)
+ [Hebrew / עברית](courses/free-courses-he.md)
+ [Hindi / हिंदी](courses/free-courses-hi.md)
+ [Indonesian / Bahasa Indonesia](courses/free-courses-id.md)
+ [Italian / italiano](courses/free-courses-it.md)
+ [Japanese / 日本語](courses/free-courses-ja.md)
+ [Kannada/ಕನ್ನಡ](courses/free-courses-kn.md)
+ [Kazakh / қазақша](courses/free-courses-kk.md)
+ [Khmer / ភាសាខ្មែរ](courses/free-courses-km.md)
+ [Korean / 한국어](courses/free-courses-ko.md)
+ [Malayalam / മലയാളം](courses/free-courses-ml.md)
+ [Marathi / मराठी](courses/free-courses-mr.md)
+ [Nepali / नेपाली](courses/free-courses-ne.md)
+ [Norwegian / Norsk](courses/free-courses-no.md)
+ [Persian / Farsi (Iran) / فارسى](courses/free-courses-fa_IR.md)
+ [Polish / polski / język polski / polszczyzna](courses/free-courses-pl.md)
+ [Portuguese (Brazil)](courses/free-courses-pt_BR.md)
+ [Portuguese (Portugal)](courses/free-courses-pt_PT.md)
+ [Russian / Русский язык](courses/free-courses-ru.md)
+ [Sinhala / සිංහල](courses/free-courses-si.md)
+ [Spanish / español / castellano](courses/free-courses-es.md)
+ [Swedish / svenska](courses/free-courses-sv.md)
+ [Tamil / தமிழ்](courses/free-courses-ta.md)
+ [Telugu / తెలుగు](courses/free-courses-te.md)
+ [Thai / ภาษาไทย](courses/free-courses-th.md)
+ [Turkish / Türkçe](courses/free-courses-tr.md)
+ [Ukrainian / Українська](courses/free-courses-uk.md)
+ [Urdu / اردو](courses/free-courses-ur.md)
+ [Vietnamese / Tiếng Việt](courses/free-courses-vi.md)


### Interactive Programming Resources

+ [Chinese / 中文](more/free-programming-interactive-tutorials-zh.md)
+ [English](more/free-programming-interactive-tutorials-en.md)
+ [German / Deutsch](more/free-programming-interactive-tutorials-de.md)
+ [Japanese / 日本語](more/free-programming-interactive-tutorials-ja.md)
+ [Russian / Русский язык](more/free-programming-interactive-tutorials-ru.md)


### Problem Sets and Competitive Programming

+ [Problem Sets](more/problem-sets-competitive-programming.md)


### Podcast - Screencast

Free Podcasts and Screencasts:

+ [Arabic / al Arabiya / العربية](casts/free-podcasts-screencasts-ar.md)
+ [Burmese / မြန်မာဘာသာ](casts/free-podcasts-screencasts-my.md)
+ [Chinese / 中文](casts/free-podcasts-screencasts-zh.md)
+ [Czech / čeština / český jazyk](casts/free-podcasts-screencasts-cs.md)
+ [Dutch / Nederlands](casts/free-podcasts-screencasts-nl.md)
+ [English](casts/free-podcasts-screencasts-en.md)
+ [Finnish / Suomi](casts/free-podcasts-screencasts-fi.md)
+ [French / français](casts/free-podcasts-screencasts-fr.md)
+ [Hebrew / עברית](casts/free-podcasts-screencasts-he.md)
+ [Indonesian / Bahasa Indonesia](casts/free-podcasts-screencasts-id.md)
+ [Persian / Farsi (Iran) / فارسى](casts/free-podcasts-screencasts-fa_IR.md)
+ [Polish / polski / język polski / polszczyzna](casts/free-podcasts-screencasts-pl.md)
+ [Portuguese (Brazil)](casts/free-podcasts-screencasts-pt_BR.md)
+ [Portuguese (Portugal)](casts/free-podcasts-screencasts-pt_PT.md)
+ [Russian / Русский язык](casts/free-podcasts-screencasts-ru.md)
+ [Sinhala / සිංහල](casts/free-podcasts-screencasts-si.md)
+ [Spanish / español / castellano](casts/free-podcasts-screencasts-es.md)
+ [Swedish / Svenska](casts/free-podcasts-screencasts-sv.md)
+ [Turkish / Türkçe](casts/free-podcasts-screencasts-tr.md)
+ [Ukrainian / Українська](casts/free-podcasts-screencasts-uk.md)


### Programming Playgrounds

Write, compile, and run your code within a browser. Try it out!

+ [Chinese / 中文](more/free-programming-playgrounds-zh.md)
+ [English](more/free-programming-playgrounds.md)
+ [German / Deutsch](more/free-programming-playgrounds-de.md)

## Translations

Volunteers have translated many of our Contributing, How-to, and Code of Conduct documents into languages covered by our lists.

+ English
  + [Code of Conduct](docs/CODE_OF_CONDUCT.md)
  + [Contributing](docs/CONTRIBUTING.md)
  + [How-to](docs/HOWTO.md)
+ ... *[More languages](docs/README.md#translations)* ...

You might notice that there are [some missing translations here](docs/README.md#translations) - perhaps you would like to help out by [contributing a translation](docs/CONTRIBUTING.md#help-out-by-contributing-a-translation)?


## License

Each file included in this repository is licensed under the [CC BY License](LICENSE).
","'books', 'education', 'hacktoberfest', 'list', 'resource'",2013-10-11T06:50:37Z,2024-06-18T11:46:00Z,3159,432,323850,9736,"('vhf', 1542), ('MHM5000', 301), ('davorpa', 158), ('alexanderfefelov', 134), ('MrS4w', 131), ('eshellman', 112), ('esparta', 106), ('kadhirash', 88), ('borgified', 71), ('mcicolella', 70), ('ericguirbal', 69), ('TimoSalomaki', 56), ('dependabotbot', 52), ('maieul', 50), ('SethFalco', 35), ('JIghtuse', 34), ('LuigiImVector', 32), ('Johan', 30), ('luminousspice', 30), ('Alex Gorelov', 26), ('danielkrupinski', 26), ('quobit', 22), ('Mouseion', 22), ('GintasS', 21), ('ss-th24', 21), ('Ajay-singh1', 20), ('eraysahin06', 20), ('brannx', 20), ('sunxb10', 20), ('saritip', 19), ('hoganlong', 18), ('grogy', 18), ('davisonio', 18), ('Dzmitry Lahoda', 18), ('IgorLutiy', 18), ('huzaifaalmesbah', 18), ('charlottetan', 17), ('AhmedElTabarani', 17), ('corragon', 16), ('apu52', 15), ('tml', 15), ('Theodor Savuscan', 15), ('BlueKore', 15), ('bluetata', 14), ('jwigert', 14), ('baciucristian', 14), ('jgpacker', 13), ('rodrigo-medeiros', 13), ('oltolm', 12), ('jbranchaud', 12), ('ictxiangxin', 12), ('avinoth', 12), ('avelytchko', 12), ('Setyobudi', 12), ('ktkaushik', 12), ('minsOne', 11), ('sohansai', 11), ('Robert Alm Nilsson', 11), ('dhamaniasad', 11), ('metabiswadeep', 11), ('cwfoo', 11), ('DavidMetcalfe', 11), ('levibostian', 11), ('gabrielgomesferraz', 11), ('ivanvc', 10), ('Mozartuss', 10), ('pcodex', 10), ('SuzukiKatsuma', 10), ('kree666', 10), ('ligurio', 10), ('PriyanshuSahani', 10), ('torn4dom4n', 10), ('devmuhib009', 10), ('mohamedation', 10), ('terranigmark', 10), ('Hari70a', 10), ('Gordon Chiam', 10), ('David McInnis', 10), ('MohitKumar0011', 9), ('gabriellim', 9), ('rastalamm', 9), ('cirosantilli', 9), ('yogan-gopi', 9), ('Vaibhav-23', 9), ('Fazer01', 9), ('Siddharth-coder13', 9), ('onebree', 9), ('GH05T-HUNTER5', 9), ('Devinsuit', 9), ('AnshumanPati', 9), ('jonesnc', 8), ('0xvashishth', 8), ('Snimer', 8), ('Saurabh Kumar', 8), ('Akhilan', 8), ('petrushev', 8), ('stmapman7', 8), ('CodeWithEmad', 8), ('kathgironpe', 8), ('knwang', 8), ('lyza-shyrzai', 8), ('niketmishra', 8), ('paulofreitas', 8), ('renanvm', 8), ('ruishawn', 8), ('lucas-yago', 7), ('saaketp', 7), ('openingnow', 7), ('tunggnu', 7), ('soorya-u', 7), ('sanjibgirics', 7), ('RaiyanMahin', 7), ('rajputpritesh1', 7), ('crescentpartha', 7), ('ddiebel', 7), ('devhimanshuu', 7), ('CakKhoiron', 7), ('borislavib', 7), ('mrblueblue', 7), ('arushmangal', 7), ('anubhavshrimal', 7), ('ngetchell', 7), ('nahansans', 7), ('NandoKstroNet', 7), ('marios-zindilis', 7), ('leonardorifeli', 7), ('LeoTino', 7), ('itsabinabraham', 7), ('0xkn1gh7', 6), ('angerangel', 6), ('brannx', 6), ('AR10X', 6), ('Wilhelm Babernits', 6), ('ramn23', 6), ('chessboards', 6), ('decentlearner', 6), ('Kristories', 6), ('m4ury4p', 6), ('merkuriy', 6), ('msxiyev', 6), ('maingocnguyen', 6), ('kernelwernel', 6), ('prerna120', 6), ('robschia', 6), ('sudoyu', 6), ('x0rld', 6), ('yaksh1', 6), ('dbrn', 6), ('zhuowenli', 6), ('omarayad1', 6), ('matysanchez', 6), ('leonampd', 6), ('AryavT', 6), ('Bhuvan506', 6), ('cmeraz', 6), ('armanabkar', 6), ('carolruo', 6), ('hochungyan', 6), ('CleanMachine1', 6), ('Double-A-92', 6), ('ErvinaDe', 6), ('harshinsecurity', 6), ('its-id', 6), ('isvaldo', 6), ('endeavourmonk', 6), ('maulanaaghnii', 6), ('Tigonchen', 6), ('learnbyexample', 6), ('sayak-sarkar', 6), ('Ruben', 6), ('GesuitaVolante', 6), ('ichbinmeraj', 6), ('iammehrabalam', 6), ('Manish-Syal123', 6), ('MohammadHosseinBagheri', 6), ('kalpeshT101', 6), ('jrinder42', 6), ('weakish', 6), ('zhirzh', 5), ('shrn01', 5), ('StepanNaryshkov', 5), ('sebgod', 5), ('zhongjiajie', 5), ('isayakmondal', 5), ('techgaun', 5), ('riwandys', 5), ('rinaldipratama', 5), ('rendiputra', 5), ('quatran', 5), ('PuneetTri', 5), ('PeterMorrison1', 5), ('packtpartner', 5), ('alexandear', 5), ('Imbiber', 5), ('NeamulIslamFahim', 5), ('numb95', 5), ('hiitesh1127', 5), ('Soumyadeb-Basu', 5), ('rosepac', 5), ('italovinicius18', 5), ('viniciusmo', 5), ('vineetsingh0809', 5), ('siw3kosky', 5), ('knguyen100000010', 5), ('henriquev16', 5), ('fey', 5), ('dafujii', 5), ('annahlu4', 5), ('yashsvi-30', 5), ('basiliskav', 5), ('Surya-Sastry', 5), ('SuperStas', 5), ('HelloSeaNation', 5), ('gusuy', 5), ('gvwilson', 5), ('Glenford', 5), ('fredericksilva', 5), ('douglasgusson', 5), ('Divyanshu9794', 5), ('ddrm86', 5), ('unsignedzero', 5), ('CristinaMendonca', 5), ('chrisspruck', 5), ('kareemkibue', 5), ('Caio Vinicius Marques Teixeira', 5), ('biswabaibhab007', 5), ('adelaid-isc', 5), ('fartem', 5), ('mendaomn', 5), ('alcole', 5), ('thebouv', 5), ('AmulyaShetty11', 5), ('arif-arrijal', 5), ('mgaitan', 5), ('MartinForReal', 5), ('xemeds', 5), ('MariMalta', 5), ('marcelbrode', 5), ('manasij7479', 5), ('mananshah99', 5), ('tsleolima', 5), ('199911', 5), ('Hongchang Wu', 5), ('If-Then-andSometimesElse', 5), ('ikayz', 5), ('Jake Worth', 5), ('corburn', 5), ('eclutsk', 5), ('yathu1', 5), ('joaoluizn', 5), ('vavjeeva', 5), ('jatin-dua', 5), ('spekulatius', 4), ('prabin-acharya', 4), ('CodeSudo', 4), ('punyakrit', 4), ('RaDaDiYaMoHiT', 4), ('radovankavicky', 4), ('Flicker-eth', 4), ('rishikesh-b', 4), ('SerafDosSantos', 4), ('Rohanfizz', 4), ('sambatlim', 4), ('Sarthak81', 4), ('satyampgt4', 4), ('shabab477', 4), ('kreativmonkey', 4), ('Saurabh-Daware', 4), ('Lisaluu555', 4), ('lluang', 4), ('M0ZZI', 4), ('Mamadou442', 4), ('raihaninfo', 4), ('meetps', 4), ('melanga', 4), ('mdbrnowski', 4), ('MinHan-Kyaw', 4), ('moazamdev', 4), ('mhrabiee', 4), ('Momozor', 4), ('Muhammad Anas', 4), ('thanapoom21', 4), ('N-E-W-T-O-N', 4), ('jarvis8', 4), ('natehefner', 4), ('Navninja7', 4), ('Misterhex', 4), ('zilmarr', 4), ('alinadir44', 4), ('bugbunnyy', 4), ('c02kr', 4), ('ff124012', 4), ('happiestbee', 4), ('waltzbucks', 4), ('huji405', 4), ('jlucier-durable', 4), ('madhavsarpal', 4), ('mohdahsanrazakhan', 4), ('rickytaki', 4), ('sahitya-pavurala', 4), ('skelic', 4), ('fosslinux', 4), ('yathu2198', 4), ('alvaroartano', 4), ('spatel777', 4), ('SharmaNishchay', 4), ('sudoShikhar', 4), ('SiddBW09', 4), ('suravshrestha', 4), ('Tejas Bubane', 4), ('TheSooth', 4), ('Tnguyen-learning', 4), ('lightbringer1991', 4), ('UrakFerraz', 4), ('vedant-z', 4), ('Venji10', 4), ('Victor Felder', 4), ('virendrachandak', 4), ('w4h4z', 4), ('WickedCoder0', 4), ('yerenn22', 4), ('yfancc20', 4), ('OpenCode', 4), ('fadyat', 4), ('Ashu104', 4), ('Ashwani Dausodia', 4), ('Ash515', 4), ('Asrarul-Hoque-Eusha', 4), ('Atharva1723', 4), ('AyushShahh', 4), ('BigBenzi', 4), ('DeathMetalCoder', 4), ('c1phani1simha', 4), ('Can Ibanoglu', 4), ('CyberSecByte', 4), ('danielbayerlein', 4), ('Dareten', 4), ('dave-ramirez', 4), ('DeadSkull786', 4), ('deepak-kamath', 4), ('deivyrene', 4), ('abbas-gadhia', 4), ('AJ-Walker', 4), ('AJain2810', 4), ('adarsh-jha-dev', 4), ('Afanasiev Stanislav', 4), ('aemiralfath', 4), ('Adamkaram', 4), ('ahmetcetin', 4), ('Akshay2996', 4), ('AlexP11223', 4), ('ammendonca', 4), ('AlexKMDev', 4), ('alexey-anufriev', 4), ('Ambyad', 4), ('amirmojiry', 4), ('ajtruex', 4), ('ShkiperMe', 4), ('Aniketkhalate', 4), ('AnkitaSikdar005', 4), ('ihertanto', 4), ('lachja', 4), ('jay754', 4), ('Joe2244', 4), ('Targgus', 4), ('Joseph Plant', 4), ('joaopedronardari', 4), ('JaoVSP', 4), ('KaivalyaVanguri', 4), ('karankulshrestha', 4), ('mindaslab', 4), ('Kashinggo', 4), ('keerthana054', 4), ('kevinlwebb', 4), ('ThaiHoangDang', 4), ('KHemanthRaju', 4), ('kraticodes', 4), ('kj84park', 4), ('nanto88', 4), ('ifdiego', 4), ('dlogvinenko', 4), ('drewsmith', 4), ('DrishtiJ', 4), ('Dupz', 4), ('durgesh1506', 4), ('EdocXcodE', 4), ('Feofiloff', 4), (""Finn 'Gallefray' O'leary"", 4), ('G-Square', 4), ('Gabriel Almir', 4), ('gildo', 4), ('gabraganca', 4), ('gfvcastro', 4), ('hakiKhuva', 4), ('Saviour1001', 4), ('Harshit-lab', 4), ('HarshRanaOC', 4), ('IanFPFerreira', 4), ('SentinelWarren', 3), ('Saroj Wasti', 3), ('Samuel de Oliveira', 3), ('Samet Aydemir', 3), ('Sakshi Thakare', 3), ('Roberto Bianchi', 3), ('Ritobrata Ghosh', 3), ('Rishi', 3), ('Rishabh Singh', 3), ('Ricardo Hideki Hangai Kojo', 3), ('Rhitam Chaudhury', 3), ('Ramses Garate', 3), ('Sergey M.', 3), ('Sergio Baldo Junior', 3), ('Seth Falco', 3), ('Shahadat Hossain Hridoy Al', 3), ('Shubham Rao', 3), ('Smriti Vipin Madangarli', 3), ('SondreWang', 3), ('Spencer Davies', 3), ('Sudarshan P', 3), ('SuperStas', 3), ('Suraj Patil', 3), ('B. Estrade', 3), ('Miguel Araújo', 3), ('Mike Jewett', 3), ('Muhammad Anas', 3), ('Nandan Ramesh', 3), ('Nelson Morales', 3), ('Nihar Vira', 3), ('Nikalus@dnhsoft', 3), ('OffWorldApps', 3), ('Oresztesz Margaritisz', 3), ('Patryk Krawaczyński', 3), ('Paul Titto', 3), ('Pavel Timofeev', 3), ('Pedro Henrique Prado Oliveira', 3), ('Peter Kokot', 3), ('Phuong-Cat Ngo', 3), ('Piotr Ekert', 3), ('Prajwal Patil', 3), ('Pranjal Borkar', 3), ('Prasenjit Das', 3), ('Pratik Todi', 3), ('Quenrelia', 3), ('Rafael Silva', 3), ('ashlaya', 3), ('basitS14', 3), ('bharath-123', 3), ('buo', 3), ('chai2010', 3), ('cwfoo', 3), ('iKenshu', 3), ('itsmeaadi1', 3), ('kingdido999', 3), ('kiriakosv', 3), ('kompowiec2', 3), ('manges06', 3), ('mzc-hedykim', 3), ('pac37', 3), ('pond-e', 3), ('rhysd', 3), ('sugarjig', 3), ('switchhax', 3), ('taiyoslime', 3), ('tiaan', 3), ('trungqudinh', 3), ('卢小友', 3), ('이희범', 3), ('Swarnendu Bhandari', 3), ('Ted M. Young', 3), ('TheOne04', 3), ('Tina Barfield', 3), ('Titus Tzeng', 3), ('Tomer Cohen', 3), ('Trọng Hiếu', 3), ('Vaibhav Raheja', 3), ('Vichea', 3), ('Victor Gabriel', 3), ('Vinod Patil', 3), ('Vipul Kumar', 3), ('Wanderson Trindade Vitorino', 3), ('Wilhelm Babernits', 3), ('William Becher', 3), ('William Oliveira', 3), ('Xuankang Lin', 3), ('Yash Chaudhari', 3), ('Yuvi Malhotra', 3), ('Zach Whitten', 3), ('andikscript', 3), ('anio', 3), ('anjones1000', 3), ('Bjorn Ordoubadian', 3), ('bobbyiliev', 3), ('bkosun', 3), ('brunogirin', 3), ('Bruno-366', 3), ('MoiRouhs', 3), ('chanchal1987', 3), ('charviupreti', 3), ('Courage', 3), ('alrra', 3), ('DaDiRa', 3), ('studioego', 3), ('daniellycosta', 3), ('DarlanCaruso', 3), ('kant', 3), ('Deepshikhayadav', 3), ('Devansh-Maurya', 3), ('Dhirajjk416', 3), ('drgarcia1986', 3), ('dimonalek', 3), ('EugeneGohh', 3), ('ezeamaka2', 3), ('0xCD', 3), ('ladiff777', 3), ('its-me-mahmud', 3), ('AbhayD11', 3), ('ajdecon', 3), ('kiriappeee', 3), ('AdrianSkar', 3), ('git-user-9', 3), ('akhilajohnsonc', 3), ('Akshay', 3), ('amritanshu19', 3), ('Anant-mishra1729', 3), ('quanta003', 3), ('AnkitSharma-007', 3), ('Antonio Silveira', 3), ('anujsngh', 3), ('Anuthra1997', 3), ('engineeringwitharavind', 3), ('arturhvcpn', 3), ('ataliba', 3), ('Athi223', 3), ('augustoaccorsi', 3), ('azizramdan', 3), ('fawazsiddiqi', 3), ('joncojonathan', 3), ('jdavis', 3), ('julian-st', 3), ('KawsarAlamEven', 3), ('kenmazaika', 3), ('Khushi-Shukla', 3), ('Kikobeats', 3), ('Lakshita2002', 3), ('laluardian', 3), ('Larissa Moura', 3), ('Leithen', 3), ('Lincoln Brito', 3), ('Magnus Sundström', 3), ('Manvi Goel', 3), ('Marco Lau', 3), ('Mary Paul', 3), ('Mat Hopwood', 3), ('Matt Sephton', 3), ('Matteo Taroli', 3), ('Md Kawsar Islam Yeasin', 3), ('Md. Pial Ahamed', 3), ('Merjem Bajramovic', 3), ('Michael Ho Chum', 3), ('fcpimenta', 3), ('gep13', 3), ('Grigoriy Dzhanelidze', 3), ('gutierri', 3), ('harrykar', 3), ('H3li0', 3), ('Henning Kopp', 3), ('hpbonfim', 3), ('himi98', 3), ('honey-speaks-tech', 3), ('jonatanrdsantos', 3), ('joelhandwell', 3), ('jeanmatheussouto', 3), ('codejayant', 3), ('JasonMa170699', 3), ('jwworth', 3), ('bobeff', 3), ('R0adRunn3r', 3), ('howiezhao', 3), ('badrnezhad', 3), ('MRGRAVITY817', 3), ('hongchangwu', 3), ('Shruti Gupta', 2), ('Shruti Sen', 2), ('Sidhaant Thakker', 2), ('SimonLariz', 2), ('Soniya Prasad', 2), ('Srayuws', 2), ('Sridhar Easwaran', 2), ('Stanislav', 2), ('Steven Johnson', 2), ('Sukuna', 2), ('Suman Mondal', 2), ('Sumonta Saha Mridul', 2), ('SungRim Huh', 2), ('Surav Shrestha', 2), ('Sushant Agawane', 2), ('Shane Wright', 2), ('Seth', 2), ('Sergiy', 2), ('Serge Stinckwich', 2), ('Semih', 2), ('Scott Lin', 2), ('SarthakAgarwal81', 2), ('Saritha', 2), ('Sanpi', 2), ('Sangyong Gwak', 2), ('Saeid Darvishi', 2), ('Sadeed pv', 2), ('Sabyasachi Seal', 2), ('SEIKH NABAB UDDIN', 2), ('Vasyl Nahuliak', 2), ('Vaibhav', 2), ('Uzay-G', 2), ('Utkarsh kumar jaiswal', 2), ('UnseenElf', 2), ('UnderTheCraft', 2), ('Umut Işık', 2), ('Umer Mansoor', 2), ('Ujwal Kandi', 2), ('Ujjawal Kumar', 2), ('Tosan Krisna', 2), ('Tomáš Bezouška', 2), ('Toms Grants', 2), ('Tomas Listiak', 2), ('Tom Biju', 2), ('Tiago Machado', 2), ('Tiago Athayde', 2), ('Tiaan', 2), ('Thomas Cort', 2), ('Thiago Monteles', 2), ('Tharshan', 2), ('Tharaka96', 2), ('Thanakit J', 2), ('Teba Rojo', 2), ('Tatsuro Yasukawa', 2), ('Tania Shatilova', 2), ('Sıtkı Bağdat', 2), ('Swarnava Gayen', 2), ('Suzanne Hamilton', 2), ('Phil Nguyen', 2), ('Phil Freeman', 2), ('Pavlo Rudyi', 2), ('Paulo Fernando Lara Pereira de Araujo', 2), ('Paula Isabel', 2), ('PatrickG', 2), ('Pablo Grisafi', 2), ('Pablo Fraile Alonso', 2), ('Pablo Duboue', 2), ('Oscar Skille', 2), ('Oscar Martin Cortez Martinez', 2), ('Omicron', 2), ('Nikhil Shanbhag', 2), ('Nick Heymans', 2), ('Nick Donohue', 2), ('Nicholas Johnson', 2), ('Nguyen Long Nhat', 2), ('MuhamadAzizi', 2), ('Mubeen Khan', 2), ('Morteza Bashsiz', 2), ('Mohsen Khodabakhshi', 2), ('Mohammed Wazir Adain', 2), ('Mohammad Rabi Ul Hadi', 2), ('Moh. Firdaus', 2), ('Mochamad Sofyan', 2), ('MixeroTN', 2), ('MisterMatze', 2), ('Milad Khajavi', 2), ('Miguel Palazzo', 2), ('Ryan D Holm', 2), ('Ruman Kim', 2), ('Rukshan Uddin', 2), ('Ruchee', 2), ('Roman Marusyk', 2), ('Robin Wieruch', 2), ('Rituraj Dey', 2), ('Ribhav Bansal', 2), ('Repala Sudhamsh', 2), ('Renol N', 2), ('Ravi Kant Pujari', 2), ('Ravi', 2), ('Ratheshan Sathiyamoorthy', 2), ('Rasyid Arazak', 2), ('Ramiro Gómez', 2), ('Rafael Sakurai', 2), ('Rafael Nunes', 2), ('Rafael B. Pires', 2), ('Rafael Andrade de Oliveira', 2), ('RadadiyaMohit', 2), ('RAJ RAUT', 2), ('R3hankhan', 2), ('Preston Parry', 2), ('Prashant Bhapkar', 2), ('Pranav Krishnan', 2), ('Pranav', 2), ('Prabhjot Singh', 2), ('PlatinumThinker', 2), ('Piotr Lewandowski', 2), ('prabakaranr', 2), ('pedchenkoroman', 2), ('patrick-steve', 2), ('nihar2907', 2), ('nextzhou', 2), ('neOnSHiFT', 2), ('n19270', 2), ('myudak', 2), ('mrts', 2), ('mousebaiker', 2), ('mosampaio', 2), ('mjn', 2), ('melascuco', 2), ('mehmetdik', 2), ('martinvd', 2), ('mankal111', 2), ('maddin', 2), ('loudercake', 2), ('lilsweetcaligula', 2), ('jvgbughao', 2), ('jiho lee', 2), ('jessealtman', 2), ('jboverfelt', 2), ('jaytenenbaum', 2), ('jacob-on-github', 2), ('imlastrebor', 2), ('hsicilia', 2), ('hongcheng.xu', 2), ('hateonion', 2), ('Муравьёв Семён', 2), ('Özkan Öztürk', 2), ('zawieja', 2), ('yutaono', 2), ('yssmcl', 2), ('yazd', 2), ('wchiquito', 2), ('wanglichao', 2), ('vijayananth.s', 2), ('vasuwrath', 2), ('tusharsappal', 2), ('tomriddle7', 2), ('tatarhy', 2), ('swchoi727', 2), ('sujal0320', 2), ('siriwatw', 2), ('simongarisch', 2), ('sigsevneo', 2), ('siddharth khuntwal', 2), ('sheeit', 2), ('saxc', 2), ('sancao2', 2), ('s-yena', 2), ('rtang09', 2), ('rozie', 2), ('rndd-AK', 2), ('repsick3r', 2), ('purna2', 2), ('psyomn', 2), ('alvux', 2), ('alok-cmd', 2), ('alif2906', 2), ('ak191201', 2), ('ajs1220', 2), ('adityarjadhav', 2), ('acusp', 2), ('achavez8', 2), ('aayushi-kunwar13', 2), ('Ziyaddin Sadigov', 2), ('Zach Day', 2), ('Yuu David Jinnai', 2), ('Yukiiilove123', 2), ('Yohanna Gadelrab', 2), ('Ye Lin Aung', 2), ('Yasar Labib', 2), ('Yaroslav', 2), ('Wojciech Kasperski', 2), ('Will', 2), ('Weerayut Teja', 2), ('WISNU GINANJAR SAPUTRA', 2), ('Vishal Sodani', 2), ('Viktor Serhieiev', 2), ('Vikas Parashar', 2), ('Victor Williams', 2), ('Victor Sergeyev', 2), ('Victor Rafael Sega', 2), ('Vico Silalahi', 2), ('Veer Bhadra Singh Solanki', 2), ('hangaebal', 2), ('fernando-barajas', 2), ('faraco', 2), ('evbarnett', 2), ('esmaeelE', 2), ('eshan98', 2), ('erdemoncel', 2), ('elrrrrrrr', 2), ('egamasa', 2), ('diekmann', 2), ('devhindo', 2), ('dannguyen', 2), ('dan', 2), ('cyril', 2), ('cxumol', 2), ('chuanjin', 2), ('chris', 2), ('chastai', 2), ('chan18', 2), ('bryonye', 2), ('bluemandora', 2), ('bharadwaj6', 2), ('bbuyukguzel', 2), ('ayushhkkkk3585', 2), ('ankita1964', 2), ('anishhh238', 2), ('aneasystone', 2), ('andrepolischuk', 2), ('amishpatel1994', 2), ('David Ordás', 2), ('Dave C', 2), ('Danuta Cybulska', 2), ('Dami', 2), ('CucumisSativus', 2), ('Crisman Noble', 2), ('Christopher E. Stith', 2), ('Christian Delahousse', 2), ('Chris S', 2), ('Chris Massey', 2), ('Chinthaka Dinadasa', 2), ('CheemsAndCheems', 2), ('Chakaitos', 2), ('Celso Endo', 2), ('Casual Passer', 2), ('Bryan Braun', 2), ('Bruno Silva', 2), ('Bruno Casali', 2), ('BroaderImpact', 2), ('Brian H. Hough', 2), ('Brennan Payne', 2), ('Bogdan Cerovac', 2), ('Blake Bourque', 2), ('BitH0xer', 2), ('Bilal Çorbacıoğlu', 2), ('Bhuvan Rangoju', 2), ('Basil Victor', 2), ('Bartuz', 2), ('BSi', 2), ('Ludovic Taffin', 2), ('Filisko', 2), ('Ferhat Aydin', 2), ('Fengda Huang', 2), ('Felipe Garay', 2), ('Federico Ponzi', 2), ('Fawaz AR', 2), ('Faustino Loeza', 2), ('Evan Misshula', 2), ('Etienne Savard', 2), ('Erno Salo', 2), ('Erendis', 2), ('Enguerran', 2), ('Endrose', 2), ('Emre YILMAZ', 2), ('Emrah Er', 2), ('Emil Shakirov', 2), ('Ejidike Esther', 2), ('Eduard Lemmer', 2), ('Eda', 2), ('Drishti Jain', 2), ('Donghyun Seo', 2), ('Dimitar Manovski', 2), ('Diksha', 2), ('Diki Andriansyah A P', 2), ('Diego Mateos', 2), ('Desmond', 2), ('Dejon Gill', 2), ('Deepak Suthar', 2), ('Allen Guan', 2), ('Ali Özgür', 2), ('Alexey Gorelov', 2), ('Alex Hall', 2), ('Alejandro Seguí', 2), ('Alejandro Mayol', 2), ('Alejandro Bahena', 2), ('Alejandro Armenta', 2), ('Alan Syue', 2), ('Akshay', 2), ('Akira Taguchi', 2), ('Akash Kundu', 2), ('Ahmed Osama', 2), ('Ahmad Zaky', 2), ('Ahmad Alhour', 2), ('Aditya Narayan Tiwari', 2), ('Adit Cahya Ramadhan', 2), ('Adil Ilhan', 2), ('Adebisi Ahmed', 2), ('Abishek Sriram G', 2), ('Abinash Satapathy', 2), ('Abhishek Kashyap', 2), ('Abhijit Kailash Gawai', 2), ('Abdoul Malik', 2), ('Abd El-Twab M. Fakhry', 2), ('Aayush Bisen', 2), ('Aarya Balwadkar', 2), ('Aaron Raimist', 2), ('3R1Dev', 2), ('Ayush Tiwari', 2), ('Atharva Joshi', 2), ('Ashish Dangi', 2), ('Arvind Iyer', 2), ('Arunava Debnath', 2), ('Aroyan', 2), ('Arjunkumar', 2), ('Ariel Roque', 2), ('Ariel', 2), ('Arialdo Martini', 2), ('Apruzzese Francesco', 2), ('Anyasha Das', 2), ('Antônio Milesi Bastos', 2), ('Antonio José Sánchez', 2), ('Anton Emelyanov', 2), ('Anthony Scemama', 2), ('Anirudh Mishra', 2), ('Andros Fenollosa', 2), ('Andrey', 2), ('Andrew McDonnell', 2), ('Andrew Asche', 2), ('Andrew', 2), ('Andrei Curelaru', 2), ('Andika Tulus Pangestu', 2), ('Amir Zarchini', 2), ('Amin', 2), ('AlvinIndrawan', 2), ('Alvin Triseptia', 2), ('Alok Mistry', 2), ('Loic Beylot', 2), ('Loic Beylot', 2), ('Larissa Moura', 2), ('Kyoz', 2), ('Kyle Hall', 2), ('Kushantha Charuka', 2), ('Kunwadee Limsawat', 2), ('Krzysztof Rakowski', 2), ('Kondor', 2), ('Klaudia2432', 2), ('Kim', 2), ('Khalid Abdullah', 2), ('Kevin Cao', 2), ('Kevin Alfito', 2), ('Keith Abdulla', 2), ('Kavian AmirMozafari', 2), ('Kartikey Tripathi', 2), ('Kartikay Kapil', 2), ('Karoline Farias', 2), ('Karlkim Suwamongkol', 2), ('Kamil Warguła', 2), ('Judas.n', 2), ('João G. Packer', 2), ('Jovany Leandro G.C', 2), ('Jorge Najera', 2), ('Jongmin Kim', 2), ('Jon H.M. Chan', 2), ('John Oss', 2), ('Michal Fusatý', 2), ('Michael Bradley, Jr', 2), ('Michael Arnold', 2), ('Md. Fahim Bin Amin', 2), ('Mayank Parkar', 2), ('Maxim Fedarau', 2), ('Max Edmands', 2), ('Max Attila Ruf', 2), ('Matthieu Baerts', 2), ('Matthew Utin', 2), ('Mateusz Grużewski', 2), ('Masudul Haque Shihab', 2), ('Massimo Maria Ghisalberti', 2), ('Martin Czygan', 2), ('Mark Liffiton', 2), ('Mark Knol', 2), ('Mark IJbema', 2), ('Marijan Smetko', 2), ('Marat Nagayev', 2), ('Manvitha', 2), ('Mansour Kalagar', 2), ('Manigandan', 2), ('Manas Karekar', 2), ('Manan Sharma', 2), ('Manan Makwana', 2), ('Maik Ellerbrock', 2), ('Mahesh Abeykoon', 2), ('M i c a e l a   R a v a', 2), ('Lutz Lesener', 2), ('Igor Martayan', 2), ('Ian Fleon', 2), ('HungMingWu', 2), ('Hofer-Julian', 2), ('Hm Elius Hossain Himel', 2), ('Himanshu', 2), ('Het Patel', 2), ('Henrique Alho', 2), ('Harish', 2), ('Hamdi Akoğuz', 2), ('Halit Alptekin', 2), ('Gustavo Silva', 2), ('Gustavo Sillero', 2), ('Guillaume Saby', 2), ('Grzegorz Adam Kowalski', 2), ('Grom', 2), ('Gernot Pointner', 2), ('George Rodrigues', 2), ('George Gognadze', 2), ('Geonu Lim', 2), (""Gaetano D'Orsi"", 2), ('Gabriel Oliveira', 2), ('Gabriel Machado', 2), ('Fábio Jânio', 2), ('Frank Agerholm', 2), ('Francisco Llanquipichun', 2), ('Francis Bergin', 2), ('Francesco', 2), ('Finlay', 2), ('John Berry', 2), ('John', 2), ('Jihong Kim', 2), ('Jhonatan Andrés Beltrán', 2), ('Jeremy Aza', 2), ('Jeongmyeong Lee', 2), ('Jeff Turner', 2), ('Jeff Madsen', 2), ('Javed Shaikh', 2), ('Javed Mohamed', 2), ('Jatniel Guzmán', 2), ('Jason Yeo', 2), ('Jarek Pacocha', 2), ('Janghyeon', 2), ('Igor Rozani', 2), ('Ilya', 2), ('Ingrid G', 2), ('Irham Muhammad Shidiq', 2), ('Isaac Goss', 2), ('Isha Dhek', 2), ('Istratov D. S', 2), ('Istvan Viczian', 2), ('Ito Mikael Alcuaz', 2), ('Ivaylo Arnaudov', 2), ('JLobos', 2), ('Jack Dolgin', 2), ('Jake Worth', 2), ('Jakob Sagatowski', 2), ('James Addison', 2), ('Sandra Laguna', 1), ('Sandeep Mishra', 1), ('SamuraiT', 1), ('Sampurna Sen', 1), ('Samith Karunathilake', 1), ('Sameh Tharwat', 1), ('Sam Sky', 1), ('Sam Hsiao', 1), ('Saloni Malhotra', 1), ('Sangyong Gwak', 1), ('Sanhati Kundu', 1), ('Sanjeev Gupta', 1), ('Sanjib Kumar Sen', 1), ('Sanket Nikam', 1), ('Santhoshkumar. P', 1), ('Santiago Benito', 1), ('Seenox', 1), ('RishiASheth', 1), ('Sab!ne', 1), ('Sadaf Saleem', 1), ('Sadman Sobhan', 1), ('Saeid Darvish', 1), ('Sagar Bhat', 1), ('Saheed', 1), ('Sahidul Islam', 1), ('Sahin', 1), ('Sai Khay Khun Mong', 1), ('Sai Phaninder Reddy Jonnala', 1), ('Sai Teja Krithik Putcha', 1), ('Saksham Bajaj', 1), ('Saksham Misra', 1), ('Sakti Dwi Cahyono', 1), ('Saleem Ansari', 1), ('Salih ERİKCİ', 1), ('SeenuNahak', 1), ('Sensational Code', 1), ('Senthilkumar Gopal', 1), ('Senuk Dias', 1), ('Seongmin Kim', 1), ('Sergei Tomin', 1), ('SergeiOFF', 1), ('Sergey Matyukevich', 1), ('Sergey Razdolyanskiy', 1), ('Sergio', 1), ('Sergio C', 1), ('Sergio Garcia', 1), ('Serhi Zarva', 1), ('Serhii Pirohov', 1), ('Shafiul hasan', 1), ('Supriyo Mahanta', 1), ('Santigie Sankoh', 1), ('Saptak Bhoumik', 1), ('Saqib Ameen', 1), ('Sarah Brown', 1), ('Sarah Kraßnigg', 1), ('Saranjeet Kaur', 1), ('Sarper Yasin MUTLUBAY', 1), ('Sarthak Rawat', 1), ('Satyaki Mandal', 1), ('Saugat Dhimal', 1), ('Saurabh Batra', 1), ('Saurabh Pandey', 1), ('Saurav Jha', 1), ('Sayan Chowdhury', 1), ('Scony', 1), ('Seb', 1), ('Sebastien Castiel', 1), ('Ritik Rathor', 1), ('Riya Bhaskar', 1), ('Riza Radia Rivaldo', 1), ('Rizal Fathur Rahman', 1), ('Rizky ian indiarto', 1), ('Rizwan Idrees', 1), ('Roanna Victorio', 1), ('Robby Cahyadi Hendro Saputro', 1), ('Robert Schmidt', 1), ('Roberto Miranda', 1), ('Roberto Ruccia', 1), ('Robin King', 1), ('Robin Schulte', 1), ('Roboam Casanova', 1), ('Rod Elias', 1), ('Rui Silva', 1), ('Ngô Dương', 1), ('Ricardo Lovelace', 1), ('Richard Green', 1), ('Richard Liang', 1), ('Richard Rodrigues', 1), ('Richel Bilderbeek', 1), ('Ricky Alturino', 1), ('Ricky Benkovich', 1), ('Riei-Joaquim', 1), ('Rihan Akhtar', 1), ('Rijo Sebastian', 1), ('Rik Huijzer', 1), ('Rimenes Ribeiro', 1), ('Rinat Kamalitdinov', 1), ('Rishabh Bharatbhai Parmar', 1), ('Rishabh Varshney', 1), ('Rishi Vishwakarma', 1), ('Ruja Awal', 1), ('Runyasak Chaengnaimuang', 1), ('Ruslan', 1), ('Ruslan Brest', 1), ('RuthlessRuler', 1), ('Ruwanthi Thamali Perera', 1), ('Ryan', 1), ('Ryan Bigg', 1), ('Ryan D Holm', 1), ('Ryan Daniels', 1), ('Ryhen Holm', 1), ('Rytis Bieliunas', 1), ('Ryu Parinphat W', 1), ('SAITOU Keita', 1), ('SHIBATA Hiroshi', 1), ('SUSHANT PRABHU', 1), ('Rodolfo Dantas de Oliveira Bezerra', 1), ('Roger', 1), ('Rohan Gope', 1), ('Rohan Prabhu', 1), ('Rohit Kavitake', 1), ('Rohmad Arifin', 1), ('Roland Ewald', 1), ('Ronaldo Aquino', 1), ('Ronan Rodrigo Nunes', 1), ('Ronen Hammond', 1), ('Roppon Picha', 1), ('Rose Cass', 1), ('Ross Olson', 1), ('Ruan Aragão', 1), ('Ruben Marcus', 1), ('Rubén Darío Guarnizo Martínez', 1), ('Rudy', 1), ('Surabhi S', 1), ('Suraj Ghimire', 1), ('Suraj J Pai', 1), ('Surya', 1), ('Suryakant', 1), ('Suryash Kumar Jha', 1), ('Suthira', 1), ('Swaroop Deshpande', 1), ('Swarup Tripathy', 1), ('Syed Azeem Javed', 1), ('Syed Mashood', 1), ('SyedAahana', 1), ('T. E. Kalaycı', 1), ('Taeyang Jin', 1), ('Tahanima Chowdhury', 1), ('Thaddeus  Thomas', 1), ('Shirish Padalkar', 1), ('Stjepan Jureković', 1), ('Streppel', 1), ('Stuart Mccord', 1), ('Stuart P. Bentley', 1), ('Su Tran', 1), ('Subair Temilayo', 1), ('Subin Kim', 1), ('Sudarshan P', 1), ('SudhanshuSuman', 1), ('Sugan Krishnan', 1), ('Sumaiya Fatma', 1), ('Suman Roy', 1), ('Sumo99', 1), ('Sundararajan', 1), ('Sunil', 1), ('Sunil Shah', 1), ('Thales', 1), ('ThalesVItal', 1), ('Theodore Fabian Rudy', 1), ('Thiago', 1), ('Thiago Dantas Soares', 1), ('Thiago Paes', 1), ('Thomas', 1), ('Thomas Cort', 1), ('Thomas Ferney', 1), ('Thorsten Ball', 1), ('Thyago Luciano', 1), ('Tiaan du Plessis', 1), ('Tim Krueger', 1), ('Tim St. Clair', 1), ('Tim van Deurzen', 1), ('TimTeitelbaum', 1), ('Tanjiro', 1), ('Tanmay Jadhav', 1), ('Tanmay Khandelwal', 1), ('Tanvi Moharir', 1), ('Taras Gordiienko', 1), ('Tarcisio Junior', 1), ('Tarun Mankar', 1), ('Tarun Nagpal', 1), ('Taufik Amaryansyah', 1), ('Tauren Chieftain', 1), ('Tauseef Hilal Tantary', 1), ('Tavistock', 1), ('Tedo Haris Chandra', 1), ('Teerapat Prommarak', 1), ('Tejas Singh', 1), ('TenTraicion', 1), ('Terence Eden', 1), ('Shivam Kotak', 1), ('Shivam Rana', 1), ('ShivamPathak99', 1), ('Shivani Yadav', 1), ('Shivay Sabharwal', 1), ('Shreyas Minocha', 1), ('Shubham Gupta', 1), ('Shubham Joshi', 1), ('Shubham Thakur', 1), ('Shubham kashyap', 1), ('Shuvadipta Das', 1), ('Shyam Sundhar', 1), ('Si Lam', 1), ('Sibi', 1), ('Siddhant Deepak Pradhan', 1), ('Sonkeng Maldini', 1), ('Shafkathullah Ihsan', 1), ('Shahadat Hossain', 1), ('Shahriar Ahmmed', 1), ('Shail Patel', 1), ('Shankar Rao Mata', 1), ('Shanna', 1), ('Shantanu Nighot', 1), ('Sharon Shabtai', 1), ('Shashank Kashyap', 1), ('Shashwat Gupta', 1), ('Shawn Wei', 1), ('Sheila Gomes', 1), ('Shelley V. Adams', 1), ('Shihab', 1), ('Shinji Kaneko', 1), ('Shinya Uryu', 1), ('Shirish', 1), ('Sooriyakumar Loganathan', 1), ('Soumik Halder', 1), ('Space9999', 1), ('Squirkyy', 1), ('Sri Teja Aluri', 1), ('Ssuching Yu', 1), ('Stanly Johnson', 1), ('Stefan Eng', 1), ('Steffen Bilde', 1), ('Stephen Fox', 1), ('Stephen Smith', 1), ('Stephon', 1), ('Sterling Whitley', 1), ('Steve McAllister', 1), ('Steven Tang', 1), ('Stevo-S', 1), ('Siddharth Chauhan', 1), ('Siddharth Johri', 1), ('Silviu Tantos', 1), ('Simeon Nikolov', 1), ('Simo Råman', 1), ('Simon Eddeland', 1), ('Simon Juba', 1), ('Simon Sickle', 1), ('Simone Guardati', 1), ('Simran Kohli', 1), ('Sinno', 1), ('Sirio Negri', 1), ('Smith', 1), ('Soham Dey Sarkar', 1), ('Soham Gupta', 1), ('Som Vishwas Tambe', 1), ('Sonia M', 1), ('Nicholas Woodward', 1), ('Nick', 1), ('Nick Borromeo', 1), ('Nick Rucci', 1), ('Nick Spaargaren', 1), ('NicknamedCoco', 1), ('Nicola Corti', 1), (""Nicola Dall'Asen"", 1), ('Nicola Iarocci', 1), ('Nicolai Willems', 1), ('Nicolas Borboën', 1), ('Nicole Foster', 1), ('NicoleSingular', 1), ('Nicolò Santilio', 1), ('Nigar6001', 1), ('Ofek Shaked', 1), ('Miroslav Petrik', 1), ('Naveen', 1), ('Naveen Yadav', 1), ('Navid Zare', 1), ('Navin Kumar', 1), ('Nay Lin Tun', 1), ('Nay Zaw Oo', 1), ('Nayan Gupta', 1), ('Nayeem Islam', 1), ('Neil Martin', 1), ('Neill Robson', 1), ('Neils Christoffersen', 1), ('Nemanja', 1), ('Nemanja Mijailovic', 1), ('Nemo', 1), ('NgaNguyenDuy', 1), ('Nguyen Minh Quan', 1), ('Okorie Daberechi', 1), ('Okza Pradhana', 1), ('Oleg Krivtsov', 1), ('Oleg Mifle', 1), ('Oleg Moskalev', 1), ('Oliver Matla', 1), ('Olivier Truong', 1), ('Om Alve', 1), ('Omega-Centauri-21', 1), ('Omri Attiya', 1), ('Onkar Mudegol', 1), ('OpossumPetya', 1), ('Orlando Iovino', 1), ('Osanda Deshan Nimalarathna', 1), ('Oscar Giraldo Castillo', 1), ('Pritam Sarkar', 1), ('Nightmare', 1), ('Nik', 1), ('Nikhar Behera', 1), ('Nikola Yanakiev', 1), ('Nikolas Silva', 1), ('Nilay Ghosh', 1), ('Nimesh Ghelani', 1), ('Nina Kin', 1), ('Ninnart Fuengfusin', 1), ('Nipe Setiawan', 1), ('Nishant Singh', 1), ('Nithur-M', 1), ('Nomit Rawat', 1), ('Noval Agung Prayogo', 1), ('Nuhman Pk', 1), ('Nurmukhamet Abdullin', 1), ('Nurul Ramadhona', 1), ('Mirza M. Jaun', 1), ('Mixolydia97', 1), ('Moaaz Hamdy', 1), ('Mochammad Faisal', 1), ('Mohamed Bilal', 1), ('Mohamed E. BRIKI', 1), ('Mohd Maqbool Alam', 1), ('Mohit Kumar', 1), ('MrJim', 1), ('Mridul Mohta', 1), ('Mugdha Behere', 1), ('Muhamad Azizi', 1), (""Muhammad Akhdan Mu'afa"", 1), ('Muhammad Alif Nurfauzi', 1), ('Muhammad Andika', 1), ('Mylena Angélica', 1), ('Christoph', 1), ('Miftahul Islam', 1), ('Miguel Salvá', 1), ('Miik4chu', 1), ('Mike Ball', 1), ('Mike Graf', 1), ('Mike Hingley', 1), ('Mike Kim', 1), ('Mikhail Merzlyutin', 1), ('Mikhail Vasilyev', 1), ('Mila Grigoryeva', 1), ('Milad Khajvi', 1), ('Milica', 1), ('Min', 1), ('MinGyum Kim', 1), ('Mina', 1), ('Minboy', 1), ('NAMAN JAIN', 1), ('Nacho Caiafa', 1), ('Nadyamilona', 1), ('Naik Mubashir', 1), ('Najeong-Kim', 1), ('Naman Kansal', 1), ('Namra Ishrat', 1), ('Nandan Ramesh', 1), ('Naren Bakshi', 1), ('Nat Kuhn', 1), ('Nataly Martins', 1), ('Nathan Bashaw', 1), ('Nathan Esquenazi', 1), ('Nathan Jones', 1), ('Nathan Pickard', 1), ('Nathan-Abegaz', 1), ('Muhammad Ariananda Kusuma Dewa', 1), ('Muhammad Bagus Adi Prayoga', 1), ('Muhammad Bella BN', 1), ('Muhammad Khuzaima Umair', 1), ('Muhammad Noman', 1), ('Muhammad Rezaul Karim', 1), ('Muhammad Rizaldi', 1), ('Muhammad Sidiq Hardiansyah', 1), ('Muhammad Talha Khan', 1), ('Muhammed DOĞAN', 1), ('Muradha', 1), ('Murali I', 1), ('Murphy Randle', 1), ('Mustafa Kaan Demir', 1), ('Mustafa Polat', 1), ('Mustafa Serhat Dündar', 1), ('Mykhailo', 1), ('Priyansh Bimbisariye', 1), ('Priyansh Khare', 1), ('Priyanshu282002', 1), ('ProDmic', 1), ('Pronay Debnath', 1), ('Purusothaman Ramanujam', 1), ('Qasim Khan', 1), ('Quang Tran', 1), ('Quy Le Ngoc', 1), ('R. Adarsh', 1), ('RDxR10', 1), ('RITIK KAPOOR', 1), ('RITIK KUMAR', 1), ('RNDr. Simon Toth', 1), ('RNDr. Simon Toth', 1), ('Ramona Saintandre', 1), ('Patrick Prémartin', 1), ('Prasad khatake', 1), ('Prasansha Satpathy', 1), ('Prasanthpadp', 1), ('Prasun Bannerjee', 1), ('Pratap Parui', 1), ('Prateek Kalra', 1), ('Pratham Goenka', 1), ('Prathamesh Jayale', 1), ('Pratik Rai', 1), ('Pratyush Patwa', 1), ('Praveen Pal', 1), ('Pravin', 1), ('Preston Parry', 1), ('Pride Musvaire', 1), ('Prince Gupta', 1), ('Pritam Patil', 1), ('Raphael P.F', 1), ('Ravi Kishan', 1), ('Ravi Prakash', 1), ('Ravindu Senal Fernando', 1), ('Ravishankar P. Joshi', 1), ('Raymond Brigleb', 1), ('Razor', 1), ('Rebecca Mathews', 1), ('Reese Richardson', 1), ('Reg Braithwaite', 1), ('Reinaldo Deprera', 1), ('Reo Uehara', 1), ('Reza Yazdani', 1), ('RiDeLub', 1), ('Rian', 1), ('Rian Adam', 1), ('Raagul N', 1), ('Rabindra Dhakal', 1), ('Radha Krishna', 1), ('Rafaela Queiroz', 1), ('Raffael Morais', 1), ('RaghuLHAHAHA', 1), ('Rahul Roy', 1), ('Raj Kiran Gade', 1), ('Raja Azian', 1), ('Rajan Khade', 1), ('Rajaram M Joshi', 1), ('Rajdeep Biswas', 1), ('Rajender Katkuri', 1), ('Rakhi Bhagwat', 1), ('Rakshith', 1), ('Ramdas M', 1), ('Ramon', 1), ('Patrick Smyth', 1), ('Patrik Brighenti', 1), ('Paul Paczuski', 1), ('Paul Rehkugler', 1), ('Paulina Ramos', 1), ('Paulina Szwed', 1), ('Paulo Eduardo Fagundes dos Santos', 1), ('Paulo Ricardo Siqueira', 1), ('Paweł Szopiński', 1), ('PePatcha', 1), ('Pedro Barbosa', 1), ('Pedro Faria', 1), ('Pedro Gabriel', 1), ('Pedro Lopes', 1), ('Pedro Souza', 1), ('Pierre Irrmann', 1), ('Oskar F', 1), ('Oswaldo Ortiz', 1), ('Oswaldo Ortiz', 1), ('Oussamaosman02', 1), ('Oğuzhan Taşcı', 1), ('PRIYANSHU VARSHNEY', 1), ('Pablo Díaz Márquez', 1), ('Pablo Reyes', 1), ('Palash Mondal', 1), ('Panicz', 1), ('Panicz Maciej Godek', 1), ('Paramesh Chandra', 1), ('Paramhans Singh', 1), ('Paridhi Jain', 1), ('Parik",2115,0,
kwi/BrB,"Event machine based distributed ruby, simple and transparent but extremely fast and reliable","= BrB - Easy and Fast distributed ruby

BrB is a simple, fully transparent and extremely fast interface for doing simple distributed Ruby.
The core of the architecture is provided by EventMachine  (a fast and reliable IO event library).

BrB was built in order to achieve these 4 main goals :
* Simple and fast message passing between distant Ruby processes.
* Message passing with of return values when needed.
* Being extremely fast in order to handle more than a few thousand messages per second.
* Being completely transparent for developer.

The principle is simple and inspired from Drb (standard distributed ruby library) :
A process exposes an object over the network and any ruby process (after having established a connection tunnel) can directly call a method on the exposed object. BrB handles that part, so it’s fully transparent in the Ruby code.

BrB only support message passing with Marshable dumpable object : String, symbol, Array, hash, Number, Object etc...
That mean you can not send file descriptor, Thread or another funky things like that :)

For any question, use the Ruby BrB google group: http://groups.google.com/group/ruby-brb

== Main Functionalities

* Unlimited objects exposed
* Processes can expose object and be client to exposed object too at the same time
* Do not wait for return by default : just do simple message passing
* Handle return values without blocking with the usage of a simple block
* Blocking wait for a return value if needed by simply adding _block at the end of the method name
* Transmission of Exception when blocking call
* Thread safe if used correctly with Event Machine

== How it works

First of all, a process declare himself as a sever and expose any object on a given address and port.
Then, any number of distant processes can create a Tunnel with that server and can expose an object in exchange too.
After connection are ready, just call method on the tunnel. It will just act like normal method calling on the exposed object !

== What BrB is designed for ?

* Doing Simple message passing between ruby process.
* Connecting hundred of ruby process transparently.
* Building a real-time scalable (game) server
* Taking important load on a server easily just by distributing the load on multiple BrB instance.
* Taking advantage of multi-core and multi-threaded systems.

==  TODO
* Writing more examples
* Publish Benchmarks VS drb
* Improve logging mechanism
* Clean up

== Contributors

* kwi (Guillaume Luccisano)
* bwalton (Brian Walton)
* dpree (Jens Bissinger)


Copyright (c) 2009-2010 Guillaume Luccisano - g-mai|: guillaume.luccisano, released under the MIT license
",,2010-04-06T17:12:20Z,2019-08-26T22:26:51Z,3,2,114,3,"('kwi', 21), ('bsingr', 3), ('guillaume', 1)",1,0,
NataliaLKB/learn-git-basics,A Beginner's Guide to Git,"# Learn git

This workshop has been made for students of [Founders and Coders](www.founderandcoders.com), and therefore assumes that you have completed lesson 1 of [Udacity's Git and GitHub course](https://www.udacity.com/course/how-to-use-git-and-github--ud775) (as part of the [precourse material](https://github.com/foundersandcoders/master-reference/tree/master/coursebook/precourse))

**All contributions to this workshop are very welcome!** If you have any suggestions for improvements, please raise an [issue](https://github.com/NataliaLKB/learn-git-basics/issues). The author will let you know whether they prefer to make the changes themselves, or whether you are welcome to submit your own PR (Pull Request). If you do make  PR yourself, please follow the Founders and Coders [contributing guidelines](https://github.com/foundersandcoders/master-reference/blob/master/CONTRIBUTING.md).

# Contents
1. [Introducing Github Flow](#github-flow)
2. [Git Basics](#git-basics)
  + [Getting Started](#getting-started)
  + [Branching](#branching)
  + [Making Changes](#changes)
  + [Merging with Master](#merging)
  + [Merge Conflicts](#conflicts)
  + [Changing File Structure](#changing-file-structure)

3. [Git for Collaboration](#git-collaboration)
  + [Terminology](#terminology)
  + [The Timeline](#timeline)
  + [Committing](#committing)

4. [Resources](#resources)


## GitHub Flow
Version control makes it possible for you and I to work on one file at the same time, because we can keep both our versions saved and then compare them once we have each finished our work. This allows us to integrate our changes more swiftly.

[Most developers use git as their version control system](https://rhodecode.com/insights/version-control-systems-2016), but different teams use different ""workflows"". At Founders and Coders, we generally follow something called ""GitHub flow"", because this flow makes it easy to deploy the latest version of your application very regularly. For a fuller explanation, there is a useful article in the [resources section](#resources).

To see the steps involved in working on a ""feature branch"", follow GitHub's [visual guide](https://guides.github.com/introduction/flow/) now.

**What is a branch?**  
Creating your own ""branch"" is like taking a copy of `master` and renaming it. When you commit, the changes that you make will only exist on that branch. As you work on a GitHub repo, the first branch you are on is the default branch, called `master`. If you wanted to start working on a new section of the website (say the footer styling), it is best practise to create a new branch for working on that feature.



## Git Basics

Next please fork this repository.

![fork button on github](./img/fork.png)


### Getting Started
The next step is to clone the forked version of this repository. On the main page of the repo, copy the url shown here:

![where to copy url on github](./img/git-clone.png)

Then use the command in your terminal:

```
git clone https://github.com/NataliaLKB/learn-git-basics.git
```

You should now be able to redirect into the directory just created using the command line.

Next, it is good to get in the habit after each command to use `git status`. Let us use it now.

```
git status
```

Now check which branch you are on:

```
git branch
```

You should only see `master` which is the default branch in this repo.

When there are other branches in your repo the green branch is the current one you are on.



### Branching
The next step is to create your own branch to work on. try this:

```
git branch new-branch
```

It is best to try to name your branches as specific as possible, so not to confuse them with any others. There are many naming conventions out there for branches, but for this week simply try to name them off of a feature. For example (`navbar-collapse` or `sass-file-structure`). To see all your branches:

```
git branch
```

As you can see, you have created your branch, but are not currently on it. To navigate onto it please:

```
git checkout new-branch
git branch
```

Now you can see you are on that branch. Go back to master and now we are going to delete `new-branch`.

```
git checkout master
git branch -d new-branch
git branch
```

As you can see, your branch is now gone.



### Making Changes
Now it is time to make some changes in the project. Make yourself a new branch named `update-cheatsheet` and go onto it. open up the file cheatsheet.md in your favourite text editor.

As you can see, this contains all the commands you will need to begin using git. Continue to add to it all the new commands you learn. To begin, here is a command that both creates a branch, and moves you onto it at the same time:

```
git checkout -b 
```

Add that command, and its description to cheatsheet.md and save it. Now in your terminal:

```
git status
```

You will see something like this:

![git status example](./img/git-status.png)

You will see your changes in red. now we need to add them to the git staging area. Doing this is like telling git to pay attention to these files, and start tracking the changes. To do this write this command:

```
git add cheatsheet.md
git status
```

Now you can see the file name has turned green. Now to commit your changes.

```
git commit -m 'adding new command in the cheatsheet'
git status
```

The message could be anything, but it is best to make it something that describes what you just did. You can also use the command `git commit` without `-m '<message'`, however beware that it will send you to a text editor called Vim. Though learning how to use Vim is important, it isn't necessary at this stage. Typing `:q` straight away will get you out of it and commit again with a message.



### Merging Changes with Master
Now that you have made and committed your changes, it is time to merge your branch with master. Even though you are not working with anyone else on this repository, it is always good practice to make sure your current branch is completely up to date with master. Imagine if you were working with a team. Someone else has already pushed up changes to master. If that someone else and yourself have changed the same file, it is quite likely that your changes will not be compatible with theirs. To avoid this, you want to merge your changes with theirs to avoid future problems. Checkout back onto master and pull down. These commands look like this:

```
git checkout master
git pull origin master
```

Pulling down means that you are getting any recent changes from the remote master branch which is located in Github. Next go back to your branch (`update-cheatsheet`)  and merge with master.

```
git merge master
```

Even though in this situation there isn't any changes to merge, it is best to get in the habit on going through these steps in your work flow. Merging like this means taking any possible changes in master and merging them with the branch you are currently on.
After you merge with master you have to push your changes to the remote repo (Github).

```
git push origin update-cheatsheet
```

When you pull or push you are referring to your remote repo, or origin. In the example of `git push origin ` you are pushing your local changes to a remote branch that you are both creating, and naming. Since you are creating this branch from your local one it makes things much simpler if you use the same name for your remote branch, as your local one.

For more information on pushing, see [here](https://help.github.com/articles/pushing-to-a-remote/)

Go to your browser and open up this repository in github. Press the branches button

![branches button in gitub](./img/github-branch.png)

And then make a pull request  to master

![viewing all your branches on github](./img/view-github-branches.png)

Afterwards you will see a merge button. Press it and delete your branch. Now your remote branch master is completely up to date with your latest changes.

Return to your terminal and navigate to your local master branch. Pull down. You will see your branch update (fast-forward). Delete the branch `update-cheatsheet`.



### Merge Conflicts
Check all the branches on this repository, even the remote ones. To do this use this command:

```
git branch -a
```

You should see something like this:

![see all branches in github](./img/git-branch-a.png)

Run the command:

```
git checkout merging-experiments
```

Open up the git cheatsheet, as you can see there are some differences between this and master. To see these differences use command:

```
git diff master
```

The differences in green and the additions on this branch, that don't exist on master. The red are the things that are on master, that don't exist on this branch.

Merge with master. You should have a git conflict that looks something like this:

![git merge conflict example](./img/merge-conflict.png)

Do you see the lines at the top. The first section is labelled `HEAD` those are from this branch. The next section is from master. Delete the lines, and any other code you want until the cheatsheet looks like how you want it to look.

Afterwards git status, add the files in red, commit, and push. Then make a pull request to master like before and merge. Don't forget to update your local master branch, and delete the merged branch in Github and in your local repo. It is good to keep your working environments clean and organised.



### Changing File Structure
Imagine you're working on a project that's getting bigger in size. As new files are added, it makes sense to group some of them into folders. For example, it's a good idea to keep all CSS files in one folder, JS files in another etc.

Let's assume you've just cloned a repository structured like this:
```
index.html
stylesheet.css
script.js
```

However, you'd prefer to split these into folders like:
```
css/stylesheet.css
js/script.js
index.html
```

In order to achieve this, `git mv` command comes in handy. Using it to move files *ensures preserving history* of the files you work on. To change file structure like above (and create new folders at the same time) use command:
```
mkdir css && git mv stylesheet.css ./css
mkdir js && git mv script.js ./js
```
(This glues `mkdir` and `git mv` commands together with `&&` operator).

Basic function usage is
```
git mv  
```
The command also takes optional parameters. To find out more, refer to [documentation](http://git-scm.com/docs/git-mv).





# Git for Collaboration


## Terminology

##### Commit Hash:
![commit hash picture](./img/commit-hash.png)

##### HEAD
Simply put, the HEAD is a reference to a commit object. For more information see: http://eagain.net/articles/git-for-computer-scientists/



## The Timeline

As you know from the Udacity course, git stores all the commits on the project. You can use them as a timeline and travel back and forth in time. This section reminds you how to do that, which will come in handy as you work in projects with your team.

Make a new branch called `timeline-practice` and navigate onto it.

Step 1) Make a new directory in the project via the command line. Lets call it `time`.

```
mkdir time
```

Step 2) Also make a new file in that directory and call it whatever you like. A simple text file should be fine. After you are done, open it.

```
touch time/newfile.txt
open time/newfile.txt
```

Write the current time stamp, and a short message to your future self. Save it. Next add and commit your changes. Your commit message should be descriptive of what you just did.
Repeat step 2 twice more, deleting the previous time and message, and adding the new time and a different message. Make sure you add and commit each time. Make sure your commit messages are unique, and you can tell which one was first, second, and third.

Step 3) Next type in this command:

```
git log
```

You should see something like this:

![git log example](./img/git-log.png)


Pick the second time commit that you made and copy the hash. Use `q` to exit the log and checkout to your commit.

Step 4)
```
git checkout 
git status
```

![git detached head warning](./img/detached-head.png)


As you can see after you checkout a message appears informing you that you are in a 'detached HEAD' state, meaning your are not working on any current branch. Open up the file in the time folder and look at the time and message. It should be the 2nd one that you wrote.

Repeat step 4, and use the hash of the first time commit you made. Open the file and see that the time of your first commit, and your message to yourself. This is going back in time. You can easily go back as far as you like in the project and see older iterations of this tutorial!

Next, we should go back to the future. The quickest and easiest way is to checkout onto the`timeline-practise` branch and you should be back up to date. However, you can also navigate back to the latest commit from where you are now. First, check `git log`. You will notice your latest commits are no longer on there. This is where another command is handy. `git reflog` is best used to find recently ""lost"" commits. you should see something like:

![git reflog example](./img/git-reflog.png)

Find the commit name of the last commit you did (the third time that you recorded) and copy the short hash in yellow. Checkout back to that commit, and `git diff timeline-practise` there should be no difference.
Checkout back to `timeline-practise` and push up to Github to make a pull request to master. Make sure you first check that
it is up to date with master locally.



## Committing



### When should you commit?

You should aim each commit to be a ""safe"" version of the project. This means that if you checkout to any commit in your timeline, that should reflect where the project was at that point, and be functional.

Given that, when you commit is very important. I have heard two very useful guidelines.

The first, is that as you complete the task assigned to you, you make several commits at different times during that task. In the end you merge all those commits together to make one very informative commit of that task. I will talk about ways to merge commits together in a later section.

The second method is you work through your task and complete it before adding or committing at all. Then you check the status of the repo and see all the files you have changed. The next step is selectively adding and committing

Through my research I have come across many different methodologies, and ultimately you should try to do what seems the most natural to you. I use both of these methodologies depending on the extent of the task before me. The best thing is to always keep in mind that you and your colleagues will inevitably need to go back to your commits and it will help everyone if commits are aptly named.

Likewise, even in pull requests, you must aim to make your commits a clear and concise summary of what tasks where completed on that branch. That way the person reviewing your pull request understands what they will be reviewing before looking at the code itself.



### Commit messages

Just like choosing when to commit, and what to commit, it is also important to think about your naming. It is always good to be as descriptive as possible with your commit messages.

Also consider:
* Present tense for your commit messages
* If related to an issue on github, should contain issue number
* The first line should be 50 characters or less. Your message should be brief and to the point.
* Focus on why you did something, not how you did it
* Avoid `ands`. If you find yourself wanting to write `and`, you should probably break up that commit into multiple ones.

Remember that the purpose of this commit is to be a message for future you, or your colleagues who may not have known what you are working on. Try to think about your message with this in mind.

Many development teams take it one step further and turn their commit messages into change logs. These change logs may be used for user consumption making it all the more important to have clear messages of what was done for that commit.

I tend to favour one line commits for simplicity, but many schools of thought out there prefer multiline commit messages. For examples of ""best practice"" formats for this see:
* [Commit message guidelines Angular](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format)
* [Informative guidelines, and a cute cat filled slideshow](http://www.slideshare.net/TarinGamberini/commit-messages-goodpractices)



### Merging Commits

Often you will find yourself wanting to merge commits, or organising your early commits slightly differently on a branch to better demonstrate what you worked on. I will briefly go through one easy way to do this.

#### Reset Soft
This is my preferred method of merging commits together. It leaves you with lots of flexibility.

To begin, make a new branch and make some new files and commit regularly (at least twice).

Next `git log` and pick the 3rd most recent hash. Copy it and:

```
git reset --soft 
git status
git log
```

Your working directory shouldn't changes, but all the files that you changed should be in green. Your log should have the newest commit as the hash you copied. Even though all your work is still the same as before the reset, the commits are different. Then you can commit again and this is an easy way to replace 2 or more commits with one commit.


For more information and techiques see:

* [What to learn more about reset?](https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting/commit-level-operations)
* [Only want to ammend the previous commit?](https://www.atlassian.com/git/tutorials/rewriting-history/)
* [The Golden Rule of Rebasing](https://www.atlassian.com/git/tutorials/merging-vs-rebasing/the-golden-rule-of-rebasing)




# RESOURCES [![contributions welcome](https://img.shields.io/badge/contributions-welcome-brightgreen.svg?style=flat)](https://github.com/NataliaLKB/learn-git-basics/issues)

> Have you ***found a useful Git or GitHub resource or tutorial? Please let us know*** by creating an issue

* Why you GitHub flow? Read this article from a developer at GitHub: http://scottchacon.com/2011/08/31/github-flow.html
* For generating ssh keys https://help.github.com/articles/generating-ssh-keys/
* CodeSchool ""Git Real"" tutorial: http://gitreal.codeschool.com/
* Atlassian (makers of *SourceTree*) Git Tutorials: https://www.atlassian.com/git/tutorials/
* Git Branching: https://github.com/pcottle/learnGitBranching
+ Interactive tutorial: http://gitimmersion.com
+ Build Podcast (intro to Git) Video: http://build-podcast.com/git/
+ Git User Manual: https://www.kernel.org/pub/software/scm/git/docs/user-manual.html
+ GitHub's Treasure Trove of Video Tutorials: https://www.youtube.com/user/GitHubGuides (channel) and *specifically*: https://www.youtube.com/watch?v=FyfwLX4HAxM
+ The *simple* guide to git: http://rogerdudler.github.io/git-guide/
+ Jeff Schomay's Git-Fu presentation: http://slides.com/jschomay/git-fu
+ Git Pretty: http://justinhileman.info/article/git-pretty/ (anything visual makes learning git much easier...)
+ Intermediate: http://www.raywenderlich.com/74258/git-tutorial-intermediate
+ Visualize your Git with **SourceTree**: http://www.sourcetreeapp.com/
",,2015-01-25T17:17:01Z,2024-04-16T20:28:35Z,10,8,63,6,"('NataliaLKB', 46), ('jsms90', 14), ('NaomiGaynor', 3), ('PiotrBerebecki', 3), ('patrickwalkowicz', 2), ('Jwhiles', 1), ('Justen Barget', 1), ('Rafe Kennedy', 1), ('nelsonic', 1), ('smarthutza', 1)",5,3,
KDawg/S3DeployJS,Example showing a NodeJS CLI tool pushing files up to an S3 bucket as a simple webapp static file deployer.,"#S3DeployJS
##NodeJS Tool Deploying Files to AWS S3

This project is all about showing a NodeJS command-line tool pushing files up to an S3 bucket.

Why does it look like there's a website here? It's a simple one I made serving as sample files showing at least what this file upload tool can do deploying a typical website to Amazon S3. These are the types of static resources best served from their service.

Automating deployments is always a good thing. Reducing friction makes a process more fun, people are more willing to do it, and shiping working code to users is a blast!

##Accompanying Article
For lots more details and analysis read the accompanying [technical article](http://blog.katworksgames.com/2014/01/26/nodejs-deploying-files-to-aws-s3/)

##Setup
* ""git clone"" the repo of course
* ""npm install"" to bring down dependency packages
* edit the AwsConfig.json file replacing these placeholder values with your proper [AWS credentials](http://blogs.aws.amazon.com/security/post/Tx1R9KDN9ISZ0HF/Where-s-my-secret-access-key):

```
{
  ""accessKeyId"": ""XXXXXXX"",
  ""secretAccessKey"": ""YYYYYYYY"",
  ""region"": ""us-east-1""
}
```
* Edit S3Deploy.js changing line #2 with your own bucket name avoiding conflict with any existing ones

```
var BUCKET_NAME = 's3deploy.example';
```

##Command-line Params
Run this from a Terminal command line, naturally.

```
node S3Deploy.js [param]
```

* audio folderName
* code
* createBucket
* css
* images
* index
* list

##Learn
Have a good look at S3Deploy.js because it's where all the good stuff goes on. Reading that code gives lots of
concrete examples all of you can well use.

##Further Info
* Read the accompanying [technical article](http://blog.katworksgames.com/2014/01/26/nodejs-deploying-files-to-aws-s3/)
* Reach out to me on Twitter [@KenTabor](https://twitter.com/KenTabor)
* [AWS SDK](http://aws.amazon.com/sdkfornodejs/) for JavaScript NodeJS
* Source code repo on GitHub [S3DeployJS](https://github.com/KDawg/S3DeployJS)

Please share this repo and the accompanying article with those who will benefit.
",,2014-01-25T15:24:14Z,2014-01-27T16:06:18Z,1,1,46,4,"('KDawg', 15)",0,0,
wspeirs/btree,On-Disk B+ Tree implemented in Rust,"# Log Structured Merge B+ Tree (LSMBT)

This an implementation of two different data structures:
* [Log Structured Merge Tree](https://en.wikipedia.org/wiki/Log-structured_merge-tree)
* [B+Tree](https://en.wikipedia.org/wiki/B%2B_tree)

The implementation also leverages a [write-ahead log](https://en.wikipedia.org/wiki/Write-ahead_logging) to ensure that data is not lost.

## Basic Architecture

When you create a LSMBT 2 files are created: a blank B+ Tree file, and a blank WAL file. An in-memory [BTreeMap](https://doc.rust-lang.org/stable/std/collections/struct.BTreeMap.html) is also constructed. Each method of the LSMBT is outlined below

### Insert (key,value)
When a (key,value) pair is added to the LSMBT the following occurs:
1. The (key,value) pair is written to the WAL file.
1. The (key,value) pair is added to the in-memory BTree. If the size of the in-memory BTree hits a particular threshold, then
  1. The in-memory BTree is merged with the on-disk B+Tree to create a new on-disk B+Tree.
  1. The in-memory BTree and the WAL file are both truncated.

### Get Values
Because a key can be associated with a set (no duplicate values per key) of values, the `get` method returns a list of values:

1. Collect all of the values associated with a given key in the in-memory BTree.
1. Collect all of the values associated with a given key in the on-disk B+Tree.
1. Return all the unique values

### Delete Value
Again, because a key can be associated with a set of values, the value to be removed must be supplied during a delete:

1. Remove the value from the in-memory BTree. If it is the only value associated with the key, then remove the key as well.
1. Mark the value in the on-disk B+Tree as deleted. (The value isn't actually removed until a compaction occurs.)

",,2016-08-30T15:27:51Z,2020-05-22T00:41:13Z,3,2,199,5,"('wspeirs', 57), ('William Speirs', 7), ('HParker', 3)",0,0,
VladyslavUsenko/ewok,Ewok: Real-Time Trajectory Replanning for MAVs using Uniform B-splines and 3D Circular Buffer,"# Ewok: Real-Time Trajectory Replanning for MAVs using Uniform B-splines and 3D Circular Buffer

For more information see
[https://vision.in.tum.de/research/robotvision/replanning](https://vision.in.tum.de/research/robotvision/replanning)

[![teaser](ewok.gif)](https://www.youtube.com/watch?v=jh6tMHjxHSY)

### 1. Related Papers
If you use this code, please cite the respective publications:
* **Real-Time Trajectory Replanning for MAVs using Uniform B-splines and 3D Circular Buffer**, V. Usenko, L. von Stumberg, A. Pangercic, D. Cremers, In 2017 International Conference on Intelligent Robots and Systems (IROS) [[DOI:10.1109/IROS.2017.8202160]](https://doi.org/10.1109/IROS.2017.8202160) [[arXiv:1703.01416]](https://arxiv.org/abs/1703.01416).

### 2 Installation

The system has been tested with  Ubuntu 20.04 (ROS Noetic) and Ubuntu 18.04 (ROS Melodic). For Ubuntu 16.04 (ROS Kinetic) switch to `ubuntu_16_04_kinetic` branch.

Follow the tutorials to [install ROS Noetic for 20.04 or ROS Melodic for 18.04 (desktop-full)](http://wiki.ros.org/ROS/Installation) and to [set up catkin workspace](http://wiki.ros.org/ROS/Tutorials/InstallingandConfiguringROSEnvironment).

Install dependencies. For Ubuntu 20.04 (ROS Noetic):
```
sudo apt-get install git python python3-matplotlib python3-numpy libeigen3-dev libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev protobuf-compiler libnlopt-dev libnlopt-cxx-dev ros-noetic-octomap ros-noetic-octomap-ros ros-noetic-octomap-msgs ros-noetic-tf-conversions ros-noetic-eigen-conversions
```
For Ubuntu 18.04 (ROS Melodic):
```
sudo apt-get install git python3-matplotlib python3-numpy libeigen3-dev libgoogle-glog-dev libatlas-base-dev libsuitesparse-dev protobuf-compiler libnlopt-dev ros-melodic-octomap ros-melodic-octomap-ros ros-melodic-octomap-msgs ros-melodic-tf-conversions ros-melodic-eigen-conversions
```

Navigate to the source folder of your catkin workspace, download and build the software:
```
cd ~/catkin_ws/src
git clone --recursive https://github.com/VladyslavUsenko/ewok.git
cd ..
catkin_make
```
Some of the provided examples (trajectory_replanning_big_forest.launch) depend on the forest_gen dataset. With the above commands it should already be downloaded as a git submodule. Please check https://github.com/ethz-asl/forest_gen for more information about the dataset.

### 3. Simulation example
In separate terminal windows:

Start roscore:
```
roscore
```

Start visualization:
```
roscd ewok_simulation/rviz/
rviz -d simulation.rviz
```
Launch the system and simulator:
```
roslaunch ewok_simulation trajectory_replanning_simulation.launch
```

Now you should be able to see Rviz visualization of the system running in simulator. Due to performance reasons GUI of the Gazebo simulator is disabled by default.
To enable it, change the following parameter in `ewok_simulation/launch/trajectory_replanning_simulation.launch`:
```

```

### 4. Circular Buffer vs Octomap benchmarking
In separate terminal windows:

Start roscore:
```
roscore
```
or, if you already have it running, make sure you are not using simulated time:
```
rosparam set use_sim_time false
```

Start visualization:
```
roscd ewok_ring_buffer/rviz/
rviz -d ring_buffer.rviz
```
Run benchmarking script. It will download the dataset, run the computations and show the plots with insertion times:
```
roscd ewok_ring_buffer/benchmarking/
./benchmark.py
```

### 5. B-spline optimization example
In separate terminal windows:

Start roscore:
```
roscore
```
or, if you already have it running, make sure you are not using simulated time:
```
rosparam set use_sim_time false
```

Start visualization:
```
roscd ewok_optimization/rviz/
rviz -d optimization_example.rviz
```
Run optimization example:
```
rosrun ewok_optimization spline_optimization_example3
```


### 6. License
Ewok was developed at the Technical University of Munich. 
The open-source version is licensed under the GNU Lesser General Public License Version 3 (LGPLv3).

","'mav', 'uav'",2017-03-07T10:21:37Z,2021-06-22T15:32:46Z,2,2,332,13,"('VladyslavUsenko', 19), ('peteflorence', 1)",1,1,
jcwilk/stanfordparser,Github upload of Bill McNeal's ruby wrapper for Stanford's NLP library,"= stanfordparser

This is an upload/extension of Bill McNeal's stanfordparser rubyforge gem, check it out at its homepage (seems to be partially in French)

http://rubyforge.org/projects/stanfordparser/

or its rdocs

http://stanfordparser.rubyforge.org/

I've been having issues trying to use this gem so I decided to upload it to github and try to organize it to be a little more gem-friendly, especially using jeweler.

AFAIK there aren't other copies of this on github, please correct me if I'm mistaken. The only similar one I can see is http://github.com/tiendung/ruby-nlp which has much less code and I can only assume to be something else.

It seems like using version 1.6.1 of the java StanfordParser package is your best bet for compatability.

See README.orig.rdoc for Bill's readme, which includes dependencies, installation, and usage.

== Branches

* master - Jeweler and Bundler integrated along with slight reorganization of files to be more gem-standard. This is the branch you should use if you want to source the gem straight from github. I will leave this branch alone for the most part unless I find/come up with stable and useful additions. All changes will be backwards compatible.
* stock - Almost untouched from Bill's version, except for the README. Use this branch if that's what you're looking for.
* fixing_tests - The tests are currently broken, this branch is trying to address that. Once the tests are fixed it will be merged back into master. Help appreciated! I'll keep a TESTS_STATUS.rdoc keeping track of progress.
* experimental - I'll be putting in some code as examples and testing out some ideas. Do not use this branch as a gem. You are very encouraged, however, to fork it and add some code/make my code better. I'll try to integrate all the pull requests I get, if not in that branch into another. 

== Note on Patches/Pull Requests
 
* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. I would prefer rSpec, but TestUnit is acceptable as well since there are some of those from the original author.
* Commit.
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 John Wilkinson. See LICENSE for details.
Copyright 2007-2008, William Patrick McNeill. See README.orig for details.
",,2010-06-17T05:45:03Z,2010-08-23T08:13:02Z,2,1,87,6,"('jcwilk', 6), ('John Wilkinson', 1)",1,0,
thoughtbot/factory_bot,A library for setting up Ruby objects as test data.,"# factory_bot [![Build Status][ci-image]][ci] [![Code Climate][grade-image]][grade] [![Gem Version][version-image]][version]

factory_bot is a fixtures replacement with a straightforward definition syntax, support for multiple build strategies (saved instances, unsaved instances, attribute hashes, and stubbed objects), and support for multiple factories for the same class (user, admin_user, and so on), including factory inheritance.

If you want to use factory_bot with Rails, see
[factory_bot_rails](https://github.com/thoughtbot/factory_bot_rails).

_[Interested in the history of the project name?][NAME]_


### Transitioning from factory\_girl?

Check out the [guide](https://github.com/thoughtbot/factory_bot/blob/4-9-0-stable/UPGRADE_FROM_FACTORY_GIRL.md).


Documentation
-------------

See our extensive reference, guides, and cookbook in [the factory_bot book][].

For information on integrations with third party libraries, such as RSpec or
Rails, see [the factory_bot wiki][].

 We also have [a detailed introductory video][], available for free on Upcase.

[a detailed introductory video]: https://upcase.com/videos/factory-bot?utm_source=github&utm_medium=open-source&utm_campaign=factory-girl
[the factory_bot book]: https://thoughtbot.github.io/factory_bot
[the factory_bot wiki]: https://github.com/thoughtbot/factory_bot/wiki

Install
--------

Run:

```ruby
bundle add factory_bot
```

To install the gem manually from your shell, run:

```shell
gem install factory_bot
```

Supported Ruby versions
-----------------------

Supported Ruby versions are listed in [`.github/workflows/build.yml`](https://github.com/thoughtbot/factory_bot/blob/main/.github/workflows/build.yml)

More Information
----------------

* [Rubygems](https://rubygems.org/gems/factory_bot)
* [Stack Overflow](https://stackoverflow.com/questions/tagged/factory-bot)
* [Issues](https://github.com/thoughtbot/factory_bot/issues)
* [GIANT ROBOTS SMASHING INTO OTHER GIANT ROBOTS](https://robots.thoughtbot.com/)

[GETTING_STARTED]: https://github.com/thoughtbot/factory_bot/blob/main/GETTING_STARTED.md
[NAME]: https://github.com/thoughtbot/factory_bot/blob/main/NAME.md

Useful Tools
------------

* [FactoryTrace](https://github.com/djezzzl/factory_trace) - helps to find unused factories and traits.

Contributing
------------

Please see [CONTRIBUTING.md](https://github.com/thoughtbot/factory_bot/blob/main/CONTRIBUTING.md).

factory_bot was originally written by Joe Ferris and is maintained by thoughtbot.
Many improvements and bugfixes were contributed by the [open source
community](https://github.com/thoughtbot/factory_bot/graphs/contributors).

License
-------

factory_bot is Copyright © 2008 Joe Ferris and thoughtbot. It is free
software, and may be redistributed under the terms specified in the
[LICENSE] file.

[LICENSE]: https://github.com/thoughtbot/factory_bot/blob/main/LICENSE


## About thoughtbot

![thoughtbot](https://thoughtbot.com/thoughtbot-logo-for-readmes.svg)

This repo is maintained and funded by thoughtbot, inc.
The names and logos for thoughtbot are trademarks of thoughtbot, inc.

We love open source software!
See [our other projects][community].
We are [available for hire][hire].

[community]: https://thoughtbot.com/community?utm_source=github
[hire]: https://thoughtbot.com/hire-us?utm_source=github




[ci-image]: https://github.com/thoughtbot/factory_bot/actions/workflows/build.yml/badge.svg?branch=main
[ci]: https://github.com/thoughtbot/factory_bot/actions?query=workflow%3ABuild+branch%3Amain
[grade-image]: https://codeclimate.com/github/thoughtbot/factory_bot/badges/gpa.svg
[grade]: https://codeclimate.com/github/thoughtbot/factory_bot
[version-image]: https://badge.fury.io/rb/factory_bot.svg
[version]: https://badge.fury.io/rb/factory_bot
[hound-badge-image]: https://img.shields.io/badge/Reviewed_by-Hound-8E64B0.svg
[hound]: https://houndci.com
","'factories', 'factory-bot', 'factory-girl', 'fixtures', 'rails', 'ruby', 'rubygems', 'testing', 'thoughtbot'",2008-06-03T13:55:37Z,2024-06-17T03:02:23Z,287,237,7889,129,"('joshuaclayton', 436), ('jferris', 140), ('composerinteralia', 138), ('mike-burns', 24), ('Gabe Berke-Williams', 17), ('eugenebolshakov', 17), ('Richie Thomas', 13), ('twalpole', 13), ('odlp', 10), ('Oli Peate', 9), ('aledustet', 8), ('Joe Ferris', 8), ('ydah', 8), ('qrush', 7), ('stefannibrasil', 6), ('weppos', 6), ('mjankowski', 6), ('technicalpickles', 6), ('Jon Yurek', 6), ('Dan Croak', 6), ('r00k', 6), ('Chad Pytel', 5), ('kristianmandrup', 5), ('nickrivadeneira', 5), ('tristandunn', 5), ('Daniel Colson', 4), ('tysongach', 4), ('seanpdoyle', 3), ('sikachu', 3), ('nashby', 3), ('natesholland', 3), ('drapergeek', 3), ('jaredbeck', 3), ('goronfreeman', 3), ('Insti', 3), ('Avielle Wolfe', 3), ('ChrisBr', 3), ('Adarsh Pandit', 2), ('Jeffrey Wan', 2), ('janxious', 2), ('Josh Clayton and Jason Draper', 2), ('justinko', 2), ('mvz', 2), ('Nathan Sutton', 2), ('olivier-thatch', 2), ('ovargas27', 2), ('rpbarlow-credible', 2), ('ryana', 2), ('sandro', 2), ('ChaoticBoredom', 2), ('morgoth', 2), ('makicamel', 2), ('mockdeep', 2), ('olivierlacan', 2), ('HParker', 2), ('Andrew Mason', 2), ('Atul9', 2), ('barunio', 2), ('eregon', 2), ('cpytel', 2), ('cgriego', 2), ('dpickett', 2), ('JDutil', 2), ('jeffcole', 2), ('jasonm', 2), ('flori', 2), ('Shigawire', 2), ('eugeneius', 2), ('eostrom', 2), ('Earlopain', 2), ('dnagir', 2), ('oboxodo', 2), ('rgould', 1), ('RicardoTrindade', 1), ('rena-h', 1), ('rafbm', 1), ('greyblake', 1), ('gmile', 1), ('phlipper', 1), ('betelgeuse', 1), ('splattael', 1), ('petergoldstein', 1), ('pboling', 1), ('pjg', 1), ('pvalena', 1), ('richiethomas', 1), ('onerinas', 1), ('RobertLowe', 1), ('rmm5t', 1), ('rringler', 1), ('saadbinakhlaq', 1), ('salimane', 1), ('sarahraqueld', 1), ('salbertson', 1), ('smaboshe', 1), ('urbanautomaton', 1), ('huerlisi', 1), ('Siva Gollapalli', 1), ('maqnouch', 1), ('manuelmeurer', 1), ('marcocampana', 1), ('vimutter', 1), ('mark-rushakoff', 1), ('ybiquitous', 1), ('mattbrictson', 1), ('plato721', 1), ('mlarraz', 1), ('m-gizzi', 1), ('matthuhiggins', 1), ('Max Holzheu', 1), ('Megan Tiu', 1), ('schwern', 1), ('michaelklishin', 1), ('michaelkoper', 1), ('mlomnicki', 1), ('cibernox', 1), ('subelsky', 1), ('quadule', 1), ('nwjsmith', 1), ('nickcharlton', 1), ('olegantonyan', 1), ('ifesdjeen', 1), ('Paco Guzman', 1), ('Lechindianer', 1), ('psnjs', 1), ('czuger', 1), ('Alwahsh', 1), ('bbugh', 1), ('bogdanvlviv', 1), ('cj', 1), ('craiglittle', 1), ('djezzzl', 1), ('durrantm', 1), ('ecnalyr', 1), ('github-actionsbot', 1), ('ivantedja', 1), ('jume-dev', 1), ('kddnewton', 1), ('kvokka', 1), ('leriksen', 1), ('pacop', 1), ('PlugIN73', 1), ('ninoslavmilenovic', 1), ('nordringrayhide', 1), ('rspeicher', 1), ('rutaka-n', 1), ('sago-yu', 1), ('sinsoku', 1), ('tadp', 1), ('takakuda', 1), ('thoughtbot', 1), ('lastcat', 1), ('Stephan Eckardt and Josh Clayton', 1), ('stve', 1), ('laserlemon', 1), ('Steven Derocher', 1), ('Steven Derocher', 1), ('skryukov', 1), ('Sweta', 1), ('hellosweta', 1), ('Sweta Sanghavi', 1), ('humzashah', 1), ('szimek', 1), ('tejasbubane', 1), ('espadrine', 1), ('Thomas', 1), ('thomasdarde', 1), ('timdiggins', 1), ('tinabme', 1), ('0x7466', 1), ('tomstuart', 1), ('victornamuso', 1), ('victormours', 1), ('vcavallo', 1), ('VFedyk', 1), ('waldyr', 1), ('fonji', 1), ('kt3k', 1), ('elasticspoon', 1), ('bradleypriest', 1), ('wied03', 1), ('bjfish', 1), ('bkeepers', 1), ('brandondrew', 1), ('BrianHawley', 1), ('bricestacey', 1), ('carlosantoniodasilva', 1), ('chrishunt', 1), ('ckib16', 1), ('thorncp', 1), ('christoomey', 1), ('krider2010', 1), ('pythonandchips', 1), ('colinross', 1), ('comron', 1), ('boutil', 1), ('Damian Galarza', 1), ('danielnolan', 1), ('dasch', 1), ('daguar', 1), ('flanger001', 1), ('davidw', 1), ('djbender', 1), ('derekprior', 1), ('Derek Prior and Josh Clayton', 1), ('EdmundKorley', 1), ('AdamZaczek', 1), ('amatsuda', 1), ('coorasse', 1), ('Alex McNamara', 1), ('ajsharp', 1), ('alextsui05', 1), ('Alexander Gronemann', 1), ('aishek', 1), ('agrimm', 1), ('ndp', 1), ('andrykonchin', 1), ('andynu', 1), ('Andy Waite and Josh Clayton', 1), ('adie', 1), ('mironov', 1), ('berkos', 1), ('Aqualon', 1), ('aepstein', 1), ('Ari Pollak', 1), ('Avielle', 1), ('ayrton', 1), ('Ben Taitelbaum', 1), ('Ben Zhang and Josh Clayton', 1), ('bf4', 1), ('brkn', 1), ('BerkhanBerkdemir', 1), ('umerkulovb', 1), ('Ito Tubasa', 1), ('iiwo', 1), ('jacobtbz', 1), ('RochesterinNYC', 1), ('gatorjuice', 1), ('fearoffish', 1), ('releu', 1), ('jeffcarbs', 1), ('Jim Kingdon', 1), ('Joe Ferris and Josh Clayton', 1), ('softwaregravy', 1), ('johnpitchko', 1), ('jtrupiano', 1), ('rocket-turtle', 1), ('tilsammans', 1), ('jordimassaguerpla', 1), ('Josh Clayton and Joel Oliveira', 1), ('queso', 1), ('monkbroc', 1), ('karmi', 1), ('metaskills', 1), ('remnantkevin', 1), ('kunitoo', 1), ('askreet', 1), ('choznerol', 1), ('Uaitt', 1), ('Mandaryn', 1), ('eikes', 1), ('elia', 1), ('eliotsykes', 1), ('zetter', 1), ('lime', 1), ('emmanuelgautier1994', 1), ('ebouchut', 1), ('futureperfect', 1), ('Evan Larkin', 1), ('Fernando Ultremare', 1), ('Flavio Castelli', 1), ('Fumiaki MATSUSHIMA', 1), ('george-carlin', 1), ('glaucocustodio', 1), ('greysteil', 1), ('Gun.io Whitespace Robot', 1), ('Harold Giménez', 1), ('volfgox', 1), ('henrik', 1), ('hjwylde', 1), ('hmayer00', 1), ('hosamaly', 1), ('Iain Beeston', 1), ('ijcd', 1), ('Ian Zabel', 1), ('Ilya Gutsalyuk', 1), ('betesh', 1)",215,179,
bmoreonrails/rails_tutorial,Tutorial for B'more on Rails,"# Bmore On Rail Workshop Tutorial

This site is created using [jekyll](https://jekyllrb.com/). If you're struggling to find information here, more can be found there.

## Contributing

If you're interested in contributing YAY! and THANK YOU! Please fork this repo and submit any changes as a pull request. 

## Up and Running

Before you get started, make sure you have the Ruby version specified in [.ruby-version](https://github.com/bmoreonrails/rails_tutorial/blob/master/.ruby-version) installed locally.

Then, clone the repo and run `bundle install`.

Now, you can get the site up and running locally by running `jekyll serve`. You can view the running site by going to [http://localhost:4000/rails_tutorial/](http://localhost:4000/rails_tutorial/). (Note that the trailing slash is **not** optional.)

## Caveats

### Links
The config value `open_links_in_new_tab` in `config.yml` results in all links opening in a new tab. You can override this behavior on individual links by setting the target attribute back to the default value (`_self`) or if you just don't want the thing to work that way, remove that config value or set it to false.

## Deploying

First, checkout master and pull the latest changes.

```sh
git checkout master
git pull origin master
```

Then, run `rake prepare_deploy`.

```sh
rake prepare_deploy
```

When the task finishes, you'll be on the `gh-pages` branch. There will be a new commit for the changes you're deploying. If everything looks good, push the changes.

```sh
git push origin gh-pages
```
",,2016-11-06T19:33:08Z,2022-10-05T19:27:43Z,25,14,4,5,"('Natasha Jones', 113), ('Tasha Jones', 99), ('alimi', 45), ('alexfu', 36), ('solipet', 16), ('angeliquejw', 10), ('Olivia Brundage', 7), ('Beverly Guillermo', 6), ('PaulOstazeski', 6), ('nerdEd', 4), ('oliikit-test', 4), ('michellemartir', 4), ('Jo Wroten', 3), ('enviable', 2), ('michellemartir', 2), ('vaidehijoshi', 2), ('brigittewarner', 2), ('vsard', 2), ('“Polly Sileo“', 2), ('Beverly Guillermo', 1), ('jgaskins', 1), ('kbladow', 1), ('malissaromero', 1), ('Olivia Brundage', 1), ('Paige', 1)",6,3,
billturner/simple-s3-backup,"A simple Ruby backup solution for MySQL & MongoDB databases, file directories, and single files to Amazon S3.","Simple S3 Backup
----------------

A simple Ruby script to back up MySQL database tables, MongoDB databases, full directories, and groups of single files to Amazon S3 (Simple Storage Service).

**Steps for using:**

1. Set up an Amazon S3 account: 
2. Install the aws/s3 Ruby gem: 
3. Rename settings-sample.rb to settings.rb
4. In settings.rb, fill in specific command paths, your Amazon API credentials, MySQL login info & databases, and any directories you want backed up.  Just comment out the constants for backups you don't want to run.
5. Set the script to run with cron - I have mine run every night, like so:

`15 3 * * * /usr/bin/ruby /home/username/backups/simple-s3-backup.rb`

**To do:**

1. Split daily archives into separate directories in the bucket? Would be helpful for those with lots of files, and lots of days
",,2009-12-12T03:23:29Z,2015-03-16T01:31:03Z,3,3,66,3,"('billturner', 19), ('joshgoebel', 2), ('felipepavao', 1)",1,1,
stanfordnqp/spins-b,Photonic optimization library,"[![pypi](https://img.shields.io/pypi/v/spins)](https://pypi.org/project/spins/)
[![black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/stanfordnqp/spins-b/HEAD)
[![image](https://codecov.io/gh/stanfordnqp/spins-b/branch/master/graph/badge.svg)](https://codecov.io/gh/stanfordnqp/spins-b)

# SPINS-B 0.0.2

SPINS-B is the open source version of
[SPINS](https://stanford.resoluteinnovation.com/technologies/S18-012_spins-inverse-design-software-for),
a framework for gradient-based (adjoint) photonic optimization developed
over the past decade at Jelena Vuckovic\'s [Nanoscale and Quantum
Photonics Lab](http://nqp.stanford.edu) at Stanford University. The full
version can be licensed through the [Stanford Office of Technology and
Licensing](https://techfinder.stanford.edu/technology_detail.php?ID=42383)
(see FAQ).

The overall architecture is explained in our paper [Nanophotonic Inverse
Design with SPINS: Software Architecture and Practical
Considerations](https://arxiv.org/abs/1910.04829).

## Documentation

[Documentation](http://spins-b.readthedocs.io) is continually updated over time.

## SPINS Photonics Inc

We launched [SPINS Photonics Inc](https://www.spinsphotonics.com/) to bring inverse design to commercial nanophotonic products!

## Installation

You can install from [pypi](https://pypi.org/project/spins/)

```
pip install spins
```

Or you can install the development version if you plan to contribute

```
git clone https://github.com/stanfordnqp/spins-b.git
cd spins-b
make install
```


## Features

- Gradient-based (adjoint) optimization of photonic devices
- 2D and 3D device optimization using finite-difference
  frequency-domain (FDFD)
- Support for custom objective functions, sources, and optimization
  methods
- Automatically save design methodology and all hyperparameters used
  in optimization for reproducibility

## Upcoming Features

We are protoyping the next version of SPINS-B. This version of SPINS-B
will support these new features:

- Co-optimization of multiple device regions simulataneously
- Integration with FDTD and other electromagnetic solvers
- Easier to use and extend

## Overview

Traditional nanophotonic design typically relies on parameter sweeps,
which are expensive both in terms of computation power and time, and
restrictive in their parameter space. Likewise, completely blackbox
optimization algorithms, such as particle swarm and genetic algorithms,
are also highly inefficient. In both these cases, the computational
costs limit the degrees of the freedom of the design to be quite small.
In contrast, by leveraging gradient-based optimization methods, our
nanophotonic inverse design algorithms can efficiently optimize
structures with tens of thousands of degrees of freedom. This enables
the algorithms to explore a much larger space of structures and
therefore design devices with higher efficiencies, smaller footprint,
and novel functionalities.

## Publications

Any publications resulting from the use of this software should
acknowledge SPINS-B and cite the following papers:

For general device optimization:

- Su et al. Nanophotonic Inverse Design with SPINS: Software
  Architecture and Practical Considerations. _arXiv:1910.04829_
  (2019).

For grating coupler optimization:

- Su et al. Fully-automated optimization of grating couplers. _Opt.
  Express_ (2018).
- Sapra et al. Inverse design and demonstration of broadband grating
  couplers. _IEEE J. Sel. Quant. Elec._ (2019).
",,2019-03-25T21:06:09Z,2024-04-13T05:37:55Z,9,5,274,31,"('ludi1001', 146), ('jskarda', 17), ('joamatab', 13), ('JesseLu', 7), ('vcruysse', 6), ('Neil', 5), ('Dries', 4), ('nvsapra', 4), ('Neil Sapra', 1)",1,0,
taobao/nginx-book,Nginx开发从入门到精通,".. nginx_book documentation master file, created by
   sphinx-quickstart on Wed Feb 29 17:58:19 2012.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Nginx开发从入门到精通
=============================


缘起
++++++

nginx由于出色的性能，在世界范围内受到了越来越多人的关注，在淘宝内部它更是被广泛的使用，众多的开发以及运维同学都迫切的想要了解nginx模块的开发和它的内部原理，但是国内却没有一本关于这方面的书，源于此我们决定自己来写一本。本书的作者为淘宝核心系统服务器平台组的成员，本书写作的思路是从模块开发逐渐过渡到nginx原理剖析。书籍的内容会定期在这里更新，欢迎大家提出宝贵意见，不管是本书的内容问题，还是字词错误，都欢迎大家提交issue(章节标题的左侧有评注按钮)，我们会及时的跟进。

.. topic:: 更新历史

    .. csv-table:: 
       :header: 日期, 描述
       :widths: 20, 160
       :quote: $
       :delim: |

       2012/03/01|创建目录大纲
       2012/03/28|增加了样章
       2012/05/25|更新样章
       2012/06/08|增加第5章
       2012/06/11|增加第4章
       2012/06/26|增加第6章(event module)
       2012/06/27|更新第5章部分内容
       2012/07/04|更新第6章event module部分内容
       2012/07/12|增加第12章（请求头读取，subrequest解析）
       2012/08/14|增加第2章(nginx基础架构及基础概念)
       2012/08/14|增加第2章(ngx_str_t数据结构介绍)
       2012/08/17|增加第7章(模块开发高级篇之变量)
       2012/08/25|增加第11章(nginx的启动阶段部分内容)
       2012/09/26|增加第2章(ngx_array_t,ngx_hash_t及ngx_pool_t介绍)
       2012/10/08|增加第11章(配置解析综述)
       2012/10/12|增加第2章(ngx_hash_wildcard_t,ngx_hash_combined_t及ngx_hash_keys_arrays_t介绍)
       2012/10/21|增加第2章(ngx_chain_t,ngx_list_t及ngx_buf_t介绍)
       2012/11/09|增加第12章(请求体的读取和丢弃解析)
       2012/11/24|更新第2章(ngx_buf_t的部分字段以及其他一些书写错误和表达)
       2012/12/18|更新第11章(解析http块)
       2012/12/10|增加第3章的内容
       2012/12/28|补充和完善了第3章的内容
       2013/01/25|增加了第2章(nginx的配置系统)
       2013/02/18|增加了第2章(nginx的模块化体系结构, nginx的请求处理)
       2013/03/05|增加了第12章部分内容(多阶段请求处理)
       2013/03/08|完成第11章第1节(配置解析综述、ngx_http_block)
       2013/04/16|完成第9章第1节(源码目录结构、configure原理)
       2013/09/30|完成第12章部分内容(多阶段执行链各个阶段解析)
       2013/10/11|完成第12章部分内容(filter解析)
       2013/10/11|完成第12章部分内容(ssl解析)

版权申明
++++++++++++

本书的著作权归作者淘宝核心系统服务器平台组成员所有。你可以：

- 下载、保存以及打印本书
- 网络链接、转载本书的部分或者全部内容，但是必须在明显处提供读者访问本书发布网站的链接
- 在你的程序中任意使用本书所附的程序代码，但是由本书的程序所引起的任何问题，作者不承担任何责任

你不可以：

- 以任何形式出售本书的电子版或者打印版
- 擅自印刷、出版本书
- 以纸媒出版为目的，改写、改编以及摘抄本书的内容

目录
++++++

书籍浏览 (http://tengine.taobao.org/book/index.html)

团队成员
++++++++++++

叔度 (http://blog.zhuzhaoyuan.com)

雕梁 (http://www.pagefault.info)

文景 (http://yaoweibin.cn)

李子 (http://blog.lifeibo.com)

卫越 (http://blog.sina.com.cn/u/1929617884)

袁茁 (http://yzprofile.me)

小熊 (http://dinic.iteye.com)

吉兆 (http://jizhao.blog.chinaunix.net)

静龙 (http://blog.csdn.net/fengmo_q)

竹权 (http://weibo.com/u/2199139545)

公远 (http://100continue.iteye.com/)

布可 (http://weibo.com/sifeierss)

",,2013-01-18T03:40:20Z,2023-11-20T07:48:54Z,32,27,6873,585,"('jinglong', 78), ('chobits', 36), ('RocFang', 24), ('lifeibo-duplicate', 20), ('ideal', 12), ('yzprofile', 12), ('fanjizhao', 11), ('Shen Yan', 7), ('BrytonLee', 6), ('yaoweibin', 6), ('Chuanwen Chen', 5), ('陈震', 5), ('acelyc111', 4), ('stillzhl', 3), ('wilsonwen', 3), ('notishell', 3), ('nkysg', 3), ('layerssss', 2), ('chengpohi', 2), ('jasonz', 2), ('qingmo', 2), ('liyichao', 1), ('heping12341234', 1), ('wangbin579', 1), ('aCayF', 1), ('zouxifeng', 1), ('ZhangBowen', 1), ('XueliangHan', 1), ('scottkiss', 1), ('zhuzhaoyuan', 1), ('vm-001', 1), ('1for', 1)",11,11,
bolt/bolt,"Bolt is a simple CMS written in PHP. It is based on Silex and Symfony components, uses Twig and either SQLite, MySQL or PostgreSQL.","| :warning: Note - Not the latest version |
|:----------------------------------------|
| This is the repository for Bolt 3. Please know that Bolt 5 has been released. If you are starting a new project, please use the following:                                
| - [Bolt 5 installation instructions](https://docs.boltcms.io/5.0/installation/installation) |
| - [Bolt 5 Core repository](https://github.com/bolt/core)   |


Bolt
====

A [Sophisticated, lightweight & simple CMS][bolt-cm] released under the open
source [MIT-license][MIT-license].

Bolt is a tool for Content Management, which strives to be as simple and
straightforward as possible.

It is quick to set up, easy to configure, uses elegant templates, and above
all, it's a joy to use!

Bolt is created using modern open source libraries, and is best suited to build
sites in HTML5 with modern markup.

Installation
------------

Detailed instructions can be found in the [official documentation][docs].

**NOTE:** Cloning the repository directly is only supported for development of
the core of Bolt, see the link above for various supported options to suit
your needs.

Reporting issues
----------------

See our [Contributing to Bolt][contributing] guide.

Support
-------

Have a question? Want to chat? Run into a problem? See our [community][support]
page.

Development
--------

The ongoing Bolt development and maintenance takes place under the care of:

 - [Two Kings &ndash; Artisinal Web Development](https://twokings.nl)

Sponsors: 

 - [Webforward, Richard Leishman](https://www.webfwd.co.uk/)
 - → You and/or your company's name on this list? 
 [Become a sponsor](https://github.com/users/bobdenotter/sponsorship).
 
---

[![Build Status][travis-badge]][travis] [![Scrutinizer Continuous Inspections][codeclimate-badge]][codeclimate] [![SensioLabsInsight][sensio-badge]][sensio-insight] [![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1223/badge)](https://bestpractices.coreinfrastructure.org/projects/1223) [![Slack][slack-badge]](https://slack.bolt.cm)

[bolt-cm]: https://bolt.cm
[MIT-license]: http://opensource.org/licenses/mit-license.php
[docs]: https://docs.bolt.cm/installation
[support]: https://bolt.cm/community
[travis]: http://travis-ci.org/bolt/bolt
[travis-badge]: https://travis-ci.org/GawainLynch/bolt.svg?branch=release%2F3.3
[codeclimate]: https://lima.codeclimate.com/github/bolt/bolt
[codeclimate-badge]: https://lima.codeclimate.com/github/bolt/bolt/badges/gpa.svg
[sensio-insight]: https://insight.sensiolabs.com/projects/4d1713e3-be44-4c2e-ad92-35f65eee6bd5
[sensio-badge]: https://insight.sensiolabs.com/projects/4d1713e3-be44-4c2e-ad92-35f65eee6bd5/mini.png
[slack-badge]: https://slack.bolt.cm/badge/ratio
[contributing]: https://github.com/bolt/bolt/blob/master/.github/CONTRIBUTING.md
","'bolt', 'cmf', 'cms', 'mysql', 'php', 'postgresql', 'silex', 'sqlite', 'symfony', 'symfony-application', 'theme', 'twig'",2012-06-14T16:07:54Z,2023-06-27T10:22:08Z,333,246,4150,147,"('GwendolenLynch', 7588), ('bobdenotter', 6357), ('rarila', 3687), ('rossriley', 2738), ('CarsonF', 823), ('rixbeck', 297), ('Carson Full', 247), ('tobias2k', 207), ('SvanteRichter', 133), ('pvankouteren', 114), ('Pinpickle', 103), ('jadwigo', 103), ('xiaohutai', 102), ('GDmac', 94), ('marcelfw', 73), ('tdammers', 66), ('richardhinkamp', 63), ('SahAssar', 52), ('robbert-vdh', 48), ('ntomka', 43), ('Bob den Otter', 42), ('jkazimir', 41), ('cdowdy', 40), ('JarJak', 37), ('Boorj', 34), ('@doerteDev (Stefan Staudenmeyer)', 33), ('Richard', 31), ('electrolinux', 30), ('StevendeVries', 29), ('carlosleopoldo', 27), ('adrolter', 25), ('schwarzmedia', 23), ('magabriel', 22), ('Len van Essen', 20), ('Raistlfiren', 20), ('timcooper', 19), ('Steven Wüthrich', 18), ('gander', 17), ('mablae', 14), ('cooperaj', 14), ('nikgo', 13), ('silentworks', 12), ('Jarek Jakubowski', 12), ('andersonamuller', 12), ('horus68', 11), ('ToBe998', 11), ('realitygaps', 11), ('eduardomart', 11), ('Marcel Wouters', 11), ('kbariotis', 11), ('jtreminio', 11), ('EJanuszewski', 11), ('nestordedios', 10), ('lexislav', 10), ('toin0u', 10), ('tonicospinelli', 10), ('hansfn', 10), ('julianxhokaxhiu', 10), ('Leonid Bobylev', 10), ('Arthur', 9), ('evertalbers', 9), ('Svante Richter', 9), ('hqmatics', 9), ('pygillier', 9), ('phoenixgao', 8), ('versh23', 8), ('kesar', 8), ('dadaxr', 8), ('fabschurt', 8), ('rkmax', 8), ('vimishor', 8), ('CoolGoose', 8), ('Sebastiaan Bonardt', 8), ('graham73may', 7), ('sbani', 7), ('tvlooy', 7), ('Simon', 7), ('Nicolas Béhier-Dévigne', 7), ('Michael Born', 7), ('Gaultier Boniface', 7), ('dmm1', 7), ('dwolfhub', 7), ('AlphaRecon19', 7), ('Chilion Snoek', 7), ('nlemoine', 6), ('kuzvac', 6), ('skinysmn', 6), ('solarissmoke', 6), ('sintemaa', 6), ('flug', 5), ('sekl', 5), ('d-m-', 5), ('mila76', 5), ('maxfierke', 5), ('jcracknell', 5), ('jamiroconca', 5), ('Daniel Wolf', 5), ('marcingajda', 5), ('bobvandevijver', 4), ('robertrosman', 4), ('serweb-labs', 4), ('odlex', 4), ('dantleech', 4), ('damien', 4), ('bmfp', 4), ('sbonardt', 4), ('chubakur', 4), ('Bob den Otter', 4), ('Alex Marucci', 4), ('DanielKulbe', 4), ('MrAdamCook', 4), ('Felix Rabe', 4), ('Crunch09', 4), ('romulo1984', 4), ('bungcip', 4), ('Mikescops', 4), ('Pierre-Yves Gillier', 4), ('jirimedved', 3), ('tchebb', 3), ('viatsko', 3), ('Yanlaz', 3), ('terwey', 3), ('ckdarby', 3), ('dayofr', 3), ('thedumbtechguy', 3), ('hyperTwitch', 3), ('michaeljayt', 3), ('weakset', 3), ('tk421', 3), ('ciarand', 3), ('5in4', 3), ('fmanaya', 3), ('petsagouris', 3), ('Helder Correia', 3), ('I-Valchev', 3), ('geopal-solutions', 3), ('Robert Hunt', 3), ('rihards-exove', 3), ('iskyd', 3), ('Leon0824', 3), ('GromNaN', 3), ('Jack Makiyama', 3), ('Pierre-Yves G', 2), ('rajeevan', 2), ('digitalkaoz', 2), ('rogierkoppejan', 2), ('rhynodesigns', 2), ('larkinscott', 2), ('joshuan', 2), ('SilverClash', 2), ('skoop', 2), ('Steve-MP', 2), ('Thais Santos', 2), ('ToBe998', 2), ('tseho', 2), ('bobdenotter', 2), ('thecb1', 2), ('diggersworld', 2), ('doerteDev', 2), ('gregbiv', 2), ('jmschelcher', 2), ('leocavalcante', 2), ('mavken', 2), ('stryxx', 2), ('apatkinson', 2), ('Anke', 2), ('Anke Willems', 2), ('ashleyhindle', 2), ('ddebernardy', 2), ('filisko', 2), ('ggioffreda', 2), ('hannesl', 2), ('Harm10', 2), ('jameshalsall', 2), ('glasspelican', 2), ('PhillippOhlandt', 2), ('Pedro Nofuentes Azcarate', 2), ('Patryk Łodyga', 2), ('zomars', 2), ('mtotheikle', 2), ('mtsknn', 2), ('lucasmezencio', 2), ('Kristian Kriehl', 2), ('h4cc', 2), ('joshuamcewen', 2), ('brewneaux', 2), ('axsy', 1), ('rwetzlmayr', 1), ('Robin Cawser', 1), ('nroopesh', 1), ('royallthefourth', 1), ('Roßgardt Benedikt', 1), ('draconusdesigns', 1), ('ScreamZ', 1), ('seanhussey', 1), ('Sebastian Klier', 1), ('Senne', 1), ('sergej-brazdeikis', 1), ('spolischook', 1), ('sergeyklay', 1), ('Sidney Widmer', 1), ('Sjord', 1), ('Stefan Staudenmeyer', 1), ('lavoiesl', 1), ('gitter-badger', 1), ('damnlie', 1), ('Mike Anthony', 1), ('Mike Anthony', 1), ('mvriel', 1), ('severak', 1), ('yamitenshi', 1), ('nantunes', 1), ('okj579', 1), ('psanchezg', 1), ('pborreli', 1), ('parijke', 1), ('pedronofuentes', 1), ('peterboorsma', 1), ('Petra Dreiskämper', 1), ('Ramon Moraes', 1), ('ramondelafuente', 1), ('ReenExe', 1), ('Rob Laucius', 1), ('TrafeX', 1), ('joannbc', 1), ('kibax', 1), ('kioan000', 1), ('laurens94', 1), ('leggewie', 1), ('lenvanessen', 1), ('leonbobster', 1), ('magonzalez', 1), ('n1215', 1), ('revollat', 1), ('schwarzmedia', 1), ('somekoala', 1), ('sorabji', 1), ('stefan staudenmeyer', 1), ('thiagosaid', 1), ('tschreiner', 1), ('undoingtech', 1), ('znegva', 1), ('TomasVotruba', 1), ('VME', 1), ('victorelu', 1), ('WedgeSama', 1), ('winglian', 1), ('zquintana', 1), ('aheart', 1), ('anketwokings', 1), ('dforstercon', 1), ('donottumbledry', 1), ('dpfavand', 1), ('cx-emerge', 1), ('galen', 1), ('gandalf3', 1), ('nerdzbot', 1), ('helix84', 1), ('hrjt', 1), ('hugin2005', 1), ('brunoew', 1), ('ozdemirburak', 1), ('Calinou', 1), ('caseyamcl', 1), ('chriscollinsboxuk', 1), ('karfau', 1), ('chriskapp', 1), ('Chris92de', 1), ('Credomane Evonguard', 1), ('Daniel', 1), ('danigonza', 1), ('Daniel Ruf', 1), ('DavidOliver', 1), ('dfridrich', 1), ('DennisSnijder', 1), ('Don Myers', 1), ('DracoThuban', 1), ('Shyim', 1), ('binarykiwi', 1), ('Alexandr Hudeček', 1), ('scaphandroid', 1), ('Arthur Guigand', 1), ('artggd', 1), ('adrenalin', 1), ('asdrubalivan', 1), ('Bart van Asselt', 1), ('benbriedis', 1), ('Techworker', 1), ('Benjamin Georgeault', 1), ('Bernhard Essl', 1), ('bitdeli-chef', 1), ('Bob den Otter', 1), ('Bob den Otter', 1), ('Bob goed', 1), ('bobbybouwmann', 1), ('Bram Mittendorff', 1), ('fabani', 1), ('Jannie Theunissen', 1), ('jtraulle', 1), ('Jericho', 1), ('Schop', 1), ('jorisvandesande', 1), ('mcmillan', 1), ('LeonB', 1), ('luanlmd', 1), ('lucacalcaterra', 1), ('Maciej Miara', 1), ('marcharding', 1), ('panda-madness', 1), ('Maelstromeous', 1), ('Matthew', 1), ('maetthu', 1), ('Dragony', 1), ('Mauricio Vicente de Lima Junior', 1), ('Max Roeleveld', 1), ('fadoe', 1), ('tiito78', 1), ('flrvt', 1), ('Florent Tatard', 1), ('florianchrometz', 1), ('padawan', 1), ('Gander', 1), ('Geoff Winner', 1), ('BackEndTea', 1), ('geggleto', 1), ('HeinDR', 1), ('Intendit', 1), ('jackmakiyama', 1), ('Jakub Kisielewski', 1), ('James Halsall', 1), ('Skateside', 1), ('jan-t3000', 1), ('Jani Tarvainen', 1)",147,100,
mozilla/friendlycode,INACTIVE - http://mzl.la/ghe-archive - World's friendliest HTML editor.,"Repository shutdown
===================

Friendlycode is no longer under development in this repository, and is only being further developed as part of Mozilla's Thimble.webmaker.org - it now lives at https://github.com/mozilla/thimble.webmaker.org/tree/master/public/friendlycode

please file any PRs against Friendlycode there, or file bugreports on it through Mozilla's webmaker bug tracking over at https://bugzilla.mozilla.org/enter_bug.cgi?product=Webmaker&component=Thimble
","'inactive', 'unmaintained'",2012-05-01T20:41:36Z,2019-03-29T04:47:23Z,10,10,48,9,"('toolness', 451), ('Pomax', 171), ('stenington', 14), ('smagch', 12), ('brianloveswords', 4), ('alicoding', 2), ('cmcavoy', 2), ('k88hudson', 2), ('davidascher', 1), ('jbuck', 1)",2,2,
codelibs/elasticsearch-minhash,Elasticsearch plugin for b-bit minhash algorism,"Elasticsearch MinHash Plugin
[![Java CI with Maven](https://github.com/codelibs/elasticsearch-minhash/actions/workflows/maven.yml/badge.svg)](https://github.com/codelibs/elasticsearch-minhash/actions/workflows/maven.yml)
=======================

## Overview

MinHash Plugin provides b-bit MinHash algorithm for Elasticsearch.
Using a field type and a token filter provided by this plugin, you can add a minhash value to your document.

## Version

[Versions in Maven Repository](https://repo1.maven.org/maven2/org/codelibs/elasticsearch-minhash/)

### Issues/Questions

Please file an [issue](https://github.com/codelibs/elasticsearch-minhash/issues ""issue"").

## Installation

    $ $ES_HOME/bin/elasticsearch-plugin install org.codelibs:elasticsearch-minhash:7.14.0

## Getting Started

### Add MinHash Analyzer

First, you need to add a minhash analyzer when creating your index:

    $ curl -XPUT 'localhost:9200/my_index' -d '{
      ""index"":{
        ""analysis"":{
          ""analyzer"":{
            ""minhash_analyzer"":{
              ""type"":""custom"",
              ""tokenizer"":""standard"",
              ""filter"":[""minhash""]
            }
          }
        }
      }
    }'

You are free to change tokenizer/char\_filter/filter settings, but the minhash filter needs to be added as a last filter.

### Add MinHash field

Put a minhash field into an index mapping:

    $ curl -XPUT ""localhost:9200/my_index/_mapping"" -d '{
      ""properties"":{
        ""message"":{
          ""type"":""string"",
          ""copy_to"":""minhash_value""
        },
        ""minhash_value"":{
          ""type"":""minhash"",
          ""store"":true,
          ""minhash_analyzer"":""minhash_analyzer""
        }
      }
    }'

The field type of minhash is of binary type.
The above example calculates a minhash value of the message field and stores it in the minhash\_value field.

## Get MinHash Value

Add the following document:

    $ curl -XPUT ""localhost:9200/my_index/_doc/1"" -d '{
      ""message"":""Fess is Java based full text search server provided as OSS product.""
    }'

The minhash value is calculated automatically when adding the document.
You can check it as below:

    $ curl -XGET ""localhost:9200/my_index/_doc/1?pretty&stored_fields=minhash_value,_source""

The response is:

    {
      ""_index"" : ""my_index"",
      ""_type"" : ""_doc"",
      ""_id"" : ""1"",
      ""_version"" : 1,
      ""found"" : true,
      ""_source"":{
          ""message"":""Fess is Java based full text search server provided as OSS product.""
        },
      ""fields"" : {
        ""minhash_value"" : [ ""KV5rsUfZpcZdVojpG8mHLA=="" ]
      }
    }

## References

### Change the number of bits and hashes

To change the number of bits and hashes, set them to a token filter setting:

    $ curl -XPUT 'localhost:9200/my_index' -d '{
      ""index"":{
        ""analysis"":{
          ""analyzer"":{
            ""minhash_analyzer"":{
              ""type"":""custom"",
              ""tokenizer"":""standard"",
              ""filter"":[""my_minhash""]
            }
          }
        },
        ""filter"":{
          ""my_minhash"":{
            ""type"":""minhash"",
            ""seed"":100,
            ""bit"":2,
            ""size"":32
          }
        }
      }
    }'

The above allows to set the number of bits to 2, the number of hashes to 32 and the seed of hash to 100.

","'elasticsearch', 'elasticsearch-plugin', 'minhash'",2014-09-21T06:11:02Z,2024-06-17T12:26:14Z,8,7,62,12,"('marevol', 392), ('dependabotbot', 3), ('carldea', 1), ('davidefiocco', 1), ('keiichiw', 1), ('pocke', 1), ('deka0106', 1), ('igarash1', 1)",6,5,
heroku/heroku-buildpack-ruby,Heroku's buildpack for Ruby applications.,"# Heroku Buildpack for Ruby
![ruby](https://cloud.githubusercontent.com/assets/51578/13712725/3c6b3368-e793-11e5-83c1-728440111358.png)

This is a [Heroku Buildpack](http://devcenter.heroku.com/articles/buildpacks) for Ruby, Rack, and Rails apps. It uses [Bundler](https://bundler.io) for dependency management.

This buildpack requires 64-bit Linux.

## Usage

### Ruby

Example Usage:

    $ ls
    Gemfile Gemfile.lock

    $ heroku create --buildpack heroku/ruby

    $ git push heroku main
    ...
    -----> Heroku receiving push
    -----> Fetching custom buildpack
    -----> Ruby app detected
    -----> Installing dependencies using Bundler version 1.1.rc
           Running: bundle install --without development:test --path vendor/bundle --deployment
           Fetching gem metadata from http://rubygems.org/..
           Installing rack (1.3.5)
           Using bundler (1.1.rc)
           Your bundle is complete! It was installed into ./vendor/bundle
           Cleaning up the bundler cache.
    -----> Discovering process types
           Procfile declares types -> (none)
           Default types for Ruby  -> console, rake

The buildpack will detect your app as Ruby if it has a `Gemfile` and `Gemfile.lock` files in the root directory. It will then proceed to run `bundle install` after setting up the appropriate environment for [ruby](http://ruby-lang.org) and [Bundler](https://bundler.io).

## Documentation

For more information about using Ruby and buildpacks on Heroku, see these Dev Center articles:

- [Heroku Ruby Support](https://devcenter.heroku.com/articles/ruby-support)
- [Getting Started with Ruby on Heroku](https://devcenter.heroku.com/articles/getting-started-with-ruby)
- [Getting Started with Rails 7 on Heroku](https://devcenter.heroku.com/articles/getting-started-with-rails7)
- [Buildpacks](https://devcenter.heroku.com/articles/buildpacks)
- [Buildpack API](https://devcenter.heroku.com/articles/buildpack-api)

## Hacking

To use this buildpack, fork it on Github.  Push up changes to your fork, then create a test app with `--buildpack ` and push to it.

### Testing

The tests on this buildpack are written in Rspec to allow the use of
`focused: true`. Parallelization of testing is provided by
https://github.com/grosser/parallel_tests this lib spins up an arbitrary
number of processes and running a different test file in each process,
it does not parallelize tests within a test file. To run the tests: clone the repo, then `bundle install` then clone the test fixtures by running:

```sh
$ bundle exec hatchet install
```

```sh
$ bundle exec rake spec
```
","'buildpack', 'heroku', 'heroku-languages', 'ruby'",2011-05-24T15:14:41Z,2024-06-14T18:41:24Z,82,67,785,127,"('schneems', 1015), ('hone', 927), ('dependabotbot', 63), ('jkutner', 40), ('ddollar', 23), ('edmorley', 22), ('calebhearth', 13), ('Jeremy Morrell', 10), ('heroku-linguistbot', 8), ('danp', 7), ('catsby', 7), ('wuputah', 6), ('mikehale', 5), ('Cyril David', 4), ('mattgraham', 4), ('github-actionsbot', 4), ('Damien Mathieu', 3), ('dzuelke', 3), ('znz', 3), ('orlando', 3), ('dmathieu', 2), ('rcs', 2), ('icco', 2), ('joshwlewis', 2), ('Josh Adams', 2), ('DyegoCosta', 2), ('rmontgomery429', 1), ('rstacruz', 1), ('rafaelfranca', 1), ('rohitpaulk', 1), ('oguzbilgic', 1), ('Noah Zoschke', 1), ('Nathaniel Jones', 1), ('mikker', 1), ('halogenandtoast', 1), ('mmrobins', 1), ('mlarraz', 1), ('mmcgrana', 1), ('Malax', 1), ('Lola Odelola', 1), ('sumbach', 1), ('segiddins', 1), ('stefansundin', 1), ('stevenh512', 1), ('yangchenyun', 1), ('siong1987', 1), ('TheNotary', 1), ('tiii', 1), ('Trung Lê', 1), ('victor-fdez', 1), ('fjg', 1), ('snyk-bot', 1), ('svc-scm', 1), ('zunda', 1), ('aminjam', 1), ('indirect', 1), ('arthurnn', 1), ('bensymonds', 1), ('benizi', 1), ('brixen', 1), ('cjolly', 1), ('colincasey', 1), ('crohr', 1), ('damonmorgan', 1), ('Daniel Farina', 1), ('dgrizzanti', 1), ('Edward Muller', 1), ('xentek', 1), ('evanphx', 1), ('gabrielg', 1), ('heridev', 1), ('jvanbaarsen', 1), ('joekrump', 1), ('Jonah Hirsch', 1), ('Jonathan Hinkle', 1), ('josephpage', 1), ('jkrall', 1), ('JuanitoFatas', 1), ('Junya Hayashi', 1), ('jfilip', 1), ('Justin Fitzsimmons', 1), ('sbleon', 1)",56,45,
codename-B/bPermissions,a SuperPermissions manager for Bukkit,"# bPermissions repo

## What is it
bPermissions Enterprise Edition is an efficient and dynamic rethink of the permissions concept, targeted at the server-network, rather than the server.

## Features
This branch of bPermissions comes with full MySQL support, as well as the option of global, or per world permissions in one handy package.
",,2011-07-23T14:37:05Z,2015-06-18T11:33:27Z,12,11,27,9,"('codename-B', 442), ('slipcor', 5), ('Santtu Elo', 3), ('H4v3n', 3), ('alexstanoev', 3), ('bushshrub', 2), ('alex-humphreys', 1), ('krinsdeath', 1), ('N3X15', 1), ('Sleaker', 1), ('Zeerix', 1), ('greatman', 1)",6,6,
jakubgarfield/Bonobo-Git-Server,Bonobo Git Server for Windows is a web application you can install on your IIS and easily manage and connect to your git repositories. Go to homepage for release and more info.,"Bonobo Git Server
==============================================

[![Build status](https://ci.appveyor.com/api/projects/status/4vyllwtb5i645lrt/branch/master?svg=true)](https://ci.appveyor.com/project/jakubgarfield/bonobo-git-server)

Thank you for downloading Bonobo Git Server. For more information please visit [http://bonobogitserver.com](http://bonobogitserver.com).


Prerequisites
-----------------------------------------------

* Internet Information Services 7 and higher
    * [How to Install IIS 8 on Windows 8](http://www.howtogeek.com/112455/how-to-install-iis-8-on-windows-8/)
    * [Installing IIS 8 on Windows Server 2012](http://www.iis.net/learn/get-started/whats-new-in-iis-8/installing-iis-8-on-windows-server-2012)
    * [Installing IIS 7 on Windows Server 2008 or Windows Server 2008 R2](http://www.iis.net/learn/install/installing-iis-7/installing-iis-7-and-above-on-windows-server-2008-or-windows-server-2008-r2)
    * [Installing IIS 7 on Windows Vista and Windows 7](http://www.iis.net/learn/install/installing-iis-7/installing-iis-on-windows-vista-and-windows-7)
* [.NET Framework 4.6](https://www.microsoft.com/en-gb/download/details.aspx?id=48130)
    * Windows Vista SP2, Windows 7, Windows 8 and higher
    * Windows Server 2008 R2, Windows Server 2008 SP2, Windows Server 2012 and higher
    * Don't forget to register .NET framework with your IIS
        * Run `%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_regiis.exe -ir` with administrator privileges





Update
-----------------------------------------------

Before each update please read carefully the information about **compatibility issues** between your version and the latest one in [changelog](/changelog.md).

* Delete all the files in the installation folder **except App_Data**.
    * Default location is `C:\inetpub\wwwroot\Bonobo.Git.Server`.
* Copy the files from the downloaded archive to the server location.






Installation
-----------------------------------------------

These steps illustrate simple installation with Windows 2008 Server and IIS 7. They are exactly the same for higher platforms (Windows Server 2012 and IIS 8.0).

* **Extract the files** from the installation archive to `C:\inetpub\wwwroot`

* **Allow IIS User to modify** `C:\inetpub\wwwroot\Bonobo.Git.Server\App_Data` folder. To do so
    * select Properties of App_Data folder,
    * go to Security tab, 
    * click edit, 
    * select IIS user (in my case IIS_IUSRS) and add Modify and Write permission,
    * confirm these settings with Apply button.

* **Convert Bonobo.Git.Server to Application** in IIS
    * Run IIS Manager and navigate to Sites -> Default Web Site. You should see Bonobo.Git.Server.
    * Right click on Bonobo Git Server and convert to application.
    * Check if the selected application pool runs on .NET 4.0 and convert the site.

* **Launch your browser** and go to [http://localhost/Bonobo.Git.Server](http://localhost/Bonobo.Git.Server). Now you can see the initial page of Bonobo Git Server and everything is working.
    * Default credentials are username: **admin** password: **admin**





Frequently Asked Questions
-----------------------------------------------

#### How to clone a repository?

* Go to the **Repository Detail**.
* Copy the value in the **Git Repository Location**.
    * It should look like `http://servername/projectname.git`.
* Go to your command line and run `git clone http://servername/projectname.git`.

#### How do I change my password?

* Click on the **account settings** in the top right corner.
* Enter new password and confirmation.
* Save.

#### How to backup data?

* Go to the installation folder of Bonobo Git Server on the server.
    * Default location is `C:\inetpub\wwwroot\Bonobo.Git.Server`.
* Copy the content of App_Data folder to your backup directory.
* If you changed the location of your repositories, backup them as well.

#### How to change repositories folder?

* Log in as an administrator.
* Go to **Global Settings**.
* Set the desired value for the **Repository Directory**.
    * Directory must exist on the hard drive.
    * IIS User must have proper permissions to modify the folder.
* Save changes.    

#### Can I allow anonymous access to a repository?

* Edit the desired repository (or do this when creating the repository).
* Check **Anonymous** check box.
* Save.

For allowing anonymous push you have to modify global settings.

* Log in as an administrator.
* Go to **Global Settings**.
* Check the value **Allow push for anonymous repositories**
* Save changes.

#### I'd like to use git hooks to restrict access. How do I access the web frontend usernam?

Bonobo provides the following environment variables:

* `AUTH_USER`: The username used to login. Empty if it was an anonymous operation (clone/push/pull)
* `REMOTE_USER`: Same as `AUTH_USER`
* `AUTH_USER_TEAMS`: A comma-separated list containing all the teams the user belongs to. Commas in teams name are escaped with a backslash. Backslashes are also escaped with a `\`. Example: Teams 'Editors\ Architects', 'Programmers,Testers' will become `Editors\\ Architects,Programmers\,Testers`.
* `AUTH_USER_ROLES`: A comma-separated list containing all the roles the user belongs to. Commas in roles are escaped with a backslash. Backslashes are also escaped with a `\`.
* `AUTH_USER_DISPLAYNAME`: Given Name + Surname if available. Else the username.

**Beware that due to the way HTTP basic authentication works, if anonymous operations (push/pull) are enabled the variables above will always be empty!**

New release
-----------------------------------------------

* update [changelog](https://github.com/jakubgarfield/Bonobo-Git-Server/blob/master/changelog.md)
* update version numbers in [appveyor.yml](https://github.com/jakubgarfield/Bonobo-Git-Server/blob/master/appveyor.yml)
* add tag so it appears under [releases](https://github.com/jakubgarfield/Bonobo-Git-Server/releases) with `git tag -a 6.0.0 -m ""Release 6.0.0""`
* add zipped version to bonobogitserver.com at [Bonobo-Git-Server-Web](https://github.com/jakubgarfield/Bonobo-Git-Server-Web)
","'active-directory', 'bonobo', 'c-sharp', 'git', 'git-server', 'iis', 'windows'",2011-03-07T00:52:45Z,2023-12-28T06:49:22Z,99,69,1796,138,"('jakubgarfield', 355), ('willdean', 176), ('RedX2501', 170), ('stanshillis', 33), ('latop2604', 30), ('larshg', 29), ('Ollienator', 23), ('lkho', 22), ('Aimeast', 21), ('Guilherme Bufolo', 19), ('Lars Glud', 11), ('kfarnung', 10), ('SanSYS', 10), ('embix', 10), ('jeffgaroutte', 10), ('DavidAnson', 8), ('Padre Mortius', 8), ('kengibous', 8), ('alexkuznetsov', 7), ('igoryok-zp', 7), ('marknblueswitch', 6), ('padremortius', 6), ('Amonomen', 5), ('Matthias', 5), ('rexcfnghk', 5), ('anyeloamt', 5), ('heringeidaniel', 4), ('mattn', 4), ('SebastiaanLubbers', 4), ('chrismdev', 3), ('seitzp', 3), ('myh', 3), ('joelsand', 3), ('iamkarlson', 3), ('holiveira', 3), ('ThaStealth', 3), ('SanSYS', 3), ('robbforce', 3), ('mischalandwehr', 3), ('LennardF1989', 3), ('Joseph Magly', 3), ('glacasa', 3), ('davezych', 3), ('Alex Moran', 3), ('CatStarwind', 3), ('AHTA', 3), ('StarryLibra', 2), ('xieyubo', 2), ('tweber-cs', 2), ('spoiledtechie', 2), ('jshepler', 2), ('grigoryev', 2), ('zafer06', 2), ('Matt-17', 2), ('bugrakaan', 2), ('JLedel', 2), ('darioajr', 2), ('Damien', 2), ('silvanperego', 1), ('rozniak', 1), ('Restartz', 1), ('Rakkoc', 1), ('crowar', 1), ('McFlono McFloonyloo', 1), ('Matt Bodily', 1), ('Manuel Kaderli', 1), ('mrmashal', 1), ('Louis-Charles Levasseur', 1), ('A18689', 1), ('HerrPi', 1), ('Thomas Bächler', 1), ('thomasswilliams', 1), ('doggy8088', 1), ('dnadle', 1), ('kholme2', 1), ('myh', 1), ('n.kochnev', 1), ('tooto1985', 1), ('unknown', 1), ('afonsoft', 1), ('AliveDevil', 1), ('andrea-capigiri', 1), ('Bartlomiej Kaminski', 1), ('bogusz', 1), ('BurhanEyimaya', 1), ('Caseyc585', 1), ('ColinNiu', 1), ('digitalcoyote', 1), ('OttoNull', 1), ('erdemyavuzyildiz', 1), ('Eric Cocquerez', 1), ('TheBlueSky', 1), ('eugeniomiro', 1), ('franckbour', 1), ('Georgy Grigoryev', 1), ('holiiveira', 1), ('ivanstus', 1), ('jafp', 1), ('Isaksson', 1)",41,27,
BlackArch/blackarch,An ArchLinux based distribution for penetration testers and security researchers.,"## Description

**BlackArch Linux** is an ArchLinux based penetration testing distribution for
penetration testers and security researchers. The repository contains
[2900 tools](https://www.blackarch.org/tools.html). You can install tools
individually or in groups. BlackArch Linux is compatible with existing Arch
installs. For more information, see the installation instructions.

To report bugs and request new tools, please visit the issue tracker on Github,
stop by Matrix, or email us.

## Download and Installation

BlackArch Linux only takes a moment to setup.

There are three ways to go:

  1. [Install on an existing Arch machine](https://www.blackarch.org/downloads.html#install-repo).
  2. Use the [live ISO](https://blackarch.org/downloads.html).
  3. The Full and Netinstall ISOs come with a text-based installer
     (`blackarch-install`). The Slim ISO comes with a GUI-based installer.
     You can use the installer to install BlackArch Linux onto your hard disk.

## Get Involved

You can get in touch with the BlackArch Linux team. Just check out the following:

**Please, send us pull requests!**

To start developing for BlackArch please refer to the [Dev-Guide](./docs/HOWTO-DEV.md)

**Web:** https://www.blackarch.org/

**Mail:** team@blackarch.org

**Matrix:** [#BlackArch:matrix.org](https://matrix.to/#/#BlackArch:matrix.org)
",,2012-08-16T16:03:43Z,2024-06-17T21:34:20Z,206,155,2725,201,"('noptrix', 13950), ('Evan Teitelman', 4253), ('Edu4rdSHL', 635), ('Francesco Piccinno', 558), ('archey', 554), ('noraj', 421), ('German Vechtomov', 386), ('adminempire', 287), (""Levon 'noptrix' Kayan"", 277), ('s7x', 267), ('nunkii', 266), ('German Vechtomov', 235), ('nrzizrn', 173), ('sepehrdaddev', 165), ('Ellis kenyo', 140), ('mrsmith0x00', 120), ('fnord0', 119), ('osospeed', 102), ('jensp', 86), ('D3vil0p3r', 84), ('D4imyo', 84), ('German Vechtomov', 69), ('ikstream', 67), ('PedroSFreitas', 54), ('dualfade', 51), ('German Vechtomov', 41), ('pwnfoo', 33), ('lsfxz', 29), ('sudokode', 22), ('nopper', 21), ('hacketol', 20), ('wykwit', 19), ('FFY00', 16), ('aancw', 16), ('CaledoniaProject', 15), ('nil0x42', 14), ('p-l-', 12), ('Anyon3', 11), ('ChaosYoda', 10), ('NovaCygni', 9), ('dwaddle', 8), ('Alexandre ZANNI', 8), ('anunna', 8), ('elken', 7), ('XaviTorello', 7), ('goabonga', 6), (""Levon 'noptrix' Kayan"", 6), ('Samuel Le Thiec', 6), ('net-wayfarer', 6), ('heichblatt', 6), ('net-wayfarer', 5), ('vdun', 5), ('c2ypt1c', 5), ('Vechtomov German', 5), ('marianomarciello', 5), ('Anthony Cozamanis', 5), ('OscarAkaElvis', 4), ('PeterDaveHello', 4), ('delta48', 4), ('unload', 4), ('mzet-', 4), ('jaykijay', 4), ('vchuravy', 4), ('obilodeau', 4), ('kcolford', 4), ('halit', 4), ('r3k2', 4), ('cerberusec', 4), ('joaquingx', 3), ('paraxor', 3), ('r-l8', 3), ('cytopia', 3), ('ejiektpobehuk', 3), ('staz0t', 3), ('Louis Dion-Marcil', 3), ('LeRieur', 3), ('jm33-m0', 3), ('jahrome', 3), ('flacks', 3), ('German Vechtomov', 3), ('Fernandez Chris', 3), ('astro-angelfish', 3), ('Bjorn Pagen', 3), ('Tazmain', 2), ('Sable-20', 2), ('Ruben Rocha', 2), ('robiot', 2), ('pi3rrot', 2), ('O . S . O', 2), ('Nhoya', 2), ('Matthias Rabault', 2), ('deltaxflux', 2), ('git-rep', 2), ('jmdevince', 2), ('knight-96', 2), ('zeertzjq', 2), ('cyberqueenmeg', 2), ('Rogdham', 2), ('zezadas', 2), ('Zeecka', 2), ('Brueggus', 2), ('vittring', 2), ('Anthony Cozamanis', 2), ('kurobeats', 2), ('Boy Sandy Gladies Arriezona', 2), ('dlrobertson', 2), ('GoliathLabs', 2), ('Mathias Nyman', 2), ('MarkusTieger', 2), ('ldionmarcil', 2), (""Levon 'noptrix' Kayan"", 2), ('ljrk0', 2), ('SecT0uch', 2), ('bet4it', 2), ('fnk0c', 2), ('demogorgonz', 2), ('cicku', 1), ('ardevd', 1), ('alexmaloteaux', 1), ('Yoann Ono Dit Biot', 1), ('wangjiezhe', 1), ('victorhaggqvist', 1), ('Ubuntu', 1), ('tttturtle-russ', 1), ('Thiago Perrotta', 1), ('epixinvites', 1), ('DerpGusta', 1), ('SoothingDuck', 1), ('rmasp98', 1), ('man0lis', 1), ('LevitatingBusinessMan', 1), ('Raphx', 1), ('ProcessusT', 1), ('gsvprharsha', 1), ('PingNote', 1), ('dreadnought', 1), ('PardesiCat', 1), ('y0no', 1), ('xantares', 1), ('tomAtTeamC', 1), ('sahakkhotsanyan', 1), ('root', 1), ('qjzTreeZ', 1), ('nodauf', 1), ('nbulischeck', 1), ('mutantmonkey', 1), ('medbenali', 1), ('madblobfish', 1), ('lsfxz', 1), ('jfpdx', 1), ('iknite', 1), ('hexcat', 1), ('gratuxri', 1), ('erik4711', 1), ('dwisiswant0', 1), ('dummys', 1), ('dr-Styki', 1), ('dmarsoev', 1), ('viyatb', 1), ('cftong', 1), ('FabioLolix', 1), ('efernandesng', 1), ('dkorzhevin', 1), ('xshishkin', 1), ('sciguy16', 1), ('cyrinux', 1), ('Codecombay', 1), ('Christian Fernandez', 1), ('defektive', 1), ('adeptex', 1), ('artiommocrenco', 1), ('arjunv', 1), ('ahills', 1), ('lflare', 1), ('Alexandre ZANNI', 1), ('ph20', 1), ('L-Cie', 1), ('adcar', 1), ('skyzh', 1), ('amuntner', 1), ('0xflotus', 1), ('--global', 1), ('-- seyt --', 1), ('osmanercelik', 1), ('135e2', 1), ('miroo4517', 1), ('Melvin Lammerts', 1), ('1c7718e7', 1), ('mab122', 1), ('MD5HashBrowns', 1), ('dmitescu', 1), ('LeonHarmse', 1), ('Kibouo', 1), ('Juri Grabowski', 1), ('Josh Schiavone', 1), ('Jordy van Wolferen', 1), ('clarjon1', 1), ('Jab2870', 1), ('kyrias', 1), ('jarylc', 1), ('Jagroop-Singh', 1), ('jamcg', 1), ('J08nY', 1), ('iliaselmatani', 1), ('zguig52', 1), ('Fijxu', 1)",90,71,
dustin/beanstalk-client-ruby,Keith Rarick's ruby client for beanstalk,README,,2008-05-01T21:49:39Z,2008-11-20T00:53:13Z,6,2,35,4,"('Keith Rarick', 48), ('Keith Rarick', 18), ('dustin', 13), ('Keith Rarick', 8), ('Isaac Feliu', 1), ('philr', 1)",2,1,
sixpack/sixpack-py,Python client library for SeatGeek's Sixpack A/B testing framework,"Sixpack
=======

Python client library for SeatGeak's Sixpack ab testing framework.

Installation
------------

First install in your virtual environment::

    $ pip install sixpack-client

Usage
-----

Basic example::


    from sixpack.sixpack import Session

    session = Session()

    # Participate in a test (creates the test if necessary)
    session.participate(""new-test"", [""alternative-1"", ""alternative-2""])

    # Convert
    session.convert(""new-test"")

Each session has a `client_id` associated with it that must be preserved across requests. Here's what the first request might look like::

    session = Session
    session.participate(""new-test"", [""alternative-1"", ""alternative-2""])
    set_cookie_in_your_web_framework(""sixpack-id"", session.client_id)

For future requests, create the `Session` using the `client_id` stored in the cookie::

    client_id = get_cookie_from_web_framework(""sixpack-id"")
    session = Session(client_id=client_id)
    session.convert(""new-test"")

If you already have a client_id (you can generate one using `sixpack.generate_client_id()`) you can use the `participate()` and `convert()` methods to avoid instantiating a `Session` yourself. This can help to clean up your logic a bit::

    from sixpack.sixpack import participate, convert

    partipate(""new-test"", [""alternative-1"", ""alternative-2""], client_id)

    convert(""new-test"", client_id)


Contributing
------------

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Added some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request
",,2013-02-04T20:56:13Z,2023-01-12T23:58:44Z,6,6,39,27,"('zackkitzmiller', 22), ('cclauss', 4), ('erwaller', 2), ('josegonzalez', 2), ('jack7890', 1), ('dependabot-previewbot', 1)",2,2,
SimonPadbury/b4st,"A Bootstrap 4 Starter Theme, for WordPress","# b4st – A Bootstrap 4 Starter Theme, for WordPress

*Version 3.1*

[https://github.com/SimonPadbury/b4st](https://github.com/SimonPadbury/b4st)

------------------

Interested in **Bootstrap 5**? Then go for https://github.com/SimonPadbury/b5st

------------------

> b4st is a simple, Gutenberg-compatible WordPress starter theme loaded with Bootstrap 4 and Font Awesome 5 — using Gulp for preprocessing its SCSS into CSS.

## Basic features

* [UNLICENCE](http://unlicense.org) (open source).

* Simple, intuitive, clean code. Theme CSS and JS, functions and loops are organized into different folders.

* A starter CSS theme – `/theme/css/b4st.css`, enqueued. (Note: do not put your styles in `styles.css`, because that is not enqueued.)

* `b4st.css` is generated from SCSS using Gulp and NodeJS packages. The SCSS files are also included.

* Sass (actually, SCSS) preprocessed to `b4st.css` by Gulp (or you can do your own thing).

* A starter JS script – `theme/css/b4st.js`, enqueued.

* Dimox breadcrumbs ([http://dimox.net/wordpress-breadcrumbs-without-a-plugin/](http://dimox.net/wordpress-breadcrumbs-without-a-plugin/)).

* A [CSS lock](https://fvsch.com/css-locks/) gradually enlarges the typographic font sizes from base 16px to 20px for larger viewports. This affects headers, paragraphs, lists, tables, etc. but not buttons and forms.

## Dependencies

* WordPress.

* Served from CDN’s:
    * Modernizr 2.8.3
    * jQuery 3.5.1 (full, not slim version)
    * Popper 1.16.1 (needed by Bootstrap popovers, tooltips and collapsed navbar “hamburger” action)
    * Bootstrap 4.5.1 CSS
    * Bootstrap 4.5.1 JS
    * Font Awesome 5.14.0

* **Optional** (install these if you want to Gulp-Sass for preprocessing the SCSS files):
    * NodeJS
    * Gulp-CLI – installed globally
    * Node packages for the following devDependencies:
        * autoprefixer
        * cssnano
        * gulp
        * gulp-postcss
        * gulp-sass
        * gulp-sourcemaps

## Bootstrap Integration

* Bootstrap navbar with WordPress menu and search.
	* Navbar dropdowns (child menus) are handled by a [custom walker nav menu class](https://github.com/SimonPadbury/b4st/blob/master/functions/navbar.php).

* Bootstrap customized comments and feedback response form.

## Gutenberg Compatibility

* Gutenberg editor stylesheet – into which has been copy-pasted the typography styles from Bootstrap 4’s _Reboot_ CSS (see [http://getbootstrap.com/docs/4.3.1/content/reboot/](http://getbootstrap.com/docs/4.1/content/reboot/)).

* Since v.3.0, b4st (this theme) has adopted a narrow single-column layout, so that it can make use of Gutenberg’s extra-wide and full width blocks. In the front-end CSS, these are handled by a variation on Andy Bell’s [full bleed](https://hankchizljaw.com/wrote/creating-a-full-bleed-css-utility/) utility.
    * **Optional:** If you wish to revert the font-end templates to a two-column (main content plus sidebar) layout, these are still available in the templates but commented out. However, you will also need to remove (or comment out) support for Gutenberg’s extra-wide and full-width comment blocks from the functions, and modify the CSS a little bit.

## Child-Theme Friendly

b4st was not originally designed for child theming — it is a starter theme modifying directly. Most people still use it that way. But as child theme-friendliness has been asked for, here it is:

* Many functions are pluggable.

* Theme [hooks](/functions/hooks.php) – paired _before_ and _after_ the navbar, post/page main, (optional sidebar) and footer. Parent theme hooks are able to recieve [actions](https://developer.wordpress.org/plugins/hooks/actions/) from a child theme.

* Also, the navbar brand, navbar search form and sub-footer “bottomline” are inserted using pluggable hooks. So, a child theme can override these.

* _Documentation on b4st theme hooks can be found in the [wiki](https://github.com/SimonPadbury/b4st/wiki/b4st-Theme-Hooks)._

## Using the Gulp Task-Runner to Preprocess SCSS into CSS

Since v.3.0, in the `theme/` folder there is a `scss/` folder containing all the SCSS files that have been used to create the file `theme/css/b4st.css`.

You can (beautify and) edit that file directly — or you can preprocess the SCSS files using whatever you prefer to use.

In order to use Gulp, you need to:

1. Install [NodeJS](https://nodejs.org/).

2. Install [Gulp-CLI](https://gulpjs.com/docs/en/getting-started/quick-start) globally, using your terminal:

```
npm install --global gulp-cli
```

3. In b4st there are already these files that you need: `gulpfile.js`, `package.json` and `package-lock.json`. Therefore what you need next are the Node packages. To get these, you need to `cd` to the b4st theme’s root folder and do an `npm install` in your terminal:

```
npm install
```

4. A few minutes later, with all the `node_modules/` installed as local dev dependencies (as you can see from the 'package.json` these are: autoprefixer, cssnano, gulp, gulp-postcss, gulp-sass, and gulp-sourcemaps), you should simply be able to run gulp by typing this in your terminal:

```
gulp
```

That’s it.

You can stop Gulp by typing `ctrl+C` (hold the **control** key down and press the **c** key).

5. So, in development, you could have WordPress running on a local server (e.g. BitNami-WordPress, AMPPS, Local by Flywheel, or MAMP + WordPress), and this Gulp setup watching and processing your SCSS into CSS.
    * You may sometimes need to purge your browser cache at the start of a dev/design session, so that it reloads your newer stylesheet.

---

See the [LOG.md](/LOG.md)

See the [b4st Wiki](https://github.com/SimonPadbury/b4st/wiki).
","'bootstrap4', 'fontawesome5', 'gulp', 'gulp-sass', 'gutenberg', 'starter-theme', 'wordpress'",2015-11-06T08:03:10Z,2023-02-18T10:12:01Z,12,10,311,49,"('SimonPadbury', 245), ('Simon Padbury', 26), ('SimonPadbury', 7), ('dependabotbot', 4), ('khjohnson1972', 4), ('dostrog', 3), ('Jawanet', 3), ('chinmayrajyaguru', 2), ('JackFurby', 2), ('vasiljevs', 1), ('fmohican', 1), ('markc', 1)",3,3,
phiamo/MopaBootstrapBundle,Easy integration of twitters bootstrap into symfony2,"MopaBootstrapBundle
===================

[![Build Status](https://github.com/phiamo/MopaBootstrapBundle/workflows/Continuous%20integration/badge.svg?branch=master)](https://github.com/phiamo/MopaBootstrapBundle/actions?query=workflow%3A%22Continuous%20integration%22%20branch%3Amaster)
[![SensioLabsInsight](https://insight.sensiolabs.com/projects/0a6dbd4c-714b-47a4-b662-254cdf6ec208/mini.png)](https://insight.sensiolabs.com/projects/0a6dbd4c-714b-47a4-b662-254cdf6ec208)
[![Coverage Status](https://coveralls.io/repos/phiamo/MopaBootstrapBundle/badge.svg)](https://coveralls.io/r/phiamo/MopaBootstrapBundle)

MopaBootstrapBundle is a collection of code to integrate twitter's bootstrap
(http://twitter.github.com/bootstrap/) as easy as possible into your symfony
(http://www.symfony.com) Project.

To use MopaBootstrapBundle and Twitter's Bootstrap 3 in your project add it via [composer](Resources/doc/install/1-getting-started.md)

Versions and dependencies
-------------------------

| MopaBootstrapBundle        | Bootstrap | Symfony                                  | PHP                    |
|----------------------------|-----------|------------------------------------------|------------------------|
| [**3.4**] (**master**)     | ^3.0      | ^4.4 &#124;&#124; ^5.1 &#124;&#124; ^6.0 | ^7.2 &#124;&#124; ^8.0 |
| [**3.3**] (**3.3**)        | ^3.0      | ^2.3 &#124;&#124; ^3.0 &#124;&#124; ^4.0 |                        |
| [**3.2**] (*unmaintained*) | ^3.0      | ^2.3 &#124;&#124; ^3.0                   |                        |
| [**3.1**] (*unmaintained*) | ^3.0      | ^2.3 &#124;&#124; ^3.0                   |                        |
| [**3.0**] (*unmaintained*) | ^3.0      | ^2.3 &#124;&#124; ^3.0                   |                        |
| [**2.3**] (*unmaintained*) | ^2.0      | ^2.3                                     |                        |
| [**2.2**] (*unmaintained*) | ^2.0      | >=2.1,<2.4                               |                        |
| [**2.1**] (*unmaintained*) | ^2.0      | ~2.1.0                                   |                        |
| [**2.0**] (*unmaintained*) | ^2.0      | ~2.0.0                                   |                        |
| [**1.x**] (*unmaintained*) | ^1.0      | ^2.0                                     |                        |

Updates
-------

*New in 3.1*: The way `horizontal` works has been slightly altered due to a change in Symfony forms. This may or may
not affect some behavior of your existing forms. ALL root form elements, whether they have a parent form or not will
start with `horizontal` === `true` (or whatever value you set in the config). For the most part this shouldn't affect many users.

`horizontal` will also correctly pass itself down to collection types (and all child forms). So if your collection is horizontal,
so will the collection items. If you want your collection items only to be inline, then you can pass these options to your collection:

```php
array(
    'entry_options' => array('horizontal' => false), //   2.8+
    'options' => array('horizontal' => false),       // < 2.8
)
```

`horizontal_wrap_children` has been removed, as this can be solved using the above options.


Branches
--------

To use this bundle with bootstrap 3 use the latest release:

```sh
composer require mopa/bootstrap-bundle twbs/bootstrap
```

Or config via composer.json

For LESS:

``` json
{
    ""require"": {
        ""mopa/bootstrap-bundle"": ""~3.0"",
        ""twbs/bootstrap"": ""~3.3.0""
    }
}
```

For SASS:

``` json
{
    ""require"": {
        ""mopa/bootstrap-bundle"": ""~3.0"",
        ""twbs/bootstrap-sass"": ""~3.3.0""
    }
}
```

If you wish to use the current master branch, then use the following:


```sh
composer require mopa/bootstrap-bundle:dev-master twbs/bootstrap:dev-master
```

For bootstrap 2 use the v2.3.x branch:

```sh
composer require mopa/bootstrap-bundle:2.3.x-dev twbs/bootstrap:2.3.2
```

To understand which versions are currently required have a look into `BRANCHES.md`

Documentation
-------------

The bulk of the documentation is stored in the [Resources/doc](Resources/doc) folder in this bundle
In any case, if something is not working as expected after a update:

* [READ the CHANGELOG!](https://github.com/phiamo/MopaBootstrapBundle/blob/master/CHANGELOG.md)

Live Show
---------

To see the bundle, its capabilities and some more doc just have a look on

[MopaBootstrapBundle Live](http://bootstrap.mohrenweiserpartner.de)

Additional Resources:

*  [MopaBootstrapSandboxBundle](http://github.com/phiamo/MopaBootstrapSandboxBundle) - Seperate live docs from code
*  [symfony-bootstrap](https://github.com/phiamo/symfony-bootstrap) is also available

Installation
------------

Installation instructions are located in the

* [master documentation](Resources/doc/install/1-getting-started.md)

Included Features
-----------------

* Bootstrap Version detection via Composer Bridge
* Twig Extensions and templates for use with symfony2 Form component
  * control your form either via the form builder or the template engine
  * control nearly every bootstrap2 form feature
  * javascript and twig blocks for dynamic collections
* A generic Navbar class to generate your Navbar outside the template
  * helpers for dropdowns, seperators, etc.
* A generic Tab class to Manage bootstrap tabbing
* Twig templates for KnpPaginatorBundle (https://github.com/knplabs/KnpPaginatorBundle)
* Twig templates for CraueFormFlowBundle (https://github.com/craue/CraueFormFlowBundle)
* Twig template for KnpMenuBundle (https://github.com/KnpLabs/KnpMenuBundle)
  * icon support on menu links

Translations
------------
If you use [KnpPaginatorBundle](https://github.com/KnpLabs/KnpPaginatorBundle) with MopaBootstrapBundle, you can translate labels to your language.
To do this add new file

```sh
Resources/translations/pagination.[YOUR LOCALE CODE].yml
```

As example you have there Polish translation.

Versioning
----------
We aim to follow [semantic versioning](http://semver.org) with our releases.

Contribute
----------
If you want to contribute your code to MopaBootstrapBundle please be sure that your PR's
are valid to Symfony2.1 Coding Standards. You can automatically fix your code for that
with [PHP-CS-Fixer](http://cs.sensiolabs.org) tool.

You can see who already contributed to this project on [Contributors](https://github.com/phiamo/MopaBootstrapBundle/contributors) page

License
-------

This bundle is under the MIT license. For more information, see the complete [LICENSE](Resources/meta/LICENSE) file in the bundle.
",,2011-10-09T01:33:01Z,2024-06-05T14:12:05Z,248,191,710,40,"('phiamo', 983), ('isometriks', 116), ('nysander', 38), ('deguif', 31), ('soullivaneuh', 20), ('peshi', 19), ('MisatoTremor', 19), ('bierdok', 17), ('piotrantosik', 17), ('mulcek', 16), ('peterrehm', 16), ('havvg', 12), ('cordoval', 10), ('ptbello', 9), ('Florian Schaeffer', 9), ('chrisjohnson00', 9), ('Charles SANQUER', 9), ('sstok', 8), ('rdohms', 8), ('auipga', 8), ('leonex-cs1', 7), ('lsv', 7), ('mweimerskirch', 7), ('toby-griffiths', 6), ('Strontium-90', 6), ('stevelacey', 6), ('Pierre-Louis LAUNAY', 6), ('Pentium133', 6), ('EmmanuelVella', 6), ('neoshadybeat', 5), ('nervo', 5), ('pmartelletti', 5), ('leberhome', 5), ('ddeboer', 5), ('gimler', 5), ('lunetics', 5), ('PayteR', 4), ('vagrant', 4), ('ornj', 4), ('mitom', 4), ('n1c01a5', 4), ('Steve Lacey', 4), ('paulandrieux', 4), ('nicovak', 4), ('Seldaek', 4), ('Ivan Borzenkov', 4), ('ivan1986', 4), ('chriskozlowski', 4), ('anacona16', 3), ('Sharom', 3), ('Stephan Vierkant', 3), ('lavoiesl', 3), ('Tomáš Votruba', 3), ('ilyadoroshin', 3), ('jmeyo', 3), ('molchanoviv', 3), ('nnscr', 3), ('stephanvierkant', 3), ('bitundpixel', 3), ('Nikolai Zujev', 3), ('jaymecd', 3), ('lemoinem', 3), ('mkraemer', 3), ('jcrombez', 3), ('johnkary', 3), ('birko', 3), ('CodingNinja', 3), ('cleentfaar', 3), ('nnmer', 3), ('skrivanos', 3), ('gabriel.moreira', 2), ('danut007ro', 2), ('ychadwick', 2), ('LouTerrailloune', 2), ('tobiaskluge', 2), ('thvd', 2), ('Soolan', 2), ('Shady', 2), ('jfx', 2), ('malberts', 2), ('YumeShichi', 2), ('tacman', 2), ('Alexandre-T', 2), ('NightFox7', 2), ('jonny827', 2), ('ip512', 2), ('WedgeSama', 2), ('chrfritsch', 2), ('iamdey', 2), ('aderuwe', 2), ('shieldo', 2), ('Jan Kramer', 2), ('kaiwa', 2), ('konradpodgorski', 2), ('sgilberg', 2), ('smoya', 2), ('philgagnon12', 2), ('pschultz', 2), ('Pavel Boriskin', 2), ('MDrollette', 2), ('hason', 2), ('Marcin Radziwoński', 2), ('mrcmorales', 2), ('Philipp A. Mohrenweiser', 1), ('umpirsky', 1), ('scrutinizer-auto-fixer', 1), ('cadavre', 1), ('hshn', 1), ('Stefano Terenzi', 1), ('stellalie', 1), ('stephpy', 1), ('sylvaindeloux', 1), ('SebLevDev', 1), ('Takashi Kanemoto', 1), ('Takashi Kanemoto', 1), ('Thomas Chmielowiec', 1), ('Tjeerd', 1), ('Nyholm', 1), ('kormik', 1), ('Tony Nelson', 1), ('tonypiper', 1), ('corphi', 1), ('bellecp', 1), ('caillou', 1), ('Pierre-Louis LAUNAY', 1), ('Piotr Szegda', 1), ('Piotr Walków', 1), ('kibao', 1), ('rejsmont', 1), ('Rob Taylor', 1), ('Robbert van den Bogerd', 1), ('Robert Dolca', 1), ('boldtrn', 1), ('Rodolfo Ripado', 1), ('Putr', 1), ('inoryy', 1), ('rossmotley', 1), ('snaquaye', 1), ('swis', 1), ('bghazy', 1), ('hidenorigoto', 1), ('incrediblecube', 1), ('james75', 1), ('leberknecht', 1), ('m-nagai', 1), ('maarekj', 1), ('Am386DX-40', 1), ('ollietb', 1), ('paddya', 1), ('rhodri', 1), ('rogerized', 1), ('sam0delkin', 1), ('juliensnz', 1), ('tulanowski', 1), ('xuedi', 1), ('yuhuanbo', 1), ('zodeus', 1), ('TorbenLundsgaard', 1), ('trsteel88', 1), ('boekkooi', 1), ('wwojcik', 1), ('WouterSioen', 1), ('xmontana', 1), ('yosmanyga', 1), ('aricem', 1), ('ryanlake10288', 1), ('bramklg', 1), ('cellulosa', 1), ('cbou', 1), ('core23', 1), ('daFish', 1), ('dafuer', 1), ('dayofr', 1), ('easyest', 1), ('op-euga', 1), ('adriansm', 1), ('dbellettini', 1), ('leberknecht', 1), ('d-a-gerashenko', 1), ('dao', 1), ('Eduardo', 1), ('elnur', 1), ('emil-nasso', 1), ('F481', 1), ('FabienSalles', 1), ('funflin', 1), ('Filipe Garcia', 1), ('fkrauthan', 1), ('frederickjansen', 1), ('Gabriel Moreira', 1), ('Gorka López de Torre', 1), ('eedev', 1), ('Henry Snoek', 1), ('KittyGiraudel', 1), ('Alan Doucette', 1), ('ioalessio', 1), ('TNAJanssen', 1), ('asosso', 1), ('Furizaa', 1), ('aferrandini', 1), ('edamov', 1), ('Bart Ruysseveldt', 1), ('Barys Biankouski', 1), ('Benoît Bourgeois', 1), ('soobook', 1), ('CarlosCraviotto', 1), ('csarrazi', 1), ('cirovargas', 1), ('adorjand', 1), ('dariuszz123', 1), ('nethunter', 1), ('David Vartanian', 1), ('Luis Muñoz', 1), ('lsmith77', 1), ('marcospassos', 1), ('mdeletter', 1), ('Martin Parsiegla', 1), ('mattsnowboard', 1), ('marshmn', 1), ('smatyas', 1), ('mfoti', 1), ('mhor', 1), ('arcanis', 1), ('scr4tchy', 1), ('miguelcobain', 1), ('mfeltscher', 1), ('npotier', 1), ('nursultanturdaliev', 1), ('paljinov', 1), ('petk', 1), ('zeopix', 1), ('James Moey', 1), ('frodosghost', 1), ('AdFinance', 1), ('jasonhofer', 1), ('Jason Playne', 1), ('Jocelyn FACCHINI', 1), ('Johan Lopes', 1), ('johnnypeck', 1), ('SanjoSolutions', 1), ('solocommand', 1), ('kaupec', 1), ('justinpfister', 1), ('kcivey', 1), ('kbsali', 1), ('Krzysztof Kolasiak', 1), ('leon', 1), ('Llyr', 1)",145,106,
ogom/cookbook-gitlab,Chef's Cookbook for GitLab,"GitLab Cookbook
===============

The GitLab Cookbook has been moved to [GitLab Cloud](https://gitlab.com/gitlab-org/cookbook-gitlab/blob/master/README.md).

However, you can use this cookbook.

----

Chef to install The GitLab.

* GitLab: 6.8.1
* GitLab Shell: 1.9.3
* Ruby: 2.0.0
* Redis: 2.6.13
* Git: 1.7.12
* Nginx: 1.1.19
* PostgreSQL: 9.1.9
* MySQL: 5.5.31

## Requirements

* [Berkshelf](http://berkshelf.com/)
* [Vagrant](http://www.vagrantup.com/)

### Vagrant Plugin

* [vagrant-berkshelf](https://github.com/RiotGames/vagrant-berkshelf)
* [vagrant-omnibus](https://github.com/schisamo/vagrant-omnibus)
* [vagrant-aws](https://github.com/mitchellh/vagrant-aws)


### Platform:

* Ubuntu (12.04, 12.10)
* CentOS (6.4)


## Attributes

* Package
* User
* GitLab shell
* GitLab shell config
* GitLab hq
* GitLab hq config
* Gems
* Git


## Installation

### Vagrant

#### VirtualBox

```bash
$ gem install berkshelf
$ vagrant plugin install vagrant-berkshelf
$ vagrant plugin install vagrant-omnibus
$ git clone https://github.com/ogom/cookbook-gitlab.git ./gitlab
$ cd ./gitlab/
$ vagrant up
```

#### Amazon Web Services

Create instance.

```bash
$ gem install berkshelf
$ vagrant plugin install vagrant-berkshelf
$ vagrant plugin install vagrant-omnibus
$ vagrant plugin install vagrant-aws
$ vagrant box add dummy https://github.com/mitchellh/vagrant-aws/raw/master/dummy.box
$ git clone https://github.com/ogom/cookbook-gitlab.git ./gitlab
$ cd ./gitlab/
$ cp ./example/Vagrantfile_aws ./Vagrantfile
$ vagrant up --provider=aws
```

HostName setting.

```bash
$ vagrant ssh-config | awk '/HostName/ {print $2}'
$ editor ./Vagrantfile
$ vagrant provision
```

### knife-solo

```bash
$ gem install berkshelf
$ gem install knife-solo
$ knife configure
$ knife solo init ./gitlab_chef
$ cd ./gitlab_chef/
$ echo 'cookbook ""gitlab"", github: ""ogom/cookbook-gitlab""' >> ./Berksfile
$ berks install --path ./cookbooks
$ knife solo prepare vagrant@127.0.0.1 -p 2222 -i ~/.vagrant.d/insecure_private_key
$ editor ./nodes/127.0.0.1.json
$ knife solo cook vagrant@127.0.0.1 -p 2222 -i ~/.vagrant.d/insecure_private_key --no-chef-check
```


## Usage

Example of node config.

```json
{
  ""postfix"": {
    ""mail_type"": ""client"",
    ""myhostname"": ""mail.example.com"",
    ""mydomain"": ""example.com"",
    ""myorigin"": ""mail.example.com"",
    ""smtp_use_tls"": ""no""
  },
  ""postgresql"": {
    ""password"": {
      ""postgres"": ""psqlpass""
    }
  },
  ""mysql"": {
    ""server_root_password"": ""rootpass"",
    ""server_repl_password"": ""replpass"",
    ""server_debian_password"": ""debianpass""
  },
  ""gitlab"": {
    ""host"": ""example.com"",
    ""url"": ""http://example.com/"",
    ""email_from"": ""gitlab@example.com"",
    ""support_email"": ""support@example.com"",
    ""database_adapter"": ""postgresql"",
    ""database_password"": ""datapass"",
    ""env"": ""production""
  },
  ""run_list"":[
    ""postfix"",
    ""gitlab::initial"",
    ""gitlab::install""
  ]
}
```

### Database use mysql.

Set `mysql` to `database_adapter`.

```json
{
...
  ""gitlab"": {
    ""database_adapter"": ""mysql""
  }
}
```

### GitLab Update

Add `gitlab::update` to `run_list`.

```json
{
...
  ""run_list"":[
    ""gitlab::update"",
    ""gitlab::initial"",
    ""gitlab::install""
  ]
}
```

## Done!

`http://localhost:8080/` or your server for your first GitLab login.

```
admin@local.host
5iveL!fe
```

## Links

* [GitLab Installation](https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md)
* [Qiita Document](http://qiita.com/items/6491a268bfc95d0a5be4)


## License

* MIT
",,2013-06-12T22:44:40Z,2014-05-07T15:13:44Z,6,6,33,6,"('ogom', 37), ('g3d', 14), ('hiroponz', 3), ('schlamar', 2), ('arlimus', 1), ('jakshi', 1)",2,2,
zostera/django-bootstrap3,Bootstrap 3 integration with Django.,"# django-bootstrap3

[![CI](https://github.com/zostera/django-bootstrap3/workflows/CI/badge.svg?branch=main)](https://github.com/zostera/django-bootstrap3/actions?workflow=CI)
[![Coverage Status](https://coveralls.io/repos/github/zostera/django-bootstrap3/badge.svg?branch=main)](https://coveralls.io/github/zostera/django-bootstrap3?branch=main)
[![Latest PyPI version](https://img.shields.io/pypi/v/django-bootstrap3.svg)](https://pypi.python.org/pypi/django-bootstrap3)

Bootstrap 3 for Django.

## Goal

The goal of this project is to seamlessly blend Django and Bootstrap 3.

- Want to use Bootstrap 4 in Django? See https://github.com/zostera/django-bootstrap4.
- Want to use Bootstrap 5 in Django? See https://github.com/zostera/django-bootstrap5.
- Need icons in your Django project? Use https://github.com/zostera/django-icons.

## Status

This project will receive updates for supported Python and Django versions. Otherwise, we will probably not accept any changes.

## Requirements

This package requires a combination of Python and Django that is currently supported.

See ""Supported Versions"" on https://www.djangoproject.com/download/.

## Documentation

The full documentation is at https://django-bootstrap3.readthedocs.io/

## Installation

1. Install using pip:

    ```shell script
    pip install django-bootstrap3
    ```

   Alternatively, you can install download or clone this repo and call ``pip install -e .``.

2. Add to `INSTALLED_APPS` in your `settings.py`:

   ```python
   INSTALLED_APPS = (
       # ...
       ""bootstrap3"",
       # ...
   )
   ````

3. In your templates, load the `bootstrap3` library and use the `bootstrap_*` tags:

## Example template

```djangotemplate
{% load bootstrap3 %}

{# Display a form #}


    {% csrf_token %}
    {% bootstrap_form form %}
    {% buttons %}
        Submit
    {% endbuttons %}

```

Example app
-----------

An example app is provided in `example`. You can run it with `make example`.


Bugs and suggestions
--------------------

If you have found a bug or if you have a request for additional functionality, please use the issue tracker on GitHub.

https://github.com/zostera/django-bootstrap3/issues


License
-------

You can use this under BSD-3-Clause. See [LICENSE](LICENSE) file for details.


Author
------

Developed and maintained by [Zostera](https://zostera.nl).

Original author: [Dylan Verheul](https://github.com/dyve).

Thanks to everybody that has contributed pull requests, ideas, issues, comments and kind words.

Please see [AUTHORS](AUTHORS) for a list of contributors.
","'bootstrap3', 'django', 'python'",2013-08-13T13:48:04Z,2024-06-17T10:47:51Z,99,76,2340,103,"('dyve', 542), ('dependabotbot', 251), ('Dylan Verheul', 140), ('xrmx', 10), ('jonashaag', 8), ('nikolas', 8), ('luzfcb', 6), ('juancarlospaco', 5), ('Anthony King', 4), ('MarkusH', 4), ('TyVik', 4), ('xsurfer', 4), ('predatell', 3), ('owais', 3), ('Nik Nyby', 3), ('jieter', 3), ('Jakub Owczarski', 3), ('Dr. E', 3), ('frewsxcv', 3), ('lstaniszewski', 2), ('ookami-kb', 2), ('jaimesanz', 2), ('dakrauth', 2), ('stewartbiggs', 2), ('clokep', 2), ('NotSqrt', 2), ('SamTShaw', 2), ('mfcovington', 2), ('Jonas Hagstedt', 2), ('Greg McCoy', 2), ('Doug Van Horn', 2), ('Daniel Niccoli', 2), ('snoepkast', 2), ('aamalev', 2), ('radimsuckr', 1), ('raphaelm', 1), ('Tusky', 1), ('rcmachado', 1), ('svisser', 1), ('Sjoerd Arendsen', 1), ('suriya', 1), ('timgates42', 1), ('ychouinard', 1), ('Pascal Polleunus', 1), ('pauloxnet', 1), ('olegpesok', 1), ('soupytwist', 1), ('Nerade', 1), ('mlazowik', 1), ('deronnax', 1), ('mkoistinen', 1), ('takuchanno2', 1), ('surfer190', 1), ('rolfhnelson', 1), ('potpath', 1), ('pmav99', 1), ('nspo', 1), ('nikolas', 1), ('myii', 1), ('0mician', 1), ('miigotu', 1), ('joelalgee', 1), ('enlighter', 1), ('darius BERNARD', 1), ('Yonel Ceruto González', 1), ('Tim Schneider', 1), ('Mactory', 1), ('frlan', 1), ('eliasp', 1), ('emoffett', 1), ('derek-dchu', 1), ('DanHatesNumbers', 1), ('Damien Nicolas', 1), ('streeter', 1), ('cvrebert', 1), ('caioariede', 1), ('bradbeattie', 1), ('bcail', 1), ('awhitty', 1), ('aptiko', 1), ('Anton Egorov', 1), ('Anthony King', 1), ('A. Svensson', 1), ('luksen', 1), ('lukaselmer', 1), ('jlec', 1), ('jlesech', 1), ('joshkel', 1), ('jstarcher', 1), ('ricefield', 1), ('MaZZly', 1), ('jayvdb', 1), ('johnfraney', 1), ('beruic', 1), ('jaypipes', 1), ('Matoking', 1), ('Jann Haber', 1), ('Helen ST', 1), ('Linkid', 1)",65,52,
yankouskia/advanced-zeros,Let's count zeros!,"# advanced-zeros
Let's count zeros!

## Task

Your task is to implement `getZerosCount` function, which takes any integer number `number` (`1 <= number <= 10^7`) as first argument and any integer number `base` (`2 <= base <= 256`) as second argument. You should calculate *how many zeros in the end of number, which is factorial of `number` in `base` base system*

For example:
```js
    const zerosCount = getZerosCount(10, 10); // Factorial of 10 is 3628800 and the same in 10th base system
    console.log(zerosCount); // 2. Because there is 2 *tail* zeros in number 3628800
```

```js
    const zerosCount = getZerosCount(16, 16); // Factorial of 16 is 20922789888000 in 10th base system and *130777758000* in 16th base system
    console.log(zerosCount); // 3. Because there is 3 *tail* zeros in number *130777758000*
```

### Important!
Do not try to calculate factorial! First - you will not get exact answer on big numbers. Second - it could take several years to calculate factorial on big integers! Try to think up your awesome solution without such calculations. Good luck!",,2018-02-19T08:49:49Z,2018-03-12T20:41:12Z,2,0,11,3,"('Aliaksandr Yankouski', 2), ('yankouskia', 1)",1,0,
tzmartin/Ti-Amazon-S3,Amazon S3 CommonJS module for Appcelerator Alloy / Titanium SDK,"# Ti Amazon S3

A CommonJS module for Amazon S3.



Module location: `/blob/master/app/assets/modules/ti.amazon.s3.js`

*This is a mobile app test case, built using Appcelerator Alloy / Titanium Mobile SDK.*

```
Version: v1.1
Tested: Titanium SDK v5.3.1.GA
```

![test](https://raw.githubusercontent.com/tzmartin/Ti-Amazon-S3/master/screencast.gif)

[Watch the Vimeo link](http://vimeo.com/107978881)

## Description

Upload media files directly to an Amazon S3 bucket using signed URLs and [Amazon's REST API](http://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html).  This app contains a JavaScript module that simplifies the authorization flow and makes is EASY PEASY LEMON SQUEEZY!

## Example Apps

|   |  App | Publisher  | Description  | 
|---|---|---|---|
|  [![Whichiscooler](http://a3.mzstatic.com/us/r30/Purple20/v4/84/4f/9a/844f9a97-d1af-2bd8-9a38-d2e43f4ed525/icon90x90.png)](https://itunes.apple.com/us/app/whichiscooler/id971389872?mt=8#) |  **Whichiscooler** | [S. Marston Maddox](http://www.whichiscooler.com/)  |  Whichiscooler is a tool to discover and share the coolest things.
 |

[Add your app](https://github.com/tzmartin/Ti-Amazon-S3/issues/new)

## How to Use

    Alloy.Globals.AWS = require('modules/ti.amazon.s3');

    Alloy.Globals.AWS.PUT({
    	key: 'YOUR KEY',
    	secret: 'YOUR SECRET',
		bucket: 'YOUR BUCKET',
		GSM:' -0700',
		debug:true,
		fileName: FILE_TO_UPLOAD,
		uploadDir: 'PATH_TO_UPLOAD_DIR_ON_S3',
		timeout: 99000,
		onsendstream: function(e) {},
		error: function(e) {},
		success: function(e) {
			Ti.API.info('DONE!!')
		}
	});

Note: This is a complete rewrite. If you used this project in the past, delete the old one and import this one.

A single module file lives in the ```app/assets/modules/``` directory.

![Assets folder](https://monosnap.com/image/ytTb2RNWPYd6h5NdfJMUTnPpT0679V.png)

**Alternatively**

You can compile this JavaScript file into a native module and ship it as a static binary.  If you're interested, download this zip file [ti.amazon.s3-iphone-1.1.0.zip](https://raw.githubusercontent.com/tzmartin/Ti-Amazon-S3/master/dist/ti.amazon.s3-iphone-1.1.0.zip) and add it to your ```tiapp.xml```.

Instatiate it using ```require('ti.amazon.s3');```.

## Requirements

### Amazon Configuration

[Obtain S3 credentials](https://aws-portal.amazon.com/gp/aws/developer/account/index.html?action=access-key) and set a bucket policy.  You can use Amazon's [policy generator](http://awspolicygen.s3.amazonaws.com/policygen.html) if needed.  Simply save this policy to your bucket properties.  Here's a tutorial if needed:[http://www.jppinto.com/2011/12/access-denied-to-file-amazon-s3-bucket/](http://www.jppinto.com/2011/12/access-denied-to-file-amazon-s3-bucket/).

Login to your console here: [https://console.aws.amazon.com/s3/home](https://console.aws.amazon.com/s3/home)

Here's an example policy:

```
{
  ""Id"": ""Policy1412292920796"",
  ""Statement"": [
    {
      ""Sid"": ""Stmt1412292914309"",
      ""Action"": [
        ""s3:GetObject"",
        ""s3:PutObject""
      ],
      ""Effect"": ""Allow"",
      ""Resource"": ""arn:aws:s3:::tzmartin.com.files/*"",
      ""Principal"": {
        ""AWS"": [
          ""*""
        ]
      }
    }
  ]
}
```

Upload an image, then visit the bucket: https://s3.amazonaws.com/BUCKETNAME/FILENAME.png

![Easy Peasy Lemon Squeezy](https://www.supergaminator.com/Content/images/assets/GameAssets/game_317/game_317_logo_800x364_DEFAULT.png)

### Titanium SDK Compilation

You must have the following requirements to compile this app:

- A valid Appcelerator Platform account (free or paid):
	- [Sign up](http://www.appcelerator.com/signup) for an Appcelerator Platform account
- [Appcelerator Studio](https://platform.appcelerator.com/#/product/studio) should be installed and ready for use
- The latest Titanium SDK installation ([requirements](http://docs.appcelerator.com/platform/latest/#!/guide/Prerequisites))
- [Oracle JDK](http://docs.appcelerator.com/platform/latest/#!/guide/Installing_Oracle_JDK)
- [Node.js](http://docs.appcelerator.com/platform/latest/#!/guide/Installing_Node): required for the Titanium command-line tools like the CLI, Alloy and Arrow.
- iOS and/or Android SDK installation

*Note: To minimize the risk of problems, please refer to the [Titanium Compatibility Matrix](http://docs.appcelerator.com/platform/latest/#!/guide/Titanium_Compatibility_Matrix) whenever you make changes to your Titanium environment.*

### Changelog

- 07-29-2016
  - Update README: add example app
  - Bump to Ti SDK v5.3.1.GA
- 05-13-2015
	- Android works! (Fixed: Android fails to upload properly. 400 server response.)
  - Bump Ti SDK v5.2.2.GA
- 10-2-2014
	- Complete app rewrite to 3.4.0.GA SDK
	- Demo app now runs Alloy 1.4
	- Removed additional module depencies. Now it's a single commonJS file.
	- Simplified constructor and removed ```config``` and ```load``` methods.  Now just pass properties to ```PUT```.
- 3-8-2012
	- Initial release

### Known Issues:

**[Create a ticket](https://github.com/tzmartin/Ti-Amazon-S3/issues/new)**

## License

@authors

-   Terry Martin 

@license    

Copyright (c) 2011, Semantic Press, Inc. 

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the
""Software""), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
",,2012-03-09T01:07:09Z,2016-07-30T01:11:08Z,3,3,59,16,"('tzmartin', 17), ('Sophrinix', 1), ('tdtsh', 1)",2,2,
kid-icarus/lysergix,B),"##Lysergix
[![view on
requirebin](http://requirebin.com/badge.png)](http://requirebin.com/?gist=345645c2e31000d7f4f9)

A database of emoticons. An api for pulling utf8 emoticons from the database.

For use on client or server :heart:

###Installation
`npm install lysergix`

###Usage
```javascript
var lysergix = require('lysergix')
lysergix.getTags() // returns an array of 'tags' for faces
lysergix.getRandomFace() // returns a random smiley face.
lysergix.getRandomFace('sadboi') // returns a random 'sadboi' smiley face.
lysergix.getRandomFace(['sadboi', 'angry']) // returns a random 'sadboi' or 'angry' smiley face.
lysergix.getFace(1234) // returns the 1234th face in the array of faces.
lysergix.asciiFilter() // returns an array of faces that are ascii only.
```

###Face structure:
The in-memory database of faces is have a simple structure:
```javascript
{
  content: 'the actual face',
  tag: 'a single category of face'
}
```
",,2014-05-03T14:26:14Z,2014-09-24T09:55:25Z,3,3,23,1,"('kid-icarus', 18), ('rozap', 1), ('forivall', 1)",2,2,
luispedro/BuildingMachineLearningSystemsWithPython,Source Code for the book Building Machine Learning Systems with Python,"Building Machine Learning Systems with Python
=============================================

Source Code for the book Building Machine Learning Systems with Python by [Luis
Pedro Coelho](http://luispedro.org) and [Willi Richert](http://twotoreal.com).

The book was published in 2013 (second edition in 2015) by Packt Publishing and
is available [from their
website](http://www.packtpub.com/building-machine-learning-systems-with-python/book).

The code in the repository corresponds to the second edition. Code for the
first edition is available in [first\_edition
branch](https://github.com/luispedro/BuildingMachineLearningSystemsWithPython/tree/first_edition).

",,2013-09-25T07:10:26Z,2020-12-24T20:06:58Z,7,7,2114,254,"('luispedro', 193), ('wrichert', 64), ('re4lfl0w', 4), ('juanpabloaj', 1), ('iory', 1), ('ao-song', 1), ('tomahawk28', 1)",4,4,
RoaringBitmap/RoaringBitmap,"A better compressed bitset in Java: used by Apache Spark, Netflix Atlas, Apache Pinot, Tablesaw, and many others","RoaringBitmap
=============
[![][license img]][license]
[![docs-badge][]][docs]
![Java 11 CI](https://github.com/RoaringBitmap/RoaringBitmap/workflows/Java%2011%20CI/badge.svg)

Bitsets, also called bitmaps, are commonly used as fast data structures.
Unfortunately, they can use too much memory. To compensate, we often use
compressed bitmaps.

Roaring bitmaps are compressed bitmaps which tend to outperform conventional
compressed bitmaps such as WAH, EWAH or Concise. In some instances, roaring bitmaps can
be hundreds of times faster and they often offer significantly better compression.
They can even be faster than uncompressed bitmaps.

Roaring bitmaps are found to work well in many important applications:

> Use Roaring for bitmap compression whenever possible. Do not use other bitmap compression methods ([Wang et al., SIGMOD 2017](http://db.ucsd.edu/wp-content/uploads/2017/03/sidm338-wangA.pdf))

> kudos for making something that makes my software run 5x faster (Charles Parker from BigML)

This library is used by
*   [Apache Spark](http://spark.apache.org/),
*   [Apache Hive](http://hive.apache.org),
*   [Apache Tez](http://tez.apache.org),
*   [Apache Kylin](http://kylin.io),
*   [Apache CarbonData](https://carbondata.apache.org),
*   [Netflix Atlas](https://github.com/Netflix/atlas),
*   [OpenSearchServer](http://www.opensearchserver.com),
*   [zenvisage](http://zenvisage.github.io/),
*   [Jive Miru](https://github.com/jivesoftware/miru),
*   [Tablesaw](https://github.com/jtablesaw/tablesaw),
*   [Apache Hivemall](http://hivemall.incubator.apache.org),
*   [Gaffer](https://github.com/gchq/Gaffer),
*   [Apache Pinot](https://pinot.apache.org/),
*   [Apache Druid](https://druid.apache.org/),
*   [SirixDB](https://sirix.io)
*   [EvitaDB](https://evitadb.io/)
*   [Apache Iceberg](https://iceberg.apache.org/)


The YouTube SQL Engine, [Google Procella](https://research.google/pubs/pub48388/), uses Roaring bitmaps for indexing. [Apache Lucene](http://lucene.apache.org/) uses  Roaring bitmaps, though they have their own [independent implementation](https://svn.apache.org/viewvc/lucene/dev/branches/branch_5x/lucene/core/src/java/org/apache/lucene/util/RoaringDocIdSet.java?view=markup&pathrev=1629606). Derivatives of Lucene such as Solr and Elastic also use Roaring bitmaps.
Other platforms such as [Whoosh](https://pypi.python.org/pypi/Whoosh/), [Microsoft Visual Studio Team Services (VSTS)](https://www.visualstudio.com/team-services/) and [Pilosa](https://github.com/pilosa/pilosa) also use Roaring bitmaps with their own implementations. You find Roaring bitmaps in [InfluxDB](https://www.influxdata.com), [Bleve](http://www.blevesearch.com), [Cloud Torrent](https://github.com/jpillora/cloud-torrent), [Redpanda](https://github.com/redpanda-data/redpanda), and so forth.


[There is a serialized format specification for interoperability between implementations](https://github.com/RoaringBitmap/RoaringFormatSpec/).
We have interoperable [C/C++](https://github.com/RoaringBitmap/CRoaring), Java and [Go](https://github.com/RoaringBitmap/roaring) implementations.

(c) 2013-... the RoaringBitmap authors


This code is licensed under Apache License, Version 2.0 (AL2.0).



When should you use a bitmap?
===================================


Sets are a fundamental abstraction in
software. They can be implemented in various
ways, as hash sets, as trees, and so forth.
In databases and search engines, sets are often an integral
part of indexes. For example, we may need to maintain a set
of all documents or rows  (represented by numerical identifier)
that satisfy some property. Besides adding or removing
elements from the set, we need fast functions
to compute the intersection, the union, the difference between sets, and so on.


To implement a set
of integers, a particularly appealing strategy is the
bitmap (also called bitset or bit vector). Using n bits,
we can represent any set made of the integers from the range
[0,n): the ith bit is set to one if integer i is present in the set.
Commodity processors use words of W=32 or W=64 bits. By combining many such words, we can
support large values of n. Intersections, unions and differences can then be implemented
 as bitwise AND, OR and ANDNOT operations.
More complicated set functions can also be implemented as bitwise operations.

When the bitset approach is applicable, it can be orders of
magnitude faster than other possible implementation of a set (e.g., as a hash set)
while using several times less memory.

However, a bitset, even a compressed one is not always applicable. For example, if 
you have 1000 random-looking integers, then a simple array might be the best representation.
We refer to this case as the ""sparse"" scenario.

When should you use compressed bitmaps?
===================================

An uncompressed BitSet can use a lot of memory. For example, if you take a BitSet
and set the bit at position 1,000,000 to true and you have just over 100kB. That is over 100kB
to store the position of one bit. This is wasteful  even if you do not care about memory:
suppose that you need to compute the intersection between this BitSet and another one
that has a bit at position 1,000,001 to true, then you need to go through all these zeroes,
whether you like it or not. That can become very wasteful.

This being said, there are definitively cases where attempting to use compressed bitmaps is wasteful.
For example, if you have a small universe size. E.g., your bitmaps represent sets of integers
from [0,n) where n is small (e.g., n=64 or n=128). If you can use an uncompressed BitSet and
it does not blow up your memory usage,  then compressed bitmaps are probably not useful
to you. In fact, if you do not need compression, then a BitSet offers remarkable speed.

The sparse scenario is another use case where compressed bitmaps should not be used.
Keep in mind that random-looking data is usually not compressible. E.g., if you have a small set of
32-bit random integers, it is not mathematically possible to use far less than 32 bits per integer,
and attempts at compression can be counterproductive.

How does Roaring compare with the alternatives?
==================================================


Most alternatives to Roaring are part of a larger family of compressed bitmaps that are run-length-encoded
bitmaps. They identify long runs of 1s or 0s and they represent them with a marker word.
If you have a local mix of 1s and 0, you use an uncompressed word.

There are many formats in this family:

* Oracle's BBC (Byte-aligned Bitmap Code) is an obsolete format at this point: though it may provide good compression,
it is likely much slower than more recent alternatives due to excessive branching.
* WAH (Word Aligned Hybrid) is a patented variation on BBC that provides better performance.
* Concise is a variation on the patented WAH. In some specific instances, it can compress
much better than WAH (up to 2x better), but it is generally slower.
* EWAH (Enhanced Word Aligned Hybrid) is both free of patent, and it is faster than all the above. On the downside, it
does not compress quite as well. It is faster because it allows some form of ""skipping""
over uncompressed words. So though none of these formats are great at random access, EWAH
is better than the alternatives.



There is a big problem with these formats however that can hurt you badly in some cases: there is no random access. If you want to check whether a given value is present in the set, you have to start from the beginning and ""uncompress"" the whole thing. This means that if you want to intersect a big set with a large set, you still have to uncompress the whole big set in the worst case...

Roaring solves this problem. It works in the following manner. It divides the data into chunks of 216 integers
(e.g., [0, 216), [216, 2 x 216), ...). Within a chunk, it can use an uncompressed bitmap, a simple list of integers,
or a list of runs. Whatever format it uses, they all allow you to check for the presence of any one value quickly
(e.g., with a binary search). The net result is that Roaring can compute many operations much faster than run-length-encoded
formats like WAH, EWAH, Concise... Maybe surprisingly, Roaring also generally offers better compression ratios.



API docs
---------

http://www.javadoc.io/doc/org.roaringbitmap/RoaringBitmap/

Scientific Documentation
--------------------------

- Daniel Lemire, Owen Kaser, Nathan Kurz, Luca Deri, Chris O'Hara, François Saint-Jacques, Gregory Ssi-Yan-Kai, Roaring Bitmaps: Implementation of an Optimized Software Library, Software: Practice and Experience 48 (4), 2018 [arXiv:1709.07821](https://arxiv.org/abs/1709.07821)
-  Samy Chambi, Daniel Lemire, Owen Kaser, Robert Godin,
Better bitmap performance with Roaring bitmaps,
Software: Practice and Experience 46 (5), 2016. [arXiv:1402.6407](http://arxiv.org/abs/1402.6407) This paper used data from http://lemire.me/data/realroaring2014.html
- Daniel Lemire, Gregory Ssi-Yan-Kai, Owen Kaser, Consistently faster and smaller compressed bitmaps with Roaring, Software: Practice and Experience 46 (11), 2016. [arXiv:1603.06549](http://arxiv.org/abs/1603.06549)
- Samy Chambi, Daniel Lemire, Robert Godin, Kamel Boukhalfa, Charles Allen, Fangjin Yang, Optimizing Druid with Roaring bitmaps, IDEAS 2016, 2016. http://r-libre.teluq.ca/950/

Code sample
-------------

```java        
import org.roaringbitmap.RoaringBitmap;

public class Basic {

  public static void main(String[] args) {
        RoaringBitmap rr = RoaringBitmap.bitmapOf(1,2,3,1000);
        RoaringBitmap rr2 = new RoaringBitmap();
        rr2.add(4000L,4255L);
        rr.select(3); // would return the third value or 1000
        rr.rank(2); // would return the rank of 2, which is index 1
        rr.contains(1000); // will return true
        rr.contains(7); // will return false

        RoaringBitmap rror = RoaringBitmap.or(rr, rr2);// new bitmap
        rr.or(rr2); //in-place computation
        boolean equals = rror.equals(rr);// true
        if(!equals) throw new RuntimeException(""bug"");
        // number of values stored?
        long cardinality = rr.getLongCardinality();
        System.out.println(cardinality);
        // a ""forEach"" is faster than this loop, but a loop is possible:
        for(int i : rr) {
          System.out.println(i);
        }
  }
}
```

Please see the examples folder for more examples, which you can run with `./gradlew :examples:runAll`, or run a specific one with `./gradlew :examples:runExampleBitmap64`, etc.


Unsigned integers
------------------

Java lacks native unsigned integers but integers are still considered to be unsigned within Roaring and ordered according to ``Integer.compareUnsigned``. This means that Java will order the numbers like so 0, 1, ..., 2147483647, -2147483648, -2147483647,..., -1. To interpret correctly, you can use ``Integer.toUnsignedLong`` and ``Integer.toUnsignedString``.


Working with memory-mapped bitmaps
---------------------------------------

If you want to have your bitmaps lie in memory-mapped files, you can
use the org.roaringbitmap.buffer package instead. It contains two
important classes, ImmutableRoaringBitmap and MutableRoaringBitmap.
MutableRoaringBitmaps are derived from ImmutableRoaringBitmap, so that
you can convert (cast) a MutableRoaringBitmap to an ImmutableRoaringBitmap
in constant time.

An ImmutableRoaringBitmap that is not an instance of a MutableRoaringBitmap
is backed by a ByteBuffer which comes with some performance overhead, but
with the added flexibility that the data can reside anywhere (including outside
of the Java heap).

At times you may need to work with bitmaps that reside on disk (instances
of ImmutableRoaringBitmap) and bitmaps that reside in Java memory. If you
know that the bitmaps will reside in Java memory, it is best to use
MutableRoaringBitmap instances, not only can they be modified, but they
will also be faster. Moreover, because MutableRoaringBitmap instances are
also ImmutableRoaringBitmap instances, you can write much of your code
expecting ImmutableRoaringBitmap.

If you write your code expecting ImmutableRoaringBitmap instances, without
attempting to cast the instances, then your objects will be truly immutable.
The MutableRoaringBitmap has a convenience method (toImmutableRoaringBitmap)
which is a simple cast back to an ImmutableRoaringBitmap instance.
From a language design point of view, instances of the ImmutableRoaringBitmap class are immutable only when used as per
the interface of the ImmutableRoaringBitmap class. Given that the class is not final, it is possible
to modify instances, through other interfaces. Thus we do not take the term ""immutable"" in a purist manner,
but rather in a practical one.

One of our motivations for this design where MutableRoaringBitmap instances can be casted
down to ImmutableRoaringBitmap instances is that bitmaps are often large,
or used in a context where memory allocations are to be avoided, so we avoid forcing copies.
Copies could be expected if one needs to mix and match ImmutableRoaringBitmap and MutableRoaringBitmap instances.

The following code sample illustrates how to create an ImmutableRoaringBitmap
from a ByteBuffer. In such instances, the constructor only loads the meta-data
in RAM while the actual data is accessed from the ByteBuffer on demand.

```java
        import org.roaringbitmap.buffer.*;

        //...

        MutableRoaringBitmap rr1 = MutableRoaringBitmap.bitmapOf(1, 2, 3, 1000);
        MutableRoaringBitmap rr2 = MutableRoaringBitmap.bitmapOf( 2, 3, 1010);
        ByteArrayOutputStream bos = new ByteArrayOutputStream();
        DataOutputStream dos = new DataOutputStream(bos);
        // If there were runs of consecutive values, you could
        // call rr1.runOptimize(); or rr2.runOptimize(); to improve compression
        rr1.serialize(dos);
        rr2.serialize(dos);
        dos.close();
        ByteBuffer bb = ByteBuffer.wrap(bos.toByteArray());
        ImmutableRoaringBitmap rrback1 = new ImmutableRoaringBitmap(bb);
        bb.position(bb.position() + rrback1.serializedSizeInBytes());
        ImmutableRoaringBitmap rrback2 = new ImmutableRoaringBitmap(bb);
```

Alternatively, we can serialize directly to a `ByteBuffer` with the `serialize(ByteBuffer)` method.


Operations on an ImmutableRoaringBitmap such as and, or, xor, flip, will
generate a RoaringBitmap which lies in RAM. As the name suggest, the
ImmutableRoaringBitmap itself cannot be modified.


This design was inspired by Druid.

One can find a complete working example in the test file TestMemoryMapping.java.

Note that you should not mix the classes from the org.roaringbitmap package with the classes
from the org.roaringbitmap.buffer package. They are incompatible. They serialize
to the same output however. The performance of the code in org.roaringbitmap package is
generally superior because there is no overhead due to the use of ByteBuffer instances.


Kryo
-----

Many applications use Kryo for serialization/deserialization. One can
use Roaring bitmaps with Kryo efficiently thanks to a custom serializer (Kryo 5):

```java
public class RoaringSerializer extends Serializer {
    @Override
    public void write(Kryo kryo, Output output, RoaringBitmap bitmap) {
        try {
            bitmap.serialize(new KryoDataOutput(output));
        } catch (IOException e) {
            e.printStackTrace();
            throw new RuntimeException();
        }
    }
    @Override
    public RoaringBitmap read(Kryo kryo, Input input, Class type) {
        RoaringBitmap bitmap = new RoaringBitmap();
        try {
            bitmap.deserialize(new KryoDataInput(input));
        } catch (IOException e) {
            e.printStackTrace();
            throw new RuntimeException();
        }
        return bitmap;
    }

}
```

64-bit integers (long)
-----------------------

Though Roaring Bitmaps were designed with the 32-bit case in mind, we have extensions to 64-bit integers.
We offer two classes for this purpose: `Roaring64NavigableMap` and `Roaring64Bitmap`.

The `Roaring64NavigableMap` relies on a conventional red-black-tree. The keys are 32-bit integers representing
the most significant 32~bits of  elements
whereas the values of the tree are 32-bit Roaring bitmaps. The 32-bit Roaring bitmaps represent the least significant
bits of a set of elements.

The newer `Roaring64Bitmap` approach relies on the ART data structure to hold the key/value pair. The key 
 is made of the most significant 48~bits of elements whereas the values are 16-bit Roaring containers. It is inspired by
 [The Adaptive Radix Tree: ARTful Indexing for Main-Memory Databases](https://db.in.tum.de/~leis/papers/ART.pdf) by Leis et al. (ICDE '13).

```java
    import org.roaringbitmap.longlong.*;

    
    // first Roaring64NavigableMap
    LongBitmapDataProvider r = Roaring64NavigableMap.bitmapOf(1,2,100,1000);
    r.addLong(1234);
    System.out.println(r.contains(1)); // true
    System.out.println(r.contains(3)); // false
    LongIterator i = r.getLongIterator();
    while(i.hasNext()) System.out.println(i.next());


    // second Roaring64Bitmap
    bitmap1 = new Roaring64Bitmap();
    bitmap2 = new Roaring64Bitmap();
    int k = 1 << 16;
    long i = Long.MAX_VALUE / 2;
    long base = i;
    for (; i < base + 10000; ++i) {
       bitmap1.add(i * k);
       bitmap2.add(i * k);
    }
    b1.and(bitmap2);
```

The serialization of 64-bit Roaring bitmaps is specified: see
https://github.com/RoaringBitmap/RoaringFormatSpec#extention-for-64-bit-implementations

However, it is implemented only by `Roaring64NavigableMap`, by switching:

    Roaring64NavigableMap.SERIALIZATION_MODE = Roaring64NavigableMap.SERIALIZATION_MODE_PORTABLE

Range Bitmaps
-------------

`RangeBitmap` is a succinct data structure supporting range queries.
Each value added to the bitmap is associated with an incremental identifier,
and queries produce a `RoaringBitmap` of the identifiers associated with values
that satisfy the query. Every value added to the bitmap is stored separately, 
so that if a value is added twice, it will be stored twice, and if that value 
is less than some threshold, there will be at least two integers in the resultant
`RoaringBitmap`.

It is more efficient - in terms of both time and space - to 
provide a maximum value. If you don't know the maximum value,
provide a `Long.MAX_VALUE`. Unsigned order is used like elsewhere in
the library.

```java
var appender = RangeBitmap.appender(1_000_000);
appender.add(1L);
appender.add(1L);
appender.add(100_000L);
RangeBitmap bitmap = appender.build();
RoaringBitmap lessThan5 = bitmap.lt(5); // {0,1}
RoaringBitmap greaterThanOrEqualTo1 = bitmap.gte(1); // {0, 1, 2}
RoaringBitmap greaterThan1 = bitmap.gt(1); // {2}
RoaringBitmap equalTo1 = bitmap.eq(1); // {0, 1}
RoaringBitmap notEqualTo1 = bitmap.neq(1); // {2}
```

`RangeBitmap` is can be written to disk and memory mapped:

```java
var appender = RangeBitmap.appender(1_000_000);
appender.add(1L);
appender.add(1L);
appender.add(100_000L);
ByteBuffer buffer = mapBuffer(appender.serializedSizeInBytes());
appender.serialize(buffer);
RangeBitmap bitmap = RangeBitmap.map(buffer);
```

The serialization format uses little endian byte order.

Prerequisites
-------------


 - Version 0.7.x requires JDK 8 or better
 - Version 0.6.x requires JDK 7 or better
 - Version 0.5.x requires JDK 6 or better

To build the project you need maven (version 3).


Download
---------

You can download releases from github:
https://github.com/RoaringBitmap/RoaringBitmap/releases

Maven repository
----------------
If your project depends on roaring, you  can  specify the dependency in the Maven ""pom.xml"" file:

```xml
        
          
            org.roaringbitmap
            RoaringBitmap
            0.9.9
          
        
```

where you should replace the version number by the version you require.

[For up-to-date releases, we recommend configuring maven and gradle to depend on the Jitpack repository](https://jitpack.io/#RoaringBitmap/RoaringBitmap). 

Usage
------

* Get java

* ``./gradlew assemble`` will compile
* ``./gradlew build`` will compile and run the unit tests
* ``./gradlew test `` will run the tests
* ``./gradlew :roaringbitmap:test --tests TestIterators.testIndexIterator4`` runs just the test `TestIterators.testIndexIterator4`; `./gradlew -i :roaringbitmap:test --tests TestRoaringBitmap.issue623` runs just the test `issue623` in the class ` TestRoaringBitmap` while printing out to the console.
* ``./gradlew  bsi:test --tests BufferBSITest.testEQ``  run just the test `BufferBSITest.testEQ` in the `bsi` submodule
* ``./gradlew checkstyleMain`` will check that you abide by the code style and that the code compiles. We enforce a strict style so that there is no debate as to the proper way to format the code.


IntelliJ and Eclipse
--------

If you plan to contribute to RoaringBitmap, you can have load
it up in your favorite IDE.
- For IntelliJ, in the IDE create a new project, possibly from existing sources, choose import, gradle.
- For Eclipse: File, Import, Existing Gradle Projects, Select RoaringBitmap on my disk

Contributing
------------

Contributions are invited. We enforce the Google Java style.
Please run  ``./gradlew checkstyleMain`` on your code before submitting
a patch.

FAQ
----

* I am getting an error about a bad cookie. What is this about?

In the serialized files, part of the first 4 bytes are dedicated to a ""cookie""
which serves to indicate the file format.

If you try to deserialize or map a bitmap from data that has an
unrecognized ""cookie"", the code will abort the process and report
an error.

This problem will occur to all users who serialized Roaring bitmaps
using versions prior to 0.4.x as they upgrade to version 0.4.x or better.
These users need to refresh their serialized bitmaps.

* How big can a Roaring bitmap get?

Given N integers in [0,x), then the serialized size in bytes of
a Roaring bitmap should never exceed this bound:

`` 8 + 9 * ((long)x+65535)/65536 + 2 * N ``

That is, given a fixed overhead for the universe size (x), Roaring
bitmaps never use more than 2 bytes per integer. You can call
``RoaringBitmap.maximumSerializedSize`` for a more precise estimate.

* What is the worst case scenario for Roaring bitmaps?

There is no such thing as a data structure that is always ideal. You should
make sure that Roaring bitmaps fit your application profile.
There are at least two cases where Roaring bitmaps can be easily replaced
by superior alternatives compression-wise:

1. You have few random values spanning in a large interval (i.e., you have
a very sparse set). For example, take the set 0, 65536, 131072, 196608, 262144 ...
If this is typical of your application, you might consider using a HashSet or
a simple sorted array.

2. You have dense set of random values that never form runs of continuous
values. For example, consider the set 0,2,4,...,10000. If this is typical of your
application, you might be better served with a conventional bitset (e.g., Java's BitSet class).

* How do I select an element at random?

         Random random = new Random();
         bitmap.select(random.nextInt(bitmap.getCardinality()));


Benchmark
-----------

To run JMH benchmarks, use the following command:

         $ ./gradlew jmhJar

You can also run specific benchmarks...

         $ ./jmh/run.sh 'org.roaringbitmap.aggregation.and.identical.*'


Mailing list/discussion group
-----------------------------

https://groups.google.com/forum/#!forum/roaring-bitmaps

Funding
----------

This work was supported by NSERC grant number 26143.



[maven img]:https://maven-badges.herokuapp.com/maven-central/org.roaringbitmap/RoaringBitmap/badge.svg
[maven]:http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22org.roaringbitmap%22%20

[license]:LICENSE-2.0.txt
[license img]:https://img.shields.io/badge/License-Apache%202-blue.svg

[docs-badge]:https://img.shields.io/badge/API-docs-blue.svg?style=flat-square
[docs]:http://www.javadoc.io/doc/org.roaringbitmap/RoaringBitmap/
","'bitset', 'druid', 'java', 'lucene', 'roaring-bitmaps', 'roaringbitmap', 'spark'",2013-06-17T20:29:23Z,2024-06-18T13:39:22Z,83,69,3421,133,"('lemire', 1611), ('gssiyankai', 144), ('richardstartin', 141), ('samytto', 98), ('blacelle', 65), ('owenkaser', 51), ('xtonik', 43), ('ppiotrow', 38), ('=Benoit Lacelle', 23), ('okrische', 10), ('gpunti', 8), ('larsk-db', 8), ('JervenBolleman', 7), ('weijietong', 6), ('Maithem', 5), ('Owen Kaser', 5), ('Borislav Ivanov', 4), ('George Kankava', 4), ('marshallpierce', 3), ('maciej', 3), ('kishoreg', 3), ('incaseoftrouble', 3), ('Simeon Pilgrim', 3), ('rorygraves', 3), ('Junyuan Zheng', 3), ('Dmitry Cherniachenko', 3), ('DanielThomas', 3), ('Daniel Lemire', 3), ('navis', 2), ('sivaraam', 2), ('gianm', 2), ('sullis', 2), ('samytto', 2), ('LeeWorrall', 2), ('gskeno', 2), ('huangfeng1993', 2), ('ashishkf', 2), ('simeonpilgrim', 2), ('clintropolis', 2), ('akazakov', 2), ('amitdesai03', 2), ('Daniel Lemire', 2), ('khitrin', 2), ('Kineolyan', 2), ('OPeyrusse', 2), ('Rafael Telles', 2), ('sethp-jive', 2), ('smmathews-cision-us', 2), ('mdouaihy', 1), ('msrdic', 1), ('nuwansa', 1), ('boidolr', 1), ('RickMoynihan', 1), ('shikharid', 1), ('sesuncedu', 1), ('yizishou', 1), ('zhongyujiang', 1), ('caoxiaoyuan7242', 1), ('dna0ff', 1), ('gssiyankai', 1), ('haibow', 1), ('hqx871', 1), ('juris', 1), ('lgtm-combot', 1), ('dao-jun', 1), ('arturowczarek', 1), ('ashley-taylor', 1), ('spebbe', 1), ('bpot', 1), ('shencangsheng', 1), ('caniszczyk', 1), ('gorset', 1), ('Fokko', 1), ('damnMeddlingKid', 1), ('medb', 1), ('javier-godoy', 1), ('JohannesLichtenberger', 1), ('Jon Alvarado', 1), ('sirpkt', 1), ('stiemannkj1', 1), ('awsles', 1), ('MagalieElOsta', 1), ('wagnermarkd', 1)",35,32,
esimov/gospline,Implementing b-spline curves in Go,"# gospline
Gospline is little Go library for transforming straight lines into curves.

The library is written in a modular way which means that it can be plugged in into different rendering methods. The examples provided below renders the resulted curves into image and svg, but since it has been developed using Go's philosophy of inheritance over encapsulation, it should supports other types of outputs until they implements the io.Writer interface.

To render the output as image, the library implements the Xiaolin Wu antialiasing method, if the provided parameter is true, otherwise it implements the Bresenham line algorithm. This means the library is not using the default Go github.com/golang/freetype/raster package for rendering.

```go
func (img *Canvas) DrawLine(x1, y1, x2, y2 float64, col color.Color, antialiased bool) *Canvas {
	if antialiased {
		xiaolinWuLine(img, x1, y1, x2, y2, col.(color.NRGBA))
	} else {
		bresenhamLine(img, x1, y1, x2, y2, col.(color.NRGBA))
	}
	return img
}
```

## Installation
```bash
$ go get -u -f github.com/esimov/gospline
```

## Examples
Some test files have been included into the example directory. To run them type:
`go run examples/draw.go` for example.

This is how you initialize the base method:

```go
spline := NewBSpline(points, 3, false)
spline.Init()
```
...where the 2nd paramether means the degree of curvature. 

Below is an example to render the spline as svg in the web browser.

```go
svg := &spline.SVG{
  Width: width,
  Height: height,
  Title: ""BSpline"",
  Lines: []spline.Line{},
  Color: color.NRGBA{R:255,G:0,B:0,A:255},
  Description: ""Convert straight lines to curves"",
  StrokeWidth: 2,
  StrokeLineCap: ""round"", //butt, round, square
}

handler := func(w http.ResponseWriter, r *http.Request) {
  w.Header().Set(""Content-Type"", ""image/svg+xml"")
  svg.Draw(w, points, false)
}
http.HandleFunc(""/"", handler)
http.ListenAndServe(""localhost:8000"", nil)
```
and the corresponding method to render the output into an image.

```go
raster := &spline.Image{
  Width : width,
  Height : height,
  Color : color.NRGBA{R:255,G:0,B:0,A:255},
}
output, _ := os.Create(""./samples/curve.png"")
defer output.Close()
raster.Draw(output, points, true)
```

You can even use the debug option to show the original lines.

```go
// Draw original line
if debug {
  for i:=0; i < len(points)-1; i++ {
    raster = canvas.DrawLine(points[i][0], points[i][1], points[i+1][0], points[i+1][1], color.NRGBA{R:155,G:155,B:155,A:70 }, false)
  }
}
```
This will produce an image like this with antialiasing mode set to true.


## License

This software is distributed under the MIT license found in the LICENSE file.
","'curves', 'go', 'spline', 'svg'",2017-01-11T09:22:59Z,2020-12-14T10:31:24Z,2,1,37,3,"('esimov', 19), ('Endre Simo', 1)",1,0,
ccshiro/cc-buglist,Corecraft's issue tracker,"cc-buglist
==========

temporary buglist for corecraft's test phase

some bugs need research, they're marked with the needs-research label.
we're always thankful to people helping us find evidence for those
reports. cheers!

Link to issues needing research: https://github.com/ccshiro/cc-buglist/labels/needs%20research

Link to all issues: https://github.com/ccshiro/cc-buglist/issues
",,2014-10-21T21:30:51Z,2014-10-31T13:26:55Z,1,1,43,29,"('ccshiro', 3)",0,0,
conanwhf/RaspberryPi-script,RaspberryPi 2-B script,"# RaspberryPi-script
树莓派相关配置&脚本，适用于rpi2B及3B硬件。

## rpi-backup
备份系统成一个可烧录的image，详细说明参见：http://conanwhf.github.io/2016/08/25/rpi-cloneimg/


## rpi-clone
一个超好用的备份工具，感谢开发者！
来源：https://github.com/billw2/rpi-clone

## build-编译脚本
- build-toolchain.sh，在debian的系统中编译交叉编译工具的脚本
- crossng_config，交叉编译工具编译配置文件，适用于rpi2B和rpi3B
- kernel_config，内核配置，来源于官方
- kernel.sh，内核编译脚本，跑在树莓派上
- linux-mk.sh，内核编译脚本，跑在PC上，交叉编译

## setup-配置脚本
参考初始化配置运行顺序：network.sh-> init.sh-> dev-mod.sh
- dev-mod.sh，一些开发用模块的装载和配置脚本，包括语音输出，开发环境，Airmon工具，Swift环境等
- init.sh，初始配置，包括系统更新，vi & SSH配置，中文支持，USB供电修改，Samba支持等
- interfaces,tightvncserver,vimrc，脚本运行所需对应的配置文件

## sensor
一些外部传感器获取状态的Demo，Python写成，rpi2B测试通过
- libSetup.sh，开发包环境配置脚本，包括I2C,GPIO,UART,Bluetooth等
- air_qu.py，空气质量传感器，Uart协议
- bmp180.py，BMP180气压传感器，I2C
- dht11.py，温度湿度传感器，GPIO
- pcf8591.py，数模转换+照度传感，I2C
- sample.py，各种协议操作的demo
",,2016-01-12T09:52:49Z,2019-11-19T07:45:23Z,2,1,126,10,"('conanwhf', 15), ('xi.liu', 1)",1,0,
LowPowerLab/RFM12B,RFM12B library,"NOTE: not actively maintained
----------------
#### This library is not actively maintained anymore but is kept for reference and can still be used with RFM12b transceivers.

RFM12B Library
----------------
By Felix Rusu (felix@lowpowerlab.com)

Based on the RFM12 driver from jeelabs.com (2009-02-09 )

http://opensource.org/licenses/mit-license.php

### Features:
- easy API with a few simple functions for basic usage
- 127 possible nodes on 256 possible networks
- 128 bytes max message length
- customizable transmit power (8 levels) for low-power transmission control
- customizable air-Kbps rate allows fine tuning the transmission reliability vs speed (transmitting slower is more reliable but takes more time which implies more power usage)
- Sleep/Wakeup functionality for power saving
- Low battery detector with customizable low voltage threshold
- Interrupt driven
- Support for targeted ACK instead of broadcasted ACK (possible because of the new source byte in the header)
encryption with XXTEA algorithm by David Wheeler, adapted from http://en.wikipedia.org/wiki/XXTEA
Support for these chips: ATMega8 family (ATmega168, ATMega328) ATMega2560, ATMega1280, ATMega644P, ATTiny84, ATTiny44, ATMega32u4. So far only tested on ATMega 328/P
- wireless programming (for more info click [here](http://lowpowerlab.com/blog/2013/04/18/moteino-wireless-programming-source-code/), [here](http://lowpowerlab.com/?p=643) and [here](http://lowpowerlab.com/?p=669))
- the library needed for wireless programming is now [here](https://github.com/LowPowerLab/WirelessProgramming), install it in your Arduino/libraries folder (WirelessHEX for RFM12B)

### Installation
Copy the content of this library in the ""Arduino/libraries/RFM12B"" folder.

To find your Arduino folder go to File>Preferences in the Arduino IDE.

See [this tutorial](http://learn.adafruit.com/arduino-tips-tricks-and-techniques/arduino-libraries) on Arduino libraries.

### Saple usage
- [Sender](https://github.com/LowPowerLab/RFM12B/blob/master/Examples/Send/Send.ino)
- [Receiver](https://github.com/LowPowerLab/RFM12B/blob/master/Examples/Receive/Receive.ino)
- More examples in the [Examples folder](https://github.com/LowPowerLab/RFM12B/tree/master/Examples)


### TODOs (in order of priority):
- Support automatic ACK handling
- Refactor changing the SPI CS signal
- Add support for hosting multiple radios on 1 MCU
",,2012-12-26T19:44:46Z,2019-10-31T10:48:35Z,4,3,133,28,"('LowPowerLab', 62), ('Ignacio Verona Ríos', 1), ('ivankravets', 1), ('ufuchs', 1)",3,2,
sgfin/sgfin.github.io_old,Sam Finlayson's Academic blog,"# sgfin.github.io
Sam Finlayson's academic blog.

Leverages code from  Andrew Miller, Sam Greydanus, and Andrej Karpathy.
",,2018-03-19T19:51:48Z,2020-06-19T03:33:37Z,1,1,95,12,"('sgfin', 445)",0,0,
nosequeldeebee/blockchain-tutorial,Write and publish your own blockchain in less than 200 lines of Go,"# Code your own blockchain in less than 200 lines of Go!

### Tutorial

[Read](https://medium.com/@mycoralhealth/code-your-own-blockchain-in-less-than-200-lines-of-go-e296282bcffc) our blog post first to see a walkthrough of the code.

#### Check out our follow-up tutorials:
- [Networking](https://github.com/mycoralhealth/blockchain-tutorial/tree/master/networking)
- [Proof of Work](https://github.com/mycoralhealth/blockchain-tutorial/tree/master/proof-work)
- [Proof of Stake](https://github.com/mycoralhealth/blockchain-tutorial/tree/master/proof-stake)
- [IPFS](https://medium.com/@mycoralhealth/learn-to-securely-share-files-on-the-blockchain-with-ipfs-219ee47df54c)
- [P2P](https://medium.com/coinmonks/code-a-simple-p2p-blockchain-in-go-46662601f417)
- [Advanced Concepts for Beginners](https://medium.com/@mycoralhealth/advanced-blockchain-concepts-for-beginners-32887202afad)
- [Start your own Hyperledger blockchain the Easy Way!](https://medium.com/@mycoralhealth/start-your-own-hyperledger-blockchain-the-easy-way-5758cb4ed2d1)
- [Build a DApp on Hyperledger the Easy Way!](https://medium.com/@mycoralhealth/build-a-dapp-on-hyperledger-the-easy-way-178c39e503fa)
- [Build your own Blockchain Twitter recorder](https://github.com/mycoralhealth/twitter-blockchain)

### Deployment steps:
- `git clone https://github.com/mycoralhealth/blockchain-tutorial.git`
- navigate to this directory and rename the example file `mv example.env .env`
- `go run main.go`
- open a web browser and visit `http://localhost:8080/`
- to write new blocks, send a `POST` request (I like to use [Postman](https://www.getpostman.com/apps)) to `http://localhost:8080/` with a JSON payload with `BPM` as the key and an integer as the value. For example:
```
{""BPM"":50}
```
- Send as many requests as you like and refresh your browser to see your blocks grow! Use your actual heart rate (Beats Per Minute) to track it over time.

### Screenshot

![screen](https://user-images.githubusercontent.com/15616604/35492333-2829f690-0461-11e8-8c1f-8a0258d370e8.png)


",,2018-01-29T03:14:39Z,2021-10-04T14:22:39Z,7,4,1575,71,"('nosequeldeebee', 26), ('nosequeldeebee', 26), ('=', 2), ('tamerh', 2), ('lon-io', 1), ('Samuel Almeida', 1), ('kveselkov', 1)",3,2,
buefy/buefy,Lightweight UI components for Vue.js based on Bulma,"
    
        
    
    
    
    
    
    
    
    


> Buefy is a lightweight library of responsive UI components for [Vue.js](https://vuejs.org/) based on [Bulma](http://bulma.io/) framework and design.
> 
> *Check out the official [`@ntohq/Buefy-next`](https://github.com/ntohq/buefy-next) fork in development for `Vue v3.0.0+` support.*

## Features

* Keep your current Bulma theme / variables easily
* Supports both [Material Design Icons](https://materialdesignicons.com/) and [FontAwesome](http://fontawesome.io/)
* Very lightweight with none internal dependencies aside from Vue & Bulma
* About 88KB min+gzip (with Bulma included)
* Semantic code output
* Follows Bulma design and some of the [Material Design UX](https://material.io/)
* Focus on usability and performance without *over-animating* stuff

## Documentation

The documentation is in the docs directory, it serves as the demo as well.

Browse [online documentation here](https://buefy.org/).

## Quick start

You need [Vue.js](https://vuejs.org/) **version 2.6+**. (Vue 3 is supported [here](https://github.com/ntohq/buefy-next))

### 1 Install via npm

```bash
npm install buefy
```

### 2 Import and use Buefy

Bundle
```javascript
import Vue from 'vue';
import Buefy from 'buefy';
import 'buefy/dist/buefy.css';

Vue.use(Buefy);

```
or Individual Components
```javascript

import Vue from 'vue'
import { Field, Input } from 'buefy'
import 'buefy/dist/buefy.css'

Vue.use(Field)
Vue.use(Input)

```

### 3 Include Material Design Icons

```html

```

If you want to customize the icons or the theme, refer to the [customization section on the documentation](https://buefy.org/documentation/customization).

### Alternatively, you can use a CDN or even download

```html





```

## Start On Cloud IDE

[https://github.com/buefy/buefy](https://github.com/buefy/buefy)

## Browser support

Recent versions of Firefox, Chrome, Edge, Opera and Safari. IE10+ is only partially supported.

## Contributing

Please see the [contributing guidelines](./.github/CONTRIBUTING.md)

## Versioning

Version will follow **v0.Y.Z**, where:

* **Y**: Major (breaking changes)
* **Z**: Minor or patch

## Core Team


  
    Walter Tommasi
  


Special thanks to Rafael Beraldo, the original author.

## Contributors ✨

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):





  
    Rafael Beraldo💻
    Alexandre Paradis💻
    Yuxing Liao💻
    Adrien💻
    Apolokak Lab💻
    Antério Vieira💻
    Jorge Nieto💻
    Mateus Machado Luna💻
  
  
    All contributors
  






This project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind welcome!

## License 

Code released under [MIT](https://github.com/buefy/buefy/blob/master/LICENSE) license.
","'bulma', 'components', 'vue', 'vue-admin', 'vue-bulma', 'vuejs'",2017-03-31T16:44:48Z,2024-06-18T14:08:05Z,392,364,9530,103,"('jtommy', 1288), ('rafaberaldo', 555), ('service-paradis', 218), ('kikuomax', 36), ('yxngl', 29), ('adrlen', 22), ('apolokaklab', 21), ('dependabotbot', 15), ('mateuswetah', 14), ('anteriovieira', 13), ('wesdevpro', 13), ('wanxe', 11), ('kaangokdemir', 11), ('geeksilva97', 10), ('GMartigny', 9), ('rubjo', 9), ('mouadTaoussi', 8), ('Mars073', 8), ('yuwu9145', 8), ('Tofandel', 7), ('Korbinian Pauli', 7), ('re2005', 7), ('dauriata', 6), ('amal-qb', 6), ('fabiofdsantos', 6), ('holtolee', 6), ('afwn90cj93201nixr2e1re', 6), ('tcitworld', 5), ('frantic1048', 5), ('aquaminer', 5), ('bender-a', 5), ('daniil4udo', 4), ('VictorCazanave', 4), ('Tirke', 4), ('rcoundon', 4), ('OrestHk', 4), ('gmercey', 4), ('GerryWilko', 4), ('brunoosilva', 4), ('afifsohaili', 4), ('304NotModified', 3), ('LeoMouyna', 3), ('Masato Sugiyama', 3), ('lunfel', 3), ('milad-mirkarimi', 3), ('alcalbg', 3), ('BlackMix', 3), ('rhwilr', 3), ('soudai-s', 3), ('electrolinux', 3), ('wrabit', 3), ('HugoHeneault', 3), ('aglio', 3), ('Gz', 3), ('ievhen-soloviov', 3), ('eveenendaal', 3), ('quimarche', 3), ('CharlieBrownCharacter', 3), ('chazmcgarvey', 3), ('dagnelies', 3), ('darotar', 3), ('ajomuch92', 3), ('adamgreenhall', 3), ('Ryan-Case-SingleStone', 2), ('ryo-gk', 2), ('SylvainMarty', 2), ('Tirke', 2), ('VladNeacsu', 2), ('a-kriya', 2), ('audunls', 2), ('punkt2', 2), ('rolandschuetz', 2), ('raimondlume', 2), ('Heziode', 2), ('biigpongsatorn', 2), ('damanwiththeplan', 2), ('Nicolò Maria Mezzopera', 2), ('Michael Santillán', 2), ('nevmn', 2), ('gwvt', 2), ('aki77', 2), ('chasegiunta', 2), ('AcelisWeaven', 2), ('willhatchVista', 2), ('tmepple', 2), ('suneab', 2), ('kichatyi', 2), ('omer2500', 2), ('lukio3', 2), ('andrei-dracea', 2), ('iwan-wijaya', 2), ('it-fm', 2), ('hikaruworld', 2), ('davidmeeker', 2), ('chadlafontaine', 2), ('dlamblin', 2), ('SomethingNew71', 2), ('CobraClutch', 2), ('Chris', 2), ('cuong-nguyen', 2), ('cain', 2), ('bohdan-prylutskyi', 2), ('druppy', 2), ('btkostner', 2), ('askmrsinh', 2), ('Arooba-git', 2), ('angelabad', 2), ('icarusion', 2), ('apauly', 2), ('Andrew Lees', 2), ('trebler', 2), ('maxleaver', 2), ('marc1404', 2), ('LaurenceJJones', 2), ('bartboy011', 2), ('elC0mpa', 2), ('jacenre', 2), ('jonagoldman', 2), ('emmanuelvlad', 2), ('franciscoh017', 2), ('francoism90', 2), ('modularcoder', 2), ('almeida-gustavo', 2), ('jamesgeorge007', 2), ('Jimmar', 2), ('Jacob Goh Chuan Ching', 2), ('JDurman', 2), ('Sacmanxman2', 1), ('cyberShaw', 1), ('ffxsam', 1), ('Sammyjo20', 1), ('atinybeardedman', 1), ('ryanhightower', 1), ('sebastianszaniszlo', 1), ('somidad', 1), ('crowdcow-shae', 1), ('RuslanGetmansky', 1), ('shambarick', 1), ('Spacarar', 1), ('sgarner', 1), ('runyasak', 1), ('AlwaBysi', 1), ('Patrity', 1), ('Tobias Tschinkowitz', 1), ('Timoms', 1), ('tsummerer', 1), ('timEulitz', 1), ('sassypianist98', 1), ('theo-bittencourt', 1), ('ittus', 1), ('T0RAT0RA', 1), ('rootEnginear', 1), ('StevenGBrown', 1), ('jevets', 1), ('mistersaal', 1), ('Sjerd', 1), ('tsctao', 1), ('kartsims', 1), ('Numenorian', 1), ('LoopsGod', 1), ('NitinRamnani', 1), ('nimaebra', 1), ('nchutchind', 1), ('nikazooz', 1), ('aantn', 1), ('mitchell-garcia', 1), ('mikezange', 1), ('MauroB45', 1), ('6XGate', 1), ('matt3188', 1), ('matheushahnn', 1), ('massimozappino', 1), ('MartinodF', 1), ('lsv', 1), ('dstock48', 1), ('cybercode', 1), ('rperki8', 1), ('REInVent650', 1), ('raniesantos', 1), ('Raljuk', 1), ('scriptburn', 1), ('quadra-diffusion', 1), ('Propaganistas', 1), ('lolen', 1), ('PhilWaldmann', 1), ('pip36', 1), ('kpdemetriou', 1), ('pflirae', 1), ('pakohan', 1), ('Oliboy50', 1), ('nintra', 1), ('OlegKlochkov', 1), ('nikugogoi', 1), ('navedqb', 1), ('nateleavitt', 1), ('nastiaKuz', 1), ('myteril', 1), ('mitya33', 1), ('mateusbw', 1), ('major-mayer', 1), ('m4st3rm4tz3', 1), ('l1bra2013', 1), ('krororo', 1), ('kplachecki', 1), ('knot22', 1), ('jvalle', 1), ('julzELO', 1), ('jeromelebleu', 1), ('shrhau7i', 1), ('zhanghengxin', 1), ('wtho', 1), ('user4i', 1), ('AimForNaN', 1), ('suneab', 1), ('shaozi', 1), ('s-nesbigall', 1), ('ron23', 1), ('robertmarney', 1), ('rkubapl', 1), ('rkacenski', 1), ('ralphskie', 1), ('radex02', 1), ('psweeting1', 1), ('philnee', 1), ('nithesh247', 1), ('zemian', 1), ('zeljkokalezic', 1), ('ZacharyEspiritu', 1), ('yarbshk', 1), ('yassinouider', 1), ('yanisvieilly', 1), ('yansern', 1), ('schulz3000', 1), ('qidanw', 1), ('bearded-cat', 1), ('8bu', 1), ('vvkk77', 1), ('vikiival', 1), ('vduricu', 1), ('waldeck-dev', 1), ('Valar103769', 1), ('Shadowsoftime99', 1), ('jermel', 1), ('ivalkenburg', 1), ('isjcoder', 1), ('gps-dev', 1), ('givensuman', 1), ('ynte', 1), ('dword-design', 1), ('disgusting-dev', 1), ('dandelionred', 1), ('crickford', 1), ('CostPerMille', 1), ('charescape', 1), ('backdoc', 1), ('ayedaemon', 1), ('ajf1234', 1), ('gtarsia', 1), ('Zephyrrus', 1), ('zedrdave', 1), ('dariuszjastrzebski', 1), ('tellodaniel', 1), ('damienroche', 1), ('Damian Dulisz', 1), ('damian-bal', 1), ('uturnr', 1), ('callahanrts', 1), ('Cl3MM', 1), ('Christiaan Maks', 1), ('colsen1991', 1), ('cetooley', 1), ('chrisleyva', 1), ('landlight', 1), ('YanDevDe', 1), ('AlexTorx', 1), ('Fabrizio Meinero', 1), ('Fabio Capucci', 1), ('EvanBarbour3', 1), ('guanzo', 1), ('emanuelmutschlechner', 1), ('ellie-me', 1), ('didaquis', 1), ('Dylan Lott', 1), ('diogoaguiar', 1), ('Minhyme', 1), ('Dejan Geci', 1), ('DeBoevereBen', 1), ('ilbonte', 1), ('dluccheseFmoq', 1), ('509dave16', 1), ('davidcostadev', 1), ('tipsy', 1), ('abroekhof', 1), ('LANSELOT', 1), ('AlbertBrand', 1), ('AkmarNafi', 1), ('akicho8', 1), ('wafto', 1), ('taverasady', 1), ('arambert', 1), ('adrianrussell', 1), ('adrianrudnik', 1), ('adriaanmeuris', 1), ('admhpr', 1), ('SharpSeeEr', 1), ('afm-sayem', 1), ('14nrv', 1), ('1010real', 1), ('TonPC64', 1), ('caleb-allen', 1), ('speedpro', 1), ('Britford', 1), ('BrauBeast', 1), ('TrySound', 1), ('M0dM', 1), ('Sc0ra', 1), ('arusahni', 1), ('Apo-S', 1), ('fungiboletus', 1), ('ankurk91', 1), ('rockandre', 1), ('gimlet2', 1), ('Silvea12', 1), ('AndrewLemons', 1), ('AndreLion', 1), ('Dragoncall', 1), ('Jungmo Kang', 1), ('j-a-m-l', 1), ('joaoGabriel55', 1), ('jomp16', 1), ('jvmonjo', 1), ('jorgepinon', 1), ('jpickwell', 1), ('Jordan Hoff', 1), ('unikitty37', 1), ('docnoe', 1), ('lifenautjoe', 1), ('jcbjoe', 1), ('piascikj', 1), ('jefrydco', 1), ('mirshko', 1), ('WTDuck', 1), ('martinmaillard', 1), ('markovejnovic', 1), ('markokos01', 1), ('mariusj', 1), ('thebrownfox', 1), ('elmatou', 1), ('maartenvanasperen', 1), ('lboecker', 1), ('luistrcastro', 1), ('lucraraujo', 1), ('lucaperret', 1), ('Lighter97', 1), ('Leffe108', 1), ('lakhbawa', 1), ('cypressious', 1), ('keeev', 1), ('tsukakei', 1), ('Khazl', 1), ('sougiovn', 1), ('gkinsman', 1), ('gczh', 1), ('fabiiomiiguel', 1), ('fugroup', 1), ('fverry', 1), ('francisfontoura', 1), ('belvederef', 1), ('zerbfra', 1), ('Aeden-B', 1), ('filippofortino', 1), ('FelipeFernandesLeandro', 1), ('FeixuRuins', 1), ('Fatih Güneş', 1), ('farshad-sadri', 1), ('Jason Land', 1), ('JasonMillward', 1), ('jankeesvw', 1), ('janhaa', 1), ('jamenamcinteer', 1), ('jwahdatehagh', 1), ('MrJacz', 1), ('Iwona Piotrowska', 1), ('ivdmeer', 1), ('iqbaltawakkal', 1), ('ireznik', 1), ('Yaty', 1), ('sheshtawy', 1), ('hirokiky', 1), ('HasegawaShiro', 1), ('justharryjust', 1), ('Harrison Cutler', 1)",265,248,
seancribbs/eunit_formatters,Because eunit's output sucks. Let's make it better.,"# eunit_formatters

Because eunit's output sucks. Let's make it better.

Here's the progress formatter running with profiling and ANSI colors
turned on:

![neotoma eunit](demo.gif)

## Setup

### Rebar 3

[rebar3](https://github.com/erlang/rebar3) already includes this
library! There's no need for special configuration at all.

### erlang.mk

For erlang.mk, add the following before `include erlang.mk`:

``` Makefile
TEST_DEPS = eunit_formatters

EUNIT_OPTS = no_tty, {report, {eunit_progress, [colored, profile]}}
```

### Rebar 2 (legacy)
Add `eunit_formatters` as a dep in your `rebar.config`. Now configure
eunit to use one of the output formatters (currently only
`eunit_progress`):

```erlang
{eunit_opts, [
     no_tty,  %% This turns off the default output, MUST HAVE
     {report, {eunit_progress, [colored, profile]}} %% Use `profile' to see test timing information
     %% Uses the progress formatter with ANSI-colored output
     ]}.
```

## License

   Copyright 2014 Sean Cribbs

   Licensed under the Apache License, Version 2.0 (the ""License"");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an ""AS IS"" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
",,2014-03-19T23:00:43Z,2020-10-12T22:10:31Z,8,7,70,14,"('seancribbs', 26), ('kape1395', 9), ('tsloughter', 5), ('kaos', 1), ('ferd', 1), ('KrzysiekJ', 1), (""Paolo D'Incau"", 1), ('reiddraper', 1)",5,4,
zalando/expan, Open-source Python library for statistical analysis of randomised control trials (A/B tests),"==========================
ExpAn: Experiment Analysis
==========================

.. image:: https://img.shields.io/travis/zalando/expan.svg
        :target: https://travis-ci.org/zalando/expan
        :alt: Build status

.. image:: https://coveralls.io/repos/github/zalando/expan/badge.svg
        :target: https://coveralls.io/github/zalando/expan
        :alt: Code coverage

.. image:: https://img.shields.io/pypi/v/expan.svg
        :target: https://pypi.python.org/pypi/expan
        :alt: Latest PyPI version

.. image:: https://img.shields.io/pypi/status/expan.svg
        :target: https://pypi.python.org/pypi/expan
        :alt: Development Status

.. image:: https://img.shields.io/pypi/pyversions/expan.svg
        :target: https://pypi.python.org/pypi/expan
        :alt: Python Versions

.. image:: https://img.shields.io/pypi/l/expan.svg
        :target: https://pypi.python.org/pypi/expan/
        :alt: License

.. image:: https://readthedocs.org/projects/expan/badge/?version=latest
        :target: http://expan.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status

A/B tests (a.k.a. Randomized Controlled Trials or Experiments) have been widely
applied in different industries to optimize business processes and user
experience. ExpAn (**Exp**\ eriment **An**\ alysis) is a Python library
developed for the statistical analysis of such experiments and to standardise
the data structures used.

The data structures and functionality of ExpAn are generic such that they can be
used by both data scientists optimizing a user interface and biologists
running wet-lab experiments. The library is also standalone and can be
imported and used from within other projects and from the command line.


Documentation
=============

The latest stable version is 1.4.0. Please check out our `tutorial and documentation `__.

Installation
============

Stable release
--------------

To install ExpAn, run this command in your terminal:

.. code-block:: console

    $ pip install expan

From sources
------------

The sources for ExpAn can be downloaded from the `Github repo`_.

You can either clone the public repository:

.. code-block:: console

    $ git clone git://github.com/zalando/expan

Or download the `tarball`_:

.. code-block:: console

    $ curl  -OL https://github.com/zalando/expan/tarball/master

Once you have a copy of the source, you can install it with:

.. code-block:: console

    $ python setup.py install


.. _Github repo: https://github.com/zalando/expan
.. _tarball: https://github.com/zalando/expan/tarball/master


License
=======

The MIT License (MIT)

Copyright © [2016] Zalando SE, https://tech.zalando.com

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
“Software”), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
","'ab-testing', 'abtest', 'abtesting', 'causal-inference', 'experimentation', 'python', 'statistical-analysis', 'statistics'",2016-05-04T14:43:47Z,2023-04-11T10:52:40Z,18,11,330,27,"('mkolarek', 281), ('shansfolder', 267), ('ddedik', 160), ('gbordyugov', 139), ('Jie Bao', 82), ('aaron-mcdaid-zalando', 75), ('daryadedik', 33), ('Robert Muil', 22), ('domheger', 15), ('robertmuil', 12), ('jbao', 10), ('Ievgen Gusher', 4), ('pangeran-bottor', 4), ('Grigory Bordyugov', 3), ('Jie Bao', 3), ('perploug', 1), ('s4826', 1), ('sdia-zz', 1)",3,3,
claudiajs/claudia-bot-builder,"Create chat bots for Facebook Messenger, Slack, Amazon Alexa, Skype, Telegram, Viber, Line, GroupMe, Kik and Twilio and deploy to AWS Lambda in minutes","# Claudia Bot Builder

[![npm](https://img.shields.io/npm/v/claudia-bot-builder.svg?maxAge=2592000?style=plastic)](https://www.npmjs.com/package/claudia-bot-builder)
[![npm](https://img.shields.io/npm/dt/claudia-bot-builder.svg?maxAge=2592000?style=plastic)](https://www.npmjs.com/package/claudia-bot-builder)
[![npm](https://img.shields.io/npm/l/claudia-bot-builder.svg?maxAge=2592000?style=plastic)](https://github.com/claudiajs/claudia-bot-builder/blob/master/LICENSE)
[![Build Status](https://travis-ci.org/claudiajs/claudia-bot-builder.svg?branch=master)](https://travis-ci.org/claudiajs/claudia-bot-builder)
[![Join the chat at https://gitter.im/claudiajs/claudia](https://badges.gitter.im/claudiajs/claudia.svg)](https://gitter.im/claudiajs/claudia?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)

_Claudia Bot Builder_ helps developers create and deploy chat-bots for various platforms in minutes to AWS Lambda. It simplifies the messaging workflows, automatically sets up the correct web hooks, and guides you through configuration steps, so that you can focus on important business problems and not have to worry about infrastructure code.

| [🚀 Getting Started](https://claudiajs.com/tutorials/hello-world-chatbot.html) | [🛠 API Docs](docs/API.md) | [🤖 Example projects](https://github.com/claudiajs/example-projects#chat-bots) | [🤔 FAQ](#frequently-asked-questions) | [💬 Chat on Gitter](https://gitter.im/claudiajs/claudia) |
|-----------------|----------|------------------|-----|----|

Check out [this two minute video](https://youtu.be/NvCfEuD3Nk4) to see how you can create and deploy a bot quickly:

[![](https://claudiajs.com/assets/claudia-bot-builder-video.jpg)](https://youtu.be/NvCfEuD3Nk4)

Here's a simple example:

```javascript
const botBuilder = require('claudia-bot-builder');
const excuse = require('huh');

module.exports = botBuilder(function (message) {
  return 'Thanks for sending ' + message.text +
    'Your message is very important to us, but ' +
    excuse.get();
});
```

This code is enough to operate bots for all supported platforms. Claudia Bot Builder automatically parses the incoming messages into a common format, so you can handle it easily. It also automatically packages the response into the correct message template for the requesting bot, so you do not have to worry about individual bot protocols.

## Supported platforms

* Facebook Messenger
* Slack (channel slash commands and apps with slash commands)
* Skype
* Viber
* Telegram
* Twilio (messaging service)
* Amazon Alexa
* Line
* Kik
* GroupMe

## Creating bots

[![](https://nodei.co/npm/claudia-bot-builder.svg?downloads=true&downloadRank=true&stars=true)](https://www.npmjs.com/package/claudia-bot-builder)

Check out the [Getting Started](https://claudiajs.com/tutorials/hello-world-chatbot.html) guide for information on how to set up a simple bot in minutes and [API Documentation](docs/API.md) for detailed information on the API.

## Examples

See the [Chat-Bots section](https://github.com/claudiajs/example-projects#chat-bots) of the Claudia.js example projects list

## Frequently asked questions

1. **How to run it locally?**

   You can't. At least not easy. Claudia Bot Builder doesn't have a stand-alone http server in the background (such as Express, Hapi, etc.), instead it uses API Gateway and it's not trivial to simulate similar environment locally. Deploy it with `--version test` to create a separate test environment directly in AWS Lambda.

2. **How to test your bot?**

   Your chat bot is just a Lambda function, which means it is just a simple JavaScript function and you should be able to, at least in theory, run everything locally as simple automated tests.

   The most important thing is to design testable Lambda functions, [this guide](https://claudiajs.com/tutorials/designing-testable-lambdas.html) will help you to do that.

   Integration tests can be a bit more complex if you have some integrations with external or AWS services. Check [this guide](https://claudiajs.com/tutorials/testing-locally.html) to see how to write integration tests and run automated tests locally.

3. **My Facebook messenger bot responds to my messages only. Why it's not responding to everyone?**

   Facebook has [a review process](https://developers.facebook.com/docs/messenger-platform/app-review) for chat bots. Make sure your bot is approved.

4. **Can I send Slack slash command delayed responses?**

   Yes, here's [the tutorial for that](https://claudiajs.com/tutorials/slack-delayed-responses.html).

5. **What's new in v2?**

   It's a new major version because of the dependencies - there are big improvements in the _Claudia API Builder_ and _Claudia_, so _Claudia Bot Builder_ v1.x is not compatible with them.  
   V2.x also brings support for many new platforms.

6. **How to speed up the deployment**

   You can use `claudia update` with `--cache-api-config` flag to cache the API Gateway config, for more info visit [docs page for claudia update](https://github.com/claudiajs/claudia/blob/master/docs/update.md).

   Also, from version 2.7.0, you can disable platforms that you are not using, check the full explanation in the [API docs](https://github.com/claudiajs/claudia-bot-builder/blob/master/docs/API.md#selecting-platforms).

Have a question that is not on this list? Feel free to ask it on [Claudia chat on Gitter](https://gitter.im/claudiajs/claudia).

_Please, do not use GitHub issues for asking questions or requesting assistance/support, use it only to report bugs._

## Contributing

Contributions are greatly appreciated. See the [Contributors' guide](CONTRIBUTING.md) for information on running and testing code.

## What's new since...?

See the [Release History](https://github.com/claudiajs/claudia-bot-builder/releases)

## Cool things built with _Claudia bot Builder_

- [AWS Bot for Slack](https://github.com/andypowe11/AWS-Claudia-AWSBot) - A Slack bot to stop and start selected AWS EC2 instances and generally keep an eye on your AWS estate.
- [Comic Book Bot](https://github.com/stojanovic/comic-book-bot) - A simple Viber chatbot for Marvel characters.
- [DotCom Bot](http://dotcom.montoyaindustries.com) - Search & buy domain names and check @usernames fast on Slack & Facebook Messenger!
- [Eksplorer](http://eksplo.weebly.com) - The Facebook chat bot that will help you discover amazing things in your neighborhood.
- [Fact Bot](https://github.com/claudiajs/example-projects/tree/master/bot-with-buttons) - The bot will query WikiData for anything you send it and print out the facts.
- [Food Recommendation Bot](https://github.com/lnmunhoz/food-recommendation-bot) - Shows you open restaurants around you based on Google Places API.
- [JS Belgrade bot](https://github.com/JSBelgrade/jsbelgrade-chatbot) - Simple meetup group Telegram chatbot created during the meetup.
- [LaptopFriendly Bot](https://github.com/stojanovic/laptop-friendly-bot) - Viber bot for [LaptopFriendly.co](https://laptopfriendly.co).
- [MrRoadboto](https://github.com/antsankov/MrRoadboto) - A low-bandwidth and easy to use Facebook chat bot that serves Colorado's Department of Transportation (CDOT) alerts for I70 road-closures affecting major ski resorts. You can read about the motivation [here](https://medium.com/@antsankov/domo-arigato-mr-roadboto-pt-1-introducing-the-problem-b0d44e384dc#.tcsq9nrs4).
- [PingdomBot](https://github.com/andypowe11/AWS-Claudia-PingdomBot) - A Slack bot to see the status of Pingdom website monitoring.
- [Pokemon Lookup bot](https://www.facebook.com/PokedexLookup/) - Simple pokemon lookup bot, [source code](https://github.com/kirkins/PokedexBot).
- [QRCode Bot](https://www.facebook.com/QRCode-Bot-1779956152289103/) - Artistic QR code maker, [source code](https://github.com/jveres/qrcode-bot).
- [Quote bot](https://github.com/philnash/quote-bot) - A very simple bot that will respond with an inspirational quote from the Forismatic API.
- [Robbert](https://www.facebook.com/Robbert-1119546194768078) - General chatbot.
- [slackslash-radar](https://github.com/Ibuprofen/slackslash-radar) - A Claudiajs bot which retrieves a Wunderground radar animated gif and posts to Slack.
- [Space Explorer Bot](https://github.com/stojanovic/space-explorer-bot) - A simple Messenger chat bot that uses NASA's API to get the data and images about the Space.
- [Space Explorer Bot for Viber](https://github.com/stojanovic/space-explorer-bot-viber) - Viber version of Space Explorer Bot.
- [Vacation tracker bot](http://vacationtrackerbot.com/) - A simple Slack bot to help you manage your team’s vacations, sick days and days off.
- [MDNBot](https://vejather.github.io/mdn-bot-landing-page/) - A Slack bot that helps developers search MDN directory without leaving Slack channel.
- [Ver.bot](https://rping.github.io/Ver.bot-site) - Subscribe GitHub, npm, PyPI projects, and get new version releases notifications!

Building something cool with Claudia Bot Builder? Let us know or send a PR to update this list!

## Authors

* [Gojko Adžić](https://github.com/gojko)
* [Aleksandar Simović](https://github.com/simalexan)
* [Slobodan Stojanović](https://github.com/stojanovic)

## License

MIT -- see [LICENSE](LICENSE)
","'alexa', 'aws-lambda', 'chatbot', 'claudiajs', 'facebook-messenger', 'line', 'skype', 'slack', 'telegram', 'twilio', 'viber'",2016-06-01T10:13:33Z,2022-04-07T13:03:06Z,34,30,1833,72,"('stojanovic', 278), ('simalexan', 101), ('gojko', 81), ('IvanJov', 9), ('Jon James', 6), ('srdjanprpa', 6), ('nbransby', 4), ('RPing', 4), ('yipcma', 3), ('jonjamz', 3), ('zippeurfou', 3), ('stanwilsonjr', 2), ('niponchi', 2), ('MohitDhanjani', 2), ('guillemsalas', 2), ('suda86', 1), ('sasa', 1), ('raymondborkowski', 1), ('n7best', 1), ('jveres', 1), ('samcorcos', 1), ('sagech', 1), ('philnash', 1), ('otemnov', 1), ('marcusoftnet', 1), ('lnmunhoz', 1), ('jonymusky', 1), ('jmosbech', 1), ('animsaj', 1), ('hnoesekabel', 1), ('Davis Gay', 1), ('Datrio', 1), ('SilverFox70', 1), ('alejandrogr', 1)",19,16,
peterantypas/maiana,"MAIANA™ is the first Open Source AIS transponder. It proudly raises an extra long middle finger to the marine electronics industry, government overregulation and everything else that gets in the way of innovation in this space.","# MAIANA&trade;: The Open Source AIS Transponder

I started this project around 2015 with the intention of experimenting and eventually building something for my own boat.
I was not impressed with commercial AIS class B transponders. They seemed bloated, expensive and some of them were particularly power-hungry. Also, my boat is rather small and I have very little room for ""nav"" instruments, so I didn't want a huge enclosure inside plus two external RF cables, one for VHF and one for GPS. So I set out to create my own ""lean and mean"" design and I sailed with it for 2 years.

Fast forward to 2023, and it has taken a life of its own:



The main difference between MAIANA&trade; and every commercial transponder is that it's a self-contained unit, and thus its performance is 100% repeatable. The entire transponder circuit, the GNSS and all antennas are in the same housing. The design has been validated by fabricating _over 300 units_ now (July 2023).

So with all the core functionality kept outside and under tight control, the only other thing we need is power and data connections. Now, what's the most common cable that can carry a few signals 50 feet away? If you guessed ""Ethernet"", you guessed right. Commonplace Cat5 cable can deliver power plus serial data signals anywhere on an average sized pleasure boat. So that's how the exterior unit connects to the cabin, where one of these breakouts offers USB, NMEA0183 or NMEA2000 adapters to connect to the rest of the boat's systems. 




## Hardware Design

### Mechanical
The antenna casing that you see in these photos is a piece of 1"" Schedule 40 ""furniture"" grade PVC pipe. It is the highest grade of such material, with a solid white PVC core (not a coated household grade pipe). Still, it's the most inexpensive UV resistant material available, and it looks great too!

The VHF antenna whip is built using an epoxy wound filament tube coated with high quality, UV resistant irradiated polyolefin (""heat shrink""). The company that makes this tubing (and helped me with this design challenge) also built the landing gear for NASA's Ingenuity helicopter on Mars, so they definitely understand how to deal with harsh environments. The bottomline is that unlike typical fiberglass antenna masts, this antenna is not going to degrade and ""blossom"" under continuous UV exposure. Starting with January of 2022, the antenna tube will be made of two telescopic pieces of the same material. This will greatly reduce the cost of shipping the kit to Europe and Australia.

The entire outdoor assembly is held together by the same high grade heat shrink tubing, so there is no need for any adhesives! The main water seal is formed by heat shrinking around a specially designed 3D printed cap made of PLA. This part naturally softens when heated and as it's compressed by the heat shrink tubing surrounding it, it forms a permanent, watertight colar around the antenna tube. This blocks rain water and salt spray from the top. A layer of clear heat shrink in the interior forms a secondary water seal encompassing the lower part of the antenna. Finally, the PCB can be sprayed with conformal coating for an added layer of protection. Silicone spray works best and has no appreciable detuning effect on the GNSS.

With no adhesives getting in the way, the unit can actually be opened and serviced by (carefully) cutting through the heat shrink tubing with a knife, then resealing with the same material and method as before. This, in fact, was one of my design goals from the beginning.


### Electrical
As I mentioned already, the transponder circuit is inside the antenna case. It's a 24mm x 84mm 4-layer PCB:

![Image](images/board-11.5.jpg?raw=True)

The core design is based on two Silicon Labs ""EZRadio Pro"" series ICs. All kits shipping today are based on the Si4460.

The microcontroller on this board is a STM32L4 series (422, 431 and 432 supported). I chose these because the 80MHz clock allows the SPI bus to operate at exactly 10MHz which is the maximum supported by the Si446x ICs. This is important, as a transponder is a *hard real time* application, so SPI latency must be minimized. All kits today are based on the STM32L432KBU6.

The GNSS is now a Quectel L76L-M33 and relies on a Johansson ceramic chip antenna. It usually takes a minute to acquire a fix outdoors from a cold start. With the latest antenna tuning, it offers near-navigation grade accuracy (typical HDOP at sea is less than 2 meters).

The transmitter front end is based on a power MOSFET typically found in handheld VHF radios and outputs just over 2 Watts (+33dBm). It has a verified range of over 20 nautical miles on a masthead and 10+ miles on a pushpit.

The system is designed to run from a 12V battery and exposes a 3.3V-level UART for connecting to the rest of the boat. The UART continuously sends GPS and AIS data in NMEA0183 format at 38.4Kbps. It also accepts certain commands for management. The breakout boxes pictured above deliver this stream via USB, NME0183 (RS422) or NMEA 2000 (CAN). The 3 ""fancy"" breakouts feature _galvanic isolation_ of their USB connection to avoid causing unintended problems with laptops and other devices whose power supplies are meant to _float_. This also means that you cannot use USB to power MAIANA&trade; - it must connect to a 12V battery.

In addition, there is now a ""bare bones"" UART+USB breakout:



This provides the simplest, lowest cost interface to a Raspberry Pi, Arduino or any other similar system you may want to wire directly. It is _not_ galvanically isolated to keep the cost really low. This adapter is now part of the base kit and ships with every configuration.

For the circuit to transmit, it must be configured with persistent station data (MMSI, call sign, name, dimensions, etc). This is stored in an EEPROM and is provisioned over a USB/serial connection via a command line interface. If station data is not provisioned, the device will simply run as a 2 channel AIS + GNSS receiver.

SOTDMA synchronization is based on the very acurate 1 PPS signal from the GNSS and the UTC clock. MAIANA&trade; does not synchronize itself to other stations because practical experience revealed that it's literally the ""Wild West"" out there: There are *many* commercial class A systems in operation today with buggy time slot management, so the simplest solution is to not rely on any of them. That said, the design behaves as a ""class B"" so it will not attempt to reserve time slots. It will just transmit autonomously and independently, based on Clear Channel Assessment, at the schedule permitted for this class of device. 

All adapters (except the ""bare bones"" one) feature a *silent mode* switch to explicitly disable transmission. If you need this for the UART adapter, you can wire one yourself.

In terms of power consumption, the main board draws about 45mA from 12V in receive mode, and spikes up to 700mA during transmission (for only 27 milliseconds). The adapters add an extra 0.5mA - 25mA depending on choice. So MAIANA&trade;'s most power hungry configuration needs about 0.6 Watts, which is a lot less than a typical LED-based cabin light.


### Software

The transponder firmware is an [Eclipse CDT project](latest/Firmware/Transponder) that you could clone and build. The code is C++ with a BSP abstraction layer so you need to tweak bsp/bsp.hpp or define one of the required symbols in the preprocessor to build for different board revisions. It contains snippets of STM32Cube generated code, but is does not follow ST's ""spaghetti"" structure.

The NMEA2000 adapter also has its own separate [firmware project](latest/Firmware/NMEA2000Adapter).

As of December 2021, MAIANA&trade; is fully integrated into [OpenPlotter](https://openmarine.net/openplotter). This means that it can be provisioned and managed entirely from its graphical interface, including firmware updates. To accomplish this, I had to make both a hardware and a software change: 

- The hardware change was to reinstate the I2C EEPROM that I used in earlier designs. This was necessary because STM32 applications that are interrupt heavy cannot safely erase and write any pages in the same flash bank, as the *entire* bank gets locked. This means that the next interrupt may be unable to execute, thus causing the processor to hang until the watchdog resets it. Moving persistence to an EEPROM solves this problem.

- The software change was to dust off the original [bootloader](latest/Firmware/Bootloader) that I wrote years ago and make it bulletproof: Even if you manage to brick the unit by uploading garbage firmware into it, it has a built-in ""rescue"" mode. All you have to do is toggle the TX switch a couple of times during the first 2 seconds after power-up and it will enter firmware update mode again.

### CAD

Everything is [here](latest/CAD). 

### Building the unit

This is going to be difficult for all but the most technically advanced. The board features all surface mounted components, with 4 QFNs, a few SOT-363s and tightly spaced 0603 passives. The antenna switch on board 11.3.0 is about 0.8 x 1 mm and you'll need a microscope to align it. So unless you're very skilled and well equipped, you will find it difficult to build. 

### Buying a kit

I have developed a kit which includes pre-soldered (and programmed) boards as well as the antenna, main casing and heat shrink tubing. See [the installation manual here](https://github.com/peterantypas/maiana/blob/master/latest/Manuals/MAIANA%E2%84%A2%20Assembly%20Manual%20(Rev%204).pdf) to get a better idea of the process.

If you are located in North America, send an email to *maiana.kits@_dontspam_gmail.com* (remove the spambot blocker of course). 

If you're located anywhere else, you can order a kit from the [OpenMarine store](https://shop.openmarine.net) which ships from Barcelona, Spain.


### License

CAD and transponder firmware are licensed under GPLV3. I chose the most ""copyleft"" license to discourage commercial entities from ripping this off and then ""close-sourcing"" it. The flipside of this is that if you can fork the design and make something better, then you deserve the success! That said, MAIANA&trade; will become a registered trademark soon, so if you plan to do this you must use a different name.

The NMEA2000 adapter firmware is under MIT license to be consistent with the libraries it depends on. Feel free to use it as you wish. 











","'ais-transponder', 'pcba'",2016-05-29T14:58:10Z,2024-06-15T13:28:48Z,5,3,305,62,"('peterantypas', 414), ('PETER ANTYPAS', 9), ('ptrbrn', 2), ('mgrouch', 2), ('rszemeti', 1)",1,1,
Sanerres/vgstation13,This is the vgstation's fork of baystation12's code.,"# baystation12

[Website](http://baystation12.net/) - [Code](http://github.com/Baystation12/Baystation12/) - [IRC](http://baystation12.net/forums/viewtopic.php?f=12&t=5088)

---

### GETTING THE CODE
The simplest way to obtain the code is using the github .zip feature.

Click [here](https://github.com/Baystation12/Baystation12/archive/master.zip) to get the latest code as a .zip file, then unzip it to wherever you want.

The more complicated and easier to update method is using git.  You'll need to download git or some client from [here](http://git-scm.com/).  When that's installed, right click in any folder and click on ""Git Bash"".  When that opens, type in:

    git clone git@github.com:Baystation12/Baystation12.git

(hint: hold down ctrl and press insert to paste into git bash)

This will take a while to download, but it provides an easier method for updating.

### INSTALLATION

First-time installation should be fairly straightforward.  First, you'll need BYOND installed.  You can get it from [here](http://www.byond.com/).

This is a sourcecode-only release, so the next step is to compile the server files.  Open baystation12.dme by double-clicking it, open the Build menu, and click compile.  This'll take a little while, and if everything's done right you'll get a message like this:

    saving baystation12.dmb (DEBUG mode)
    
    baystation12.dmb - 0 errors, 0 warnings

If you see any errors or warnings, something has gone wrong - possibly a corrupt download or the files extracted wrong, or a code issue on the main repo.  Ask on IRC.

Once that's done, open up the config folder.  You'll want to edit config.txt to set the probabilities for different gamemodes in Secret and to set your server location so that all your players don't get disconnected at the end of each round.  It's recommended you don't turn on the gamemodes with probability 0, as they have various issues and aren't currently being tested, so they may have unknown and bizarre bugs.

You'll also want to edit admins.txt to remove the default admins and add your own.  ""Game Master"" is the highest level of access, and the other recommended admin levels for now are ""Game Admin"" and ""Moderator"".  The format is:

    byondkey - Rank

where the BYOND key must be in lowercase and the admin rank must be properly capitalised.  There are a bunch more admin ranks, but these two should be enough for most servers, assuming you have trustworthy admins.

Finally, to start the server, run Dream Daemon and enter the path to your compiled baystation12.dmb file.  Make sure to set the port to the one you  specified in the config.txt, and set the Security box to 'Trusted'.  Then press GO and the server should start up and be ready to join.

---

### UPDATING

To update an existing installation, first back up your /config and /data folders
as these store your server configuration, player preferences and banlist.

If you used the zip method, you'll need to download the zip file again and unzip it somewhere else, and then copy the /config and /data folders over.

If you used the git method, you simply need to type this in to git bash:

    git pull

When this completes, copy over your /data and /config folders again, just in case.

When you have done this, you'll need to recompile the code, but then it should work fine.

---

### SQL Setup

The SQL backend for the library and stats tracking requires a MySQL server.  Your server details go in /config/dbconfig.txt, and the SQL schema is in /SQL/tgstation_schema.sql.  More detailed setup instructions arecoming soon, for now ask in our IRC channel.

---

### IRC Bot Setup

Included in the repo is an IRC bot capable of relaying adminhelps to a specified IRC channel/server (thanks to Skibiliano).  Instructions for bot setup are included in the /bot/ folder along with the bot/relay script itself.
",,2013-08-04T02:45:03Z,2018-02-28T05:38:05Z,212,83,1,2,"('wishmandible', 1128), ('caelaislinn', 837), ('SkyMarshal', 775), ('comma', 767), ('baloh.matevz', 682), ('CIB', 659), ('Abi79', 509), ('petethegoat@gmail.com', 380), ('giacomand@gmail.com', 334), ('Tastyfish', 303), ('ericgfwong@hotmail.com', 295), ('elly1989@rocketmail.com', 286), ('n3ophyt3@gmail.com', 284), ('cib', 269), ('Hawk-v3', 252), ('mloc', 237), ('d3athrow', 211), ('vageyenaman@gmail.com', 211), ('johnsonmt88@gmail.com', 207), ('uporotiy', 183), ('Miniature', 180), ('mport2004@gmail.com', 150), ('noisomehollow@lycos.com', 150), ('musketstgstation@gmail.com', 129), ('VivianFoxfoot@gmail.com', 127), ('kortgstation@gmail.com', 127), ('Superxpdude@gmail.com', 117), ('Kortgstation@gmail.com', 111), ('rastaf.zero@gmail.com', 107), ('d_h2005@yahoo.com', 102), ('trubblebass@gmail.com', 101), ('SkyMarshal', 100), ('bizarre.babel@gmail.com', 98), ('quartz235@gmail.com', 98), ('tronaldnwn@hotmail.com', 97), ('baloh.matevz@gmail.com', 96), ('panurgomatic', 88), ('polyxenitopalidou@gmail.com', 82), ('Spamcat', 80), ('sieve32@gmail.com', 79), ('uhangi@gmail.com', 77), ('crazyclonetheninja', 72), ('headswe', 69), ('morikou@gmail.com', 64), ('Jim ""Apples""', 63), ('aranclanos@hotmail.com', 59), ('Asanadas', 58), ('rockdtben', 53), ('MistakeNot4892', 49), ('n3ophyt3', 49), ('ryantennessee@yahoo.com', 49), ('Coderofthecode', 46), ('Mloc', 46), ('RavingManiac', 44), ('LastBattaWolf@hotmail.com', 40), ('AterIgnis', 38), ('firecage@hotmail.com', 35), ('polyxenitopalidou', 34), ('GauHelldragon', 33), ('cagerrin@gmail.com', 33), ('meyar', 30), ('fauxki', 30), ('Ravensdale', 28), ('Uristqwerty', 27), ('daelith.rhedynfre', 27), ('Skiedrake', 25), ('CompactNinja', 24), ('MisterBook', 24), ('only.lurking@gmail.com', 23), ('daniel.cf.hultgren@gmail.com', 22), ('Aryn', 21), ('Head', 21), ('rockdtben@gmail.com', 19), ('unknown', 19), ('heisen51@gmail.com', 18), ('hunterluthi', 18), ('Whitellama', 18), ('Jamini', 17), ('Segrain', 17), ('SniperYeti', 17), ('CompactNinja', 16), ('dopeghoti', 16), ('VitrescentTortoise', 16), ('Ispil', 16), ('bbusse@gmail.com', 15), ('Rygzengrho', 15), ('Daelith.Rhedynfre@gmail.com', 14), ('Kreastr', 14), ('cib', 14), ('joe.heinemeyer@gmail.com', 14), ('Baystation12', 13), ('Nerezza', 13), ('imtakingabreakdontatme', 13), ('unknown', 13), ('CIB123', 12), ('FireFishie', 12), ('Melvin Melonstorm', 12), ('Nerezza', 12), ('Jupotter', 11), ('cib', 11), ('StrumpetPlaya', 11), ('Iberis', 11), ('Atso.Sariola@gmail.com', 10), ('Furlucis', 10), ('KFFFF00', 10), ('quartz235@gmail.com', 10), ('Petethegoat', 9), ('pobiega', 8), ('trubblebass@gmail.com', 8), ('jediluke69', 8), ('cib', 8), ('Xenusicelon', 8), ('Kilakk', 8), ('Drieden', 8), ('Apple_Master', 7), ('Erthilo', 7), ('kaffo', 7), ('NicholasDM', 7), ('Blaank', 7), ('sick-trigger', 7), ('hrotprockets@gmail.com', 6), ('datdoodlemaster@gmail.com', 6), ('PolymorphBlue', 6), ('Mister Fox', 6), ('MagmaRam', 6), ('Glandouze', 6), ('DarkTechnomancer', 6), ('ThatOneGuy42', 6), ('Aranclanos', 6), ('Doohl', 5), ('joeheinemeyer@gmail.com', 5), ('SueTheCake', 5), ('NerdyBoy1104', 5), ('Lexus Langg', 5), ('CubeJackal', 5), ('Aussprites', 5), ('Apple_Master', 5), ('Roaper', 4), ('LibertyStation', 4), ('unknown', 4), ('entrian.tration@gmail.com', 4), ('daelith.rhedynfre@gmail.com', 4), ('cib', 4), ('chickenswings62', 4), ('liambaloh', 4), ('TurboCamel', 4), ('asypereddi', 4), ('Kzd1', 4), ('Gurmil', 4), ('CIB123@gmail.com', 4), ('zartco', 3), ('toemik', 3), ('misterfox', 3), ('matty-1@talktalk.net', 3), ('jack-fractal', 3), ('cib', 3), ('aussprites', 3), ('SweeperM', 3), ('Rowtree', 3), ('nan0desu', 3), ('Mordeth221', 3), ('mijsm', 3), ('Jimapples', 3), ('Carn', 3), ('DeusDactyl', 2), ('musketstgstation@gmail.com', 2), ('hawk.v3@ntlworld.com', 2), ('cib', 2), ('cib', 2), ('Zachary Wilson', 2), ('Wouter Boetje', 2), ('Thrain856', 2), ('SparklySheep', 2), ('SHFFLE', 2), ('Mordeth221', 2), ('Merlyn42', 2), ('Chinsky', 2), ('CIB123@gmail.com', 2), ('proliberate', 2), ('Abi79', 2), ('aussprites@gmail.com', 1), ('cib', 1), ('cib', 1), ('cib', 1), ('cib', 1), ('Ikarrus', 1), ('hrotprockets', 1), ('nemo', 1), ('only.lurking', 1), ('ririchiyo', 1), ('BGare', 1), ('unknown', 1), ('unknown', 1), ('unknown', 1), ('unknown', 1), ('w_johnston@hotmail.com', 1), ('adammartinez271828', 1), ('zoou', 1), ('ZLOFENIX', 1), ('Whitellama', 1), ('Sanerres', 1), ('Rowtree', 1), ('sunfall', 1), ('VinylScratch', 1), ('0xJoey', 1), ('Flashkirby', 1), ('Fire', 1), ('Durandanss13@gmail.com', 1), ('Kyrnz', 1), ('ciiol', 1), ('Chinski', 1), ('(no author)', 1)",32,13,
benniaobuguai/android-project-wo2b,"[DEPRECATED] Eclipse version, Android Studio version to see the link -->","
## 项目结构
图界传说只是基于此框架下的一个很小的应用场景，[wo2b-common-api] + [wo2b-common-wrapper]本身是一套通用的项目框架，能够让你基于此项目快速搭建属于你自己的项目框架。
>wo2b-project-tu123  
\---wo2b-common-wrapper  
\-----wo2b-common-api  
\-----wo2b-tp-android-support-v7-appcompat  
\-----wo2b-tp-android-support-v7-recyclerview  
\-----wo2b-tp-umeng  


![framework](https://github.com/benniaobuguai/android-project-wo2b/blob/master/wo2b-xxx-design/framework.png)


***
## 项目主要模块设计

+ #### 设计合理的Activity
    ![framework](https://github.com/benniaobuguai/android-project-wo2b/blob/master/wo2b-xxx-design/Activity.png)

+ #### 设计合理的Fragment
    ![framework](https://github.com/benniaobuguai/android-project-wo2b/blob/master/wo2b-xxx-design/Fragment.png)
	
+ #### 风格一致的Dialog
    ![framework](https://github.com/benniaobuguai/android-project-wo2b/blob/master/wo2b-xxx-design/Dialog.png)

+ #### 提供通用的Dao(Data Access Object)
    ![framework](https://github.com/benniaobuguai/android-project-wo2b/blob/master/wo2b-xxx-design/RockyDao.png)

+ #### 其它的待补充


***
## 重大版本更新日志
1. 基础类名由Rocky***修改成Base***
2. 在BaseFragmentActivity中统一使用Toolbar替换旧版本的ActionBar
3. 基于ViewPager编写了ViewPagerCompat、AutoScrollableView、AutoScrollPoster等通用性组件
4. 引入了Fragment的Lazy Load方案，修复了首页多页加载速度问题。
5. 界面风格进行了大幅度的修改


### 
## 部分截图


   
   
   

",,2015-01-19T16:13:39Z,2020-01-13T12:14:21Z,1,1,72,15,"('benniaobuguai', 62)",0,0,
dd2repo/BoL,DeadDevil2's Scripts for the Bot of Legends Tool.,,,2014-10-05T03:26:54Z,2017-12-09T10:28:25Z,2,2,6,8,"('dd2repo', 459), ('hanscript', 97)",0,0,
dhamaniasad/HeadlessBrowsers,A list of (almost) all headless web browsers in existence,"Headless Browsers
================

### A list of (almost) all headless web browsers in existence

*A web browser without a graphical user interface, controlled programmatically. Used for automation, testing, and other purposes.*

## Browser engines

*These browser engines fully render web pages or run JavaScript in a virtual DOM*

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[Chromium Embedded Framework](https://bitbucket.org/chromiumembedded/cef) |CEF is a open source project based on the Google Chromium project.        |   JavaScript | BSD |
|[Erik](https://github.com/phimage/Erik) | Headless browser on top of Kanna and WebKit.|Swift| MIT |
|[jBrowserDriver](https://github.com/machinepublishers/jbrowserdriver) | A Selenium-compatible headless browser which is written in pure Java. WebKit-based. Works with any of the Selenium Server bindings.|Java| Apache License v2.0 |
|[PhantomJS](http://phantomjs.org/) | [[Unmaintained]](https://groups.google.com/forum/#!topic/phantomjs/9aI5d-LDuNE) PhantomJS is a headless WebKit scriptable with a JavaScript API. It has fast and native support for various web standards: DOM handling, CSS selector, JSON, Canvas, and SVG. | JavaScript, Python, Ruby, Java, C#, Haskell, Objective-C, Perl, PHP, R(via [Selenium](http://docs.seleniumhq.org/about/platforms.jsp#programming-languages))  | BSD 3-Clause |
|[Splash](https://github.com/scrapinghub/splash) | Splash is a javascript rendering service with an HTTP API. It's a lightweight browser with an HTTP API, implemented in Python using Twisted and QT.|Any| BSD 3-Clause |
|[Surf](https://github.com/headzoo/surf)|Surf is an open source project that implements a virtual web browser that can be controlled programatically | Go | MIT

## Multi drivers

*These libraries can control multiple browser engines (typically using Selenium)*

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[CasperJS](http://casperjs.org/) | [[Unmaintained]](https://github.com/casperjs/casperjs) CasperJS is an open source navigation scripting & testing utility written in Javascript for the PhantomJS WebKit headless browser and SlimerJS (Gecko).        |   JavaScript | MIT |
|[Geb](http://www.gebish.org/) | Geb is a Groovy interface to WebDriver.|Groovy| Apache |
|[Playwright](https://github.com/microsoft/playwright) | Playwright is a Node library to automate the Chromium, WebKit and Firefox browsers with a single API |TypeScript| Apache |
|[playwright-dotnet](https://github.com/microsoft/playwright-dotnet) | Playwright for .NET is a library to automate Chromium, Firefox and WebKit browsers with a single API. |.NET| MIT |
|[playwright-python](https://github.com/microsoft/playwright-python) | Playwright for Python is a library to automate Chromium, Firefox and WebKit browsers with a single API. |Python| Apache |
|[playwright-java](https://github.com/microsoft/playwright-java) | Playwright for Java is a library to automate Chromium, Firefox and WebKit browsers with a single API. |Java| Apache |
|[playwright-go](https://github.com/mxschmitt/playwright-go) | Playwright for Go is a library to automate Chromium, Firefox and WebKit browsers with a single API. |Go| MIT |
|[Selenium](http://seleniumhq.org) | Selenium is a suite of tools to automate web browsers across many platforms.|JavaScript, Python, Ruby, Java, C#, Haskell, Objective-C, Perl, PHP, R, C++| Apache |
|[Splinter](https://splinter.readthedocs.io/en/latest/) | Splinter is an open source tool for testing web applications using Python. It lets you automate browser actions, such as visiting URLs and interacting with their items.|Python| - |
|[SST](https://pypi.python.org/pypi/sst/0.2.4) | SST (selenium-simple-test) is a web test framework that uses Python to generate functional browser-based tests.|Python| - |
|[Watir](https://github.com/watir/watir) | The most elegant way to use Selenium WebDriver with Ruby.|Ruby| MIT |

## PhantomJS drivers

*These libraries control PhantomJS*

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[Ghostbuster](https://github.com/joshbuddy/ghostbuster) | Automated browser testing via phantom.js, with all of the pain taken out! That means you get a real browser, with a real DOM, and can do real testing!|JavaScript| Not specified |
|[jedi-crawler](https://github.com/spacenick/jedi-crawler) | Lightsabing Node/PhantomJS crawler; scrape dynamic content : without the hassle|JavaScript| Not specified |
|[Lotte](https://github.com/StanAngeloff/lotte)| Lotte is a headless, automated testing framework built on top of PhantomJS and inspired by Ghostbuster. | JavaScript | MIT |
|[phantompy](https://github.com/niwinz/phantompy) | Phantompy is a headless WebKit engine with powerful pythonic api build on top of Qt5 Webkit|Python| LGPL-2.1 |
|[X-RAY](https://github.com/lapwinglabs/x-ray) | Supports strings, arrays, arrays of objects, nested object structures, selector API, pagination, crawler, concurrency, throttles, delays, timeouts, and pluggable drivers (PhantomJS, HTTP)|JavaScript| MIT |
|[Horseman](http://www.horsemanjs.org/) | Promise based Node.js module for PhantomJS. Features chainable API, understandable control-flow, support for multiple tabs, and built-in jQuery.|JavaScript| MIT |

## Chromium drivers

*These libraries control Chromium*

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[Awesomium](http://www.awesomium.com/) | Chromium-based headless browser engine|C++, .NET| Free/Commercial |
|[Headless Chromium](https://chromium.googlesource.com/chromium/src/+/lkgr/headless/README.md) | Chromium feature activated with the `--headlesss` flag, currently availible in the nightly build of Chromium, not yet released|C++| Opensource |
|[Puppeteer](https://github.com/GoogleChrome/puppeteer) | Headless Chrome Node API from the Chrome DevTools team|JavaScript| Apache |
|[PuppeteerSharp](https://github.com/kblok/puppeteer-sharp) | PuppeteerSharp is a .NET port of the official Headless Chrome Node.JS Puppeteer API|.NET| MIT |
|[chrome-remote-interface](https://github.com/cyrus-and/chrome-remote-interface) | Chrome Debugging Protocol interface for Node.js|JavaScript| MIT |
|[Chromy](https://github.com/OnetapInc/chromy/) | Features chainable API, mobile emulation, fundamental API such as javascript evaluation. |JavaScript| MIT |
|[chromedp](https://github.com/knq/chromedp) | A faster, simpler way to drive browsers (Chrome, Edge, Safari, Android, etc) without external dependencies (ie, Selenium, PhantomJS, etc) using the Chrome Debugging Protocol.|Go| MIT |
|[Chromeless](https://github.com/graphcool/chromeless) | Chrome automation made simple. Runs locally or headless on AWS Lambda. | JavaScript | MIT |
|[Chrome PHP](https://github.com/chrome-php/headless-chromium-php) | PHP API to drive Chromium or Google Chrome via the Chrome Devtools Protocole. | PHP | Fair |
|[Wendigo](https://github.com/angrykoala/wendigo) | Test-oriented browser automation library using Puppeteer. | JavaScript | GPL-3.0 | 
|[cdp4j](https://github.com/safrizal/cdp4j) | A web-automation library for Java. It can be used for automating the use of web pages and for testing web pages. It use Google Chrome DevTools Protocol to automate Chrome/Chromium based browsers. | Java | cdp4j Commercial License |
|[Pyppeteer](https://github.com/pyppeteer/pyppeteer) | Python port of puppeteer JavaScript (headless) chrome/chromium browser automation library | Python | MIT |
|[Headless Chrome](https://github.com/atroche/rust-headless-chrome) | A high-level API to control headless Chrome or Chromium over the DevTools Protocol. | Rust | None

## Webkit drivers

*These drivers control an in-process instance of Webkit*

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[Browserjet](https://github.com/briankircho/browserjet) | Runs a custom build of webkit, controlled by node.js interface.|JavaScript| Not specified |
|[ghost.py](https://github.com/jeanphix/Ghost.py) | ghost.py is a webkit web client written in python.|Python| MIT |
|[headless_browser](https://github.com/alexandernst/headless_browser) | Headless browser based on WebKit written in C++.|C++| Not Specified |
|[Jabba-Webkit](https://github.com/jabbalaci/Jabba-Webkit) | Jabba's headless webkit browser for scraping AJAX-powered webpages.|Python| Not specified |
|[Jasmine-Headless-Webkit](http://johnbintz.github.io/jasmine-headless-webkit/) | jasmine-headless-webkit uses the QtWebKit widget to run your specs without needing to render a pixel.|Python, JavaScript, Ruby| Free |
|[Python-Webkit](http://www.gnu.org/software/pythonwebkit/) | Python-Webkit is a python extension to Webkit to add full, complete access to Webkit's DOM|Python| GNU |
|[Spynner](https://github.com/makinacorpus/spynner) | Programmatic web browsing module with AJAX support for Python|Python| Not specified |
|[Webloop](https://github.com/sourcegraph/webloop) | Scriptable, headless WebKit with a Go API. | Go | BSD 3-Clause |
|[wkhtmltopdf](http://wkhtmltopdf.org/) wkhtmltox wkhtmltoimage | Command line tool rendering HTML into PDF and other image formats. | shell, C | LGPLv3 |
|[WKZombie](https://github.com/mkoehnke/WKZombie) | Functional headless browser (with JSON support) for iOS using WebKit and hpple/libxml2.|Swift| MIT |

## Other drivers

*These libraries control lesser known browsers or OS-provided web libraries*

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[Cypress](https://www.cypress.io/) | Cypress supports end-to-end, integration and unit tests and makes debugging tests simple. Default engine is headless Electron. |JavaScript| MIT |
|[Nightmare](http://www.nightmarejs.org/) | Nightmare is a high-level browser automation library built as an easier alternative to PhantomJS. It runs on the Electron engine. |JavaScript| MIT |
|[grope](https://github.com/youpy/grope) | A RubyCocoa interface to the macOS WebKit Framework |RubyCocoa| MIT |
|[SlimerJS](http://slimerjs.org/) | SlimerJS is similar to PhantomJs, except that it runs Gecko, the browser engine of Mozilla Firefox, instead of Webkit (And it is not yet truly headless).|JavaScript| Mozilla 2.0 |
|[SpecterJS](https://github.com/andyjansson/specterjs) | A scriptable headless Internet Explorer port of PhantomJS. | JavaScript | MIT |
|[trifleJS](http://triflejs.org/) | A headless Internet Explorer browser using the .NET WebBrowser Class with a Javascript API running on the V8 engine.|JavaScript| MIT |


## Fake Browser Engine

*These libraries are typically naive or HTML-only browsers*

|Name  | About  | Supported Languages | License
|:------------ |:---------------| :----- | :-----------
|[AngleSharp](https://github.com/AngleSharp/AngleSharp) | .Net Http Parsing Library | .NET | MIT |
|[Guillotine](https://github.com/pszyller/Guillotine) | A .NET headless browser, written in C# | .NET | LGPL-3.0 |
|[benv](https://github.com/artsy/benv) | Stub a browser environment in node.js and headlessly test your client-side code.|JavaScript| MIT |
|[browser.rb](https://github.com/tmp8/browser-rb) | Headless Ruby browser on top of Nokogiri and TheRubyRacer|Ruby| Not specified |
|[BrowserKit](https://github.com/symfony/browser-kit) | BrowserKit simulates the behavior of a web browser.|PHP| MIT |
|[DamonJS](https://github.com/damonjs/damon) | Bot navigating urls and doing tasks.|JavaScript| Apache |
|[Headless](https://github.com/roryprimrose/Headless) | Headless browser support for fast web acceptance testing in .Net|.NET| MIT |
|[HeadlessBrowser](https://github.com/clubajax/HeadlessBrowser) | A very miniature headless browser, for testing the DOM on Node.js|JavaScript| Not specified |
|[HtmlUnit](http://htmlunit.sourceforge.net/) | HtmlUnit is a ""GUI-Less browser for Java programs"".|Java| Apache |
|[Jaunt](http://jaunt-api.com/) | Java Web Scraping & Automation API|Java| Apache (monthly edition)|
|[Jauntium](https://jauntium.com/) | Free Java library that allows you to easily automate Chrome, Firefox, Safari, Edge, IE, and other modern web browers.|Java| Apache|
|[JSDom](https://github.com/tmpvar/jsdom) | A JavaScript implementation of the WHATWG DOM and HTML standards, for use with Node.js. |JavaScript| MIT |
|[MechanicalSoup](https://github.com/hickford/MechanicalSoup) | A Python library for automating interaction with websites.|Python| MIT |
|[mechanize](http://wwwsearch.sourceforge.net/mechanize/) | Stateful programmatic web browsing.|Python| BSD 3-Clause, ZPL 2.1 |
|[node-as-browser](https://github.com/seebigs/node-as-browser) | Create a browser-like environment within Node.js |JavaScript| MIT |
|[RoboBrowser](https://github.com/jmcarp/robobrowser) | A simple, Pythonic library for browsing the web without a standalone web browser.|Python| BSD 3-Clause |
|[SimpleBrowser](https://github.com/SimpleBrowserDotNet/SimpleBrowser) | A flexible and intuitive web browser engine designed for automation tasks. Built on the .Net 4 framework.|.NET| BSD 3-Clause |
|[twill](http://twill.idyll.org/) | Twill is a simple language that interacts with basic HTML pages (no JavaScript support).|Python| MIT |
|[WeasyPrint](http://weasyprint.org/) | WeasyPrint is a visual rendering engine for HTML and CSS that can export to PDF. It aims to support web standards for printing.|Python| BSD 3-Clause |
|[WWW::Mechanize](https://metacpan.org/search?size=20&q=WWW%3A%3AMechanize&search_type=modules) |  Headless browser for Perl with many plugins and extensions, notably Test::WWW:Mechanize for testing | Perl | Perl 5 |
|[X-RAY](https://github.com/lapwinglabs/x-ray) | Supports strings, arrays, arrays of objects, nested object structures, selector API, pagination, crawler, concurrency, throttles, delays, timeouts, and pluggable drivers (PhantomJS, HTTP)|JavaScript| MIT |
|[Xidel (Internet Tools)](http://www.videlibri.de/xidel.html) | An XQuery-based cli web scraper for static X/HTML pages and JSON-APIs. |FreePascal, XQuery| GPL-2|
|[Zombie.js](http://zombie.js.org/) | Zombie.js is a lightweight framework for testing client-side JavaScript code in a simulated environment. No browser required.    | JavaScript   | MIT |

## Runs in a browser

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[DalekJS](http://dalekjs.com/) | [unmaintained and recommend TestCafé] Automated cross browser testing with JavaScript.|JavaScript| MIT |
|[TestCafé](https://devexpress.github.io/testcafe/) | Automated browser testing for the modern web development stack.|JavaScript| MIT |
|[Sahi](http://sahipro.com/sahi-open-source/) | Sahi is a cross-browser automation/testing tool with the facility to record and playback scripts.|JavaScript, Java, Ruby, PHP| Apache / Commercial |
|[WatiN](http://watin.org/) | Web Application Testing In .Net|.NET| Apache 2.0 |

## Misc tools

Name  | About  | Supported Languages | License
:------------ |:---------------| :----- | :-----------
|[browser-launcher](https://github.com/substack/browser-launcher) | Detect and launch browser versions, headlessly or otherwise|JavaScript| MIT |
|[Headless Recorder](https://chrome.google.com/webstore/detail/headless-recorder/djeegiggegleadkkbgopoonhjimgehda) | Chrome extension that records your browser interactions and generates a Playwright or Puppeteer script |JavaScript| MIT |
","'automation', 'browser', 'headless-browsers', 'testing'",2014-09-12T18:13:55Z,2024-05-18T06:45:39Z,53,50,6128,188,"('dhamaniasad', 77), ('ReadmeCritic', 3), ('Spudley', 3), ('sangupta', 3), ('hughsw', 2), ('mkoehnke', 2), ('Meir017', 2), ('beckler', 2), ('NexZhu', 2), ('spekulatius', 2), ('Talon Vanderbeken', 1), ('StefRe', 1), ('gsouf', 1), ('ShamsulAmry', 1), ('Sam Pfeiffer', 1), ('snowyu', 1), ('DoomHammer', 1), ('phimage', 1), ('thepont', 1), ('neilstuartcraig', 1), ('1pav', 1), ('VAllens', 1), ('likemusic', 1), ('yoannmoinet', 1), ('androm3da', 1), ('andyjansson', 1), ('angrykoala', 1), ('dotneet', 1), ('electblake', 1), ('jayfang', 1), ('native-api', 1), ('techpavan', 1), ('Adrián Garrido', 1), ('a0viedo', 1), ('antzucaro', 1), ('benibela', 1), ('bennycode', 1), ('bitdeli-chef', 1), ('bhageena', 1), ('seebigs', 1), ('0xced', 1), ('hollingsworthd', 1), ('erithmetic', 1), ('fernando-mf', 1), ('jaredly', 1), ('jogibear9988', 1), ('julianladisch', 1), ('ftoh', 1), ('marclaporte', 1), ('markstos', 1), ('mateusza', 1), ('NathanielInman', 1), ('NayyabGKiani', 1)",43,40,
msurguy/background-blur,Ultra light cross browser image blurring plugin for jQuery,"# Background Blur Plugin

Background Blur plugin is a cross browser jQuery plugin for blurring images.

See http://msurguy.github.io/background-blur/ for documentation and demos 

## Installation and Usage

Install the plugin with Bower:

`bower install background-blur`

Or with NPM:

`npm install background-blur`

Or manually:
```javascript


```

Create a container which will contain the blurred image:

```html

```
Then create a blurred image in that container:

```javascript
$('#some-element').backgroundBlur({
    imageURL : 'http://URL-of-the-image',
    blurAmount : 50,
    imageClass : 'bg-blur'
});
```

OR Create a blurred image and fade it in:

```javascript
$('#some-element').backgroundBlur({
    imageURL : 'http://URL-of-the-image',
    blurAmount : 50,
    imageClass : 'bg-blur'
    duration: 1000, // If the image needs to be faded in, how long that should take
    endOpacity : 1 // Specify the final opacity that the image will have
});
```

OR Create a blurred image, fade it in and switch to another image:

```javascript
// Initialize the blur
$('#some-element').backgroundBlur({
    imageURL : 'http://URL-of-the-image',
    blurAmount : 50,
    imageClass : 'bg-blur'
    duration: 1000, // If the image needs to be faded in, how long that should take
    endOpacity : 1 // Specify the final opacity that the image will have
});

//Switch the image
$('#some-element').backgroundBlur('http://URL-of-another-image');
```

## Browser Support:

- Chrome
- Firefox
- Safari and Safari Mobile (iOS)
- IE6, IE7, IE8 - blur is supported without animation (need to omit ""duration"" property in those browsers to make this plugin work, the problem will get fixed when Velocity.js issue gets fixed)
- IE9, IE10, IE11
- Android browsers

Possibly, more. Please let me know if some browser doesn't work

## Under the hood:

This plugin utilizes SVG filter to blur the image if SVG is supported by the browser (all except IE), otherwise the plugin creates an IMG tag and applies a special IE-only filter in CSS

**Q:** Why not simply use CSS 3 blur filter? 
**A:** The browser support for SVG blur filter is much wider when it comes to older browsers.

**Velocity.js** support:

If you are using Velocity.js animation library, the plugin will automatically detect its presence and make fade in/fade out animations more performant, especially on mobile. If Velocity is not present on the page, jQuery's ""animate"" is used instead.

## Where is this used?

This plugin is currently used on http://www.nbcnews.com/video

Have questions / suggestions or using the plugin? Please reach out on Github or Twitter at http://twitter.com/msurguy

## LICENSE 

This plugin is released under MIT license, giving you permission to use for commercial and non-commercial projects.
",,2015-07-03T23:16:35Z,2016-08-04T15:12:34Z,2,2,966,38,"('msurguy', 32), ('bendem', 1)",1,1,
dasdom/BreakOutToRefresh,Play BreakOut while loading - A playable pull to refresh view using SpriteKit,"# BreakOutToRefresh
Play BreakOut while loading - A playable pull to refresh view using SpriteKit

![](https://raw.githubusercontent.com/dasdom/BreakOutToRefresh/master/Example/PullToRefreshDemo/what.gif)

BreakOutToRefresh uses SpriteKit to add a playable mini game to the pull to refresh view in a table view. In this case the mini game is BreakOut but a lot of other mini games could be presented in this space.

## Book

If you like this repository and like'd to give me something back, I wrote a book about funny location based projects for iOS. Please check it out: [Build Location-Based Projects for iOS](https://pragprog.com/book/dhios/build-location-based-projects-for-ios)

## Installation

### CocoaPods

Add this to your Podfile:

```
use_frameworks!

pod 'BreakOutToRefresh'
```

### Manual

Add **BreakOutToRefreshView.swift** to your project.

## Usage

If you need it only once in your app, add this to your table view controller:
```swift
class DemoTableViewController: UITableViewController {

  var refreshView: BreakOutToRefreshView!
  
  // ...
  
  override func viewDidLoad() {
    super.viewDidLoad()
    
    refreshView = BreakOutToRefreshView(scrollView: tableView)
    refreshView.refreshDelegate = self
  
    // configure the refresh view
    refreshView.scenebackgroundColor = .white
    refreshView.textColor = .black
    refreshView.paddleColor = .brown
    refreshView.ballColor = .darkGray
    refreshView.blockColors = [.blue, .green, .red]
  
    tableView.addSubview(refreshView)
  }  
}

extension DemoTableViewController: UIScrollViewDelegate {
 
  override func scrollViewDidScroll(scrollView: UIScrollView) {
    refreshView.scrollViewDidScroll(scrollView)
  }
  
  override func scrollViewWillEndDragging(scrollView: UIScrollView, withVelocity velocity: CGPoint, targetContentOffset: UnsafeMutablePointer) {
    refreshView.scrollViewWillEndDragging(scrollView, withVelocity: velocity, targetContentOffset: targetContentOffset)
  }
  
  override func scrollViewWillBeginDragging(scrollView: UIScrollView) {
    refreshView.scrollViewWillBeginDragging(scrollView)
  }
}

extension DemoTableViewController: BreakOutToRefreshDelegate {
  
  func refreshViewDidRefresh(refreshView: BreakOutToRefreshView) {
    // load stuff from the internet
  }

}
```

In case you need it more than once in your app, add the setup to `viewWillAppear` and clean up in `viewWillDisappear` like this:

```swift
override func viewWillAppear(_ animated: Bool) {
  super.viewWillAppear(animated)
  
  refreshView = BreakOutToRefreshView(scrollView: tableView)
  refreshView.refreshDelegate = self
  
  // configure the refresh view
  refreshView.scenebackgroundColor = .white
  refreshView.textColor = .black
  refreshView.paddleColor = .brown
  refreshView.ballColor = .darkGray
  refreshView.blockColors = [.blue, .green, .red]
  
  tableView.addSubview(refreshView)
}

override func viewWillDisappear(_ animated: Bool) {
  super.viewWillDisappear(animated)
  
  refreshView.removeFromSuperview()
  refreshView = nil
}
```

When the loading of new content is finished, call `endRefreshing()` of the `refreshView`.

When `endRefreshing()` is called the mini game doesn't stop immediately. The game stops (and the view is dismissed) when the user lifts the finger. If you like to end the mini game immediately set the `forceEnd` property to true.

## Status

It's kind of beta status.

## Feedback

If you use this code or got inspired by the idea and build an app with an even more awesome PullToRefresh game, please let me know.

## Author

Dominik Hauser

[Twitter: @dasdom](https://twitter.com/dasdom)

[dasdom.github.io](https://dasdom.github.io/)

## Support

If you want to give me something back, I would highly appreciate if you buy [my book about Test-Driven Development with Swift](https://leanpub.com/tddfakebookforios) and give me feedback about it. 

## Thanks

Thanks to [Ben Oztalay](https://github.com/boztalay/BOZPongRefreshControl) and [raywenderlich.com](http://www.raywenderlich.com) for inspiration.

## Licence

MIT
","'breakout', 'mini-game', 'spritekit', 'swift'",2015-01-19T07:27:38Z,2020-06-09T17:35:51Z,7,7,2476,53,"('dasdom', 65), ('younata', 6), ('BenchR267', 5), ('franklinsch', 3), ('hhanesand', 2), ('catalandres', 1), ('tripleCC', 1)",2,2,
pressly/uber-s3,Ruby S3 client with synchronous and asynchronous I/O adapters,"# Uber-S3

A simple, but very fast, S3 client for Ruby supporting
synchronous (net-http) and asynchronous (em+fibers) io.


## Examples

```ruby
require 'uber-s3'

##########################################################################
# Connecting to S3
# adapter can be :net_http or :em_http_fibered
s3 = UberS3.new({
  :access_key         => 'abc',
  :secret_access_key  => 'def',
  :bucket             => 'funbucket',
  :adapter            => :em_http_fibered
})



##########################################################################
# Saving objects
s3.store('/test.txt', 'Look ma no hands')
s3.store('test2.txt', 'Hey hey', :access => :public_read)

o = s3.object('/test.txt')
o.value = 'Look ma no hands'
o.save

# or..

o = UberS3::Object.new(s3.bucket, '/test.txt', 'heyo')
o.save # => true



##########################################################################
# Reading objects
s3['/test.txt'].class       # => UberS3::Object
s3['/test.txt'].value       # => 'heyo'
s3.get('/test.txt').value   # => 'heyo'

s3.exists?('/anotherone')   # => false



##########################################################################
# Object access control

o.access = :private
o.access = :public_read
# etc.

# Valid options:
# :private, :public_read, :public_read_write, :authenticated_read

# See http://docs.amazonwebservices.com/AmazonS3/2006-03-01/dev/index.html?RESTAccessPolicy.html
# NOTE: default object access level is :private



##########################################################################
# Deleting objects
o.delete # => true


##########################################################################
# Save optional parameters
# See http://docs.amazonwebservices.com/AmazonS3/latest/API/index.html?RESTObjectPUT.html

options = { :access => :public_read, :content_type => 'text/plain' }
o = UberS3::Object.new(client.bucket, '/test.txt', 'heyo', options)
o.save

# or..

o = s3.object('/test.txt')
o.value = 'Look ma no hands'
o.access = :public_read
o.content_type = 'text/plain'
o.save

# List of parameter methods:
# :access               -- Object access control
# :cache_control        -- http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9
# :content_disposition  -- http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1
# :content_encoding     -- http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11
# :content_md5          -- End-to-end integrity check
# :content_type         -- http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17
# :expires              -- Number of milliseconds before expiration
# :storage_class        -- Amazon S3's storage levels (redundancy for price)


##########################################################################
# Iterating objects in a bucket
s3.objects('/path').each {|obj| puts obj } 

```

## Ruby version notes

* Tested on MRI 1.9.2, MRI 1.9.3 (net_http / em_http_fibered adapters)
* Tested on JRuby 1.7-dev in 1.9 mode (net_http)
* Ruby 1.8.7 works for net/http clients, em_http_fibered adapter requires fibers

## Other notes

* If Nokogiri is available, it will be automatically used instead of REXML

## TODO

* Refactor UberS3::Object class, consider putting the operations/headers into separate classes
* Better exception handling and reporting
* Query string authentication -- neat feature for providing temporary public access to a private object
* Object versioning support

## Benchmarks

Benchmarks were run with a speedy MBP on a 10Mbit connection

### Saving lots of 1KB files


                                                       user     system      total        real
saving 100x1024 byte objects (net-http)            0.160000   0.080000   0.240000 ( 26.128499)
saving 100x1024 byte objects (em-http-fibered)     0.080000   0.030000   0.110000 (  0.917334)


### Saving lots of 500KB files


                                                       user     system      total        real
saving 100x512000 byte objects (net-http)          0.190000   0.740000   0.930000 ( 91.559123)
saving 100x512000 byte objects (em-http-fibered)   0.230000   0.700000   0.930000 ( 45.119033)


### Conclusion

Yea... async adapter dominates. The 100x1KB files were 29x faster to upload, and the 100x500KB files were only 2x faster, but that is because my upload bandwidth was tapped.


## S3 API Docs

- S3 REST API: http://docs.amazonwebservices.com/AmazonS3/latest/API/
- S3 Request Authorization: http://docs.amazonwebservices.com/AmazonS3/latest/dev/RESTAuthentication.html


## License

MIT License - Copyright (c) 2012 Nulayer Inc.
",,2011-04-28T04:05:05Z,2016-08-02T11:30:17Z,7,2,40,7,"('Peter Kieltyka', 32), ('Paul', 3), ('Peter Kieltyka', 2), ('Peter Kieltyka', 2), ('mulder', 1), ('Tan Tran', 1), ('tsnow', 1)",3,2,
WilliamZang/FastAnimationWithPopDemo,This is 'FastAnimationWithPop' 's demo.,"FastAnimationWithPopDemo
========================

This is '[FastAnimationWithPop](https://github.com/WilliamZang/FastAnimationWithPOP)' 's demo.
",,2014-06-12T08:49:49Z,2014-06-30T01:42:04Z,2,2,66,3,"('WilliamZang', 11), ('hiliuxu', 1)",1,1,
bingmann/stx-btree,"OBSOLETE, contained in https://github.com/tlx/tlx - STX B+ Tree C++ Template Classes - ","# STX B+ Tree C++ Template Classes v0.9

Author: Timo Bingmann (Mail: tb a-with-circle panthema dot net)
Date: 2013-05-05

# **The STX B+ Tree package is obsolete.**

## The B+ Tree code was merged into the **TLX Library**:
https://github.com/tlx/tlx/tree/master/tlx/container

This is an improved version with **better STL semantics** and it will be maintain in the TLX library.

## Summary

The STX B+ Tree package is a set of C++ template classes implementing a B+ tree
key/data container in main memory. The classes are designed as drop-in
replacements of the STL containers set, map, multiset and multimap and follow
their interfaces very closely. By packing multiple value pairs into each node
of the tree the B+ tree reduces heap fragmentation and utilizes cache-line
effects better than the standard red-black binary tree. The tree algorithms are
based on the implementation in Cormen, Leiserson and Rivest's Introduction into
Algorithms, Jan Jannink's paper and other algorithm resources. The classes
contain extensive assertion and verification mechanisms to ensure the
implementation's correctness by testing the tree invariants. To illustrate the
B+ tree's structure a wxWidgets demo program is included in the source package.

## Website / API Docs / Bugs / License

The current source package can be downloaded from
http://panthema.net/2007/stx-btree/

The include files are extensively documented using doxygen. The compiled
doxygen html documentation is included in the source package. It can also be
viewed online at
http://panthema.net/2007/stx-btree/stx-btree-0.9/doxygen-html/

The wxWidgets B+ tree demo program is located in the directory
wxbtreedemo. Compiled binary versions can be found on the package web page.

If bugs should become known they will be posted on the above web page together
with patches or corrected versions.

The B+ tree template source code is released under the Boost Software License,
Version 1.0, which can be found at the header of each include file.

All auxiliary programs like the wxWidgets demo, test suite and speed tests are
licensed under the GNU General Public License v3 (GPLv3), which can be found in
the file COPYING.GPLv3.

## Original Idea

The idea originally arose while coding a read-only database, which used a huge
map of millions of non-sequential integer keys to 8-byte file offsets. When
using the standard STL red-black tree implementation this would yield millions
of 20-byte heap allocations and very slow search times due to the tree's
height. So the original intension was to reduce memory fragmentation and
improve search times. The B+ tree solves this by packing multiple data pairs
into one node with a large number of descendant nodes.

In computer science lectures it is often stated that using consecutive bytes in
memory would be more cache-efficient, because the CPU's cache levels always
fetch larger blocks from main memory. So it would be best to store the keys of
a node in one continuous array. This way the inner scanning loop would be
accelerated by benefiting from cache effects and pipelining speed-ups. Thus the
cost of scanning for a matching key would be lower than in a red-black tree,
even though the number of key comparisons are theoretically larger. This second
aspect aroused my academic interest and resulted in the speed test experiments.

A third inspiration was that no working C++ template implementation of a B+
tree could be found on the Internet. Now this one can be found.

## Implementation Overview

This implementation contains five main classes within the stx namespace
(blandly named Some Template eXtensions). The base class btree implements the
B+ tree algorithms using inner and leaf nodes in main memory. Almost all
STL-required function calls are implemented (see below for the exceptions). The
asymptotic time requirements of the STL standard are theoretically not always
fulfilled. However in practice this B+ tree performs better than the STL's
red-black tree at the cost of using more memory. See the speed test results for
details.

The base class is then specialized into btree_set, btree_multiset, btree_map
and btree_multimap using default template parameters and facade
functions. These classes are designed to be drop-in replacements for the
corresponding STL containers.

The insertion function splits the nodes on recursion unroll. Erase is largely
based on Jannink's ideas. See http://dbpubs.stanford.edu:8090/pub/1995-19 for
his paper on ""Implementing Deletion in B+-trees"".

The two set classes (btree_set and btree_multiset) are derived from the base
implementation class btree by specifying an empty struct as data_type. All
functions are adapted to provide the base class with empty placeholder
objects. Note that it is somewhat inefficient to implement a set or multiset
using a B+ tree: a plain B tree (without +) would hold no extra copies of the
keys. The main focus was on implementing the maps.

## Problem with Separated Key/Data Arrays

The most noteworthy difference to the default red-black tree implementation of
std::map is that the B+ tree does not hold key/data pairs together in
memory. Instead each B+ tree node has two separate arrays containing keys and
data values. This design was chosen to utilize cache-line effects while
scanning the key array.

However it also directly generates many problems in implementing the iterators'
operators. These return a (writable) reference or pointer to a value_type,
which is a std::pair composition. These data/key pairs however are not stored
together and thus a temporary copy must be constructed. This copy should not be
written to, because it is not stored back into the B+ tree. This effectively
prohibits use of many STL algorithms which writing to the B+ tree's
iterators. I would be grateful for hints on how to resolve this problem without
folding the key and data arrays.

## Test Suite

The B+ tree distribution contains an extensive test suite. According to gcov
90.9% of the btree.h implementation is covered.

## STL Incompatibilities

#### Key and Data Type Requirements

The tree algorithms currently do not use copy-construction. All key/data items
are allocated in the nodes using the default-constructor and are subsequently
only assigned new data (using operator=).

#### Key Iterators' Operators

The most important incompatibility are the non-writable operator* and
operator-> of the iterator. See above for a discussion of the problem on
separated key/data arrays. Instead of *iter and iter-> use the new function
iter.data() which returns a writable reference to the data value in the tree.

#### Key Erase Functions

The B+ tree supports three erase functions:

size_type erase(const key_type &key); // erase all data pairs matching key
bool erase_one(const key_type &key);  // erase one data pair matching key
void erase(iterator iter);            // erase pair referenced by iter

The following STL-required function is not supported:

void erase(iterator first, iterator last);

## Extensions

Beyond the usual STL interface the B+ tree classes support some extra goodies.

```
// Output the tree in a pseudo-hierarchical text dump to std::cout. This
// function requires that BTREE_DEBUG is defined prior to including the btree
// headers. Furthermore the key and data types must be std::ostream printable.
void print() const;

// Run extensive checks of the tree invariants. If a corruption in found the
// program will abort via assert(). See below on enabling auto-verification.
void verify() const;

// Serialize and restore the B+ tree nodes and data into/from a binary image.
// This requires that the key and data types are integral and contain no
// outside pointers or references.
void dump(std::ostream &os) const;
bool restore(std::istream &is);
```

## B+ Tree Traits

All tree template classes take a template parameter structure which holds
important options of the implementation. The following structure shows which
static variables specify the options and the corresponding defaults:

```
struct btree_default_map_traits
{
    // If true, the tree will self verify it's invariants after each insert()
    // or erase(). The header must have been compiled with BTREE_DEBUG
    // defined.
    static const bool   selfverify = false;

    // If true, the tree will print out debug information and a tree dump
    // during insert() or erase() operation. The header must have been
    // compiled with BTREE_DEBUG defined and key_type must be std::ostream
    // printable.
    static const bool   debug = false;

    // Number of slots in each leaf of the tree. Estimated so that each node
    // has a size of about 128 bytes.
    static const int    leafslots =
                             MAX( 8, 128 / (sizeof(_Key) + sizeof(_Data)) );

    // Number of slots in each inner node of the tree. Estimated so that each
    // node has a size of about 128 bytes.
    static const int    innerslots =
                             MAX( 8, 128 / (sizeof(_Key) + sizeof(void*)) );

    // As of stx-btree-0.9, the code does linear search in find_lower() and
    // find_upper() instead of binary_search, unless the node size is larger
    // than this threshold. See notes at
    // http://panthema.net/2013/0504-STX-B+Tree-Binary-vs-Linear-Search
    static const size_t binsearch_threshold = 256;
};
```

## Speed Tests

The implementation was tested using the speed test sources contained in the
package. For a long discussion on results please see the web page

http://panthema.net/2007/stx-btree/

",,2012-12-03T00:11:18Z,2023-04-05T10:44:28Z,1,1,212,23,"('bingmann', 156)",0,0,
tgogos/rpi_ffmpeg,FFmpeg on Raspberry Pi 3 Model B with h264 support,"# Static builds (update 2017/08/23)

**--- Downloading and compiling the source code takes a lot of time. ---**

**You can save time** by using the static builds maintained by John Van Sickle and can be found here: [https://www.johnvansickle.com/ffmpeg/](https://www.johnvansickle.com/ffmpeg/). Just make sure that you download the appropriate binary depending on the processor architecture you use.

# FFmpeg on Raspberry Pi 3 with h264 support (2017/01/23)

Steps below are a combination of these 2 sources:
 - [https://www.assetbank.co.uk/support/documentation/install/ffmpeg-debian-squeeze/ffmpeg-debian-jessie/](https://www.assetbank.co.uk/support/documentation/install/ffmpeg-debian-squeeze/ffmpeg-debian-jessie/)
 - [http://www.jeffreythompson.org/blog/2014/11/13/installing-ffmpeg-for-raspberry-pi/](http://www.jeffreythompson.org/blog/2014/11/13/installing-ffmpeg-for-raspberry-pi/)
 
Raspberry Pi 3 Model B with [Raspbian Jessie Lite 2017-01-11](http://vx2-downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2017-01-10/2017-01-11-raspbian-jessie-lite.zip)

```bash
sudo apt-get update
sudo apt-get upgrade
sudo sh -c 'echo ""deb http://www.deb-multimedia.org jessie main non-free"" >> /etc/apt/sources.list.d/deb-multimedia.list'
sudo sh -c 'echo ""deb-src http://www.deb-multimedia.org jessie main non-free"" >> /etc/apt/sources.list.d/deb-multimedia.list'
sudo apt-get update 
sudo apt-get install deb-multimedia-keyring
sudo apt-get update 
sudo apt-get remove ffmpeg
sudo apt-get install build-essential libmp3lame-dev libvorbis-dev libtheora-dev libspeex-dev yasm pkg-config libfaac-dev libopenjpeg-dev libx264-dev
cd /usr/src/
sudo apt-get install git
sudo git clone git://git.videolan.org/x264
cd x264/
sudo ./configure --host=arm-unknown-linux-gnueabi --enable-static --disable-opencl
sudo make
sudo make install
cd /usr/src
sudo git clone https://github.com/FFmpeg/FFmpeg.git
cd FFmpeg/
sudo ./configure --arch=armel --target-os=linux --enable-gpl --enable-libx264 --enable-nonfree
sudo make -j4
sudo make install
ffmpeg -encoders # test it works
```

# Install and test ffmpeg on Raspberry Pi 3 (with Docker)

Docker containers were used, so ffmpeg was not installed directly on the RPi. The docker image has been pushed to [https://hub.docker.com/r/tgogos/ffmpeg/](https://hub.docker.com/r/tgogos/ffmpeg/), you can save time by pulling it and then start testing... If you'd like to reproduce the whole process take a look at the section below ""Download ffmpeg source code / compile""


## Test environment
 - Raspberry Pi 3
 - Host OS: Raspbian Jessie Lite image (downloaded [2016-09-23-raspbian-jessie-lite.zip](http://director.downloads.raspberrypi.org/raspbian_lite/images/raspbian_lite-2016-09-28/2016-09-23-raspbian-jessie-lite.zip) from the official site)
 - Docker image to start with (FROM): `resin/rpi-raspbian:jessie-20160831`
 - Video file: Big Buck Bunny by Blender Foundation [https://www.youtube.com/watch?v=YE7VzlLtp-4](https://www.youtube.com/watch?v=YE7VzlLtp-4)

## Download ffmpeg source code / compile
`* Beware that this compilation procedure takes a few hours to finish`


```bash
apt-get update
apt-get upgrade
apt-get install git
git clone git://source.ffmpeg.org/ffmpeg.git
cd ffmpeg
apt-get install build-essential
apt-get install pkg-config
./configure
make
make install
```


## 1. Test with Docker & without OVS
```bash

+------------------------+              +------------------------+ 
|       Raspberry Pi     |              |          Demo PC       |
|                        |              |                        |
|  +------------------+  |              |                        |
|  | Docker Container |  |              |                        |
|  +------------------+  |              |                        |
|            |           |              |                        |
+------------------------+              +------------------------+
             |                                       |               
             +------------------->-------------------+


# STEP 1 - Raspberry Pi (eth0: 10.143.0.246):
# big_buck_bunny.mp4 is not provided within the docker image
# if it is available on the docker host (RPi), use `docker cp...` to copy it inside the image
ffmpeg -re -i big_buck_bunny.mp4 -vcodec mpeg4 -an -b 1024k -s 640x480 -f mpegts udp:10.143.0.245:9999?pkt_size=1316

# STEP 2 - Demo pc (eth0: 10.143.0.245):
ffplay udp://10.143.0.246:9999
```


## 2. Test with Docker & OVS
Open vSwitch must be installed on the docker host which is the Raspberry Pi, not on any other docker container. Network configuration comes from this source: [https://developer.ibm.com/recipes/tutorials/using-ovs-bridge-for-docker-networking/](https://developer.ibm.com/recipes/tutorials/using-ovs-bridge-for-docker-networking/)
```bash

+------------------------+              +------------------------+ 
|       Raspberry Pi     |              |          Demo PC       |
|                        |              |                        |
|  +------------------+  |              |                        |
|  | Docker Container |  |              |                        |
|  +------------------+  |              |                        |
|            |           |              |                        |
|  +------------------+  |              |                        |
|  |   Open vSwitch   |  |              |                        |
|  +------------------+  |              |                        |
|            |           |              |                        |
+------------------------+              +------------------------+
             |                                       |               
             +------------------->-------------------+


# first add and configure the bridge
sudo ovs-vsctl add-br ovs-br1
sudo ifconfig ovs-br1 192.168.0.1 netmask 255.255.255.0 up
export pubintf=eth0
export priintf=ovs-br1
sudo iptables -t nat -A POSTROUTING -o $pubintf -j MASQUERADE
sudo iptables -A FORWARD -i $priintf -j ACCEPT
sudo iptables -A FORWARD -i $priintf -o $pubintf -m state --state RELATED,ESTABLISHED -j ACCEPT

# then, run a container without network
docker run --net=none --name=ffmpeg_nonet_privileged --privileged -itd tgogos/ffmpeg:latest
docker exec ffmpeg_nonet_privileged ifconfig # this should print out only 'lo'

# add a NIc
sudo ovs-docker add-port ovs-br1 eth0 ffmpeg_nonet_privileged --ipaddress=192.168.0.2/24 --gateway=192.168.0.1
docker exec ffmpeg_nonet_privileged ifconfig # this should print out 'lo' and 'eth0'

# test (RPi: 10.143.0.246, Demo pc: 10.143.0.245)
# big_buck_bunny.mp4 is not provided within the docker image
# if it is available on the docker host (RPi), use `docker cp...` to copy it inside the image
docker attach ffmpeg_nonet_privileged
ffmpeg -re -i big_buck_bunny.mp4 -vcodec mpeg4 -an -b 1024k -s 640x480 -f mpegts udp:10.143.0.245:9999?pkt_size=1316
ffplay udp://10.143.0.246:9999 # for the Demo pc



# commands you might need later...
sudo iptables --flush
sudo ovs-vsctl del-br name_of_bridge
```



## 3. Test with Docker (as transcoder)
```bash

+------------------------+              +------------------------+ 
|       Raspberry Pi     |              |          Demo PC       |
|                        |              |                        |
|  +------------------+  |              |                        |
|  | Docker Container |  |              |                        |
|  +------------------+  |              |                        |
|            |           |              |                        |
+------------------------+              +------------------------+
             |                                       |               
             +--------------(1)--<-------------------+
             |                                       |
             +--------------(2)-->-------------------+

# 1 - Demo PC sends a video
# 2 - Docker container with ffmpeg transcodes it and sends it back


# STEP 1 - Demo pc (eth0: 10.143.0.245):
# start sending the video file at udp port 9999...
ffmpeg -re -i big_buck_bunny.mp4 -vcodec mpeg4 -an -b 1024k -s 640x480 -f mpegts udp://10.143.0.246:9999?pkt_size=1316


# STEP 2 - Raspberry Pi (eth0: 10.143.0.246):
# run a container and expose udp port 9999
docker run -itd --name=ffmpegTranscoder -p 9999:9999/udp tgogos/ffmpeg
docker attach ffmpegTranscoder
# send back through udp port 9998 
ffmpeg -re -i udp:10.143.0.245:9999 -vcodec mpeg4 -b:v 2048 -f mpegts udp:10.143.0.245:9998?pkt_size=1316


# STEP 3 - Demo pc (eth0: 10.143.0.245):
ffplay udp://10.143.0.246:9998
```
","'docker', 'ffmpeg', 'h264', 'ovs', 'raspberry-pi', 'rpi', 'rpi3', 'transcoding'",2016-11-08T10:22:41Z,2018-10-04T21:45:21Z,4,3,66,7,"('tgogos', 12), ('marciogranzotto', 1), ('Matthew Alner', 1), ('kazhuravlev', 1)",3,2,
berwin/Blog,记录成长的过程,"## 高质量文章

#### 经验总结
* [我在阿里一年收获的成长](https://github.com/berwin/Blog/issues/53)
* [【经济学+前端技术】双视角分析 - 哪些技术值得投入学习](https://github.com/berwin/Blog/issues/51)
* [我在阿里半年收获的成长](https://github.com/berwin/Blog/issues/50)
* [小程序底层实现原理及一些思考](https://github.com/berwin/Blog/issues/43)
* [小程序底层实现原理及一些思考2](https://github.com/berwin/Blog/issues/49)
* [需求分析与开发时间评估](https://github.com/berwin/Blog/issues/40)
* [关于“放量”](https://github.com/berwin/Blog/issues/37)
* [谈，前端框架的『御剑之道』](https://github.com/berwin/Blog/issues/26)
* [聊聊我对现代前端框架的认知](https://github.com/berwin/Blog/issues/20)

#### Web性能
* [Web性能领域常见的专业术语](https://github.com/berwin/Blog/issues/46)
* [捕获FMP的原理](https://github.com/berwin/Blog/issues/42)
* [让你的网页更丝滑（全）](https://github.com/berwin/Blog/issues/39)
* [时间切片（Time Slicing）](https://github.com/berwin/Blog/issues/38)
* [让你的网页更丝滑（一）](https://github.com/berwin/Blog/issues/35)
* [优化关键渲染路径](https://github.com/berwin/Blog/issues/32)
* [关键渲染路径](https://github.com/berwin/Blog/issues/29)
* [图像优化原理](https://github.com/berwin/Blog/issues/28)
* [2018你应该知道的Web性能信息采集指南](https://github.com/berwin/Blog/issues/25)
* [嗨，送你一张Web性能优化地图](https://github.com/berwin/Blog/issues/23)

#### Vue
* [Vue.js 模板解析器原理 - 来自《深入浅出Vue.js》第九章](https://github.com/berwin/Blog/issues/36)
* [为什么Vue使用异步更新队列？](https://github.com/berwin/Blog/issues/22)
* [深入浅出 - vue变化侦测原理](https://github.com/berwin/Blog/issues/17)
* [Vue 项目架构设计与工程化实践](https://github.com/berwin/Blog/issues/14)
* [深入浅出 - vue之深入响应式原理](https://github.com/berwin/Blog/issues/11)
* [深入浅出 - vue之State](https://github.com/berwin/Blog/issues/13)

#### Node
* [深入浅出 - Koa](https://github.com/berwin/Blog/issues/8)
* [深入浅出 - Koa2](https://github.com/berwin/Blog/issues/9)
* [深入浅出 - Redux](https://github.com/berwin/Blog/issues/4)

#### 其他
[点击进入查看所有文章](https://github.com/berwin/Blog/issues)


## 技术分享PPT

* [《让你的网页更丝滑》](https://ppt.baomitu.com/d/b267a4a3)
* [《W3C TPAC 2018 Review - 分享如何改变Web世界》](https://slides.com/berwin/w3c-tpac-2018-review/)
* [《南瓜屋 - 技术解决方案与Vue最佳实践》](https://ppt.baomitu.com/d/8a94cafc)
* [《深入浅出Vue.js - VirtualDOM篇》](https://ppt.baomitu.com/d/2afbd5b9)
* [《Vue 项目架构设计与工程化实践》](https://slides.com/berwin/vue-architecture-design-and-engineering-practice)
* [《Vue变化侦测原理》](https://slides.com/berwin/vue-change-detection/)
* [《聊聊类型转换》](https://ppt.baomitu.com/d/e6515023)
* [《Koa原理》](http://berwin.github.io/ppts/koa/)
* [《Co原理》](http://berwin.github.io/ppts/co/)
* [《promise》](http://berwin.github.io/ppts/promise/)

## About

刘博文（Berwin），花名“玖五”，畅销书[《深入浅出Vue.js》](https://item.jd.com/12573168.html)作者、Speaker、阿里巴巴集团大淘宝前端技术专家。现负责淘系包含天猫双11在内的超大型营销活动会场的终端渲染架构以及营销导购在新交互（3D、XR、多人实时互动等）领域的探索。擅长代码与架构的设计并在大淘宝技术Coding Master大赛荣获Golden Coding Master称号（第一名专属）。

简单经历：

* 2012年，17岁，中专毕业
* 2015年，20岁，加入奇舞团（360体量最大、国内TOP级的前端团队）
* 2018年，23岁，加入W3C Web性能工作组
* 2019年，24岁，出版首部技术畅销书籍[《深入浅出Vue.js》](https://item.jd.com/12573168.html)
* 2020年，25岁，加入淘系技术部（阿里巴巴体量最大的前端团队，也是世界东半球最大的前端团队），完成25岁P7小目标，负责11.11、618等超大型营销活动的终端渲染架构与专项PM，帮助亿级消费者剁手。
* 2020年，25岁，获得天猫618战役淘系技术部奖励优秀PM的《码上燃 - 此时此刻非我莫属》荣誉
* 2022年，27岁，获得FY2022年度大淘宝终端技术部《团队贡献奖》
* 2022年，27岁，Coding Master夺冠（大淘宝技术部范围内，由架构组牵头组建三个评委组覆盖三大技术栈：前端、服务端、客户端，对代码进行评分。评委组由P8为主少量P9和资深P7组成，经历两轮评审合议选出优秀代码获胜者，三大技术栈各一名），荣获Golden Coding Master称号

> I have a dream and I believe I can

我喜欢把我的网名叫做 Berwin，因为他是博文的谐音，从2015年开始写博客到现在：
1. 希望后来人少走一些弯路
2. 记录自己的成长过程
3. 希望让那些与我一样非科班，非名校出身的草根前端看到希望，不要放弃前端的梦想，哪怕自己起点很低，“If you believe, you can”

博客的评论里总有一些人调侃我，称我为大佬，但其实我还远配不上“大佬”这两个字，我自己深知自己的技术水平也只是皮毛而已。

坚持写作的动力是因为能看到自己写出来的文章可以得到大家的认可，这种认可让我有动力坚持将自己知道的知识写出来分享给大家，让我们一起共同成长。😊😊

当然，我也有遗憾，我现在内心最遗憾的事就是我没有读过大学，没有体验过大学是什么感觉，也没有学习到学校的一些知识，可能是为了弥补我内心的遗憾，也可能是为了弥补曾经堕落的我，现在最爱做的事就是看书，喜欢学习自己不知道的知识。

## 联系方式

除了这里，还可以在其他的地方找到我。

* Twitter（活跃）：https://twitter.com/jiuwu_lbw
* 知乎：https://www.zhihu.com/people/berwin-95/activities
","'article', 'blog', 'education', 'javascript', 'koa', 'learn-to-code', 'learning', 'learning-js', 'vue'",2015-11-17T11:07:26Z,2022-09-20T03:32:54Z,1,1,4138,313,"('berwin', 87)",0,0,
vlachoudis/bCNC,"GRBL CNC command sender, autoleveler and g-code editor","bCNC
====

GrblHAL (formerly GRBL) CNC command sender, autoleveler, g-code editor, digitizer, CAM
and swiss army knife for all your CNC needs.

An advanced fully featured g-code sender for grblHAL (formerly GRBL). bCNC is a cross platform program (Windows, Linux, Mac) written in python. The sender is robust and fast able to work nicely with old or slow hardware like [Raspberry Pi](http://www.openbuilds.com/threads/bcnc-and-the-raspberry-pi.3038/) (As it was validated by the GRBL maintainer on heavy testing).

## IMPORTANT! If you have any troubles using bCNC, please read [WIKI](https://github.com/vlachoudis/bCNC/wiki) and [DISCUSS](https://github.com/vlachoudis/bCNC/discussions) it first. Only create new [issues](https://github.com/vlachoudis/bCNC/issues) when you are certain there is a problem with actual bCNC code.

[![Build Status](https://travis-ci.com/vlachoudis/bCNC.svg?branch=master)](https://travis-ci.com/vlachoudis/bCNC)
[![CodeFactor](https://www.codefactor.io/repository/github/vlachoudis/bcnc/badge)](https://www.codefactor.io/repository/github/vlachoudis/bcnc)

All pull requests that do change GUI should have attached screenshots of GUI before and after the changes.
Please note that all pull requests should pass the Travis-CI build in order to get merged.
Most pull requests should also pass CodeFactor checks if there is not good reason for failure.
Before making pull request, please test your code on ~~both python2 and~~ python3.

![bCNC screenshot](https://raw.githubusercontent.com/vlachoudis/bCNC/doc/Screenshots/bCNC.png)

# Installation (using pip = recommended!)

This is a short overview of the installation process, for more details see the ![bCNC installation](https://github.com/vlachoudis/bCNC/wiki/Installation) wiki page.

This is how you install (or upgrade) bCNC along with all required packages.
You can use any of these commands (you need only one):

    pip install --upgrade bCNC
    pip install --upgrade git+https://github.com/vlachoudis/bCNC
    pip install . #in git directory
    python -m pip install --upgrade bCNC

This is how you launch bCNC:

    python -m bCNC

Only problem with this approach is that it might not install Tkinter in some cases.
So please keep that in mind and make sure it's installed in case of problems.

If you run the `python -m bCNC` command in root directory of this git repository it will launch the git version.
Every developer should always use this to launch bCNC to ensure that his/her code will work after packaging.

Note that on Windows XP you have to use `pyserial==3.0.1` or older as newer version do not work on XP.

PyPI project: https://pypi.org/project/bCNC/

# Installation (manual)
You will need the following packages to run bCNC
- tkinter the graphical toolkit for python
  Depending your python/OS it can either be already installed,
  or under the names tkinter, python3-tkinter, python-tk
- pyserial or under the name python-serial, python-pyserial
- numpy
- Optionally:
- python-imaging-tk: the PIL libraries for autolevel height map
- python-opencv: for webcam streaming on web pendant
- scipy: for 100 times faster 3D mesh slicing

Expand the directory or download it from github
and run the bCNC command

# Installation (Linux package maintainers)
- Copy `bCNC` subdirectory of this repo to `/usr/lib/python3.x/site-packages/`
- Launch using `python -m bCNC` or install bCNC.sh to /usr/bin
- Alternatively you can fetch the bCNC Python package using pip when building Linux package
  - refer to your distro, eg.: https://wiki.archlinux.org/index.php/Python_package_guidelines
  - Py2deb to build Debian package from Python package: https://pypi.org/project/py2deb/

# Installation (Compile to Windows .exe)

Note that you might probably find some precompiled .exe files on github ""releases"" page:
https://github.com/vlachoudis/bCNC/releases
But they might not be up to date.

This is basic example of how to compile bCNC to .exe file.
(given that you have working bCNC in the first place, eg. using `pip install bCNC`).
Go to the directory where is your bCNC installed and do the following:

    pip install pyinstaller
    pyinstaller --onefile --distpath . --hidden-import tkinter --paths lib;plugins;controllers --icon bCNC.ico --name bCNC __main__.py

This will take a minute or two. But in the end it should create `bCNC.exe`.
Also note that there is `make-exe.bat` file which will do just that for you.
This will also create rather large ""build"" subdirectory.
That is solely for caching purposes and you should delete it before redistributing!

If you are going to report bugs in .exe version of bCNC,
please check first if that bug occurs even when running directly in python (without .exe build).

# IMPORTANT! Motion controller (grblHAL) settings
- We strongly recommend you to use 32b microcontroller with grblHAL firmware for the new machine builds. https://github.com/grblHAL (Original GRBL firmware is still supported, but it is currently reaching the end-of-life due to limitations of 8b microcontrollers)
- GRBL should be configured to use **MPos** rather than **Wpos**. This means that `$10=` should be set to odd number. As of GRBL 1.1 we recommend setting `$10=3`. If you have troubles communicating with your machine, you can try to set failsafe value `$10=1`.
- CADs, bCNC and GRBL all work in millimeters by default. Make sure that `$13=0` is set in GRBL, if you experience strange behavior. (unless you've configured your CAD and bCNC to use inches)
- Before filing bug please make sure you use latest stable official release of GRBL. Older and unofficial releases might work, but we frequently see cases where they don't. So please upgrade firmware in your Arduinos to reasonably recent version if you can.
- Also read about all possible GRBL settings and make sure your setup is correct: https://github.com/gnea/grbl/wiki/Grbl-v1.1-Configuration
- GrblHAL also has ""Compatibility level"" settings which have to be correctly configured during firmware compilation: https://github.com/grblHAL/core/wiki/Compatibility-level

# Configuration
You can modify most of the parameters from the ""CAM -> Config/Controller"" page.
You can also enable (up to) 6-axis mode in Config section,
but bCNC restart is required for changes to take place.
Only the changes/differences from the default configuration
file will be saved in your home directory ${HOME}/.bCNC  or ~/.bCNC

The default configuration is stored on bCNC.ini in the
installation directory.

*PLEASE DO NOT CHANGE THIS FILE, IT'S GOING TO BE OVERWRITTEN ON EACH UPGRADE OF BCNC*

# Features:
- simple and intuitive interface for small screens
- 3-axis and 6-axis GUI modes
- import/export **g-code**, **dxf** and **svg** files
- 3D mesh slicing **stl** and **ply** files
- fast g-code sender (works nicely on RPi and old hardware)
- workspace configuration (G54..G59 commands)
- user configurable buttons
- g-code **function evaluation** with run time expansion
- feed override during the running for fine tuning
- Easy probing:
  - simple probing
  - center finder with a probing ring
  - **auto leveling**, Z-probing and auto leveling by altering the g-code during
    sending (or permanently autoleveling the g-code file).
  - height color map display
  - create g-code by jogging and recording points (can even use camera for this)
  - **manual tool change** expansion and automatic tool length probing
  - **canned cycles** expansion
- Various Tools:
  - user configurable database of materials, endmills, stock
  - properties database of materials, stock, end mills etc..
  - basic **CAM** features (profiling, pocketing, drilling, flat/helical/ramp cutting, thread milling, cutout tabs, drag knife)
  - User g-code plugins:
    - bowl generator
    - finger joint box generator
    - simple spur gear generator
    - spirograph generator
    - surface flatten
    - play melody from MIDI file using stepper motor frequency
    - ...
- G-Code editor and display
    - graphical display of the g-code, and workspace
    - graphically moving and editing g-code
    - reordering code and **rapid motion optimization**
    - moving, rotating, mirroring the g-code
- Web pendant to be used via smart phones

# Debugging
You can log serial communication by changing the port to something like:

    spy:///dev/ttyUSB0?file=serial_log.txt&raw
    spy://COM1?file=serial_log.txt&raw

If a file isn't specified, the log is written to stderr.
The 'raw' option outputs the data directly, instead of creating a hex dump.
Further documentation is available at: https://pyserial.readthedocs.io/en/latest/url_handlers.html#spy

# Disclaimer
  The software is made available ""AS IS"". It seems quite stable, but it is in
  an early stage of development.  Hence there should be plenty of bugs not yet
  spotted. Please use/try it with care, I don't want to be liable if it causes
  any damage :)
",,2014-10-17T13:37:02Z,2024-06-05T14:08:12Z,95,78,1537,184,"('vlachoudis', 757), ('Harvie', 634), ('SteveMoto', 120), ('HomineLudens', 118), ('vlachoudis', 114), ('LittlePierre', 96), ('bosd', 55), ('MARIOBASZ', 31), ('ThierryM', 21), ('tsmarks', 18), ('tatarize', 16), ('apshu', 13), ('coddingtonbear', 12), ('CarlosGS', 12), ('Felix', 10), ('onekk', 9), ('Bradley McLean', 9), ('gcobos', 8), ('gagath', 8), ('bgbsww', 8), ('GitHubCaps', 7), ('sfinexer', 7), ('jeffmd', 7), ('pci06', 6), ('mandrav', 6), ('LepeshkinSN', 6), ('Engineer2Designer', 6), ('Georgwei', 5), ('jarretluft', 5), ('dguerizec', 5), ('dshaded', 4), ('Git-Bruno', 4), ('dwrobel', 4), ('buschhardtt', 4), ('justinclift', 4), ('andyHa', 3), ('stm32f1', 3), ('manoukianv', 3), ('luzpaz', 3), ('Vasilis Vlachoudis', 3), ('m-g-m', 3), ('jdiderik', 3), ('eyal0', 3), ('Quiigi', 2), ('ptvoinfo', 2), ('hypothermic', 2), ('rschell', 2), ('kvinwang', 2), ('jlirochon', 2), ('yarda', 2), ('chahk0129', 2), ('Himura2la', 2), ('sttts', 2), ('minithc', 2), ('kswiorek', 1), ('kswiorek', 1), ('jmomadit', 1), ('jjayd', 1), ('MoonCactus', 1), ('flemish4', 1), ('cmp168', 1), ('batman-ua', 1), ('aib', 1), ('Vasilis Vlachoudis', 1), ('AdamKrovina', 1), ('leofaoro', 1), ('maxpautsch', 1), ('mihointech', 1), ('moacirbmn', 1), ('moacirbmn', 1), ('slichtzzz', 1), ('tawera', 1), ('treki1', 1), ('tuxun', 1), ('user', 1), ('Agathe Porte', 1), ('Bluermen', 1), ('cshunt', 1), ('David Leggett', 1), ('feistus', 1), ('GitHubCaps', 1), ('HolyBlackCat', 1), ('JT', 1), ('wolfmanjm', 1), ('kdomanski', 1), ('tirkarthi', 1), ('Luke Andrew', 1), ('maduka-ariyasiri', 1), ('m1ch', 1), ('goddisignz', 1), ('Plamen Peev', 1), ('rlogiacco', 1), ('ddooinee', 1), ('tmbdev', 1), ('vatral', 1)",41,30,
xmcp/bilibili-ban-list,居家旅行常备的B站弹幕屏蔽列表,"### 【电脑 Chrome / Firefox 用户建议配合 [xmcp/pakku.js](https://github.com/xmcp/pakku.js) 使用以起到史诗级的防弹幕刷屏效果】


# bilibili-ban-list
居家旅行常备的B站弹幕屏蔽列表

**出于作者对新规则误判率的担忧，暂不接受 Pull Request，要修改的话自己 fork 就好**

## 使用方式

1. 下载 `tv.bilibili.player.xml`
2. 在B站播放器的【屏蔽设定】→【屏蔽词】里点右键→【导入XML文件】

## 本屏蔽列表都能屏蔽什么？

- 超长弹幕刷屏
```
↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→↗→↘→

ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ-_-ˉ
```

- 意义不明
```
，。
~
！
怎么发弹幕？
弹幕测试
```

- 违建类弹幕
```
怎么发弹幕墙？
怎么发弹幕墙？
怎么发弹幕墙？
怎么发弹幕墙？

   立  体  弹  幕
  立   体   弹   幕
 立    体    弹    幕
立     体     弹     幕

我是姨妈红
帽子绿
```

- 飙车类弹幕
```
红色三倍速

   漂移~
左飘
          右漂
```

- 空降类弹幕
```
空降成功，感谢指挥部
盲降差点就成功了
完美空降
空难现场
```

- 播放相关弹幕
```
500W助攻！
我要让你破500万

第二！
前1000！

一口气12集
一百口气一集
完结撒花~

200个小伙伴们你们豪
八周目加我一个
```

- 跟风刷屏
```
什么？大清亡了？
什么!? 魔禁三出了?

《高等数学》
《银河系漫游指南》
《题乾涉经》
《五年高考三年模拟》

超炮入宅
俺妹入宅
fate入宅
白色相簿入宅

告诉蕾姆我还爱他
蕾姆在我床上
蕾姆是我的老婆

喜欢van♂的你暴露了，我也暴露了
```

- 无意义撕逼
```
FFF团不烧真爱
你们吃豆腐脑都不加糖的吗？
```

- 时间戳类弹幕
```
2000.1.23路过
2000-3-21

1月23的加我一个

8：15

元旦快乐
```

…… 
","'bilibili', 'danmaku', 'regex'",2016-07-29T05:14:14Z,2017-09-27T15:14:39Z,1,1,147,6,"('xmcp', 46)",0,0,
Unity-Technologies/AssetBundles-Browser,Editor tool for viewing and debugging asset bundle contents before and after builds,"# Unity Asset Bundle Browser tool

Note: This tool is not a supported utility.

This tool enables the user to view the content of built AssetBundles (on the ""Inspect"" tab).  This can be useful, but viewing extremely large AssetBundles can lead to slow performance and memory issues.

The ""Configure"" tab offers basic functionality for assigning Assets and Scenes to bundles, similar to using the AssetBundle control at the bottom of the Inspector.  

The ""Build"" tab offers basic functionality to assist in setting up a call to [BuildPipeline.BuildAssetBundles()](https://docs.unity3d.com/ScriptReference/BuildPipeline.BuildAssetBundles.html).

## Alternatives

It is recommended to use the [Addressables package](https://docs.unity3d.com/Packages/com.unity.addressables@latest) to define and build AssetBundles, rather than the Asset Bundle Browser.

[UnityDataTools](https://github.com/Unity-Technologies/UnityDataTools) is an alternative way to view the content of built AssetBundles.

## Installation
To install the Asset Bundle Browser:

* Open the Unity Package Manager in your Project (menu: Windows > Package Manager).
* Click the + (Add) button at the top, left corner of the window.
* Choose Add package from git URL…
* Enter https://github.com/Unity-Technologies/AssetBundles-Browser.git as the URL
* Click Add.
The Package Manager downloads and installs the package’s “master” branch.

Once installed it will create a new menu item in *Window->AssetBundle Browser*.  

## Full Documentation

See the included [project manual page](Documentation/com.unity.assetbundlebrowser.md).

",,2016-11-17T19:41:13Z,2023-01-11T17:40:25Z,20,17,2147,816,"('alffanclub', 162), ('paulb-unity', 38), ('AndyMUnity', 13), ('ObsessiveNerd', 8), ('BrettKercher', 8), ('Mark Gants', 5), ('Morgan Moon', 4), ('MorganMoon', 4), ('stephen-palmer', 4), ('artofcode', 4), ('hiroki-o', 3), ('HozeSio', 2), ('QXSoftware', 2), ('alexlian', 1), ('SkowronskiAndrew', 1), ('Coeur', 1), ('jakubsmaga', 1), ('liortal53', 1), ('MartinGram', 1), ('RomanWiche', 1)",7,6,
twbs/bootstrap-sass,Official Sass port of Bootstrap 2 and 3.,"# Bootstrap 3 for Sass
[![Gem Version](https://badge.fury.io/rb/bootstrap-sass.svg)](http://badge.fury.io/rb/bootstrap-sass)
[![npm version](https://img.shields.io/npm/v/bootstrap-sass.svg?style=flat)](https://www.npmjs.com/package/bootstrap-sass)
[![Bower Version](https://badge.fury.io/bo/bootstrap-sass.svg)](http://badge.fury.io/bo/bootstrap-sass)
[![Build Status](https://img.shields.io/travis/twbs/bootstrap-sass.svg)](https://travis-ci.org/twbs/bootstrap-sass)

`bootstrap-sass` is a Sass-powered version of [Bootstrap](https://github.com/twbs/bootstrap) 3, ready to drop right into your Sass powered applications.

This is Bootstrap **3**. For Bootstrap **4** use the [Bootstrap rubygem](https://github.com/twbs/bootstrap-rubygem) if you use Ruby, and the [main repo](https://github.com/twbs/bootstrap) otherwise.

## Installation

Please see the appropriate guide for your environment of choice:

* [Ruby on Rails](#a-ruby-on-rails).
* [Bower](#b-bower).
* [npm / Node.js](#c-npm--nodejs).

### a. Ruby on Rails

`bootstrap-sass` is easy to drop into Rails with the asset pipeline.

In your Gemfile you need to add the `bootstrap-sass` gem, and ensure that the `sass-rails` gem is present - it is added to new Rails applications by default.

```ruby
gem 'bootstrap-sass', '~> 3.4.1'
gem 'sassc-rails', '>= 2.1.0'
```

`bundle install` and restart your server to make the files available through the pipeline.

Import Bootstrap styles in `app/assets/stylesheets/application.scss`:

```scss
// ""bootstrap-sprockets"" must be imported before ""bootstrap"" and ""bootstrap/variables""
@import ""bootstrap-sprockets"";
@import ""bootstrap"";
```

`bootstrap-sprockets` must be imported before `bootstrap` for the icon fonts to work.

Make sure the file has `.scss` extension (or `.sass` for Sass syntax). If you have just generated a new Rails app,
it may come with a `.css` file instead. If this file exists, it will be served instead of Sass, so rename it:

```console
$ mv app/assets/stylesheets/application.css app/assets/stylesheets/application.scss
```

Then, remove all the `*= require_self` and `*= require_tree .` statements from the sass file. Instead, use `@import` to import Sass files.

Do not use `*= require` in Sass or your other stylesheets will not be [able to access][antirequire] the Bootstrap mixins or variables.

Bootstrap JavaScript depends on jQuery.
If you're using Rails 5.1+, add the `jquery-rails` gem to your Gemfile:

```ruby
gem 'jquery-rails'
```

```console
$ bundle install
```

Require Bootstrap Javascripts in `app/assets/javascripts/application.js`:

```js
//= require jquery
//= require bootstrap-sprockets
```

`bootstrap-sprockets` and `bootstrap` [should not both be included](https://github.com/twbs/bootstrap-sass/issues/829#issuecomment-75153827) in `application.js`.

`bootstrap-sprockets` provides individual Bootstrap Javascript files (`alert.js` or `dropdown.js`, for example), while
`bootstrap` provides a concatenated file containing all Bootstrap Javascripts.

#### Bower with Rails

When using [bootstrap-sass Bower package](#c-bower) instead of the gem in Rails, configure assets in `config/application.rb`:

```ruby
# Bower asset paths
root.join('vendor', 'assets', 'bower_components').to_s.tap do |bower_path|
  config.sass.load_paths << bower_path
  config.assets.paths << bower_path
end
# Precompile Bootstrap fonts
config.assets.precompile << %r(bootstrap-sass/assets/fonts/bootstrap/[\w-]+\.(?:eot|svg|ttf|woff2?)$)
# Minimum Sass number precision required by bootstrap-sass
::Sass::Script::Value::Number.precision = [8, ::Sass::Script::Value::Number.precision].max
```

Replace Bootstrap `@import` statements in `application.scss` with:

```scss
$icon-font-path: ""bootstrap-sass/assets/fonts/bootstrap/"";
@import ""bootstrap-sass/assets/stylesheets/bootstrap-sprockets"";
@import ""bootstrap-sass/assets/stylesheets/bootstrap"";
```

Replace Bootstrap `require` directive in `application.js` with:

```js
//= require bootstrap-sass/assets/javascripts/bootstrap-sprockets
```

#### Rails 4.x

Please make sure `sprockets-rails` is at least v2.1.4.

#### Rails 3.2.x

bootstrap-sass is no longer compatible with Rails 3. The latest version of bootstrap-sass compatible with Rails 3.2 is v3.1.1.0.

### b. Bower

bootstrap-sass Bower package is compatible with node-sass 3.2.0+. You can install it with:

```console
$ bower install bootstrap-sass
```

Sass, JS, and all other assets are located at [assets](/assets).

By default, `bower.json` main field list only the main `_bootstrap.scss` and all the static assets (fonts and JS).
This is compatible by default with asset managers such as [wiredep](https://github.com/taptapship/wiredep).

#### Node.js Mincer

If you use [mincer][mincer] with node-sass, import Bootstrap like so:

In `application.css.ejs.scss` (NB **.css.ejs.scss**):

```scss
// Import mincer asset paths helper integration
@import ""bootstrap-mincer"";
@import ""bootstrap"";
```

In `application.js`:

```js
//= require bootstrap-sprockets
```

See also this [example manifest.js](/test/dummy_node_mincer/manifest.js) for mincer.

### c. npm / Node.js
```console
$ npm install bootstrap-sass
```


## Configuration

### Sass

By default all of Bootstrap is imported.

You can also import components explicitly. To start with a full list of modules copy
[`_bootstrap.scss`](assets/stylesheets/_bootstrap.scss) file into your assets as `_bootstrap-custom.scss`.
Then comment out components you do not want from `_bootstrap-custom`.
In the application Sass file, replace `@import 'bootstrap'` with:

```scss
@import 'bootstrap-custom';
```

### Sass: Number Precision

bootstrap-sass [requires](https://github.com/twbs/bootstrap-sass/issues/409) minimum [Sass number precision][sass-precision] of 8 (default is 5).

Precision is set for Ruby automatically when using the `sassc-rails` gem.
When using the npm or Bower version with Ruby, you can set it with:

```ruby
::Sass::Script::Value::Number.precision = [8, ::Sass::Script::Value::Number.precision].max
```

### Sass: Autoprefixer

Bootstrap requires the use of [Autoprefixer][autoprefixer].
[Autoprefixer][autoprefixer] adds vendor prefixes to CSS rules using values from [Can I Use](https://caniuse.com/).

To match [upstream Bootstrap's level of browser compatibility](https://getbootstrap.com/getting-started/#support), set Autoprefixer's `browsers` option to:
```json
[
  ""Android 2.3"",
  ""Android >= 4"",
  ""Chrome >= 20"",
  ""Firefox >= 24"",
  ""Explorer >= 8"",
  ""iOS >= 6"",
  ""Opera >= 12"",
  ""Safari >= 6""
]
```

### JavaScript

[`assets/javascripts/bootstrap.js`](/assets/javascripts/bootstrap.js) contains all of Bootstrap's JavaScript,
concatenated in the [correct order](/assets/javascripts/bootstrap-sprockets.js).


#### JavaScript with Sprockets or Mincer

If you use Sprockets or Mincer, you can require `bootstrap-sprockets` instead to load the individual modules:

```js
// Load all Bootstrap JavaScript
//= require bootstrap-sprockets
```

You can also load individual modules, provided you also require any dependencies.
You can check dependencies in the [Bootstrap JS documentation][jsdocs].

```js
//= require bootstrap/scrollspy
//= require bootstrap/modal
//= require bootstrap/dropdown
```

### Fonts

The fonts are referenced as:

```scss
""#{$icon-font-path}#{$icon-font-name}.eot""
```

`$icon-font-path` defaults to `bootstrap/` if asset path helpers are used, and `../fonts/bootstrap/` otherwise.

When using bootstrap-sass with Compass, Sprockets, or Mincer, you **must** import the relevant path helpers before Bootstrap itself, for example:

```scss
@import ""bootstrap-compass"";
@import ""bootstrap"";
```

## Usage

### Sass

Import Bootstrap into a Sass file (for example, `application.scss`) to get all of Bootstrap's styles, mixins and variables!

```scss
@import ""bootstrap"";
```

You can also include optional Bootstrap theme:

```scss
@import ""bootstrap/theme"";
```

The full list of Bootstrap variables can be found [here](https://getbootstrap.com/customize/#less-variables). You can override these by simply redefining the variable before the `@import` directive, e.g.:

```scss
$navbar-default-bg: #312312;
$light-orange: #ff8c00;
$navbar-default-color: $light-orange;

@import ""bootstrap"";
```

### Eyeglass

Bootstrap is available as an [Eyeglass](https://github.com/sass-eyeglass/eyeglass) module. After installing Bootstrap via NPM you can import the Bootstrap library via:

```scss
@import ""bootstrap-sass/bootstrap""
```

or import only the parts of Bootstrap you need:

```scss
@import ""bootstrap-sass/bootstrap/variables"";
@import ""bootstrap-sass/bootstrap/mixins"";
@import ""bootstrap-sass/bootstrap/carousel"";
```

## Version

Bootstrap for Sass version may differ from the upstream version in the last number, known as
[PATCH](https://semver.org/spec/v2.0.0.html). The patch version may be ahead of the corresponding upstream minor.
This happens when we need to release Sass-specific changes.

Before v3.3.2, Bootstrap for Sass version used to reflect the upstream version, with an additional number for
Sass-specific changes. This was changed due to Bower and npm compatibility issues.

The upstream versions vs the Bootstrap for Sass versions are:

| Upstream |    Sass |
|---------:|--------:|
|    3.3.4+ |   same |
|    3.3.2 |   3.3.3 |
| <= 3.3.1 | 3.3.1.x |

Always refer to [CHANGELOG.md](/CHANGELOG.md) when upgrading.

---

## Development and Contributing

If you'd like to help with the development of bootstrap-sass itself, read this section.

### Upstream Converter

Keeping bootstrap-sass in sync with upstream changes from Bootstrap used to be an error prone and time consuming manual process. With Bootstrap 3 we have introduced a converter that automates this.

**Note: if you're just looking to *use* Bootstrap 3, see the [installation](#installation) section above.**

Upstream changes to the Bootstrap project can now be pulled in using the `convert` rake task.

Here's an example run that would pull down the master branch from the main [twbs/bootstrap](https://github.com/twbs/bootstrap) repo:

    rake convert

This will convert the latest LESS to Sass and update to the latest JS.
To convert a specific branch or version, pass the branch name or the commit hash as the first task argument:

    rake convert[e8a1df5f060bf7e6631554648e0abde150aedbe4]

The latest converter script is located [here][converter] and does the following:

* Converts upstream Bootstrap LESS files to its matching SCSS file.
* Copies all upstream JavaScript into `assets/javascripts/bootstrap`, a Sprockets manifest at `assets/javascripts/bootstrap-sprockets.js`, and a concatenation at `assets/javascripts/bootstrap.js`.
* Copies all upstream font files into `assets/fonts/bootstrap`.
* Sets `Bootstrap::BOOTSTRAP_SHA` in [version.rb][version] to the branch sha.

This converter fully converts original LESS to SCSS. Conversion is automatic but requires instructions for certain transformations (see converter output).
Please submit GitHub issues tagged with `conversion`.

## Credits

bootstrap-sass has a number of major contributors:


* [Thomas McDonald](https://twitter.com/thomasmcdonald_)
* [Tristan Harward](http://www.trisweb.com)
* Peter Gumeson
* [Gleb Mazovetskiy](https://github.com/glebm)

and a [significant number of other contributors][contrib].

## You're in good company
bootstrap-sass is used to build some awesome projects all over the web, including
[Diaspora](https://diasporafoundation.org/), [rails_admin](https://github.com/sferik/rails_admin),
Michael Hartl's [Rails Tutorial](https://www.railstutorial.org/), [gitlabhq](http://gitlabhq.com/) and
[kandan](http://getkandan.com/).

[converter]: https://github.com/twbs/bootstrap-sass/blob/master/tasks/converter/less_conversion.rb
[version]: https://github.com/twbs/bootstrap-sass/blob/master/lib/bootstrap-sass/version.rb
[contrib]: https://github.com/twbs/bootstrap-sass/graphs/contributors
[antirequire]: https://github.com/twbs/bootstrap-sass/issues/79#issuecomment-4428595
[jsdocs]: https://getbootstrap.com/javascript/#transitions
[sass-precision]: http://sass-lang.com/documentation/Sass/Script/Value/Number.html#precision%3D-class_method
[mincer]: https://github.com/nodeca/mincer
[autoprefixer]: https://github.com/postcss/autoprefixer
",,2011-09-06T18:58:49Z,2024-06-11T08:47:17Z,118,95,12599,546,"('glebm', 570), ('thomas-mcdonald', 196), ('trisweb', 51), ('sporkd', 47), ('cvrebert', 26), ('Thomas McDonald', 10), ('AprilArcus', 4), ('jkelleyj', 4), ('wndxlori', 4), ('mahnunchik', 3), ('corny', 3), ('mjonuschat', 3), ('Blackhawkso', 3), ('Robert Jackson', 3), ('unknown', 3), ('bbenezech', 2), ('danielbayerlein', 2), ('aeyoll', 2), ('Rafael Mendonça França', 2), ('rafaelfranca', 2), ('sbandyopadhyay', 2), ('umairsiddique', 2), ('walgitrus', 2), ('AJ-Acevedo', 1), ('adamakhtar', 1), ('agis', 1), ('ixti', 1), ('AlexZaytsav', 1), ('amitport', 1), ('andrew', 1), ('aderyabin', 1), ('Atul9', 1), ('julian7', 1), ('bernardo', 1), ('BobRazoswki', 1), ('bkerley', 1), ('caarlos0', 1), ('Carlos Diaz-Padron', 1), ('cabgfx', 1), ('coliff', 1), ('masterkain', 1), ('djanowski', 1), ('Damien Cavaillès', 1), ('mojavelinux', 1), ('Dan Bower', 1), ('danchapman', 1), ('epegzz', 1), ('derekprior', 1), ('dimameshcharakou', 1), ('duaconn', 1), ('behrends', 1), ('everaldo', 1), ('etienne', 1), ('ferdiunal', 1), ('gabceb', 1), ('gpakosz', 1), ('morenoh149', 1), ('htanata', 1), ('Ihar Drozdov', 1), ('lazyatom', 1), ('jasononeil', 1), ('JohnAlbin', 1), ('JonathonMA', 1), ('juggy', 1), ('boxofrox', 1), ('kevva', 1), ('kflorence', 1), ('Linuus', 1), ('lucasmazza', 1), ('ltfschoen', 1), ('marcofugaro', 1), ('mdo', 1), ('marshallku', 1), ('mhlavac', 1), ('Dinuz', 1), ('thetamind', 1), ('maxguzenski', 1), ('grosser', 1), ('Mike Chlipala', 1), ('Mohnish Thallavajhula', 1), ('Nerian', 1), ('nschonni', 1), ('nickurban', 1), ('niklas', 1), ('noahd1', 1), ('holli', 1), ('Patrick Ma', 1), ('fofr', 1), ('Pavel Belyakov', 1), ('bittner', 1), ('Peter Marsh', 1), ('parndt', 1), ('Ranglani, Sagar | Saga | ISDOD', 1), ('ReadmeCritic', 1), ('Reinier de Lange', 1), ('robdsoule', 1), ('Scott Mayo', 1), ('shawnacscott', 1), ('Shayan Guha', 1), ('sindresorhus', 1), ('owyongsk', 1), ('Stephen Pike', 1), ('sunnyrjuneja', 1), ('theo-bittencourt', 1), ('tdreyno', 1), ('timoschilling', 1), ('timthelion', 1), ('Trevor', 1), ('Zachary Adams', 1), ('brief', 1), ('chopan', 1), ('hlb', 1), ('intuxicated', 1), ('naiad', 1), ('r7kamura', 1), ('takiy33', 1), ('theverything', 1), ('asecondwill', 1)",95,76,
ItsJonQ/lil-b,"Lil' B - A Bootstrap ""Reset"" Stylesheet","# Bootstrap - Lil' B #
A Bootstrap for Bootstrap

![Lil B Logo](https://raw.githubusercontent.com/ItsJonQ/bootstrap-lil-b/master/images/bootstrap-lil-b-banner.jpg)

Lil' B is a Bootstrap Reset Stylesheet. It was created to ""fix"" spacing inconsistencies and various nuances of Bootstrap. Lil' B also has a handful of helper classes to make bootstrappin' your site that much easier.

### How To Use ###
- Download the b.css file (located in dist/css/b.css) and add it to your project
- Load it up **after** you add bootstrap to your project

#####Example#####
```


```

#### Helper Classes ####

#####""Solo"" Column#####
*.col-solo*

```

    
        
            Content here
        
    

```

This is designed to be added to ""column"" sized elements where you wish to have a desired size (e.g. col-md-8 for width of 66.6667%), but you don't it to float or to have any elements next to it.

This is useful for single-page type layouts where content blocks need to be slightly narrower instead of col-md-12 or container width (default-max 1170px)


#####Responsive Video Embeds#####
*.flex-video*

```

    * Insert your video embed here *

```

This helper class allows for video embeds to be responsive. Most videos these days have a 16:9 (HD) ratio. If your video embed is of a 4:3 (SD) ratio, add .sd along with the .flex-video class.


#####""Position:Fixed"" Optimizer#####
*.fixed-z*

```

    Fixed floating content

```

This helper class adds the ""translateZ"" hack for selectors that are set as position: fixed to help prevent brower repaints on browser scrolls/resize.


#####Disable Selection (No-Select)#####
*.no-select*

```

    ...

```

This helper class disables selection for selectors. This is handy for navigations, links, headers, buttons, etc..


#####Text: Lowercase#####
*.text-lowercase*

```

    i am now lowercase text! EVEN THOUGH THIS PART IS WRITTEN IN UPPERCASE.

```

This helper class transforms the text within to all lowercase.


#####Text: Uppercase#####
*.text-uppercase*

```

    i am now uppercase text! even though.. I am written in lowercase.

```

This helper class transforms the text within to all lowercase.

#####Vertical Align Center#####
*.v-center*

```

    <!-- you don't need to add a class to the child div,
         but you can if you want -->
    
        I'm vertically aligned!
    

```

This helper class helps vertically align elements.
In order to get .v-center to work properly, you have to have a child div within the parent .v-center selector.

It is recommended that you add some sort of height to your .v-center selector to get the desired effect.


**Enjoy! :)**

P.S. Feedback welcome!

### Updates ###
#### April 29, 2014 ####
- added .flex-video for responsive video embeds

#### April 24, 2014 ####
- Split up core functions of Lil B into individual files and relocated them to src/css (e.g. src/css/b.control.css)
- Relocated compiled files to dist/css. There you'll find b.css and b.min.css
- The ""optimization"" (aka repaint fixes) have been submitted to Bootstrap for approval. Hopefully they'll add it into core! :)
",,2014-04-14T23:57:48Z,2014-04-29T17:50:36Z,1,0,14,2,"('ItsJonQ', 68)",0,0,
aws/s2n-tls,An implementation of the TLS/SSL protocols,"

s2n-tls is a C99 implementation of the TLS/SSL protocols that is designed to be simple, small, fast, and with security as a priority. It is released and licensed under the Apache License 2.0.

> s2n-tls is short for ""signal to noise"" and is a nod to the almost magical act of encryption — disguising meaningful signals, like your critical data, as seemingly random noise.
>
> -- [s2n-tls announcement](https://aws.amazon.com/blogs/security/introducing-s2n-a-new-open-source-tls-implementation/)

[![Build Status](https://codebuild.us-west-2.amazonaws.com/badges?uuid=eyJlbmNyeXB0ZWREYXRhIjoiMndlTzJNbHVxWEo3Nm82alp4eGdGNm4rTWdxZDVYU2VTbitIR0ZLbHVtcFFGOW5majk5QnhqaUp3ZEkydG1ueWg0NGlhRE43a1ZnUzZaQTVnSm91TzFFPSIsIml2UGFyYW1ldGVyU3BlYyI6IlJLbW42NENlYXhJNy80QnYiLCJtYXRlcmlhbFNldFNlcmlhbCI6MX0%3D&branch=main)](https://github.com/aws/s2n-tls/)
[![Apache 2 License](https://img.shields.io/github/license/aws/s2n-tls.svg)](http://aws.amazon.com/apache-2-0/)
[![C99](https://img.shields.io/badge/language-C99-blue.svg)](http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1256.pdf)
[![Github forks](https://img.shields.io/github/forks/aws/s2n-tls.svg)](https://github.com/aws/s2n-tls/network)
[![Github stars](https://img.shields.io/github/stars/aws/s2n-tls.svg)](https://github.com/aws/s2n-tls/stargazers)

## Quickstart for Ubuntu

```bash
# clone s2n-tls
git clone https://github.com/aws/s2n-tls.git
cd s2n-tls

# install build dependencies
sudo apt update
sudo apt install cmake

# install a libcrypto
sudo apt install libssl-dev

# build s2n-tls
cmake . -Bbuild \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=./s2n-tls-install
cmake --build build -j $(nproc)
CTEST_PARALLEL_LEVEL=$(nproc) ctest --test-dir build
cmake --install build
```

See the [s2n-tls build documentation](docs/BUILD.md) for further guidance on building s2n-tls for your platform.

## Have a Question?
If you think you might have found a security impacting issue, please follow our [Security Notification Process.](#security-issue-notifications)

If you have any questions about submitting PRs, s2n-tls API usage, or something similar, please open an issue.

## Documentation

s2n-tls uses [Doxygen](https://doxygen.nl/index.html) to document its public API. The latest s2n-tls documentation can be found on [GitHub pages](https://aws.github.io/s2n-tls/doxygen/). The [Usage Guide](https://aws.github.io/s2n-tls/usage-guide/) explains how different TLS features can be configured and used.

Documentation for older versions or branches of s2n-tls can be generated locally. To generate the documentation, install doxygen and run `doxygen docs/doxygen/Doxyfile`. The doxygen documentation can now be found at `docs/doxygen/output/html/index.html`.

Doxygen installation instructions are available at the [Doxygen](https://doxygen.nl/download.html) webpage.

## Using s2n-tls

The s2n-tls I/O APIs are designed to be intuitive to developers familiar with the widely-used POSIX I/O APIs, and s2n-tls supports blocking, non-blocking, and full-duplex I/O. Additionally there are no locks or mutexes within s2n-tls.

```c
/* Create a server mode connection handle */
struct s2n_connection *conn = s2n_connection_new(S2N_SERVER);
if (conn == NULL) {
    ... error ...
}

/* Associate a connection with a file descriptor */
if (s2n_connection_set_fd(conn, fd) < 0) {
    ... error ...
}

/* Negotiate the TLS handshake */
s2n_blocked_status blocked;
if (s2n_negotiate(conn, &blocked) < 0) {
    ... error ...
}

/* Write data to the connection */
int bytes_written;
bytes_written = s2n_send(conn, ""Hello World"", sizeof(""Hello World""), &blocked);
```

For details on building the s2n-tls library and how to use s2n-tls in an application you are developing, see the [Usage Guide](https://aws.github.io/s2n-tls/usage-guide).

## s2n-tls features

s2n-tls implements SSLv3, TLS1.0, TLS1.1, TLS1.2, and TLS1.3. For encryption, s2n-tls supports 128-bit and 256-bit AES in the CBC and GCM modes, ChaCha20, 3DES, and RC4. For forward secrecy, s2n-tls supports both DHE and ECDHE. s2n-tls also supports the Server Name Indicator (SNI), Application-Layer Protocol Negotiation (ALPN), and Online Certificate Status Protocol (OCSP) TLS extensions. SSLv3, RC4, 3DES, and DHE are each disabled by default for security reasons.

As it can be difficult to keep track of which encryption algorithms and protocols are best to use, s2n-tls features a simple API to use the latest ""default"" set of preferences. If you prefer to remain on a specific version for backwards compatibility, that is also supported.

```c
/* Use the latest s2n-tls ""default"" set of ciphersuite and protocol preferences */
s2n_config_set_cipher_preferences(config, ""default"");

/* Use a specific set of preferences, update when you're ready */
s2n_config_set_cipher_preferences(config, ""20150306"")
```

## s2n-tls safety mechanisms

Internally s2n-tls takes a systematic approach to data protection and includes several mechanisms designed to improve safety.

##### Small and auditable code base
Ignoring tests, blank lines and comments, s2n-tls is about 6,000 lines of code. s2n's code is also structured and written with a focus on reviewability. All s2n-tls code is subject to code review, and we plan to complete security evaluations of s2n-tls on an annual basis.

To date there have been two external code-level reviews of s2n-tls, including one by a commercial security vendor. s2n-tls has also been shared with some trusted members of the broader cryptography, security, and Open Source communities. Any issues discovered are always recorded in the s2n-tls issue tracker.

##### Static analysis, fuzz-testing and penetration testing

In addition to code reviews, s2n-tls is subject to regular static analysis, fuzz-testing, and penetration testing. Several penetration tests have occurred, including two by commercial vendors.

##### Unit tests and end-to-end testing

s2n-tls includes positive and negative unit tests and end-to-end test cases.

Unit test coverage can be viewed [here](https://dx1inn44oyl7n.cloudfront.net/main/index.html). Note that this represents unit coverage for a particular build. Since that build won't necessarily support all s2n-tls features, test coverage may be artificially lowered.

##### Erase on read
s2n-tls encrypts or erases plaintext data as quickly as possible. For example, decrypted data buffers are erased as they are read by the application.

##### Built-in memory protection
s2n-tls uses operating system features to protect data from being swapped to disk or appearing in core dumps.

##### Minimalist feature adoption
s2n-tls avoids implementing rarely used options and extensions, as well as features with a history of triggering protocol-level vulnerabilities. For example there is no support for session renegotiation or DTLS.

##### Compartmentalized random number generation
The security of TLS and its associated encryption algorithms depends upon secure random number generation. s2n-tls provides every thread with two separate random number generators. One for ""public"" randomly generated data that may appear in the clear, and one for ""private"" data that should remain secret. This approach lessens the risk of potential predictability weaknesses in random number generation algorithms from leaking information across contexts.

##### Modularized encryption
s2n-tls has been structured so that different encryption libraries may be used. Today s2n-tls supports OpenSSL (versions 1.0.2, 1.1.1 and 3.0.x), LibreSSL, BoringSSL, AWS-LC, and the Apple Common Crypto framework to perform the underlying cryptographic operations.

##### Timing blinding
s2n-tls includes structured support for blinding time-based side-channels that may leak sensitive data. For example, if s2n-tls fails to parse a TLS record or handshake message, s2n-tls will add a randomized delay of between 10 and 30 seconds, granular to nanoseconds, before responding. This raises the complexity of real-world timing side-channel attacks by a factor of at least tens of trillions.

##### Table based state-machines
s2n-tls uses simple tables to drive the TLS/SSL state machines, making it difficult for invalid out-of-order states to arise.

##### C safety
s2n-tls is written in C, but makes light use of standard C library functions and wraps all memory handling, string handling, and serialization in systematic boundary-enforcing checks.

## Security issue notifications
If you discover a potential security issue in s2n-tls we ask that you notify
AWS Security via our [vulnerability reporting page](http://aws.amazon.com/security/vulnerability-reporting/). Please do **not** create a public github issue.

If you package or distribute s2n-tls, or use s2n-tls as part of a large multi-user service, you may be eligible for pre-notification of future s2n-tls releases. Please contact s2n-pre-notification@amazon.com.

## Contributing to s2n-tls
If you are interested in contributing to s2n-tls, please see our [development guide](https://github.com/aws/s2n-tls/blob/main/docs/DEVELOPMENT-GUIDE.md).

## Language Bindings for s2n-tls
See our [language bindings list](https://github.com/aws/s2n-tls/blob/main/docs/BINDINGS.md) for language bindings for s2n-tls that we're aware of.
","'c', 'c99', 'crypto', 'cryptography', 'encryption', 's2n', 'ssl', 'tls'",2014-06-27T19:37:59Z,2024-06-18T10:37:41Z,210,178,4456,174,"('colmmacc', 520), ('lrstewart', 450), ('raycoll', 435), ('alexw91', 381), ('jldodds', 219), ('baldwinmatt', 197), ('maddeleine', 158), ('dougch', 152), ('andrewhop', 126), ('zz85', 122), ('alexeblee', 118), ('goatgoose', 95), ('bbutch', 92), ('feliperodri', 90), ('rday', 88), ('xonatius', 88), ('danielsn', 83), ('achudnov', 77), ('camshaft', 76), ('JonathanHenson', 74), ('jmayclin', 72), ('toidiu', 67), ('Aaron Tomb', 50), ('ttjsu-aws', 50), ('fatrat1117', 49), ('WesleyRosenblum', 38), ('harrisonkaiser', 37), ('tawdry-audrey', 37), ('bpdavidson', 37), ('baekkyok', 34), ('ntc2', 32), ('NLMalloy', 29), ('andreistefanescu', 29), ('torben-hansen', 24), ('Justin Boswell', 21), ('aditishri18', 20), ('talnikov', 19), ('tinzh', 17), ('lundinc2', 16), ('Wenjie Li', 14), ('mbauer-galois', 13), ('franklee26', 12), ('pascal-cuoq', 10), ('SaswatPadhi', 9), ('Sungwon Yang', 9), ('amyzhang0330', 9), ('WillChilds-Klein', 8), ('lurkshark', 8), ('hyandell', 7), ('aghour', 7), ('kvrr', 7), ('ravinder-shankesi', 7), ('MvS', 7), ('tianyuqi', 7), ('karkhaz', 7), ('Drucker', 6), ('knightjoel', 6), ('jouho', 6), ('gibson-compsci', 6), ('tautschnig', 6), ('Ares Xu', 5), ('barnabycolby', 5), ('bryce-shang', 5), ('graebm', 5), ('drucker-nir', 5), ('SalusaSecondus', 4), ('phillipberndt', 4), ('sidhusn', 4), ('dkostic', 4), ('samrushing', 4), ('rex-aws', 4), ('Eddy Westbrook', 4), ('atomb', 4), ('ColdenCullen', 4), ('bseidenberg', 4), ('Mark-Simulacrum', 3), ('RyanGlScott', 3), ('angelonakos', 3), ('psanal2018', 3), ('kshreeja', 3), ('polytan', 3), ('William Adams', 3), ('Ravi Singh', 3), ('kevinmcgehee', 3), ('Issac Lam', 3), ('Charlie Stanley', 3), ('mathpal', 3), ('arielb1', 3), ('Anthony Liguori', 3), ('andrew-kaufman', 3), ('Brian Huffman', 2), ('rmartin5', 2), ('RobertRayer', 2), ('rrbranco', 2), ('SDK', 2), ('tniessen', 2), ('pennyannn', 2), ('zh-jq-b', 2), ('mia-stein', 2), ('lurkshark', 2), ('ramesses2nd', 2), ('ranshid', 2), ('aeijdenberg', 2), ('agray256', 2), ('TingDaoK', 2), ('jeking3', 2), ('r-burns', 2), ('samuel40791765', 2), ('0-wiz-0', 2), ('armanbilge', 2), ('cchiw', 2), ('Charisee Chiw', 2), ('adrianahorelu', 2), ('xy008areshsu', 2), ('Charisee Chiw', 2), ('sixlettervariables', 2), ('fsareshwala', 2), ('Gibson', 2), ('jakemas', 2), ('John Hinson', 2), ('trombonehero', 2), ('justsmth', 2), ('kailunqian', 2), ('dfmario', 2), ('markrtuttle', 2), ('nwetzler', 2), ('nobu', 2), ('wps132230', 2), ('raviduttsingh', 2), ('SergeyRyabinin', 1), ('clickyotomy', 1), ('Srinivasan', 1), ('neuhaus', 1), ('gitter-badger', 1), ('timgates42', 1), ('xhochy', 1), ('shraddha-1508', 1), ('g7r', 1), ('sbiscigl', 1), ('ronakfof', 1), ('rod-chapman', 1), ('riverszhang89', 1), ('rgacogne', 1), ('Ramith Jayatilleka', 1), ('qinheping', 1), ('priyasrikumar', 1), ('pzb', 1), ('shijiayangggg', 1), ('rahxephon89', 1), ('petreeftime', 1), ('oxalica', 1), ('mww-aws', 1), ('madolson', 1), ('lshujun93', 1), ('liwenjieQu', 1), ('lgtm-combot', 1), ('hoogit', 1), ('gaugedev', 1), ('fwsGonzo', 1), ('evelynmitchell', 1), ('eidelmanjonathan', 1), ('dtighe', 1), ('carl286', 1), ('c6burns', 1), ('bdonlan', 1), ('azcwagner', 1), ('allskyee', 1), ('venkat1109', 1), ('sliverdragon37', 1), ('glguy', 1), ('stoecker', 1), ('DimasKovas', 1), ('davidlehn', 1), ('ckirkman', 1), ('Colm MacCarthaigh', 1), ('cperciva', 1), ('czakian', 1), ('wcs1only', 1), ('Bret Ambrose', 1), ('jarun', 1), ('noxiouz', 1), ('Animesh Sinsinwal', 1), ('radarhere', 1), ('Andrei Stefanescu', 1), ('a1exeyk', 1), ('alcioa', 1), ('Alcaro', 1), ('SomeoneWeird', 1), ('abraaocsantana', 1), ('pedrotst', 1), ('amazonKamath', 1), ('nrdg42', 1), ('AWS-MattB', 1), ('mcarpenter', 1), ('Marios Zindilis', 1), ('MacCarthaigh', 1), ('Aaylor', 1), ('morrisonlevi', 1), ('kench', 1), ('KelvinLi', 1), ('Katz', 1), ('jorgen', 1), ('justinboswell', 1), ('yatzbim', 1), ('gjasny', 1), ('grrtrr', 1), ('geedo0', 1), ('GaneshRapolu', 1), ('flurischt', 1), ('Eugene Retunsky', 1)",81,70,
jspuij/TwokaB,"Blazor WebView control for WPF, Android, macOS, iOS. Run Blazor on .NET Core and Mono natively inside a Webview.","

# TwokaB

### The Webview Originally Known as BlazorWebView.

**Update:** I'll be working with Eilon Lipton from MS to get TwokaB merged into the new BlazorWebView that will be part of the [Mobile Blazor Bindings](https://github.com/xamarin/MobileBlazorBindings).
Preview4 has been released with most of the functionality of this BlazorWebView: https://devblogs.microsoft.com/aspnet/hybrid-blazor-mobile-blazor-bindings-july-update/
We are working to get Static Assets with RCL support in MobileBlazorBindings next. Stay tuned for updates.


Blazor traditionally runs on .NET Core for Server-side Blazor and runs the Mono runtime on WebAssembly inside the
browser for Client-side Blazor. For desktop and mobile applications, this is cumbersome, as it requires a bundled web 
server and retains the disadvantages of SSB or CSB respectively.

Steve Sanderson from Microsoft first escaped the server- / client-side jail and released a
[.NET Core sample](https://github.com/SteveSandersonMS/WebWindow) that leverages native
WebViews on Windows / Linux / macOS to show a window on these respective operating systems.
Steve made a
[blog post](https://blog.stevensanderson.com/2019/11/18/2019-11-18-webwindow-a-cross-platform-webview-for-dotnet-core/)
describing his efforts; an excellent introduction to what this is.

Building on these foundations, I have created a BlazorWebView ""Control"" that is easily embedded in (Native) UI frameworks
on the following platforms:

* Xamarin Android (running on the Mono runtime)
* Xamarin iOS (running on the Mono runtime)
* Xamarin Mac (running on the Mono runtime)
* WPF (running on the .NET Core runtime)

I'm considering adding these platforms in the future:

* GTK Linux (running on the Mono runtime or .NET Core)
* GTK Mac (running on .NET Core)
* Windows Forms (running on the .NET Core runtime)
* Apple TV (running on the Mono runtime)
* Apple Watch  (running on the Mono runtime)

The advantage of using Xamarin on mobile platforms is that you can use the
[Xamarin Essentials](https://docs.microsoft.com/en-us/xamarin/essentials/) library to interact with mobile platform
APIs easily from .NET.

## Edgium Status

Because of the Coronavirus, the latest Edge SDK does not work with the Stable or Beta (81) builds of edge, as the code necessary
to support the SDK never made it into 81. 82 is cancelled. The first version that supports the SDK is Edge 83, but unfortunately
Microsoft created a bug that will hang the initialization of the browser and also makes fallback fail.
Bug is tracked here (https://github.com/MicrosoftEdge/WebViewFeedback/issues/151). So the only Edgium (new edge) build
that works, is the Canary channel version, which can be downloaded at:

https://www.microsoftedgeinsider.com/nl-nl/download/

## Get Started.

The instructions to get started vary depending on which platform you want to create the application for. It's best
to follow the tutorials for every platform. They are available below:

* [Xamarin Android](https://jspuij.github.io/BlazorWebView.Docs/pages/androidtutorial.html)
* [Xamarin iOS](https://jspuij.github.io/BlazorWebView.Docs/pages/iostutorial.html)
* [Xamarin Mac](https://jspuij.github.io/BlazorWebView.Docs/pages/mactutorial.html)
* [WPF](https://jspuij.github.io/BlazorWebView.Docs/pages/wpftutorial.html)

[Some guidance](prepare.md) on how to set up a Blazor project to best accommodate targeting multiple platforms is available as well.

### Install the NuGet Packages.

In general, you need to add one of the NuGet packages specific to your platform to your project:

```
PM> Install-Package BlazorWebView.Android

# OR
PM> Install-Package BlazorWebView.iOS

# OR
PM> Install-Package BlazorWebView.Mac

# OR
PM> Install-Package BlazorWebView.Wpf
```

### Add BlazorWebView to Your Activity/View, ViewController/View, or Window.

Next add the BlazorWebView (it's named like this in every package) to your Activity / View (for Android),
ViewController / View (for iOS and Mac), or your window XAML. Make sure that the BlazorWebView gets an
identifier so we can reference it in a code-behind file.

### Wire up Your Blazor Project to the BlazorWebView.

First, we need to adapt the URL to the Blazor JavaScript. It will be loaded from the NuGet assembly by
referencing a dedicated scheme. The URL to the Blazor JavaScript is:

```
framework://blazor.desktop.js
```

The rest of the URLs are relative URLs. A complete example index.html file provided below:

```html



    
    
    MyDesktopApp
    
    
    


    Loading...

    


```

Finally, we initialize the BlazorWebView from code-behind using the `BlazorWebViewHost` static class like this:

```csharp
BlazorWebViewHost.Run(this.blazorWebView, ""wwwroot/index.html"");
```

That's it! That wasn't too difficult, was it?
",,2020-03-01T08:35:45Z,2023-01-07T15:41:51Z,4,4,133,12,"('jspuij', 156), ('chucker', 1), ('dependabotbot', 1), ('vanderstack', 1)",3,3,
maccman/abba,A/B testing framework,"# Abba

Abba is a simple a/b testing self-hosted framework built to help improve conversion rates on your site.

* Simple JavaScript API
* Multi variant support
* Filter results by date and browser

![Screenshot](http://stripe.github.com/abba/screenshot.png)

## Setup

Requirements:

* Ruby 1.9.3
* Mongo

The default username and password are `guard` / `llama`. Change these in `config.yml` or set the environment variables `ABBA_USERNAME` and `ABBA_PASSWORD`, unless you want everybody to access your test results.
The environment variables have precedence over the config file. SSL is required in an production environment by default.

To run locally:

    bundle install
    thin start

## Heroku 10 seconds setup

    git clone git://github.com/maccman/abba.git && cd abba
    heroku create
    heroku addons:add mongolab:sandbox
    git push heroku master
    heroku open

The default username and password are `guard` / `llama`.

## A/B testing API

First include abba.js using a script tag. The host of this url will need to point to wherever you deployed the app.

    

Then call `Abba()`, passing in a test name and set up the control test and variants.

    
      Abba('test name')
        .control('test a', function(){ /* ... */ })
        .variant('test b', function(){ /* ... */ })
        .start();
    

The *control* is whatever you're testing against, and is usually the original page. You should only have one control (and the callback can be omitted).

The *variants* are the variations on the control that you hope will improve conversion. You can specify multiple variants. They require a variant name, and a callback function.

When you call `start()` Abba will randomly execute the control or variants' callbacks, and record the results server side.

Once the user has successfully completed the experiment, say paid and navigated to a receipt page, you need to complete the test. You can do this by invoking `complete()`.

    
      // On successful conversion
      Abba('test name').complete();
    

## TLDR example

    

    
      Abba('Checkout')
        .control()
        .variant('Text: Complete Purchase', function(){
          $('form button').text('Complete Purchase');
        })
        .variant('Color: green', function(){
          $('form button').css({background: 'green'});
        })
        .start();
    

You can find a more complete example under `./public/test`.

## Options

### Persisting results

If set the `persist` option to `true`, then the experiment won't be reset once it has completed. In other words, that visitor will always see that particular variant, and no more results will be recorded for that visitor.

    
      Abba('Pricing', {persist: true}).complete();
    

### Weighting

You can set a variant weight, so some variants are used more than others:

    Abba('My Checkout')
      .control('Control', {weight: 20})
      .variant('Variant 1', {weight: 3}, function(){
        $('#test').text('Variant 1 was chosen!');
      })
      .variant('Variant 2', {weight: 3}, function(){
        $('#test').text('Variant 2 was chosen!');
      })
      .start();

In the case above, the Control will be invoked 20 times more often than the other variants.

### Flow control

You can continue a previously started test using `continue()`.

    Abba('My Checkout')
      .control()
      .variant('Variant 1', function(){
        $('#test').text('Variant 1 was chosen!');
      })
      .variant('Variant 2', function(){
        $('#test').text('Variant 2 was chosen!');
      })
      .continue();

Nothing will be recorded if you call `continue()` instead of `start()`. If a variant hasn't been chosen previously, nothing will be executed.

You can reset tests using `reset()`.

    Abba('My Checkout').reset();

Lastly, you can calculate the test that you want to run server side, and just tell the JavaScript library which flow was chosen.

    Abba('My Checkout').start('Variant A')

### Links

If you're triggering the completion of a test on a link click or a form submit, then things get a bit more complicated.

You need to ensure that tracking request doesn't get lost (which can happen in some browsers if you request an image at the same time as
navigating). If the link is navigating to an external page which you don't control, then you have no choice but to cancel the link's default
event, wait a few milliseconds, then navigate manually:

    
      $('body').on('click', 'a.external', function(e){
        // Prevent navigation
        e.preventDefault();
        var href = $(this).attr('href');

        Abba('My Links').complete();

        setTimeout(function(){
          window.location = href;
        }, 400);
      });
    

That's far from ideal though, and it's much better to place the tracking code on the page you're going to navigate to. If you have control
over the page, then add the following code that checks the URL's hash.

    
      if (window.location.hash.indexOf('_abbaTestComplete') != -1) {
        Abba('My Links').complete();
      }
    

Then add the hash to the link's URL:

    

## Credits

Thanks to the following projects:

* https://github.com/assaf/vanity
* https://twitter.github.com/bootstrap
* http://buildingfirefoxos.com/
",,2013-01-25T00:05:54Z,2020-08-12T06:03:39Z,8,7,1349,48,"('alex-stripe', 52), ('maccman', 11), ('smgt', 5), ('typpo', 3), ('marzdrel', 1), ('Michael Khait', 1), ('SeriousM', 1), ('yahelc', 1)",4,3,
mazipan/bootstrap4-admin-dashboard-template,:b: Bootstrap 4 admin dashboard template,"# :b: Bootstrap 4 Admin Dashboard Template

> Bootstrap 4 admin dashboard template

## Demo

[https://mazipan.github.io/bootstrap4-admin-dashboard-template/](https://mazipan.github.io/bootstrap4-admin-dashboard-template/)

## Screenshoot

![Bootstrap 4 Admin Dashboard Template](https://raw.githubusercontent.com/mazipan/bootstrap4-admin-dashboard-template/master/screenshoot.png)

## Credit

Thanks for awesome example from [Bootstrap Team](https://getbootstrap.com/docs/4.0/examples/dashboard/#)

## Development

+ Install dependencies : `npm install` or `yarn install`
+ Run local : `npm run dev`
+ Open browser : `localhost:3000/`
+ Distribution : `npm run dist`

Copyright © 2018 by [Irfan Maulana](https://github.com/mazipan/)
","'bootstrap', 'bootstrap-4', 'bootstrap-admin-dashboard', 'bootstrap-dashboard', 'bootstrap-template'",2018-01-19T06:30:47Z,2019-10-20T12:31:53Z,4,2,25,2,"('Irfan Maulana', 8), ('Irfan Maulana', 3), ('mazipan', 3), ('imgbotbot', 1)",1,1,
caisui/vimperator,vimperator's plugin,,,2010-05-20T13:45:09Z,2019-01-04T02:31:23Z,5,5,38,7,"('caisui', 324), ('anekos', 2), ('AmaiSaeta', 1), ('kmorihiro', 1), ('grafi-tt', 1)",3,3,
arco/samsung-kernel-msm7x30,Kernel for Samsung's MSM7X30 devices,"	Linux kernel release 3.x 

These are the release notes for Linux version 3.  Read them carefully,
as they tell you what this is all about, explain how to install the
kernel, and what to do if something goes wrong. 

WHAT IS LINUX?

  Linux is a clone of the operating system Unix, written from scratch by
  Linus Torvalds with assistance from a loosely-knit team of hackers across
  the Net. It aims towards POSIX and Single UNIX Specification compliance.

  It has all the features you would expect in a modern fully-fledged Unix,
  including true multitasking, virtual memory, shared libraries, demand
  loading, shared copy-on-write executables, proper memory management,
  and multistack networking including IPv4 and IPv6.

  It is distributed under the GNU General Public License - see the
  accompanying COPYING file for more details. 

ON WHAT HARDWARE DOES IT RUN?

  Although originally developed first for 32-bit x86-based PCs (386 or higher),
  today Linux also runs on (at least) the Compaq Alpha AXP, Sun SPARC and
  UltraSPARC, Motorola 68000, PowerPC, PowerPC64, ARM, Hitachi SuperH, Cell,
  IBM S/390, MIPS, HP PA-RISC, Intel IA-64, DEC VAX, AMD x86-64, AXIS CRIS,
  Xtensa, Tilera TILE, AVR32 and Renesas M32R architectures.

  Linux is easily portable to most general-purpose 32- or 64-bit architectures
  as long as they have a paged memory management unit (PMMU) and a port of the
  GNU C compiler (gcc) (part of The GNU Compiler Collection, GCC). Linux has
  also been ported to a number of architectures without a PMMU, although
  functionality is then obviously somewhat limited.
  Linux has also been ported to itself. You can now run the kernel as a
  userspace application - this is called UserMode Linux (UML).

DOCUMENTATION:

 - There is a lot of documentation available both in electronic form on
   the Internet and in books, both Linux-specific and pertaining to
   general UNIX questions.  I'd recommend looking into the documentation
   subdirectories on any Linux FTP site for the LDP (Linux Documentation
   Project) books.  This README is not meant to be documentation on the
   system: there are much better sources available.

 - There are various README files in the Documentation/ subdirectory:
   these typically contain kernel-specific installation notes for some 
   drivers for example. See Documentation/00-INDEX for a list of what
   is contained in each file.  Please read the Changes file, as it
   contains information about the problems, which may result by upgrading
   your kernel.

 - The Documentation/DocBook/ subdirectory contains several guides for
   kernel developers and users.  These guides can be rendered in a
   number of formats:  PostScript (.ps), PDF, HTML, & man-pages, among others.
   After installation, ""make psdocs"", ""make pdfdocs"", ""make htmldocs"",
   or ""make mandocs"" will render the documentation in the requested format.

INSTALLING the kernel source:

 - If you install the full sources, put the kernel tarball in a
   directory where you have permissions (eg. your home directory) and
   unpack it:

		gzip -cd linux-3.X.tar.gz | tar xvf -

   or
		bzip2 -dc linux-3.X.tar.bz2 | tar xvf -


   Replace ""XX"" with the version number of the latest kernel.

   Do NOT use the /usr/src/linux area! This area has a (usually
   incomplete) set of kernel headers that are used by the library header
   files.  They should match the library, and not get messed up by
   whatever the kernel-du-jour happens to be.

 - You can also upgrade between 3.x releases by patching.  Patches are
   distributed in the traditional gzip and the newer bzip2 format.  To
   install by patching, get all the newer patch files, enter the
   top level directory of the kernel source (linux-3.x) and execute:

		gzip -cd ../patch-3.x.gz | patch -p1

   or
		bzip2 -dc ../patch-3.x.bz2 | patch -p1

   (repeat xx for all versions bigger than the version of your current
   source tree, _in_order_) and you should be ok.  You may want to remove
   the backup files (xxx~ or xxx.orig), and make sure that there are no
   failed patches (xxx# or xxx.rej). If there are, either you or me has
   made a mistake.

   Unlike patches for the 3.x kernels, patches for the 3.x.y kernels
   (also known as the -stable kernels) are not incremental but instead apply
   directly to the base 3.x kernel.  Please read
   Documentation/applying-patches.txt for more information.

   Alternatively, the script patch-kernel can be used to automate this
   process.  It determines the current kernel version and applies any
   patches found.

		linux/scripts/patch-kernel linux

   The first argument in the command above is the location of the
   kernel source.  Patches are applied from the current directory, but
   an alternative directory can be specified as the second argument.

 - If you are upgrading between releases using the stable series patches
   (for example, patch-3.x.y), note that these ""dot-releases"" are
   not incremental and must be applied to the 3.x base tree. For
   example, if your base kernel is 3.0 and you want to apply the
   3.0.3 patch, you do not and indeed must not first apply the
   3.0.1 and 3.0.2 patches. Similarly, if you are running kernel
   version 3.0.2 and want to jump to 3.0.3, you must first
   reverse the 3.0.2 patch (that is, patch -R) _before_ applying
   the 3.0.3 patch.
   You can read more on this in Documentation/applying-patches.txt

 - Make sure you have no stale .o files and dependencies lying around:

		cd linux
		make mrproper

   You should now have the sources correctly installed.

SOFTWARE REQUIREMENTS

   Compiling and running the 3.x kernels requires up-to-date
   versions of various software packages.  Consult
   Documentation/Changes for the minimum version numbers required
   and how to get updates for these packages.  Beware that using
   excessively old versions of these packages can cause indirect
   errors that are very difficult to track down, so don't assume that
   you can just update packages when obvious problems arise during
   build or operation.

BUILD directory for the kernel:

   When compiling the kernel all output files will per default be
   stored together with the kernel source code.
   Using the option ""make O=output/dir"" allow you to specify an alternate
   place for the output files (including .config).
   Example:
     kernel source code:	/usr/src/linux-3.N
     build directory:		/home/name/build/kernel

   To configure and build the kernel use:
   cd /usr/src/linux-3.N
   make O=/home/name/build/kernel menuconfig
   make O=/home/name/build/kernel
   sudo make O=/home/name/build/kernel modules_install install

   Please note: If the 'O=output/dir' option is used then it must be
   used for all invocations of make.

CONFIGURING the kernel:

   Do not skip this step even if you are only upgrading one minor
   version.  New configuration options are added in each release, and
   odd problems will turn up if the configuration files are not set up
   as expected.  If you want to carry your existing configuration to a
   new version with minimal work, use ""make oldconfig"", which will
   only ask you for the answers to new questions.

 - Alternate configuration commands are:
	""make config""      Plain text interface.
	""make menuconfig""  Text based color menus, radiolists & dialogs.
	""make nconfig""     Enhanced text based color menus.
	""make xconfig""     X windows (Qt) based configuration tool.
	""make gconfig""     X windows (Gtk) based configuration tool.
	""make oldconfig""   Default all questions based on the contents of
			   your existing ./.config file and asking about
			   new config symbols.
	""make silentoldconfig""
			   Like above, but avoids cluttering the screen
			   with questions already answered.
			   Additionally updates the dependencies.
	""make defconfig""   Create a ./.config file by using the default
			   symbol values from either arch/$ARCH/defconfig
			   or arch/$ARCH/configs/${PLATFORM}_defconfig,
			   depending on the architecture.
	""make ${PLATFORM}_defconfig""
			  Create a ./.config file by using the default
			  symbol values from
			  arch/$ARCH/configs/${PLATFORM}_defconfig.
			  Use ""make help"" to get a list of all available
			  platforms of your architecture.
	""make allyesconfig""
			   Create a ./.config file by setting symbol
			   values to 'y' as much as possible.
	""make allmodconfig""
			   Create a ./.config file by setting symbol
			   values to 'm' as much as possible.
	""make allnoconfig"" Create a ./.config file by setting symbol
			   values to 'n' as much as possible.
	""make randconfig""  Create a ./.config file by setting symbol
			   values to random values.

   You can find more information on using the Linux kernel config tools
   in Documentation/kbuild/kconfig.txt.

	NOTES on ""make config"":
	- having unnecessary drivers will make the kernel bigger, and can
	  under some circumstances lead to problems: probing for a
	  nonexistent controller card may confuse your other controllers
	- compiling the kernel with ""Processor type"" set higher than 386
	  will result in a kernel that does NOT work on a 386.  The
	  kernel will detect this on bootup, and give up.
	- A kernel with math-emulation compiled in will still use the
	  coprocessor if one is present: the math emulation will just
	  never get used in that case.  The kernel will be slightly larger,
	  but will work on different machines regardless of whether they
	  have a math coprocessor or not. 
	- the ""kernel hacking"" configuration details usually result in a
	  bigger or slower kernel (or both), and can even make the kernel
	  less stable by configuring some routines to actively try to
	  break bad code to find kernel problems (kmalloc()).  Thus you
	  should probably answer 'n' to the questions for
          ""development"", ""experimental"", or ""debugging"" features.

COMPILING the kernel:

 - Make sure you have at least gcc 3.2 available.
   For more information, refer to Documentation/Changes.

   Please note that you can still run a.out user programs with this kernel.

 - Do a ""make"" to create a compressed kernel image. It is also
   possible to do ""make install"" if you have lilo installed to suit the
   kernel makefiles, but you may want to check your particular lilo setup first.

   To do the actual install you have to be root, but none of the normal
   build should require that. Don't take the name of root in vain.

 - If you configured any of the parts of the kernel as `modules', you
   will also have to do ""make modules_install"".

 - Verbose kernel compile/build output:

   Normally the kernel build system runs in a fairly quiet mode (but not
   totally silent).  However, sometimes you or other kernel developers need
   to see compile, link, or other commands exactly as they are executed.
   For this, use ""verbose"" build mode.  This is done by inserting
   ""V=1"" in the ""make"" command.  E.g.:

	make V=1 all

   To have the build system also tell the reason for the rebuild of each
   target, use ""V=2"".  The default is ""V=0"".

 - Keep a backup kernel handy in case something goes wrong.  This is 
   especially true for the development releases, since each new release
   contains new code which has not been debugged.  Make sure you keep a
   backup of the modules corresponding to that kernel, as well.  If you
   are installing a new kernel with the same version number as your
   working kernel, make a backup of your modules directory before you
   do a ""make modules_install"".
   Alternatively, before compiling, use the kernel config option
   ""LOCALVERSION"" to append a unique suffix to the regular kernel version.
   LOCALVERSION can be set in the ""General Setup"" menu.

 - In order to boot your new kernel, you'll need to copy the kernel
   image (e.g. .../linux/arch/i386/boot/bzImage after compilation)
   to the place where your regular bootable kernel is found. 

 - Booting a kernel directly from a floppy without the assistance of a
   bootloader such as LILO, is no longer supported.

   If you boot Linux from the hard drive, chances are you use LILO which
   uses the kernel image as specified in the file /etc/lilo.conf.  The
   kernel image file is usually /vmlinuz, /boot/vmlinuz, /bzImage or
   /boot/bzImage.  To use the new kernel, save a copy of the old image
   and copy the new image over the old one.  Then, you MUST RERUN LILO
   to update the loading map!! If you don't, you won't be able to boot
   the new kernel image.

   Reinstalling LILO is usually a matter of running /sbin/lilo. 
   You may wish to edit /etc/lilo.conf to specify an entry for your
   old kernel image (say, /vmlinux.old) in case the new one does not
   work.  See the LILO docs for more information. 

   After reinstalling LILO, you should be all set.  Shutdown the system,
   reboot, and enjoy!

   If you ever need to change the default root device, video mode,
   ramdisk size, etc.  in the kernel image, use the 'rdev' program (or
   alternatively the LILO boot options when appropriate).  No need to
   recompile the kernel to change these parameters. 

 - Reboot with the new kernel and enjoy. 

IF SOMETHING GOES WRONG:

 - If you have problems that seem to be due to kernel bugs, please check
   the file MAINTAINERS to see if there is a particular person associated
   with the part of the kernel that you are having trouble with. If there
   isn't anyone listed there, then the second best thing is to mail
   them to me (torvalds@linux-foundation.org), and possibly to any other
   relevant mailing-list or to the newsgroup.

 - In all bug-reports, *please* tell what kernel you are talking about,
   how to duplicate the problem, and what your setup is (use your common
   sense).  If the problem is new, tell me so, and if the problem is
   old, please try to tell me when you first noticed it.

 - If the bug results in a message like

	unable to handle kernel paging request at address C0000010
	Oops: 0002
	EIP:   0010:XXXXXXXX
	eax: xxxxxxxx   ebx: xxxxxxxx   ecx: xxxxxxxx   edx: xxxxxxxx
	esi: xxxxxxxx   edi: xxxxxxxx   ebp: xxxxxxxx
	ds: xxxx  es: xxxx  fs: xxxx  gs: xxxx
	Pid: xx, process nr: xx
	xx xx xx xx xx xx xx xx xx xx

   or similar kernel debugging information on your screen or in your
   system log, please duplicate it *exactly*.  The dump may look
   incomprehensible to you, but it does contain information that may
   help debugging the problem.  The text above the dump is also
   important: it tells something about why the kernel dumped code (in
   the above example it's due to a bad kernel pointer). More information
   on making sense of the dump is in Documentation/oops-tracing.txt

 - If you compiled the kernel with CONFIG_KALLSYMS you can send the dump
   as is, otherwise you will have to use the ""ksymoops"" program to make
   sense of the dump (but compiling with CONFIG_KALLSYMS is usually preferred).
   This utility can be downloaded from
   ftp://ftp..kernel.org/pub/linux/utils/kernel/ksymoops/ .
   Alternately you can do the dump lookup by hand:

 - In debugging dumps like the above, it helps enormously if you can
   look up what the EIP value means.  The hex value as such doesn't help
   me or anybody else very much: it will depend on your particular
   kernel setup.  What you should do is take the hex value from the EIP
   line (ignore the ""0010:""), and look it up in the kernel namelist to
   see which kernel function contains the offending address.

   To find out the kernel function name, you'll need to find the system
   binary associated with the kernel that exhibited the symptom.  This is
   the file 'linux/vmlinux'.  To extract the namelist and match it against
   the EIP from the kernel crash, do:

		nm vmlinux | sort | less

   This will give you a list of kernel addresses sorted in ascending
   order, from which it is simple to find the function that contains the
   offending address.  Note that the address given by the kernel
   debugging messages will not necessarily match exactly with the
   function addresses (in fact, that is very unlikely), so you can't
   just 'grep' the list: the list will, however, give you the starting
   point of each kernel function, so by looking for the function that
   has a starting address lower than the one you are searching for but
   is followed by a function with a higher address you will find the one
   you want.  In fact, it may be a good idea to include a bit of
   ""context"" in your problem report, giving a few lines around the
   interesting one. 

   If you for some reason cannot do the above (you have a pre-compiled
   kernel image or similar), telling me as much about your setup as
   possible will help.  Please read the REPORTING-BUGS document for details.

 - Alternately, you can use gdb on a running kernel. (read-only; i.e. you
   cannot change values or set break points.) To do this, first compile the
   kernel with -g; edit arch/i386/Makefile appropriately, then do a ""make
   clean"". You'll also need to enable CONFIG_PROC_FS (via ""make config"").

   After you've rebooted with the new kernel, do ""gdb vmlinux /proc/kcore"".
   You can now use all the usual gdb commands. The command to look up the
   point where your system crashed is ""l *0xXXXXXXXX"". (Replace the XXXes
   with the EIP value.)

   gdb'ing a non-running kernel currently fails because gdb (wrongly)
   disregards the starting offset for which the kernel is compiled.

",,2012-03-25T18:48:43Z,2017-05-09T05:10:57Z,226,80,44,35,"('Christopher83', 146), ('arco', 143), ('CastagnaIT', 42), ('Dmitry Shmidt', 28), ('Tatyana Brokhman', 27), ('labbott', 22), ('colincross', 20), ('Ecco Park', 19), ('Mel Gorman', 19), ('sirmordred', 18), ('Ruchi Kandoi', 14), ('jpa468', 12), ('Konstantin Dorfman', 12), ('jiangliu', 10), ('minchank', 10), ('Motorhead1991', 9), ('Blefish', 9), ('hey-o', 8), ('Olav Haugan', 8), ('mszyprow', 8), ('koct9i', 8), ('Gottardo Stefano', 8), ('Ard Biesheuvel', 7), ('lcolitti', 7), ('hyperb1iss', 7), ('Tiziano Carotti', 7), ('Thomas Gleixner', 6), ('Jordan Crouse', 5), ('Maya Erez', 5), ('Sunid Wilson', 5), ('doadin', 4), ('Sujit Reddy Thumma', 4), ('Subhash Jadavani', 4), ('sergey-senozhatsky', 4), ('Rohit Gupta', 4), ('Narayanan Gopalakrishnan', 4), ('Lee Susman', 4), ('gregkh', 4), ('arve-android', 3), ('tobigun', 3), ('toddpoynor', 3), ('stephensmalley', 3), ('Srivatsa Vaddagiri', 3), ('Srinivasarao P', 3), ('Russell King', 3), ('Minsung Kim', 3), ('mikeNG', 3), ('markus-oberhumer', 3), ('Mark Salyzyn', 3), ('Lin Ming', 3), ('Kalyani polepeddy', 3), ('Kalyani Polepeddy', 3), ('jkivilin', 3), ('hnaz', 3), ('Chintan Pandya', 3), ('ChandanaKishori Chiluveru', 3), ('lkalaval', 2), ('Larry Bassel', 2), ('Lianwei Wang', 2), ('mruck', 2), ('smihir', 2), ('Neeti Desai', 2), ('Rajkumar Raghupathy', 2), ('rashika', 2), ('Rik van Riel', 2), ('sunghan-suh', 2), ('Tetsuo Handa', 2), ('Venkat Gopalakrishnan', 2), ('0-t', 2), ('Angshuman Sarkar', 2), ('AnilKumar Chimata', 2), ('DextersHub', 2), ('ariava', 2), ('Dave Martin', 2), ('David Keitel', 2), ('dojipkim', 2), ('Erik Kline', 2), ('Felix Fietkau', 2), ('Figo Wang', 2), ('strssndktn', 2), ('jwrdegoede', 2), ('Kyungsik Lee', 2), ('Preetam Singh Ranawat', 1), ('Puneet Kumar', 1), ('Pushkar Joshi', 1), ('rafaeljw', 1), ('Rajesh Kemisetti', 1), ('Ravi Aravamudhan', 1), ('Ricardo Mendoza', 1), ('rlaager', 1), ('Rob Herring', 1), ('roml', 1), ('Sam Leffler', 1), ('Sana Venkat Raju', 1), ('sandeepqualcomm', 1), ('Sangani Suryanarayana Raju', 1), ('Sara Bird', 1), ('Saravana Kannan', 1), ('sashalevin', 1), ('Sasha Levitskiy', 1), ('nablio3000', 1), ('elginsk8r', 1), ('Nicolas Pitre', 1), ('Ninad Patgaonkar', 1), ('Nitin Shivpure', 1), ('oleg-nesterov', 1), ('ogay', 1), ('ummakynes', 1), ('peterhurley', 1), ('Peter Zijlstra', 1), ('petrcermak', 1), ('pof2', 1), ('Pradeep Jilagam', 1), ('Pradosh Das', 1), ('Prakash Kamliya', 1), ('neobuddy89', 1), ('Prasad Sodagudi', 1), ('Praveen Chavan', 1), ('Utsab Bose', 1), ('Vijayavardhan Vennapusa', 1), ('Vinay Roy', 1), ('vinayakmenon', 1), ('Vinu Deokaran', 1), ('Vitaly Andrianov', 1), ('tehcaster', 1), ('wildea01', 1), ('William Clark', 1), ('erik96', 1), ('hadidjapri', 1), ('keunyoung', 1), ('mrg666', 1), ('myfluxi', 1), ('naseer', 1), ('radu', 1), ('rahul.khandelwal', 1), ('skywalker01', 1), ('Shaohua Li', 1), ('Shengzhe Zhao', 1), ('nv-shri', 1), ('Shubhraprakash Das', 1), ('Sidipotu Ashok', 1), ('Sreeram Ramachandran', 1), ('Srinivasan Kannan', 1), ('Subash Abhinov Kasiviswanathan', 1), ('Subbaraman Narayanamurthy', 1), ('Subhani Shaik', 1), ('Sujeet Kumar', 1), ('Sunil Dutt', 1), ('Suresh Vankadara', 1), ('Swetha Chikkaboraiah', 1), ('Syed Rameez Mustafa', 1), ('Tanya Brokhman', 1), ('Tarun Gupta', 1), ('Tirupathi Reddy', 1), ('Baji Patthan', 1), ('bzolnier', 1), ('Ben Jones', 1), ('Carl Vanderlip', 1), ('Chanho Min', 1), ('cwhuang', 1), ('Christoph Lameter', 1), ('Cong Wang', 1), ('dlezcano', 1), ('Dave Chinner', 1), ('David Herrmann', 1), ('David McCullough', 1), ('davem330', 1), ('Deepak Katragadda', 1), ('Deva Ramasubramanian', 1), ('Dilip Kota', 1), ('ECCO PARK', 1), ('eparis', 1), ('aakoskin', 1), ('aaronlu', 1), ('Alistair Strachan', 1), ('Ananta Kishore K', 1), ('Andrey Sidorov', 1), ('AndreRH', 1), ('amluto', 1), ('Anton Vorontsov', 1), ('Anurag Singh', 1), ('Archana Sathyakumar', 1), ('Ard Biesheuvel', 1), ('Arun Kumar Neelakantam', 1), ('Ashay Jaiswal', 1), ('Ashwin', 1), ('Asish Bhattacharya', 1), ('Asutosh Das', 1), ('Avijit Kanti Das', 1), ('Badhri Jagan Sridharan', 1), ('Karthikeyan Ramasubramanian', 1), ('Katish Paran', 1), ('kees', 1), ('Kevin Liu', 1), ('konradwilk', 1), ('Kumar Gala', 1), ('kgcorner', 1), ('Maheshwar Ajja', 1), ('Mandeep Singh Baines', 1), ('Manogna Reddy Alle', 1), ('smichak-cellrox', 1), ('mina86', 1), ('Mikulas Patocka', 1), ('Ming Lei', 1), ('Mitchel Humpherys', 1), ('Mohit Aggarwal', 1), ('Murali Nalajala', 1), ('namjaejeon', 1), ('Felipe Balbi 2', 1), ('FrozenCow', 1), ('Gaurav Gagrani', 1), ('Haley Teng', 1), ('Hemant Gupta', 1), ('Huaibin Yang', 1), ('Hugh Dickins', 1), ('idjelic', 1), ('jankara', 1), ('Jane Zhou', 1), ('Javi Merino', 1), ('Jeff Boody', 1), ('Jeff Johnson', 1), ('jgebben', 1), ('John Johansen', 1), ('johnstultz-work', 1), ('biger410', 1), ('Justin Philip', 1)",144,43,
codekiln/S75-Sections,"Sections to S-75, Building Dynamic Websites","UPDATE 2013-09-22
=================
You can now download a zip file containing slides and source code
for each section at
[pnore-s75-sections.zip](https://github.com/codekiln/S75-Sections/raw/master/pnore-s75-sections.zip).

Sections for S-75, Building Dynamic Websites
============================================

https://github.com/codekiln/S75-Sections 

All instructions of this document assume you are working in
version of the CS50 Appliance that your class is using: 
https://manual.cs50.net/CS50_Appliance_3

If this is your first time running examples in the CS50
Appliance, you'll need to set up your environment in the
command line: 

    cd ~ mkdir public_html chmod 711 public_html

To download these examples and keep them sync'd to your
appliance, enter each of these commands: 

    cd ~/public_html git clone
    git://github.com/codekiln/S75-Sections.git 
    find ~/public_html -type d -print0 | xargs -0 chmod 755

Git will then download the latest update to the section
examples.  You may need to infer the correct permissions
and use the ls and chmod commands to get the examples to
display in your appliance.  Once the permissions are
right, you can see each section's example folder by opening a
browser in the appliance and going to:

    http://localhost/~jharvard/S75-Sections/

To update to the latest version of the examples from
section:

    cd ~/public_html/S75-Sections 
    git pull

This will update to the latest version of the section
examples. Each time you pull down a fresh version, you will have
to change the permissions. 

    ~/public_html -type d -print0 | xargs -0 chmod 755

In general you want these permissions: directories: 711
php files: 600 css, image files, and other public facing
files: 644

For the mysql examples, you will need to create the
database `jharvard_example02` using phpmyadmin.

The example source code will look best in vim if you

    cd ~/public_html/S75-Sections cp .vimrc ~

Other Git Tricks for the CS50 Appliance
=======================================

If you have never used a source code manager before, Git will
change your life as a programmer. Take an hour and watch this
video from YUI theater to get a better sense of how life is different for ""software engineers"" than it is for ""hackers."" 

[current link](http://www.youtube.com/watch?v=QB6r9Y7mqyU)
[original
link](http://www.yuiblog.com/blog/2011/06/09/video-f2esummit2011-donnelly/)

My favorite git workflow: 

    git checkout -b ""new_feature""
    git add -A
    git commit -m ""finished new_feature""
    git checkout master
    git merge ""new_feature""
    git branch -D ""new_feature""

Once you decide to really utilize git, you will be branching and
merging all the time. When that time comes, it will become handy
to know what branch you are on. For that, I recommend two tools,
Git Command-Line Autocomplete and Git Branch in Bash Prompt. 

Git Command-Line Autocomplete
-----------------------------

    curl ""https://raw.github.com/git/git/master/contrib/completion/git-completion.bash"" -o ~/.git-completion.bash
    echo ""source ~/.git-completion.bash"" >> ~/.bash_profile
    source ~/.bash_profile

Git Branch in Bash Prompt
-------------------------

In the CS50 Appliance, paste the following into bash and hit return.

    export PS1='\[\e[1;33m\] \w\[\e[1;36m\]$(git branch &>/dev/null; if [ $? -eq 0 ]; then echo "" ($(git branch | grep '^*' | sed s/\*\ //))""; fi)\[\e[1;37m\]:\[\e[00m\]'

If you don't like the way it looks, just exit the terminal and
open it up again.  Do you like the way it looks? Then edit
~/.bash_profile and add that line to the end, save, and enter:

    source ~/.bash_profile

Now you have the name of your git branch in your bash prompt. If
you are curious about how this display stuff works, google ""Bash
PS1"". 

JavaScript
==========

JavaScript videos by Douglas Crockford
-------------------------------
1.  [The Early Years](http://www.youtube.com/watch?v=JxAXlJEmNMg&feature=plcp)
2.  [And Then there was JavaScript](http://www.youtube.com/watch?v=RO1Wnu-xKoY&feature=plcp)
3.  [Function the
Ultimate](http://www.youtube.com/watch?v=ya4UHuXNygM&feature=plcp) - also see the [slides](http://www.slideshare.net/douglascrockford/3-7687071/74)
4.  [The Metamorphosis of Ajax](http://www.youtube.com/watch?v=Fv9qT9joc0M&feature=plcp)
5.  [The End of All Things](http://www.youtube.com/watch?v=47Ceot8yqeI&feature=plcp)
6.  [Loopage](http://www.youtube.com/watch?v=QgwSUtYSUqA&feature=plcp)
7.  [EMCAScript 5: The New Parts](http://www.youtube.com/watch?v=UTEqr0IlFKY&feature=plcp) 
8.  [Programming Style & Your Brain](http://www.youtube.com/watch?v=taaEzHI9xyY&feature=plcp)

JavaScript Style Enforcer - JSLint
----------------------------------
JSLint is a program you run that examines your JavaScript code
and offers stylistic improvements according to Douglas
Crockford's ideas of best practice. One thing's for sure - if
you're a junior JavaScript developer, JSLint can inform your
your style. 

While the tool is most often used [online](http://www.jslint.com/), it really is most valuable on the command line to decrease the iterative improvement round trip time. To get it working you should probably install node.js, a server-side javascript language that comes with its own package manager. For the time being (last updated 2012-07-17), these instructions will install jslint on the command line in the CS50 appliance:

    sudo su
    yum localinstall --nogpgcheck http://nodejs.tchol.org/repocfg/fedora/nodejs-stable-release.noarch.rpm
    yum install nodejs-compat-symlinks npm
    npm install -g jslint

Once you get it working, if you're a vim chick like me, you'll
want to integrate jslint into vim to get great feedback. To do
that you'll need to set errorformat like in the .vimrc document
in this folder. If you want, you can copy the .vimrc in the same
folder as this readme into your home directory: cp .vimrc
~/.vimrc. Then in vim you should be able to enter F4 and start to get
some great output from jslint. You can use :cn and :cN to move
forward/backward through the quickfix list, respectively. You may
find [the list of JSLint error messages](http://goo.gl/APTVi) valuable.

JavaScript Documentation Generation 
-----------------------------------
So you want to write documentation for your JavaScript just like for PHP or Java? Enter [yuidoc](http://yui.github.com/yuidoc/).

JavaScript Semicolon Insertion
------------------------------
See [this](http://inimino.org/~inimino/blog/javascript_semicolons).

JavaScript Online Testing Ground: JSFiddle
------------------------------------------
Sometimes you need to demonstrate something as an isolated proof
of concept. JSFiddle lets you use standard libraries such as
MooTools and JQuery, and even store your JavaScript examples
online. See [this example](http://jsfiddle.net/MpBE3/) of how to
avoid the JSLint error ""[Don't make functions within a
loop](http://goo.gl/RDslK).""

PHP 
===

PHP Documentaiton Generation
------------------------
So you want to have class documentation generated like with JavaDoc? Check out [phpDocumentor](http://www.phpdoc.org/).

Regular Expressions
===================

[This](http://gskinner.com/RegExr/) ajaxy regex selector
is one of many useful tools I use to for quick screen scraping. 
[Here](http://chris.photobooks.com/regex/default.htm) is
another one by Chris Neilson.

VIM
===

If you're like me, you want to be able to copy to your system clipboard from vim in the command line. The default vim in fedora doesn't have clipboard support compiled in to reduce the number of dependencies. In the .bashrc in this folder is the command `alias vim=""gvim -v ""`, which should work in the appliance since gvim is apparently installed by default as well. If you put that command in your .bashrc and source it or restart terminal, then you should be able to do a visual highlight and do `""+y` to yank to the clipboard register, or `""+p` to paste from the clipboard register. If you have the vmware guest additions installed, this will even sync up with your host clipboard.

XPath
=====

Google Chrome
-------------
If you use Google's Chrome browser, the
[Scraper](https://chrome.google.com/webstore/detail/mbigbapnjcgaffohmbkdlecaccepngjd)
tool is really great at helping extract an XPath used to
find a particular element.

Also, Google Chrome's DOM displayer has XPath support
baked into its search field - just press `Ctrl+Shift+C` to
bring up the developer console, then start typing an xpath
expression to bring up a match.

Other Online Tools
------------------
[This](http://www.bit-101.com/xpath/) is currently my
favorite online XPath tool.

[Chris Neilson's XPath and XML
Tools](http://chris.photobooks.com/xml/default.htm) works
really well for conducting xPath queries online. He also
has a tool for [visualizing xpath
queries](http://chris.photobooks.com/regex/default.htm)
and [visualizing
json](http://chris.photobooks.com/json/default.htm).

I find [Stylus Studio's XPath
reference](http://www.stylusstudio.com/docs/v62/d_xpath15.html)
pretty helpful when I'm searching for an XPath function.


",,2011-07-14T02:56:28Z,2013-09-22T14:10:17Z,4,1,21,14,"('codekiln', 70), ('Myer', 5), ('John Harvard', 2), ('root', 1)",1,0,
dhruvaray/backbone-associations,Create object hierarchies with Backbone models; Respond to hierarchy changes using regular Backbone events.,"### Backbone-associations [![Build Status](https://travis-ci.org/dhruvaray/backbone-associations.png?branch=master)](https://travis-ci.org/dhruvaray/backbone-associations)

Associations allows Backbone applications to model 1:1 & 1:N associations between application models and Collections. More importantly, applications can listen to any kind of change (change, add, remove, reset, sort, destroy) in this hierarchy using standard Backbone events and respond to them. (views can re-render for example). The implementation strives to be tiny (3.6KB), easy-to-understand, light-weight and fast.

For features, performance #s, API documentation, tutorials and recipes, please visit :

http://dhruvaray.github.io/backbone-associations/.


### Who uses Backbone-Associations? 

See https://github.com/dhruvaray/backbone-associations/issues/55

We encourage you to add your experiences to this list!
",,2012-08-23T12:07:40Z,2016-12-07T14:53:22Z,21,15,492,18,"('dhruvaray', 236), ('jdkanani', 92), ('dhruvaray', 59), ('int', 8), ('dak', 5), ('Brandon R. Stoner', 4), ('msteinert', 4), ('Elliot Foster', 3), ('Jaynti Kanani', 3), ('avaly', 3), ('MrADM', 3), ('sdemjanenko', 2), ('arirahikkala', 1), ('bitdeli-chef', 1), ('Brandon R. Stoner', 1), ('elliotf', 1), ('JackCA', 1), ('FreakenK', 1), ('ralfthewise', 1), ('bernii', 1), ('ronen', 1)",9,8,
The-Acronym-Coders/BASE,The Central Repo For The B.A.S.E Project,"# B.A.S.E
The Central Repo For The B.A.S.E Project

The Acronym Projects are Licensed under the ""MIT"" licence.  
Pull Requests, Bug Reports, and Suggestions Welcomed!

",,2016-06-26T19:43:50Z,2021-06-02T19:43:49Z,18,14,16,5,"('Skylar Sommers', 478), ('SkySom', 217), ('jaredlll08', 125), ('FreneticScribbler', 45), ('justinrusso', 27), ('TheCodedOne', 23), ('EwyBoy', 16), ('Lanse505', 6), ('Shananiganeer', 5), ('3TUSK', 2), ('Foxgreat', 1), ('RoCoKo', 1), ('voidsong-dragonfly', 1), ('Skylar', 1), ('SynfulChaot', 1), ('TartaricAcid', 1), ('Yulife', 1), ('pupnewfster', 1)",8,6,
djadmin/awesome-bug-bounty,A comprehensive curated list of available Bug Bounty & Disclosure Programs and Write-ups.,"# Awesome Bug Bounty [![Awesome](https://cdn.rawgit.com/sindresorhus/awesome/d7305f38d29fed78fa85652e3a63e154dd8e8829/media/badge.svg)](https://github.com/sindresorhus/awesome)
A comprehensive curated list of Bug Bounty Programs and write-ups from the Bug Bounty hunters.

## Table of Contents
- [Getting Started](#getting-started)
- [Write Ups & Authors](#write-ups--authors)
- [Platforms](#platforms)
- [Available Programs](#available-programs)
- [Contribution guide](contributing.md)

### Getting Started
- [How to Become a Successful Bug Bounty Hunter](https://hackerone.com/blog/what-great-hackers-share)
- [Researcher Resources - How to become a Bug Bounty Hunter](https://forum.bugcrowd.com/t/researcher-resources-how-to-become-a-bug-bounty-hunter/1102)
- [Bug Bounties 101](https://whitton.io/articles/bug-bounties-101-getting-started/)
- [The life of a bug bounty hunter](http://www.alphr.com/features/378577/q-a-the-life-of-a-bug-bounty-hunter)
- [Awsome list of bugbounty cheatsheets](https://github.com/EdOverflow/bugbounty-cheatsheet)
- [Getting Started - Bug Bounty Hunter Methodology](https://www.bugcrowd.com/blog/getting-started-bug-bounty-hunter-methodology)

### Write Ups & Authors
- [sakurity.com/blog](http://sakurity.com/blog)  -  by [Egor Homakov](https://twitter.com/homakov)
- [respectxss.blogspot.in](http://respectxss.blogspot.in/)  -  by [Ashar Javed](https://twitter.com/soaj1664ashar)
- [labs.detectify.com](http://labs.detectify.com/)  -  by [Frans Rosén](https://twitter.com/fransrosen)
- [cliffordtrigo.info](https://www.cliffordtrigo.info/)  -  by [Clifford Trigo](https://twitter.com/MrTrizaeron)
- [stephensclafani.com](http://stephensclafani.com/)  -  by [Stephen Sclafani](https://twitter.com/Stephen)
- [sasi2103.blogspot.co.il](http://sasi2103.blogspot.co.il/)  -  by [Sasi Levi](https://twitter.com/sasi2103)
- [pwnsecurity.net](http://www.pwnsecurity.net/)  -  by [Shashank](https://twitter.com/cyberboyIndia)
- [breaksec.com](https://www.breaksec.com/)  -  by [Nir Goldshlager](https://twitter.com/Nirgoldshlager)
- [pwndizzle.blogspot.in](http://pwndizzle.blogspot.in/)  -  by [Alex Davies](https://twitter.com/pwndizzle)
- [c0rni3sm.blogspot.in](http://c0rni3sm.blogspot.in/)  -  by [yappare](https://twitter.com/yappare)
- [exploit.co.il/blog](http://exploit.co.il/blog/)  -  by [Shai rod](https://twitter.com/NightRang3r)
- [ibreak.software](https://ibreak.software/)  -  by [Riyaz Ahemed Walikar](https://twitter.com/riyazwalikar)
- [panchocosil.blogspot.in](http://panchocosil.blogspot.in/)  -  by [Francisco Correa](https://twitter.com/@panchocosil)
- [breakingmesh.blogspot.in](http://breakingmesh.blogspot.in/)  -  by [Sahil Sehgal](https://twitter.com/xXSehgalXx)
- [websecresearch.com](http://www.websecresearch.com/)  -  by [ Ajay Singh Negi](https://twitter.com/ajaysinghnegi)
- [securitylearn.net](http://www.securitylearn.net/about/)  -  by [Satish Bommisetty](https://twitter.com/satishb3)
- [secinfinity.net](http://www.secinfinity.net/)  -  by Prakash Sharma
- [websecuritylog.com](http://www.websecuritylog.com/)  -  by [jitendra jaiswal](https://twitter.com/jeetjaiswal22)
- [medium.com/@ajdumanhug](https://medium.com/@ajdumanhug) - by [Allan Jay Dumanhug](https://www.twitter.com/ajdumanhug)
- [Web Hacking 101](https://leanpub.com/web-hacking-101) - by [Peter Yaworski](https://twitter.com/yaworsk)


### Platforms
- [YesWeHack](https://yeswehack.com/)
- [intigriti](https://intigriti.com/)
- [HackerOne](https://hackerone.com/)
- [Bugcrowd](https://bugcrowd.com/)
- [Cobalt](https://cobalt.io/)
- [Bountysource](https://www.bountysource.com/)
- [Bounty Factory](https://bountyfactory.io/)
- [Coder Bounty](http://www.coderbounty.com/)
- [FreedomSponsors](https://freedomsponsors.org/)
- [FOSS Factory](http://www.fossfactory.org/)
- [Synack](https://www.synack.com/)
- [HackenProof](https://hackenproof.com/)
- [Detectify](https://cs.detectify.com/)
- [Bugbountyjp](https://bugbounty.jp/)
- [Safehats](https://safehats.com/)
- [BugbountyHQ](https://www.bugbountyhq.com/)
- [Hackerhive](https://hackerhive.io/)
- [Hacktrophy](https://hacktrophy.com/)
- [AntiHACK](https://www.antihack.me/)
- [CESPPA](https://www.cesppa.com/)

### Available Programs
- [123Contact Form](http://www.123contactform.com/security-acknowledgements.htm)
- [99designs](https://hackerone.com/99designs)
- [Abacus](https://bugcrowd.com/abacus)
- [Acquia](mailto:security@acquia.com)
- [ActiveCampaign](mailto:security@activecampaign.com)
- [ActiveProspect](mailto:security@activeprospect.com)
- [Adobe](https://hackerone.com/adobe)
- [AeroFS](mailto:security@aerofs.com)
- [Airbitz](https://cobalt.io/airbitz)
- [Airbnb](https://hackerone.com/airbnb)
- [Algolia](https://hackerone.com/algolia)
- [Altervista](http://en.altervista.org/feedback.php?who=feedback)
- [Altroconsumo](https://go.intigriti.com/altroconsumo)
- [Amara](mailto:security@amara.org)
- [Amazon Web Services](mailto:aws-security@amazon.com)
- [Amazon.com](mailto:security@amazon.com)
- [ANCILE Solutions Inc.](https://bugcrowd.com/ancile)
- [Anghami](https://hackerone.com/anghami)
- [ANXBTC](https://cobalt.io/anxbtc)
- [Apache httpd](https://hackerone.com/ibb-apache)
- [Appcelerator](mailto:Infosec@appcelerator.com)
- [Apple](mailto:product-security@apple.com)
- [Apptentive](https://www.apptentive.com/contact)
- [Aptible](mailto:security@aptible.com)
- [Ardour](http://tracker.ardour.org/my_view_page.php)
- [Arkane](https://go.intigriti.com/arkanenetwork)
- [ARM mbed](mailto:whitehat@polarssl.org)
- [Asana](mailto:security@asana.com)
- [ASP4all](mailto:support@asp4all.nl)
- [AT&T](https://bugbounty.att.com/bugform.php)
- [Atlassian](https://securitysd.atlassian.net/servicedesk/customer/portal/2)
- [Attack-Secure](mailto:admin@attack-secure.com)
- [Authy](mailto:security@authy.com)
- [Automattic](https://hackerone.com/automattic)
- [Avast!](mailto:bugs@avast.com)
- [Avira](mailto:vulnerabilities@avira.com)
- [AwardWallet](https://cobalt.io/awardwallet)
- [Badoo](https://corp.badoo.com/en/security/#send_bid)
- [Barracuda](https://bugcrowd.com/barracuda)
- [Base](https://go.intigriti.com/base)
- [Basecamp](mailto:security@basecamp.com)
- [Beanstalk](https://wildbit.wufoo.com/forms/wildbit-security-response)
- [BillGuard](https://cobalt.io/billguard)
- [Billys Billing](https://cobalt.io/billys-billing)
- [Binary.com](https://hackerone.com/binary)
- [Binary.com Cashier](https://hackerone.com/binary_cashier)
- [BitBandit.eu](https://cobalt.io/bitbandit-eu)
- [Bitcasa](mailto:security@bitcasa.com)
- [BitCasino](https://cobalt.io/bitcasino)
- [BitGo](https://cobalt.io/bitgo)
- [BitHealth](https://cobalt.io/bithealth)
- [BitHunt](https://hackerone.com/bithunt)
- [BitMEX](https://cobalt.io/bitmex)
- [Bitoasis](https://cobalt.io/bitoasis)
- [Bitpagos](https://cobalt.io/bitpagos)
- [Bitrated](https://cobalt.io/bitrated)
- [Bitreserve](https://cobalt.io/bitreserve)
- [Bitspark](https://cobalt.io/bitspark)
- [Bitwage](https://cobalt.io/bitwage)
- [BitWall](mailto:request@bitwall.io)
- [BitYes](https://cobalt.io/bityes)
- [BlackBerry](https://global.blackberry.com/secure/report-an-issue/en.html)
- [Blackboard](mailto:learnsecurity@blackboard.com)
- [Blackphone](https://bugcrowd.com/blackphone)
- [Blesta](mailto:security@blesta.com)
- [Block.io](https://hackerone.com/blockio)
- [Block.io, Inc.](https://cobalt.io/block-io-inc)
- [Blockchain.info](https://cobalt.io/blockchain-info)
- [BlockScore](https://cobalt.io/blockscore)
- [Bookfresh](https://hackerone.com/bookfresh)
- [Box](mailto:security-reports@box.com)
- [Braintree](mailto:security@braintreepayments.com)
- [Brussels Airlines](https://go.intigriti.com/brusselsairlines)
- [BTC_sx](https://cobalt.io/btc-sx)
- [Buffer](mailto:security@bufferapp.com)
- [BX.in.th](https://cobalt.io/bx-in-th)
- [C2FO](https://hackerone.com/c2fo)
- [Campaign Monitor](https://help.campaignmonitor.com/contact)
- [CARD.com](https://bugcrowd.com/card)
- [Catchafire](https://cobalt.io/catchafire)
- [Caviar](https://hackerone.com/caviar)
- [CCBill](mailto:bugrewards@ccbill.com)
- [CERT/CC](https://hackerone.com/cert)
- [Certly](https://hackerone.com/certly)
- [ChainPay](https://cobalt.io/chainpay)
- [ChangeTip](https://cobalt.io/changetip)
- [Chargify](https://bugcrowd.com/chargify)
- [Chromium Project](https://code.google.com/p/chromium/issues/entry?template=Security%20Bug)
- [Circle](https://cobalt.io/circle)
- [CircleCI](mailto:security@circleci.com)
- [Cisco](http://www.cisco.com/web/about/security/psirt/security_vulnerability_policy.html#roosfassv)
- [ClickUp](https://clickup.com/bug-bounty)
- [Clojars](mailto:contact@clojars.org)
- [CloudFlare](https://hackerone.com/cloudflare)
- [Cobalt](https://cobalt.io/cobalt)
- [Code Climate](mailto:security@codeclimate.com)
- [CodeIgniter](https://hackerone.com/codeigniter)
- [CodePen](https://bugcrowd.com/codepen)
- [Coin Republic](https://cobalt.io/coin-republic)
- [Coin.Space](https://hackerone.com/coinspace)
- [Coinage](https://cobalt.io/coinage)
- [Coinbase](https://hackerone.com/coinbase)
- [CoinDaddy](https://cobalt.io/coindaddy)
- [Coinkite](mailto:feedback@coinkite.com?subject=%5BVulnerability%5D%20-%20)
- [Coinport](https://cobalt.io/coinport)
- [coins.ph](https://cobalt.io/coins-ph)
- [Cointrader.net](https://cobalt.io/cointrader-net)
- [Coinvoy](https://cobalt.io/coinvoy)
- [Collishop](https://go.intigriti.com/collishop)
- [Colruyt](https://go.intigriti.com/colruyt)
- [Compose](mailto:security@compose.io)
- [concrete5](https://hackerone.com/concrete5)
- [Constant Contact](mailto:vulnerability@constantcontact.com)
- [Counterparty](https://cobalt.io/counterparty)
- [Coupa](mailto:security@coupa.com)
- [Coursera](https://hackerone.com/coursera)
- [cPanel](mailto:security@cpanel.net)
- [cPaperless](mailto:support@cPaperless.com)
- [Crix.io](https://cobalt.io/crixio)
- [Cross Border Fines](https://go.intigriti.com/crossborderfines)
- [CrowdShield](https://crowdshield.com/bug-bounty-list.php?bug_bounty_program=crowdshield)
- [Cryptocat](https://github.com/cryptocat/cryptocat/issues)
- [Cupcake](mailto:security@cupcake.io)
- [CustomerInsight](mailto:admin@customerinsight.ca)
- [Cylance](https://hackerone.com/cylance)
- [Dato Capital](mailto:security%40datocapital.com)
- [Detectify](mailto:disclosure@detectify.com)
- [De Volkskrant](https://go.intigriti.com/devolkskrant)
- [Delen Private Bank](https://go.intigriti.com/delen)
- [DigitalOcean](mailto:security@digitalocean.com)
- [DigitalSellz](https://hackerone.com/digitalsellz)
- [Django](https://hackerone.com/django)
- [Doorkeeper](mailto:info@doorkeeper.jp)
- [DoSomething](https://cobalt.io/dosomething)
- [DPD](mailto:security@dpd.zendesk.com)
- [Dragon King](https://hackenproof.com/neverdie/dragon-king)
- [Dreambaby](https://go.intigriti.com/dreamland)
- [Dreamland](https://go.intigriti.com/dream)
- [Dropbox](https://hackerone.com/dropbox)
- [Dropbox Acquisitions](https://hackerone.com/dropbox-acquisitions)
- [Drupal](https://www.drupal.org/node/101494)
- [eBay](http://pages.ebay.com/securitycenter/Researchers.html)
- [Eclipse](mailto:security@eclipse.org)
- [eHealth Hub VZN KUL](https://go.intigriti.com/ehealthhubvznkul)
- [EMC](mailto:security_alert@emc.com)
- [Enano](mailto:security@enanocms.org)
- [Engine Yard](mailto:security@engineyard.com)
- [Envoy](https://hackerone.com/envoy)
- [Eobot](https://cobalt.io/eobot)
- [EthnoHub](mailto:security@ethnohub.com)
- [Etsy](https://www.etsy.com/bounty)
- [EVE](mailto:security@ccpgames.com)
- [Event Espresso](http://eventespresso.com/report-a-security-vulnerability)
- [Everitoken](https://hackenproof.com/everitoken/everitoken-blockchain)
- [Evernote](mailto:security@evernote.com)
- [EURid](https://go.intigriti.com/eurid)
- [Expatistan](mailto:gerardo@expatistan.com)
- [ExpressionEngine](https://hackerone.com/expressionengine)
- [Ezbob](https://cobalt.io/ezbob)
- [Facebook](https://www.facebook.com/whitehat)
- [Faceless](https://hackerone.com/faceless)
- [Factlink](https://hackerone.com/factlink)
- [FanFootage](https://hackerone.com/fanfootage)
- [FastSlots](https://cobalt.io/fastslots)
- [Flash](https://hackerone.com/flash)
- [Flood](mailto:support@flood.io)
- [Flow Dock](mailto:security@flowdock.com)
- [Flox](https://hackerone.com/flox)
- [Fluxiom](mailto:security@fluxiom.com)
- [Fog Creek](http://www.fogcreek.com/contact)
- [FormAssembly](mailto:security@formassembly.com)
- [Founder Bliss](https://cobalt.io/founder-bliss)
- [Foursquare](mailto:security@foursquare.com)
- [Freelancer](mailto:security-reporting@freelancer.com)
- [Gallery](mailto:security@galleryproject.org)
- [Gamma](mailto:security-alert@intergamma.nl)
- [Gemfury](mailto:security@gemfury.com)
- [General Motors](https://hackerone.com/gm)
- [GhostMail](https://hackerone.com/gmguys)
- [GitHub](https://bounty.github.com/submit-a-vulnerability.html)
- [GitLab](https://hackerone.com/gitlab)
- [GlassWire](https://hackerone.com/glasswire)
- [Gliph](mailto:security@gli.ph)
- [GlobaLeaks](https://hackerone.com/globaleaks)
- [Google PRP](mailto:security-patches@google.com)
- [Google VRP](https://www.google.com/about/appsecurity/reward-program/index.html)
- [Grammarly](https://hackerone.com/grammarly)
- [Gratipay](https://hackerone.com/gratipay)
- [GreenAddress](https://cobalt.io/greenaddress)
- [Greenhouse.io](https://hackerone.com/greenhouse)
- [Grok Learning](mailto:security@groklearning.com)
- [HackenProof](https://hackenproof.com/hacken/hackenproof)
- [HackerOne](https://hackerone.com/security)
- [Harmony](mailto:security@collectiveidea.com)
- [Heroku](https://bugcrowd.com/heroku)
- [Hex-Rays](mailto:bugbounty@hex-rays.com)
- [Hive Wallet](https://cobalt.io/hive-wallet)
- [Hootsuite](mailto:security@hootsuite.com)
- [HTC](mailto:security@htc.com)
- [Huawei](mailto:psirt@huawei.com)
- [Hubdia](https://hackerone.com/hubdia)
- [Humble Bundle](https://bugcrowd.com/humblebundle)
- [IAM KU Leuven](https://go.intigriti.com/kuleuvenlogin)
- [Ian Dunn](https://hackerone.com/iandunn-projects)
- [IBM](https://www.ibm.com/scripts/contact/contact/us/en/security_vulnerabilities)
- [ICEcoder](https://bugcrowd.com/icecoder)
- [Iconfinder](mailto:support@iconfinder.com)
- [Ifixit](mailto:security@ifixit.com)
- [Imgur](https://hackerone.com/imgur)
- [ImpressPages](https://cobalt.io/impresspages)
- [Indeed](https://bugcrowd.com/indeed)
- [Independent Reserve](https://cobalt.io/independent-reserve)
- [Informatica](https://hackerone.com/informatica)
- [IntegraXor](http://www.integraxor.com/support.html)
- [Internetwache](mailto:security@internetwache.org)
- [InVision](https://hackerone.com/invision)
- [IRCCloud](https://hackerone.com/irccloud)
- [itBit Exchange](https://hackerone.com/itbit)
- [ITRP](mailto:security@itrp.com)
- [itsme](https://go.intigriti.com/itsme)
- [joola.io](https://hackerone.com/joola-io)
- [Joomla](http://vel.joomla.org/submit-vel)
- [JRuby](mailto:security@jruby.org)
- [jsDelivr](https://hackerone.com/jsdelivr)
- [Juniper](mailto:sirt@juniper.net)
- [Kadira](https://hackerone.com/kadira)
- [Kaneva](mailto:security@kaneva.com)
- [Kayako](http://my.kayako.com/Tickets/Submit)
- [Kenna](https://bugcrowd.com/riskio)
- [Keybase](https://hackerone.com/keybase)
- [Khan Academy](https://hackerone.com/khanacademy)
- [SKB Kontur](https://kontur.ru/.well-known/security.txt)
- [Kraken](mailto:bugbounty@kraken.com)
- [Kinepolis](https://go.intigriti.com/kinepolis)
- [Kuna](https://hackenproof.com/kuna/kuna-crypto-exchange)
- [Lancor Income](https://cobalt.io/lancor-income)
- [LastPass](mailto:security@lastpass.com)
- [LaunchKey](mailto:security@launchkey.com)
- [Lean Testing](https://hackerone.com/leantesting)
- [Librato](mailto:security@librato.com)
- [LibSass](https://hackerone.com/libsass)
- [Liferay](mailto:security@liferay.com)
- [Line](https://bugbounty.linecorp.com/en/)
- [LinkedIn](mailto:security@linkedin.com)
- [LiveEnsure](http://www.liveensure.com/contact.php)
- [LocalBitcoins](https://cobalt.io/localbitcoins)
- [Localize](https://hackerone.com/localize)
- [Logentries](mailto:security@logentries.com)
- [Lookout](mailto:security@lookout.com)
- [Magento](mailto:security@magento.com)
- [MAGIX](mailto:security@magix.net)
- [Mahara](mailto:security@mahara.org)
- [MaiCoin](https://cobalt.io/maicoin)
- [Mail.Ru](https://hackerone.com/mailru)
- [Mailbird](https://cobalt.io/mailbird)
- [MailChimp](http://mailchimp.com/about/security-response/)
- [ManageBGL](https://cobalt.io/managebgl)
- [ManageWP](mailto:security@managewp.com)
- [MapLogin](https://hackerone.com/maplogin)
- [Marietje Schaake](https://go.intigriti.com/marietjeschaake)
- [Marktplatts](https://hackerone.com/marktplaats)
- [Mavenlink](https://hackerone.com/mavenlink)
- [Maximum](https://hackerone.com/maximum)
- [MCProHosting](https://bugcrowd.com/mcprohostings)
- [MEGA](mailto:bugs@mega.co.nz)
- [Mercury](https://cobalt.io/mercury)
- [Meteor](https://hackerone.com/meteor)
- [meXBT](https://cobalt.io/mexbt)
- [Microsoft](mailto:secure@microsoft.com)
- [Mimecast](mailto:disclosure@mimecast.com)
- [Mobile Vikings](https://go.intigriti.com/mobilevikings)
- [Mobile Vikings](https://hackerone.com/mobilevikings)
- [Modus CSR](mailto:security@moduscsr.com)
- [MoneyBird](mailto:security@moneybird.com)
- [MoneyStream](https://hackerone.com/moneystream)
- [Moodle](mailto:security@moodle.org)
- [Motorola Solutions](mailto:security@motorolasolutions.com)
- [Mozilla](https://www.mozilla.org/en-US/security/bug-bounty/)
- [mynxt.info](https://cobalt.io/mynxt-info)
- [NCSC](mailto:cert@ncsc.nl)
- [Nearby Live](https://hackerone.com/nearby)
- [Nest](mailto:security@nest.com)
- [Netflix](mailto:security-report@netflix.com)
- [Neverdie Smart Contract](https://hackenproof.com/neverdie/neverdie-smart-contract)
- [Neverdie Web](https://hackenproof.com/neverdie/neverdie-web)
- [Nexmo](https://cobalt.io/nexmo)
- [Nexuzhealth](https://go.intigriti.com/nexushealth)
- [Nexuzhealth Web PACS](https://go.intigriti.com/nexuzhealthwebpacs)
- [Nginx](https://hackerone.com/ibb-nginx)
- [Nitrous](mailto:security@nitrous.io)
- [Nokia Networks](mailto:security-alert@nokia.com)
- [NoPass](https://cobalt.io/nopass)
- [NZRS](mailto:security@nzrs.net.nz)
- [Offensive Security](mailto:security@offensive-security.com)
- [ok.ru](https://hackerone.com/ok)
- [OKCoin](https://cobalt.io/okcoin)
- [OkCupid](https://hackerone.com/okcupid)
- [Olark](mailto:security@olark.com)
- [OneSpan Mobile](https://go.intigriti.com/vascomobileproducts)
- [OneSpan Server Products](https://go.intigriti.com/vascoserver-sideproducts)
- [Opal Cryptocurrency](https://cobalt.io/opal-cryptocurrency)
- [Openfolio](https://hackerone.com/openfolio)
- [OpenSSL](https://hackerone.com/ibb-openssl)
- [OpenStack](https://security.openstack.org/#how-to-report-security-issues-to-openstack)
- [OpenText](mailto:otst@opentext.com)
- [Opera](https://bugs.opera.com/wizarddesktop)
- [Optimizely](https://cobalt.io/optimizely)
- [Oracle](mailto:secalert_us@oracle.com)
- [ownCloud](https://hackerone.com/owncloud)
- [PagerDuty](mailto:security@pagerduty.com)
- [Panasonic Avionics](https://hackerone.com/panasonic-aero)
- [Pantheon](https://bugcrowd.com/pantheon)
- [Panzura](mailto:security@panzura.com)
- [Paragon Initiative Enterprises](https://hackerone.com/paragonie)
- [Paychoice](mailto:security@paychoice.com.au)
- [PayMill](mailto:security@paymill.com)
- [PayPal](mailto:https://www.paypal.com/bugbounty/register)
- [Paytm](https://bugbounty.paytm.com)
- [Perl](https://hackerone.com/ibb-perl)
- [Phabricator](https://hackerone.com/phabricator)
- [PHP](https://bugs.php.net/report.php)
- [Pidgin](mailto:security@pidgin.im)
- [PikaPay](mailto:security@pikapay.com)
- [PinoyHackNews](mailto:admin@pinoyhacknews.com)
- [Pinterest](https://bugcrowd.com/pinterest)
- [Piwik Open Source Analytics](https://cobalt.io/piwik-open-source-analytics)
- [Plone](mailto:security@plone.org)
- [Pocket](mailto:security@getpocket.com)
- [Poloniex](https://cobalt.io/poloniex)
- [Postmark](https://wildbit.wufoo.com/forms/wildbit-security-response)
- [Prezi](mailto:security-bug-bounty@prezi.com)
- [Projectplace](https://hackerone.com/projectplace)
- [PullReview](mailto:security@pullreview.com)
- [Puppet labs](mailto:security@puppetlabs.com)
- [PureVPN](https://bugcrowd.com/purevpn)
- [Python](mailto:security@python.org)
- [QIWI](https://hackerone.com/qiwi)
- [Quadriga CX](https://cobalt.io/quadriga-cx)
- [QuickBT](https://cobalt.io/quickbt)
- [Quora](https://hackerone.com/quora)
- [Rackspace](mailto:security@rackspace.com)
- [Rdbhost_service](https://cobalt.io/rdbhost-service)
- [Red Hat](mailto:site-security@redhat.com)
- [Reddit](mailto:security@reddit.com)
- [Relaso](mailto:security@relaso.com)
- [RelateIQ](mailto:security@relateiq.com)
- [Release Wire](http://www.releasewire.com/about/contact)
- [Respondly](https://hackerone.com/respondly)
- [Revive Adserver](https://hackerone.com/revive_adserver)
- [Ribose](https://www.ribose.com/feedbacks/security)
- [Ripio](https://cobalt.io/ripio)
- [Ripple](mailto:bugs@ripple.com)
- [Riskalyze](mailto:security@riskalyze.com)
- [Romit](https://hackerone.com/romit)
- [Ruby](mailto:security@ruby-lang.org)
- [Ruby on Rails](https://hackerone.com/rails)
- [Salesforce](mailto:security@salesforce.com)
- [Samsung TV](https://samsungtvbounty.com/ReportBug.aspx)
- [Sandbox Escape](https://hackerone.com/sandbox)
- [SAP](mailto:secure@sap.com)
- [Schuberg Philis](mailto:abuse@schubergphilis.com)
- [Scorpion Software](mailto:security@scorpionsoft.com)
- [Secret](https://hackerone.com/secret)
- [Secure Works](mailto:security@secureworks.com)
- [Sellfy](http://docs.sellfy.com/contact)
- [Sentiance](https://go.intigriti.com/sentiance)
- [ServiceRocket](https://bugcrowd.com/servicerocket)
- [ShareLaTeX](mailto:team@sharelatex.com)
- [Sherpany](https://cobalt.io/sherpany)
- [Shopify](https://hackerone.com/shopify)
- [Sifter](mailto:security@sifterapp.com?subject=%27Security%20Vulnerability%20Report%27)
- [Silent Circle](https://bugcrowd.com/silentcircle)
- [Simple](https://bugcrowd.com/simple)
- [SiteGround](mailto:responsible-disclosure@siteground.com)
- [Skoodat](mailto:security@skoodat.com)
- [Skrill](https://cobalt.io/skrill)
- [Skyscanner](https://bugcrowd.com/skyscanner)
- [Slack](https://hackerone.com/slack)
- [Snapchat](https://hackerone.com/snapchat)
- [Snappy](mailto:security@userscape.com)
- [Sonatype](mailto:security@sonatype.com)
- [Sony](https://secure.sony.net/form)
- [SoundCloud](https://scsecurity.freshdesk.com/support/tickets/new)
- [Spaargids](https://go.intigriti.com/spaargids)
- [SpectroCoin](https://cobalt.io/spectrocoin)
- [Spendbitcoins](https://cobalt.io/spendbitcoins)
- [SplashID](https://bugcrowd.com/splashid)
- [Splitwise](mailto:security@splitwise.com)
- [Spotify](mailto:security@spotify.com)
- [Sprout Social](mailto:security@sproutsocial.com)
- [Square](https://hackerone.com/square)
- [Square Open Source](https://hackerone.com/square-open-source)
- [StatusPage](https://bugcrowd.com/sunrise)
- [StopTheHacker](https://hackerone.com/stopthehacker)
- [Student Assessment System](https://go.intigriti.com/printscan)
- [Studio 100](https://go.intigriti.com/studio100)
- [Subledger](https://cobalt.io/subledger)
- [Subrosa](https://cobalt.io/subrosa)
- [Sucuri](https://hackerone.com/sucuri)
- [Suivo](https://go.intigriti.com/suivoweb)
- [Symantec](mailto:secure@symantec.com)
- [Taptalk](https://hackerone.com/taptalk)
- [Tarsnap](mailto:cperciva@tarsnap.com)
- [TeamUnify](mailto:security@teamunify.com)
- [Tele2](mailto:beveiligingsmeldpunt@tele2.com)
- [Telekom](mailto:cert@telekom.de?subject=bug_bounty)
- [Telenet](https://go.intigriti.com/telenet)
- [Test-Aankoop](https://go.intigriti.com/testaankoop)
- [The Internet](https://hackerone.com/internet)
- [The Mastercoin Foundation](https://cobalt.io/the-mastercoin-foundation)
- [ThisData](https://hackerone.com/thisdata)
- [TimeTrex](https://cobalt.io/timetrex)
- [ToyTalk](https://hackerone.com/toytalk)
- [Trello](https://hackerone.com/trello)
- [Tuenti](http://corporate.tuenti.com/en/contact/security)
- [Tweakers](https://go.intigriti.com/tweakers)
- [Twilio](https://bugcrowd.com/twilio)
- [Twitch](mailto:security@twitch.tv)
- [Twitter](https://hackerone.com/twitter)
- [Uber](mailto:security-abuse@uber.com)
- [Ubiquiti Networks](https://hackerone.com/ubnt)
- [Unitag](mailto:security@unitag.io)
- [Urban Dictionary](https://hackerone.com/urbandictionary)
- [Uzbey](https://hackerone.com/uzbey)
- [Valve Software](mailto:security@valvesoftware.com)
- [VeChainThor](https://hackenproof.com/vechain/vechainthor)
- [VeChainThor Wallet](https://hackenproof.com/vechain/vechainthor-wallet)
- [VCE](mailto:security-alerts@vce.com)
- [Venmo](mailto:security@venmo.com)
- [Version Cake](https://hackerone.com/versioncake)
- [Viadeo](mailto:security@viadeo.com)
- [Vimeo](https://hackerone.com/vimeo)
- [VK.com](https://hackerone.com/vkcom)
- [Volusion](https://bugcrowd.com/volusion)
- [VPNSox](https://cobalt.io/vpnsox)
- [vulners.com](https://hackerone.com/vulnerscom)
- [Vultr](https://www.vultr.com/bug-bounty/)
- [Webconverger](mailto:security@webconverger.com)
- [Websecurify](http://campaigns.websecurify.com/money-for-bugs/#contact)
- [Weebly](https://cobalt.io/weebly)
- [WePay](https://hackerone.com/wepay)
- [Whisper](https://hackerone.com/whisper)
- [WHMCS](https://bugcrowd.com/whmcs)
- [Windthorst ISD](http://www.windthorstisd.net/BugReport.cfm)
- [withinsecurity](https://hackerone.com/withinsecurity)
- [WizeHive](mailto:security@wizehive.com)
- [Woorank](https://go.intigriti.com/woorank)
- [WordPoints](https://hackerone.com/wordpoints)
- [Wordware](https://cobalt.io/wordware)
- [WP API](https://hackerone.com/wp-api)
- [Xen Project](mailto:security@xenproject.org)
- [Xmarks](mailto:security@lastpass.com)
- [Yahoo](https://hackerone.com/yahoo)
- [Yandex](https://yandex.com/bugbounty/report)
- [Yanomo](mailto:support@yanomo.com)
- [Yesware](mailto:security@yesware.com)
- [Zapier](mailto:security@zapier.com)
- [Zaption](https://hackerone.com/zaption)
- [ZenCash](mailto:security@zencash.com)
- [Zendesk](https://hackerone.com/zendesk)
- [Zetetic](mailto:support@zetetic.net)
- [Ziggo](mailto:security@ziggo.nl)
- [Zimbra](mailto:security@zimbra.com)
- [Zoho](https://bugbounty.zoho.com/bb/info) 
- [Zomato](https://hackerone.com/zomato)
- [Zopim](https://hackerone.com/zopim)
- [Zynga](mailto:whitehat@zynga.com)

## Aggregators

- [BountyHQ](https://bountyhq.secapps.com/)

## License

[![CC0](http://mirrors.creativecommons.org/presskit/buttons/88x31/svg/cc-zero.svg)](https://creativecommons.org/publicdomain/zero/1.0/)

To the extent possible under law, [Dheeraj Joshi](https://github.com/djadmin) has waived all copyright and related or neighboring rights to this work.
",,2016-02-13T23:00:35Z,2024-01-15T15:26:26Z,27,25,4422,290,"('djadmin', 52), ('jandersoncampelo', 3), ('ArneSchoonvliet', 2), ('dhauenstein', 2), ('realabbas', 2), ('ajdumanhug', 1), ('AshBardhan', 1), ('brandon93s', 1), ('Chan9390', 1), ('christophetd', 1), ('0NtgO', 1), ('godarderik', 1), ('Florent Poinsaut', 1), ('d-h1', 1), ('leogr', 1), ('mikeroosa', 1), ('IgnacioRV', 1), ('Phillip Smith', 1), ('bl4de', 1), ('ritiek', 1), ('Metnew', 1), ('deepsk79', 1), ('mrcyb3rman', 1), ('cyber-niz', 1), ('pdparchitect', 1), ('ruvlol', 1), ('yeswehack-bruno', 1)",22,20,
liuyangming/ByteJTA,ByteJTA is a distributed transaction manager based on the XA/2PC mechanism. It’s compatible with the JTA specification. User guide: https://github.com/liuyangming/ByteJTA/wiki,"﻿
**ByteJTA** is an implementation of Distributed Transaction Manager, based on the XA/2PC mechanism. 

**ByteJTA** is comptible with JTA and could be seamlessly integrated with Spring and other Java containers.


## 1. Quick Start

#### 1.1 Add maven depenency
###### 1.1.1. Spring Cloud
```xml

	org.bytesoft
	bytejta-supports-springcloud
	0.5.0-BETA9

```
###### 1.1.2. dubbo
```xml

	org.bytesoft
	bytejta-supports-dubbo
	0.5.0-BETA9

```



## 2. Documentation & Samples
* [Document](https://github.com/liuyangming/ByteJTA/wiki)
* [Sample](https://github.com/liuyangming/ByteJTA-sample)



## 3. Features
* support declarative transaction management
* support distributed transaction scenarios. e.g. multi-datasource, cross-applications and cross-servers transaction
* support Dubbo framework
* support Spring Cloud



## 4. Contact Me
If you have any questions or comments regarding this project, please feel free to contact me at:

1. send mail to _[bytefox#126.com](bytefox@126.com)_
~OR~
2. add Tecent QQ group 537445956/606453172

We will review all the suggestions and implement good ones in future release.
","'distributed-transactions', 'jta', 'spring-cloud', 'transaction', 'transaction-manager', 'two-phase-commit', 'xa'",2015-12-18T13:02:35Z,2022-12-16T13:42:25Z,4,3,211,34,"('liuyangming', 366), ('dependabotbot', 9), ('liuyangming9f', 3), ('icefox', 1)",1,0,
aaPanel/BaoTa,宝塔Linux面板 - 简单好用的服务器运维面板,"##### 宝塔开源许可协议：https://www.bt.cn/kyxy.html
##### 使用手册：http://docs.bt.cn
##### 论坛地址：https://www.bt.cn/bbs
##### 反馈建议： https://www.bt.cn/bbs/forum-43-1.html
##### Bug提交：https://www.bt.cn/bbs/forum-39-1.html

#### 安装命令：
##### Centos
```bash
yum install -y wget && wget -O install.sh http://download.bt.cn/install/install_6.0.sh && sh install.sh
```
##### Ubuntu/Debian
```bash
wget -O install.sh http://download.bt.cn/install/install-ubuntu_6.0.sh && sudo bash install.sh
```
","'baota', 'bt-panel', 'lamp', 'lnmp', 'python', 'web-panel'",2019-06-17T10:59:46Z,2023-02-16T05:29:45Z,8,6,4060,99,"('showpy', 601), ('songchudong', 179), ('zdm', 72), ('WEBLIFU', 48), ('19950219', 45), ('aaPanel', 38), ('吕林潇', 8), ('safly', 2)",0,0,
xavimb/ab-testing,A/B testing made easy.,"ab-testing
==========

[![Build Status](https://travis-ci.com/xavimb/ab-testing.svg?branch=master)](https://travis-ci.org/xavimb/ab-testing)
[![Latest Stable Version](https://img.shields.io/npm/v/ab-testing.svg)](https://www.npmjs.com/package/ab-testing)
[![License](https://img.shields.io/npm/l/ab-testing.svg)](https://raw.githubusercontent.com/xavimb/ab-testing/master/LICENSE)

A/B testing made easy.

## Buy me a coffee!

This project is maintained during weekends and free time. If you find this useful, consider buying me a coffee!



## Install

	npm install ab-testing

## Initialize

```javascript
var ABTesting = require('ab-testing');

var testObject = ABTesting.createTest('firstTest', 	// This name has to be unique across all the tests
[
	{
		name: 'A',
		weight: 0.1 	// If not set, the default value is 0.5
	},
	{
		name: 'B',
		weight: 0.9
	}
]);
```

## Assign a group

```javascript
// Given a unique ID of the user, returns 'A' or 'B'
var testGroup = testObject.getGroup(user.id);
```

## Get test name

```javascript
// Returns the name of the test, in this case 'firstTest'
var testName = testObject.getName();
```

## A/B Test

```javascript
// Executes the corresponding function for the given group
testObject.test(testGroup, [
	function () {
		// Test A code here
	},
	function() {
		// Test B code here
	}
], this);
```

## Useful usage tips

```javascript
// Use the test name and the group name to track analytics
sendToAnalytics(testName, testGroup);
```

## Create multiple A/B tests

```javascript
var ABTesting = require('ab-testing');

var landingPageTest = ABTesting.createTest('landingPage', [{ name: 'oldLandingPage' }, { name: 'newLandingPage' }]);
var pricingPageTest = ABTesting.createTest('pricingPage', [{ name: 'oldPricingPage' }, { name: 'newPricingPage' }]);

...

var landingPageGroup = landingPageTest.getGroup(req.account.username);
var pricingPageGroup = pricingPageTest.getGroup(req.account.username);

...

landingPageTest.test(landingPageGroup, [
	function () {
		// oldLandingPage code
	},
	function () {
		// newLandingPage code
	}
], this);

pricingPageTest.test(pricingPageGroup, [
	function () {
		// oldPricingPage code
	},
	function () {
		// newPricingPage code
	}
], this);
```

>NB: the last parameter `this` is optional. If the scope is not required, this paremeter can be ignored.

",,2014-12-14T20:07:39Z,2024-06-16T12:10:49Z,8,6,53,1,"('Xavi Magrinyà', 26), ('xavimb', 23), ('dependabotbot', 4), ('nchase', 2), ('rskull', 2), ('SharkofMirkwood', 1), ('emanualjade', 1), ('gabrielvv-tfm', 1)",3,2,
andrewsyc/4chan-b-scraper,script that continually scraps /b/,"# 4chan-b-scraper
script that continually scraps /b/

Simply run the script and pic the selected directory to save files to
",,2016-04-21T22:43:15Z,2016-04-21T22:45:22Z,1,1,9,4,"('andrewsyc', 5)",0,0,
felangel/bloc,A predictable state management library that helps implement the BLoC design pattern,"















---

A predictable state management library that helps implement the BLoC design pattern.

| Package                                                                                    | Pub                                                                                                            |
| ------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------------- |
| [bloc](https://github.com/felangel/bloc/tree/master/packages/bloc)                         | [![pub package](https://img.shields.io/pub/v/bloc.svg)](https://pub.dev/packages/bloc)                         |
| [bloc_test](https://github.com/felangel/bloc/tree/master/packages/bloc_test)               | [![pub package](https://img.shields.io/pub/v/bloc_test.svg)](https://pub.dev/packages/bloc_test)               |
| [bloc_concurrency](https://github.com/felangel/bloc/tree/master/packages/bloc_concurrency) | [![pub package](https://img.shields.io/pub/v/bloc_concurrency.svg)](https://pub.dev/packages/bloc_concurrency) |
| [flutter_bloc](https://github.com/felangel/bloc/tree/master/packages/flutter_bloc)         | [![pub package](https://img.shields.io/pub/v/flutter_bloc.svg)](https://pub.dev/packages/flutter_bloc)         |
| [angular_bloc](https://github.com/felangel/bloc/tree/master/packages/angular_bloc)         | [![pub package](https://img.shields.io/pub/v/angular_bloc.svg)](https://pub.dev/packages/angular_bloc)         |
| [hydrated_bloc](https://github.com/felangel/bloc/tree/master/packages/hydrated_bloc)       | [![pub package](https://img.shields.io/pub/v/hydrated_bloc.svg)](https://pub.dev/packages/hydrated_bloc)       |
| [replay_bloc](https://github.com/felangel/bloc/tree/master/packages/replay_bloc)           | [![pub package](https://img.shields.io/pub/v/replay_bloc.svg)](https://pub.dev/packages/replay_bloc)           |

---

## Sponsors

Our top sponsors are shown below! [[Become a Sponsor](https://github.com/sponsors/felangel)]


    
        
            
                
            
            
                
            
            
                
            
        
        
            
                
            
            
                
            
            
                
                        
        
    


---

## Overview



The goal of this library is to make it easy to separate _presentation_ from _business logic_, facilitating testability and reusability.

## Documentation

- [Official Documentation](https://bloclibrary.dev)
- [Bloc Package](https://github.com/felangel/bloc/tree/master/packages/bloc/README.md)
- [Bloc Test Package](https://github.com/felangel/bloc/tree/master/packages/bloc_test/README.md)
- [Bloc Concurrency Package](https://github.com/felangel/bloc/tree/master/packages/bloc_concurrency/README.md)
- [Flutter Bloc Package](https://github.com/felangel/bloc/tree/master/packages/flutter_bloc/README.md)
- [Angular Bloc Package](https://github.com/felangel/bloc/tree/master/packages/angular_bloc/README.md)
- [Hydrated Bloc Package](https://github.com/felangel/bloc/tree/master/packages/hydrated_bloc/README.md)
- [Replay Bloc Package](https://github.com/felangel/bloc/tree/master/packages/replay_bloc/README.md)

## Migration

- [Migration Guide](https://bloclibrary.dev/migration)

## Examples


    
        
            
                
                    
                
                        
            
                
                    
                
            
            
                
                    
                
            
        
        
            
                
                    
                
            
            
                
                    
                
            
            
                
                    
                
            
        
    


### Dart

- [Counter](https://github.com/felangel/bloc/tree/master/packages/bloc/example) - an example of how to create a `CounterBloc` (pure dart).

### Flutter

- [Counter](https://bloclibrary.dev/tutorials/flutter-counter) - an example of how to create a `CounterBloc` to implement the classic Flutter Counter app.
- [Form Validation](https://github.com/felangel/bloc/tree/master/examples/flutter_form_validation) - an example of how to use the `bloc` and `flutter_bloc` packages to implement form validation.
- [Bloc with Stream](https://github.com/felangel/bloc/tree/master/examples/flutter_bloc_with_stream) - an example of how to hook up a `bloc` to a `Stream` and update the UI in response to data from the `Stream`.
- [Complex List](https://github.com/felangel/bloc/tree/master/examples/flutter_complex_list) - an example of how to manage a list of items and asynchronously delete items one at a time using `bloc` and `flutter_bloc`.
- [Infinite List](https://bloclibrary.dev/tutorials/flutter-infinite-list) - an example of how to use the `bloc` and `flutter_bloc` packages to implement an infinite scrolling list.
- [Login Flow](https://bloclibrary.dev/tutorials/flutter-login) - an example of how to use the `bloc` and `flutter_bloc` packages to implement a Login Flow.
- [Firebase Login](https://bloclibrary.dev/tutorials/flutter-firebase-login) - an example of how to use the `bloc` and `flutter_bloc` packages to implement login via Firebase.
- [Github Search](https://bloclibrary.dev/tutorials/github-search) - an example of how to create a Github Search Application using the `bloc` and `flutter_bloc` packages.
- [Weather](https://bloclibrary.dev/tutorials/flutter-weather) - an example of how to create a Weather Application using the `bloc` and `flutter_bloc` packages. The app uses a `RefreshIndicator` to implement ""pull-to-refresh"" as well as dynamic theming.
- [Todos](https://bloclibrary.dev/tutorials/flutter-todos) - an example of how to create a Todos Application using the `bloc` and `flutter_bloc` packages.
- [Timer](https://bloclibrary.dev/tutorials/flutter-timer) - an example of how to create a Timer using the `bloc` and `flutter_bloc` packages.
- [Shopping Cart](https://github.com/felangel/bloc/tree/master/examples/flutter_shopping_cart) - an example of how to create a Shopping Cart Application using the `bloc` and `flutter_bloc` packages based on [flutter samples](https://github.com/flutter/samples/tree/master/provider_shopper).
- [Dynamic Form](https://github.com/felangel/bloc/tree/master/examples/flutter_dynamic_form) - an example of how to use the `bloc` and `flutter_bloc` packages to implement a dynamic form which pulls data from a repository.
- [Wizard](https://github.com/felangel/bloc/tree/master/examples/flutter_wizard) - an example of how to build a multi-step wizard using the `bloc` and `flutter_bloc` packages.
- [Fluttersaurus](https://github.com/felangel/fluttersaurus) - an example of how to use the `bloc` and `flutter_bloc` packages to create a thesaurus app -- made for Bytconf Flutter 2020.
- [I/O Photo Booth](https://github.com/flutter/photobooth) - an example of how to use the `bloc` and `flutter_bloc` packages to create a virtual photo booth web app -- made for Google I/O 2021.
- [I/O Pinball](https://github.com/flutter/pinball) - an example of how to use the `bloc` and `flutter_bloc` packages to create a pinball web app -- made for Google I/O 2022.
- [I/O Holobooth](https://github.com/flutter/holobooth) - an example of how to use the `bloc` and `flutter_bloc` packages to create a virtual photobooth experience -- made for Flutter Forward.
- [I/O Flip](https://github.com/flutter/io_flip) - an example of how to use the `bloc`, `flutter_bloc`, and `flame_bloc` packages to create a card game -- made for Google I/O 2023.

### Web

- [Counter](https://github.com/felangel/Bloc/tree/master/examples/angular_counter) - an example of how to use a `CounterBloc` in an AngularDart app.
- [Github Search](https://github.com/felangel/Bloc/tree/master/examples/github_search/angular_github_search) - an example of how to create a Github Search Application using the `bloc` and `angular_bloc` packages.

### Flutter + Web

- [Github Search](https://github.com/felangel/Bloc/tree/master/examples/github_search) - an example of how to create a Github Search Application and share code between Flutter and AngularDart.

## Articles

- [Bloc package](https://medium.com/flutter-community/flutter-bloc-package-295b53e95c5c) - An intro to the bloc package with high level architecture and examples.
- [Login tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-login-tutorial-with-flutter-bloc-ea606ef701ad) - How to create a full login flow using the bloc and flutter_bloc packages.
- [Unit testing with bloc](https://medium.com/@felangelov/unit-testing-with-bloc-b94de9655d86) - How to unit test the blocs created in the flutter login tutorial.
- [Infinite list tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-infinite-list-tutorial-with-flutter-bloc-2fc7a272ec67) - How to create an infinite list using the bloc and flutter_bloc packages.
- [Code sharing with bloc](https://medium.com/flutter-community/code-sharing-with-bloc-b867302c18ef) - How to share code between a mobile application written with Flutter and a web application written with AngularDart.
- [Weather app tutorial with flutter_bloc](https://medium.com/flutter-community/weather-app-with-flutter-bloc-e24a7253340d) - How to build a weather app which supports dynamic theming, pull-to-refresh, and interacting with a REST API using the bloc and flutter_bloc packages.
- [Todos app tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-todos-tutorial-with-flutter-bloc-d9dd833f9df3) - How to build a todos app using the bloc and flutter_bloc packages.
- [Firebase login tutorial with flutter_bloc](https://medium.com/flutter-community/firebase-login-with-flutter-bloc-47455e6047b0) - How to create a fully functional login/sign up flow using the bloc and flutter_bloc packages with Firebase Authentication and Google Sign In.
- [Flutter timer tutorial with flutter_bloc](https://medium.com/flutter-community/flutter-timer-with-flutter-bloc-a464e8332ceb) - How to create a timer app using the bloc and flutter_bloc packages.
- [Firestore todos tutorial with flutter_bloc](https://medium.com/flutter-community/firestore-todos-with-flutter-bloc-7b2d5fadcc80) - How to create a todos app using the bloc and flutter_bloc packages that integrates with cloud firestore.

## Books

- [Flutter Complete Reference](https://fluttercompletereference.com/) - A book about the Dart programming language (version 2.10, with null safety support) and the Flutter framework (version 1.20). It covers the bloc package (version 6.0.3) in all flavors: bloc, flutter_bloc hydrated_bloc, replay_bloc, bloc_test and cubit.

## Extensions

- [IntelliJ](https://plugins.jetbrains.com/plugin/12129-bloc-code-generator) - extends IntelliJ/Android Studio with support for the Bloc library and provides tools for effectively creating Blocs for both Flutter and AngularDart apps.
- [VSCode](https://marketplace.visualstudio.com/items?itemName=FelixAngelov.bloc#overview) - extends VSCode with support for the Bloc library and provides tools for effectively creating Blocs for both Flutter and AngularDart apps.

## Community

Learn more at the following links, which have been contributed by the community.

### Packages

- [Bloc.js](https://github.com/felangel/bloc.js) - A port of the `bloc` state management library from Dart to JavaScript, by [Felix Angelov](https://github.com/felangel).
- [Firebase Auth](https://pub.dev/packages/fb_auth) - A Web, Mobile Firebase Auth Plugin, by [Rody Davis](https://github.com/AppleEducate).
- [Form Bloc](https://pub.dev/packages/form_bloc) - An easy way to create forms with BLoC pattern without writing a lot of boilerplate code, by [Giancarlo](https://github.com/GiancarloCode).
- [Flame Bloc](https://pub.dev/packages/flame_bloc) - Bloc integration for the Flame game engine, by [Flame Engine](https://github.com/flame-engine).

### Video Tutorials

- [Bloc Library: Basics and Beyond 🚀](https://youtu.be/knMvKPKBzGE) - Talk given at [Flutter Europe](https://fluttereurope.dev) about the basics of the bloc library, by [Felix Angelov](https://github.com/felangel).
- [Flutter Bloc Library Tutorial](https://www.youtube.com/watch?v=hTExlt1nJZI) - Introduction to the Bloc Library, by [Reso Coder](https://resocoder.com).
- [Flutter Youtube Search](https://www.youtube.com/watch?v=BJY8nuYUM7M) - How to build a Youtube Search app which interacts with an API using the bloc and flutter_bloc packages, by [Reso Coder](https://resocoder.com).
- [Flutter Bloc - AUTOMATIC LOOKUP - v0.20 (and Up), Updated Tutorial](https://www.youtube.com/watch?v=_vOpPuVfmiU) - Updated Tutorial on the Flutter Bloc Package, by [Reso Coder](https://resocoder.com).
- [Dynamic Theming with flutter_bloc](https://www.youtube.com/watch?v=YYbhkg-W8Mg) - Tutorial on how to use the flutter_bloc package to implement dynamic theming, by [Reso Coder](https://resocoder.com).
- [Persist Bloc State in Flutter](https://www.youtube.com/watch?v=vSOpZd_FFEY) - Tutorial on how to use the hydrated_bloc package to automatically persist app state, by [Reso Coder](https://resocoder.com).
- [State Management Foundation](https://www.youtube.com/watch?v=S2KmxzgsTwk&t=731s) - Introduction to state management using the flutter_bloc package, by [Techie Blossom](https://techieblossom.com).
- [Flutter Football Player Search](https://www.youtube.com/watch?v=S2KmxzgsTwk) - How to build a Football Player Search app which interacts with an API using the bloc and flutter_bloc packages, by [Techie Blossom](https://techieblossom.com).
- [Learning the Flutter Bloc Package](https://www.youtube.com/watch?v=eAiCPl3yk9A&t=1s) - Learning the flutter_bloc package live, by [Robert Brunhage](https://www.youtube.com/channel/UCSLIg5O0JiYO1i2nD4RclaQ)
- [Bloc Test Tutorial](https://www.youtube.com/watch?v=S6jFBiiP0Mc) - Tutorial on how to unit test blocs using the bloc_test package, by [Reso Coder](https://resocoder.com).
- [Bloc - from Zero to Hero](https://www.youtube.com/playlist?list=PLptHs0ZDJKt_T-oNj_6Q98v-tBnVf-S_o) - Playlist which includes everything needed to get started with bloc, by [Flutterly](https://www.youtube.com/channel/UC5PYcSe3to4mtm3SPCUmjvw).
- [Bloc (Full Course, 11+ Hours) - Flutter State Management Course](https://youtu.be/Mn254cnduOY) - 11+ hour video tutorial on Bloc and Flutter Bloc. In this video you will learn how to create fully fledged production-ready apps with Bloc and Firebase as your backend, by [Vandad Nahavandipoor](https://www.youtube.com/channel/UC8NpGP0AOQ0kX9ZRcohiPeQ).

### Written Resources

- [DevonFw Flutter Guide](https://github.com/devonfw-forge/devonfw4flutter) - A guide on building structured & scalable applications with Flutter and BLoC, by [Sebastian Faust](https://github.com/Fasust)
- [Using Google´s Flutter Framework for the Development of a Large-Scale Reference Application](https://epb.bibl.th-koeln.de/frontdoor/index/index/docId/1498) - Scientific paper describing how to build [a large-scale Flutter application](https://github.com/devonfw-forge/devonfw4flutter-mts-app) with BLoC, by [Sebastian Faust](https://github.com/Fasust)

### Extensions

- [Feature Scaffolding for VSCode](https://marketplace.visualstudio.com/items?itemName=KiritchoukC.flutter-clean-architecture) - A VSCode extension inspired by [Reso Coder's](https://resocoder.com) clean architecture tutorials, which helps quickly scaffold features, by [Kiritchouk Clément](https://github.com/KiritchoukC).

## Maintainers

- [Felix Angelov](https://github.com/felangel)
","'angulardart', 'bloc', 'concurrency', 'dart', 'dart-library', 'dart-web', 'dartlang', 'flutter', 'flutter-package', 'library', 'state-management'",2018-10-07T19:32:59Z,2024-06-18T10:54:28Z,215,207,11509,178,"('felangel', 1891), ('zepfietje', 17), ('alisson-suzigan', 15), ('tenhobi', 15), ('dependabotbot', 15), ('hkuczynski', 12), ('Abhishek01039', 11), ('mzdm', 8), ('StefanSpeterDev', 8), ('orsenkucher', 7), ('rodrigobastosv', 6), ('jakecastelli', 6), ('KyleFin', 6), ('Gene-Dana', 6), ('alestiago', 5), ('duan-daniel', 5), ('David Acevedo', 5), ('ichabanivan', 5), ('jorgecoca', 5), ('DoubleTrio', 5), ('KingDarBoja', 5), ('marcossevilla', 4), ('jonathankao97', 4), ('Honza Bittner', 4), ('dawidd6', 4), ('CxDtreeg', 4), ('netantho', 4), ('liPatrick', 3), ('VictorUvarov', 3), ('mbfakourii', 3), ('MayurSMahajan', 3), ('maximveksler', 3), ('thisisyusub', 3), ('basilex', 3), ('teresawu', 2), ('ValentinVignal', 2), ('ZaarU', 2), ('chonghorizons', 2), ('juliangeissler', 2), ('lakerszhy', 2), ('lsaudon', 2), ('verbotenj', 2), ('axellebot', 2), ('RealBug', 2), ('rodydavis', 2), ('sachaarbonel', 2), ('hyj1204', 2), ('kateile', 2), ('0xflotus', 2), ('albertodev01', 2), ('warioddly', 2), ('bernaferrari', 2), ('Coaspe', 2), ('ridiculouswaffle', 2), ('fernan542', 2), ('msal4', 2), ('haoz33', 2), ('MenaSamaan', 2), ('definitelyokay', 2), ('satyam-seth', 2), ('tchafack', 2), ('GiancarloCode', 2), ('JigneshWorld', 2), ('narcodico', 1), ('tsinis', 1), ('ting-dev-coder', 1), ('tmewe', 1), ('inpactnosakae', 1), ('samueladekunle', 1), ('SaumyaBhushan', 1), ('bierbaumtim', 1), ('scarletteliza', 1), ('Fasust', 1), ('shunkakinoki', 1), ('Thesmader', 1), ('ShakyaCsun', 1), ('stsc3000', 1), ('Suhwan Cha', 1), ('gitter-badger', 1), ('bensonarafat', 1), ('Nash0x7E2', 1), ('eRuaro', 1), ('nicogenz', 1), ('nilgaar', 1), ('ninogjoni', 1), ('noahmateen', 1), ('Nomeleel', 1), ('Nuno-Gon', 1), ('omidraha', 1), ('orischwartz', 1), ('omartinma', 1), ('Pavel-Sulimau', 1), ('PhilParisot', 1), ('PlugFox', 1), ('rahulmanthena', 1), ('r030515495', 1), ('robsonsilv4', 1), ('castrors', 1), ('TobiasPalludan', 1), ('gorehamt', 1), ('hensc', 1), ('jdebecka', 1), ('kirankasa', 1), ('lsaudon', 1), ('nathanael-h', 1), ('nesquikm', 1), ('oozd', 1), ('siddhartha-star-dev', 1), ('suragch', 1), ('t1ooo', 1), ('tmaihoff', 1), ('tomassasovsky', 1), ('verno3632', 1), ('xloc', 1), ('yang-lile', 1), ('zeshuaro', 1), ('zoomkoding', 1), ('zzwx', 1), ('ReversedHourglass', 1), ('dshukertjr', 1), ('tyler-jewell', 1), ('limonkufu', 1), ('vandadnp', 1), ('victorstevan', 1), ('PROGrand', 1), ('WallasFaria', 1), ('ElasticBottle', 1), ('YJaff', 1), ('purplenoodlesoop', 1), ('ycherniavskyi', 1), ('zzzbra', 1), ('adsonpleal', 1), ('misterfourtytwo', 1), ('bharat-biradar', 1), ('cameron1024', 1), ('cloudwheels', 1), ('wjlee611', 1), ('cervonwong', 1), ('thechinkysight', 1), ('ChristianGaertner', 1), ('cmc5788', 1), ('Code-Remote', 1), ('warriorCoder', 1), ('Classy-Bear', 1), ('David Acevedo', 1), ('gallottino', 1), ('Delgan', 1), ('g0rdan', 1), ('denangelov', 1), ('dnesbala', 1), ('incendial', 1), ('elianortega', 1), ('Luckey-Elijah', 1), ('ellet0', 1), ('erickzanardo', 1), ('ueman', 1), ('0dysseas', 1), ('aadarshadhakalg', 1), ('anatter', 1), ('AhmedMozaly', 1), ('akaiser', 1), ('achamorro-dev', 1), ('aleksandr-m', 1), ('vogdb', 1), ('a14n', 1), ('aliakberaakashdh', 1), ('amoslai5128', 1), ('codesculpture', 1), ('TENX-S', 1), ('Artur Shamsutdinov', 1), ('ashishrawat2911', 1), ('ashtonthomas', 1), ('b-jan', 1), ('pr0gramista', 1), ('basselelsheikh', 1), ('bedirhanssaglam', 1), ('juanmisak', 1), ('kevmoo', 1), ('ookami-kb', 1), ('Kirpal', 1), ('kishanhitk', 1), ('LeonardoRosaa', 1), ('leventkantaroglu', 1), ('LukasMirbt', 1), ('maddyb99', 1), ('martinneff', 1), ('ResoDev', 1), ('maurodibert', 1), ('lmasikl', 1), ('m-skolnick', 1), ('chlalstjd430', 1), ('mdebbar', 1), ('mozhaiskyi', 1), ('olson-nathan', 1), ('nshoura', 1), ('erlangparasu', 1), ('Kiruel', 1), ('DigaFabian', 1), ('floan', 1), ('GZGavinZhao', 1), ('Giuspepe', 1), ('Goddchen', 1), ('henriquearthur', 1), ('hewa-jalal', 1), ('pawl0wski', 1), ('jmewes', 1), ('jamonkko', 1), ('awarecan', 1), ('jasonjackson', 1), ('jv18creator', 1), ('jetaggart', 1), ('devj3ns', 1), ('jeroen-meijer', 1), ('Johannes Klauss', 1), ('Jomik', 1)",152,146,
iamshuaidi/CS-Book,计算机类常用电子书整理，并且附带下载链接，包括Java，Python，Linux，Go，C，C++，数据结构与算法，人工智能，计算机基础，面试，设计模式，数据库，前端等书籍,"不好意思，凡是涉及到出版社的书籍，我下架了。然后我整理了大多数优质的**开源电子书**，大家如果想要，可以在我的公众号「**帅地玩编程**」回复「**开源电子书**」，帅地整理的关于 算法，计算机基础，Java，Linux 等等都优质书籍会发你。
![image-20230728184247260](https://shuaidi-picture-1257337429.cos.ap-guangzhou.myqcloud.com/img/202307281842318.png)

### 另外，一个专注于面经学习的小破站上线了

帅地弄了一个面经网站，大家可以感受一下：

![image-20230728184114271](https://shuaidi-picture-1257337429.cos.ap-guangzhou.myqcloud.com/img/202307281841349.png)

欢迎各位小伙伴来我的网站玩耍呀，地址：[https://www.iamshuaidi.com](https://www.iamshuaidi.com)

[![Page Views Count](https://badges.toozhao.com/badges/01EMGX8NNAHHYKVNQAYHSE2G3K/green.svg)](https://badges.toozhao.com/badges/01EMGX8NNAHHYKVNQAYHSE2G3K/green.svg ""Get your own page views count badge on badges.toozhao.com"")


","'algorithms', 'books', 'c', 'cs-books', 'html', 'java', 'javascript', 'linux', 'python'",2019-12-22T03:05:17Z,2023-07-28T10:46:41Z,3,1,11209,297,"('iamshuaidi', 45), ('shuaidilin', 13), ('琥珀', 3)",0,0,
Angey40/BaiduPCS-Go,百度网盘工具箱 - Go语言编写,"# BaiduPCS-Go 百度网盘工具箱 beta-v2
This project was largely inspired by [GangZhuo/BaiduPCS](https://github.com/GangZhuo/BaiduPCS)

# 特色

使用百度 BDUSS 登录百度网盘, 支持多用户, [关于 获取百度 BDUSS](https://github.com/iikira/BaiduPCS-Go/wiki/关于-获取百度-BDUSS);

网盘内列出文件和目录, **支持通配符匹配路径**, [通配符_百度百科](https://baike.baidu.com/item/通配符);

下载网盘内文件, 支持网盘内目录 (文件夹) 下载, 支持多个文件或目录下载, 支持断点续传和高并发**高速**下载;

> 下载测试:

> 服务器: 阿里云

> 下载 4G 文件, 只需 7分29秒

> ![test_4g](./assets/test/test_4g.png)

> 自己感受一下吧

# 程序 编译/交叉编译 说明
参见 [交叉编译帮助](https://github.com/iikira/BaiduPCS-Go/wiki/交叉编译帮助) 

# 程序 下载/运行 说明

Go语言程序, 可直接下载使用, [点此查看发布页面 / 下载汇总](https://github.com/iikira/BaiduPCS-Go/releases).

如果程序运行时输出乱码, 请检查下终端的编码方式是否为 `UTF-8`.

使用本程序, 强烈建议学习一些 linux 基础知识, [Linux20个常用命令](http://blog.csdn.net/xufei512/article/details/53321980).

如果未带任何参数运行程序, 程序将会进入独有的 console 模式, 可直接运行相关命令.

console 模式下, 光标所在行的前缀应为 `BaiduPCS-Go >`

程序会提供相关命令的使用说明.

## Windows

程序应在 命令提示符 (Command Prompt) 或 PowerShell 中运行.

也可直接双击程序运行, 具体使用方法请参见 [命令列表及说明](#命令列表及说明) 和 [例子](#举一些例子).

## Linux / macOS

程序应在 终端 (Terminal) 运行.

具体使用方法请参见 [命令列表及说明](#命令列表及说明) 和 [例子](#举一些例子).

## Android / iOS

安卓, 建议使用软件 [Termux](https://termux.com) 或 [NeoTerm](https://github.com/NeoTerm/NeoTerm/releases) 或 终端模拟器, 以提供终端环境.

示例: [Android 运行本 BaiduPCS-Go 程序参考示例](https://github.com/iikira/BaiduPCS-Go/wiki/Android-运行本-BaiduPCS-Go-程序参考示例), 有兴趣的可以参考一下.

苹果iOS, 需要越狱, 在 Cydia 搜索下载并安装 MobileTerminal, 以提供终端环境. MobileTerminal 功能有限, 本人建议 设备安装 openssh 后使用 ssh 控制苹果设备, sftp 传输文件.

具体使用方法请参见 [命令列表及说明](#命令列表及说明) 和 [例子](#举一些例子).

# 命令列表及说明

## 注意

命令的前缀 `BaiduPCS-Go` 为指向程序运行的全路径名 (ARGv 的第一个参数)

未带任何其他参数运行程序, 则程序进入 console 模式, 前缀为 `BaiduPCS-Go >`, 则运行以下命令时, 要把命令的前缀 `BaiduPCS-Go` 去掉!

## 使用百度 BDUSS 来登录百度帐号
```
BaiduPCS-Go login -bduss=
```
```
BaiduPCS-Go login

请输入百度BDUSS值, 回车键提交 > 
```

## 获取当前帐号, 和所有已登录的百度帐号
```
BaiduPCS-Go loglist
```

## 切换已登录的百度帐号
```
BaiduPCS-Go chuser -uid=12345678
```
```
BaiduPCS-Go chuser

请输入要切换帐号的 index 值 > 
```

## 退出已登录的百度帐号
```
BaiduPCS-Go logout -uid=12345678
```
```
BaiduPCS-Go logout

请输入要退出帐号的 index 值 > 
```

## 获取配额, 即获取网盘总空间, 和已使用空间
```
BaiduPCS-Go quota
```

## 切换工作目录
```
BaiduPCS-Go cd 
```

## 输出当前所在目录
```
BaiduPCS-Go pwd
```

## 列出当前工作目录的文件和目录或指定目录
```
BaiduPCS-Go ls
```
```
BaiduPCS-Go ls 
```

## 获取单个文件/目录的元信息 (详细信息)
```
BaiduPCS-Go meta 
```
```
# 默认获取根目录元信息
BaiduPCS-Go meta
```

## 下载文件, 网盘文件或目录的绝对路径或相对路径
```
BaiduPCS-Go download    ...
BaiduPCS-Go d    ...
```

已支持多个文件或目录的下载.

下载的文件将会保存到, **程序所在目录**的 download/ 目录 (文件夹), 暂不支持指定目录, 重名的文件会自动跳过!

## 创建目录
```
BaiduPCS-Go mkdir 
```

## 删除 单个/多个 文件/目录
```
BaiduPCS-Go rm    ...
```

注意: 删除多个文件和目录时, 请确保每一个文件和目录都存在, 否则删除操作会失败.

# 举一些例子 

新手建议: **双击运行程序**, 进入 console 模式;

console 模式下, 光标所在行的前缀应为 `BaiduPCS-Go >`

以下例子的命令, 均为 console 模式下的命令

运行命令的正确操作: **输入命令, 按一下回车键 (键盘上的 Enter 键)**, 程序会接收到命令并输出结果

## 1. 查看程序使用说明

console 模式下, 运行命令 `help`

## 2. 使用百度 BDUSS 来登录百度帐号 (必做)

[关于 获取百度 BDUSS](https://github.com/iikira/BaiduPCS-Go/wiki/关于-获取百度-BDUSS)

console 模式下, 运行命令 `login -h` (注意空格) 查看帮助

console 模式下, 运行命令 `login` 程序将会提示你输入 百度BDUSS 值

console 模式下, 运行命令 `login -bduss=` 来设置 百度BDUSS 值, 设置时请替换掉 ``

## 3. 切换网盘工作目录

console 模式下, 运行命令 `cd /我的资源` 将工作目录切换为 `/我的资源` (前提: 该目录存在于网盘)

目录支持通配符匹配, 所以你也可以这样: 运行命令 `cd /我的*` 或 `cd /我的??` 将工作目录切换为 `/我的资源`, 简化输入.

将工作目录切换为 `/我的资源` 成功后, 运行命令 `cd ..` 切换上级目录, 即将工作目录切换为 `/`

为什么要这样设计呢, 举个例子, 

假设 你要下载 `/我的资源` 内名为 `1.mp4` 和 `2.mp4` 两个文件, 而未切换工作目录, 你需要依次运行以下命令: 

```
d /我的资源/1.mp4
d /我的资源/2.mp4
```

而切换网盘工作目录之后, 依次运行以下命令: 

```
cd /我的资源
d 1.mp4
d 2.mp4
```

这样就达到了简化输入的目的

## 4. 网盘内列出文件和目录

console 模式下, 运行命令 `ls -h` (注意空格) 查看帮助

console 模式下, 运行命令 `ls` 来列出当前所在目录的文件和目录

console 模式下, 运行命令 `ls /我的资源` 来列出 `/我的资源` 内的文件和目录

console 模式下, 运行命令 `ls ..` 来列出当前所在目录的上级目录的文件和目录

## 5. 下载文件

说明: 下载的文件将会保存到 download/ 目录 (文件夹)

console 模式下, 运行命令 `d -h` (注意空格) 查看帮助

console 模式下, 运行命令 `d /我的资源/1.mp4` 来下载位于 `/我的资源/1.mp4` 的文件 `1.mp4` , 该操作等效于运行以下命令: 

```
cd /我的资源
d 1.mp4
```

现在已经支持目录 (文件夹) 下载, 所以, 运行以下命令, 会下载 `/我的资源` 内的所有文件 (违规文件除外): 

```
d /我的资源
```

参见 例6 设置下载最大并发数

## 6. 设置下载最大并发数

console 模式下, 运行命令 `set -h` (注意空格) 查看设置帮助以及可供设置的值

console 模式下, 运行命令 `set max_parallel 250` 将下载最大并发数设置为 250

下载最大并发数建议值: 50~500, 太低下载速度提升不明显甚至速度会变为0, 太高可能会导致程序和系统超负荷

## 7. 退出程序

运行命令 `quit` 或 `exit` 或 组合键 `Ctrl+C` 或 组合键 `Ctrl+D`

# 已知问题
下载进度到最后的时候, 下载速度会大幅降低.

# TODO

1. 网盘内文件或目录的复制, 移动, 删除等操作
2. 上传文件",,2017-12-13T06:52:56Z,2022-12-18T02:54:42Z,1,1,362,12,"('iikira', 51)",0,0,
avalanche123/AvalancheImagineBundle,Image manipulation using Imagine and Twig Filters,"Deprecated
==========

This project is no longer actively maintained, please find one of the populate forks. Thanks!

AvalancheImagineBundle
======================

This bundle provides easy image manipulation support for Symfony2. For example,
with this bundle, the following is possible:

``` jinja

````

This will perform the transformation called `thumbnail`, which you can define
to do a number of different things, such as resizing, cropping, drawing,
masking, etc.

This bundle integrates the standalone PHP ""[Imagine library](https://github.com/avalanche123/Imagine)"".

## Installation

Installation is a quick 3 step process:

1. Download AvalancheImagineBundle using composer
2. Enable the Bundle
3. Configure your application's config.yml

### Step 1: Download AvalancheImagineBundle using composer

Add AvalancheImagineBundle in your composer.json:

```sh
composer require avalanche123/imagine-bundle
```

Composer will install the bundle to your project's `vendor/avalanche123/imagine-bundle` directory.

### Step 2: Enable the bundle

Enable the bundle in the kernel:

``` php
<?php
// app/AppKernel.php

public function registerBundles()
{
    $bundles = array(
        // ...
        new Avalanche\Bundle\ImagineBundle\AvalancheImagineBundle(),
    );
}
```
### Step3: Register the bundle's routes

Finally, add the following to your routing file:

``` yaml
# app/config/routing.yml

_imagine:
    resource: .
    type:     imagine
```

Congratulations! You're ready to rock your images!

## Basic Usage

This bundle works by configuring a set of filters and then applying those
filters to images inside a template. So, start by creating some sort of filter
that you need to apply somewhere in your application. For example, suppose
you want to thumbnail an image to a size of 120x90 pixels:

``` yaml
# app/config/config.yml

avalanche_imagine:
    filters:
        my_thumb:
            type:    thumbnail
            options: { size: [120, 90], mode: outbound }
```

You can also change the quality and the format you want to use to save our image : 


``` yaml
# app/config/config.yml

avalanche_imagine:
    filters:
        my_thumb:
            type:    thumbnail
            options: { size: [120, 90], mode: outbound, quality: 100, format: png }
```

You've now defined a filter called `my_thumb` that performs a thumbnail transformation.
We'll learn more about available transformations later, but for now, this
new filter can be used immediately in a template:

``` jinja

```

Or if you're using PHP templates:

``` php
filter('/relative/path/to/image.jpg', 'my_thumb') ?>"" />
```


Behind the scenes, the bundle applies the filter(s) to the image on the first
request and then caches the image to a similar path. On the next request,
the cached image would be served directly from the file system.

In this example, the final rendered path would be something like
`/media/cache/my_thumb/relative/path/to/image.jpg`. This is where Imagine
would save the filtered image file.

## HTTP Cache Headers

 - `cache_type` - one of the three values: `false`, `public` or `private`.
    Setting `false` disables caching i.e. sets `Cache-Control: no-cache`.

    default: `false`

 - `cache_expires` - Sets time when cache expires. Uses format that the `DateTime`
    parser understands. Expression will be prefixed with `+` so expression
    should be like `2 weeks`. Used only when `cache_type` equal `public` or `private`.

    default: `1 day`

Configuration example:

``` yaml
# app/config/config.yml

avalanche_imagine:
    filters:
        my_thumb:
            type:    thumbnail
            options: { size: [120, 90], mode: outbound, cache_type: public, cache_expires: 2 weeks }
```

Cache headers are set only for first request when image is generated.
To solve this issue you should add additional configuration for your web server.
Example for apache web server:
```apache

    
        ExpiresActive On
        ExpiresDefault ""access plus 2 weeks""
    

```

## Configuration

The default configuration for the bundle looks like this:

``` yaml
avalanche_imagine:
    source_root:  %kernel.root_dir%/../web
    web_root:     %kernel.root_dir%/../web
    cache_prefix: media/cache
    driver:       gd
    filters:      []
```

There are several configuration options available:

 - `source_root` - can be set to the absolute path to your original image's
    directory. This option allows you to store the original image in a 
    different location from the web root. Under this root the images will 
    be looked for in the same relative path specified in the apply_filter
    template filter.

    default: `%kernel.root_dir%/../web`

 - `web_root` - must be the absolute path to you application's web root. This
    is used to determine where to put generated image files, so that apache
    will pick them up before handing the request to Symfony2 next time they
    are requested.

    default: `%kernel.root_dir%/../web`

 - `cache_prefix` - this is also used in the path for image generation, so
    as to not clutter your web root with cached images. For example by default,
    the images would be written to the `web/media/cache/` directory.

    default: `media/cache`

 - `driver` - one of the three drivers: `gd`, `imagick`, `gmagick`

    default: `gd`

 - `filters` - specify the filters that you want to define and use

Each filter that you specify have the following options:

 - `type` - determine the type of filter to be used, refer to *Filters* section for more information
 - `options` - options that should be passed to the specific filter type
 - `path` - override the global `cache_prefix` and replace it with this path
 - `source_root` - override the global `source_root` and replace it with this path

## Built-in Filters

Currently, this bundles comes with just one built-in filter: `thumbnail`.

### Thumbnail

The `thumbnail` filter, as the name implies, performs a thumbnail transformation
on your image. The configuration looks like this:

``` yaml
filters:
    my_thumb:
        type:    thumbnail
        options: { size: [120, 90], mode: outbound }
```

The `mode` can be either `outbound` or `inset`.

### Resize

The `resize` filter may be used to simply change the width and height of an
image irrespective of its proportions.

Consider the following configuration example, which defines two filters to alter
an image to an exact screen resolution:

``` yaml
avalanche_imagine:
    filters:
        cga:
            type:    resize
            options: { size: [320, 200] }
        wuxga:
            type:    resize
            options: { size: [1920, 1200] }
```

### RelativeResize

The `relative_resize` filter may be used to `heighten`, `widen`, `increase` or
`scale` an image with respect to its existing dimensions. These options directly
correspond to methods on Imagine's `BoxInterface`.

Given an input image sized 50x40 (width, height), consider the following
annotated configuration examples:

``` yaml
avalanche_imagine:
    filters:
        heighten:
            type:    relative_resize
            options: { heighten: 60 } # Transforms 50x40 to 75x60
        widen:
            type:    relative_resize
            options: { widen: 32 }    # Transforms 50x40 to 40x32
        increase:
            type:    relative_resize
            options: { increase: 10 } # Transforms 50x40 to 60x50
        scale:
            type:    relative_resize
            options: { scale: 2.5 }   # Transforms 50x40 to 125x100
```

If you prefer using Imagine without a filter configuration, the `RelativeResize`
class may be used directly.

### Paste

The `paste` filter pastes an image into your image.

``` yaml
avalanche_imagine:
    filters:
        paste:
            type:        paste
            options:
                image:   %kernel.root_dir%/Resources/image.png  # path to image
                x:       right                                  # [left|right|center] or integer
                y:       bottom                                 # [top|bottom|middle] or integer
```

### Chain

With `chain` filter you can apply some filters on your image.
You can quite simply create a `watermark` filter:

``` yaml
avalanche_imagine:
    filters:
        watermark:
            type:                chain
            options:
                filters:
                    thumbnail:                                          # filter type
                        size:    [100, 100]                             # filter options
                        mode:    outbound
                    paste:
                        image:   %kernel.root_dir%/Resources/image.png
                        x:       right
                        y:       bottom

```

### Crop

The `crop` filter crop an image with start coordinate, and size dimension.

``` yaml
avalanche_imagine:
    filters:
        crop:
            type   : crop
            options: { start: [0, 0], size: [100, 100] } #crop image with 100x100 square box
```

## Load your Custom Filters

The ImagineBundle allows you to load your own custom filter classes. The only
requirement is that each filter loader implement the following interface:

    Avalanche\Bundle\ImagineBundle\Imagine\Filter\Loader\LoaderInterface

To tell the bundle about your new filter loader, register it in the service
container and apply the following tag to it (example here in XML):

``` xml

```

For more information on the service container, see the Symfony2
[Service Container](http://symfony.com/doc/current/book/service_container.html) documentation.

You can now reference and use your custom filter when defining filters you'd
like to apply in your configuration:

``` yaml
filters:
    my_special_filter:
        type:    my_custom_filter
        options: { }
```

For an example of a filter loader implementation, refer to
`Avalanche\Bundle\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader`.

## Caveats

If you are generating your image names from multiple parts in a Twig template,
please be aware that Twig applies filters __before__ concatenation, so

``` jinja

```

will apply your filter to '.jpg', and then concatenate the result to
`'/relative/path/to/'` and `some_variable`. So the correct invocation would be

``` jinja

```

## Using as a service

You can use ImagineBundle as a service and resolve the cached image path.
```php
$avalancheService = $this->get('imagine.cache.path.resolver');
```

Then, call the getBrowserPath and pass the original image webpath and the filter you want to use
```php
$cachedImage = $avalancheService->getBrowserPath($object->getWebPath(), 'my_thumb');
```

And also use ImagineBundle as a service and create the cache image from controller.
```php
$cacheManager = $this->get('imagine.cache.manager');
$cachedPath = $cacheManager->cacheImage($this->getRequest()->getBaseUrl(), '/images/picture1.jpg', 'my_filter');
```

",,2011-02-07T16:19:45Z,2022-10-10T10:41:56Z,46,39,319,18,"('avalanche123', 65), ('jmikola', 8), ('Bulat Shakirzyanov', 6), ('ASKozienko', 5), ('mbontemps', 5), ('ardianys', 3), ('kriswallsmith', 3), ('butt', 3), ('athlan', 3), ('Bup3', 2), ('stof', 2), ('dave08', 2), ('FlashBlack', 2), ('ftassi', 2), ('Gustavo Straube', 2), ('joanteixi', 2), ('kcivey', 2), ('kbond', 2), ('weaverryan', 2), ('Ziumin', 2), ('daFish', 2), ('xavren', 2), ('AlbanSeurat', 1), ('benjamindulau', 1), ('BenoitLeveque', 1), ('ChMat', 1), ('EmmanuelVella', 1), ('EricGrivilers', 1), ('Gergely POLONKAI', 1), ('gimler', 1), ('JavierJimenez', 1), ('Krzysiek Łabuś', 1), ('petrjaros', 1), ('rdohms', 1), ('ruudk', 1), ('Sewdn', 1), ('tarjei', 1), ('Tarjei Huse', 1), ('skeud', 1), ('armetiz', 1), ('yanickouellet', 1), ('totaltrash', 1), ('ejsidisi', 1), ('josaliba', 1), ('ramol', 1), ('umpirsky', 1)",24,19,
vesln/b,Benchmarks for Node.js,"[![Build Status](https://secure.travis-ci.org/vesln/b.png)](http://travis-ci.org/vesln/b)

# Important Notice

I'm no longer actively maintaining this project. If you are interested supporting it - [ping me on twitter](https://twitter.com/vesln).
The only thing that I will ask you is to not change the API drastically. If you are planning on doing that - better start a brand new project.

If you want me to transfer you only the name on npm, I'd be happy to only if the project **does not have any downloads on npm lately**. In case it's being
downloaded, there are people that depend on it and might step up and start maintaining, so I will not transfer it to you, regardless if you want to release
a new major version etc.

If you have any other questions, let me know.

Thanks!

Veselin

# B - Benchmarks for Node.js

## Description

B is small and elegant module for Node.js that makes benchmarking fun.

## Features

- Async, sync & parrallel benchmarks
- Streams
- Reporters

## Synopsis

### Synchronous

```js
var b = require('b');

b('Synchronous benchmark').run(100, function(i) {
  // do stuff
});
```

### Asynchronous

```js
var b = require('b');

b('Asynchronous benchmark').run(10, function(i, done) {
  // do stuff
  done();
});
```

### Select a reporter

```js
b('make pretty and print to console').reporter('cli')
b('output json data').reporter('json')
```

### Build your reporter

```js
function Reporter() {};

Reporter.prototype.report = function(name, result, iterations) {
  // report it
};

b('Custom reporter')
  .reporter(new Reporter)
  .run(10, function() {
    // benchmark stuff
  });
```

## Events

- start
- stop
- done

## Requirements

- NPM (http://npmjs.org/)
- Node.js 0.8 (http://nodejs.org/)

## Install

```
$ npm install b
```

## Tests

```
$ npm install
$ make test
```

## Contributors

```
 project  : b
 repo age : 11 months ago
 active   : 5 days
 commits  : 46
 files    : 16
 authors  :
    29	Veselin Todorov         63.0%
    16	jkroso                  34.8%
     1	Jakeb                   2.2%
```

## License

MIT License

Copyright (C) 2012 Veselin Todorov

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the ""Software""), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
",,2012-01-27T17:59:21Z,2016-06-11T10:12:09Z,3,3,26,3,"('jkroso', 66), ('vesln', 32), ('davedoesdev', 4)",0,0,
exercism/website-copy,A repository for exercism's website's copy,"# Readme

# Copy for the Exercism website

A repository for the copy used on [Exercism's website](https://exercism.io). This repository is directly read into the site at periodic intervals.

## Contributing

Good copy and documentation is just as important as good code so we are massively grateful for contributions to this repository.

- If you find mistakes or missing information on any pages, please submit a Pull Request. You can easily do this by editing the file directly on GitHub and then following the user-interface prompts.
- If you think a new page should be added to the website, please open an Issue so that we can discuss it.

Thank you! :blue_heart:

## Mentor notes

The structure within the repository is: `/tracks/$track_id/exercises/$exercise_slug/mentoring.md`.

- You can easily edit the files within GitHub to create Pull Requests for changes.
- We'll be offering some mentors write permissions to the repo so that they can merge PRs without waiting for us to check everything.
- You'll find a button to display the Mentor Notes when you start mentoring a submission, if notes are available for that exercise.  

Please use `###` for headings and try to keep to a structure of:

- **Reasonable solutions:** 1+ solutions that solve this problem well.
- **Common suggestions:** Good suggestions specific to this exercise. Good lessons that emerge from it.
- **Talking points:** Questions to challenge more advance learners with.

Here's an example for [Ruby's Isogram](https://github.com/exercism/website-copy/blob/main/tracks/ruby/exercises/isogram/mentoring.md).


This is how you create a new file:

![Create a new file](http://g.recordit.co/96zCDgEkfG.gif)


",'community-contributions-accepted',2017-08-08T13:34:19Z,2024-06-17T14:59:03Z,1125,435,202,27,"('rpottsoh', 273), ('iHiD', 251), ('amaliacardenas', 244), ('loriking', 228), ('Katrina Owen', 144), ('SleeplessByte', 104), ('kotp', 87), ('ErikSchierboom', 67), ('kntsoriano', 64), ('emcoding', 63), ('angelikatyborska', 49), ('jiegillet', 49), ('tehsphinx', 34), ('cmcaine', 34), ('IsaacG', 32), ('jeffdparker', 28), ('MichaelDimmitt', 17), ('jmrunkle', 16), ('ricemery', 13), ('sshine', 13), ('canhascodez', 12), ('michael-berger-FR', 12), ('joshgoebel', 11), ('gustavosobral', 11), ('nicolechalmers', 11), ('Br1ght0ne', 11), ('exercism-bot', 11), ('pgaspar', 10), ('SaschaMann', 10), ('NobbZ', 10), ('mikegehard', 9), ('yaahc', 9), ('ccare', 9), ('bobahop', 8), ('ExpHP', 8), ('Ryan Boris', 8), ('abinoam', 8), ('ceddlyburge', 7), ('manumafe98', 7), ('sanderploegsma', 7), ('BethanyG', 7), ('ZapAnton', 7), ('chriseyre2000', 7), ('glennj', 6), ('nathanchere', 6), ('jonmcalder', 6), ('Isaac Good', 6), ('cmccandless', 6), ('bwbeach', 6), ('smanookian', 5), ('ChrisPritchard', 5), ('meatball133', 5), ('amoradell', 5), ('neenjaw', 5), ('sfairchild', 5), ('iesoftwaredeveloper', 5), ('Petru Faurescu', 5), ('yawpitch', 5), ('Meade Kincke', 5), ('Meade', 5), ('katrinleinweber', 5), ('hiimbex', 5), ('jamesgeorge007', 5), ('TsebMagi', 5), ('Grant Winney', 5), ('TheLostLambda', 4), ('0thomas', 4), ('nywilken', 4), ('sebito91', 4), ('rpalo', 4), ('pertrai1', 4), ('Rahmeen14', 4), ('ptillemans', 4), ('mccr', 4), ('maiku1008', 4), ('bergjohan', 4), ('outkaj', 4), ('conradbeach', 4), ('Sessa93', 4), ('hayashi-ay', 4), ('Cameron MacDonald', 4), ('Yauheni Tsiarokhin', 3), ('WeeDom', 3), ('uzilan', 3), ('antoniosaric', 3), ('alexocode', 3), ('safwansamsudeen', 3), ('rahulkeerthi', 3), ('kephas', 3), ('usufruct', 3), ('kellsaro', 3), ('numrut', 3), ('Yusuf Turhan Papurcu', 3), ('zuzia-kru', 3), ('archanid', 3), ('elyashiv', 3), ('yilkalargaw', 3), ('lmarcell', 3), ('vidhisshah', 3), ('wh0th3h3llam1', 3), ('AbhilashJN', 3), ('DagmarTimmreck', 3), ('eparovyshnaya', 3), ('strickinato', 3), ('DjaouadNM', 3), ('aspanu', 3), ('kzap', 3), ('stoehraj', 3), ('arnoFleming', 3), ('b-mehta', 3), ('cdpaiva', 3), ('chivalry', 3), ('zeckdude', 3), ('ser1us', 3), ('verdammelt', 3), ('Aloso', 3), ('leobenkel', 3), ('workingjubilee', 3), ('dysolution', 3), ('jgilray', 3), ('eeppuJ', 3), ('dpolivaev', 3), ('donut', 3), ('jgomo3', 3), ('efx', 3), ('gabeguz', 3), ('Bert-Proesmans', 2), ('ProgrammAbel', 2), ('rafaelgaldencio', 2), ('SomeKittens', 2), ('ricpelo', 2), ('RomaLetodiani', 2), ('roxgib', 2), ('smiller171', 2), ('seanchen1991', 2), ('flyinggrizzly', 2), ('seenivasanseeni', 2), ('SerzN1', 2), ('sbromberger', 2), ('shanedrabing', 2), ('pyropy', 2), ('Stef Gijsberts', 2), ('teto1992', 2), ('artfuldev', 2), ('sup95', 2), ('maurelio1234', 2), ('kunicmarko20', 2), ('ystromm', 2), ('fmmatheus', 2), ('mawis', 2), ('michalporeba', 2), ('Mike Cifelli', 2), ('mikedamay', 2), ('kiyanwang', 2), ('nasyxx', 2), ('nathanbwright', 2), ('nathanielknight', 2), ('nickllerandi', 2), ('Nick Bell', 2), ('weilandia', 2), ('nitishch', 2), ('naltun', 2), ('ows-ali', 2), ('Haniyya', 2), ('pdmoore', 2), ('pdgonzalez872', 2), ('tejasbubane', 2), ('craneyuan', 2), ('feature-engineer', 2), ('ghost', 2), ('habere-et-dispertire', 2), ('ivfranco', 2), ('jamessouth', 2), ('jaytea', 2), ('lloyddewit', 2), ('LucaPaterlini', 2), ('luyiranl2010', 2), ('mairandomness', 2), ('trustieee', 2), ('rajeshkumargp', 2), ('stevejb71', 2), ('therynamo', 2), ('tomerarnon', 2), ('aldraco', 2), ('ankerpeet', 2), ('Cohen-Carlisle', 2), ('dipto0321', 2), ('tmccombs', 2), ('macta', 2), ('Timo4B', 2), ('gambtho', 2), ('Tohnmeister', 2), ('tvirolai', 2), ('tushartyagi', 2), ('Inkdpixels', 2), ('contactvaibhavi', 2), ('Van Eyck Jo', 2), ('pacmancoder', 2), ('vladimino', 2), ('weihanglo', 2), ('zoidyzoidzoid', 2), ('zentetsukenz', 2), ('dsdshcym', 2), ('Zanerast', 2), ('aammff', 2), ('alexZielonko', 2), ('zq-chen', 2), ('indiebrain', 2), ('BrandonArmand', 2), ('bwestover', 2), ('BrianDouglasIE', 2), ('chayandatta', 2), ('squidboylan', 2), ('cmondorf', 2), ('crousselle', 2), ('codygman', 2), ('dabaer', 2), ('DanCouper', 2), ('dheater', 2), ('m-dango', 2), ('friedbrice', 2), ('insideoutclub', 2), ('davidwessman', 2), ('devillecodes', 2), ('debck', 2), ('dennis-hammerschmidt', 2), ('DennisHartrampf', 2), ('Erik Schierboom', 2), ('arwahab', 2), ('armilam', 2), ('ailyntang', 2), ('Alessandro Baffa', 2), ('gomesalexandre', 2), ('jocelo', 2), ('andrew-prior', 2), ('André König', 2), ('nicuveo', 2), ('arishuynhvan', 2), ('AronNaylor', 2), ('Avraham Kaminetzky', 2), ('McZenith', 2), ('lhoBas', 2), ('blemale', 2), ('biancapower', 2), ('bkhl', 2), ('sendtobo', 2), ('sesamemucho', 2), ('bobrundle', 2), ('jpreese', 2), ('jonhoo', 2), ('hoenie-ams', 2), ('theevangelista', 2), ('ryoia', 2), ('junedev', 2), ('karbfg10k', 2), ('KarthikNayak', 2), ('kmjones77', 2), ('LarsEckart', 2), ('leojpod', 2), ('Leocardoso94', 2), ('lewisclement', 2), ('LiamGoodacre', 2), ('logankilpatrick', 2), ('Smarticles101', 2), ('Llcoolsouder', 2), ('Manuri', 2), ('Average-user', 2), ('loradd', 2), ('enamcse', 2), ('colombod', 2), ('corroded', 2), ('sawmurai', 2), ('sohjiro', 2), ('skade', 2), ('fed135', 2), ('lastgabs', 2), ('mrtank', 2), ('gs0510', 2), ('gstro', 2), ('guygastineau', 2), ('hugueschabot', 2), ('j2jensen', 2), ('Jan Uhlig', 2), ('Jarak-Jakar', 2), ('axelson', 2), ('JesseSingleton', 2), ('JohnCrickett', 2), ('bitfield', 2), ('Rishikanth Chandrasekaran', 1), ('Rishi Pithadiya', 1), ('Rishi Kothari', 1), ('Rin Raeuber', 1), ('Richard Wild', 1), ('Richard Leurs', 1), ('Richard Adams', 1), ('Ricardo Cardenes', 1), ('Ricardo Ambrogi', 1), ('Rhys Johns', 1), ('Philip Matunda', 1), ('Rob Kendal', 1), ('Robb Shecter', 1), ('Robert Curtin', 1), ('Robin', 1), ('Rodrigo C. Moraes', 1), ('Rodrigo Nonose', 1), ('Roman Chvanikov', 1), ('Roman Glushko', 1), ('Ron Au', 1), ('Ronie Uliana', 1), ('Ross Baquir', 1), ('Roël Gonzalez', 1), ('Ruben Romero Montes', 1), ('Rutger Claes', 1), ('Philipp Schweizer', 1), ('Pi Delport', 1), ('Pietro Verdile', 1), ('Piotr Szotkowski', 1), ('Pongpanot Chuaysakun', 1), ('Pragya Mohan', 1), ('Pranas Ziaukas', 1), ('Prateek Kumar', 1), ('QLaille', 1), ('Quan Nguyen', 1), ('Quincy Bowers', 1), ('RRainbow', 1), ('Rafael da Silva Ferreira', 1), ('Rajesh Khadka', 1), ('Rajesh Pitty', 1), ('Ramit Mittal', 1), ('Raoul R. Wadhwa', 1), ('Raphael Bobillot', 1), ('Raphael Costa', 1), ('Raunak Ramakrishnan', 1), ('Ravishankar Sivasubramaniam', 1), ('Raymond Price', 1), ('Renan Lopes', 1), ('Renão', 1), ('Reza Daneshvar', 1), ('Rhys', 1), ('Ryan Boldi', 1), ('Sergey Kovalev', 1), ('Seth Chapman', 1), ('Severin Rudie', 1), ('Seyed Mojtaba Hosseini Zeidabadi', 1), ('Shahryar Saljoughi', 1), ('Shane Farmer', 1), ('Shane Laymance', 1), ('Shannon Tjoa', 1), ('Shanti Chellaram', 1), ('Shawn Hartsell', 1), ('Shawn Isenhart', 1), ('Sherab Giovannini', 1), ('Sherwood', 1), ('Shivam Gohel', 1), ('Shreyansh Pandey', 1), ('Siarhei Kavaliou', 1), ('Sier Violencia', 1), ('SimaSk', 1), ('Simon Bukin', 1), ('Simon Hafner', 1), ('Sirapop Chaimanasuksri', 1), ('SiriusStarr', 1), ('Sophie Doiron', 1), ('Sourabh Cheedella', 1), ('Souvik Mondal', 1), ('andres-zartab', 1), ('Ryan Hartlage', 1), ('Ryan Zidago', 1), ('Sabrina', 1), ('Saeed Badran', 1), ('Saksham', 1), ('Salomé Lahmar', 1), ('Sam Minns', 1), ('Sam Scott', 1), ('Sam Warner', 1), ('Samuel Braun', 1), ('Samuel Teixeira', 1), ('Samuel Walladge', 1), ('Sandor Dargo', 1), ('Sarah Knight', 1), ('Sarthak Khillon', 1), ('Sascha Mann', 1), ('Sayantan Sarkar', 1), ('Scott Hutchinson', 1), ('Scott P. Jones', 1), ('Sean Allred', 1), ('Sean Handley', 1), ('Sebastián Magrí', 1), ('Semsudin Sefic', 1), ('Semsudin Sefic', 1), ('Semyon Pisarev', 1), ('Senthil Kumaran', 1), ('elbrujohalcon', 1), ('Mike Murray', 1), ('Mike Samuel', 1), ('Mikhail Navrotskiy', 1), ('Miroslav Gatsanoga', 1), ('MiyamotoAkira', 1), ('Mohamedali10', 1), ('Mohnish G J', 1), ('Monohedrion', 1), ('Monsenhor', 1), ('Monte Hayward', 1), ('Muhammad Arslan', 1), ('Mykola Bespaliuk', 1), ('Mykola Shumyn', 1), ('Nada Ghanem', 1), ('Nahua', 1), ('Nahuel', 1), ('Naresh Thakur', 1), ('Naris', 1), ('Nashir Janmohamed', 1), ('Natanael Sirqueira', 1), ('Nate Avers', 1), ('Nate Clark', 1), ('Nate Mallison', 1), ('Nathan Burgess', 1), ('Nathan Henrie', 1), ('Nathan West', 1), ('Matthew Bender', 1), ('Matthew J. Clemente', 1), ('Mattsi', 1), ('Mattsi-Jansky', 1), ('Mavelous', 1), ('Max Leuthäuser', 1), ('Max Weber', 1), ('Mayur Wadhwani', 1), ('Mechim Cook', 1), ('MeerKatDev', 1), ('Metallifax', 1), ('Micah', 1), ('Michael', 1), ('Michael Aydinbas', 1), ('Michael Cain', 1), ('Michael Gee', 1), ('Michael Glass', 1), ('Michael Plotke', 1), ('Michael Priestman', 1), ('Michael Sage', 1), ('Michael Stephens', 1), ('Michal Bryxí', 1), ('Miguel Bernard', 1), ('Miguel Raz Guzmán Macedo', 1), ('Mikael Fangel', 1), ('Mike Bowman', 1), ('Nathaniel Woodthorpe', 1), ('Pano Papadatos', 1), ('Paolo Simone', 1), ('Parmeshwar Patidar', 1), ('Pascal', 1), ('Patrick Davey', 1), ('Patrick Trottier', 1), ('Paul', 1), ('Paul Aly', 1), ('Paul Elliott', 1), ('Paul Mabileau', 1), ('Paul Nemec', 1), ('Paul Otto', 1), ('Paulius Šukys', 1), ('Paulo Rosa', 1), ('PavanRaga', 1), ('Pavel Karateev', 1), ('Percy Grunwald', 1), ('Periklis Gkolias', 1), ('Peter Banjo', 1), ('Peter Goodspeed-Niklaus', 1), ('Peter Lamby', 1), ('Peter Nikodem', 1), ('Peter Perhac', 1), ('Peter Schussheim', 1), ('Peter Turner', 1), ('Phil Salant', 1), ('Neven Villani', 1), (""Ng'ethe Maina"", 1), ('Nick Bullock', 1), ('Nick Park', 1), ('Nicolas Tarzia', 1), ('Nicolas Zilli', 1), ('Nicole A Montano', 1), ('Nikola Lukić', 1), ('Nils', 1), ('Ning Ke', 1), ('Nirupam Sharma', 1), ('Noam Ben Shabat', 1), ('Nuno Ferreira', 1), ('Odin', 1), ('Odis Harkins', 1), ('Olaoluwa Oluro', 1), ('Ole Kröger', 1), ('Oleksandr Halushko', 1), ('Olia Kremmyda', 1), ('Oren Kanner', 1), ('OscarDOM', 1), ('Otegami', 1), ('Ozan Müyesseroğlu', 1), ('P G Nithin Reddy', 1), ('PTrottier', 1), ('Pablo Vicente', 1), ('ibrahim', 1), ('janczer', 1), ('jarredlhumphrey', 1), ('jean-francois labbe', 1), ('jeffreybian', 1), ('juhlig', 1), ('junedev', 1), ('jvmachadorj', 1), ('kaiomagalhaes', 1), ('khoivan88', 1), ('klaus78', 1), ('krhubert', 1), ('krunal-ctrl', 1), ('lcalhau', 1), ('lethal bacon', 1), ('liquidtheory', 1), ('loweaver', 1), ('lucassouto', 1), ('m4ver1k', 1), ('matthelliwell2', 1), ('mbergenlid', 1), ('mendellev', 1), ('mhedgpeth', 1), ('michaelkunc', 1), ('mikedamay', 1), ('mmbeyrem', 1), ('andrew', 1), ('andrewcrlucas', 1), ('andyan', 1), ('apellet', 1), ('astoehr', 1), ('axesilo', 1), ('blj', 1), ('budmc29', 1), ('buttfedora', 1), ('cartoloupe', 1), ('chellbell', 1), ('chess4ever', 1), ('craneyuan', 1), ('csharp-today', 1), ('david.jones', 1), ('dmaestro', 1), ('freddie1221', 1), ('gabriele.lana', 1), ('galambi', 1), ('ghjk-code', 1), ('gkim795', 1), ('goalaleo', 1), ('henri_crouzet', 1), ('homersimpsons', 1), ('hutcho66', 1), ('iampeterbanjo', 1), ('sebabarre', 1), ('shankarshastri', 1), ('shaynuhcon', 1), ('speedsx', 1), ('squeakyboots', 1), ('sswingle', 1), ('sushovankarmakar', 1), ('timothybarraclough', 1), ('tk', 1), ('tradfursten', 1), ('tylerferraro', 1), ('umaranis', 1), ('valrus', 1), ('vedantshetty', 1), ('vlmutolo', 1), ('vnermolaev', 1), ('volcain-io', 1), ('wneumann', 1), ('wonhyeongseo', 1), ('wuworkshop', 1), ('xinri', 1), ('yasin', 1), ('ynfle', 1), ('Álvaro Araújo', 1), ('İzzet  Tunç', 1), ('장', 1), ('mochara1', 1), ('mohs3n71', 1), ('monsterkrampe', 1), ('nastassiadanilova', 1), ('niilz', 1), ('ooransoy', 1), ('pablo', 1), ('pacak', 1), ('parampaa2', 1), ('peterloane', 1), ('philippmeissner', 1), ('pjs902', 1), ('pqnet', 1), ('programatologist', 1), ('puerco-errante', 1), ('query-set', 1), ('radinio', 1), ('rigogsoto', 1), ('rutaka-n', 1), ('rvictorino', 1), ('sachin soman', 1), ('sachiwhite', 1), ('satoru', 1), ('sawyerDeveloper', 1), ('scic0', 1), ('scortino', 1), ('Squirrel', 1), ('Tim Hawes', 1), ('Tim Ryan', 1), ('Timothy John Perisho Eccleston', 1), ('Tobias Weber', 1), ('Todd Resudek', 1), ('Tom Van Dort', 1), ('Tomas Fischer', 1), ('Tomé Jesus', 1), ('Tong Huu Khiem (Mark)', 1), ('Tony Cox', 1), ('Tonći Galić', 1), ('Tugrul Ates', 1), ('Tushar Koshti', 1), ('Tushar Tripathi', 1), ('Ty Hahn', 1), ('Tyler Ritchie', 1), ('Tymoteusz Stępień', 1), ('U2328', 1), ('Unathi Chonco', 1), ('Utkarsh Gupta', 1), ('Utkarsh Raghav', 1), ('Varun Kumar N', 1), ('Vedant Chandrakant Wankhade', 1), ('Venkata S S K M Chaitanya', 1), ('Victor Grigoriu', 1), ('Victor Melo', 1), ('Stargator', 1), ('Stephan Kämper', 1), ('Steve', 1), ('Steve', 1), ('Steve Lewis', 1), ('Steve Phillips', 1), ('Steven Atkinson', 1), ('Stig Johan Berggren', 1), ('Stuart Taylor', 1), ('Subhanshu Goel', 1), ('Subhojit Paul', 1), ('Sudhanshu Gupta', 1), ('Sven Steinbauer', 1), ('Syed Umar Anis', 1), ('Szymon Stepniak', 1), ('Sébastien NEDJAR', 1), ('Tan Yeong Sheng', 1), ('Tarun Chawla', 1), ('Tejovanth N', 1), ('Thiago', 1), ('Thiago Lima', 1), ('Thomas Pucci', 1), ('Thomas antony', 1), ('Thong Kuah', 1), ('Tiago Antao', 1), ('Tiago Antao', 1), ('Wolfgang Schuster', 1), ('Xuanwo', 1), ('Yakov Gnusin', 1), ('Yanick Champoux', 1), ('Yannick', 1), ('Yannick Dawant', 1), ('Yash Kulshrestha', 1), ('Youssef Victor', 1), ('Yunus Emre', 1), ('Zach Banducci', 1), ('Zachary Dremann', 1), ('Zachary Romero', 1), ('Zak B. Elep', 1), ('Zhanibek Adilbekov', 1), ('Zheng Fu', 1), ('a-mellor', 1), ('a59', 1), ('aadityakulkarni', 1), ('abat', 1), ('abredi', 1), ('adesanjo', 1), ('agazzarini', 1), ('alejandraberbesi', 1), ('alexhalford', 1), ('alfredo.alonso', 1), ('andrej-dyck', 1), ('Vighnesh K S P', 1), ('VigneshkumarG', 1), ('Vikas Verma', 1), ('Viktor Zetterström', 1), ('Viktor Zetterström', 1), ('Vinay Shankar Shukla', 1), ('Vince Lee', 1), ('Vince Urag', 1), ('Vincent Serpoul', 1), ('Vitor Fernandes', 1), ('Vitruvia', 1), ('Vlad', 1), ('Vlad Bokov', 1), ('Vlad Tarasevich', 1), ('Walaa Ayyad', 1), ('Warren Wright', 1), ('WeeDom', 1), ('Wei Wang', 1), ('Wenceslao Negrete', 1), ('Wesley Harvey', 1), ('Will Folsom', 1), ('Will Madison', 1), ('Will Murphy', 1), ('William Forsyth', 1), ('Willy Wombat', 1), ('Winston Junior Rodriguez Stand', 1), ('CodeZeus-dev', 1), ('Corey Davis', 1), ('corneliusroemer', 1), ('corylamontagne', 1), ('cosimameyer', 1), ('Craig', 1), ('CraigChamberlain', 1), ('grimord', 1), ('clagraff', 1), ('curt-mitch', 1), ('qfjp', 1), ('cdlm', 1), ('barnzdan', 1), ('danruff5', 1), ('dnllln', 1), ('Daniel Brook-Roberge', 1), ('dmagliola', 1), ('Daniel Mita', 1), ('danielt1263', 1), ('epoch', 1), ('Daniil Yarancev', 1), ('Danil Yarantsev', 1), ('DanielNoord', 1), ('c-dante', 1), ('dgolub-travix', 1), ('Darrell Pittman', 1), ('BrydenR', 1), ('byronanderson', 1), ('cj1128', 1), ('Calamari', 1), ('cameron-wood', 1), ('barabo', 1), ('carolineschnapp', 1), ('HerbCSO', 1), ('CEOehis', 1), ('cgorshing', 1), ('ldclakmal', 1), ('ch-asimakopoulos', 1), ('CheshireCat12', 1), ('mittalchirag', 1), ('cspollar', 1), ('cstroliadavis', 1), ('ChristianTovar', 1), ('cglacet', 1), ('unused', 1), ('cbliard', 1), ('Callisto13', 1), ('cnovoab', 1), ('hoovercj', 1), ('Collisio-Adolebitque', 1), ('coltonehrman', 1), ('Conrad Beach', 1), ('mapu77', 1), ('lnds', 1), ('echen805', 1), ('erustin-tw', 1), ('Egor Mihnevich', 1), ('Eiermann', 1), ('Eli Flanagan', 1), ('Eli Reiner', 1), ('Elise Briers', 1), ('Eliza Brock Marcum', 1), ('Elle Meredith', 1), ('Emanuele DelBono', 1), ('Emerentius', 1), ('EmilieHumbert', 1), ('Emilien Mottet', 1), ('Emre Kucukayvaz', 1), ('Emre Yurtseven', 1), ('Eric', 1), ('Eric Chiu', 1), ('Eric Dattore', 1), ('Eric Klatzer', 1), ('Eric Peterson', 1), ('Eric Ramirez Santis', 1), ('Eric Ti Yu Chiang', 1), ('ErikSchierboomTest', 1), ('Joseph Castro', 1), ('buddhamagnet', 1), ('rebelwarrior', 1), ('dfimbres', 1), ('David-Guillot', 1), ('dstockto', 1), ('dvrensk', 1), ('dedalusium', 1), ('dnahurnyi', 1), ('dpcat237', 1), ('DerekLiang', 1), ('DhanshreeA', 1), ('DiegoSalazar', 1), ('diegotc86', 1), ('diegovinie', 1), ('dmerejkowsky', 1), ('Dinesh210291', 1), ('dinispeixoto', 1), ('dimp-gh', 1), ('dogafincan', 1), ('Domiii', 1), ('donatoaz', 1), ('DrEntropy', 1), ('dusan-rychnovsky', 1), ('dtadic', 1), ('dustin-heckmann', 1), ('edhaz', 1), ('Injng', 1), ('amencarini', 1), ('Ne0t0N', 1), ('Alex Ahern', 1), ('lxnn', 1), ('Alex Bender', 1), ('The-Heyman', 1), ('ajablonski', 1), ('ajkavanagh', 1), ('alexioslyrakis', 1), ('creature', 1), ('AlexMisiulia', 1), ('Alexander', 1), ('lex57ukr', 1), ('ilyvion', 1), ('alexandrelanglais', 1), ('Alexhans', 1), ('brodeuralexis', 1), ('ikiugu', 1), ('alicjasanestrzik', 1), ('alkanna', 1), ('alphashuro', 1), ('Alxandr', 1), ('amirhosseinab', 1), ('vanenshi', 1), ('ammaratef45', 1), ('marauderlabs', 1), ('3mtee', 1), ('AAorris', 1), ('alkhulaifi', 1), ('abdullahceylan', 1), ('abhinandval', 1), ('abhishek-sankar', 1), ('abhyuditjain', 1), ('CodingGreen', 1), ('bernot-dev', 1), ('Adam Buckland', 1), ('AJ8GH', 1), ('Adam Levin', 1), ('Skoda091', 1), ('aditek1105', 1), ('zoldar', 1), ('akilegaspi', 1), ('adriantombu', 1), ('ajomadlabs', 1), ('AkibAzmain', 1), ('Akshive', 1), ('Alban Dericbourg', 1), ('calmcoconut', 1), ('alexito4', 1), ('chskela', 1), ('AlexBaranowski', 1), ('Aleksey', 1), ('arijitdatta', 1), ('arjunmahishi', 1), ('wazzuper', 1), ('fhntvv', 1), ('penguintheorem', 1), ('austinaryain', 1), ('ayaanp-dev', 1), ('coolbrg', 1), ('isidentical', 1), ('GreatBahram', 1), ('bartkalanski', 1), ('Bassel17', 1), ('btsui3', 1), ('bintay', 1), ('benjameep', 1), ('bsoyka', 1), ('Bennet Palluthe', 1), ('BibekStha', 1), ('bmkrocks1', 1), ('bobbicodes', 1), ('BowmanKlinkenberg', 1), ('brad-decker', 1), ('bgottlob', 1), ('tekerson', 1), ('Dhaulagiri', 1), ('cheerfulstoic', 1), ('alkhatib', 1), ('son1112', 1), ('Andi Rückauer', 1), ('andoniaf', 1), ('AndreaCrotti', 1), ('andreagrandi', 1), ('andreasandpiper', 1), ('akanz1', 1), ('as27', 1), ('andrewbaldwin44', 1), ('spazm', 1), ('ahalls', 1), ('CuriousPhysicist', 1), ('AndrewLawendy', 1), ('AndrewRadev', 1), ('andrewwhitehouse', 1), ('BNAndras', 1), ('andrerfcsantos', 1), ('Whatapalaver', 1), ('Anniepoo', 1), ('ansumanbebarta', 1), ('adeschamps', 1), ('abdeleon', 1), ('anuchitop', 1), ('anujk14', 1), ('Anukul Sangwan', 1), ('Kamil Chruściński', 1), ('Karim DRIDI', 1), ('Katrin Leinweber', 1), ('Katrina Owen', 1), ('Kaushik Chatterjee', 1), ('Keith Wegner', 1), ('Kellen Watt', 1), ('Kelvi Dalmazo', 1), ('Kenneth Cross', 1), ('Kent Chenery', 1), ('KevNickells', 1), (""Kevin D'ORANGE"", 1), ('Kevin Herro', 1), ('Kieran Trezona-le Comte', 1), ('KillTheMule', 1), ('Kinyanjui Wangonya', 1), ('Kirill Artamonov', 1), ('Kirill Morozov', 1), ('Koen Wellens', 1), ('Koustubh Sinkar', 1), ('Krsto Proroković', 1), ('Kurt Tamulonis', 1), ('Kyle Boehlen', 1), ('Lanie Hei', 1), ('Larry Ruane', 1), ('Larry Ruane', 1), ('Joseph Taylor', 1), ('Josh Morrow', 1), ('Joshua Arulsamy', 1), ('José Eduardo', 1), ('José Eduardo Monteiro', 1), ('José Ráez Rodríguez', 1), ('Joyce Kung', 1), ('Joyce Kung', 1), ('João Costa', 1), ('João Fernandes', 1), ('João Thallis', 1), ('Juan Carlos', 1), ('Juan D. Vega', 1), ('Juan Pablo Lorenzo', 1), ('Juang Salaz Prabowo', 1), ('Julien Fiegehenn', 1), ('Julien Lirochon', 1), ('Julio Añoveros', 1), ('JuliusKreutz', 1), ('Justin Irabor', 1), ('Justin Leveck', 1), ('Jônatas Barbosa', 1), ('Júlio Leitão', 1), ('KMA', 1), ('Kah Goh', 1), ('Kalind Karia', 1), ('Manuel Dewald', 1), ('Marcelo E. Magallon', 1), ('Marco Bolis', 1), ('Marco Hinz', 1), ('Marco Quintella', 1), ('Marcos ALMEIDA', 1), ('Marcos Brizeno', 1), ('Mark Elston', 1), ('Mark Rousskov', 1), ('Marko Tsengov', 1), ('Markus Deibel', 1), ('Marlon Marques', 1), ('Martin Campbell', 1), ('Martin Delille', 1), ('Martina Freundorfer', 1), ('MaryamZi', 1), ('Marzieh Morovatpasand', 1), ('Mateus Sampaio', 1), ('Matheus Silva Santos de Oliveira', 1), ('Matias Bjarland', 1), ('Mats Alritzson', 1), ('Mats Rauhala', 1), ('Matt Hoover', 1), ('Matt McCarley', 1), ('Matt Parsons', 1), ('Matt Wiseman', 1), ('Lean Jun Hui', 1), ('Leo Zhu', 1), ('LoadingBG', 1), ('Logan Stucki', 1), ('Lonnie Ramirez', 1), ('Lord_Sarcastic', 1), ('Lorenzo Bragaglia', 1), ('Lori King', 1), ('Lorraine Lee', 1), ('Louie van Bommel', 1), ('Luan Gomes', 1), ('Luan Nguyen', 1), ('Lucas Barbosa', 1), ('Lucas Jordan', 1), ('Luis Rojas', 1), ('Luis San Martin', 1), ('Luisa Lima', 1), ('Luiz Felipe', 1), ('Luke Carrier', 1), ('Lynn Langit', 1), ('Lâm Kim Phú', 1), ('M. Campbell', 1), ('Magnus Lassi', 1), ('Maisom Somji', 1), ('Makan Taghizadeh', 1), ('Maksim Danilau', 1), ('Erwan BERNARD', 1), ('Geoffrey Wiseman', 1), ('George-Claudiu Carcadia', 1), ('Gerhard Molin', 1), ('Germán Estévez', 1), ('Giacomo Guiulfo', 1), ('Giorgio', 1), ('Glib', 1), ('Gokul Chittaranjan', 1), ('Grant Winney', 1), ('Guillaume Diallo-Mulliez', 1), ('Gunnar Thor', 1), ('Gurpreet Singh', 1), ('Gyoo', 1), ('Hamed Zaghaghi', 1), ('Harrison', 1), ('Haruya Shida', 1), ('Hatem Ahmed', 1), ('Hemika Kodikara', 1), ('Henri Cazottes', 1), ('Hilary Holz', 1), ('Hiram Jerónimo Perez', 1), ('Hristo Filaretov', 1), ('Ian Fosbery', 1), ('Ian Knighton', 1), ('Ian Weaver', 1), ('Ilias Van Peer', 1), ('Eugene Griaznov', 1), ('Eyong Kevin', 1), ('Fabian Zitter', 1), ('Fabio Falzoi', 1), ('Fadi Asfour', 1), ('Farhan Ahmed', 1), ('Favio Manriquez', 1), ('Fedor Koshel', 1), ('Felix Bünemann', 1), ('Fernando Falci', 1), ('Fernando Mendes', 1), ('Fernando Soto', 1), ('Filip Gulán', 1), ('Florian Zeidler', 1), ('Francesco Gualazzi', 1), ('François Févotte', 1), ('Fredrik Rubensson', 1), ('Frerich Raabe', 1), ('Frédéric Meyer', 1), ('Fytex', 1), ('Gajendra Deshpande', 1), ('Gareth Jones', 1), ('Gaurav Chakravorty', 1), ('Gaurav Khulway', 1), ('Gautam krishna R', 1), ('Gautzilla', 1), ('Jeff Sullivan', 1), ('Jeffrey Sarnoff', 1), ('Jeffrey04', 1), ('Jeremy Savor', 1), ('Jerome Riga', 1), ('Jesús Dugarte', 1), ('Jim Kyle', 1), ('Jim Miller', 1), ('JimLynchCodes', 1), ('Jimpjorps™', 1), ('Joan Massich', 1), ('Job van der Wal', 1), ('Joe Clay', 1), ('Joe McMahon', 1), ('Joel Taylor', 1), ('Johannes Müller', 1), ('John Carnell', 1), ('John Luiz', 1), ('John Meade', 1), ('John Reese', 1), ('John Stevenson', 1), ('John Turner', 1), ('Jonah Kruschke', 1), ('Jonathan Hawley-Peters', 1), ('Jonathan Romano', 1), ('Jonathan Whittle', 1), ('Ivan Danci', 1), ('Ivan Ladelshchikov', 1), ('Ivan Šarić', 1), ('Ivars Arins', 1), (""Jack 'eXit' Whitter-Jones"", 1), ('Jacqueline Potts', 1), ('Jahongir Rahmonov', 1), ('Jaime Martinez', 1), ('Jaime Martinez', 1), ('Jake Varness', 1), ('Jakub Holy', 1), ('Jakub Kądziołka', 1), ('James Haney', 1), ('James Landrum', 1), ('James Lao', 1), ('James McLaren', 1), ('James Nguyen', 1), ('Jamie Preston', 1), ('Jan Groth', 1), ('Jared Mortenson', 1), ('Jarrod Connolly', 1), ('Jason Peacock', 1), ('Javran Cheng', 1), ('Jay Haase', 1), ('Jayaram Kancherla', 1), ('Jeff Bramwell', 1)",837,170,
ajbrock/BigGAN-PyTorch,The author's officially unofficial PyTorch BigGAN implementation.,"# BigGAN-PyTorch
The author's officially unofficial PyTorch BigGAN implementation.

![Dogball? Dogball!](imgs/header_image.jpg?raw=true ""Dogball? Dogball!"")


This repo contains code for 4-8 GPU training of BigGANs from [Large Scale GAN Training for High Fidelity Natural Image Synthesis](https://arxiv.org/abs/1809.11096) by Andrew Brock, Jeff Donahue, and Karen Simonyan.

This code is by Andy Brock and Alex Andonian.

## How To Use This Code
You will need:

- [PyTorch](https://PyTorch.org/), version 1.0.1
- tqdm, numpy, scipy, and h5py
- The ImageNet training set

First, you may optionally prepare a pre-processed HDF5 version of your target dataset for faster I/O. Following this (or not), you'll need the Inception moments needed to calculate FID. These can both be done by modifying and running

```sh
sh scripts/utils/prepare_data.sh
```

Which by default assumes your ImageNet training set is downloaded into the root folder `data` in this directory, and will prepare the cached HDF5 at 128x128 pixel resolution.

In the scripts folder, there are multiple bash scripts which will train BigGANs with different batch sizes. This code assumes you do not have access to a full TPU pod, and accordingly
spoofs mega-batches by using gradient accumulation (averaging grads over multiple minibatches, and only taking an optimizer step after N accumulations). By default, the `launch_BigGAN_bs256x8.sh` script trains a
full-sized BigGAN model with a batch size of 256 and 8 gradient accumulations, for a total batch size of 2048. On 8xV100 with full-precision training (no Tensor cores), this script takes 15 days to train to 150k iterations.

You will first need to figure out the maximum batch size your setup can support. The pre-trained models provided here were trained on 8xV100 (16GB VRAM each) which can support slightly more than the BS256 used by default.
Once you've determined this, you should modify the script so that the batch size times the number of gradient accumulations is equal to your desired total batch size (BigGAN defaults to 2048).

Note also that this script uses the `--load_in_mem` arg, which loads the entire (~64GB) I128.hdf5 file into RAM for faster data loading. If you don't have enough RAM to support this (probably 96GB+), remove this argument.


## Metrics and Sampling
![I believe I can fly!](imgs/interp_sample.jpg?raw=true ""I believe I can fly!"")

During training, this script will output logs with training metrics and test metrics, will save multiple copies (2 most recent and 5 highest-scoring) of the model weights/optimizer params, and will produce samples and interpolations every time it saves weights.
The logs folder contains scripts to process these logs and plot the results using MATLAB (sorry not sorry).

After training, one can use `sample.py` to produce additional samples and interpolations, test with different truncation values, batch sizes, number of standing stat accumulations, etc. See the `sample_BigGAN_bs256x8.sh` script for an example.

By default, everything is saved to weights/samples/logs/data folders which are assumed to be in the same folder as this repo.
You can point all of these to a different base folder using the `--base_root` argument, or pick specific locations for each of these with their respective arguments (e.g. `--logs_root`).

We include scripts to run BigGAN-deep, but we have not fully trained a model using them, so consider them untested. Additionally, we include scripts to run a model on CIFAR, and to run SA-GAN (with EMA) and SN-GAN on ImageNet. The SA-GAN code assumes you have 4xTitanX (or equivalent in terms of GPU RAM) and will run with a batch size of 128 and 2 gradient accumulations.

## An Important Note on Inception Metrics
This repo uses the PyTorch in-built inception network to calculate IS and FID. 
These scores are different from the scores you would get using the official TF inception code, and are only for monitoring purposes!
Run sample.py on your model, with the `--sample_npz` argument, then run inception_tf13 to calculate the actual TensorFlow IS. Note that you will need to have TensorFlow 1.3 or earlier installed, as TF1.4+ breaks the original IS code.

## Pretrained models
![PyTorch Inception Score and FID](imgs/IS_FID.png)
We include two pretrained model checkpoints (with G, D, the EMA copy of G, the optimizers, and the state dict):
- The main checkpoint is for a BigGAN trained on ImageNet at 128x128, using BS256 and 8 gradient accumulations, taken just before collapse, with a TF Inception Score of 97.35 +/- 1.79: [LINK](https://drive.google.com/open?id=1nAle7FCVFZdix2--ks0r5JBkFnKw8ctW)
- An earlier checkpoint of the first model (100k G iters), at high performance but well before collapse, which may be easier to fine-tune: [LINK](https://drive.google.com/open?id=1dmZrcVJUAWkPBGza_XgswSuT-UODXZcO)



Pretrained models for Places-365 coming soon.

This repo also contains scripts for porting the original TFHub BigGAN Generator weights to PyTorch. See the scripts in the TFHub folder for more details.

## Fine-tuning, Using Your Own Dataset, or Making New Training Functions
![That's deep, man](imgs/DeepSamples.png?raw=true ""Deep Samples"")

If you wish to resume interrupted training or fine-tune a pre-trained model, run the same launch script but with the `--resume` argument added. 
Experiment names are automatically generated from the configuration, but can be overridden using the `--experiment_name` arg (for example, if you wish to fine-tune a model using modified optimizer settings).

To prep your own dataset, you will need to add it to datasets.py and modify the convenience dicts in utils.py (dset_dict, imsize_dict, root_dict, nclass_dict, classes_per_sheet_dict) to have the appropriate metadata for your dataset.
Repeat the process in prepare_data.sh (optionally produce an HDF5 preprocessed copy, and calculate the Inception Moments for FID).

By default, the training script will save the top 5 best checkpoints as measured by Inception Score. 
For datasets other than ImageNet, Inception Score can be a very poor measure of quality, so you will likely want to use `--which_best FID` instead.

To use your own training function (e.g. train a BigVAE): either modify train_fns.GAN_training_function or add a new train fn and add it after the `if config['which_train_fn'] == 'GAN':` line in `train.py`.


## Neat Stuff
- We include the full training and metrics logs [here](https://drive.google.com/open?id=1ZhY9Mg2b_S4QwxNmt57aXJ9FOC3ZN1qb) for reference. I've found that one of the hardest things about re-implementing a paper can be checking if the logs line up early in training,
especially if training takes multiple weeks. Hopefully these will be helpful for future work.
- We include an accelerated FID calculation--the original scipy version can require upwards of 10 minutes to calculate the matrix sqrt, this version uses an accelerated PyTorch version to calculate it in under a second.
- We include an accelerated, low-memory consumption ortho reg implementation.
- By default, we only compute the top singular value (the spectral norm), but this code supports computing more SVs through the `--num_G_SVs` argument.

## Key Differences Between This Code And The Original BigGAN
- We use the optimizer settings from SA-GAN (G_lr=1e-4, D_lr=4e-4, num_D_steps=1, as opposed to BigGAN's G_lr=5e-5, D_lr=2e-4, num_D_steps=2).
While slightly less performant, this was the first corner we cut to bring training times down.
- By default, we do not use Cross-Replica BatchNorm (AKA Synced BatchNorm). 
The two variants we tried (a custom, naive one and the one included in this repo) have slightly different gradients (albeit identical forward passes) from the built-in BatchNorm, which appear to be sufficient to cripple training.
- Gradient accumulation means that we update the SV estimates and the BN statistics 8 times more frequently. This means that the BN stats are much closer to standing stats, and that the singular value estimates tend to be more accurate.
Because of this, we measure metrics by default with G in test mode (using the BatchNorm running stat estimates instead of computing standing stats as in the paper). We do still support standing stats (see the sample.sh scripts).
This could also conceivably result in gradients from the earlier accumulations being stale, but in practice this does not appear to be a problem.
- The currently provided pretrained models were not trained with orthogonal regularization. Training without ortho reg seems to increase the probability that models will not be amenable to truncation,
but it looks like this particular model got a winning ticket. Regardless, we provide two highly optimized (fast and minimal memory consumption) ortho reg implementations which directly compute the ortho reg. gradients.

## A Note On The Design Of This Repo
This code is designed from the ground up to serve as an extensible, hackable base for further research code. 
We've put a lot of thought into making sure the abstractions are the *right* thickness for research--not so thick as to be impenetrable, but not so thin as to be useless.
The key idea is that if you want to experiment with a SOTA setup and make some modification (try out your own new loss function, architecture, self-attention block, etc) you should be able to easily do so just by dropping your code in one or two places, without having to worry about the rest of the codebase.
Things like the use of self.which_conv and functools.partial in the BigGAN.py model definition were put together with this in mind, as was the design of the Spectral Norm class inheritance.

With that said, this is a somewhat large codebase for a single project. While we tried to be thorough with the comments, if there's something you think could be more clear, better written, or better refactored, please feel free to raise an issue or a pull request.

## Feature Requests
Want to work on or improve this code? There are a couple things this repo would benefit from, but which don't yet work.

- Synchronized BatchNorm (AKA Cross-Replica BatchNorm). We tried out two variants of this, but for some unknown reason it crippled training each time.
  We have not tried the [apex](https://github.com/NVIDIA/apex) SyncBN as my school's servers are on ancient NVIDIA drivers that don't support it--apex would probably be a good place to start. 
- Mixed precision training and making use of Tensor cores. This repo includes a naive mixed-precision Adam implementation which works early in training but leads to early collapse, and doesn't do anything to activate Tensor cores (it just reduces memory consumption).
  As above, integrating [apex](https://github.com/NVIDIA/apex) into this code and employing its mixed-precision training techniques to take advantage of Tensor cores and reduce memory consumption could yield substantial speed gains.

## Misc Notes
See [This directory](https://gist.github.com/yrevar/942d3a0ac09ec9e5eb3a) for ImageNet labels.

If you use this code, please cite
```text
@inproceedings{
brock2018large,
title={Large Scale {GAN} Training for High Fidelity Natural Image Synthesis},
author={Andrew Brock and Jeff Donahue and Karen Simonyan},
booktitle={International Conference on Learning Representations},
year={2019},
url={https://openreview.net/forum?id=B1xsqj09Fm},
}
```

## Acknowledgments
Thanks to Google for the generous cloud credit donations.

[SyncBN](https://github.com/vacancy/Synchronized-BatchNorm-PyTorch) by Jiayuan Mao and Tete Xiao.

[Progress bar](https://github.com/Lasagne/Recipes/tree/master/papers/densenet) originally from Jan Schlüter.

Test metrics logger from [VoxNet.](https://github.com/dimatura/voxnet)

PyTorch [implementation of cov](https://discuss.PyTorch.org/t/covariance-and-gradient-support/16217/2) from Modar M. Alfadly.

PyTorch [fast Matrix Sqrt](https://github.com/msubhransu/matrix-sqrt) for FID from Tsung-Yu Lin and Subhransu Maji.

TensorFlow Inception Score code from [OpenAI's Improved-GAN.](https://github.com/openai/improved-gan)

","'biggan', 'deep-learning', 'dogball', 'gans', 'neural-networks', 'pytorch'",2019-01-20T18:50:49Z,2023-07-19T17:08:51Z,7,7,2817,52,"('ajbrock', 83), ('alexandonian', 2), ('IShengFang', 1), ('jeffling', 1), ('mikeshatch', 1), ('darthsuogles', 1), ('cclauss', 1)",5,5,
ityouknow/spring-boot-examples,about learning Spring Boot via examples. Spring Boot 教程、技术栈示例代码，快速简单上手教程。 ,"Spring Boot 学习示例
=========================

![Spring Boot 2.0](https://img.shields.io/badge/Spring%20Boot-2.0-brightgreen.svg)
![Mysql 5.6](https://img.shields.io/badge/Mysql-5.6-blue.svg)
![JDK 1.8](https://img.shields.io/badge/JDK-1.8-brightgreen.svg)
![Maven](https://img.shields.io/badge/Maven-3.5.0-yellowgreen.svg)
![license](https://img.shields.io/badge/license-MPL--2.0-blue.svg)
 
Spring Boot 使用的各种示例，以最简单、最实用为标准，此开源项目中的每个示例都以最小依赖，最简单为标准，帮助初学者快速掌握 Spring Boot 各组件的使用。

[Spring Boot 中文索引](https://github.com/ityouknow/awesome-spring-boot) &nbsp;| &nbsp; [Spring Cloud学习示例代码](https://github.com/ityouknow/spring-cloud-examples) &nbsp;| &nbsp; [Spring Boot 精品课程](https://github.com/ityouknow/spring-boot-leaning) 

 [Github地址](https://github.com/ityouknow/spring-boot-examples) &nbsp;| &nbsp; [码云地址](https://gitee.com/ityouknow/spring-boot-examples) &nbsp;| &nbsp;  [Spring Boot 1.X](https://github.com/ityouknow/spring-boot-examples/tree/master/1.x) | &nbsp;  [Spring Boot 2.X](https://github.com/ityouknow/spring-boot-examples/tree/master/2.x)

---


**本项目中所有示例均已经更新到 Spring Boot 3.0**

- Spring Boot 1.X  系列示例代码请看这里：[Spring Boot 1.X](https://github.com/ityouknow/spring-boot-examples/tree/master/1.x)   
- Spring Boot 2.X  系列示例代码请看这里：[Spring Boot 2.X](https://github.com/ityouknow/spring-boot-examples/tree/master/2.x) 



## 示例代码

- [spring-boot-hello](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-hello)：Spring Boot 3.0  Hello World 示例
- [spring-boot-banner](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-hello)：Spring Boot 3.0  定制 banner 示例
- [spring-boot-helloworld](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-helloWorld)：Spring Boot 3.0  Hello World Test 单元测试示例
- [spring-boot-scheduler](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-scheduler)：Spring Boot 3.0 定时任务 scheduler 使用示例
- [spring-boot-package](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-package)：Spring Boot 3.0 单元测试、集成测试、打 Jar/War 包、定制启动参数使用案例
- [spring-boot-commandLineRunner](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-commandLineRunner)：Spring Boot 3.0 目启动时初始化资源案例
- [spring-boot-web](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-web)：Spring Boot 3.0 web 示例
- [spring-boot-webflux](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-webflux)：Spring Boot 3.0  响应式编程 WebFlux 使用案例
- [spring-boot-file-upload](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-file-upload)：Spring Boot 3.0 上传文件使用案例
- [spring-boot-thymeleaf](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-thymeleaf)：Spring Boot 3.0 Thymeleaf 语法、布局使用示例
- [spring-boot-jpa](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-jpa)：Spring Boot 3.0 Jpa 操作、增删、改查多数据源使用示例
- [spring-boot-mybatis](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-mybatis)：Spring Boot 3.0 Mybatis 注解、xml 使用、增删改查、多数据源使用示例
- [spring-boot-web-thymeleaf](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-web-thymeleaf)：Spring Boot 3.0 thymeleaf 增删该查示例
- [spring-boot-jpa-thymeleaf-curd](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-jpa-thymeleaf-curd)：Spring Boot 3.0 Jpa thymeleaf 列表、增删改查使用案例
- [spring-boot-mail](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-mail)：Spring Boot 3.0 邮件发送使用示例
- [spring-boot-rabbitmq](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-rabbitmq)：Spring Boot 3.0 RabbitMQ 各种常见场景使用示例 
- [spring-boot-mongodb](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-mongodb)：Spring Boot 3.0 MongoDB 增删改查示例 多数据源使用案例
- [spring-boot-redis](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-redis)：Spring Boot 3.0 Redis 示例
- [spring-boot-memcache-spymemcached](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-memcache-spymemcached)：Spring Boot 3.0  集成 Memcached 使用案例
- [spring-boot-docker](https://github.com/ityouknow/spring-boot-examples/tree/master/spring-boot-docker)：Spring Boot 3.0 Docker 使用案例
- [dockercompose-springboot-mysql-nginx](https://github.com/ityouknow/spring-boot-examples/tree/master/dockercompose-springboot-mysql-nginx)：Spring Boot 3.0 Docker Compose + Spring Boot + Nginx + Mysql 使用案例


> 如果大家想了解关于 Spring Boot 的其它方面应用，也可以以[issues](https://github.com/ityouknow/spring-boot-examples/issues)的形式反馈给我，我后续来完善。

关注公众号：纯洁的微笑，回复""666""进群交流

![](http://www.ityouknow.com/assets/images/keeppuresmile_430.jpg)","'docker', 'docker-composer', 'fastdfs', 'java', 'mongodb', 'mybatis', 'rabbitmq', 'scheduler', 'spring', 'spring-boot', 'spring-boot-examples', 'spring-boot-mail', 'spring-boot-mongodb', 'spring-boot-upload-file', 'spring-cloud', 'spring-data-jpa', 'springboot', 'springboot-shiro', 'springcloud', 'thymeleaf'",2016-11-05T05:32:33Z,2023-11-18T16:32:16Z,8,8,30061,1330,"('ityouknow', 206), ('ptxl', 1), ('yuhuih-ray', 1), ('imtms', 1), ('7c00', 1), ('BLinL', 1), ('a173030685', 1), ('wuyipu1997', 1)",7,7,
markyun/markyun,在Github的学习片段,"
MarkYun Bolg

Web Developer/ Photog/ Work at NanJing

[MarkYun Bolg](http://markyun.github.io/ ""markyun 的博客"")

[WebCIA Weekly (Web情报局)](https://markyun.github.io/weekly/ ""Web情报局 周刊"")

[MarkYun 语雀](https://www.yuque.com/yyyy ""markyun 的语雀"")


#### 这里是Github托管的Bolg，记录一些学习的日常，以保持领先所需的见解。
[前端开发面试题 Front-end-Developer-Questions](https://github.com/markyun/My-blog/blob/master/Front-end-Developer-Questions ""最新前端开发面试题"")  (不定期更新) 欢迎Star和提交issues
","'front-end', 'front-end-developer', 'front-end-interview-question'",2013-01-26T03:29:36Z,2024-02-02T02:11:48Z,33,26,11328,880,"('markyun', 144), ('StevenYuysy', 4), ('yugasun', 4), ('lee5214', 2), ('weakish', 2), ('elrrrrrrr', 2), ('wagnlinzh', 2), ('laixintao', 2), ('birdgg', 1), ('hsxfjames', 1), ('ChiChou', 1), ('guitong', 1), ('HcySunYang', 1), ('heziqiang', 1), ('sabrinaluo', 1), ('Ihtml', 1), ('neotan', 1), ('RyanTedder', 1), ('bryant1410', 1), ('WisestCoder', 1), ('xcatliu', 1), ('zy445566', 1), ('alanhg', 1), ('majinyunm', 1), ('majinyunm', 1), ('marklin-latte', 1), ('ssnau', 1), ('unknown', 1), ('wangxiaoxing', 1), ('noiron', 1), ('xrr2016', 1), ('z', 1), ('Cuixote', 1)",25,18,
ademilter/bricklayer,Lightweight and independent Pinterest-like cascading grid layout library,"

#### Bricklayer is a Lightweight and Independent Pinterest-like Cascading Grid Layout Library

[![Join the chat at https://gitter.im/ademilter/bricklayer](https://badges.gitter.im/ademilter/bricklayer.svg)](https://gitter.im/ademilter/bricklayer?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![npm version](https://badge.fury.io/js/bricklayer.svg)](https://badge.fury.io/js/bricklayer)
[![Bower version](https://badge.fury.io/bo/bricklayer.svg)](https://badge.fury.io/bo/bricklayer)

[![Image](https://rawgit.com/ademilter/bricklayer/master/assets/screenshot.gif)](http://ademilter.github.io/bricklayer)

 - :gem: **Simpler** than any other cascading grid layout tools.
 - :snowflake: **Lightweight**, no fat. **(1.5KB gzipped)**
 - :construction_worker: **No frameworks required**.
 - :droplet: **Responsive** support with no glitches.
 - :zap: **Easy** configuration.
 - :skull: **No inline styles**, static positioning.
 - :package: Integrates with **jQuery**, **Angular.js** and **React.js** easily.

[Read Tutorial and Documentation →](https://github.com/ademilter/bricklayer/wiki/Quick-Start)

---

## Playgrounds

 - [Play with Bricklayer on CodePen.io](http://codepen.io/f/pen/QNBwrO)
 - [Play with Bricklayer on JSFiddle](https://jsfiddle.net/fka/totn2yL0/)

## Are you using Bricklayer.js for your next project?

[Let us know](https://github.com/ademilter/bricklayer/issues/new?title=We%20use%20bricklayer,%20too!&body=Please%20add%20this%20to%20the%20list!%0A%0AWebsite:%20%3Curl%3E%0ATitle:%20%3Ca%20short%20title%3E%0A%0A%3Cany%20description%3E) if you use this awesome library in your project and we'll add here!

These are the sites using Bricklayer!
- [Fascinating Nepal Photo Gallery](http://www.fascinatingnepal.com/photo-gallery/)

## Browser Support

This plugin works seamlessly with, Safari, Firefox, Chrome and all other modern browsers.

## Contribution

Check out our awesome [contributors](https://github.com/ademilter/bricklayer/graphs/contributors)! Maybe you want to buy some coffee for them ☕️

We need contributions for:
 - Improving documentation
 - Building fancy web pages
 - Typo fixes

## Credits

 - [Adem İlter](https://twitter.com/ademilter) - creator, owner of the whole idea, maintainer of artwork.
 - [Fatih Kadir Akın](https://twitter.com/fkadev) - creator, maintainer of JavaScript parts.
 - [Yasir Buğra Eryılmaz](https://twitter.com/yasirbugra) - retouch of logo

## License

Bricklayer - Cascading Grid Layouts

Copyright © 2016 Adem İlter

Permission is hereby granted, free of charge, to any person obtaining
a copy of this software and associated documentation files (the ""Software""),
to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense,
and/or sell copies of the Software, and to permit persons to whom the
Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
",,2016-04-08T21:59:15Z,2024-04-30T11:28:21Z,8,5,2460,62,"('Fatih Kadir Akın', 50), ('f', 38), ('ademilter', 13), ('Adem ilter', 3), ('jerstew', 1), ('jkissel', 1), ('Rupert Dunk', 1), ('gitter-badger', 1)",4,3,
mjbamford/S201801,CoderAcademy Sydney Cohort 201801  ,,,2018-02-26T23:00:34Z,2018-07-03T23:51:05Z,1,1,2,1,"('mjbamford', 66)",0,0,
TerryZ/bDialog,"Extend the Bootstrap Modal features, making dialog more functions and easier to use, dialog type including modal, alert, mask and toast types","



bDialog


A multi-layer nested, highly customizable powerful dialog plugin, 
dialog type including modal dialog, alert dialog, mask layer, toast dialog



    
    
    
    




## Guide, Demos and Documents

Explorer on 
- [English site](https://terryz.github.io/bdialog)
- [中文官网](https://terryz.gitee.io/bdialog)

[简体中文文档](README-CN.md)

The Vuejs version: [v-dialogs](https://github.com/TerryZ/v-dialogs)

**If you think this project is helpful, please star it.**




## Features

- jQuery plugin, on Bootstrap Modal plugin basis to extend
- multi-layer Nested modal dialog
- alert mode dialog provide `info`、`warning`、`error`、`success`、`confirm` types
- mask layer block all element when data loading
- toast dialog, provide `info`、`warning`、`error`、`success` types and 6 corner position
- flexible style setting
- when browser size changes, the dialog will automatically repositioned to the center of the browser
- dialog area outside the click, the window automatically positioning and other scenes have a corresponding reminder animation



### The Alert Dialog Icon

the icons in alert dialog used are made by [Elegant Themes](http://www.elegantthemes.com/blog/freebie-of-the-week/beautiful-flat-icons-for-free)
and control icon, toast icon used are come from [IconFont](http://www.iconfont.cn)



## Plugin Preview

*Modal Mode*

![bDialogModal](https://terryz.gitee.io/image/bDialog.png)

*Alert Mode*

![bDialogAlert](https://terryz.gitee.io/image/bDialogAlert.png)

*Mask Mode*

![bDialogMask](https://terryz.gitee.io/image/bDialogMask.png)

*Toast Mode*
![bDialogToast](https://terryz.gitee.io/image/bDialogToast.png)






## Install

download bDialog plugin zip file by last release, or [Click me](https://github.com/TerryZ/bDialog/archive/master.zip) to download bDialog  

or use **NPM**  
```
npm i bdialog
```

### Usage

As you can see in the [Demo page](https://terryz.github.io/bdialog/demo.html), you will need to include:

- [jQuery library](http://jquery.com) (1.6.0+), untest on jquery2.x & 3.x
- The JavaScript file b.dialog.js (or its minified version b.dialog.min.js)
- The css file b.dialog.bootstrap3.css for bootstrap3.x , b.dialog.css for bootstrap2.x

#### Including files

```html





 
 




```

#### Open a Modal dialog

```js
bDialog.open({
    title : 'User Info Modify',
    width : 500,
    height : 450,
    url : 'http://aa.com/load',
    params : {
        'userName' : 'Bryant'
    },
    callback:function(data){
        if(data && data.results && data.results.length > 0 ){
            bDialog.alert('已完成弹出窗口操作！接收到弹出窗口传回的 userName 参数，值为：' + 
            data.results[0].userName + '');
        }else{
            bDialog.alert('弹出窗口未回传参数',$.noop,{
              messageType : 'error'
            });
        }
    }
});
```

### Quick Demo
```js
//Modal :
bDialog.open({
  url : 'http://some url'
});
bDialog.open({
  dom : $('#some element').html()
});

//Alert :
bDialog.alert('your message');
bDialog.alert('your message',function(){
  //your callback
});

//Mask :
bDialog.mask();

//Toast :
bDialog.toast('your message');
bDialog.toast('your message',{
  //toast dialog type
  messageType : 'warning',
  //show dialog in topleft position
  position : 'topLeft',
  //don't show close button
  dialogCloseButton : false,
  //auto close dialog time(second),default 3s
  closeTime : 0
});
```



## Options


- **backdrop** `string | boolean`  
  default : 'static'  
  the dialog backdrop layer set
  - 'static' : click the backdrop can not close the dialog
  - false : do not show backdrop
  - true : show backdrop, but click the backdrop will close dialog

- **title** `string | boolean`  
  default : '对话框'  
  set text to show in title bar,set `false` to close the title bar

- **language** `string`  
  default : 'cn'  
  dialog using language

| Code | Language |
| ------ | ------ |
| cn | chinese |
| en | english |
| jp | japanse |

- **width** `number`  
  default : 700  
  dialog width, only work on modal dialog mode

- **height** `number`  
  default : 400  
  dialog height, only work on modal dialog mode

- **animation** `boolean`  
  default : true  
  whether show animation when dialog open

- **dialogCloseButton** `boolean`  
  default : true  
  whether show the 'X' close button

- **dialogMaxButton** `boolean`  
  default : true  
  whether show maximize button

- **closeButton** `boolean`  
  default : false  
  whether to close dialog bottom bar, only work in Modal dialog mode

- **scroll** `boolean`  
  default : true  
  whether to display the scroll bar

- **drag** `boolean`  
  default : true  
  whether to allow the window to be dragged
  
  > the drag function is depend on jquery-ui draggable liabrary,if not include it, drag function will auto close

- **url** `string`  
  default : false  
  the remote page url open in modal dialog

- **params** `object`  
  default : undefined  
  pass the parameters to the new open modal dialog, in the new modal dialog you can get parameters like this
  ```js
  var params = bDialog.getDialogParams();
  ```
  **example**
  ```js
  params : {
    name : 'Michael',
    num : 23
  }
  ```

- **dom** `object`  
  default : undefined  
  the html element or javascript object or jquery object to show in modal dialog

- **fullWidth** `boolean`  
  default : false  
  whether to show full width modal dialog

- **customClass** `string`  
  default : undefined  
  specify custom style class name

- **show** `boolean`  
  default : false
  whether show dialog when dialog init finish

- **onShow** `function`  
  default : undefined  
  before dialog show callback

- **onShowed** `function`  
  default : undefined  
  when the dialog has been made visible to call this callback

- **onHide** `function`  
  default : undefined  
  before dialog close callback

- **onHidden** `function`  
  default : undefined  
  when dialog completely close callback

- **callback** `function`  
  default : undefined  
  when dialog close callback, this callback different from others callback its can be return data to caller.   
  **param**  
  *data* `object` return to caller data  
  **example**
  ```js
  {
    callback : function(data){
      if(data && data.results && data.results.length > 0 ){
        $('#input').val(data.results[0]);
      }
    }
  }
  //the param data is come from 
  bDialog.close('i am return data');
  ```

- **messageType** `string`  
  default : 'info'  
  setup alert dialog, toast dialog type, the full type is
    - info(default)
    - warning
    - error
    - success
    - confirm(only work on alert dialog)
  
  the different type will show different icon
  
- **position** `string`  
  default : 'bottomRight'  
  toast dialog display position, the full position is  
    - topLeft
    - topCenter
    - topRight
    - bottomLeft
    - bottomCenter
    - bottomRight(default)

- **closeTime** `number`  
  default : 3(second)  
  auto close toast dialog time, set 0 to disabled auto close dialog

- **cancel** `function`  
  default : undefined  
  when alert dialog mode, and alert type is confirm, this callback is used to the cancel button callback  
  **example**
  ```js
  cancel : function(dialog){
    bDialog.alert('The deal was canceled');
  }
  ```

## API

- **open**  
  open a modal dialog  
  *param*
  - params
  *example*
  ```js
  bDialog.open({
    url : 'http://someurl'
  });
  //so simple to open a remote page in modal dialog
  ```
- **close**  
  close opened dialog (modal, alert, mask)  
  *param*
  - data `object` return to caller data
  - [dialog] `object` optional to set, if you have a opened dialog object,you can directly to it. if no setup this param, plugin will close the last open dialog
  *example*
  ```js
  bDialog.close({name:'Michael',num:23});//close and return data(last open dialog)

  var dlg = bDialog.open({...});
  $('#theBtn').click(function(){
    bDialog.close({name:'Michael',num:23},dlg);
  });
  ```
- **getDialog**  
  get last opened dialog (modal, alert, mask)
  ```js
  var dlg = bDialog.getDialog();
  ```
- **getDialogParams**  
  get params data from open dialog params
  ```js
  bDialog.open({
    params : {
      name : 'Michael',
      num : 23
    }
  });
  ```
  in the opened modal dialog, you can get params like this
  ```js
  var params = bDialog.getDialogParams();
  $('#name').val(params.name);
  ```
- **alert**  
  open a message alert dialog, the alert dialog can be info, warning, error, success, confirm types
  *param*
  - message `string` the message show in alert dialog
  - callback `function` close alert dialog callback
  - params `object` setup alert dialog params
  ```js
  bDialog.alert('a am info message');//just show message

  bDialog.alert('a am info message',function(){
    $('#name').val('');
  });//show message and do something when alert dialog close

  bDialog.alert('a am info message',function(){
    $('#name').val('');
  },{
    messageType : 'confirm',//open confirm alert dialog
    cancel : function(){
      $('#name').val('my default name');
    }
  });//show message, callback,and setup init params
  ```
- **mask**  
  *param*  
  - message
  - params
  ```js
  bDialog.mask();//show a block every element layer and default prompt message

  bDialog.mark('please wait for a moment...');//show a mask and custom text
  ```
- **toast**  
  *param*  
  - message
  - params
  ```js
  //show a corner toast dialog, default position on bottomRight
  bDialog.toast('your message');
  bDialog.toast('your message',{
    //toast dialog type
    messageType : 'warning',
    //show dialog in topleft position
    position : 'topLeft',
    //don't show close button
    dialogCloseButton : false,
    //auto close dialog time(second),default 3s
    closeTime : 0
  });
  ```
","'alert', 'bootstrap', 'dialog', 'dialog-box', 'javascript', 'jquery', 'jquery-plugin', 'mask', 'modal', 'modal-dialogs', 'multiple-layers', 'notifications', 'toast-dialog'",2017-05-28T08:10:03Z,2018-10-13T03:30:04Z,2,2,176,20,"('TerryZ', 91), ('reallinfo', 3)",0,0,
azproduction/b_,BEM class name formatter,"# b_

[![NPM Version](https://badge.fury.io/js/b_.png)](https://npmjs.org/package/b_)
[![Build Status](https://travis-ci.org/azproduction/b_.png?branch=master)](https://travis-ci.org/azproduction/b_)

BEM class name formatter

## Example

### Simple

```js
var b = require('b_');

// blocks
b('button', {size: 'xl'}) === 'button button_size_xl';

// block elements
b('modal', 'close', {size: 'xl'}) === 'modal__close modal__close_size_xl';

// boolean modifiers
b('button', {hidden: false}) === 'button';
b('button', {hidden: true}) === 'button button_hidden';
```

### Alternative BEM syntax

```js
var B = require('b_').B;
var b = B({
    tailSpace: ' ',
    elementSeparator: '-',
    modSeparator: '--',
    modValueSeparator: '-',
    classSeparator: ' '
});

b('block', 'elem', {mod1: true, mod2: false, mod3: 'mod3'}) ===
'block-elem block-elem--mod1 block-elem--mod3-mod3 ';
```

### [BEViS](https://github.com/bevis-ui/docs) syntax

```js
var B = require('b_').B;
var b = B({isFullModifier: false});

b('button_call-for-action', {disabled: true, focused: 'yes'}) ===
'button_call-for-action _disabled _focused_yes';
```

### Full bool values in modifiers

```js
var B = require('b_').B;
var b = B({isFullBoolValue: true});

b('button', {disabled: true, focused: false}) ===
'button button_disabled_true button_focused_false';
```

### React example

```jsx
var b = require('b_').with('b-button');
// or
var b = require('b_').lock('b-button');
// which is `require('b_').bind(null, 'b-button');` but much convenient

function render() {
    return (
        
            
            
        
        
            
            
        
    );
}
```
",,2014-12-04T16:17:02Z,2017-09-16T20:00:26Z,4,3,103,3,"('azproduction', 24), ('Mikhail Davydov', 1), ('outring', 1), ('iamstarkov', 1)",3,2,
boucherm/ShowMotion,"Tiny vim plugin to highlight landing places when moving with w,W,b,B","ShowMotion
==========

Ever hammered the {`w`,`W`,`b`,`B`,`e`,`E`,`;`,`,`} keys to finally pass over the location you were aiming for?
ShowMotion is a tiny vim plugin to highlight the potential landing places when moving:

* by words with {`w`,`W`,`b`,`B`,`e`,`E`}.
* by chars with {`f`,`F`,`t`,`T`,`;`,`,`}

Somewhat inspired by the EasyMotion plugin, this one is only aimed at providing cues about where you'll land, not allowing to select a specific landing place. The pleasant consequence of this is it doesn't break your moving flow, which was the motivation for writing it.

 

Installation:

 I suggest using [pathogen](https://github.com/tpope/vim-pathogen)


Add these highlighting settings to your vimrc:

    highlight SM_SmallMotionGroup cterm=italic                ctermbg=53 gui=italic                guibg=#5f005f
    highlight SM_BigMotionGroup   cterm=italic,bold,underline ctermbg=54 gui=italic,bold,underline guibg=#5f0087
    highlight SM_CharSearchGroup  cterm=italic,bold           ctermbg=4  gui=italic,bold           guibg=#3f6691

Add these word-motion settings to your vimrc:

    ""*** Highlights both big and small motions
    nmap w (show-motion-both-w)
    nmap W (show-motion-both-W)
    nmap b (show-motion-both-b)
    nmap B (show-motion-both-B)
    nmap e (show-motion-both-e)
    nmap E (show-motion-both-E)

    ""*** Only highlights motions corresponding to the one you typed
    nmap w (show-motion-w)
    nmap W (show-motion-W)
    nmap b (show-motion-b)
    nmap B (show-motion-B)
    nmap e (show-motion-e)
    nmap E (show-motion-E)

Add these character-motion settings to your vimrc:

    ""Show motion for chars:
    nmap f (show-motion-f)
    nmap t (show-motion-t)
    nmap F (show-motion-F)
    nmap T (show-motion-T)
    nmap ; (show-motion-;)
    nmap , (show-motion-,)


Known limitations:

* `E` fails on highlighting the last character in the line


Errors on update?
* A gif was pushed on the repo, I realized it wasn't a good idea, thus I removed it from the repo and its history. The internet says this may cause some troubles.
* I changed the function's names, hence mappings need to be updated.

Thanks:

* IRC: #vim, sakkemo, bairui, Raimondi and many others
* Github: itchyny, haya14busa, Pyrohh
",,2014-01-04T13:59:02Z,2019-05-06T21:49:19Z,2,2,29,3,"('boucherm', 40), ('itchyny', 2)",0,0,
hussien89aa/AndroidTutorialForBeginners,Step by step to build Android apps using Android Studio," # The Complete Android App Development

### In this course you will learn how to make 17 online games, and apps for Android, using Java. Watch using a [ FREE Youtube Link](https://www.youtube.com/channel/UCVNrwqQVKuQtnHHDfuFKc4w/videos). 

Bellow, list of open source Apps that we build in tutorial

- [Find My Age  App](#).
- [Tic Tac Toe Local App](#).
- [Calculator App](#).
- [Pokémon Game App](#).
- [Zoo App](#).
- [Restaurants App](#).
- [Find Sunrise time App](#).
- [My Notes App](#).
- [Tic Tac Toe using Firebase App](#).
- [Facebook App using Firebase](#).
- [MediaPlayer App](#).
- [Alaram App](#).
- [Notification Channel App](#).
- [Light sensor App](#).
- [Nimbuzz vibrate](#).
- [Find My Phone App](#).
- [Twitter App using Php + MySQL](#).




![main](http://attach.alruabye.net/androidTutorialForBeginners/androidTutorialForBeginners.jpg)
 
 
 This source will help the beginners to start build their own Android  apps  from scratch. By the end of this course you will be able to build real world android apps. In this course you will learn how to build and design secure android apps avoiding Android Vulnerabilities, and how to work with android layout tools to design very attractive and responsive layout that work with different device size, then you will learn how to use Sqlite as local database storage  and Mysql as remote database storage, Also you will learn about web services and map. And  you will learn how to work with android device persimmons and access to device information and device services. Then you will learn how use Firebase to build apps with Real-time database, monetize your app, and other services that offered by firebase. In this tutorial you will learn how to build real world apps and online games like Twitter, Tic Tac Toy, and Find my phone
","'android', 'android-tutorial'",2016-09-26T16:36:28Z,2023-08-22T19:24:48Z,3,1,4323,282,"('hussienalrubaye', 34), ('hussien89aa', 5), ('hussien alrubaye', 1)",1,0,
raesene/bWAPP,,"## Archived repo

I'm not working on this any more, so the repo is getting archived. Feel free to fork it if it's useful :)

# bWAPP

This is just an instance of the OWASP [bWAPP project](http://www.itsecgames.com/) as a docker container.

The container is based on [tutum/lamp](https://hub.docker.com/r/tutum/lamp/)

just use 

```
docker run -d -p 80:80 raesene/bwapp
```

and you should be able to go to /install.php to set up your instance.
",,2015-09-17T12:46:24Z,2021-12-01T20:53:35Z,2,2,129,7,"('raesene', 5), ('l50', 1)",1,1,
IanHarvey/bluepy,Python interface to Bluetooth LE on Linux,"bluepy
======

Python interface to Bluetooth LE on Linux

This is a project to provide an API to allow access to Bluetooth Low Energy devices
from Python. At present it runs on Linux only; I've mostly developed it using a
Raspberry Pi, but it will also run on x86 Debian Linux.

The code is tested on Python 2.7 and 3.4; it should also work on 3.3.

There is also code which uses this to talk to a TI SensorTag (www.ti.com/sensortag).

An example to interface the Nordic Semiconductor ASA IoT Sensor Kit, Thingy:52 is available 
in thingy52.py (https://www.nordicsemi.com/eng/Products/Nordic-Thingy-52).

Installation
------------

The code needs an executable `bluepy-helper` to be compiled from C source. This is done
automatically if you use the recommended pip installation method (see below). Otherwise,
you can rebuild it using the Makefile in the `bluepy` directory.

To install the current released version, on most Debian-based systems:

    $ sudo apt-get install python-pip libglib2.0-dev
    $ sudo pip install bluepy

On Fedora do:

    $ sudo dnf install python-pip glib2-devel

For Python 3, you may need to use `pip3`:

    $ sudo apt-get install python3-pip libglib2.0-dev
    $ sudo pip3 install bluepy

*If this fails* you should install from source.

    $ sudo apt-get install git build-essential libglib2.0-dev
    $ git clone https://github.com/IanHarvey/bluepy.git
    $ cd bluepy
    $ python setup.py build
    $ sudo python setup.py install

I would recommend having command-line tools from BlueZ available for debugging. There
are instructions for building BlueZ on the Raspberry Pi at http://www.elinux.org/RPi_Bluetooth_LE.

Documentation
-------------

Documentation can be built from the sources in the docs/ directory using Sphinx.

An online version of this is currently available at: http://ianharvey.github.io/bluepy-doc/

License
-------

This project uses code from the bluez project, which is available under the Version 2
of the GNU Public License.

The Python files are released into the public domain by their author, Ian Harvey.

Release Notes
-------------

Release 1.3.0

- New getState() method for Peripheral class
- New exception structure / error reporting (#311, #317, #326)
  BTLEException now has subclasses BLTEDisconnectError, BTLEManagementError, etc.
  which report an error code and error message passed up from the lower layers, where
  appropriate.
- Partial merge #311: aids to debugging; bluepy-helper reports version; fix crash
- Partial merge #311 and #302: pair() and unpair() now supported
- Fix #169: 0-byte characteristic writes are now supported
- Merge #302: OOB data now supported
- Merge #312: better comments on sample code in docs, better scanner example
- Fix #292: Unicode string decoding errors in scan data
- Merge #308: don't ignore sensitivity option during discovery
- Merge #301: fix Peripheral documentation
- Fix #286: return list of services from Scan entry


Release 1.2.0
- Merge #245: Update underlying Bluez version to 5.47
- Merge #284: Readme updated with Fedora install instructions
- Merge #283: Fixes for passive scan interruption
- Merge #275, fix #259: non-ASCII device names now don't break decoding
- Fix #263, #278: return UUID in scan results
- Merge #262: Return correct address type in passive scan
 

Release 1.1.4:
- Further attempts to fix #158. setup.py rewritten.

*There was no release 1.1.3 made*

Release 1.1.2: *now deleted*
- Re #158: Try to make PyPI installation more robust
- Merge #214: add passive scan support
- Merge #213: Add Thingy:52 support

Release 1.1.1
- Workaround #200: remove -Werror from Makefile
- Fix #191: generate BTLEException not ValueError, if helper is killed
- Fix #189: error calling getCharacteristics() when Service has no characteristics
- Workaround #192: Use make -j1 explicitly

Release 1.1.0
- Merge #180: Peripheral.connect() can now take ScanEntry object (like constructor)
- Merge #162: Add build_ext builder to setup.py
- Merge #166: Fix crash in getServiceByUUID()
- Fix #148: Add UUIDs for declarations (e.g. 0x2800 = Primary Service Declaration)
- Fix #28: Sensortag accelerometer values now scaled properly
- Merge #89: Add support for descriptors
- Fix #157: make 'services' a property
- Fix #111: make parameter names match documentation
- Fix #128: Characteristic.write() was missing a return value
- Read battery level on Sensortag
- Formatting/style fixes (#170 and others)

Release 1.0.5
- Fix issue #123: Scanner documentation updated
- Fix #125: setup.py error reporting on Python 3 if compilation fails
- Fix for issue #127: setup.py fails to rebuild bluepy-helper 

Release 1.0.4
- Scanner now available as bluepy.blescan module and 'blescan' command
- Fix example scanner code in documentation
- Python 3 installation fixes
- Fix issues #69, #112, #115, #119

Release 1.0.3
- Now available on PyPI as `bluepy`. Installs via pip.

Release 0.9.12
- Support for CC2650 sensortag
- Documentation fixes
- Bug fix: DefaultDelegate has a handleDiscovery method
- Bug fix: keypress now works with both V1.4 and V1.5 firmware 


Release 0.9.11

- Minor consistency improvements & bug fixes
- Scanner now has getDevices() call
- Docs updated

Release 0.9.10

- Now with Scan functionality

Release 0.9.9

- Now based on Bluez r5.29
- UUIDs held in separate JSON file, script added to update from Web
- Added setup.py and __init__.py for use with setuptools
- Allows indications as well as notifications
- Bug fixes (see pull requests #46, #48, #35)

Release 0.9.0
- Support for Notifications
- SensorTag code now supports keypress service
- Bug fix for SetSecurityLevel
- Support for Random address type
- More characteristic and service UUIDs added

Release 0.2.0

- Sphinx-based documentation
- SensorTag optimisations 
- Improved command line interface to sensortag.py
- Added .gitignore file (github issue #17)

Release 0.1.0
- this has received limited testing and bug fixes on Python 3.4.1
- fix for exceptions thrown if peripheral sends notifications

Release dated 2-Jul-2014

- expand AssignedNumbers class definitions
- add getCommonName() to UUID type, returns human-friendly string

Release dated 14-Apr-2014:

- make btle.py useful from the command line
- add AssignedNumbers class

Release dated 12-Mar-2014
- add exceptions, and clean up better on failure

Initial release 19-Oct-2013:

TO DO list
----------

The following are still missing from the current release:
- Unit test 
- Peripheral role support



",,2013-10-19T08:35:00Z,2024-05-07T05:27:51Z,67,54,1578,101,"('IanHarvey', 70), ('Ian Harvey', 62), ('iamalazybum', 57), ('Ian Harvey', 13), ('PrzemoF', 12), ('mikimer', 10), ('mickiebyrd', 8), ('louiscaron', 7), ('beluga3858', 6), ('stephstcom', 5), ('gield', 4), ('ge0rg', 4), ('Clark Li', 4), ('agordon', 3), ('basil-huber', 3), ('briarfox', 3), ('markrages', 3), ('peterkersch', 3), ('aero-man', 3), ('csonsino', 2), ('adminq80', 2), ('tribela', 2), ('gandy92', 2), ('Thorsten-Sick', 2), ('tpoliaw', 2), ('michaelpetrov', 2), ('LucDachary', 2), ('devanlai', 2), ('kalfa', 2), ('LadislavOzobot', 1), ('omer-qadir', 1), ('balloob', 1), ('sm-Fifteen', 1), ('Rob Riggs', 1), ('Roger Dahl', 1), ('ronnymajani', 1), ('rmanders', 1), ('Shiselster', 1), ('kratz00', 1), ('crespum', 1), ('cijay', 1), ('jerom987', 1), ('jorges119', 1), ('julienberton', 1), ('miago', 1), ('nandhp', 1), ('oleg31415926', 1), ('slaypni', 1), ('voltagex', 1), ('alanbalich', 1), ('Alexander Fortin', 1), ('Andrea Panizza', 1), ('hominator', 1), ('Carey Sonsino', 1), ('hansmosh', 1), ('pearson', 1), ('Chris Piggin', 1), ('Clark Li', 1), ('Daniel-Christian-CardinalPeak', 1), ('danharvey', 1), ('erikcw', 1), ('fheinz', 1), ('fsaris', 1), ('gamnes', 1), ('Guillem Lefait', 1), ('GunnarI', 1), ('jeremyherbert', 1)",38,29,
marionettejs/backbone.marionette,The Backbone Framework,"Marionette.js

  

The Backbone Framework

  
    
  
  
    
  
  
    
  


  


# Marionette v5

Marionette is dropping its dependency on Backbone. That library is available here: https://github.com/marionettejs/marionette
Until further notices changes to `backbone.marionette` will be limited to fixes.  All new feature work will take place on `marionette`.

## Marionette v4

Marionette 4 is now available! See our
[upgrade notes](https://marionettejs.com/docs/v4.0.0/upgrade-v3-v4.html) for the differences between
v3 and v4. Please let us know if you encounter any issues so we can resolve
them and
[help us continue work on Marionette!](https://github.com/marionettejs/backbone.marionette/milestones/v4.x)

## About Marionette

Marionette is a composite application library for Backbone.js that
aims to simplify the construction of large scale JavaScript applications.
It is a collection of common design and implementation patterns found in
applications.

## Documentation

All of the documentation for Marionette can be found at

##### [marionettejs.com/docs/current](http://marionettejs.com/docs/current)

### App Architecture On Backbone's Building Blocks

Backbone provides a great set of building blocks for our JavaScript
applications. It gives us the core constructs that are needed to build
small apps, organize jQuery DOM events, or create single page apps that
support mobile devices and large scale enterprise needs. But Backbone is
not a complete framework. It's a set of building blocks. It leaves
much of the application design, architecture and scalability to the
developer, including memory management, view management, and more.

Marionette brings an application architecture to Backbone, along with
built in view management and memory management. It's designed to be a
lightweight and flexible library of tools that sits on top of Backbone,
providing the framework for building a scalable application.

Like Backbone itself, you're not required to use all of Marionette just
because you want to use some of it. You can pick and choose which features
you want to use. This allows you to work with other Backbone
frameworks and plugins easily. It also means that you are not required
to engage in an all-or-nothing migration to begin using Marionette.

### Chat with us

Find us [on gitter](https://gitter.im/marionettejs/backbone.marionette).

We're happy to discuss design patterns and learn how you're using Marionette.


### Key Benefits

* Scalable: applications built in modules with event-driven architecture
* Sensible defaults: Underscore templates are used for view rendering
* Easily modifiable: works with the specific needs of your application
* Reduce boilerplate: for all views, including specialized types
* Create: application visuals at runtime with `Region` and `View` objects
* Nested: `View`s and `CollectionView`s within visual regions
* Built-in: memory management and zombie-killing for `View`s, `CollectionViews`a and `Region`s
* Event-driven architecture: utilizing `Backbone.Radio`
* Flexible: ""as-needed"" architecture allowing you to pick and choose what you need
* And much, much more

## Source Code and Downloads

You can
[download the latest builds directly](https://github.com/marionettejs/backbone.marionette/tree/master/lib)
or visit the [downloads section on the Marionette website](http://marionettejs.com#download)
for more downloading options.

#### [MarionetteJS.com](http://marionettejs.com#download)

### NPM and Bower

Marionette is available via bower and npm:

```bash
# NPM
npm install backbone.marionette

# Bower
bower install marionette
```

## Release Notes And Upgrade Guide

**Changelog**: For change logs and release notes, see the
[changelog](changelog.md) file.

**Upgrade Guide**: Be sure to read [the upgrade guide](upgradeGuide.md)
for information on upgrading to the latest version of Marionette.


### Annotated Source Code

The source code for Marionette is heavily documented.
You can read the annotations for all the details of how Marionette works and advice on which methods to override.

##### [View the annotated source code](http://marionettejs.com/annotated-src/backbone.marionette)

## Compatibility and Requirements

MarionetteJS currently works with the following libraries:

* [jQuery](http://jquery.com) v1.8+
* [Underscore](http://underscorejs.org) v1.8.3 - v1.9.x
* [Backbone](http://backbonejs.org) v1.3.3
* [Backbone.Radio](https://github.com/marionettejs/backbone.radio) v2.0.0+

Marionette has not been tested against any other versions of these
libraries. You may or may not have success if you use a version other
than what is listed here.

## How to Contribute

If you would like to contribute to Marionette's source code, please read
the [guidelines for pull requests and contributions](CONTRIBUTING.md).
Following these guidelines will help make your contributions easier to
bring into the next release.

### [Github Issues](https://github.com/marionettejs/backbone.marionette/issues)

Report issues with Marionette, submit pull requests to fix problems, or to
create summarized and documented feature requests (preferably with pull
requests that implement the feature).
","'backbone', 'backbone-framework', 'framework', 'frontend', 'javascript', 'marionette', 'marionettejs'",2011-12-12T16:36:09Z,2024-04-15T09:14:19Z,372,316,7070,280,"('Derick Bailey', 1330), ('paulfalgout', 363), ('samccone', 286), ('jasonLaster', 114), ('jamesplease', 94), ('scott-w', 88), ('ahumphreys87', 66), ('denar90', 64), ('blikblum', 49), ('jamiebuilds', 40), ('megawac', 38), ('ianmstew', 31), ('rafde', 30), ('Scott Walton', 27), ('Andrew Cobby', 21), ('Jarrod Overson', 21), ('wesmangum', 21), ('jfairbank', 16), ('cobbweb', 13), ('jdaudier', 13), ('cmaher', 12), ('gyeates', 11), ('oatkiller', 10), ('jsoverson', 10), ('yethee', 9), ('Jarrod Overson', 9), ('Linus Gubenis', 9), ('stephanebachelier', 9), ('paulovieira', 9), ('Clemens-PANDA', 8), ('dmytroyarmak', 8), ('Jade Misenas', 7), ('jonotron', 7), ('fantactuka', 7), ('mbriggs', 7), ('vernondegoede', 7), ('rhubarbselleven', 6), ('JSteunou', 6), ('jgornick', 6), ('ifeins', 6), ('andrewhubbs', 6), ('Ben McCormick', 5), ('bzalasky', 5), ('MeoMix', 5), ('osama-lionheart', 4), ('existentialism', 4), ('SauloSilva', 4), ('taburetkin', 4), ('tony', 4), ('paulyoung', 4), ('Paul Wittmann', 4), ('agrberg', 4), ('38elements', 4), ('recurse', 4), ('brianmann', 4), ('Dylan Kirby', 4), ('joezimjs', 4), ('joelcox', 4), ('julik', 4), ('theredcoder', 4), ('Oliver Joseph Ash', 3), ('Oliver Joseph Ash', 3), ('RomanovRoman', 3), ('TerrenceLJones', 3), ('Radagaisus', 3), ('TheCloudlessSky', 3), ('testbrian', 3), ('davidsulc', 3), ('tabouassaleh', 3), ('ftdebugger', 3), ('jbarreiros', 3), ('KevM', 3), ('brantb', 3), ('Cameron Crothers', 3), ('duncanbeevers', 3), ('Elliot Foster', 3), ('aegyed91', 3), ('Al Scott', 3), ('sophacles', 3), ('nvivo', 3), ('fabriziofortino', 3), ('msiconolfi', 3), ('Jonathan Mahoney', 3), ('jisaacks', 3), ('jmorrell', 3), ('stsc3000', 2), ('zerkalica', 2), ('Sean Kelley', 2), ('teleological', 2), ('torifat', 2), ('Piotrek', 2), ('pascalpp', 2), ('aeksco', 2), ('Nima Mehanian', 2), ('nikolaifedorov', 2), ('ansman', 2), ('maniator', 2), ('moimikey', 2), ('stephenjordanmacallister', 2), ('rixth', 2), ('timgates42', 2), ('timsnadden', 2), ('pewniak747', 2), ('vermilion1', 2), ('wvankuipers', 2), ('creynders', 2), ('dnewkerk', 2), ('hashchange', 2), ('philippm', 2), ('redsquare', 2), ('barretts', 2), ('PatrickJS', 2), ('pglewis', 2), ('hlindset', 2), ('shokunin-kishitsu', 2), ('adriantrunzo', 2), ('airandfingers', 2), ('amitsnyderman', 2), ('L1fescape', 2), ('baalexander', 2), ('bruno-c', 2), ('ccamarat', 2), ('codespawner', 2), ('cpjolicoeur', 2), ('duclet', 2), ('ErichBSchulz', 2), ('jaridmargolin', 2), ('Jason', 2), ('jhwohlgemuth', 2), ('Matt Sheehan', 2), ('hallmark', 2), ('mariiapaniutina', 2), ('marcelklehr', 2), ('moricard', 2), ('zenlor', 2), ('vrinek', 2), ('Dremora', 2), ('kahwee', 2), ('jmca', 2), ('johnkpaul', 2), ('John Doerfler', 2), ('sontek', 2), ('ljepson', 2), ('garrison', 2), ('Jeff Keen', 2), ('xosofox', 1), ('p3drosola', 1), ('paultyng', 1), ('paulirish', 1), ('boxxxie', 1), ('PaulCapron', 1), ('pklingem', 1), ('ptbrowne', 1), ('Olivier Beaulieu', 1), ('nerdpruitt', 1), ('duffn', 1), ('philschatz', 1), ('hacfi', 1), ('gaogao1030', 1), ('rajivr', 1), ('mitchellrj', 1), ('robjefferies', 1), ('rjmackay', 1), ('romario333', 1), ('royling', 1), ('rmc33', 1), ('radar', 1), ('ryno1234', 1), ('Sal Hernandez', 1), ('clickclickonsal', 1), ('yolk', 1), ('bradlord', 1), ('kimjoar', 1), ('vespakoen', 1), ('caseycs', 1), ('Kristofer Selbekk', 1), ('Kyle Goggin', 1), ('KyleNeedham', 1), ('mindmelting', 1), ('LeonardLaszlo', 1), ('leoasis', 1), ('louissalin', 1), ('lsimoneau', 1), ('lukaszfiszer', 1), ('lshearer', 1), ('maratfakhreev', 1), ('mabana', 1), ('mariusbutuc', 1), ('mrobinsonuk', 1), ('marten', 1), ('molily', 1), ('mattj65817', 1), ('webxl', 1), ('Matthew Eagar', 1), ('pfeiffer', 1), ('MoOx', 1), ('mooyoul', 1), ('nginz', 1), ('nmpolo', 1), ('thenickcox', 1), ('clatour', 1), ('codejet', 1), ('csterritt', 1), ('d-nation', 1), ('drichard', 1), ('depoulo', 1), ('maxov', 1), ('kirkedev', 1), ('h-tane', 1), ('jarrad', 1), ('joeytheman', 1), ('jorinvo', 1), ('kwbock', 1), ('kycool', 1), ('lukesargeant', 1), ('lvv83', 1), ('maxlath', 1), ('mendicantx', 1), ('nikkypx', 1), ('nuragic', 1), ('pdufour', 1), ('raxer', 1), ('satchmorun', 1), ('skubus', 1), ('thylo', 1), ('ducin', 1), ('trevordixon', 1), ('xescugc', 1), ('zourtney', 1), ('kaineer', 1), ('Shammel Lee', 1), ('zimme', 1), ('UberMouse', 1), ('Ted Hille', 1), ('TDu', 1), ('ThomasCrevoisier', 1), ('z0mt3c', 1), ('tomdev', 1), ('zyzniewski', 1), ('ToonRQ', 1), ('trevvvy', 1), ('Ulexus', 1), ('Viktor Nagy', 1), ('Vladislav Botvin', 1), ('dakota', 1), ('wbinnssmith', 1), ('willurd', 1), ('Yahkob', 1), ('z3ch', 1), ('a5huh', 1), ('aaronz8', 1), ('adam-werner', 1), ('adorsk', 1), ('andrewmnlv', 1), ('dithidi', 1), ('cedrictools', 1), ('CharlyJazz', 1), ('cjroebuck', 1), ('Brant Bobby', 1), ('bafolts', 1), ('nono', 1), ('buremba', 1), ('minglecm', 1), ('komali2', 1), ('JProgrammer', 1), ('Cameron Rivers', 1), ('lisathesecond', 1), ('chytanya', 1), ('powmedia', 1), ('Chip Lay', 1), ('spinloop', 1), ('ChrisGrant', 1), ('cmcculloh', 1), ('Courey', 1), ('JohnErnstDev', 1), ('Pleochism', 1), ('datiecher', 1), ('unindented', 1), ('sarenji', 1), ('David Schäfer', 1), ('tilleryd', 1), ('dciccale', 1), ('dennis-g', 1), ('dschulz', 1), ('bildja', 1), ('jdreesen', 1), ('Aaron', 1), ('agibralter', 1), ('aarongreenlee', 1), ('asheriff', 1), ('abiyasa', 1), ('adamboduch', 1), ('sheerun', 1), ('kachkaev', 1), ('cybernetlab', 1), ('ath0mas', 1), ('bazineta', 1), ('ammeep', 1), ('popovicsandras', 1), ('Andre Asselin', 1), ('eskimoblood', 1), ('andreif', 1), ('natalan', 1), ('AndrewHenderson', 1), ('miphe', 1), ('anthony-redFox', 1), ('Anubh', 1), ('jcrben', 1), ('bendman', 1), ('Ben Fenton', 1), ('Ben Smith', 1), ('slashdotdash', 1), ('beng-hee-eu', 1), ('Bernd Matzner', 1), ('soldiermoth', 1), ('jcurtis', 1), ('codeimpossible', 1), ('Jean Carlos Meninno', 1), ('chikamichi', 1), ('isochronous', 1), ('jessesanford', 1), ('jklmli', 1), ('JocelynDelalande', 1), ('kennydude', 1), ('jo', 1), ('gaxunil', 1), ('JohnSpeno', 1), ('jonkoops', 1), ('wuservices', 1), ('coombsj', 1), ('Jonathan El-Bizri', 1), ('jonknapp', 1), ('Jonathan Mahoney', 1), ('umeboshi2', 1), ('nibblebot', 1), ('jridgewell', 1), ('mochja', 1), ('kyanny', 1), ('kevindente', 1), ('Kevin Dew', 1), ('kzhaokol', 1), ('nlhuykhang', 1), ('KiT O', 1), ('koorgoo', 1), ('sdinesh86', 1), ('DjebbZ', 1), ('dminkovsky', 1), ('dkurucz', 1), ('dougalg', 1), ('drewda', 1), ('dunckr', 1), ('Edan Schwartz', 1), ('elliotf', 1), ('Emil Ajdyna', 1), ('ericmatthys', 1), (""Eric O'Connell"", 1), ('erikahlswede', 1), ('Erin Swenson-Healey', 1), ('Erwin Poeze', 1), ('echernyavskiy', 1), ('felipefzdz', 1), ('FlorentD', 1), ('frankcortes', 1), ('greguz', 1), ('chancancode', 1), ('gmaiztegi', 1), ('chiefGui', 1), ('gkorland', 1), ('gpgekko', 1), ('ianShoenberger', 1), ('JackEllis', 1), ('JackEllis', 1)",227,195,
dave-tucker/docker-network-demos,Demos of Docker's New Networking,"# docker-network-demos
Demos of Docker's New Networking

This repo contains a bunch of scripts for you to get started with Docker's new networking features 

## Pre-Requsites

These scripts assume the following

1) You have Docker Machine installed
2) You are using Docker 1.9 or later

Both of these components can be installed using the [Docker Toolbox](https://www.docker.com/docker-toolbox)

## What's what?

| Environment                            | Script Name          |
|----------------------------------------|----------------------|
| Multi-host Networking using Virtualbox | `multihost-local.sh` |
| Multi-host Networking using Amazon EC2 | `multihost-aws.sh`   |
| Swarm w/ Networking on Virtualbox      | `swarm-local.sh`     |
| Swarm w/ Networking on Amazon EC2      | `swarm-aws.sh`       |

## Adapting to your environment

So you want to use a different Docker Machine driver! Cool.
Here are some things you might want to know

- You can ""borrow"" the security group configuration from the AWS scripts
- You *MUST* check the interface name used for `cluster-advertise`. Pick the wrong name and your daemon won't start

## What to do next

Check out the [docs](http://docs.docker.com/engine/userguide/networking/dockernetworks/)
Have fun!

## Contributing?

Made changes? Want to contribute a new script for another cloud provider... or even for networking across clouds?
Raise a PR!

## License

Apache 2.0
https://www.apache.org/licenses/LICENSE-2.0.txt
",,2015-10-20T09:56:51Z,2015-11-06T01:29:21Z,1,1,84,10,"('dave-tucker', 11)",0,0,
bolthar/ruby-hackernews,An API over hacker news's site,"An API over Hacker News

http://stillmaintained.com/bolthar/ruby-hackernews.png

== Requirements

    mechanize (>= 1.0.0)
    require_all (>= 1.1.0)

== Installation

    gem install ruby-hackernews

then, in your script:

    require 'ruby-hackernews'

before using it. If you want to include the namespace (RubyHackernews), add

    include RubyHackernews

otherwise, you'll have to access the gem's classes adding the module, like this:

    RubyHackernews::Entry.all

== Entries

You can get entries on the main page with:

    Entry.all       # returns the main page's entries as an array

You can provide a number of pages:

    Entry.all(3)    # will return the entries on the first 3 pages

There are methods for getting specific entry types:

    Entry.questions # gets the first page of questions (ask HN)
    Entry.newest    # gets the first page of new links (new)
    Entry.jobs      # gets the first page of job offerts (jobs)
    Entry.shows     # gets the first page of shows (show HN)
    Entry.new_shows # gets the first page of new shows (show HN new)

You can also get a single entry by its ID:

    Entry.find(3102321) # gets that specific entry (warning: number will be 0!)

Each Entry instance has the following data:

    entry = Entry.all.first # gets the top entry on the mainpage

    entry.number       # the entry's position on HN

    entry.link.title   # the link's name on HN
    entry.link.href    # the actual link
    entry.link.site    # the referring site, if any

    entry.voting.score # the entry's score on HN

    entry.user.name    # the submitter's user name

    entry.time         # the elapsed time from submission

    entry.text         # the text of the submission (ask/jobs only)
                       # NOTE: it will fetch the inner page 

After you've logged in (see below) you can do the following

    entry.upvote                                # votes the entry
    entry.write_comment(""mycomment"")            # adds a comment to the entry
    Entry.submit(""mytitle"", ""myurl"")            # submit a new link
    Entry.submit(""myquestion"", ""question text"") # submit a new question 

    user.submissions.first.comments_url         # returns the url to the current user's comments

== Comments

You get an entry's comments with:

    entry.comments

You can also get a specific comment by id with:

    Comment.find(""1234"") # returns the comments with id 1234,
                         # and its subcomments.

Note that the method above will send a request to HN. If you just need the comments' count or url, you can instead use:

    entry.comments_count
    
and
  
    entry.comments_url

Either of which will not issue a request to HN's site. 

You can also get the newest comments on HN with:

    Comments.newest
    Comments.newest(3)  # gets the first 3 pages of new comments

Each Comment instance has the following data:

    comment = Entry.all.first.comments.first # gets the first comment of the first entry on HN's main page

    comment.id             # comment's unique identifier
    comment.text           # comment's body
    comment.user.name      # poster's user name on HN
    comment.voting.score   # comment's score

Comments are enumerable and threaded, so you can do like:

    comment[2][0]          # gets the third reply to this comment, then the first reply to the reply
    comment.first          # gets the first reply to this comment
    comment.select do |c|  # gets all the comment replies which text contains ""test""
      text ~= /test/
    end
    comment.parent         # gets the comment's parent (nil if no parent)

Once you're logged in (see below), you can do the following:

    comment.upvote
    comment.downvote
    comment.reply(""mycomment"")

== Logging in

You define a user with:

    user = User.new(""username"")

Then, you log in with:

    user.login(""password"")

Or, you can create a new use with that name:

    user.signup(""password"") # don't abuse this!

You will be also logged in with the new user. So, no need to call user#login after user#signup.

You can log out with:

    user.logout

You have to log out before logging in with a different user.

You can also get the current users submission list by doing this:

    user.submissions
    
This will return a new Entry instance. For example:

    user.submissions.first.comment_url
    
Will return the HN comment url of the last submitted story of that user

== TO DO

    Get user info (comments, saved)
    Change user info/settings

== THANKS TO

- Anton Katunin ( https://github.com/antulik ) for adding the gemfile and putting all specs into modules
- Mike Kelly ( https://github.com/mikekelly ) for fixing a bug in TimeInfo.time
- Marc Köhlbrugge ( http://github.com/marckohlbrugge ) fox fixing and formatting the documentation
- Peter Cooper ( http://github.com/peterc ) for bug reports
- Peter Boctor ( http://github.com/boctor ) for fixing a bug about authentication
- Josh Ellington ( http://github.com/joshellington ) for reporting a bug about job entries
- Wayne ( http://github.com/BlissOfBeing ) for adding User.submissions, Entry.comments_url and cleaning up the Rakefile
- Daniel Da Cunha ( http://github.com/ddacunha ) for a fix on Entry#comments_count
- Nathan Campos ( http://github.com/nathanpc) for adding #text to Entry
- Girish Sonawane ( https://github.com/girishso) for adding Entry#shows and Entry#new_shows methods
- Niels Van Aken ( https://github.com/nvaken ) for a bugfix in EntryPageParser
- Pedro Lambert ( https://github.com/p-lambert ) for fixing bugs and improving structure of CommentInfoParser, TimeInfoParser and UserInfoParser
- FreedomBen ( https://github.com/FreedomBen ) for fixing a typo in the readme
- Davide Santangelo ( https://github.com/davidesantangelo ) for reporting a bug related to jobs and show HN entries
",,2010-09-06T12:08:38Z,2017-02-13T03:15:21Z,22,6,113,7,"('Andrea Dallera', 25), ('andrea@SONGOKU', 24), ('andrea', 12), ('antulik', 9), ('andrea', 8), ('andrea@PICCOLO', 6), ('girishso', 4), ('Wayne Hoover', 4), ('andrea', 4), ('marckohlbrugge', 3), ('andrea@SONGOKU', 3), ('andrea@VEGETA', 3), ('p-lambert', 2), ('Andrea@VEGETA', 1), ('Daniel Da Cunha', 1), ('FreedomBen', 1), ('Mike Kelly', 1), ('andrea', 1), ('andrea', 1), ('andrea', 1), ('andrea@VEGETA', 1), ('boctor', 1)",9,2,
JustJenFelice/lab,simurai's lab,,,2012-02-14T15:54:22Z,2012-02-13T03:24:31Z,1,1,3,3,"('simurai', 15)",0,0,
shykes/devbox,Solomon's dev environment,,,2013-03-02T01:37:23Z,2016-11-03T13:51:42Z,1,0,95,8,"('Solomon Hykes', 12)",0,0,
cool2528/baiduCDP,百度网盘下载神器,"# 关于更新
此项目停止维护了 工作太忙没时间了
# 简介
BaiduCDP 是工作业余时间使用C/C++写的一个百度网盘高速下载工具,通过分析百度网盘Web接口API结合aria2实现多线程高速下载,目前只能在Windows平台下使用。
## 构建
BaiduCDP 依赖第三方库如下
1.boost
2.openssl 
3.zlib 
4.rapidjson 
5.libcurl 
6.miniblink 
7.glog 
##### 1.获取源代码
> git clone https://github.com/cool2528/baiduCDP.git
##### 2.下载依赖第三方库
> 到这里下载 除boost以外的第三方库
https://github.com/cool2528/baiduCDP/releases/tag/1.0.0
至于Node.dll可以去https://github.com/cool2528/baiduCDP/releases/tag/1.0.1
成品文件中提取也可以直接下载miniblin编译
##### 3.构建环境
> 使用Visual Studio 2015 因为第三库我自己构建的都是 vs2015编译构建的
##### 4.下载UI界面源代码
> git clone https://github.com/cool2528/BaiduCdpUi.git
下载下来后新建一个文件夹重命名为`ui`把Ui界面的源码文件拷贝到`ui`文件夹下
然后把`ui`文件夹拷贝到`BaiduCDP`项目下`Debug`目录下编译生成即可
##### 5.使用效果
>1.先启动BaiduCDP.exe 点击登录百度网盘按钮登录成功后即可使用
![执行结果](https://i.loli.net/2019/02/21/5c6e1a5e9bba5.gif)
",,2019-01-11T07:33:51Z,2020-01-02T10:41:40Z,1,1,1574,75,"('cool2528', 19)",0,0,
mwilliams/d2s3,Rails plugin which provides a form helper to upload files directly to Amazon's S3 using an HTTP POST ,"# **d2s3 (Direct to S3)**
The d2s3 (direct to s3) gem adds is a simple Ruby on Rails helper that generates an upload form that will take a given file and upload it directly to your S3 bucket, bypassing your server.  This has various benefits, the biggest being that a large upload will not tie up your server from serving other requests.  This gem is based on the instructions from the following Amazon tutorial: [http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1434](http://developer.amazonwebservices.com/connect/entry.jspa?externalID=1434/ ""Browser Uploads to S3 using HTML POST Forms"")

### Why?
This was built as a solution to a problem we had where images being uploaded to be processed by [Paperclip](http://thoughtbot.com/projects/paperclip ""Thoughtbot - Paperclip"") were consuming [Thin](http://code.macournoyer.com/thin/ ""Thin - Another Web Server"") servers so they were unable to process other requests.

#### Install:

	gem install d2s3

#### An example workflow using d2s3
 1. Upload file with the `s3_http_upload_tag` helper form tag
 2. With the data returned from the GET HTTP request from Amazon, create a message using Amazon's SQS service with the appropriate information needed to later process the image with [Paperclip](http://thoughtbot.com/projects/paperclip ""Thoughtbot - Paperclip"")
 3. Create an API end point for a background process to access that accepts information to process the image with Paperclip.  In our case, it accepts the ID of a photo album and the path to the photo to be processed
 4. Running a back end process that monitors the SQS queue for new images and processes them immediately

We don't have immediate processing of our images with this workflow, but it's very quick assuming how large the queue is and how many back end processes we have actually running through the queue.

### Example d2s3 usage
```ruby
 'uploads',
			:content_type => 'image/jpeg',
			:redirect => image_processing_url,
			:acl => 'public-read',
			:max_filesize => 5.megabytes,
			:submit_button => '',
			:form => {:style => 'display: inline;'} %>
```
The above helper will generate the following similar HTML form, generating all of the appropriate field keys, policy, and signature based on your Amazon Web Services YAML configuration file. The form parameter also accepts a class and id for further customization.
```html

  
  
  
  
  
  
  
  

```
### Return HTTP GET request from Amazon made to the redirect you declared
    Parameters: {""bucket""=>""BUCKET_NAME"",
                 ""etag""=>""ETAG_HASH"",
                 ""action""=>""YOUR_REDIRECT_URL"",
                 ""controller""=>""CONTROLLER"",
                 ""key""=>""PATH/FILENAME.EXTENSION""}

### Options:
* **:content_type**
  * Accepts a standard content type, otherwise it will default to binary/octet-stream
* **:redirect**
  * Directs the form where the GET request from Amazon should be made once the HTTP POST is successful
* **:success\_action\_status**
  * The status code returned to the client upon successful upload if success_action_redirect is not specified. Accepts 200, 201 and 204. Defaults to 204
* **:acl**
  * Accepts either 'public-read' or 'private'.  If blank, it defaults to 'public-read'
* **:expiration_date**
  * Accepts time in the form of ""3.hours"" or ""25.minutes"".  If blank, it defaults to a 10 hour window before the policy on the upload expires
* **:max_filesize**
  * Accepts a max file size in the format of ""5.megabytes"".  If blank, it defaults to 1.megabyte
* **:submit_button**
  * Accepts any text to represent the submit button for the form.  This allows for a very custom submit button.  If blank, it defaults to ``
* **:form => {:id => '', :class => '', :style => ''}**
  * Accepts a hash of :class, :id, and :style to add customization to the form as a whole

### **Contributors**
* _**Matthew Williams**_
* _**Gabriel Cebrian**_
* _**Patrick Jones**_

Thanks to the [s3-swf-upload](http://github.com/elcgit/s3-swf-upload-plugin/tree/master ""s3-swf-upload GitHub Project Page"") plugin which code was borrowed from to make this project happen.
",,2009-03-10T18:52:56Z,2013-08-14T13:32:18Z,6,3,111,6,"('mwilliams', 26), ('gabceb', 4), ('aeden', 3), ('Gun.io Whitespace Robot', 1), ('Ken Mayer and Thomas Olusson', 1), ('patrick jones', 1)",3,0,
AlexLiuSheng/BadgeView,a BadeView  base on android,"# BadgeView
a BadeView  base on android



## include:

      `compile 'com.allenliu.badgeview:library:1.1.1'`（newest）
## bind like this:

     BadgeFactory.create(this)
    .setTextColor(Color.White)
    .setWidthAndHeight(25,25)
    .setBadgeBackground(Color.Red)
    .setTextSize(10)
    .setBadgeGravity(Gravity.Right|Gravity.Top)
    .setBadgeCount(20)
    .setShape(BadgeView.SHAPE_CIRCLE)
    .setSpace(10,10)
    .bind(view);
     
if u want to set space dont use ~~setMargin()~~,use `setSpace` instead.
## There are some other constructer methods and you can be easy to create your own shape :

    BadgeFactory.createDot(this).setBadgeCount(20).bind(imageView);
    BadgeFactory.createCircle(this).setBadgeCount(20).bind(imageView);
    BadgeFactory.createRectangle(this).setBadgeCount(20).bind(imageView);
    BadgeFactory.createOval(this).setBadgeCount(20).bind(imageView);
    BadgeFactory.createSquare(this).setBadgeCount(20).bind(imageView);
    BadgeFactory.createRoundRect(this).setBadgeCount(20).bind(imageView);
## unbind view just use `unbind` method.
   
     badgeView.unbind();

## history version
  - v1.0.6  
  add `setMargin`method,using this method you can change the position of badgeview,but the width of bindview or the height of bindview will be changed.see image effect.
  
  - v1.1.1
  add `setSpace`method,it replace origin method `setMargin`.now `setMargin` is a Deprecated method.Use `setSpace` method to set space  between view and badgeview instead.

## License
        
        Copyright 2016 AllenLiu.

        Licensed to the Apache Software Foundation (ASF) under one or more contributor
        license agreements. See the NOTICE file distributed with this work for
        additional information regarding copyright ownership. The ASF licenses this
        file to you under the Apache License, Version 2.0 (the ""License""); you may not
        use this file except in compliance with the License. You may obtain a copy of
        the License at

        http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an ""AS IS"" BASIS, WITHOUT
        WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
        License for the specific language governing permissions and limitations under
        the License.
welecome to star,thank you.
","'android', 'badge', 'badges', 'badgeview', 'bindview'",2016-07-15T03:22:59Z,2022-08-13T20:47:25Z,1,1,686,20,"('AlexLiuSheng', 24)",0,0,
StanzaOrg/lbstanza,L.B. Stanza Programming Language,"# L.B. Stanza Programming Language

L.B. Stanza (or Stanza for short) is a new optionally-typed general purpose programming language designed to help programmers tackle the complexity of architecting large programs and significantly increase the productivity of application programmers across the entire software development life cycle.

Visit www.lbstanza.org for details.
",,2023-03-16T18:12:57Z,2024-06-12T20:37:08Z,22,15,20,6,"('CuppoJava', 5175), ('tjknoth', 123), ('jackbackrack', 122), ('Oleg Pliss', 87), ('jwatson0', 45), ('Tyler Lanphear', 19), ('erwin-lau', 16), ('m-hilgendorf', 16), ('tylanphear', 12), ('Mike Hilgendorf', 10), ('alijitx', 9), ('callendorph', 9), ('m-hilgendorf', 5), ('dwnusbaum', 2), ('OlegPliss', 2), ('ariel-hi', 1), ('Bertrand Pellenard', 1), ('fgreen', 1), ('Patrick Li', 1), ('PhilippeFerreiraDeSousa', 1), ('Philippe Ferreira De Sousa', 1), ('hvze', 1)",7,4,
uknownothingsnow/JsBridge,"android java and javascript bridge, inspired by wechat webview jsbridge","# JsBridge

-----

inspired and modified from [this](https://github.com/jacin1/JsBridge) and wechat jsBridge file, with some bugs fix and feature enhancement.

This project make a bridge between Java and JavaScript.

It provides safe and convenient way to call Java code from js and call js code from java.

## How JsBridge Work
![JsBridge](./JsBridgeWork.png)

## Demo
![JsBridge Demo](https://raw.githubusercontent.com/lzyzsd/JsBridge/master/JsBridge.gif)

## Usage

## JitPack.io

I strongly recommend https://jitpack.io

```groovy
repositories {
    // ...
    maven { url ""https://jitpack.io"" }
}

dependencies {
    compile 'com.github.lzyzsd:jsbridge:1.0.4'
}
```

## Use it in Java

add com.github.lzyzsd.jsbridge.BridgeWebView to your layout, it is inherited from WebView.

### Register a Java handler function so that js can call

```java

    webView.registerHandler(""submitFromWeb"", new BridgeHandler() {
        @Override
        public void handler(String data, CallBackFunction function) {
            Log.i(TAG, ""handler = submitFromWeb, data from web = "" + data);
            function.onCallBack(""submitFromWeb exe, response data from Java"");
        }
    });

```

js can call this Java handler method ""submitFromWeb"" through:

```javascript

    WebViewJavascriptBridge.callHandler(
        'submitFromWeb'
        , {'param': str1}
        , function(responseData) {
            document.getElementById(""show"").innerHTML = ""send get responseData from java, data = "" + responseData
        }
    );

```

You can set a default handler in Java, so that js can send message to Java without assigned handlerName

```java

    webView.setDefaultHandler(new DefaultHandler());

```

```javascript

    window.WebViewJavascriptBridge.doSend(
        data
        , function(responseData) {
            document.getElementById(""show"").innerHTML = ""repsonseData from java, data = "" + responseData
        }
    );

```

### Register a JavaScript handler function so that Java can call

```javascript

    WebViewJavascriptBridge.registerHandler(""functionInJs"", function(data, responseCallback) {
        document.getElementById(""show"").innerHTML = (""data from Java: = "" + data);
        var responseData = ""Javascript Says Right back aka!"";
        responseCallback(responseData);
    });

```

Java can call this js handler function ""functionInJs"" through:

```java

    webView.callHandler(""functionInJs"", new Gson().toJson(user), new CallBackFunction() {
        @Override
        public void onCallBack(String data) {

        }
    });

```
You can also define a default handler use init method, so that Java can send message to js without assigned handlerName

for example:

```javascript

    window.WebViewJavascriptBridge.init(function(message, responseCallback) {
        console.log('JS got a message', message);
        var data = {
            'Javascript Responds': 'Wee!'
        };
        console.log('JS responding with', data);
        responseCallback(data);
    });

```

```java
    webView.send(""hello"");
```

will print 'JS got a message hello' and 'JS responding with' in webview console.

### Switch to CustomWebview
* activity_main.xml
```xml
    <com.github.lzyzsd.jsbridge.example.CustomWebView
        android:id=""@+id/webView""
        android:layout_width=""match_parent""
        android:layout_height=""match_parent"" >
     
```
* MainActivity.java
Class BridgeWebview change to CustomWebview;
```java
    CustomWebView webView = (CustomWebView) findViewById(R.id.webView);
    
```

## Notice

This lib will inject a WebViewJavascriptBridge Object to window object.
You can listen to `WebViewJavascriptBridgeReady` event to ensure `window.WebViewJavascriptBridge` is exist, as the blow code shows:

```javascript

    if (window.WebViewJavascriptBridge) {
        //do your work here
    } else {
        document.addEventListener(
            'WebViewJavascriptBridgeReady'
            , function() {
                //do your work here
            },
            false
        );
    }

```

Or put all JsBridge function call into `window.WVJBCallbacks` array if `window.WebViewJavascriptBridge` is undefined, this task queue will be flushed when `WebViewJavascriptBridgeReady` event triggered.

Copy and paste setupWebViewJavascriptBridge into your JS:

```javascript
function setupWebViewJavascriptBridge(callback) {
	if (window.WebViewJavascriptBridge) {
        return callback(WebViewJavascriptBridge);
    }
	if (window.WVJBCallbacks) {
        return window.WVJBCallbacks.push(callback);
    }
	window.WVJBCallbacks = [callback];
}
```

Call `setupWebViewJavascriptBridge` and then use the bridge to register handlers or call Java handlers:

```javascript
setupWebViewJavascriptBridge(function(bridge) {
	bridge.registerHandler('JS Echo', function(data, responseCallback) {
		console.log(""JS Echo called with:"", data);
		responseCallback(data);
    });
	bridge.callHandler('ObjC Echo', {'key':'value'}, function(responseData) {
		console.log(""JS received response:"", responseData);
	});
});
```

It same with https://github.com/marcuswestin/WebViewJavascriptBridge, that would be easier for you to define same behavior in different platform between Android and iOS. Meanwhile, writing concise code.

## License

This project is licensed under the terms of the MIT license.
",,2015-02-26T12:10:58Z,2024-05-13T05:14:53Z,34,20,9658,256,"('uknownothingsnow', 41), ('Bruce Lee', 16), ('huangyy', 8), ('beilo', 5), ('Bruce Lee', 4), ('Anshiii', 3), ('leijie', 3), ('guofeng007', 3), ('LandChanning', 2), ('warnerliu', 2), ('joe223', 2), ('akai', 2), ('ZhengAn', 2), ('Guo,Feng(RIM)', 2), ('gf', 1), ('haoxiqiang', 1), ('imliujun', 1), ('leoraylei', 1), ('markzhai', 1), ('unknown', 1), ('sdarchy', 1), ('wangmingxing', 1), ('kingwang666', 1), ('liu-wanshun', 1), ('petter-gao', 1), ('fengwan', 1), ('cw881014', 1), ('CoderMonkie', 1), ('jitpack-io', 1), ('Jeffrey', 1), ('SpringHgui', 1), ('turkyden', 1), ('BingoStyle', 1), ('Bingo', 1)",20,12,
mymmsc/books,常用书籍,"所有书籍均来自互联网的公开下载，如果收集的书籍涉及版权问题，请告知我删除它。  
All books are downloaded from the Internet. If the collected books involve copyright issues, please let me know to delete them.  

",,2015-02-08T08:31:19Z,2023-02-08T01:22:38Z,3,2,2203,129,"('mymmsc', 66), ('王锋', 6), ('taotieren', 3)",0,0,
psf/black,The uncompromising Python code formatter,"[![Black Logo](https://raw.githubusercontent.com/psf/black/main/docs/_static/logo2-readme.png)](https://black.readthedocs.io/en/stable/)

The Uncompromising Code Formatter












> “Any color you like.”

_Black_ is the uncompromising Python code formatter. By using it, you agree to cede
control over minutiae of hand-formatting. In return, _Black_ gives you speed,
determinism, and freedom from `pycodestyle` nagging about formatting. You will save time
and mental energy for more important matters.

Blackened code looks the same regardless of the project you're reading. Formatting
becomes transparent after a while and you can focus on the content instead.

_Black_ makes code review faster by producing the smallest diffs possible.

Try it out now using the [Black Playground](https://black.vercel.app). Watch the
[PyCon 2019 talk](https://youtu.be/esZLCuWs_2Y) to learn more.

---

**[Read the documentation on ReadTheDocs!](https://black.readthedocs.io/en/stable)**

---

## Installation and usage

### Installation

_Black_ can be installed by running `pip install black`. It requires Python 3.8+ to run.
If you want to format Jupyter Notebooks, install with `pip install ""black[jupyter]""`.

If you can't wait for the latest _hotness_ and want to install from GitHub, use:

`pip install git+https://github.com/psf/black`

### Usage

To get started right away with sensible defaults:

```sh
black {source_file_or_directory}
```

You can run _Black_ as a package if running it as a script doesn't work:

```sh
python -m black {source_file_or_directory}
```

Further information can be found in our docs:

- [Usage and Configuration](https://black.readthedocs.io/en/stable/usage_and_configuration/index.html)

_Black_ is already [successfully used](https://github.com/psf/black#used-by) by many
projects, small and big. _Black_ has a comprehensive test suite, with efficient parallel
tests, and our own auto formatting and parallel Continuous Integration runner. Now that
we have become stable, you should not expect large formatting changes in the future.
Stylistic changes will mostly be responses to bug reports and support for new Python
syntax. For more information please refer to
[The Black Code Style](https://black.readthedocs.io/en/stable/the_black_code_style/index.html).

Also, as a safety measure which slows down processing, _Black_ will check that the
reformatted code still produces a valid AST that is effectively equivalent to the
original (see the
[Pragmatism](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#ast-before-and-after-formatting)
section for details). If you're feeling confident, use `--fast`.

## The _Black_ code style

_Black_ is a PEP 8 compliant opinionated formatter. _Black_ reformats entire files in
place. Style configuration options are deliberately limited and rarely added. It doesn't
take previous formatting into account (see
[Pragmatism](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#pragmatism)
for exceptions).

Our documentation covers the current _Black_ code style, but planned changes to it are
also documented. They're both worth taking a look at:

- [The _Black_ Code Style: Current style](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html)
- [The _Black_ Code Style: Future style](https://black.readthedocs.io/en/stable/the_black_code_style/future_style.html)

Changes to the _Black_ code style are bound by the Stability Policy:

- [The _Black_ Code Style: Stability Policy](https://black.readthedocs.io/en/stable/the_black_code_style/index.html#stability-policy)

Please refer to this document before submitting an issue. What seems like a bug might be
intended behaviour.

### Pragmatism

Early versions of _Black_ used to be absolutist in some respects. They took after its
initial author. This was fine at the time as it made the implementation simpler and
there were not many users anyway. Not many edge cases were reported. As a mature tool,
_Black_ does make some exceptions to rules it otherwise holds.

- [The _Black_ code style: Pragmatism](https://black.readthedocs.io/en/stable/the_black_code_style/current_style.html#pragmatism)

Please refer to this document before submitting an issue just like with the document
above. What seems like a bug might be intended behaviour.

## Configuration

_Black_ is able to read project-specific default values for its command line options
from a `pyproject.toml` file. This is especially useful for specifying custom
`--include` and `--exclude`/`--force-exclude`/`--extend-exclude` patterns for your
project.

You can find more details in our documentation:

- [The basics: Configuration via a file](https://black.readthedocs.io/en/stable/usage_and_configuration/the_basics.html#configuration-via-a-file)

And if you're looking for more general configuration documentation:

- [Usage and Configuration](https://black.readthedocs.io/en/stable/usage_and_configuration/index.html)

**Pro-tip**: If you're asking yourself ""Do I need to configure anything?"" the answer is
""No"". _Black_ is all about sensible defaults. Applying those defaults will have your
code in compliance with many other _Black_ formatted projects.

## Used by

The following notable open-source projects trust _Black_ with enforcing a consistent
code style: pytest, tox, Pyramid, Django, Django Channels, Hypothesis, attrs,
SQLAlchemy, Poetry, PyPA applications (Warehouse, Bandersnatch, Pipenv, virtualenv),
pandas, Pillow, Twisted, LocalStack, every Datadog Agent Integration, Home Assistant,
Zulip, Kedro, OpenOA, FLORIS, ORBIT, WOMBAT, and many more.

The following organizations use _Black_: Facebook, Dropbox, KeepTruckin, Lyft, Mozilla,
Quora, Duolingo, QuantumBlack, Tesla, Archer Aviation.

Are we missing anyone? Let us know.

## Testimonials

**Mike Bayer**, [author of `SQLAlchemy`](https://www.sqlalchemy.org/):

> I can't think of any single tool in my entire programming career that has given me a
> bigger productivity increase by its introduction. I can now do refactorings in about
> 1% of the keystrokes that it would have taken me previously when we had no way for
> code to format itself.

**Dusty Phillips**,
[writer](https://smile.amazon.com/s/ref=nb_sb_noss?url=search-alias%3Daps&field-keywords=dusty+phillips):

> _Black_ is opinionated so you don't have to be.

**Hynek Schlawack**, [creator of `attrs`](https://www.attrs.org/), core developer of
Twisted and CPython:

> An auto-formatter that doesn't suck is all I want for Xmas!

**Carl Meyer**, [Django](https://www.djangoproject.com/) core developer:

> At least the name is good.

**Kenneth Reitz**, creator of [`requests`](https://requests.readthedocs.io/en/latest/)
and [`pipenv`](https://readthedocs.org/projects/pipenv/):

> This vastly improves the formatting of our code. Thanks a ton!

## Show your style

Use the badge in your project's README.md:

```md
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)
```

Using the badge in README.rst:

```
.. image:: https://img.shields.io/badge/code%20style-black-000000.svg
    :target: https://github.com/psf/black
```

Looks like this:
[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/psf/black)

## License

MIT

## Contributing

Welcome! Happy to see you willing to make the project better. You can get started by
reading this:

- [Contributing: The basics](https://black.readthedocs.io/en/latest/contributing/the_basics.html)

You can also take a look at the rest of the contributing docs or talk with the
developers:

- [Contributing documentation](https://black.readthedocs.io/en/latest/contributing/index.html)
- [Chat on Discord](https://discord.gg/RtVdv86PrH)

## Change log

The log has become rather long. It moved to its own file.

See [CHANGES](https://black.readthedocs.io/en/latest/change_log.html).

## Authors

The author list is quite long nowadays, so it lives in its own file.

See [AUTHORS.md](./AUTHORS.md)

## Code of Conduct

Everyone participating in the _Black_ project, and in particular in the issue tracker,
pull requests, and social media activity, is expected to treat other people with respect
and more generally to follow the guidelines articulated in the
[Python Community Code of Conduct](https://www.python.org/psf/codeofconduct/).

At the same time, humor is encouraged. In fact, basic familiarity with Monty Python's
Flying Circus is expected. We are not savages.

And if you _really_ need to slap somebody, do it with a fish while dancing.
","'autopep8', 'code', 'codeformatter', 'formatter', 'gofmt', 'hacktoberfest', 'pre-commit-hook', 'python', 'yapf'",2018-03-14T19:54:45Z,2024-06-17T14:08:30Z,446,426,37684,234,"('ambv', 372), ('JelleZijlstra', 178), ('ichard26', 130), ('dependabotbot', 105), ('hauntsaninja', 88), ('zsol', 79), ('cooperlees', 69), ('hugovk', 48), ('yilei', 42), ('isidentical', 25), ('felix-hilden', 25), ('MarcoGorelli', 21), ('jayaddison', 16), ('bbugyi200', 14), ('RedGuy12', 14), ('msullivan', 12), ('jdufresne', 11), ('henriholopainen', 10), ('jpy-git', 10), ('asottile', 9), ('Jackenmen', 8), ('rdrll', 8), ('nipunn1313', 8), ('AlexWaygood', 7), ('willingc', 7), ('saroad2', 7), ('pre-commit-cibot', 7), ('aaossa', 6), ('tiran', 6), ('Jma353', 6), ('jakkdl', 6), ('Shivansh-007', 6), ('uriyyo', 6), ('jgirardet', 6), ('Zac-HD', 6), ('autophagy', 5), ('davidszotten', 5), ('hadialqattan', 4), ('graingert', 4), ('tusharsadhwani', 4), ('KotlinIsland', 4), ('aneeshusa', 3), ('shaoran', 3), ('pszlazak', 3), ('onerandomusername', 3), ('yhoiseth', 3), ('csurfer', 3), ('TomFryers', 3), ('hukkin', 3), ('raybellwaves', 3), ('hroncok', 3), ('MarkCBell', 3), ('Mariatta', 3), ('ojii', 3), ('henryiii', 3), ('dankrzeminski32', 3), ('vemel', 2), ('scop', 2), ('stinodego', 2), ('Shota Ray Imaki', 2), ('bluetech', 2), ('Peter Bengtsson', 2), ('TBBle', 2), ('ofek', 2), ('mcsitter', 2), ('itsayellow', 2), ('johnthagen', 2), ('mainj12', 2), ('vezeli', 2), ('gunungpw', 2), ('freud14', 2), ('treuherz', 2), ('programmer04', 2), ('sumezulike', 2), ('allhailwesttexas', 2), ('Abdur-rahmaanJ', 2), ('brandtbucher', 2), ('tyilo', 2), ('bryanforbes', 2), ('carljm', 2), ('bgw', 2), ('neutrinoceros', 2), ('cxong', 2), ('polyzen', 2), ('deepyaman', 2), ('gsganden', 2), ('gcamargo1', 2), ('hbrunn', 2), ('jalaziz', 2), ('BeyondEvil', 2), ('sersorrel', 2), ('ktbarrett', 2), ('matthewarmand', 2), ('cdce8p', 2), ('siuryan', 1), ('akien-mga', 1), ('sco1', 1), ('EarlMilktea', 1), ('sadikkuzu', 1), ('disrupted', 1), ('dignissimus', 1), ('suola', 1), ('yoerg', 1), ('Ryan-McPartlan', 1), ('russelldavis', 1), ('ruslaniv', 1), ('rupert', 1), ('rowanseymour', 1), ('Rowan Rodrik van der Molen', 1), ('romainr', 1), ('rtdev-com', 1), ('RHammond2', 1), ('riyaz489', 1), ('mooksel', 1), ('StevenMaude', 1), ('Stevoisiak', 1), ('sirosen', 1), ('stefanfoulis', 1), ('soxofaan', 1), ('skorokithakis', 1), ('ssbarnea', 1), ('AlinderS', 1), ('J-Exodus', 1), ('Shreya-7', 1), ('Shota Ray Imaki', 1), ('Shivam250702', 1), ('morinokami', 1), ('wannieman98', 1), ('enzet', 1), ('ss18', 1), ('srittau', 1), ('srstevenson', 1), ('Spyrosigma', 1), ('SanketDG', 1), ('sciyoshi', 1), ('noelevans', 1), ('Panther-12', 1), ('madig', 1), ('sobolevn', 1), ('n-borges', 1), ('nsoranzo', 1), ('Neraste', 1), ('NedJWestern', 1), ('nedtwigg', 1), ('naveensrinivasan', 1), ('neighthan', 1), ('Nathan Goldbaum', 1), ('nateprewitt', 1), ('Mr. Outis', 1), ('ShaharNaveh', 1), ('mitchnegus', 1), ('miki725', 1), ('minho42', 1), ('mwtoews', 1), ('Rorosha', 1), ('miggaiowski', 1), ('515k4', 1), ('Rishi-jha', 1), ('xrisk', 1), ('rickstaa', 1), ('richardfearn', 1), ('renan-r-santos', 1), ('schmir', 1), ('QuentinSoubeyran', 1), ('pquentin', 1), ('pradeep90', 1), ('petrus-v', 1), ('Pierre-Sassoulas', 1), ('SyPeter', 1), ('magnetikonline', 1), ('jpgrayson', 1), ('percurnicus', 1), ('pmeinhardt', 1), ('pganssle', 1), ('pauloxnet', 1), ('n0toose', 1), ('pablogsal', 1), ('danidee10', 1), ('orn688', 1), ('olliemath', 1), ('ftnext', 1), ('mikehoyio', 1), ('mihazagar', 1), ('mbarkhau', 1), ('laundmo', 1), ('khgitting', 1), ('konstin', 1), ('kaiix', 1), ('jtpavlock', 1), ('paralax', 1), ('joelsgp', 1), ('jlplenio', 1), ('freddiewanah', 1), ('exag', 1), ('erykoff', 1), ('emfdavid', 1), ('djb7', 1), ('dquitmann-op', 1), ('dawnofmidnight', 1), ('danieleades', 1), ('ceh', 1), ('cclauss', 1), ('wbolster', 1), ('williamfzc', 1), ('utsav-dbx', 1), ('tungol', 1), ('tpilewicz', 1), ('temeddix', 1), ('sth', 1), ('springstan', 1), ('sponsfreixes', 1), ('skapil', 1), ('skykasko', 1), ('simaki', 1), ('sckarlin', 1), ('rht', 1), ('reka', 1), ('kotnen', 1), ('pmacosta', 1), ('peterkra25', 1), ('otstrel', 1), ('onescriptkid', 1), ('oncomouse', 1), ('nnrepos', 1), ('bo5o', 1), ('tony', 1), ('tomjelinek', 1), ('kloczek', 1), ('tom-saunders', 1), ('tomchristie', 1), ('tobywf', 1), ('timotk', 1), ('tswast', 1), ('timgates42', 1), ('tobast', 1), ('ThomasHagebols', 1), ('tlv', 1), ('bellini666', 1), ('Terrance', 1), ('tanvimoharir', 1), ('hukkinj1', 1), ('TalAmuyal', 1), ('sdispater', 1), ('sylvestre', 1), ('iamibi', 1), ('shresthasurav', 1), ('stianjensen', 1), ('brucearctor', 1), ('ysk24ok', 1), ('zyv', 1), ('yzdann', 1), ('huxuan', 1), ('williamjmorenor', 1), ('kalbasit', 1), ('WMOkiishi', 1), ('vivekvashist', 1), ('Vipul', 1), ('vinigfer', 1), ('vbarbaresi', 1), ('Viicos', 1), ('VanSHOE', 1), ('defntvdm', 1), ('Utsav2', 1), ('utkarshgupta137', 1), ('uranusjr', 1), ('tuchandra', 1), ('thombashi', 1), ('tm-shad', 1), ('mithrandi', 1), ('goi42', 1), ('Daniel Sparing', 1), ('blueyed', 1), ('ffe4', 1), ('dandavison', 1), ('dsyed', 1), ('benknoble', 1), ('csalerno-asml', 1), ('bugfood', 1), ('coxley', 1), ('CiderMan', 1), ('wooters', 1), ('cjproud', 1), ('cclauss', 1), ('offbyone', 1), ('Charpy', 1), ('charliermarsh', 1), ('chmreid', 1), ('acharles7', 1), ('char101', 1), ('gszzzzzz', 1), ('C0DK', 1), ('korverdev', 1), ('Gabriel-p', 1), ('Francisco', 1), ('fthiery', 1), ('FHTMitchell', 1), ('fkohlgrueber', 1), ('vEnhance', 1), ('Emilv2', 1), ('eerovaher', 1), ('echoix', 1), ('spagh-eddie', 1), ('Dragorn421', 1), ('dougthor42', 1), ('dmerejkowsky', 1), ('dlax', 1), ('dwhswenson', 1), ('dlukes', 1), ('david-lev', 1), ('dimbleby', 1), ('davidculley', 1), ('dariocurr', 1), ('DanielNoord', 1), ('expobrain', 1), ('ArjaanBuijk', 1), ('Architrixs', 1), ('Anupya', 1), ('bluefish6', 1), ('AniketP04', 1), ('rouge8', 1), ('dyus', 1), ('0az', 1), ('aThorp96', 1), ('apljungquist', 1), ('amyreese', 1), ('Alveel', 1), ('allan-simon', 1), ('Mogost', 1), ('Alexander Huynh', 1), ('ahrex', 1), ('alexmv', 1), ('aditya7302', 1), ('AdamWill', 1), ('adamchainz', 1), ('abdullahselek', 1), ('Ab2nour', 1), ('Carl Meyer', 1), ('cas--', 1), ('BryceStevenWilley', 1), ('Bryan Bugyi', 1), ('nicoddemus', 1), ('brettcannon', 1), ('veryslowcode', 1), ('Blandes22', 1), ('Bibo-Joshi', 1), ('bharatr21', 1), ('gaborbernat', 1), ('beniwohli', 1), ('btel', 1), ('Secrus', 1), ('aviskarkc10', 1), ('austinpray-mixpanel', 1), ('austinglaser', 1), ('durin42', 1), ('Ttibsi', 1), ('proofit404', 1), ('artnc', 1), ('arnavb', 1), ('Lihu Ben-Ezri-Ravin', 1), ('llchan', 1), ('LaurentTreguier', 1), ('LLyaudet', 1), ('ksunden', 1), ('kalekseev', 1), ('kmgrime', 1), ('kiyoon', 1), ('kianmeng', 1), ('kevin-paulson-mindbridge-ai', 1), ('kkirsche', 1), ('kenyon', 1), ('schackartk', 1), ('keith', 1), ('katrinleinweber', 1), ('glasnt', 1), ('Kaligule', 1), ('KaiSforza', 1), ('density', 1), ('astrojuanlu', 1), ('jpadilla', 1), ('Joshua Cannon', 1), ('mr-c', 1), ('mmcclimon', 1), ('mgmarino', 1), ('mflaxman', 1), ('meliache', 1), ('MichaelAquilina', 1), ('msmolens', 1), ('tieum', 1), ('dotwaffle', 1), ('MatthewScholefield', 1), ('Akarys42', 1), ('vaneseltine', 1), ('mkniewallner', 1), ('martinResearch', 1), ('mahmoudhossam', 1), ('m-aciek', 1), ('LukasDrude', 1), ('Sterbic', 1), ('lorencarvalho', 1), ('LordOfPolls', 1), ('dosisod', 1), ('linusg', 1), ('Jakub Kadlubiec', 1), ('jake-anto', 1), ('yajo', 1), ('ikatanic', 1), ('isac322', 1), ('ionite34', 1), ('kephircheek', 1), ('eltociear', 1), ('idorrington92', 1), ('hynek', 1), ('Hugo Barrera', 1), ('hongbo-miao', 1), ('dahlia', 1), ('Heaford', 1), ('HassanAbouelela', 1), ('harupy', 1), ('sharsha315', 1), ('rharish101', 1), ('hakancelikdev', 1), ('gpshead', 1), ('itajaja', 1), ('GerhardOfRivia', 1), ('thejcannon', 1), ('joshowen', 1), ('joshbode', 1), ('joslarson', 1), ('JEphron', 1), ('Jonty', 1), ('jonathanberthias', 1), ('jonashaag', 1), ('jnhyperion', 1), ('thecaralice', 1), ('ewjoachim', 1), ('JiriKr', 1), ('taion', 1), ('jlazar17', 1), ('jaraco', 1), ('jasonfriedland', 1), ('fried', 1), ('kolibril13', 1), ('Jan Hnátek', 1), ('jsal13', 1), ('jamesbraza', 1), ('Gobot1234', 1)",352,334,
astaxie/build-web-application-with-golang,A golang ebook intro how to build a web with golang,"# Multiple Language Versions

* [(HTML - PDF) on GitBook](https://astaxie.gitbooks.io/build-web-application-with-golang)
* [Deutsch](de/preface.md)
* [English](en/preface.md)
* [Español](es/preface.md)
* [Français](fr/preface.md)
* [Português - Brasil](pt-br/preface.md)
* [Русский](ru/preface.md)
* [Türkçe](tr/preface.md)
* [বাংলা](bn/preface.md)
* [日本語](ja/preface.md)
* [简体中文](zh/preface.md)
* [正體中文](zh-tw/preface.md)
* [پارسی](fa/preface.md)
* [ภาษาไทย](th/preface.md)

# Donate

AliPay: 

English Donate:[donate](http://beego.me/donate)

## Community
QQ群：148647580

BBS：[http://gocn.io/](http://gocn.io/)

## Contributors

- See [contributors page](https://github.com/astaxie/build-web-application-with-golang/graphs/contributors) for full list of contributors.

## Acknowledgments

 - [四月份平民](https://plus.google.com/110445767383269817959) (review代码)
 - [Hong Ruiqi](https://github.com/hongruiqi) (review代码)
 - [BianJiang](https://github.com/border) (编写go开发工具Vim和Emacs的设置)
 - [Oling Cat](https://github.com/OlingCat)(review代码)
 - [Wenlei Wu](mailto:spadesacn@gmail.com)(提供一些图片展示)
 - [polaris](https://github.com/polaris1119)(review书)
 - [雨痕](https://github.com/qyuhen)(review第二章)

## License
Book License: [CC BY-SA 3.0 License](http://creativecommons.org/licenses/by-sa/3.0/)

Code License: [BSD 3-Clause License]()
",,2012-08-02T11:49:35Z,2024-05-12T00:47:46Z,416,349,43025,2348,"('astaxie', 1675), ('ernix', 1192), ('vcaesar', 216), ('DeepAnchor', 178), ('Anchor', 170), ('Slava Zgordan', 134), ('Jimmy99', 94), ('mariebehzadi', 60), ('OlingCat', 47), ('wenlei', 36), ('veincheng', 34), ('mikulely', 30), ('hongruiqi', 27), ('JessonChan', 27), ('neydroid', 26), ('digitalcraftsman', 26), ('ma0', 24), ('qinhanlei', 22), ('invzhi', 22), ('HirofumiTamori', 20), ('thewhitetulip', 18), ('pasali', 18), ('kasmanavt', 16), ('jameswpm', 15), ('codingsince1985', 15), ('taveek', 13), ('border', 13), ('Goryudyuma', 12), ('Reckhou', 12), ('maxupeng', 12), ('gustavokuklinski', 12), ('woooha', 11), ('kaplanbora', 11), ('mistadikay', 10), ('6yf', 10), ('Ju2ender', 10), ('Naijia Liu', 10), ('yetist', 10), ('mahata', 10), ('Konstantin Portnov', 9), ('kelvins', 9), ('thedevsaddam', 8), ('yetist', 8), ('ptomasroos', 8), ('dlintw', 8), ('Akagi201', 8), ('0x0400', 7), ('M2shad0w', 7), ('feruzoripov', 7), ('zhilijiqi', 7), ('Spellchaser', 7), ('gelosie', 7), ('gianu', 7), ('dharnitski', 7), ('polaris1119', 6), ('haibinpark', 6), ('zerob13', 6), ('xuchdong', 6), ('xinwendashibaike', 6), ('s7v7nislands', 6), ('pockhiss', 6), ('liusongsen', 6), ('morikat', 6), ('khrizpv', 6), ('henson', 6), ('hangim', 6), ('ccqpein', 6), ('zgordan-vv', 6), ('siongui', 6), ('kreativmonkey', 6), ('bcko', 6), ('Benoit Benedetti', 6), ('javasgl', 5), ('ldynia', 5), ('doggy8088', 5), ('caizixian', 5), ('dlogvinenko', 5), ('drypa', 5), ('Guirdo', 4), ('i2bskn', 4), ('nivance', 4), ('merdincz', 4), ('don-wang', 4), ('songpeng1997', 4), ('visualfc', 4), ('vitkarpov', 4), ('xbjiang', 4), ('zddhub', 4), ('rzhb', 4), ('typedef', 4), ('Łukasz Żarnowiecki', 4), ('everyx', 4), ('胡子豪', 4), ('tSU-RooT', 4), ('cloudaice', 4), ('Andrew-liu', 4), ('reterVision', 4), ('ddelapaz', 4), ('sqrtsanta', 4), ('haibin', 4), ('Itachish', 4), ('James Miranda', 4), ('KarthikNayak', 4), ('LarryBattle', 4), ('hopehook', 4), ('haburibe', 4), ('dreddsa5dies', 4), ('cwl', 4), ('cia-rana', 4), ('spbsmile', 4), ('upamune', 4), ('RyanGladstone', 4), ('better0332', 4), ('Schneider', 4), ('38elements', 3), ('sersoong', 3), ('dhzzy88', 3), ('yaBliznyk', 3), ('f440', 3), ('Tomoo Amano', 3), ('edussx', 3), ('ZhenhangTung', 3), ('GeorgeYan', 3), ('porozhnyy', 3), ('takahiko-okada', 3), ('RomanSerikov', 3), ('Lucas N Fuzeto', 3), ('ofalei', 3), ('dchaofei', 2), ('erasin', 2), ('fairlyblank', 2), ('fyears', 2), ('guozhiwei', 2), ('hanfeng', 2), ('hiroyuki0115', 2), ('huzheng', 2), ('isLishude', 2), ('jasonz', 2), ('jsgv', 2), ('jinguoliang', 2), ('bigwheel', 2), ('joyo-chan', 2), ('magicx', 2), ('marunrun', 2), ('windows1430', 2), ('vially', 2), ('Ag2S1', 2), ('waitingkuo', 2), ('wyh267', 2), ('X. Wei', 2), ('wangxinalex', 2), ('yinpeng', 2), ('Zhanming Qi', 2), ('zhaodj', 2), ('zwfang', 2), ('zhengjia', 2), ('iamzhout', 2), ('adityamenon-iom', 2), ('ahjdzx', 2), ('aliuygur', 2), ('apaye', 2), ('caiguo37', 2), ('chancyWu', 2), ('woodycarl', 2), ('wuwj-cn', 2), ('wuyadong', 2), ('xianlubird', 2), ('sxmad', 2), ('xland', 2), ('ybjnew', 2), ('1046102779', 2), ('camilesing', 2), ('y-yagi', 2), ('zhangshengshan', 2), ('fangzhzh', 2), ('oyvindsk', 2), ('sydnash', 2), ('tutorial0', 2), ('loongmxbt', 2), ('hjlarry', 2), ('mitakeck', 2), ('mttrs', 2), ('mkarthikworld', 2), ('murat.genc', 2), ('ngroup', 2), ('nivance', 2), ('emirot', 2), ('reoring', 2), ('semicircle', 2), ('smilefish1987', 2), ('stein', 2), ('stevenyepes', 2), ('july-12', 2), ('tianyl1984', 2), ('tilics', 2), ('tknhs', 2), ('uxn', 2), ('vincepeng', 2), ('chrisportela', 2), ('Emre', 2), ('fatihkahveci', 2), ('shenfeng', 2), ('gmallard', 2), ('hendrikschneider', 2), ('honood', 2), ('fugr', 2), ('hugos94', 2), ('hc5duke', 2), ('Jason Travis', 2), ('gsangeryee', 2), ('julienschmidt', 2), ('juliofeng', 2), ('kazuph', 2), ('kishorevaishnav', 2), ('aurlien', 2), ('lixuancn', 2), ('m0a', 2), ('aishraj', 2), ('koriym', 2), ('Akshay Kumar Kodali', 2), ('Alexander', 2), ('dastier', 2), ('amebel', 2), ('Oxyrus', 2), ('anthonyfok', 2), ('B1nj0y', 2), ('brchiu', 2), ('bingohuang', 2), ('BlackPrincess', 2), ('benjamin-rood', 2), ('brunoksato', 2), ('Bunchhieng', 2), ('1989car', 2), ('cyfdecyf', 2), ('paulomcnally', 2), ('Petros Amiridis', 2), ('QiJunHu', 2), ('robbyt', 2), ('rossaffandy', 2), ('bredikhin', 2), ('ryboe', 2), ('SCKelemen', 2), ('qshuai', 2), ('Shuaiying Hou', 2), ('simba-k', 2), ('sifue', 2), ('T-I', 2), ('k0kubun', 2), ('terry-fei', 2), ('tevjef', 2), ('TimothyYe', 2), ('Turristan Liew', 2), ('leonklingele', 2), ('lonre', 2), ('luiscaciatori', 2), ('miku', 2), ('marcalj', 2), ('minamijoyo', 2), ('zhyuri', 2), ('Mehmet Kose', 2), ('jubalh', 2), ('stny', 2), ('nayzawoo', 2), ('nrkfeller', 2), ('Nightsuki', 2), ('noahmatisoff', 2), ('nikushi', 2), ('Norbert Fuhs', 2), ('Oguzhan Tasci', 2), ('OrlSan', 2), ('dezhucui', 1), ('decillion', 1), ('danbaixi', 1), ('cole2295', 1), ('chunmeng', 1), ('chenchen1750', 1), ('baijinping', 1), ('andanyoung', 1), ('yizhiheng', 1), ('tchssk', 1), ('ebiiim', 1), ('eksea', 1), ('godfery', 1), ('ybjj', 1), ('isikhi', 1), ('josedelinux', 1), ('kay07', 1), ('keets2012', 1), ('knarfeh', 1), ('itkrt2y', 1), ('vterdunov', 1), ('thalesmello', 1), ('TheMushrr00m', 1), ('Thomas Caudrelier', 1), ('ThomasHuke', 1), ('bigwhite', 1), ('viccuad', 1), ('Dumbeldor', 1), ('WDdxRW', 1), ('WGongRui', 1), ('xxuejie', 1), ('yangl', 1), ('yaserazfar', 1), ('easonyq', 1), ('Yoshiyuki Hirano', 1), ('wuyumin', 1), ('TopCaver', 1), ('wisape', 1), ('wxitcode', 1), ('pAXkkkxh', 1), ('qichengzx', 1), ('xmhealth', 1), ('hongfeioo', 1), ('fancyuan', 1), ('zack', 1), ('zargbell', 1), ('zhoulaosan0', 1), ('zhuangyongxin', 1), ('tmpbook', 1), ('元炜', 1), ('fengzhongsen', 1), ('davepkxxx', 1), ('mylxsw', 1), ('wangyiyang', 1), ('yanshinian', 1), ('cnbuff410', 1), ('lintide', 1), ('ltinyho', 1), ('lxq', 1), ('nekottyo', 1), ('apriil15', 1), ('overcat', 1), ('pablozzz', 1), ('pastushenkoy', 1), ('qtxie', 1), ('tmhr94', 1), ('rnazmo', 1), ('anonymone', 1), ('starriv', 1), ('stupidfive', 1), ('titanzerg', 1), ('unknown', 1), ('windard', 1), ('mostafahussein', 1), ('oxbambooxo', 1), ('DuLinRain', 1), ('Eder Ruiz Maria', 1), ('Ehco1996', 1), ('emrekeskinmac', 1), ('Evandro', 1), ('frankyxhl', 1), ('fredrb', 1), ('gabrielsimoes', 1), ('Gordon Freeman', 1), ('AaronWharton', 1), ('hankxdev', 1), ('HeadwindFly', 1), ('fitsula', 1), ('jasonrogena', 1), ('jeasoft', 1), ('jhaynie', 1), ('zoofood', 1), ('0uep', 1), ('1k-ct', 1), ('Alan Wang', 1), ('alext', 1), ('ilteriskeskin', 1), ('amrboxit4me', 1), ('tgogos', 1), ('ei-grad', 1), ('ankitrohatgi', 1), ('petuhovskiy', 1), ('hSATAC', 1), ('ata-amini', 1), ('attilanagy', 1), ('Augists', 1), ('bharatsewani1993', 1), ('appleboy', 1), ('daffaz', 1), ('David Barda', 1), ('mrasskazov', 1), ('memclutter', 1), ('Hkesd', 1), ('mflaxman', 1), ('Michael van Tricht', 1), ('liuml07', 1), ('moklick', 1), ('saifulwebid', 1), ('muhammadsammy', 1), ('genc-murat', 1), ('Otokaze', 1), ('ParadiseDS', 1), ('Phineas', 1), ('chughpiyush', 1), ('wybcp', 1), ('Rodolfo Rodriguez', 1), ('sebathi', 1), ('shuuji3', 1), ('NaturalFractals', 1), ('JiangMin', 1), ('Joewt', 1), ('jsteenb2', 1), ('jonaustin', 1), ('justinclift', 1), ('lcnja', 1), ('KirillMerz', 1), ('lanqy', 1), ('leandromoreira', 1), ('myungseokang', 1), ('l1f', 1), ('LiuChuanRui', 1), ('60ke', 1), ('LuckyDenis', 1), ('Luiz Gustavo Caciatori', 1), ('mahfuz05', 1), ('ihara2525', 1)",146,122,
bitletorg/bitlet,"A small Java bittorrent library, powering BitLet.org","# BitLet
### A tiny bittorrent library

BitLet is a simple Java implementation of the [BitTorrent](http://en.wikipedia.org/wiki/BitTorrent) protocol.

It is the library that powers [BitLet.org](http://bitlet.org) (a BitTorrent client that runs entirely in the browser plugin, as a Java applet).

## Trying out the BitLet library
You can build the project sources using Maven, and execute a sample client by calling:

    java -cp target/wetorrent-1.0-SNAPSHOT.jar org.bitlet.wetorrent.Sample $1

Where $1 is a .torrent file you have on your filesystem.

## Developing with BitLet
You can review this [annotated example](https://github.com/bitletorg/bitlet/wiki/Annotated-Example) for an overview on how to use the BitLet library.

## License
BitLet is distributed under the Apache license. See `src/main/resources/license.txt` for the full license terms.
","'bitlet', 'bitlet-library', 'bittorrent', 'java', 'p2p'",2012-11-01T18:39:38Z,2018-03-06T19:10:20Z,4,3,153,27,"('abahgat', 18), ('DCastagna', 7), ('Toilal', 3), ('martind', 1)",1,0,
scryner/bptree,a B+tree implementation for golang,"bptree: B+tree pure go implementation
=====================================

A simple B+tree pure go implementation",,2013-05-21T09:31:01Z,2013-08-16T05:41:37Z,3,1,8,4,"('scryner', 12), ('scryner', 4), ('scryner', 1)",1,1,
phpab/phpab,A PHP library to implement A/B testing.,"# phpab

[![Latest Version on Packagist][ico-version]][link-packagist]
[![Software License][ico-license]](LICENSE.md)
[![Build Status][ico-travis]][link-travis]
[![Coverage Status][ico-scrutinizer]][link-scrutinizer]
[![Quality Score][ico-code-quality]][link-code-quality]
[![Total Downloads][ico-downloads]][link-downloads]

This is a PHP library to implement A/B testing.

## Install

Via Composer

``` bash
$ composer require phpab/phpab
```

## Usage

Take a look at the example directory.

## Change log

Please see [CHANGELOG](CHANGELOG.md) for more information what has changed recently.

## Testing

``` bash
$ composer test
```

## Contributing

Please see [CONTRIBUTING](CONTRIBUTING.md) and [CONDUCT](CONDUCT.md) for details.

## Security

If you discover any security related issues, please open an issue in the issue tracker. We realize 
this is not ideal but it's the fastest way to get the issue solved.

## Credits

- [Walter Tamboer](https://github.com/waltertamboer)
- [Patrick Heller](https://github.com/psren)
- [Mariano F.co Benítez Mulet](https://github.com/pachico)
- [All Contributors](https://github.com/phpab/phpab/graphs/contributors)

## License

The MIT License (MIT). Please see [License File](LICENSE.md) for more information.

[ico-version]: https://img.shields.io/packagist/v/phpab/phpab.svg?style=flat-square
[ico-license]: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square
[ico-travis]: https://img.shields.io/travis/phpab/phpab/master.svg?style=flat-square
[ico-scrutinizer]: https://img.shields.io/scrutinizer/coverage/g/phpab/phpab.svg?style=flat-square
[ico-code-quality]: https://img.shields.io/scrutinizer/g/phpab/phpab.svg?style=flat-square
[ico-downloads]: https://img.shields.io/packagist/dt/phpab/phpab.svg?style=flat-square

[link-packagist]: https://packagist.org/packages/phpab/phpab
[link-travis]: https://travis-ci.org/phpab/phpab
[link-scrutinizer]: https://scrutinizer-ci.com/g/phpab/phpab/code-structure
[link-code-quality]: https://scrutinizer-ci.com/g/phpab/phpab
[link-downloads]: https://packagist.org/packages/phpab/phpab
[link-author]: https://github.com/:author_username
[link-contributors]: ../../contributors
","'ab', 'abtesting', 'php', 'testing'",2015-04-17T18:27:47Z,2017-02-22T15:24:32Z,6,3,83,11,"('HellPat', 127), ('waltertamboer', 76), ('Patrick', 20), ('Mariano F.co Benítez Mulet', 17), ('Mariano Benitez', 13), ('pachico', 9)",0,0,
Scentsome/Developer-s-Note,"Writing for Development of Server, Mobile Client",,,2012-08-21T02:19:51Z,2013-09-20T17:01:57Z,1,1,13,4,"('Scentsome', 74)",0,0,
erik-nelson/blam,,"# B(erkeley) L(ocalization) A(nd) M(apping)!

![alt text](https://github.com/erik-nelson/blam/raw/master/blam_mosaic.png)

***BLAM!*** is an open-source software package for LiDAR-based real-time 3D localization and mapping. ***BLAM!*** is developed by Erik Nelson from the Berkeley AI Research Laboratory ([BAIR](http://bair.berkeley.edu)). See https://youtu.be/08GTGfNneCI for a video example.

## Build Instructions
This repository contains two ROS workspaces (one internal, one external). The build process is proctored by the `update` script. To build, first make sure that you do not have any other ROS workspaces in your `ROS_PACKAGE_PATH`, then clone the repository and from the top directory execute

```bash
./update
```

## Run Instructions
***BLAM!*** is written in C++ with some Python interface elements, wrapped by
Robot Operating System ([ROS](http://ros.org)). Input LiDAR data should be
provided to the `/velodyne_points` topic using message type `sensor_msgs::PointCloud2`.

To run in online mode (e.g. by replaying a bag file from another terminal or
using a real-time sensor stream), use

```bash
roslaunch blam_example test_online.launch
```

To run in offline mode, i.e. by loading a bagfile and processing its data as
fast as possible, set the bagfile name and scan topic in
`blam_example/launch/test_offline.launch`, and use

```bash
roslaunch blam_example test_offline.launch
```

An example .rviz configuration file is provided under
`blam_example/rviz/lidar_slam.rviz`.

## Dependencies

***BLAM!*** relies on system installations of the following packages:

* [ROS](http://wiki.ros.org/ROS/Installation)
* [GTSAM](https://collab.cc.gatech.edu/borg/gtsam)

GTSAM in particular should be installed from source using the latest version of the develop branch from https://bitbucket.org/gtborg/gtsam. GTSAM relies on Boost, an incorrect version of which will interfere with some of ROS' packages if ROS is not upgraded to at least Indigo. ROS Indigo, in turn, relies on Ubuntu 14.04.
",,2016-02-12T00:57:42Z,2016-08-02T00:10:33Z,2,1,779,52,"('erik-nelson', 12), ('Erik Nelson', 3)",0,0,
drdozer/graphviz-s,Graphviz Scala bindings,"#GRAPHVIZ bindings from scala.

[![Join the chat at https://gitter.im/drdozer/graphviz-s](https://badges.gitter.im/drdozer/graphviz-s.svg)](https://gitter.im/drdozer/graphviz-s?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![Build Status](https://travis-ci.org/drdozer/graphviz-s.svg?branch=master)](https://travis-ci.org/drdozer/graphviz-s)

This projects has two modules: core and clientServer. Core provides an API to parse and emit graphviz files, and also
to execute dot. ClientServer provides a scala.js/spray.io client-server environment for exposing the dot binary
as a web service.

To call the graphviz binaries, you must have graphviz installed for your system.

## gv-core

Use:

Add a resolver to `build.sbt`:
```scala
resolvers += ""bintray-drdozer"" at ""http://dl.bintray.com/content/drdozer/maven""
```
and the dependency to your `libraryDependencies`:
```scala
libraryDependencies += ""uk.co.turingatemyhamster"" %% ""gv-core"" % ""0.4.1""
```

```scala
import uk.co.turingatemyhamster.graphvizs._
import uk.co.turingatemyhamster.graphvizs.dsl._
import uk.co.turingatemyhamster.graphvizs.exec._

val g = StrictDigraph(
  id = ""g"",
  ""lacI"" :| (""shape"" := ""box""),
  ""tetR"" :| (""shape"" := ""box""),
  ""lacI"" --> ""tetR"" :| (""label"" := ""represses"")
)

println(""Input graph:"")
renderGraph(g, System.out)

println(""Piping through dot..."")
val gg = dot2dot[Graph, Graph](g)

println(""Resulting graph:"")
renderGraph(gg, System.out)

println(""Rendering as svg..."")
val gSvg = dot2dot[Graph, String](g, format = DotFormat.svg)
println(gSvg)
```

## gv-clientServer

The server exposes the following endpoints:

```
/graphviz/$layout.$format
```

Post to this to receive back the output of dot. For example, `/graphviz/dot.dot` will invoke dot with the dot layout and
return the result as dot text while `/graphviz/neato.svg` will invoke dot with the neato layout and svg output.

## dockerised service

Firstly build the dockerised web service:
```
$sbt
>project gvClientServerJVM
>docker
```

Then run using docker:
```
$docker run -d  -p 127.0.0.1:10080:10080 uk.co.turingatemyhamster/gv-clientserver
```

Then open up  and enjoy an entirely dockerised dot editing experience.
",,2012-01-20T16:44:56Z,2016-12-13T10:06:09Z,6,3,54,6,"('drdozer', 89), ('Joseph Price', 2), ('=', 1), ('gitter-badger', 1), ('TimSoethout', 1), ('U-bagpuss\\caroline', 1)",4,2,
znort987/blockparser,Simple C++ bitcoin blockchain parser,"blockparser
===========

    Who wrote it ?
    --------------

        Author:

            znort987@yahoo.com

        Tip here if you find it useful:

            1ZnortsoStC1zSTXbW6CUtkvqew8czMMG

        I've also been cherry-picking changes I found useful from various github forks.
        Credits for these:

             git log | grep Author | grep -iv Znort

    Canonical source code repo:
    ---------------------------

        git clone github.com:znort987/blockparser.git

    License:
    --------

        Code is in the public domain.

    What is it ?
    ------------

        A barebone C++ block parser that parses the entire block chain from scratch
        to extract various types of information from it.

        The code chews ""linearly"" through the block chain and calls ""user-defined""
        callbacks when it hits on certain ""events"" in the chain. Here:

            ""events"" essentially means that the parser is starting to assemble a new
            blockchain data structure (a block, a tx, an input, etc ...), or that the
            parser has just completed a data structure, in which case it will usually
            run the callback with the completed data structure. The blockchain data
            structure level of granularity at which these ""events"" happen is somewhat
            arbitrary.  For example you won't get called every time a new byte is seen.

            ""user-defined"" means that if you want to extract new types of information
            from the chain, you have to add your own C++ piece of code to those already
            in directory ""cb"". Your C++ code will get called by the main parser at
            ""events"" of your choosing.

            ""linearly"" is a bit of an abuse because the parser code often has to jump
            back to previously seen parts of the blockchain to provide user callbacks
            with fully complete data structures. The parser code also has to walk the
            blockchain a few times to compute the longest (valid) chain. But the user
            callbacks get a fairly linear view of it all.


        Blockparser was designed for bitcoin but works on most altcoins that were
        derived from the bitcoin code base.

    What it is not:
    ---------------

        Blockparser is *not* a verifier. It assumes a clean blockchain, as typically
        constructed and verified by the bitcoin core client. blockparser does not
        perform any kind of verification and will likely crash if applied to an unclean
        chain.

        Blockparser is not very efficient if you want to perform repetitive tasks on
        thr block chain: the basic idea/premise of blockparser is that it's going to
        chew through the *entire* block chain, *every* time. Given the size of the
        blockchain these days, that's not something you want to do very 5 minutes.

        Blockparser is not lean and mean. It used to be, when the blockchain was still
        relatively small.  Now that we are inching towards the 100's of gigabytes, the
        very proposition that it has to chew through entire chain by design implies that
        it's going to take quite a while, whichever way you slice it. Also, the entire
        index is built on the fly and kept in RAM. At current sizes, this is not a very
        smart choice. This might get addressed in the near future.

    Why write this ?
    ----------------

        It started as an exercise for me to get a ""close to the metal"" understanding of
        how bitcoin works. The quality and state of the original bitcoin codebase made
        this damn near impossible (it's clear to me satosh, albeit clearly a genius, was
        not a professional software engineer. Also, things have vastly improved since then).
        It then grew into a fun hobby project.

        The parser code is minimal and very easy to follow. If someone wants to quickly
        understand ""for real"" how the block chain is structured, it is a good place to
        start

        It has also slowly grown into an altcoin zoo. It is very far from being a
        compendium (there's so many of the darn things these days), but adding your
        fave alt is very easy.

        Talking about zoo, I've also started to track and document ""weird"" TXO's
        in the chain (comments, p2sh, multi-sigs, bugs, etc ...). Not a complete
        compendium yet, but getting there.

        A side goal was also to build something that can independently (as in : the
        codebase is *very* different from that of bitcoin core) verify some of the
        conclusions of other bitcoin implementations, such as how many coins are
        attached to an address.

        Another thing that blockparser is really nice for is to easily reconstruct
        ""snapshots"" of the state of the blockchain from a specific time (e.g. the -a
        option of the ""allBalances"" command).

    How do I build it ?
    -------------------

        You'll need a 64-bit Unix box (because of RAM consumption, blockparser won't work
        inside a 32bit address space).

        If you are unfortunate enough to still have to use windows, there is a port floating
        somehwere on github.

        I also have heard rumors of it working on OSX.

        You'll need a block chain somewhere on your hard drive. This is typically created
        by a statoshi bitcoin client such as this one: https://github.com/bitcoin/bitcoin.git

        Install dependencies:

            sudo apt-get install libssl-dev build-essential g++ libboost-all-dev libsparsehash-dev git-core perl

        Get the source:

            git clone git://github.com/znort987/blockparser.git

        Build it:

            cd blockparser
            make

    It crashes
    ----------

        At this point, blockparser uses a *lot* of memory (20+ Gig is typical). This
        can cause all sorts of woes on an under-dimensioned box, chief amongst which:

            - box goes into heavy swapping, and parser takes for ever to complete task

            - parser eats up all RAM and all SWAP and crashes. Here's a possible remedy:

                 http://askubuntu.com/questions/178712/how-to-increase-swap-space

    How does blockparser deal with multi-sig transactions ?
    --------------------------------------------------------

        AFAIK, there are two types of multi-sig transactions:

            1) Pay-to-script (which is in fact more general than multisig). This one is
               easy, because it pays to a hash, which can readily be converted to an
               address that starts with the character '3' instead of '1'

            2) Naked multi-sig transactions. These are harder, because the output of
               the transactions does not neatly map to a specific bitcoin address. I
               think I have found a neat work-around: I compute:

                     hash160(M, N, sortedListOfAddresses)

               which can now be properly mapped to a bitcoin address. To mark the fact
               that this addres is neither a ""pay to script"" (type '3') nor a
               ""pay to pubkey or pubkeyhash"" (type '1'), I prefix them with '4'

               Note : this may be worthy of an actual BIP. If someone writes one,
               I'll happily adjust the code.

               Note : this trick is only a blockparser thing. This means that these
               new address types starting with a '4' won't be recognized by other
               bitcoin implementations (such as blockchain.info)

    Examples
    --------

        . Show all supported commands

            ./parser help

        . Show help for a specific command

            ./parser allBalances --help

        . Compute simple blockchain stats

            ./parser simple

        . Extract all transactions for a very popular address 1dice6wBxymYi3t94heUAG6MpG5eceLG1

            ./parser transactions 06f1b66fa14429389cbffa656966993eab656f37

        . Compute the closure of an address, that is the list of addresses that very probably belong to the same person:

            ./parser closure 06f1b66fa14429389cbffa656966993eab656f37

        . Compute and print the balance for all keys ever used since the beginning of time:

            ./parser all >all.txt

        . See how much of the BTC 10K pizza tainted all the subsequent TX in the chain
          (chances are you have some dust coming from that famous TX lingering on one
          of your addresses)

            ./parser taint >pizzaTaint.txt

        . See all the block rewards and fees:

            ./parser rewards >rewards.txt

        . See a greatly detailed dump of the famous pizza transaction

            ./parser show

        . Track all mined blocks with unspent reward:

            ./parser pristine

        . Show the first valid ""pay to script hash (P2SH)"" transaction in the chain:

            ./parser showtx 9c08a4d78931342b37fd5f72900fb9983087e6f46c4a097d8a1f52c74e28eaf6

        . Show the first valid naked multi-sig transaction in the chain (it's a 1 Of 2 multi-sig)

            ./parser showtx 60a20bd93aa49ab4b28d514ec10b06e1829ce6818ec06cd3aabd013ebcdc4bb1

    NOTE: the general syntax is:

        ./parser    ...   ...


    NOTE: use ""parser help "" or ""parser  --help"" to get detailed
          help for a specific command.

    NOTE:  may have multiple aliases and can also be abbreviated. For
          example, ""parser tx"", ""parser tr"", and ""parser transactions"" are equivalent.

    NOTE: whenever specifying a list of things (e.g. a list of addresses), you can
          instead enter ""file:list.txt"" and the list will be read from the file.

    NOTE: whenever specifying a list file, you can use ""file:-"" and blockparser
          will read the list directly from stdin.


    Caveats:
    --------

        . You will need an x86-84 ubuntu box and a recent version of GCC(>=4.4), a recent version of
          boost and openssl-dev. You may be able to compile on other platforms, but the code wasn't
          really designed for those.

        . As of this writing, it needs a log of RAM to work, typically upwards of 25Gigs. I will switch
          to an on-disk hash table at some point, but for now you'll just need that if you ever hope to
          see it finish in a reasonable amount of time (or at all if your swap space is too small).

        . The code could be cleaner and better architected. It was just a quick and dirty way for me
          to learn about bitcoin. There really isn't much in the way of comments either :D

        . OTOH, it is fairly simple, short. If you want to understand how the blockchain data structures
          work, the code in parser.cpp is a solid way to start.

    Hacking the code:
    -----------------

        . parser.cpp contains the generic parser that reads the blockchain, parses it and calls
          ""user-defined"" callbacks as it hits interesting bits of information. It typically calls
          out when it begins reading finishes assembling a data structure.

        . util.cpp contains a grab-bag of useful bitcoin related routines. Interesting examples include:

            showScript
            getBaseReward
            solveOutputScript
            decompressPublicKey

        . blockparser comes with a bunch of interesting ""user callbacks"".

            . cb/allBalances.cpp    :   code to all balance of all addresses.
            . cb/closure.cpp        :   code to compute the transitive closure of an address
            . cb/dumpTX.cpp         :   code to display a transaction in very great detail
            . cb/help.cpp           :   code to dump detailed help for all other commands
            . cb/pristine.cpp       :   code to show all ""pristine"" (i.e. unspent) blocks
            . cb/rewards.cpp        :   code to show all block rewards (including fees)
            . cb/simpleStats.cpp    :   code to compute simple stats.
            . cb/sql.cpp            :   code to product an SQL dump of the blockchain
            . cb/taint.cpp          :   code to compute the taint from a given TX to all TXs.
            . cb/transactions.cpp   :   code to extract all transactions pertaining to an address.


        . You can very easily add your own custom command. You can use the existing callbacks in
          directory ./cb/ as a template to build your own:

                cp cb/allBalances.cpp cb/myExtractor.cpp
                Add to Makefile
                Hack away
                Recompile
                Run

        . You can also read the file callback.h (the base class from which you derive to implement your
          own new commands). It has been heavily commented and should provide a good basis to pick what
          to overload to achieve your goal.

        . The code makes heavy use of the google dense hash maps. You can switch it to use sparse hash
          maps (see Makefile, search for: DENSE, undef it). Sparse hash maps are slower but save quite a
          bit of RAM.

",,2012-06-13T16:07:13Z,2020-12-18T20:25:47Z,12,9,535,62,"('Znort987', 58), ('Znort 987', 50), ('znort987', 11), ('bitbandi', 6), ('fshp', 3), ('jojva', 3), ('MystPhysX', 2), ('jyap808', 1), ('cryptapus', 1), ('m0mchil', 1), ('sologap', 1), ('vertoe', 1)",5,5,
yankouskia/warmup,Let's warm up!,"# warmup
Let's warm up!

## Task

Your task is to implement function, which converts Celsius to Fahrenheit.
Write your solution in `src/index.js`

## Prepare and test

- Install [Node.js](https://nodejs.org/en/)
- Clone this repository: `git clone https://github.com/yankouskia/warmup.git`
- Go to folder `warmup`
- Run `npm install` in command line
- Run `npm test` in command line
- You will see the number of passing and failing tests
",,2018-02-16T11:00:08Z,2021-11-09T22:33:46Z,2,0,14,4,"('Aliaksandr Yankouski', 3), ('yankouskia', 1)",1,0,
firstandthird/dice-roll,A javascript a/b test library,"# Dice Roll

[![Build Status](https://travis-ci.org/firstandthird/dice-roll.svg?branch=master)](https://travis-ci.org/firstandthird/dice-roll)
![npm](https://img.shields.io/npm/v/dice-roll.svg)

A simple A/B test library for JavaScript

## Features

- Pass in any percentage to test
- Will cookie user so they stay in the test when they come back (requires: [cookie-monster](https://github.com/firstandthird/cookie-monster))
- Get a callback that tells you whether the user is in the test or not

## Installation

```sh
npm install dice-roll
```

## Usage

```js
  diceRoll('testName', expiration) //jquery style chaining
    .test(percentage, callback);
    .test(percentage2, callback2);
    .otherwise(callback3);
    .run();
```

## Example

```js
  diceRoll('testName', 1) //cookied for 1 day
    .test(10, function() {
      //10% of the time user will be in this test
    });
    .test(20, function() {
      //20% of the time user will be in this test
    });
    .otherwise(function() {
      //called if not in either other test (70% of the time)
    });
    .run();
```
",,2011-10-14T17:53:51Z,2022-12-08T21:54:16Z,5,4,15,3,"('jgallen23', 18), ('AlejandroPerezMartin', 4), ('Antonio-Laguna', 2), ('dawnerd', 2), ('Greg', 1)",1,0,
google/macops-planb,Plan B is a remediation program for managed Macs,"Overview
========

Plan B is a remediation program for managed Macs. It is meant to be run to re-install other management software.

Features
------

  - Secure download of disk images from an Internet-facing server.
  - Installation of package files contained on the disk images.
  - Validation of server certificate against explicitly trusted certificate authorities only.
  - Support for client certificate authentication to ensure only trusted clients can access the server.
  - URL construction to download packages based on a client's configuration in a plist.
  - Extensive logging of presented certificate details for auditing and MITM detection.
  - No external dependencies; the compiled program is tiny and can be easily deployed.

Usage
------

First, create a Web server which will host disk images containing a single `.pkg` package file on each `.dmg` disk image file.

There is a shell script included in this directory to generate a public-key infrastructure, if one is not already in place. There are also many excellent guides and programs, like `easy-rsa`, available online.

If the server has enabled client certificate authentication, first install the client certificate and private key to system keychain. You may first need to convert them to PKCS#12 format with something like, `openssl pkcs12 -export -in client.crt -inkey client.key -certfile ca.pem -out client.p12`. Otherwise, the program will perform server certificate validation only.

Compiling Plan B requires a modern version of Xcode, available from Apple's Developer site.

* Download the source code with `git clone https://github.com/google/macops-planb`

* Change directory into the repo `cd macops-planb`

* Install required CocoaPods with `pod install`

* Open the Xcode project with `open planb.xcworkspace`

* Edit `main.m` and change `kBaseURL` to the URL of the server and folder containing disk images. By default, the program will use `https://mac.internal.megacorp.com/pkgs/`

* Edit `main.m` and change the `packages` array to match the names of disk image names and their contained packages' receipt names. By default, the program will construct `pkg1/package1-stable.dmg` and forget the receipt for package `com.megacorp.package1` prior to re-installation, and so on.

* Edit `main.m` and change the `kMachineInfo` to match a machine information plist, which may contain a `ConfigurationTrack` value, for example. This value is used to construct the disk image suffix, like `package1-stable.dmg`, `package1-testing.dmg` or `package1-unstable.dmg`. This is useful if you have machines on multiple configuration tracks.

* Edit `roots.pem` and change the contents to include a single or multiple PEM-encoded certificate authority certificates you wish to trust for server validation. By default, the program will use `GeoTrust Global CA`, the authority used to sign Google's intermediate CA, however you should use the CA which has signed the server's certificate or the server's intermediate certificate.

* Compile the program with `xcodebuild -workspace planb.xcworkspace -scheme planb -configuration Release`. It will appear in `./Build/Products/Release/planb`

The planb binary must be run as *root* in order to install packages. It will run on its own without any external dependencies.

Deployment
----------

It is recommended to create a simple script to determine the health of the machine, for example by checking the last successful run date of the primary management software, and running Plan B if the condition is not met. This script can then be started periodically as a system launch daemon.

Have a look at the `planb_check` shell script and the `com.megacorp.planb.plist` launch daemon property list for an example.

In our environment, we have a wrapper tool for Puppet, which verifies the configuration run was successful and updates the timestamp on a file. We track this in `planb_check` and base the decision to kick off `planb` from it.

",,2015-10-08T18:45:18Z,2023-09-12T14:37:41Z,6,6,147,13,"('nguyen-phillip', 12), ('russellhancox', 10), ('verycarefully', 6), ('howiekaye', 2), ('clburlison', 1), ('marczak', 1)",2,2,
ripperhe/Bob,Bob 是一款 macOS 平台的翻译和 OCR 软件。,"
  


	
  


> [!NOTE]
> Bob 不是开源软件，本仓库曾经用于提供反馈渠道，现在请通过 [这个链接](https://bobtranslate.com/general/contact.html) 联系我们。

# Bob

Bob 是一款 macOS 平台的 **翻译** 和 **OCR** 软件。

主要特性：

- **翻译功能**：划词翻译、截图翻译、输入翻译、翻译多开、自定义插件、自动识别语种、驼峰拆分、蛇形拆分、AppleScript 调用、PopClip 调用
- **OCR 功能**：截图 OCR、静默截图 OCR、访达选图 OCR、离线识别、连续识别、二维码识别、自动复制、智能分段

支持的服务：

- **文本翻译**：系统翻译、火山翻译、腾讯翻译君、阿里翻译、百度翻译、有道翻译、彩云小译、小牛翻译、Google 翻译、Microsoft 翻译、Amazon 翻译、DeepL 翻译、OpenAI 翻译
- **文本识别**：离线文本识别、火山 OCR、腾讯 OCR、腾讯图片翻译、百度 OCR、有道 OCR、Google OCR
- **语音合成**：离线语音合成、火山语音合成	、腾讯语音合成、Google 语音合成、Microsoft 语音合成

## 安装

[![Download on the Mac App Store](https://cdn.ripperhe.com/oss/master/2022/0626/Download_on_the_Mac_App_Store_Badge_US-UK_RGB_blk_092917.svg)](https://apps.apple.com/cn/app/id1630034110#?platform=mac)

## 使用方法

详细使用方法请直接查看文档 [👉 点此跳转文档](https://bobtranslate.com)

Bob 是一个菜单栏软件，启动之后，菜单栏会出现一个图标，点击菜单选项即可触发相应的功能，如下所示：



### 翻译功能

| 方式 | 描述 | 预览 |
| :---: | :---: | :---: |
| 划词翻译 | 选中需要翻译的文本之后，按下划词翻译快捷键即可（默认 `⌥ + D`） | ![划词翻译-句子](https://cdn.ripperhe.com/oss/master/2022/0508/translate_selection.gif) |
| 截图翻译 | 按下截图翻译快捷键（默认 `⌥ + S`），截取需要翻译的区域 | ![截图翻译-句子](https://cdn.ripperhe.com/oss/master/2022/0508/translate_snip.gif) |
| 输入翻译| 按下输入翻译快捷键（默认 `⌥ + A`），输入需要翻译的文本，`Enter` 键翻译 | ![输入翻译-单词](https://cdn.ripperhe.com/oss/master/2022/0508/translate_input.gif) |
| PopClip 调用 | 选中需要翻译的文本之后，点击 [PopClip](https://pilotmoon.com/popclip) 插件图标即可，详情见 [PopClip 调用](https://bobtranslate.com/guide/integration/popclip.html) | ![插件翻译-句子](https://cdn.ripperhe.com/oss/master/2022/0508/translate_popclip.gif) |

### OCR 功能

**截图识别**

* 按下「截图 OCR」快捷键（默认 `⇧ + ⌥ + S`）或者点击菜单栏 Bob 图标菜单中的「截图 OCR」
* 选中屏幕上的对应的位置
* 松手即可开始识别



**静默截图 OCR**

* 按下「静默截图 OCR」快捷键（默认 `⌥` `C`）或者点击菜单栏 Bob 图标菜单中的「静默截图 OCR」
* 选中屏幕上的对应的位置
* 松手即可开始识别

「静默截图 OCR」不会自动显示 OCR 窗口，识别完成后直接将文本拷贝到剪切板。

**访达选图 OCR**

按下「访达选图 OCR」快捷键（没有设置默认快捷键，可去「 Bob 偏好设置-OCR-OCR 设置」添加）或者点击菜单栏 Bob 图标菜单中的「访达选图 OCR」。

在弹出的访达窗口中选中对应的图片文件（可以一次性选中多张），点击右下角「开始识别」即可。



## 感谢

* 感谢 [@isee15](https://github.com/isee15/Capture-Screen-For-Multi-Screens-On-Mac) 提供最初版本截图功能的思路
* 感谢 [@可口可乐](https://github.com/wakewon) 长期帮忙解决用户反馈
* 感谢 [@ix4n33](https://github.com/IsaacXen) 不定期提供技术支持
* 感谢朋友们的赞赏 [赞赏列表](https://bobtranslate.com/general/reward.html)
* 感谢作者们发文支持 Bob（时间倒序）
    * @火山翻译：[双厨狂喜：Bob x 火山翻译梦幻联动！](https://mp.weixin.qq.com/s/c5zwcDsCgL10m_WdBiksEQ)
    * @奇客派：[macOS 翻译工具 Bob 大更新：支持更多翻译服务，增强 OCR 功能](https://sspai.com/post/62721)
    * @鹿額：[截图/划词/输入都能查，快捷高效的 macOS 翻译工具: Bob](https://sspai.com/post/58249)
    * @Newlearnerの自留地：[Bob：一款 macOS 全局翻译软件，支持划词翻译和截图翻译](https://t.me/NewlearnerChannel/3329)

## 优秀软件推荐

* [uPic: 一个强大的图床工具](https://github.com/gee1k/uPic)
* [MWeb Pro: 专业的 Markdown 写作、记笔记、静态博客生成软件](https://zh.mweb.im/)
* [Picsee: 专业的图片采集收藏、照片整理标记、查找查看、分享协同软件](https://picsee.chitaner.com)
* [赤友 NTFS 助手: Mac用户最喜欢的 NTFS for Mac 读写软件](https://aibotech.cn/ntfs-for-mac/)
* [赤友右键超人: Mac 右键快捷操作工具，集合右键新建文件、卸载软件、压缩文件、剪切、截图录屏超多功能，一键快速搞定！](https://aibotech.cn/right-click-menu/)

","'bobapp', 'chatgpt', 'macos', 'ocr', 'openai', 'translate', 'translation', 'translator'",2019-10-19T13:28:07Z,2024-02-21T10:29:39Z,1,1,8846,78,"('ripperhe', 20)",0,0,
ruanyf/free-books,互联网上的免费书籍,"免费计算机书籍汇总。

没有注明语种的，都为英语资源。

## 目录

- [一、Web 开发](#一web-开发)
- [二、系统管理](#二系统管理)
- [三、编程语言](#三编程语言)
- [四、数据库](#四数据库)
- [五、软件开发](#五软件开发)
- [六、人工智能](#六人工智能)
- [七、数学理论](#七数学理论)
- [八、其他](#八其他)

## 一、Web 开发

### 1.1 JavaScript 语言

1. The Modern JavaScript Tutorial（[中文](https://zh.javascript.info/)，[英文](https://javascript.info/)）
1. [你不知道的 JS](https://github.com/getify/You-Dont-Know-JS)
1. [Speaking JavaScript](http://speakingjs.com/)
1. [急性子程序员的 JavaScript 教程](https://exploringjs.com/impatient-js/index.html)
1. [JavaScript 语言教程](https://wangdoc.com/javascript/)（中文）
1. [理解 ES6](https://github.com/nzakas/understandinges6/tree/master/manuscript)
1. [探索 ES6](https://exploringjs.com/es6/)
1. [探索 ES2016 和 ES2017](https://exploringjs.com/es2016-es2017.html)
1. [探索 ES2018 和 ES2019](https://exploringjs.com/es2018-es2019/toc.html)
1. [ES6 标准入门](http://es6.ruanyifeng.com/)（中文）
1. [Eloquent JavaScript（第三版）](https://eloquentjavascript.net/)
1. JavaScript 的前20年（JavaScript: The First 20 Years）（[中文](https://cn.history.js.org/)，[英文](https://zenodo.org/record/3707008)）
1. [TypeScript 教程](https://exploringjs.com/tackling-ts/)
1. Node.js 入门（[中文](https://www.nodebeginner.org/index-zh-cn.html)，[英文](https://www.nodebeginner.org/)）
1. [React 编程模式](https://github.com/krasimir/react-in-patterns)
1. [React 应用开发教程](https://github.com/tyroprogrammer/learn-react-app/tree/master/src/tutorial)
1. [Acceptance Test Driven Development with React](https://leanpub.com/build-react-app-with-atdd)
1. [现代 Web 开发](https://fullstackopen.com/en)：Nodejs + React 的在线互动教程。
1. [Node.js 调试指南](https://github.com/nswbmw/node-in-debugging)
1. [精通 JavaScript 模块](https://github.com/mjavascript/mastering-modular-javascript)
1. [GraphQL 之路](https://www.robinwieruch.de/the-road-to-graphql-book/)
1. [JavaScript 数据可视化](http://jsdatav.is/intro.html)
1. [OAuth 2.0 Servers](https://www.oauth.com/)
1. [JAMstack Web 开发](https://www.netlify.com/oreilly-jamstack/)
1. [SICP（JavaScript 版）](https://sicp.comp.nus.edu.sg/)

### 1.2 其他 Web 开发

1. [http3-explained](https://github.com/bagder/http3-explained)
1. [CSS Animation 101](https://github.com/cssanimation/css-animation-101)
1. [实用排版指南](https://practicaltypography.com/)
1. [Azure 介绍（第二版）](https://azure.microsoft.com/en-us/resources/azure-for-architects/)，[下载](https://github.com/PacktPublishing/Azure-for-Architects)
1. [Chrome 扩展及应用开发](https://www.ituring.com.cn/book/1421)（中文）
1. [网站可靠性工作手册](https://landing.google.com/sre/book.html)
1. [WebRTC 教程](https://webrtcforthecurious.com/)（WebRTC for the Curious）

## 二、系统管理

1. [Linux 命令行](http://linuxcommand.org/tlcl.php)（The Linux Command Line）, [下载](http://sourceforge.net/projects/linuxcommand/files/TLCL/13.07/TLCL-13.07.pdf/download)，[中译](http://billie66.github.io/TLCL/index.html)
1. [学习命令行](https://hellowebbooks.com/learn-command-line/)
1. [鸟哥的 Linux 私房菜](https://linux.vbird.org/linux_basic/centos7/)（中文）
1. [Linux 之旅](https://linuxjourney.com/)
1. [Linux 从零开始](http://www.linuxfromscratch.org/lfs/view/10.0-rc1/prologue/foreword.html)（Linux From Scratch）
1. [Bash 脚本教程](https://wangdoc.com/bash/)（中文）
1. [Pure Bash Bible](https://github.com/dylanaraps/pure-bash-bible)
1. [Unix 编程艺术](http://www.catb.org/~esr/writings/taoup/html/)
1. [计算机系统导论：以汇编语言与 Linux 系统为例](http://bob.cs.sonoma.edu/IntroCompOrg-x64/book.html)
1. [计算机网络：系统方法](https://github.com/SystemsApproach/book)
1. [计算机组织导论：以树莓派和 ARM 汇编语言为例](http://bob.cs.sonoma.edu/IntroCompOrg-RPi/frontmatter-1.html)
1. [计算机网络：原理，协议和实践](http://cnp3book.info.ucl.ac.be/#)
1. [Linux 内核揭密](https://xinqiu.gitbooks.io/linux-insides-cn/content/index.html)（中文）
1. [运维工程师学校（Ops School）](http://www.opsschool.org/)
1. [文件系统设计](https://www.amazon.com/exec/obidos/ASIN/1558604979/qid=1012094537/sr=8-1/ref=sr_8_71_1/103-9130044-4352613)（Practical File System Design）, [下载](http://www.nobius.org/~dbg/practical-file-system-design.pdf)
1. [Docker 初学者教程](https://docker-curriculum.com/)
1. [开源应用程序的体系结构](http://aosabook.org/en/)
1. [MacOS 的安全和隐私指南](https://github.com/drduh/macOS-Security-and-Privacy-Guide/blob/master/README-cn.md)（中文）

## 三、编程语言

### 3.1 C，C++

1. [Essential C](http://cslibrary.stanford.edu/101/EssentialC.pdf)（PDF）
1. [Modern C（第二版）](http://modernc.gforge.inria.fr/)
1. [C 语言学习资料](http://www.isthe.com/chongo/tech/comp/c/index.html)
1. [C 语言系统编程](https://github.com/illinois-cs241/coursebook)（[在线阅读](http://cs241.cs.illinois.edu/coursebook/index.html)）
1. C 语言教程：构建 Lisp 编译器（[中文](https://ksco.gitbooks.io/build-your-own-lisp/)，[英文](http://www.buildyourownlisp.com/contents)）
1. [C 语言内部原理](http://www.avabodh.com/cin/cin.html)（C Internals）
1. [C++ Annotations](http://www.icce.rug.nl/documents/cplusplus/)
1. [C/C++ 面向 wasm 编程—— Emscripten 工程实践](https://github.com/3dgen/cppwasm-book)

### 3.2 Go

1. [Go 101](https://go101.org/)
1. [Golangbot 的 Go 语言初级教程](https://golangbot.com/)，[中译](https://www.yuque.com/ksco/ogg7um)
1. [Go 高级编程](https://github.com/chai2010/advanced-go-programming-book)
1. [高性能 Go 代码工坊](https://dave.cheney.net/high-performance-go-workshop/gopherchina-2019.html)
1. [Go 语言编程](https://www.digitalocean.com/community/books/how-to-code-in-go-ebook)（How To Code in Go）

### 3.3 Python

1. [Python 编程基础](https://archive.org/details/2018Fundamentals.ofPython)（PDF）
1. [Python 编程入门](https://github.com/webartifex/intro-to-python)
1. [Python 语法笔记](https://thomas-cokelaer.info/tutorials/python/index.html)
1. [Python 科学应用入门](http://www.freetechbooks.com/introduction-to-python-for-computational-science-and-engineering-t884.html)（Introduction to Python for Computational Science and Engineering）, [下载](http://www.southampton.ac.uk/~fangohr/training/python/pdfs/Python-for-Computational-Science-and-Engineering.pdf)
1. [Python - 100天从新手到大师](https://github.com/jackfrued/Python-100-Days)（中文）
1. [A Byte of Python](https://python.swaroopch.com/)，中译：[简明 Python 教程](https://bop.mol.uno/)
1. [使用 Python 写一个自己的游戏](https://www.dbooks.org/invent-your-own-computer-games-with-python-1503212300/)
1. [The Hitchhiker’s Guide to Python!](https://docs.python-guide.org/)，中译：[Python 开发最佳实践指南](https://pythonguidecn.readthedocs.io/zh/latest/)
1. [廖雪峰 Python 教程](https://www.liaoxuefeng.com/wiki/1016959663602400)（中文）
1. [Python 语言互动教程](http://projectpython.net/chapter00/)
1. [Python 算法与数据结构](http://interactivepython.org/runestone/static/pythonds/index.html)（第二版），[中译](https://github.com/facert/python-data-structure-cn)
1. SICP（Python 版）（[英文](https://wizardforcel.gitbooks.io/sicp-in-python/content/)，[中文](https://github.com/wizardforcel/sicp-py-zh)）
1. [Python 数据科学手册](https://github.com/jakevdp/PythonDataScienceHandbook)
1. [Test-Driven Web Development with Python](https://www.obeythetestinggoat.com/pages/book.html#toc)
1. [Automate the Boring Stuff with Python](https://automatetheboringstuff.com/)
1. [如何使用 Python3 编程](https://www.digitalocean.com/community/tutorials/digitalocean-ebook-how-to-code-in-python)
1. [社交媒体挖掘](http://socialdata.site/)
1. [数据科学项目 Python 实战](https://www.digitalocean.com/community/tutorials/machine-learning-projects-python-a-digitalocean-ebook)
1. [HelloDjango - Django 博客教程](https://www.zmrenwu.com/courses/HelloDjango-blog-tutorial/)（中文）
1. [使用 Python 学习计量经济学](https://lectures.quantecon.org/_downloads/pdf/py/Quantitative%20Economics%20with%20Python.pdf)（PDF）
1. [黑客的贝叶斯方法：以 Python 为例](https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers)
1. [解决算法和数据结构问题（Python 版）](https://www.cs.auckland.ac.nz/compsci105s1c/resources/ProblemSolvingwithAlgorithmsandDataStructures.pdf)（Problem Solving with Algorithms and Data Structures）

### 3.4 Rust

1. [Rust 语言导论](https://stevedonovan.github.io/rust-gentle-intro/readme.html)
1. [Rust 编程语言](https://www.jyotirmoy.net/posts/2018-12-01-rust-book.html)
1. [Rust By Example](https://doc.rust-lang.org/stable/rust-by-example/index.html)

### 3.5 其他编程语言

1. [编程语言基础：Agda 语言描述](https://agda-zh.github.io/PLFA-zh/)（中文）
1. [Awk 编程语言](https://ia802309.us.archive.org/25/items/pdfy-MgN0H1joIoDVoIC7/The_AWK_Programming_Language.pdf)
1. [C# 语言免费教程](https://www.tutlane.com/tutorial/csharp/csharp-tutorial)
1. [SICP（Clojure 版）](http://www.sicpdistilled.com/)
1. [Clojure for the Brave and True](https://www.braveclojure.com/clojure-for-the-brave-and-true/)
1. [学习 ClojureScript](https://www.learn-clojurescript.com/)
1. [廖雪峰 Java 教程](https://www.liaoxuefeng.com/wiki/1252599548343744)（中文）
1. [计算机科学：以 Julia 语言为例](https://benlauwens.github.io/ThinkJulia.jl/latest/book.html)
1. [使用 Julia 语言学习统计学](https://people.smp.uq.edu.au/YoniNazarathy/julia-stats/StatisticsWithJulia.pdf)（PDF）
1. [Haskell 趣学指南](http://fleurer.github.io/lyah/)（中文）
1. [Real World Haskell 中文版](http://cnhaskell.com/index.html)（中文）
1. [Haskell 语言48小时教程](https://en.wikibooks.org/wiki/Write_Yourself_a_Scheme_in_48_Hours)
1. [Haskell 语言入门](http://dev.stephendiehl.com/hask/)
1. [Common Lisp 实战教程](http://www.gigamonkeys.com/book/)
1. [Lisp 漫画教程](http://www.lisperati.com/casting.html)（Casting Spels in Lisp）
1. [Nim 语言编程](http://ssalewski.de/nimprogramming.html)
1. [OCaml 语言在线教程](http://www.cs.cornell.edu/courses/cs3110/2019sp/textbook/)
1. [高阶 Perl](https://hop.perl.plover.com/)
1. [Prolog 的艺术](https://mitpress.mit.edu/books/art-prolog-second-edition)（The art of Prolog）
1. [我爱 Ruby](https://i-love-ruby.gitlab.io/)
1. [Ruby on Rails Tutorial](https://www.railstutorial.org/book)
1. [汇编语言初学者教程](https://yurichev.com/writings/AL4B-EN.pdf)（PDF）
1. [ARM 汇编语言简介](http://bob.cs.sonoma.edu/IntroCompOrg-RPi/intro-co-rpi.html)
1. [PC Assembly Language](https://pacman128.github.io/pcasm/)

## 四、数据库

1. [SQL 开源教程](https://selectstarsql.com/)
1. [如何开发一个简单的数据库](https://cstack.github.io/db_tutorial/)
1. [数据库基础](http://webdam.inria.fr/Alice/)
1. [PostgreSQL 模式设计](https://www.graphile.org/postgraphile/postgresql-schema-design/)

## 五、软件开发

1. [计算机科学入门](https://www.bottomupcs.com/index.xhtml)
1. [编写解释器](http://craftinginterpreters.com/contents.html)（Crafting interpreters）
1. [Emulator 101](http://www.emulator101.com/)
1. [计算机程序的结构和解释（SICP）](https://mitpress.mit.edu/sites/default/files/sicp/index.html)
1. [编写程序（Composing Programs）](http://www.composingprograms.com/)
1. [从零开始写一个操作系统](https://github.com/cfenollosa/os-tutorial)
1. [编译器教程](https://github.com/DoctorWkt/acwj): 如何写一个最小的 C 语言编译器
1. [写一个 C 语言解释器](https://github.com/lotabout/write-a-C-interpreter/tree/master/tutorial/en)（Write a C interpreter）
1. [System Programming](https://github.com/angrave/SystemProgramming/wiki)
1. [How to Design Programs](https://htdp.org/2018-01-06/Book/index.html)（第二版）
1. [算法](http://jeffe.cs.illinois.edu/teaching/algorithms/)，by Jeff Erickson，[GitHub 仓库](https://github.com/jeffgerickson/algorithms)
1. [A* 算法教程](http://theory.stanford.edu/~amitp/GameProgramming/)
1. [逆向工程入门](https://github.com/dennis714/RE-for-beginners)（Reverse Engineering for Beginners，[英文](http://beginners.re/Reverse_Engineering_for_Beginners-en.pdf)，[中文卷一](https://beginners.re/RE4B-CN-vol1.pdf), [中文卷二](https://beginners.re/RE4B-CN-vol2.pdf)）
1. [逆向工程初学者教程](https://www.begin.re/)
1. [函数式编程：以 Scala 为例](https://github.com/winitzki/sofp)
1. [学习 ClojureScript](https://www.learn-clojurescript.com/)
1. [并行编程](https://mirrors.edge.kernel.org/pub/linux/kernel/people/paulmck/perfbook/perfbook.html)
1. [谷歌 SRE（网站可靠性工程）丛书](https://landing.google.com/sre/books/)
1. [轻松学习 Vim](https://github.com/iggredible/Learn-Vim)（Learn Vim the smart way）
1. [Vim 从入门到精通](https://github.com/wsdjeg/vim-galore-zh_cn)（中文）
1. [Qt5 教程](https://qmlbook.github.io/)
1. [Pro Git book](https://git-scm.com/book)

## 六、人工智能

1. [Machine Learning Yearning](https://github.com/ajaymache/machine-learning-yearning)，by 吴恩达
1. [计算与推断：数据科学基础](https://ds8.gitbooks.io/textbook/content/)
1. [人工智能编程的 Lisp 范例](https://github.com/norvig/paip-lisp)（Paradigms of Artificial Intelligence Programming）
1. [Bloomberg 机器学习课程](https://bloomberg.github.io/foml/)
1. [深度学习/机器学习面试笔记](https://github.com/DiHiera/Algorithm_Interview_Notes-Chinese-master)（中文）
1. [数据挖掘教材](https://www-users.cs.umn.edu/~kumar001/dmbook/index.php)
1. [机器学习解释](https://christophm.github.io/interpretable-ml-book/)
1. 深入深度学习（[英文](https://d2l.ai/)，[中文](https://zh.d2l.ai/)）
1. [TensorFlow-Course](https://github.com/open-source-for-science/TensorFlow-Course)
1. [简单粗暴 TensorFlow 2](https://tf.wiki/)（中文）
1. [基于模型的机器学习](http://mbmlbook.com/)
1. [Deep Learning Project](https://github.com/Spandan-Madan/DeepLearningProject)
1. [强化学习导论](http://incompleteideas.net/book/the-book.html)（第二版）
1. [Grokking Deep Learning](https://livebook.manning.com/#!/book/grokking-deep-learning/)
1. [神经网络与深度学习](https://github.com/nndl/nndl.github.io)
1. [让产品经理全面理解深度学习](https://easyai.tech/blog/65pdf-pm-understand-dl/)（中文）
1. [面向机器学习的特征工程](http://fe4ml.apachecn.org/#/)（中文）
1. [理解机器学习：从理论到算法](https://www.cse.huji.ac.il/~shais/UnderstandingMachineLearning/copy.html)
1. [Dive into Deep Learning](http://www.d2l.ai/index.html)
1. [数据科学基础](https://www.cs.cornell.edu/jeh/book%20no%20so;utions%20March%202019.pdf)
1. [机器学习的数学基础](https://mml-book.github.io/)
1. [自然语言处理](https://github.com/jacobeisenstein/gt-nlp-class/raw/master/notes/eisenstein-nlp-notes.pdf)
1. [面向程序员的深度学习](https://github.com/fastai/fastbook)（Practical Deep Learning for Coders）（[官网](https://course.fast.ai/)）
1. [从头学习机器学习](https://dafriedman97.github.io/mlbook/content/introduction.html)（Machine Learning from Scratch）

## 七、数学理论

### 7.1 微积分

1. [进入纯数学](https://infinitedescent.xyz/)
1. [微积分很容易](http://calculusmadeeasy.org/)（Calculus made easy）

### 7.2 统计与概率

1. [Seeing Theory：概率论和统计入门](https://seeing-theory.brown.edu/#firstPage)
1. [Statistics Done Wrong](https://www.statisticsdonewrong.com/index.html)
1. [统计小手册](http://www.jerrydallal.com/LHSP/LHSP.htm)
1. [统计学习导论](http://faculty.marshall.usc.edu/gareth-james/ISL/)（An Introduction to Statistical Learning）
1. [麻省理工学院统计学课件](https://ocw.mit.edu/courses/mathematics/18-650-statistics-for-applications-fall-2016/lecture-slides/)
1. [Prob 140](http://prob140.org/textbook/README)：概率论教材
1. [预测：原理与实践](https://otexts.org/fpp2/)
1. [数据科学的原理与技巧](https://www.textbook.ds100.org/)
1. [概率、统计和随机过程导论](https://probabilitycourse.com/)
1. [概率，统计和随机过程讲义](https://web.ma.utexas.edu/users/gordanz/lecture_notes_page.html)
1. [随机过程导论](https://web.ma.utexas.edu/users/gordanz/notes/introduction_to_stochastic_processes.pdf)

### 7.3 线性代数

1. [深度学习的线性代数基础](https://hadrienj.github.io/posts/Deep-Learning-Book-Series-Introduction/)
1. [线性代数教材](http://joshua.smcvt.edu/linearalgebra/#current_version)
1. [线性代数](https://hefferon.net/linearalgebra/), by Jim Hefferon
1. [沉浸式线性代数](http://immersivemath.com/ila/index.html)
1. [交互式线性代数教程](https://textbooks.math.gatech.edu/ila/)

### 7.4 密码学

1. [应用加密法的研究生教材](http://toc.cryptobook.us/)
1. [加密学导论](https://intensecrypto.org/public/)
1. [Crypto 101](https://www.crypto101.io/)
1. [密码学很容易](https://link.springer.com/book/10.1007%2F978-3-319-21936-3)（Cryptography Made Simple）
1. [程序员的实用密码学](https://cryptobook.nakov.com/)
1. [密码学的喜悦](http://web.engr.oregonstate.edu/~rosulekm/crypto/)（The Joy of Cryptography）

### 7.5 其他理论书籍

1. [计算机科学的数学基础](https://courses.csail.mit.edu/6.042/spring17/mcs.pdf)（Mathematics for Computer Science, PDF）
1. [计算机图形学教程](http://www.scratchapixel.com/)
1. [计算机科学的理论导论](https://introtcs.org/public/index.html)
1. [好奇者的量子计算入门](https://quantum.country/qcvc)
1. [简单逻辑](https://book.simply-logical.space/)
1. [写给程序员的范畴论](https://github.com/hmemcpy/milewski-ctfp-pdf/)（Category Theory for Programmers）
1. [写给科学家的范畴论](http://category-theory.mitpress.mit.edu/)（Category Theory for the Sciences）, [下载](https://github.com/mmai/Category-Theory-for-the-Sciences)
1. [图论的 D3 解释](https://mrpandey.github.io/d3graphTheory/index.html)
1. [离散数学导论](http://discrete.openmathbooks.org/dmoi3.html)
1. [编译器设计基础](http://hjemmesider.diku.dk/~torbenm/Basics/basics_lulu2.pdf)（PDF）

## 八、其他

1. [Google 面试自学手册](https://github.com/jwasham/coding-interview-university/blob/master/translations/README-cn.md)（中文）
1. [技术面试手册](https://yangshun.github.io/tech-interview-handbook/)
1. [如何在应用商店成功？](https://github.com/amirrajan/survivingtheappstore)
1. [计算机之前的计算设备](http://ed-thelen.org/comp-hist/CBC.html)
1. [日语语法教程](https://res.wokanxing.info/jpgramma/conditionals.html)（中文）
1. [基础德语教程](https://courses.dcs.wisc.edu/wp/readinggerman/print-entire-textbook/)
1. [任正非文集](./docs/任正非文集.epub)：任正非1994年～2018年的几百篇讲话。
1. [老外的深圳电子产品采购指南](https://bunniefoo.com/bunnie/essential/essential-guide-shenzhen-web.pdf)（PDF）
1. [How to get rich](https://nav.al/rich)
1. [Marc Andreessen 创业文集](https://pmarchive.com/)
1. [东京防灾手册](http://www.metro.tokyo.jp/chinese/guide/bosai/index.html)（中文）
1. [谷歌的技术文档写作指南](https://developers.google.com/style/)
1. [《几何原本》在线版](https://www.c82.net/euclid/)
1. [数据可视化基础](https://serialmentor.com/dataviz/)
1. [美国海军电气与电子培训系列教材](https://archive.org/search.php?query=subject%3A%22The+Navy+Electricity+and+Electronics+Training+Series%22&sort=publicdate)

",,2019-08-19T08:24:38Z,2024-03-28T03:59:19Z,10,9,14627,540,"('ruanyf', 117), ('LooJee', 3), ('jetma', 2), ('krynv', 2), ('zaoqi', 2), ('codeyu', 2), ('ClemFandango2', 1), ('ailuoku6', 1), ('ruanyf', 1), ('thinkdancer', 1)",4,3,
don/BluetoothSerial,Cordova (PhoneGap) Plugin for Serial Communication over Bluetooth,"# Bluetooth Serial Plugin for PhoneGap

This plugin enables serial communication over Bluetooth. It was written for communicating between Android or iOS and an Arduino.

Android and Windows Phone use Classic Bluetooth.  iOS uses Bluetooth Low Energy.

## Supported Platforms

* Android
* iOS with [RedBearLab](http://redbearlab.com) BLE hardware, [Adafruit Bluefruit LE](http://www.adafruit.com/products/1697), [Laird BL600](http://www.lairdtech.com/Products/Embedded-Wireless-Solutions/Bluetooth-Radio-Modules/BL600-Series/#.VBI7AS5dUzI), [BlueGiga](https://bluegiga.zendesk.com/entries/29185293--BGScript-spp-over-ble-AT-command-SPP-implementation-for-BLE), or [HC-02](http://www.hc01.com/productdetail?productid=20180314021)
* Windows Phone 8
* Browser (Testing only. See [comments](https://github.com/don/BluetoothSerial/blob/master/src/browser/bluetoothSerial.js).)

[Supporting other Bluetooth Low Energy hardware](#supporting-other-ble-hardware)

## Limitations

 * The phone must initiate the Bluetooth connection
 * iOS Bluetooth Low Energy requires iPhone 4S, iPhone5, iPod 5, or iPad3+
 * Will *not* connect Android to Android[*](https://github.com/don/BluetoothSerial/issues/50#issuecomment-66405396)
 * Will *not* connect iOS to iOS[*](https://github.com/don/BluetoothSerial/issues/75#issuecomment-52591397)

# Installing

Install with Cordova cli

    $ cordova plugin add cordova-plugin-bluetooth-serial

Note that this plugin's id changed from `com.megster.cordova.bluetoothserial` to `cordova-plugin-bluetooth-serial` as part of the migration from the [Cordova plugin repo](http://plugins.cordova.io/) to [npm](https://www.npmjs.com/).

# Examples

There are some [sample projects](https://github.com/don/BluetoothSerial/tree/master/examples) included with the plugin.

# API

## Methods

- [bluetoothSerial.connect](#connect)
- [bluetoothSerial.connectInsecure](#connectInsecure)
- [bluetoothSerial.disconnect](#disconnect)
- [bluetoothSerial.write](#write)
- [bluetoothSerial.available](#available)
- [bluetoothSerial.read](#read)
- [bluetoothSerial.readUntil](#readuntil)
- [bluetoothSerial.subscribe](#subscribe)
- [bluetoothSerial.unsubscribe](#unsubscribe)
- [bluetoothSerial.subscribeRawData](#subscriberawdata)
- [bluetoothSerial.unsubscribeRawData](#unsubscriberawdata)
- [bluetoothSerial.clear](#clear)
- [bluetoothSerial.list](#list)
- [bluetoothSerial.isEnabled](#isenabled)
- [bluetoothSerial.isConnected](#isconnected)
- [bluetoothSerial.readRSSI](#readrssi)
- [bluetoothSerial.showBluetoothSettings](#showbluetoothsettings)
- [bluetoothSerial.enable](#enable)
- [bluetoothSerial.discoverUnpaired](#discoverunpaired)
- [bluetoothSerial.setDeviceDiscoveredListener](#setdevicediscoveredlistener)
- [bluetoothSerial.clearDeviceDiscoveredListener](#cleardevicediscoveredlistener)
- [bluetoothSerial.setName](#setname)
- [bluetoothSerial.setDiscoverable](#setdiscoverable)

## connect

Connect to a Bluetooth device.

    bluetoothSerial.connect(macAddress_or_uuid, connectSuccess, connectFailure);

### Description

Function `connect` connects to a Bluetooth device.  The callback is long running.  Success will be called when the connection is successful.  Failure is called if the connection fails, or later if the connection disconnects. An error message is passed to the failure callback.

#### Android
For Android, `connect` takes a MAC address of the remote device.

#### iOS
For iOS, `connect` takes the UUID of the remote device.  Optionally, you can pass an **empty string** and the plugin will connect to the first BLE peripheral.

#### Windows Phone
For Windows Phone, `connect` takes a MAC address of the remote device. The MAC address can optionally surrounded with parenthesis. e.g. `(AA:BB:CC:DD:EE:FF)`


### Parameters

- __macAddress_or_uuid__: Identifier of the remote device.
- __connectSuccess__: Success callback function that is invoked when the connection is successful.
- __connectFailure__: Error callback function, invoked when error occurs or the connection disconnects.

## connectInsecure

Connect insecurely to a Bluetooth device.

    bluetoothSerial.connectInsecure(macAddress, connectSuccess, connectFailure);

### Description

Function `connectInsecure` works like [connect](#connect), but creates an insecure connection to a Bluetooth device.  See the [Android docs](http://goo.gl/1mFjZY) for more information.

#### Android
For Android, `connectInsecure` takes a macAddress of the remote device.

#### iOS
`connectInsecure` is **not supported** on iOS.

#### Windows Phone
`connectInsecure` is **not supported** on Windows Phone.

### Parameters

- __macAddress__: Identifier of the remote device.
- __connectSuccess__: Success callback function that is invoked when the connection is successful.
- __connectFailure__: Error callback function, invoked when error occurs or the connection disconnects.


## disconnect

Disconnect.

    bluetoothSerial.disconnect([success], [failure]);

### Description

Function `disconnect` disconnects the current connection.

### Parameters

- __success__: Success callback function that is invoked after the connection is disconnected. [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

## write

Writes data to the serial port.

    bluetoothSerial.write(data, success, failure);

### Description

Function `write` data to the serial port. Data can be an ArrayBuffer, string, array of integers, or a Uint8Array.

Internally string, integer array, and Uint8Array are converted to an ArrayBuffer. String conversion assume 8bit characters.

### Parameters

- __data__: ArrayBuffer of data
- __success__: Success callback function that is invoked when the connection is successful. [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    // string
    bluetoothSerial.write(""hello, world"", success, failure);

    // array of int (or bytes)
    bluetoothSerial.write([186, 220, 222], success, failure);

    // Typed Array
    var data = new Uint8Array(4);
    data[0] = 0x41;
    data[1] = 0x42;
    data[2] = 0x43;
    data[3] = 0x44;
    bluetoothSerial.write(data, success, failure);

    // Array Buffer
    bluetoothSerial.write(data.buffer, success, failure);

## available

Gets the number of bytes of data available.

    bluetoothSerial.available(success, failure);

### Description

Function `available` gets the number of bytes of data available.  The bytes are passed as a parameter to the success callback.

### Parameters

- __success__: Success callback function that is invoked when the connection is successful. [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.available(function (numBytes) {
        console.log(""There are "" + numBytes + "" available to read."");
    }, failure);

## read

Reads data from the buffer.

    bluetoothSerial.read(success, failure);

### Description

Function `read` reads the data from the buffer. The data is passed to the success callback as a String.  Calling `read` when no data is available will pass an empty String to the callback.

### Parameters

- __success__: Success callback function that is invoked with the number of bytes available to be read.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.read(function (data) {
        console.log(data);
    }, failure);

## readUntil

Reads data from the buffer until it reaches a delimiter.

    bluetoothSerial.readUntil('\n', success, failure);

### Description

Function `readUntil` reads the data from the buffer until it reaches a delimiter.  The data is passed to the success callback as a String.  If the buffer does not contain the delimiter, an empty String is passed to the callback. Calling `read` when no data is available will pass an empty String to the callback.

### Parameters

- __delimiter__: delimiter
- __success__: Success callback function that is invoked with the data.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.readUntil('\n', function (data) {
        console.log(data);
    }, failure);

## subscribe

Subscribe to be notified when data is received.

    bluetoothSerial.subscribe('\n', success, failure);

### Description

Function `subscribe` registers a callback that is called when data is received.  A delimiter must be specified.  The callback is called with the data as soon as the delimiter string is read.  The callback is a long running callback and will exist until `unsubscribe` is called.

### Parameters

- __delimiter__: delimiter
- __success__: Success callback function that is invoked with the data.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    // the success callback is called whenever data is received
    bluetoothSerial.subscribe('\n', function (data) {
        console.log(data);
    }, failure);

## unsubscribe

Unsubscribe from a subscription.

    bluetoothSerial.unsubscribe(success, failure);

### Description

Function `unsubscribe` removes any notification added by `subscribe` and kills the callback.

### Parameters

- __success__: Success callback function that is invoked when the connection is successful. [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.unsubscribe();

## subscribeRawData

Subscribe to be notified when data is received.

    bluetoothSerial.subscribeRawData(success, failure);

### Description

Function `subscribeRawData` registers a callback that is called when data is received. The callback is called immediately when data is received. The data is sent to callback as an ArrayBuffer. The callback is a long running callback and will exist until `unsubscribeRawData` is called.

### Parameters

- __success__: Success callback function that is invoked with the data.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    // the success callback is called whenever data is received
    bluetoothSerial.subscribeRawData(function (data) {
        var bytes = new Uint8Array(data);
        console.log(bytes);
    }, failure);

## unsubscribeRawData

Unsubscribe from a subscription.

    bluetoothSerial.unsubscribeRawData(success, failure);

### Description

Function `unsubscribeRawData` removes any notification added by `subscribeRawData` and kills the callback.

### Parameters

- __success__: Success callback function that is invoked when the connection is successful. [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.unsubscribeRawData();

## clear

Clears data in the buffer.

    bluetoothSerial.clear(success, failure);

### Description

Function `clear` removes any data from the receive buffer.

### Parameters

- __success__: Success callback function that is invoked when the connection is successful. [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

## list

Lists bonded devices

    bluetoothSerial.list(success, failure);

### Description

#### Android

Function `list` lists the paired Bluetooth devices.  The success callback is called with a list of objects.

Example list passed to success callback.  See [BluetoothDevice](http://developer.android.com/reference/android/bluetooth/BluetoothDevice.html#getName\(\)) and [BluetoothClass#getDeviceClass](http://developer.android.com/reference/android/bluetooth/BluetoothClass.html#getDeviceClass\(\)).

    [{
        ""class"": 276,
        ""id"": ""10:BF:48:CB:00:00"",
        ""address"": ""10:BF:48:CB:00:00"",
        ""name"": ""Nexus 7""
    }, {
        ""class"": 7936,
        ""id"": ""00:06:66:4D:00:00"",
        ""address"": ""00:06:66:4D:00:00"",
        ""name"": ""RN42""
    }]

#### iOS

Function `list` lists the discovered Bluetooth Low Energy peripheral.  The success callback is called with a list of objects.

Example list passed to success callback for iOS.

    [{
        ""id"": ""CC410A23-2865-F03E-FC6A-4C17E858E11E"",
        ""uuid"": ""CC410A23-2865-F03E-FC6A-4C17E858E11E"",
        ""name"": ""Biscuit"",
        ""rssi"": -68
    }]

The advertised RSSI **may** be included if available.

#### Windows Phone

Function `list` lists the paired Bluetooth devices.  The success callback is called with a list of objects.

Example list passed to success callback for Windows Phone.

    [{
        ""id"": ""(10:BF:48:CB:00:00)"",
        ""name"": ""Nexus 7""
    }, {
        ""id"": ""(00:06:66:4D:00:00)"",
        ""name"": ""RN42""
    }]

### Note

`id` is the generic name for `uuid` or [mac]`address` so that code can be platform independent.

### Parameters

- __success__: Success callback function that is invoked with a list of bonded devices.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.list(function(devices) {
        devices.forEach(function(device) {
            console.log(device.id);
        })
    }, failure);

## isConnected

Reports the connection status.

    bluetoothSerial.isConnected(success, failure);

### Description

Function `isConnected` calls the success callback when connected to a peer and the failure callback when *not* connected.

### Parameters

- __success__: Success callback function, invoked when device connected.
- __failure__: Error callback function, invoked when device is NOT connected.

### Quick Example

    bluetoothSerial.isConnected(
        function() {
            console.log(""Bluetooth is connected"");
        },
        function() {
            console.log(""Bluetooth is *not* connected"");
        }
    );

## isEnabled

Reports if bluetooth is enabled.

    bluetoothSerial.isEnabled(success, failure);

### Description

Function `isEnabled` calls the success callback when bluetooth is enabled and the failure callback when bluetooth is *not* enabled.

### Parameters

- __success__: Success callback function, invoked when Bluetooth is enabled.
- __failure__: Error callback function, invoked when Bluetooth is NOT enabled.

### Quick Example

    bluetoothSerial.isEnabled(
        function() {
            console.log(""Bluetooth is enabled"");
        },
        function() {
            console.log(""Bluetooth is *not* enabled"");
        }
    );

## readRSSI

Reads the RSSI from the connected peripheral.

    bluetoothSerial.readRSSI(success, failure);

### Description

Function `readRSSI` calls the success callback with the rssi.

**BLE only** *This function is experimental and the API may change*

### Parameters

- __success__: Success callback function that is invoked with the rssi value.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.readRSSI(
        function(rssi) {
            console.log(rssi);
        }
    );

## showBluetoothSettings

Show the Bluetooth settings on the device.

    bluetoothSerial.showBluetoothSettings(success, failure);

### Description

Function `showBluetoothSettings` opens the Bluetooth settings on the operating systems.

#### iOS

`showBluetoothSettings` is not supported on iOS.

### Parameters

- __success__: Success callback function [optional]
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.showBluetoothSettings();

## enable

Enable Bluetooth on the device.

    bluetoothSerial.enable(success, failure);

### Description

Function `enable` prompts the user to enable Bluetooth.

#### Android

`enable` is only supported on Android and does not work on iOS or Windows Phone.

If `enable` is called when Bluetooth is already enabled, the user will not prompted and the success callback will be invoked.

### Parameters

- __success__: Success callback function, invoked if the user enabled Bluetooth.
- __failure__: Error callback function, invoked if the user does not enabled Bluetooth.

### Quick Example

    bluetoothSerial.enable(
        function() {
            console.log(""Bluetooth is enabled"");
        },
        function() {
            console.log(""The user did *not* enable Bluetooth"");
        }
    );

## discoverUnpaired

Discover unpaired devices

    bluetoothSerial.discoverUnpaired(success, failure);

### Description

#### Android

Function `discoverUnpaired` discovers unpaired Bluetooth devices. The success callback is called with a list of objects similar to `list`, or an empty list if no unpaired devices are found.

Example list passed to success callback.

    [{
        ""class"": 276,
        ""id"": ""10:BF:48:CB:00:00"",
        ""address"": ""10:BF:48:CB:00:00"",
        ""name"": ""Nexus 7""
    }, {
        ""class"": 7936,
        ""id"": ""00:06:66:4D:00:00"",
        ""address"": ""00:06:66:4D:00:00"",
        ""name"": ""RN42""
    }]

The discovery process takes a while to happen. You can register notify callback with [setDeviceDiscoveredListener](#setdevicediscoveredlistener).
You may also want to show a progress indicator while waiting for the discover proces to finish, and the sucess callback to be invoked.

Calling `connect` on an unpaired Bluetooth device should begin the Android pairing process.

#### iOS

`discoverUnpaired` is not supported on iOS. iOS uses Bluetooth Low Energy and `list` discovers devices without pairing.

#### Windows Phone

`discoverUnpaired` is not supported on Windows Phone.

### Parameters

- __success__: Success callback function that is invoked with a list of unpaired devices.
- __failure__: Error callback function, invoked when error occurs. [optional]

### Quick Example

    bluetoothSerial.discoverUnpaired(function(devices) {
        devices.forEach(function(device) {
            console.log(device.id);
        })
    }, failure);

## setDeviceDiscoveredListener

Register a notify callback function to be called during bluetooth device discovery. For callback to work, discovery process must
be started with [discoverUnpaired](#discoverunpaired).
There can be only one registered callback.

Example object passed to notify callback.

    {
        ""class"": 276,
        ""id"": ""10:BF:48:CB:00:00"",
        ""address"": ""10:BF:48:CB:00:00"",
        ""name"": ""Nexus 7""
    }

#### iOS & Windows Phone

See [discoverUnpaired](#discoverunpaired).

### Parameters

- __notify__: Notify callback function that is invoked when device is discovered during discovery process.

### Quick Example

    bluetoothSerial.setDeviceDiscoveredListener(function(device) {
		console.log('Found: '+device.id);
    });

## clearDeviceDiscoveredListener

Clears notify callback function registered with [setDeviceDiscoveredListener](#setdevicediscoveredlistener).

### Quick Example

    bluetoothSerial.clearDeviceDiscoveredListener();

## setName

Sets the human readable device name that is broadcasted to other devices.

    bluetoothSerial.setName(newName);

#### Android
For Android, `setName` takes a String for the new name.

#### iOS
Not currently implemented.

#### Windows Phone
Not currently implemented.

### Parameters

- __newName__: Desired name of device.

### Quick Example

    bluetoothSerial.setName(""Really cool name"");

## setDiscoverable

Makes the device discoverable by other devices.

    bluetoothSerial.setDiscoverable(discoverableDuration);

#### Android
For Android, `setDiscoverable` takes an int for the number of seconds device should be discoverable. A time of 0 will make it permanently discoverable.

#### iOS
Not currently implemented.

#### Windows Phone
Not currently implemented.

### Parameters

- __discoverableDuration__: Desired number of seconds device should be discoverable for.

### Quick Example

    bluetoothSerial.setDiscoverable(0);

# Misc

## Where does this work?

### Android

Current development is done with Cordova 4.2 on Android 5. Theoretically this code runs on PhoneGap 2.9 and greater.  It should support Android-10 (2.3.2) and greater, but I only test with Android 4.x+.

Development Devices include
 * Nexus 5 with Android 5
 * Samsung Galaxy Tab 10.1 (GT-P7510) with Android 4.0.4 (see [Issue #8](https://github.com/don/BluetoothSerial/issues/8))
 * Google Nexus S with Android 4.1.2
 * Nexus 4 with Android 5
 * Samsung Galaxy S4 with Android 4.3

On the Arduino side I test with [Sparkfun Mate Silver](https://www.sparkfun.com/products/10393) and the [Seeed Studio Bluetooth Shield](http://www.seeedstudio.com/depot/bluetooth-shield-p-866.html?cPath=19_21). The code should be generic and work with most hardware.

I highly recommend [Adafruit's Bluefruit EZ-Link](http://www.adafruit.com/products/1588).

### iOS

**NOTE: Currently iOS only works with RedBear Labs Hardware, Adafruit Bluefruit LE, Laird BL600, and BlueGiga UART services**

This plugin was originally developed with Cordova 3.4 using iOS 7.x on an iPhone 5s connecting to a [RedBearLab BLEMini](http://redbearlab.com/blemini). Ensure that you have update the BLE Mini firmware to at least [Biscuit-UART_20130313.bin](https://github.com/RedBearLab/Biscuit/tree/master/release).

Most development is now done with iOS 8 with Cordova 4.2 using [RedBear Lab BLE Shield](http://redbearlab.com/bleshield/) or [Adafruit Bluefruit LE Friend](https://www.adafruit.com/product/2267).

### Supporting other BLE hardware

For Bluetooth Low Energy, this plugin supports some hardware running known UART-like services, but can support any Bluetooth Low Energy hardware with a ""serial like"" service. This means a transmit characteristic that is writable and a receive characteristic that supports notification.

Edit [BLEdefines.h](src/ios/BLEDefines.h) and adjust the UUIDs for your service.

See [Issue 141](https://github.com/don/BluetoothSerial/issues/141#issuecomment-161500473) for details on how to add support for Amp'ed RF Technology BT43H.

## Props

### Android

Most of the Bluetooth implementation was borrowed from the Bluetooth Chat example in the Android SDK.

### iOS

The iOS code uses RedBearLab's [BLE_Framework](https://github.com/RedBearLab/iOS/tree/master/BLEFramework/BLE).

### API

The API for available, read, readUntil was influenced by the [BtSerial Library for Processing for Arduino](https://github.com/arduino/BtSerial)

## Wrong Bluetooth Plugin?

If you don't need **serial** over Bluetooth, try the [PhoneGap Bluetooth Plugin for Android](https://github.com/phonegap/phonegap-plugins/tree/DEPRECATED/Android/Bluetooth/2.2.0) or perhaps [phonegap-plugin-bluetooth](https://github.com/tanelih/phonegap-bluetooth-plugin).

If you need generic Bluetooth Low Energy support checkout my [Cordova BLE Plugin](https://github.com/don/cordova-plugin-ble-central).

If you need BLE for RFduino checkout my [RFduino Plugin](https://github.com/don/cordova-plugin-rfduino).

## What format should the Mac Address be in?
An example a properly formatted mac address is ``AA:BB:CC:DD:EE:FF``

## Feedback

Try the code. If you find an problem or missing feature, file an issue or create a pull request.
","'bluetooth', 'bluetooth-low-energy', 'cordova-plugin'",2013-05-07T16:25:19Z,2024-04-18T07:27:15Z,14,13,1068,68,"('don', 227), ('marvinmarnold', 15), ('pardo-bsso', 4), ('shokre', 4), ('tigoe', 3), ('ChrisMorter', 1), ('Davide-sd', 1), ('legege', 1), ('JohnMcLear', 1), ('RhinoLance', 1), ('Panickev', 1), ('Søren Hilmer', 1), ('mrtomhoward', 1), ('usb2win', 1)",9,8,
bjyoungblood/BjyProfiler,ZendDeveloperTools-compatible Zend\Db query profile,"BjyProfiler
===========
Provides Zend\Db adapters with extensions for database query profiling, as well as a profiler similar to ZF1's Zend\_Db\_Profiler.
I ported much of this code from ZF1's Zend_Db.

Note: this module now works with Zend\Db's built-in profiler.

**Note**: PHP >= 5.3.6 is required for stack traces with query profiles.

Composer/Packagist Users
========================

Please note the name of this project's package has changed to bjyoungblood/bjy-profiler
in order to match composer/packagist's new naming conventions. Please update your composer.json
to use the new package name.

Configuration & Usage
---------------------
Following is a sample database configuration:

```php
<?php

$dbParams = array(
    'database'  => 'changeme',
    'username'  => 'changeme',
    'password'  => 'changeme',
    'hostname'  => 'localhost',
    // buffer_results - only for mysqli buffered queries, skip for others
    'options' => array('buffer_results' => true)
);

return array(
    'service_manager' => array(
        'factories' => array(
            'Zend\Db\Adapter\Adapter' => function ($sm) use ($dbParams) {
                $adapter = new BjyProfiler\Db\Adapter\ProfilingAdapter(array(
                    'driver'    => 'pdo',
                    'dsn'       => 'mysql:dbname='.$dbParams['database'].';host='.$dbParams['hostname'],
                    'database'  => $dbParams['database'],
                    'username'  => $dbParams['username'],
                    'password'  => $dbParams['password'],
                    'hostname'  => $dbParams['hostname'],
                ));

                if (php_sapi_name() == 'cli') {
                    $logger = new Zend\Log\Logger();
                    // write queries profiling info to stdout in CLI mode
                    $writer = new Zend\Log\Writer\Stream('php://output');
                    $logger->addWriter($writer, Zend\Log\Logger::DEBUG);
                    $adapter->setProfiler(new BjyProfiler\Db\Profiler\LoggingProfiler($logger));
                } else {
                    $adapter->setProfiler(new BjyProfiler\Db\Profiler\Profiler());
                }
                if (isset($dbParams['options']) && is_array($dbParams['options'])) {
                    $options = $dbParams['options'];
                } else {
                    $options = array();
                }
                $adapter->injectProfilingStatementPrototype($options);
                return $adapter;
            },
        ),
    ),
);
```

After you've run a couple queries (or before, if you so choose), you can use the service locator to grab the adapter using whatever alias you provide (using Zend\Db\Adapter\Adapter is a good way to simply replace Zend\Db's adapter with my profiling adapter.

```php
$profiler = $sl->get('Zend\Db\Adapter\Adapter')->getProfiler();
$queryProfiles = $profiler->getQueryProfiles();
```
",,2012-06-29T18:55:53Z,2020-01-09T10:35:50Z,19,14,82,15,"('bjyoungblood', 39), ('Ben Youngblood', 7), ('internalsystemerror', 6), ('bnkr', 3), ('inditel', 3), ('DroidArena', 3), ('ashawley', 2), ('Adam Lundrigan', 2), ('coss', 2), ('vgarvardt', 2), ('AlloVince', 1), ('dorbal', 1), ('S3RK', 1), ('manuakasam', 1), ('Mickaël Zhu', 1), ('diemuzi', 1), ('mouhamed', 1), ('steve.jordan@city.ac.uk', 1), ('zf2timo', 1)",9,6,
liuguangqiang/SwipeBack,SwipeBack is an android library that can finish a activity by using gesture.,"SwipeBack [![Build Status](https://travis-ci.org/liuguangqiang/SwipeBack.png?branch=master)](https://travis-ci.org/liuguangqiang/SwipeBack)
===========

SwipeBack is a android library that can finish a activity by using gesture.

You can set the swipe direction,such as left,top,right and bottom.

## Screenshots
![image](Images/swipeback_demo.gif)

![image](Images/swipeback.gif)

## Sample Download
[Sample Download](https://github.com/liuguangqiang/SwipeBack/raw/master/Images/apks/swipe_back_demo_v1.0.apk)

![image](Images/download.png)

## Usage

### Gradle
```
dependencies {
   	compile 'com.github.liuguangqiang.swipeback:library:1.0.2@aar'
}
```

### Maven
```

  	com.github.liuguangqiang.swipeback
  	library
  	1.0.2
  	aar

```
### SwipeBackActivity
SwipeBackActivity is a base activity for using this library more easier.This Activity will help us to show a shadow.

![image](Images/swipe_back_activity.gif)

```
public class CommonActivity extends SwipeBackActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_common);
        setDragEdge(SwipeBackLayout.DragEdge.LEFT);
    }

}
```

### Layout and activity theme.
SwipeBackLayout must contains only one direct child.

```
<com.liuguangqiang.swipeback.SwipeBackLayout
	xmlns:android=""http://schemas.android.com/apk/res/android""
    android:id=""@+id/swipeBackLayout""
    android:layout_width=""match_parent""
    android:layout_height=""match_parent"">
	
	


```

```
 
        true
        @android:color/transparent
        false
        true
 
```

### Swipe Direction
You can set  DragEdge to change the swipe direction.

```
 public enum DragEdge {
      	LEFT,
      	
        TOP,
        
        RIGHT,
        
        BOTTOM
    }
```

### Support Views
SwipeBackLayout must contains only one direct child.

Such as:

* LinearLayout,
* RelativeLayout,
* ListView,
* ViewPager
* WebView

## License

    Copyright 2015 Eric Liu

    Licensed under the Apache License, Version 2.0 (the ""License"");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an ""AS IS"" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.


","'android', 'gesture', 'java', 'swipeback'",2014-06-19T06:15:36Z,2022-05-16T09:33:00Z,5,4,1737,43,"('liuguangqiang', 67), ('john1024', 33), ('juliooa', 4), ('Eric', 1), ('pavel163', 1)",2,1,
esterTion/AcFun-HTML5-Player,一个装B播放器，送给缺B乐的各位,"# AcFun HTML5 Player  
作者：esterTion  

![](src/icon.png)

一个装B播放器，送给缺B乐的各位（被打  

## 安装
当前版本：[![VERSION_TAG_NUMBER](https://img.shields.io/github/tag/esterTion/AcFun-HTML5-Player.svg)](update_note.md)
- [Firefox](https://estertion.github.io/AcFun-HTML5-Player/signed.xpi) (firefox 57.0+)
- [Chrome ![Chrome商店](https://img.shields.io/chrome-web-store/users/onjihgccojkcmlmlbjmgkcnehdbpbhcf.svg)](https://chrome.google.com/webstore/detail/acfun-html5-player/onjihgccojkcmlmlbjmgkcnehdbpbhcf) ([crx分流](https://estertion.github.io/AcFun-HTML5-Player/signed.crx)) (chrome 50.0+)
- [Edge](https://microsoftedge.microsoft.com/addons/detail/dfncoalaceonhlibdldimbiaocmgekpb) (new Microsoft Edge)

视频源目前支持`主站 优酷版权视频 新浪`，其他源请提供视频地址，我可能会加上支持（咕咕咕）  

![](https://estertion.win/wp-content/uploads/2018/10/f2018174470233ba6ca7f89a0b3fd60957e2f96a.png)
",,2017-11-22T13:22:55Z,2021-12-08T08:29:16Z,3,3,335,11,"('esterTion', 155), ('jim-kirisame', 2), ('ipcjs', 1)",1,1,
nakupanda/bootstrap3-dialog,Make use of Twitter Bootstrap's modal more monkey-friendly.,"bootstrap-dialog
================

[![Latest release](https://img.shields.io/github/release/nakupanda/bootstrap3-dialog.svg)](https://github.com/nakupanda/bootstrap3-dialog/releases/latest)

Make use of Bootstrap Modal more monkey-friendly.

See live examples here: http://nakupanda.github.io/bootstrap3-dialog/

Please note that this project is for Bootstrap 3.

Thanks for [akinoniku](https://github.com/akinoniku)'s suggestions on dialog appearance.

================

## Ask a question

It's recommended to provide online examples when asking questions or reporting bugs.
Fork this all-ready jsfiddle and start writing your example:
http://jsfiddle.net/o5k0eaws/1/

================

## Use Guidances from contributors

How to use bootstrap-dialog as Rails 4 confirm - @[Genkilabs](https://github.com/Genkilabs)

How to use in ReactJS - @[sonhan](https://github.com/sonhan)

================
## Reference to CDN

```
https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/css/bootstrap-dialog.min.css
https://cdnjs.cloudflare.com/ajax/libs/bootstrap3-dialog/1.34.7/js/bootstrap-dialog.min.js
```
================

## Install using Bower

```
bower install bootstrap-dialog
```

Or

```
bower install bootstrap3-dialog
```

================

## Install using npm

```
npm install --save bootstrap3-dialog
```

================

## Build instructions:

Prepare:

```
npm install
```

Build:

```
gulp dist
```

================

Licensed under The MIT License.
",,2013-11-06T02:16:30Z,2019-12-15T07:55:32Z,29,22,1892,150,"('nakupanda', 236), ('Dante', 27), ('AndrewEastwood', 6), ('bitclaw', 4), ('codepiano', 4), ('Julusian', 3), ('luozhihua', 3), ('andrew', 3), ('Brad Metcalf', 2), ('Chris Seckler', 2), ('jbolila', 2), ('TiSiE', 2), ('Sven Anders', 2), ('tangqian', 1), ('amirkhiz', 1), ('johannesschaefer', 1), ('jekkos', 1), ('dmerchie', 1), ('breity', 1), ('afro1114', 1), ('Yohn', 1), ('Unai Recio', 1), ('hpatoio', 1), ('levacic', 1), ('indrimuska', 1), ('fabn', 1), ('danielentryless', 1), ('cvrebert', 1), ('fenichelar', 1)",16,15,
yysofiyan/PABWEB-B,:octocat: FT3109 - Pengembangan Aplikasi Berbasis Web (TI-IV-B) 🎓👨🏻‍💻👩‍💻,"# Repositori Praktikum Pengembangan Aplikasi Berbasis Web








#### Group : Group : B , Hari & Jam: Kamis - 13:00 s.d 16:20, ruang : R11

## Alur Pengumpulan Tugas ke Repositori Ini
0. **Fork** Repositori ini.
1. Pada hasil *fork* anda, Buat **Branch** dengan nama **NIM** anda.
2. Pada *branch* **NIM** anda, buat direktori dengan nama **NIM** anda.
3. Didalam direktori **NIM** anda, buat sub direktori dengan nama _**Praktikum_n**_.
   > *Contoh **Praktikum_1** untuk Tugas pada Praktikum Pertemuan Pertama*  
4. Seluruh berkas **Tugas Praktikum** pertemuan ke-_**n**_ dismpan pada direktori _**Praktikum_n**_.
   > - Berkas tugas berupa  `kode (source code) selama mengerjakan praktikum`.
   > - Format penamaan berkas : `nim_nama`
5. **Push** berkas tugas anda ke repositori hasil *fork* pada *branch* **NIM** anda.
6. Buat **Pull Request** untuk **Merge** *branch* **NIM** dengan *branch* **master** pada repositori ini.
7. Tugas anda dinyatakan **diterima** jika **branch NIM** anda telah _**merged**_ dengan **branch master** repositori ini.  

## Bagaimana Cara Mengetahui Jika **Branch NIM** telah _**Merged**_ dengan Repositori ini ?
 - Anda dapat memantau repositori ini.
 - Atau tambahkan **remote** ke repositori ini sebagai **upstream** pada repositori lokal hasil *fork* anda.
 - Jika anda menambahkan *remote* pada hasil *fork*, lakukan **merge** pada _branch **master**_ anda dengan _branch **master upstream**_.
 - Untuk cara sinkronisasi hasil *fork* dengan *upstream*, silahkan baca [Configure a remote for a fork](https://help.github.com/en/articles/configuring-a-remote-for-a-fork) dan [Syncing a fork](https://help.github.com/en/articles/syncing-a-fork).

## Tools, Library and Modul Praktikum

1. [Tools/Library](http://bit.ly/2tvgSYm) 📥 | *Gunakan 💌 Kampus*
2. [Visual Studio Code](https://code.visualstudio.com) 📥
3. [Modul Praktikum Git & Github](https://github.com/yysofiyan/PABWEB-B/tree/master/Modul%20Praktikum%20Git%20%26%20Github) :octocat:
4. [Modul Praktikum PHP7](https://github.com/yysofiyan/PABWEB-B/tree/master/Modul%20Praktikum%20PHP7) 📥
5. [Modul Praktikum Codeigniter](https://github.com/yysofiyan/PABWEB-B/blob/master/Modul%20Praktikum%20Codeigniter/pabweb-ci-%231.pdf) 📥 🔥
6. [Modul Praktikum Laravel](#) 


## Referensi

1. [git-scm](https://git-scm.com/book/id/v2/Memulai-Dasar-dasar-Git)
2. [git-scm.com/doc](https://git-scm.com/doc)
3. [betterexplained.com/](https://betterexplained.com/articles/intro-to-distributed-version-control-illustrated/)
4. [conecting github with ssh](https://help.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh)



## Contributors ✨

Thanks goes to these wonderful people ([emoji key](https://allcontributors.org/docs/en/emoji-key)):





  
    <img src=""https://avatars0.githubusercontent.com/u/34052001?s=460&v=4"" width=""100px;""
        alt="""" />Yanyan Sofiyan, M.Kom🔗 <a
        href=""#"" title=""Documentation"">📖 👀 📢
    <img src=""https://avatars0.githubusercontent.com/u/61279594?s=460&v=4"" width=""100px;""
        alt="""" />Danni Ramdhani Samsudin🥇🥇<a
        href=""https://github.com/danniramdhanisamsudin?tab=repositories"" title=""Link Repo"">🔗 <a href=""#""
        title=""Documentation"">📖 👀 <a
        href=""#"" title=""Talks"">📢
    <img src=""https://avatars0.githubusercontent.com/u/61269579?s=460&v=4"" width=""100px;""
        alt="""" />Jajang Jamaludin🥇🥇<a
        href=""https://github.com/JajangJamaludin?tab=repositories"" title=""Link Repo"">🔗 <a href=""#""
        title=""Documentation"">📖 👀 <a href=""#""
        title=""Talks"">📢
    <img src=""https://avatars0.githubusercontent.com/u/61266364?s=460&v=4"" width=""100px;""
        alt="""" />Krisman Nur Slamet🥇🥇<a
        href=""https://github.com/Krismannurslamet?tab=repositories"" title=""Link Repo"">🔗 <a href=""#""
        title=""Documentation"">📖 👀 <a href=""#""
        title=""Talks"">📢
    <img src=""https://avatars0.githubusercontent.com/u/61266360?s=400&u=4a49c43a0d12f946bb5ba73bd9458f5798da1f6d&v=4"" width=""100px;""
        alt="""" />Rizal Fathan Fadillah🥇🥇🔗 📖 👀 📢
    
    
  
  
    
     RISKY AMELIA🥇🥇🔗 📖 👀 📢
     Bima Maulana Saputra🥇🥇🔗 📖 👀 📢
     Aziz Nur Falah 🥇🔗 📖 👀 📢
     Muhamad Abi Fahzsa🥇🥇🔗 📖 👀 📢
     Nurul Wulan🥇🥇🔗 📖 👀 📢
  
  
    
     Firda Rihadatun Nafisyah🥇🥇🔗 📖 👀 📢
     Yuliyani🥇🥇🔗 📖 👀 📢
     
          Tresna Wiwitan🥇🥇🔗<a
        href=""https://github.com/Tresna20/PABWEB-B.git"" title=""Documentation"">📖 👀 📢
        Salsabilla St S 🥇🔗 📖 👀 📢
    Fadjar Widyana🥇🥇🔗 📖 👀 📢    

  
  
    
    Deyan Saefulloh🥇🥇🔗 📖 👀 📢
   Sinta Manah🥇🥇🔗 📖 👀 📢
   Abdul Yusup 🥇🔗 📖 👀 📢
   Rismaya Siti Mukarromah🥇🥇🔗 📖 👀 📢

   Sri Rahayu🥇🥇🔗 📖 👀 📢
  
  
    Natasya Savira Putri🥇🥇🔗 📖 👀 📢
   
   Marissa Maysaroh🥇🥇🔗 📖 👀 📢

   Alif Yudis🥇🥇🔗 📖 👀 📢

  Fauzi Mulyana🥇🔗 📖 👀 📢

  Cepi Yahya🥇🔗 📖 👀 📢
  
  
  
  Ihsan Septian🥇🥇🔗 📖 👀 📢

  Vergin herlang🥇🥇🔗 📖 👀 📢
  







This project follows the [all-contributors](https://allcontributors.org) specification.
Contributions of any kind are welcome!

----






","'php', 'php7', 'webapp'",2020-02-18T07:39:20Z,2021-03-09T06:34:38Z,44,38,8,2,"('yysofiyan', 221), ('verginherlang', 19), ('NurulWulan17', 18), ('dependabotbot', 16), ('rizalfathan', 15), ('fadhliatul13', 15), ('uji312', 13), ('Yuliyanii', 13), ('djedjeafk', 11), ('SintaM', 11), ('danniramdhanisamsudin', 10), ('Frnafis', 9), ('marissa61500', 9), ('abimfah', 8), ('NatasyaSavira25', 8), ('RismayaSM25', 7), ('FadjarWN', 7), ('ApipFebriansyah22', 7), ('itsramelia', 7), ('Tresna20', 6), ('Alifyudis', 6), ('cepiyahya25', 5), ('ihsanseptian', 5), ('salsabillass76', 5), ('srirahayu22', 5), ('Anurfah', 5), ('Krismannurslamet', 5), ('bimamaul', 4), ('luckyrohmatulloh', 3), ('ibnu2000176', 3), ('ABDULYUSUP', 3), ('ApipFebriansyah22', 2), ('unknown', 2), ('A21400097', 2), ('AhmadKN244', 1), ('AhmadKN', 1), ('ArifDarmawan7', 1), ('fadhliatulakbar', 1), ('RafiudDarajad', 1), ('Rifqifn10', 1), ('deyansaefulloh24', 1), ('uji312', 1), ('unknown', 1), ('yurianto', 1)",10,7,
GokuMohandas/Made-With-ML,"Learn how to design, develop, deploy and iterate on production-grade ML applications.","
&nbsp;Made With ML
Design · Develop · Deploy · Iterate

Join 40K+ developers in learning how to responsibly deliver value with ML.
    





    &nbsp;
    &nbsp;
    &nbsp;
    
    
    🔥&nbsp; Among the top ML repositories on GitHub





## Lessons

Learn how to combine machine learning with software engineering to design, develop, deploy and iterate on production-grade ML applications.

- Lessons: https://madewithml.com/
- Code: [GokuMohandas/Made-With-ML](https://github.com/GokuMohandas/Made-With-ML)


  


## Overview

In this course, we'll go from experimentation (design + development) to production (deployment + iteration). We'll do this iteratively by motivating the components that will enable us to build a *reliable* production system.


  &nbsp; Be sure to watch the video below for a quick overview of what we'll be building.



  




- **💡 First principles**: before we jump straight into the code, we develop a first principles understanding for every machine learning concept.
- **💻 Best practices**: implement software engineering best practices as we develop and deploy our machine learning models.
- **📈 Scale**: easily scale ML workloads (data, train, tune, serve) in Python without having to learn completely new languages.
- **⚙️ MLOps**: connect MLOps components (tracking, testing, serving, orchestration, etc.) as we build an end-to-end machine learning system.
- **🚀 Dev to Prod**: learn how to quickly and reliably go from development to production without any changes to our code or infra management.
- **🐙 CI/CD**: learn how to create mature CI/CD workflows to continuously train and deploy better models in a modular way that integrates with any stack.

## Audience

Machine learning is not a separate industry, instead, it's a powerful way of thinking about data that's not reserved for any one type of person.

- **👩‍💻 All developers**: whether software/infra engineer or data scientist, ML is increasingly becoming a key part of the products that you'll be developing.
- **👩‍🎓 College graduates**: learn the practical skills required for industry and bridge gap between the university curriculum and what industry expects.
- **👩‍💼 Product/Leadership**: who want to develop a technical foundation so that they can build amazing (and reliable) products powered by machine learning.

## Set up

Be sure to go through the [course](https://madewithml/#course) for a much more detailed walkthrough of the content on this repository. We will have instructions for both local laptop and Anyscale clusters for the sections below, so be sure to toggle the ► dropdown based on what you're using (Anyscale instructions will be toggled on by default). If you do want to run this course with Anyscale, where we'll provide the **structure**, **compute (GPUs)** and **community** to learn everything in one day, join our next upcoming live cohort → [sign up here](https://4190urw86oh.typeform.com/madewithml)!

### Cluster

We'll start by setting up our cluster with the environment and compute configurations.


  Local
  Your personal laptop (single machine) will act as the cluster, where one CPU will be the head node and some of the remaining CPU will be the worker nodes. All of the code in this course will work in any personal laptop though it will be slower than executing the same workloads on a larger cluster.



  Anyscale

  We can create an [Anyscale Workspace](https://docs.anyscale.com/develop/workspaces/get-started) using the [webpage UI](https://console.anyscale.com/o/madewithml/workspaces/add/blank).

  ```md
  - Workspace name: `madewithml`
  - Project: `madewithml`
  - Cluster environment name: `madewithml-cluster-env`
  # Toggle `Select from saved configurations`
  - Compute config: `madewithml-cluster-compute-g5.4xlarge`
  ```

  > Alternatively, we can use the [CLI](https://docs.anyscale.com/reference/anyscale-cli) to create the workspace via `anyscale workspace create ...`




  Other (cloud platforms, K8s, on-prem)

  If you don't want to do this course locally or via Anyscale, you have the following options:

  - On [AWS and GCP](https://docs.ray.io/en/latest/cluster/vms/index.html#cloud-vm-index). Community-supported Azure and Aliyun integrations also exist.
  - On [Kubernetes](https://docs.ray.io/en/latest/cluster/kubernetes/index.html#kuberay-index), via the officially supported KubeRay project.
  - Deploy Ray manually [on-prem](https://docs.ray.io/en/latest/cluster/vms/user-guides/launching-clusters/on-premises.html#on-prem) or onto platforms [not listed here](https://docs.ray.io/en/latest/cluster/vms/user-guides/community/index.html#ref-cluster-setup).



### Git setup

Create a repository by following these instructions: [Create a new repository](https://github.com/new) → name it `Made-With-ML` → Toggle `Add a README file` (**very important** as this creates a `main` branch) → Click `Create repository` (scroll down)

Now we're ready to clone the repository that has all of our code:

```bash
git clone https://github.com/GokuMohandas/Made-With-ML.git .
```

### Credentials

```bash
touch .env
```
```bash
# Inside .env
GITHUB_USERNAME=""CHANGE_THIS_TO_YOUR_USERNAME""  # ← CHANGE THIS
```
```bash
source .env
```

### Virtual environment


  Local

  ```bash
  export PYTHONPATH=$PYTHONPATH:$PWD
  python3 -m venv venv  # recommend using Python 3.10
  source venv/bin/activate  # on Windows: venv\Scripts\activate
  python3 -m pip install --upgrade pip setuptools wheel
  python3 -m pip install -r requirements.txt
  pre-commit install
  pre-commit autoupdate
  ```

  > Highly recommend using Python `3.10` and using [pyenv](https://github.com/pyenv/pyenv) (mac) or [pyenv-win](https://github.com/pyenv-win/pyenv-win) (windows).




  Anyscale

  Our environment with the appropriate Python version and libraries is already all set for us through the cluster environment we used when setting up our Anyscale Workspace. So we just need to run these commands:
  ```bash
  export PYTHONPATH=$PYTHONPATH:$PWD
  pre-commit install
  pre-commit autoupdate
  ```



## Notebook

Start by exploring the [jupyter notebook](notebooks/madewithml.ipynb) to interactively walkthrough the core machine learning workloads.


  



  Local

  ```bash
  # Start notebook
  jupyter lab notebooks/madewithml.ipynb
```




  Anyscale

  Click on the Jupyter icon &nbsp;&nbsp; at the top right corner of our Anyscale Workspace page and this will open up our JupyterLab instance in a new tab. Then navigate to the `notebooks` directory and open up the `madewithml.ipynb` notebook.




## Scripts

Now we'll execute the same workloads using the clean Python scripts following software engineering best practices (testing, documentation, logging, serving, versioning, etc.) The code we've implemented in our notebook will be refactored into the following scripts:

```bash
madewithml
├── config.py
├── data.py
├── evaluate.py
├── models.py
├── predict.py
├── serve.py
├── train.py
├── tune.py
└── utils.py
```

**Note**: Change the `--num-workers`, `--cpu-per-worker`, and `--gpu-per-worker` input argument values below based on your system's resources. For example, if you're on a local laptop, a reasonable configuration would be `--num-workers 6 --cpu-per-worker 1 --gpu-per-worker 0`.

### Training
```bash
export EXPERIMENT_NAME=""llm""
export DATASET_LOC=""https://raw.githubusercontent.com/GokuMohandas/Made-With-ML/main/datasets/dataset.csv""
export TRAIN_LOOP_CONFIG='{""dropout_p"": 0.5, ""lr"": 1e-4, ""lr_factor"": 0.8, ""lr_patience"": 3}'
python madewithml/train.py \
    --experiment-name ""$EXPERIMENT_NAME"" \
    --dataset-loc ""$DATASET_LOC"" \
    --train-loop-config ""$TRAIN_LOOP_CONFIG"" \
    --num-workers 1 \
    --cpu-per-worker 3 \
    --gpu-per-worker 1 \
    --num-epochs 10 \
    --batch-size 256 \
    --results-fp results/training_results.json
```

### Tuning
```bash
export EXPERIMENT_NAME=""llm""
export DATASET_LOC=""https://raw.githubusercontent.com/GokuMohandas/Made-With-ML/main/datasets/dataset.csv""
export TRAIN_LOOP_CONFIG='{""dropout_p"": 0.5, ""lr"": 1e-4, ""lr_factor"": 0.8, ""lr_patience"": 3}'
export INITIAL_PARAMS=""[{\""train_loop_config\"": $TRAIN_LOOP_CONFIG}]""
python madewithml/tune.py \
    --experiment-name ""$EXPERIMENT_NAME"" \
    --dataset-loc ""$DATASET_LOC"" \
    --initial-params ""$INITIAL_PARAMS"" \
    --num-runs 2 \
    --num-workers 1 \
    --cpu-per-worker 3 \
    --gpu-per-worker 1 \
    --num-epochs 10 \
    --batch-size 256 \
    --results-fp results/tuning_results.json
```

### Experiment tracking

We'll use [MLflow](https://mlflow.org/) to track our experiments and store our models and the [MLflow Tracking UI](https://www.mlflow.org/docs/latest/tracking.html#tracking-ui) to view our experiments. We have been saving our experiments to a local directory but note that in an actual production setting, we would have a central location to store all of our experiments. It's easy/inexpensive to spin up your own MLflow server for all of your team members to track their experiments on or use a managed solution like [Weights & Biases](https://wandb.ai/site), [Comet](https://www.comet.ml/), etc.

```bash
export MODEL_REGISTRY=$(python -c ""from madewithml import config; print(config.MODEL_REGISTRY)"")
mlflow server -h 0.0.0.0 -p 8080 --backend-store-uri $MODEL_REGISTRY
```


  Local

  If you're running this notebook on your local laptop then head on over to http://localhost:8080/ to view your MLflow dashboard.




  Anyscale

  If you're on Anyscale Workspaces, then we need to first expose the port of the MLflow server. Run the following command on your Anyscale Workspace terminal to generate the public URL to your MLflow server.

  ```bash
  APP_PORT=8080
  echo https://$APP_PORT-port-$ANYSCALE_SESSION_DOMAIN
  ```



### Evaluation
```bash
export EXPERIMENT_NAME=""llm""
export RUN_ID=$(python madewithml/predict.py get-best-run-id --experiment-name $EXPERIMENT_NAME --metric val_loss --mode ASC)
export HOLDOUT_LOC=""https://raw.githubusercontent.com/GokuMohandas/Made-With-ML/main/datasets/holdout.csv""
python madewithml/evaluate.py \
    --run-id $RUN_ID \
    --dataset-loc $HOLDOUT_LOC \
    --results-fp results/evaluation_results.json
```
```json
{
  ""timestamp"": ""June 09, 2023 09:26:18 AM"",
  ""run_id"": ""6149e3fec8d24f1492d4a4cabd5c06f6"",
  ""overall"": {
    ""precision"": 0.9076136428670714,
    ""recall"": 0.9057591623036649,
    ""f1"": 0.9046792827719773,
    ""num_samples"": 191.0
  },
...
```

### Inference
```bash
export EXPERIMENT_NAME=""llm""
export RUN_ID=$(python madewithml/predict.py get-best-run-id --experiment-name $EXPERIMENT_NAME --metric val_loss --mode ASC)
python madewithml/predict.py predict \
    --run-id $RUN_ID \
    --title ""Transfer learning with transformers"" \
    --description ""Using transformers for transfer learning on text classification tasks.""
```
```json
[{
  ""prediction"": [
    ""natural-language-processing""
  ],
  ""probabilities"": {
    ""computer-vision"": 0.0009767753,
    ""mlops"": 0.0008223939,
    ""natural-language-processing"": 0.99762577,
    ""other"": 0.000575123
  }
}]
```

### Serving


  Local

  ```bash
  # Start
  ray start --head
  ```

  ```bash
  # Set up
  export EXPERIMENT_NAME=""llm""
  export RUN_ID=$(python madewithml/predict.py get-best-run-id --experiment-name $EXPERIMENT_NAME --metric val_loss --mode ASC)
  python madewithml/serve.py --run_id $RUN_ID
  ```

  Once the application is running, we can use it via cURL, Python, etc.:

  ```python
  # via Python
  import json
  import requests
  title = ""Transfer learning with transformers""
  description = ""Using transformers for transfer learning on text classification tasks.""
  json_data = json.dumps({""title"": title, ""description"": description})
  requests.post(""http://127.0.0.1:8000/predict"", data=json_data).json()
  ```

  ```bash
  ray stop  # shutdown
  ```




  Anyscale

  In Anyscale Workspaces, Ray is already running so we don't have to manually start/shutdown like we have to do locally.

  ```bash
  # Set up
  export EXPERIMENT_NAME=""llm""
  export RUN_ID=$(python madewithml/predict.py get-best-run-id --experiment-name $EXPERIMENT_NAME --metric val_loss --mode ASC)
  python madewithml/serve.py --run_id $RUN_ID
  ```

  Once the application is running, we can use it via cURL, Python, etc.:

  ```python
  # via Python
  import json
  import requests
  title = ""Transfer learning with transformers""
  description = ""Using transformers for transfer learning on text classification tasks.""
  json_data = json.dumps({""title"": title, ""description"": description})
  requests.post(""http://127.0.0.1:8000/predict"", data=json_data).json()
  ```



### Testing
```bash
# Code
python3 -m pytest tests/code --verbose --disable-warnings

# Data
export DATASET_LOC=""https://raw.githubusercontent.com/GokuMohandas/Made-With-ML/main/datasets/dataset.csv""
pytest --dataset-loc=$DATASET_LOC tests/data --verbose --disable-warnings

# Model
export EXPERIMENT_NAME=""llm""
export RUN_ID=$(python madewithml/predict.py get-best-run-id --experiment-name $EXPERIMENT_NAME --metric val_loss --mode ASC)
pytest --run-id=$RUN_ID tests/model --verbose --disable-warnings

# Coverage
python3 -m pytest tests/code --cov madewithml --cov-report html --disable-warnings  # html report
python3 -m pytest tests/code --cov madewithml --cov-report term --disable-warnings  # terminal report
```

## Production

From this point onwards, in order to deploy our application into production, we'll need to either be on Anyscale or on a [cloud VM](https://docs.ray.io/en/latest/cluster/vms/index.html#cloud-vm-index) / [on-prem](https://docs.ray.io/en/latest/cluster/vms/user-guides/launching-clusters/on-premises.html#on-prem) cluster you manage yourself (w/ Ray). If not on Anyscale, the commands will be [slightly different](https://docs.ray.io/en/latest/cluster/running-applications/job-submission/index.html) but the concepts will be the same.

> If you don't want to set up all of this yourself, we highly recommend joining our [upcoming live cohort](https://4190urw86oh.typeform.com/madewithml){:target=""_blank""} where we'll provide an environment with all of this infrastructure already set up for you so that you just focused on the machine learning.


  


### Authentication

These credentials below are **automatically** set for us if we're using Anyscale Workspaces. We **do not** need to set these credentials explicitly on Workspaces but we do if we're running this locally or on a cluster outside of where our Anyscale Jobs and Services are configured to run.

``` bash
export ANYSCALE_HOST=https://console.anyscale.com
export ANYSCALE_CLI_TOKEN=$YOUR_CLI_TOKEN  # retrieved from Anyscale credentials page
```

### Cluster environment

The cluster environment determines **where** our workloads will be executed (OS, dependencies, etc.) We've already created this [cluster environment](./deploy/cluster_env.yaml) for us but this is how we can create/update one ourselves.

```bash
export CLUSTER_ENV_NAME=""madewithml-cluster-env""
anyscale cluster-env build deploy/cluster_env.yaml --name $CLUSTER_ENV_NAME
```

### Compute configuration

The compute configuration determines **what** resources our workloads will be executes on. We've already created this [compute configuration](./deploy/cluster_compute.yaml) for us but this is how we can create it ourselves.

```bash
export CLUSTER_COMPUTE_NAME=""madewithml-cluster-compute-g5.4xlarge""
anyscale cluster-compute create deploy/cluster_compute.yaml --name $CLUSTER_COMPUTE_NAME
```

### Anyscale jobs

Now we're ready to execute our ML workloads. We've decided to combine them all together into one [job](./deploy/jobs/workloads.yaml) but we could have also created separate jobs for each workload (train, evaluate, etc.) We'll start by editing the `$GITHUB_USERNAME` slots inside our [`workloads.yaml`](./deploy/jobs/workloads.yaml) file:
```yaml
runtime_env:
  working_dir: .
  upload_path: s3://madewithml/$GITHUB_USERNAME/jobs  # <--- CHANGE USERNAME (case-sensitive)
  env_vars:
    GITHUB_USERNAME: $GITHUB_USERNAME  # <--- CHANGE USERNAME (case-sensitive)
```

The `runtime_env` here specifies that we should upload our current `working_dir` to an S3 bucket so that all of our workers when we execute an Anyscale Job have access to the code to use. The `GITHUB_USERNAME` is used later to save results from our workloads to S3 so that we can retrieve them later (ex. for serving).

Now we're ready to submit our job to execute our ML workloads:
```bash
anyscale job submit deploy/jobs/workloads.yaml
```

### Anyscale Services

And after our ML workloads have been executed, we're ready to launch our serve our model to production. Similar to our Anyscale Jobs configs, be sure to change the `$GITHUB_USERNAME` in [`serve_model.yaml`](./deploy/services/serve_model.yaml).

```yaml
ray_serve_config:
  import_path: deploy.services.serve_model:entrypoint
  runtime_env:
    working_dir: .
    upload_path: s3://madewithml/$GITHUB_USERNAME/services  # <--- CHANGE USERNAME (case-sensitive)
    env_vars:
      GITHUB_USERNAME: $GITHUB_USERNAME  # <--- CHANGE USERNAME (case-sensitive)
```

Now we're ready to launch our service:
```bash
# Rollout service
anyscale service rollout -f deploy/services/serve_model.yaml

# Query
curl -X POST -H ""Content-Type: application/json"" -H ""Authorization: Bearer $SECRET_TOKEN"" -d '{
  ""title"": ""Transfer learning with transformers"",
  ""description"": ""Using transformers for transfer learning on text classification tasks.""
}' $SERVICE_ENDPOINT/predict/

# Rollback (to previous version of the Service)
anyscale service rollback -f $SERVICE_CONFIG --name $SERVICE_NAME

# Terminate
anyscale service terminate --name $SERVICE_NAME
```

### CI/CD

We're not going to manually deploy our application every time we make a change. Instead, we'll automate this process using GitHub Actions!


  


1. Create a new github branch to save our changes to and execute CI/CD workloads:
```bash
git remote set-url origin https://github.com/$GITHUB_USERNAME/Made-With-ML.git  # <-- CHANGE THIS to your username
git checkout -b dev
```

2. We'll start by adding the necessary credentials to the [`/settings/secrets/actions`](https://github.com/GokuMohandas/Made-With-ML/settings/secrets/actions) page of our GitHub repository.

``` bash
export ANYSCALE_HOST=https://console.anyscale.com
export ANYSCALE_CLI_TOKEN=$YOUR_CLI_TOKEN  # retrieved from https://console.anyscale.com/o/madewithml/credentials
```

3. Now we can make changes to our code (not on `main` branch) and push them to GitHub. But in order to push our code to GitHub, we'll need to first authenticate with our credentials before pushing to our repository:

```bash
git config --global user.name $GITHUB_USERNAME  # <-- CHANGE THIS to your username
git config --global user.email you@example.com  # <-- CHANGE THIS to your email
git add .
git commit -m """"  # <-- CHANGE THIS to your message
git push origin dev
```

Now you will be prompted to enter your username and password (personal access token). Follow these steps to get personal access token: [New GitHub personal access token](https://github.com/settings/tokens/new) → Add a name → Toggle `repo` and `workflow` → Click `Generate token` (scroll down) → Copy the token and paste it when prompted for your password.

4. Now we can start a PR from this branch to our `main` branch and this will trigger the [workloads workflow](/.github/workflows/workloads.yaml). If the workflow (Anyscale Jobs) succeeds, this will produce comments with the training and evaluation results directly on the PR.


  


5. If we like the results, we can merge the PR into the `main` branch. This will trigger the [serve workflow](/.github/workflows/serve.yaml) which will rollout our new service to production!

### Continual learning

With our CI/CD workflow in place to deploy our application, we can now focus on continually improving our model. It becomes really easy to extend on this foundation to connect to scheduled runs (cron), [data pipelines](https://madewithml.com/courses/mlops/data-engineering/), drift detected through [monitoring](https://madewithml.com/courses/mlops/monitoring/), [online evaluation](https://madewithml.com/courses/mlops/evaluation/#online-evaluation), etc. And we can easily add additional context such as comparing any experiment with what's currently in production (directly in the PR even), etc.


  


## FAQ

### Jupyter notebook kernels

Issues with configuring the notebooks with jupyter? By default, jupyter will use the kernel with our virtual environment but we can also manually add it to jupyter:
```bash
python3 -m ipykernel install --user --name=venv
```
Now we can open up a notebook → Kernel (top menu bar) → Change Kernel → `venv`. To ever delete this kernel, we can do the following:
```bash
jupyter kernelspec list
jupyter kernelspec uninstall venv
```
","'data-engineering', 'data-quality', 'data-science', 'deep-learning', 'distributed-ml', 'distributed-training', 'llms', 'machine-learning', 'mlops', 'natural-language-processing', 'python', 'pytorch', 'ray'",2018-11-05T03:44:27Z,2023-12-07T19:38:01Z,1,1,36250,1223,"('GokuMohandas', 18)",0,0,
cdelahousse/2-3-4-Tree,2-3-4 Tree (B-Tree of order 4),"This is a simple implementation of a 2-3-4 tree in Java as a Set, which is a Be-Tree
of order 4.

The structure implements the Simple Set interface (SSet.java) from Dr. Pat Morin's
wonderful *Open Data Structures* book.

DefaultComparator.java and TwoFourNodeException.java are only helpers. The bulk of
the datastructure is found in TwoFourTree.java.

I've tried to document the code as best as possible and be clear in every choice I
made.

TODO: 
> rewrite the recursive delete method as an iterative one.


",,2012-07-05T20:42:30Z,2012-07-05T21:16:13Z,1,1,5,2,"('cdelahousse', 17)",0,0,
progrium/buildstep,Buildstep uses Docker and Buildpacks to build applications like Heroku,"# Buildstep [![wercker status](https://app.wercker.com/status/c1c25f5d0ff8ea1823063000430114b2/s ""wercker status"")](https://app.wercker.com/project/bykey/c1c25f5d0ff8ea1823063000430114b2)

Heroku-style application builds using Docker and Buildpacks. Used by [Dokku](https://github.com/progrium/dokku) to make a mini-Heroku.

## Requirements

 * Docker
 * Git

## Supported Buildpacks

Buildpacks should generally just work, but many of them make assumptions about their environment. So Buildstep has a [list of officially supported buildpacks](https://github.com/gliderlabs/herokuish/tree/master/buildpacks) that are built-in and ready to be used.


## Building Buildstep

The buildstep script uses a buildstep base image that needs to be built. It must be created before
you can use the buildstep script. To create it, run:

    $ make build

This will create an image called `progrium/buildstep` that contains all supported buildpacks and the
builder script that will actually perform the build using the buildpacks.

## Building an App

Running the buildstep script will take an application tar via STDIN and the destination image name as an argument.
The tarball is deployed inside a new container based on `progrium/buildstep`, and the `builder` script is run in
the container. The container is then committed to create an image with the specified name.

    $ cat myapp.tar | ./buildstep myapp

If you didn't already have an application tar, you can create one on the fly.

    $ tar cC /path/to/your/app . | ./buildstep myapp

The resulting image contains your built app, ready to go. The builder script also parses the Procfile and produces
a starter script that takes a process type. Run your app with:

    $ docker run -d myapp /bin/bash -c ""/start web""

## Custom Buildpacks

Custom buildpacks can be installed by committing a file in the root of your git repository named `.env`
This file should contain a line `export BUILDPACK_URL=` specifying the git repository providing
the buildpack.

If your buildpack needs extra packages these can be installed by the buildpack using [bin/compile](https://devcenter.heroku.com/articles/buildpack-api#bin-compile).

## License

MIT
",,2013-01-02T22:11:42Z,2018-06-11T16:57:09Z,47,37,907,41,"('progrium', 87), ('mjonuschat', 18), ('rhy-jot', 14), ('asm89', 6), ('fcoury', 6), ('josegonzalez', 6), ('Kloadut', 4), ('nolman', 4), ('lukec', 3), ('marqu3z', 3), ('Gabriel Monroy', 3), ('amaltson', 3), ('alanjds', 3), ('mike-park', 2), ('rnorth', 2), ('grigio', 2), ('jcromartie', 1), ('leemhenson', 1), ('Matthew Fisher', 1), ('michaelshobbs', 1), ('mmerickel', 1), ('Morton Jonuschat', 1), ('icco', 1), ('pahaz', 1), ('plietar', 1), ('qrohlf', 1), ('Richard North', 1), ('s4wny', 1), ('valerianpereira', 1), ('dcole-inviqa', 1), ('pandrew', 1), ('joejwright', 1), ('Jeroen Offerijns', 1), ('Jeroen Offerijns', 1), ('j15e', 1), ('jbrooksuk', 1), ('ericreid', 1), ('elia', 1), ('CHH', 1), ('carlhoerberg', 1), ('Bryon Roche', 1), ('bltavares', 1), ('bosky101', 1), ('amscotti', 1), ('andrewsomething', 1), ('edofic', 1), ('darkpixel', 1)",31,23,
Boris-Em/BEMCheckBox,Tasteful Checkbox for iOS. (Check box),"# BEMCheckBox
[![Build Status](https://travis-ci.org/Boris-Em/BEMCheckBox.svg)](https://travis-ci.org/Boris-Em/BEMCheckBox)
[![Version](https://img.shields.io/cocoapods/v/BEMCheckBox.svg?style=flat)](http://cocoadocs.org/docsets/BEMCheckBox)
[![License](https://img.shields.io/cocoapods/l/BEMCheckBox.svg?style=flat)](http://cocoadocs.org/docsets/BEMCheckBox)
[![Platform](https://img.shields.io/cocoapods/p/BEMCheckBox.svg?style=flat)](http://cocoadocs.org/docsets/BEMCheckBox)
[![Carthage Compatible](https://img.shields.io/badge/Carthage-compatible-4BC51D.svg?style=flat)](https://github.com/Carthage/Carthage)

	

**BEMCheckBox** is an open source library making it easy to create beautiful, highly customizable, animated checkboxes for iOS. 

## Table of Contents

* [**Project Details**](#project-details)  
  * [Requirements](#requirements)
  * [License](#license)
  * [Support](#support)
  * [Sample App](#sample-app)
  * [React Native](#react-native)
  * [NativeScript](#nativescript)
  * [Xamarin](#xamarin)
* [**Getting Started**](#getting-started)
  * [Installation](#installation)
  * [Setup](#setup)
* [**Documentation**](#documentation)
  * [Enabling / Disabling the Checkbox](#enabling--disabling-the-checkbox) 
  * [Reloading](#reloading)
  * [Group / Radio Button Functionality](#group--radio-button-functionality)
  * [Delegate](#delegate)
  * [Customization](#customization)

## Project Details
Learn more about the **BEMCheckBox** project, licensing, support etc.

	

### Requirements
 - Requires iOS 7 or later. The sample project is optimized for iOS 9.
 - Requires Automatic Reference Counting (ARC).
 - Optimized for ARM64 Architecture.

### License
See the [License](https://github.com/Boris-Em/BEMCheckBox/blob/master/LICENSE). You are free to make changes and use this in either personal or commercial projects. Attribution is not required, but highly appreciated. A little ""Thanks!"" (or something to that affect) is always welcome. If you use **BEMCheckBox** in your app, please let us know!

### Support
[![Gitter chat](https://badges.gitter.im/Boris-Em/BEMCheckBox.png)](https://gitter.im/Boris-Em/BEMCheckBox)  
Join us on [Gitter](https://gitter.im/Boris-Em/BEMCheckBox) if you need any help or want to talk about the project.

### Sample App
The iOS Sample App included with this project demonstrates one way to correctly setup and use **BEMCheckBox**. It also offers the possibility to customize the checkbox within the app.

### React Native  
**BEMCheckBox** can be used with React Native: [React-Native-BEMCheckBox](https://github.com/torifat/react-native-bem-check-box)

### NativeScript  
**BEMCheckBox** can be used with NativeScript: [NativeScript-BEMCheckBox](https://github.com/nstudio/nativescript-checkbox)

### Xamarin
**BEMCheckBox** can also be used with Xamarin: [XPlugins.iOS.BEMCheckBox](https://github.com/saturdaymp/XPlugins.iOS.BEMCheckBox)

## Getting Started
It only takes a few simple steps to install and setup **BEMCheckBox** to your project.

### Installation

#### Swift Package Manager
Add `https://github.com/Boris-Em/BEMCheckBox` as a dependency to your Package.swift file or select `File -> Swift Packages -> Add Package Dependency...` in Xcode.

#### CocoaPods
The easiest way to install **BEMCheckBox** is to use CocoaPods. To do so, simply add the following line to your `Podfile`:
	pod 'BEMCheckBox'


#### Carthage
[Carthage](https://github.com/Carthage/Carthage) is a decentralized dependency manager that builds your dependencies and provides you with binary frameworks.

Run `carthage update` after adding **BEMCheckBox** to your Cartfile to build the framework. Drag the built `BEMCheckBox.framework` into your Xcode project.

#### Manually	
Finally, you can install **BEMCheckBox** manually. Simply drag and drop the *Classes* folder into your Xcode project. When you do so, make sure to check the ""*Copy items into destination group's folder*"" box.

### Setup
Setting up **BEMCheckBox** to your project couldn't be more simple. It is modeled after `UISwitch`. In fact, you could just replace instances of `UISwitch` by **BEMCheckBox** in your project!  
Here are the steps to follow to get everything up and running:

 1. Import `""BEMCheckBox.h""` to the header of your view controller:

 ```objective-c
 #import ""BEMCheckBox.h""
 ```

 2. **BEMCheckBox** can either be initialized programatically (through code) or with Interface Builder (Storyboard file). Use the method that makes the most sense for your project.
 
 **Programmatical Initialization**  
 Just add the following code to your implementation (usually in the `viewDidLoad` method of your View Controller).

 ```objective-c
 BEMCheckBox *myCheckBox = [[BEMCheckBox alloc] initWithFrame:CGRectMake(0, 0, 50, 50)];
 [self.view addSubview:myCheckBox];
 ```
 
 **Interface Builder Initialization**  
 1 - Drag a `UIView` to your `UIViewController`.  
 2 - Change the class of the new `UIView` to `BEMCheckBox`.  
 3 - Select the `BEMCheckBox` and open the Attributes Inspector. Most of the customizable properties can easily be set from the Attributes Inspector. The Sample App demonstrates this capability.

## Documentation
All of the methods and properties available for **BEMCheckBox** are documented below.

### Enabling / Disabling the Checkbox
##### The `on` Property
Just like `UISwitch`, **BEMCheckBox** provides the boolean property `on` that allows you to retrieve and set (without animation) a value determining wether the BEMCheckBox object is `on` or `off`. Defaults to `NO`.  
Example usage:
```objective-c
self.myCheckBox.on = YES;
```
##### `setOn:animated:`
Just like `UISwitch`, **BEMCheckBox** provides an instance method `setOn:animated:` that sets the state of the checkbox to On or Off, optionally animating the transition.  
Example usage:
```objective-c
[self.myCheckBox setOn:YES animated:YES];
```

### Reloading
The instance method `reload` lets you redraw the entire checkbox, keeping the current `on` value.  
Example usage:  
```objective-c
[self.myCheckBox reload]
```

### Group / Radio Button Functionality
**BEMCheckBox**es can easily be grouped together to form radio button functionality. This will automatically manage the state of each checkbox in the group, so that only one is selected at a time, and can optionally require that the group has a selection at all times.

```objective-c
self.group = [BEMCheckBoxGroup groupWithCheckBoxes:@[self.checkBox1, self.checkBox2, self.checkBox3]];
self.group.selectedCheckBox = self.checkBox2; // Optionally set which checkbox is pre-selected
self.group.mustHaveSelection = YES; // Define if the group must always have a selection
```

To see which checkbox is selected in that group, just ask for it:
```objective-c
BEMCheckBox *selection = self.group.selectedCheckBox;
```

To manually update the selection for a group, just set it:
```objective-c
self.group.selectedCheckBox = self.checkBox1;
```

### Delegate
**BEMCheckBox** uses a delegate to receive check box events. The delegate object must conform to the `BEMCheckBoxDelegate` protocol, which is composed of two optional methods:

- `didTapCheckBox:`  
Sent to the delegate every time the check box gets tapped, after its properties are updated (`on`), but before the animations are completed.

- `animationDidStopForCheckBox:`  
Sent to the delegate every time the check box finishes being animated.

### Customization
**BEMCheckBox** is exclusively customizable though properties.  
The following diagram provides a good overview:  



##### Apparence Properties
`lineWidth` - CGFloat  
The width of the lines of the check mark and box. Defaults to 2.0.  

`hideBox` - BOOL  
BOOL to control if the box should be hidden or not. Setting this property to `YES` will essentially turn the checkbox into a check mark. Defaults to `NO`.

`boxType` - BEMBoxType   
The type of box to use. See `BEMBoxType` for possible values. Defaults to `BEMBoxTypeCircle`. 


`tintColor` - UIColor  
The color of the box when the checkbox is Off.

`onCheckColor` - UIColor  
The color of the check mark when it is On.

`onFillColor` - UIColor  
The color of the inside of the box when it is On.

`onTintColor` - UIColor  
The color of the line around the box when it is On.

##### Animations
`animationDuration` - CGFloat  
The duration in seconds of the animations. Defaults to `0.5`.

`onAnimationType` - BEMAnimationType  
The type of animation to use when the checkbox gets checked. Defaults to `BEMAnimationTypeStroke`. See `BEMAnimationType` bellow for possible values.

`offAnimationType` - BEMAnimationType  
The type of animation to use when the checkbox gets unchecked. Defaults to `BEMAnimationTypeStroke`. See `BEMAnimationType` bellow for possible values.

`BEMAnimationType`  
The possible values for `onAnimationType` and `offAnimationType`.  
- `BEMAnimationTypeStroke`


- `BEMAnimationTypeFill`


- `BEMAnimationTypeBounce`


- `BEMAnimationTypeFlat`


- `BEMAnimationTypeOneStroke`


- `BEMAnimationTypeFade`

","'checkbox', 'checkmark', 'ios', 'ui'",2015-09-03T05:58:18Z,2023-08-03T23:24:15Z,19,15,2621,47,"('Boris-Em', 151), ('Vortec4800', 6), ('andrey-krukovskiy', 4), ('Boris Emorine', 4), ('Boris Emorine', 3), ('Jay Moore', 3), ('Signoo', 3), ('Alexander Karpov', 2), ('hardikdevios', 2), ('agisboye', 2), ('danielgindi', 1), ('gelldur', 1), ('morozkin', 1), ('irshadpc', 1), ('RemyLivewall', 1), ('zhongwuzw', 1), ('czarny', 1), ('vahidvdn', 1), ('wanghengheng', 1)",9,9,
Homebrew/brew,🍺 The missing package manager for macOS (or Linux),"# Homebrew

[![GitHub release](https://img.shields.io/github/release/Homebrew/brew.svg)](https://github.com/Homebrew/brew/releases)

Features, usage and installation instructions are [summarised on the homepage](https://brew.sh). Terminology (e.g. the difference between a Cellar, Tap, Cask and so forth) is [explained here](https://docs.brew.sh/Formula-Cookbook#homebrew-terminology).

## What Packages Are Available?

1. Type `brew formulae` for a list.
2. Or visit [formulae.brew.sh](https://formulae.brew.sh) to browse packages online.

## More Documentation

`brew help`, `man brew` or check [our documentation](https://docs.brew.sh/).

## Troubleshooting

First, please run `brew update` and `brew doctor`.

Second, read the [Troubleshooting Checklist](https://docs.brew.sh/Troubleshooting).

**If you don't read these it will take us far longer to help you with your problem.**

## Donations

Homebrew is a non-profit project run entirely by unpaid volunteers. We need your funds to pay for software, hardware and hosting around continuous integration and future improvements to the project. Every donation will be spent on making Homebrew better for our users.

Please consider a regular donation through [GitHub Sponsors](https://github.com/sponsors/Homebrew), [Open Collective](https://opencollective.com/homebrew) or [Patreon](https://www.patreon.com/homebrew). Homebrew is fiscally hosted by the [Open Source Collective](https://opencollective.com/opensource).

For questions about donations, including corporate giving, please email the Homebrew PLC at [plc@brew.sh](mailto:plc@brew.sh).

## Community

- [Homebrew/discussions (forum)](https://github.com/orgs/Homebrew/discussions)
- [@homebrew@fosstodon.org (Mastodon)](https://fosstodon.org/@homebrew)
- [@MacHomebrew (𝕏 (formerly known as Twitter))](https://twitter.com/MacHomebrew)

## Contributing

We'd love you to contribute to Homebrew. First, please read our [Contribution Guide](CONTRIBUTING.md) and [Code of Conduct](https://github.com/Homebrew/.github/blob/HEAD/CODE_OF_CONDUCT.md#code-of-conduct).

We explicitly welcome contributions from people who have never contributed to open-source before: we were all beginners once! We can help build on a partially working pull request with the aim of getting it merged. We are also actively seeking to diversify our contributors and especially welcome contributions from women from all backgrounds and people of colour.

A good starting point for contributing is to first [tap `homebrew/core`](https://docs.brew.sh/FAQ#can-i-edit-formulae-myself), then run `brew audit --strict` with some of the packages you use (e.g. `brew audit --strict wget` if you use `wget`) and read through the warnings. Try to fix them until `brew audit --strict` shows no results and [submit a pull request](https://docs.brew.sh/How-To-Open-a-Homebrew-Pull-Request). If no formulae you use have warnings you can run `brew audit --strict` without arguments to have it run on all packages and pick one.

Alternatively, for something more substantial, check out one of the issues labelled `help wanted` in [Homebrew/brew](https://github.com/homebrew/brew/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22) or [Homebrew/homebrew-core](https://github.com/homebrew/homebrew-core/issues?q=is%3Aopen+is%3Aissue+label%3A%22help+wanted%22).

Good luck!

## Security

Please report security issues by filling in [the security advisory form](https://github.com/homebrew/brew/security/advisories/new).

## Who We Are

Homebrew's [Project Leader](https://docs.brew.sh/Homebrew-Governance#6-project-leader) is [Mike McQuaid](https://github.com/MikeMcQuaid).

Homebrew's [Project Leadership Committee](https://docs.brew.sh/Homebrew-Governance#4-project-leadership-committee) is [Colin Dean](https://github.com/colindean), [Issy Long](https://github.com/issyl0), [Mike McQuaid](https://github.com/MikeMcQuaid), [Patrick Linnane](https://github.com/p-linnane) and [Vanessa Gennarelli](https://github.com/mozzadrella).

Homebrew's [Technical Steering Committee](https://docs.brew.sh/Homebrew-Governance#7-technical-steering-committee) is [Bo Anderson](https://github.com/Bo98), [FX Coudert](https://github.com/fxcoudert), [Michka Popoff](https://github.com/iMichka), [Mike McQuaid](https://github.com/MikeMcQuaid) and [Rylan Polster](https://github.com/Rylan12).

Homebrew's maintainers are [Alexander Bayandin](https://github.com/bayandin), [Bevan Kay](https://github.com/bevanjkay), [Bo Anderson](https://github.com/Bo98), [Branch Vincent](https://github.com/branchvincent), [Caleb Xu](https://github.com/alebcay), [Carlo Cabrera](https://github.com/carlocab), [Douglas Eichelberger](https://github.com/dduugg), [Dustin Rodrigues](https://github.com/dtrodrigues), [Eric Knibbe](https://github.com/EricFromCanada), [FX Coudert](https://github.com/fxcoudert), [Issy Long](https://github.com/issyl0), [Justin Krehel](https://github.com/krehel), [Markus Reiter](https://github.com/reitermarkus), [Miccal Matthews](https://github.com/miccal), [Michael Cho](https://github.com/cho-m), [Michka Popoff](https://github.com/iMichka), [Mike McQuaid](https://github.com/MikeMcQuaid), [Nanda H Krishna](https://github.com/nandahkrishna), [Patrick Linnane](https://github.com/p-linnane), [Razvan Azamfirei](https://github.com/razvanazamfirei), [Rui Chen](https://github.com/chenrui333), [Ruoyu Zhong](https://github.com/ZhongRuoyu), [Rylan Polster](https://github.com/Rylan12), [Sam Ford](https://github.com/samford), [Sean Molenaar](https://github.com/SMillerDev), [Thierry Moisan](https://github.com/Moisan), [Timothy Sutton](https://github.com/timsutton) and [William Woodruff](https://github.com/woodruffw).

Former maintainers with significant contributions include [Misty De Méo](https://github.com/mistydemeo), [Shaun Jackman](https://github.com/sjackman), [Vítor Galvão](https://github.com/vitorgalvao), [Claudia Pellegrino](https://github.com/claui), [Seeker](https://github.com/SeekingMeaning), [Jan Viljanen](https://github.com/javian), [JCount](https://github.com/jcount), [commitay](https://github.com/commitay), [Dominyk Tiller](https://github.com/DomT4), [Tim Smith](https://github.com/tdsmith), [Baptiste Fontaine](https://github.com/bfontaine), [Xu Cheng](https://github.com/xu-cheng), [Martin Afanasjew](https://github.com/UniqMartin), [Brett Koonce](https://github.com/asparagui), [Charlie Sharpsteen](https://github.com/Sharpie), [Jack Nagel](https://github.com/jacknagel), [Adam Vandenberg](https://github.com/adamv), [Andrew Janke](https://github.com/apjanke), [Alex Dunn](https://github.com/dunn), [neutric](https://github.com/neutric), [Tomasz Pajor](https://github.com/nijikon), [Uladzislau Shablinski](https://github.com/vladshablinsky), [Alyssa Ross](https://github.com/alyssais), [ilovezfs](https://github.com/ilovezfs), [Chongyu Zhu](https://github.com/lembacon) and Homebrew's creator: [Max Howell](https://github.com/mxcl).

## License

Code is under the [BSD 2-clause ""Simplified"" License](LICENSE.txt).
Documentation is under the [Creative Commons Attribution license](https://creativecommons.org/licenses/by/4.0/).

## Sponsors

Our macOS continuous integration infrastructure is hosted by [MacStadium's Orka](https://www.macstadium.com/customers/homebrew).

[![Powered by MacStadium](https://cloud.githubusercontent.com/assets/125011/22776032/097557ac-eea6-11e6-8ba8-eff22dfd58f1.png)](https://www.macstadium.com)

Secure password storage and syncing is provided by [1Password for Teams](https://1password.com/teams/).

[](https://1password.com)

Flaky test detection and tracking is provided by [BuildPulse](https://buildpulse.io/).

[![BuildPulse](https://github.com/Homebrew/brew/assets/1699443/87385e9a-6c47-4e59-b17e-fe083e945709)](https://buildpulse.io)

's DNS is [resolving with DNSimple](https://dnsimple.com/resolving/homebrew).

[![DNSimple](https://cdn.dnsimple.com/assets/resolving-with-us/logo-light.png)](https://dnsimple.com/resolving/homebrew#gh-light-mode-only)
[![DNSimple](https://cdn.dnsimple.com/assets/resolving-with-us/logo-dark.png)](https://dnsimple.com/resolving/homebrew#gh-dark-mode-only)

Homebrew is generously supported by [GitHub](https://github.com/github), [Custom Ink](https://github.com/customink), [Randy Reddig](https://github.com/ydnar), [Codecademy](https://github.com/Codecademy), [MacPaw Inc.](https://github.com/MacPaw), [fly.io](https://github.com/superfly), [Workbrew](https://github.com/Workbrew) and many other users and organisations via [GitHub Sponsors](https://github.com/sponsors/Homebrew).

[![GitHub](https://github.com/github.png?size=64)](https://github.com/github)[![fly.io](https://github.com/superfly.png?size=64)](https://github.com/superfly)
","'brew', 'homebrew', 'macos', 'package-manager', 'ruby'",2016-03-06T05:08:38Z,2024-06-18T14:41:53Z,1189,377,39945,708,"('MikeMcQuaid', 10462), ('reitermarkus', 3244), ('jacknagel', 3191), ('BrewTestBot', 2210), ('Bo98', 1567), ('dependabotbot', 1202), ('adamv', 1072), ('mxcl', 951), ('Rylan12', 945), ('xu-cheng', 835), ('carlocab', 752), ('issyl0', 693), ('dduugg', 575), ('DomT4', 500), ('nandahkrishna', 497), ('mistydemeo', 480), ('jonchang', 420), ('sjackman', 389), ('EricFromCanada', 340), ('samford', 313), ('dependabot-previewbot', 309), ('apainintheneck', 303), ('SeekingMeaning', 277), ('UniqMartin', 267), ('GauthamGoli', 267), ('hyuraku', 262), ('ilovezfs', 262), ('dawidd6', 257), ('p-linnane', 256), ('maxim-belkin', 209), ('SMillerDev', 206), ('iMichka', 203), ('alyssais', 201), ('woodruffw', 190), ('dependabot-support', 181), ('bfontaine', 167), ('commitay', 155), ('mohammadzainabbas', 153), ('ZhongRuoyu', 131), ('lionellloh', 129), ('dtrodrigues', 125), ('vladshablinsky', 112), ('tdsmith', 107), ('whoiswillma', 104), ('cho-m', 103), ('amyspark', 99), ('apjanke', 91), ('bayandin', 90), ('vidusheeamoli', 87), ('XuehaiPan', 85), ('fxcoudert', 83), ('samueljohn', 82), ('vitorgalvao', 78), ('bevanjkay', 78), ('Sharpie', 77), ('jawshooah', 75), ('alebcay', 73), ('emctackett', 66), ('scpeters', 65), ('BaffourAdu', 62), ('max-ae', 60), ('FnControlOption', 60), ('danielnachun', 59), ('zmwangx', 58), ('Connor Mann', 58), ('mansimarkaur', 56), ('JCount', 56), ('dunn', 52), ('abitrolly', 51), ('claui', 51), ('tschoonj', 47), ('vszakats', 44), ('lukaso', 43), ('razvanazamfirei', 43), ('lembacon', 40), ('miccal', 40), ('Bob W. Hogg', 39), ('armcburney', 30), ('colindean', 30), ('cnnrmnn', 29), ('JBYoshi', 28), ('BenMusch', 27), ('rmNULL', 27), ('cnnrmnn', 27), ('Git-Jiro', 27), ('zachauten', 23), ('eirinikos', 21), ('Moisan', 21), ('thomasrockhu', 20), ('chenrui333', 20), ('camillol', 19), ('tesaguri', 19), ('manphiz', 19), ('joshka', 19), ('chrmoritz', 19), ('gromgit', 19), ('branchvincent', 18), ('Tokarak', 17), ('gkpacker', 17), ('broder', 16), ('sazriel26', 16), ('Gautham G', 16), ('alloy', 16), ('alexbostock', 15), ('Gautham Goli', 14), ('Kentzo', 14), ('jsoref', 14), ('boblail', 13), ('laughedelic', 13), ('cwegrzyn', 13), ('umireon', 13), ('mislav', 12), ('metacollin', 12), ('retokromer', 12), ('lwolfsonkin', 12), ('kabel', 12), ('hmarr', 12), ('dkav', 12), ('MatzFan', 11), ('javian', 11), ('adzenith', 11), ('waldyrious', 11), ('kidonng', 11), ('danielbayley', 10), ('xxyzz', 10), ('ffeu', 10), ('vladimyr', 10), ('afnanenayet', 10), ('JBallin', 10), ('josh', 10), ('tie624', 10), ('DenizUgur', 9), ('doughazell', 9), ('FTLam11', 9), ('RandomDSdevel', 9), ('tharun208', 9), ('mkhl', 9), ('L2G', 8), ('jaimeMF', 8), ('kiendang', 8), ('nath', 8), ('maxnordlund', 8), ('zbeekman', 8), ('quackduck', 8), ('geoff-nixon', 8), ('dlh', 8), ('ctompkinson', 8), ('CNA-Bld', 8), ('benpbolton', 8), ('indirect', 8), ('ts826848', 8), ('skyzh', 8), ('AnastasiaSulyagina', 7), ('sophiebits', 7), ('urdh', 7), ('Romain Bossart', 7), ('unitof', 7), ('josephsweeney', 7), ('staticfloat', 7), ('Logicer16', 7), ('mtmiller', 7), ('cdalvaro', 7), ('Aaron-212', 7), ('Peter Aronoff', 7), ('rednoah', 7), ('jasonkarns', 6), ('yahavi', 6), ('chdiza', 6), ('g0t4', 6), ('Trung Le', 6), ('Stefan', 6), ('koraktor', 6), ('Alexander Mancevice', 6), ('afh', 6), ('Brian Morton', 6), ('gibfahn', 6), ('rgant', 6), ('jasonrudolph', 6), ('minamijoyo', 6), ('osalbahr', 6), ('rakkesh', 6), ('rhendric', 6), ('sj26', 6), ('Alex', 5), ('kaihowl', 5), ('kthchew', 5), ('Kimmo Lehto', 5), ('naoty', 5), ('Raza Hussain', 5), ('timfjord', 5), ('Tim Visher', 5), ('timotheecour', 5), ('nijikon', 5), ('notfromstatefarm', 5), ('richiethomas', 5), ('dpo', 5), ('Akylzhan', 5), ('singingwolfboy', 5), ('abookyun', 5), ('gregory-nisbet', 5), ('ThatsJustCheesy', 5), ('ianml', 5), ('Igor Kapkov', 5), ('ImgBotApp', 5), ('Isabell Long', 5), ('jacktose', 5), ('johnhawkinson', 5), ('joshliu', 5), ('Justin Baugh', 5), ('krehel', 5), ('lucafavatella', 4), ('heller', 4), ('narendasan', 4), ('NickHackman', 4), ('nicolasdespres', 4), ('rprimus', 4), ('binury', 4), ('ywwry66', 4), ('sullivan-sean', 4), ('tobli', 4), ('toobuntu', 4), ('orf', 4), ('muzimuzhi', 4), ('stevenlele', 4), ('ntkme', 4), ('MichelleNguy', 4), ('core-code', 4), ('Adrian Ho', 4), ('alecclarke', 4), ('andrewyatz', 4), ('dasmfm', 4), ('bukzor', 4), ('cmbernard333', 4), ('clemensg', 4), ('cndreisbach', 4), ('Daniel D. Beck', 4), ('0xffea', 4), ('hogand', 4), ('akalin', 4), ('gerlero', 4), ('Wojonatior', 4), ('jmarshall', 4), ('Kieran Pilkington', 4), ('dakcarto', 4), ('leoheitmannruiz', 4), ('Reto Kromer', 3), ('robinkunde', 3), ('roryokane', 3), ('hartwork', 3), ('sesam', 3), ('sohanh', 3), ('sjorek', 3), ('steveh7812', 3), ('tlk', 3), ('melvyn2', 3), ('priteau', 3), ('phoenixeliot', 3), ('peternewman', 3), ('PauloPhagula', 3), ('astiob', 3), ('ncruces', 3), ('muneebmahmed', 3), ('mdippery', 3), ('DavidGriffith', 3), ('muescha', 3), ('Josh-Tilles', 3), ('eugenesvk', 3), ('dcow', 3), ('tueksta', 3), ('souleater7', 3), ('romellem', 3), ('n-thumann', 3), ('neutric', 3), ('lwe', 3), ('lboogaard', 3), ('dersvenhesse', 3), ('dbr', 3), ('zachwhaley', 3), ('wjlroe', 3), ('willfaught', 3), ('VonUniGE', 3), ('tiikeri', 3), ('troymccabe', 3), ('Noctem', 3), ('caldwell', 3), ('davidchall', 3), ('valin4tor', 3), ('Syzygies', 3), ('cehoffman', 3), ('ches', 3), ('yous', 3), ('chadcatlett', 3), ('CamJN', 3), ('rwhogg', 3), ('neersighted', 3), ('asutoshpalai', 3), ('yzguy', 3), ('Adrian Ho', 3), ('Amorymeltzer', 3), ('Austin Ziegler', 3), ('adunning', 3), ('Benjamin Denhartog', 3), ('Lorenzo Gatti', 3), ('lucaong', 3), ('bobthecow', 3), ('jasontedor', 3), ('janl', 3), ('Michael Cho', 3), ('jamie', 3), ('JakeConnors376W', 3), ('Greg Sieranski', 3), ('GregBrimble', 3), ('Dominyk Tiller', 3), ('donaldducky', 3), ('WangEdward', 3), ('elyscape', 3), ('Esther W', 3), ('Fabian Mettler', 3), ('Frizlab', 3), ('goxberry', 3), ('UiP9AV6Y', 3), ('GottemHams', 3), ('rhwood', 2), ('rwanyoike', 2), ('pstadler', 2), ('Cody Lewis', 2), ('rickmark', 2), ('yoshida-ryuhei', 2), ('Second Planet', 2), ('shanesmith', 2), ('shivammathur', 2), ('peaceiris', 2), ('humzashah', 2), ('thomassth', 2), ('tma', 2), ('Thomas Vaillant', 2), ('Tianyi Cui', 2), ('Tom von Schwerdtner', 2), ('mathaeus', 2), ('int3h', 2), ('mcuelenaere', 2), ('Max Howell', 2), ('maschwenk', 2), ('Michael Ledin', 2), ('mikejs', 2), ('miharekar', 2), ('oo6', 2), ('Moulick', 2), ('toonetown', 2), ('nihaals', 2), ('nipunn1313', 2), ('numbermaniac', 2), ('okineadev', 2), ('Omoeba', 2), ('Blaisorblade', 2), ('dalance', 2), ('dana', 2), ('emreerhan', 2), ('enami tsugutomo', 2), ('fauxpark', 2), ('hayato iida', 2), ('kraktus', 2), ('lexicol', 2), ('lukertty', 2), ('moabits', 2), ('neutric', 2), ('shaunsingh', 2), ('shcai97', 2), ('xiehuc', 2), ('ylht', 2), ('zdcthomas', 2), ('Étienne Barrié', 2), ('沙漠之子', 2), ('Trevor Powell', 2), ('Trevor Wennblom', 2), ('Troels Thomsen', 2), ('Tsukasa OMOTO', 2), ('Tuncer Ayaz', 2), ('Viktor Oreshkin', 2), ('Wang Boyu', 2), ('Watal M. Iwasaki', 2), ('Wil Moore III', 2), ('William Ma', 2), ('Yoshimasa Niwa', 2), ('Yurii Kolesnykov', 2), ('Z. Grace Moreau', 2), ('Zaid Kokaja', 2), ('aereal', 2), ('bm5k', 2), ('cacology', 2), ('cclauss', 2), ('ColinHebert', 2), ('dertuxmalwieder', 2), ('NSAntoine', 2), ('wendorf', 2), ('mrtazz', 2), ('FuegoFro', 2), ('dnicolson', 2), ('davidjb', 2), ('David Broder-Rodgers', 2), ('davidxia', 2), ('devkhan', 2), ('djsutherland', 2), ('dougal', 2), ('Eitot', 2), ('aimileus', 2), ('ericmarkmartin', 2), ('felixbuenemann', 2), ('Adrian Ho', 2), ('AkihiroSuda', 2), ('Alexander Solovyov', 2), ('thecaralice', 2), ('ablyler', 2), ('petdance', 2), ('amaltson', 2), ('halostatue', 2), ('Ball', 2), ('PurpleBooth', 2), ('burnto', 2), ('BrewTestBot', 2), ('dremesov', 2), ('chris-araman', 2), ('docwhat', 2), ('mifix', 2), ('clayreimann', 2), ('clint-stripe', 2), ('johndbritton', 2), ('Jonas Pfenniger', 2), ('josephfrazier', 2), ('xose', 2), ('jpawlowski', 2), ('kareman', 2), ('lilyball', 2), ('kevmoo', 2), ('leepa', 2), ('liyang', 2), ('lbergelson', 2), ('Undre4m', 2), ('lucendio', 2), ('Luke Hefson', 2), ('memark', 2), ('junkblocker', 2), ('rb2k', 2), ('infogrind', 2), ('fffergal', 2), ('Florian Sowade', 2), ('fredemmott', 2), ('gcbartlett', 2), ('kulakowski', 2), ('BandhiyaHardik', 2), ('s-hfarooq', 2), ('revolter', 2), ('native-api', 2), ('Quesar', 2), ('Jack Haden-Enneking', 2), ('whoisjake', 2), ('weakish', 2), ('jameelkaisar', 2), ('Jan Viljanen', 2), ('jezdez', 2), ('jmsundar', 2), ('jbampton', 2), ('Randy Thiemann', 1), ('Rakesh', 1), ('Rainer M. Krug', 1), ('Raimonds Kalnins', 1), ('Rahul Horé', 1), ('Rafael Kitover', 1), ('Radek Simko', 1), ('Radek Pietruszewski', 1), ('Prayag Verma', 1), ('Pranas Ziaukas', 1), ('Piotr Usewicz', 1), ('PikachuEXE', 1), ('Ranmocy', 1), ('RasPhilCo', 1), ('Ray Hamel', 1), ('Raymie Stata', 1), ('Reuben Thomas', 1), ('Richard Schneeman', 1), ('Richie Thomas', 1), ('RikudouSage', 1), ('Rob Olson', 1), ('Robert Buonpastore', 1), ('Sam X Nguyen', 1), ('Pasta Ravioli', 1), ('Patrick Lucas', 1), ('Patrick Walton', 1), ('Patrick Way', 1), ('Paul', 1), ('Paul Fitzpatrick', 1), (""Paul O'Neil"", 1), ('Paul Phillips', 1), ('Peter Lewis', 1), ('Peter Lewis', 1), ('Peter Powell', 1), ('Peter Rowlands', 1), ('Peter Teixeira', 1), ('Peter Wu', 1), ('Phil Dibowitz', 1), ('Phil Smith', 1), ('Philip Harrison', 1), ('Philip May', 1), ('Philip Puryear', 1), ('Philippe Eberli', 1), ('Phillip Calvin', 1), ('Pierre PACI', 1), ('PikachuEXE', 1), ('Samuel Cochran', 1), ('Samuel FORESTIER', 1), ('Samuel Lo', 1), ('Samyak Bhuta', 1), ('Sander Bol', 1), ('Sanjito Kurniawan', 1), ('Sanjito Kurniawan', 1), ('Sarah', 1), ('Satoshi Ohmori', 1), ('Score_Under', 1), ('Scott Beamer', 1), ('Sean Lee', 1), ('Sean Linsley', 1), ('Sean Prashad', 1), ('Sean Wolfe', 1), ('Sema', 1), ('Sergei Silnov', 1), ('Sergey Parhomenko', 1), ('Seth Ladd', 1), ('Shammel Lee', 1), ('Shreedhar Hegde', 1), ('Shreyans Jain', 1), ('Robert Eshleman', 1), ('Robert Shaw', 1), ('Roberto Nibali', 1), ('Robin Neatherway', 1), ('Robson Peixoto', 1), ('Roger Hu', 1), ('Roger Leigh', 1), ('Roger Que', 1), ('Roland Crosby', 1), (""Rory O'Connell"", 1), ('Ross Penman', 1), ('Rui Chen', 1), ('Russell Teabeault', 1), ('Ryan Greenberg', 1), ('Ryan Pavlik', 1), ('Ryan Rotter', 1), ('Ryan S. Elliott', 1), ('SFU-CMPT376W', 1), ('SHIBATA Hiroshi', 1), ('SHIBATA Hiroshi', 1), ('Saagar Jha', 1), ('Sam Hathaway', 1), ('Sam McTaggart', 1), ('Mark Imbriaco', 1), ('Markus Prinz', 1), ('Marlon Richert', 1), ('Martijn Pieters', 1), ('Masaki Muranaka', 1), ('Mateusz Lenik', 1), ('Mathieu Vonlanthen', 1), ('Matt Brender', 1), ('Matt Di Pasquale', 1), ('Matt Hauck', 1), ('Matt Tagg', 1), ('Matt Torok', 1), ('Matthew Fluet', 1), ('Matthew Rothenberg', 1), ('Matthew Strax-Haber', 1), ('Maurice Kelly', 1), ('Max Mueggler', 1), ('Max R', 1), ('Maxim Belkin', 1), ('Maxime Garcia', 1), ('Maxwell Paul Brickner', 1), ('Meng Ye', 1), ('Motonori Iwata', 1), ('Cesar Andreu', 1), ('Lorenzo Manacorda', 1), ('Louis Romero', 1), ('Luca Weiss', 1), ('Lukas Bestle', 1), ('Luke Gallagher', 1), ('Luke Lau', 1), ('Luthaf', 1), ('M Jordan Stanway', 1), ('Mads Ohm Larsen', 1), ('Mahrud Sayrafi', 1), ('Maik Riechert', 1), ('Mandar Gokhale', 1), ('Manfred Stienstra', 1), ('Marc Savy', 1), ('Marc Sowen', 1), ('Marcelo Boeira', 1), ('Marcin Floryan', 1), ('Marcus Maxwell', 1), ('Margaret Lewicka', 1), ('Margeaux Spring', 1), ('Maria José Solano', 1), ('Mario Mueller', 1), ('Muneeb Ahmed', 1), ('Naoto Kaneko', 1), ('Nar Kumar', 1), ('Nar Kumar Chhantyal', 1), ('Natalie Weizenbaum', 1), ('Nate Whetsell', 1), ('Nathan', 1), ('Nathan Henrie', 1), ('Nathan Whetsell', 1), ('Nathan Woythaler', 1), ('Nicholas (Nick) Meyer', 1), ('Nick Morgan', 1), ('Niklas Herder', 1), ('Niklas Higi', 1), ('Nikolay Labinskiy', 1), ('Nikoli Dryden', 1), ('Ninan John', 1), ('Olivier Mengué', 1), ('Ori Peleg', 1), ('Oscar Del Ben', 1), ('Osman Currim', 1), ('Osman Surkatty', 1), ('Michael Hackner', 1), ('Michael Morgan', 1), ('Michael Nygard', 1), ('Michael Ripley', 1), ('Michael Vetter', 1), ('Michael Wagner', 1), ('Michał Gołębiowski-Owczarek', 1), ('Michał Gołębiowski', 1), ('Michihito Shigemura', 1), ('Mike Dillon', 1), ('Mike Enriquez', 1), ('Mike Fiedler', 1), ('Mike Lapinsky', 1), ('Mike McQuaid', 1), ('MikeMcQuaid', 1), ('Milas Bowman', 1), ('Milkey Mouse', 1), ('MinRK', 1), ('Misty De Méo', 1), ('Miëtek Bak', 1), ('Mohammad AlSaleh', 1), ('MoonFruit', 1), ('Morgan Tocker', 1), ('gtnbssn', 1), ('gunnaraasen', 1), ('hazz', 1), ('himikk', 1), ('ihatetoregister', 1), ('isaacs', 1), ('jainish shah', 1), ('janv', 1), ('jjergus', 1), ('joshua stein', 1), ('kaihaosw', 1), ('kaizoku', 1), ('kaukas', 1), ('kynnjo', 1), ('leonardo lopes de albuquerque', 1), ('leonklingele', 1), ('linzichao', 1), ('listrophy', 1), ('lucky', 1), ('mattetti', 1), ('mavenor', 1), ('mbcoguno', 1), ('risk', 1), ('Zev Eisenberg', 1), ('Zhiming Wang', 1), ('Zhuoyun Wei', 1), ('alejandro.alvarez.acero', 1), ('anatawa12', 1), ('arlolra', 1), ('at@an-ti.eu', 1), ('azure-pipelinesbot', 1), ('bigbes', 1), ('buo', 1), ('cadrpear', 1), ('chenrui', 1), ('chrisg', 1), ('commitay', 1), ('constXife', 1), ('cubuspl42', 1), ('delamoe', 1), ('dfabulich', 1), ('dgwakeman', 1), ('dinkypumpkin', 1), ('elliottcable', 1), ('eregon', 1), ('follower', 1), ('rogerdpack', 1), ('rohitgeddam', 1), ('rstata-verticloud', 1), ('samuela', 1), ('scientificworld', 1), ('scoates', 1), ('shcai97', 1), ('skim', 1), ('sowawa', 1), ('tduehr', 1), ('tikuta', 1), ('tjt263', 1), ('valrus', 1), ('wickles', 1), ('xxxajk', 1), ('xyb', 1), ('ytqh', 1), ('Álan Crístoffer', 1), ('Émilia Decaudin', 1), ('Øyvind Ingebrigtsen Øvergaard', 1), ('Борис Верховский', 1), ('謝致邦 (XIE Zhibang)', 1), ('mchao409', 1), ('medina', 1), ('mhmdanas', 1), ('mmhj', 1), ('mohawk2', 1), ('moofusecurity', 1), ('msbit', 1), ('nmeans', 1), ('nstrauss', 1), ('numbergames', 1), ('numbermaniac', 1), ('nvg', 1), ('ojab', 1), ('okhowang(王沛文)', 1), ('pascalbertrand', 1), ('phinze', 1), ('pmwheatley', 1), ('polamjag', 1), ('pseudoku', 1), ('psobolewskiPhD', 1), ('puredanger', 1), ('raimon', 1), ('razamatan', 1), ('Søren Brokær', 1), ('TETRA2000', 1), ('Takashi Idobe', 1), ('Tanachat Nilanon', 1), ('Tate Hanawalt', 1), ('Ted Pennings', 1), ('Teddy Wing', 1), ('Tej Chajed', 1), ('Teo Ljungberg', 1), ('Theo', 1), ('Thomas Andrew', 1), ('Thomas Andrew', 1), ('Thomas Plaçais', 1), ('Tijs Zwinkels - TinkerTank', 1), ('Tim Dorr', 1), ('Tim Dysinger', 1), ('Tim Marinin', 1), ('Tim Oram', 1), ('Tim Visher', 1), ('Tim Visher', 1), ('Todd A. Jacobs', 1), ('Todd Neal', 1), ('Welton Rodrigo', 1), ('Shu Niu', 1), ('Shuhei Akutagawa', 1), ('Sijawusz Pur Rahnama', 1), ('Simon COURTOIS', 1), ('Simon Olofsson', 1), ('Simon Olofsson', 1), ('Slobodan Mišković', 1), ('Sorin Ionescu', 1), ('Stafford Brunk', 1), ('Stan', 1), ('Stefan', 1), ('Stefan Sundin', 1), ('Stefano Pigozzi', 1), ('Stephan Zeissler', 1), ('Stephan van Eijkelenburg', 1), ('Stephen Allred', 1), ('Stephen Nelson', 1), ('Steve Losh', 1), ('Steve Matsumoto', 1), ('Steven Willis', 1), ('Stevie Howard', 1), ('Stevie Howard', 1), ('Stian Eikeland', 1), ('Wertzui123', 1), ('Will Jordan', 1), ('Will Robertson', 1), ('Will Ross', 1), ('Will Tisdale', 1), ('William Entriken', 1), ('Win Treese', 1), ('WingLim', 1), ('Xiao Di Guan', 1), ('Xiaodong', 1), ('Xue Fuqiao', 1), ('Yann-R', 1), ('Yarrow', 1), ('Yasuharu NAKANO', 1), ('Yoshimasa Niwa', 1), ('Yoshimasa Niwa', 1), ('Yuta HIGUCHI', 1), ('Yvo Mulder', 1), ('Z. Grace Moreau', 1), ('Zachary Moon', 1), ('Zachery Hostens', 1), ('Zeb McCorkle', 1), ('Todd Persen', 1), ('Tom', 1), ('Tom Schoonjans', 1), ('Tomasz Pajor', 1), ('Tommy Sparber', 1), ('Tommy Yang', 1), ('Tomy Hsieh', 1), ('Tony Kelman', 1), ('Tony Ta', 1), ('Toru Tanaka', 1), ('Trent Ogren', 1), ('Trevor Stevens', 1), ('Troels Henriksen', 1), ('Tse Kit Yam', 1), ('Tung Nguyen', 1), ('Usman Akeju', 1), ('Valentin Kulesh', 1), ('Valentin VĂLCIU', 1), ('Victor Martinez', 1), ('Viet Hung Nguyen', 1), ('Vinoth Ramiah', 1), ('Vladimír Kriška', 1), ('Wael M. Nasreddine', 1), ('Chandler Carruth', 1), ('Charles Gould', 1), ('Charlie Egan', 1), ('Charlie Sharpsteen', 1), ('Chase Stubblefield', 1), ('Chi Trung Nguyen', 1), ('Chih-Pin Tan', 1), ('Chip Turner', 1), ('Chris', 1), ('Chris Allen', 1), ('Chris Ayoub', 1), ('Chris Bracco', 1), ('Chris Kampmeier', 1), ('Chris Ledet', 1), ('Chris Long', 1), ('Chris Tate', 1), ('Chris Thachuk', 1), ('Chris Tompkinson', 1), ('Christian Bundy', 1), ('Christian Schlensker', 1), ('ChristianBundy', 1), ('Daniel Martín', 1), ('Brant Bobby', 1), ('Brendan Shanks', 1), ('Brett Cannon', 1), ('Brett Porter', 1), ('Brian Candler', 1), ('Brian Dunn', 1), ('Brian Shirai', 1), ('Brian Smyth', 1), ('Brian Stolz', 1), ('Bruno R. Barreyra', 1), ('Bulat Shakirzyanov', 1), ('Camden Narzt', 1), ('Cameron Barrie', 1), ('Cameron Sparr', 1), ('Carl Fürstenberg', 1), ('Carlo Marcelo Arenas Belón', 1), ('Carlo Rosati', 1), (""Carlos D'Agostino"", 1), ('Carlos Eduardo', 1), ('Carlos Sanchez', 1), ('Carol (Nichols || Goulding)', 1), ('Cassidy Marble', 1), ('Cedric Staub', 1), ('Daniel Trebbien', 1), ('Danielle Tomlinson', 1), ('Darcy Laycock', 1), ('DarthSim', 1), ('Darío Hereñú', 1), ('Dave Cottlehuber', 1), ('Dave Lee', 1), ('David', 1), ('David Christenson', 1), ('David Coeurjolly', 1), ('David Frascone', 1), ('David Larson', 1), ('David M. Lee', 1), ('David MacMahon', 1), (""David O'Trakoun"", 1), (""David O'Trakoun"", 1), ('David Porter', 1), ('David Rice', 1), ('David Rupp', 1), ('David Turner', 1), ('Dawid Wróbel', 1), ('Dean M Greer', 1), ('Christoph Blecker', 1), ('Christopher Sexton', 1), ('Clemens Müller', 1), ('Collin Styles', 1), ('Connor Gibson', 1), ('Connor Mann', 1), ('Corey Prophitt', 1), ('Corey Quinn', 1), ('Cory Donnelly', 1), ('Cyril Scetbon', 1), (""Dabrien 'Dabe' Murphy"", 1), ('Daeho Ro', 1), ('Daemian Mack', 1), ('Damien Pollet', 1), ('Dan', 1), ('Dan Fabulich', 1), ('Dan Hughes', 1), ('Dan Kessler', 1), ('Dan Loewenherz', 1), ('Dan Martinez', 1), ('Dan Martinez', 1), ('Daniel Bingham', 1), ('Daniel Blankenberg', 1), ('Alex Kirk', 1), ('Alex Malinovich', 1), ('Alex Muller', 1), ('Alex Qyoun-ae', 1), ('Alex Reece', 1), ('Alex Semyonov', 1), ('Alexander Berezovsky', 1), ('Alexander Kahn', 1), ('Alexander Regueiro', 1), ('Alexander Regueiro', 1), ('Alexander Udalov', 1), ('Alexandre Espinosa Menor', 1), ('Alexey Muranov', 1), ('Alexey Palazhchenko', 1), ('Allen Reese', 1), ('Amar Paul', 1), ('Amber Jain', 1), ('Amos Wenger', 1), ('Amy Grace', 1), ('Andreas Tolfsen', 1), ('Andrej Valek', 1), ('Andrew Hundt', 1), ('Ben Bleything', 1), ('Aaron Lichtman', 1), ('Aaron Liu', 1), ('Aaron Suggs', 1), ('Abi أب', 1), ('Adam Coffman', 1), ('Adam Demasi', 1), ('Adeel Ahmad Khan', 1), ('Adrian Ho', 1), ('Adrian Ho', 1), ('Adrian Ho', 1), ('Adrian Ho', 1), ('Adrian Moisey', 1), ('Adrian Petrescu', 1), ('Alan Ivey', 1), ('Aldrin Piri', 1), ('Aleksandar Topuzović', 1), ('Alessandro Di Felice', 1), ('Alessio Bogon', 1), ('Alex Balgavy', 1), ('Alex Burka', 1), ('Alex Gaynor', 1), ('Alex Hedges', 1), ('Alex Jordan', 1), ('Ben Burkert', 1), ('Ben Cochran', 1), ('Ben Hale', 1), ('Ben Morgan', 1), ('Ben Moss', 1), ('Ben Olive', 1), ('Ben White', 1), ('Benoit Daloze', 1), ('Berk Baski', 1), ('Bertrand Marron', 1), ('Birger J. Nordølum', 1), ('Birger J. Nordølum', 1), ('Bjørn Arild Mæland', 1), ('Bo Borgerson', 1), ('Bo Jeanes', 1), ('Bob W. Hogg', 1), ('Boris Gordon', 1), ('Bovard Tiberi', 1), ('Bradley Grzesiak and Nick Karpenske', 1), ('Brandon Bennett', 1), ('Brandon Black', 1), ('Brandon Ooi', 1), ('Andrew Lazarus', 1), ('Andrew McKinlay', 1), ('Andrew Potter', 1), ('Andrew Thorburn', 1), ('Andrew Zhou', 1), ('Anja Kefala', 1), ('Anton Danilchenko', 1), ('António Meireles', 1), ('April Arcus', 1), ('April Arcus', 1), ('Arian Faurtosh', 1), ('Armando Di Cianno', 1), ('Arne Jørgensen', 1), ('Artur Dryomov', 1), ('Aryeh Hillman', 1), ('Ash Berlin', 1), ('Ash Furrow', 1), ('Ashley Towns', 1), ('Ask Solem', 1), ('Austin Seipp', 1), ('Ayaan49', 1), ('Bartek Pacia', 1), ('Bartosz Kita', 1), ('Jeppe Toustrup', 1), ('Jeremy Mayeres', 1), ('Jeremy McNevin', 1), ('Jeremy Walker', 1), ('Jeroen Ooms', 1), ('Jerry1144', 1), ('Jiang Xin', 1), ('Jim Witschey', 1), ('Joao Antunes', 1), ('Jochen Schalanda', 1), ('Joe Chan', 1), ('Joe Gallo', 1), ('Joe George', 1), ('Joe Horsnell', 1), ('Joe Sweeney', 1), ('Joe Wicentowski', 1), ('Joel B Schwartz', 1), ('Johannes Wienke', 1), ('John Clark', 1), ('John Manoogian III', 1), ('John Zeringue', 1), ('Johnathan Conley', 1), ('Kevin Yap', 1), ('Jack Nagel', 1), ('Jacob Krall', 1), ('Jacob Menke', 1), ('Jacob Middag', 1), ('Jacob Wahlgren', 1), ('Jade Elizabeth Sailor', 1), ('Jaeho Shin', 1), ('Jam', 1), ('James Conroy-Finn', 1), ('James Costian', 1), ('James Cuzella', 1), ('James Elliott', 1), ('James Harris', 1), ('James Morris', 1), ('James P. Ascher', 1), ('James Wald', 1), ('James Young', 1), ('Jan Viljanen', 1), ('Jan-Henrik Bruhn', 1), ('Jason A. Donenfeld', 1), ('Jason Whittle', 1), ('Jeff Clites', 1), ('Jeffrey Cafferata', 1), ('Kid', 1), (""Kiyoshi '13k' Murata"", 1), ('Knut Ahlers', 1), ('Konstantin Shabanov', 1), ('Krasimir Nedelchev', 1), ('Kreig Zimmerman', 1), ('Kristof Lünenschloß', 1), ('Kurt Raschke', 1), ('Kyle Fuller', 1), ('Kyle Gorman', 1), ('Kyle Smith', 1), ('Kyungdahm Yun', 1), ('Laurent Cozic', 1), ('LeFnord', 1), ('Lee Hanxue', 1), ('Leo Soares', 1), ('Les Hill', 1), ('Lewis Sparlin', 1), ('Linus Unnebäck', 1), ('Logan Rosen', 1), ('Loic Nageleisen', 1), ('Loren Segal', 1), ('Jonathan Grochowski', 1), ('Jonathan Hitchcock', 1), ('Josh Bode', 1), ('Josh Larson', 1), ('Joshua Jabbour', 1), ('Joshua Morten', 1), ('Jozef Izso', 1), ('JuPlutonic', 1), ('Julian Berman', 1), ('Junho Choi', 1), ('Junho Choi', 1), ('Justin Klaassen', 1), ('Justin Mayer', 1), ('Karsten Sperling', 1), ('Kashif Rasul', 1), ('Kazem Keshavarz', 1), ('KazuakiM', 1), ('Kel Cecil', 1), ('Kenneth Pullen', 1), ('Kenyon Ralph', 1), ('Kevin Burke', 1), ('Kevin Menard', 1), ('Kevin Sjöberg', 1), ('Erik Nilsen', 1), ('Erlend Hamberg', 1), ('Ethan Edwards', 1), ('Ethan Piekarski', 1), ('Eugene Nikolsky', 1), ('Eugene Ray', 1), ('Evan Phoenix', 1), ('Evgenii Terechkov', 1), ('Federico Bond', 1), ('Felipe Navarro V', 1), ('Felix Buenemann', 1), ('Felix Bünemann', 1), ('Ferdinand Niedermann', 1), ('Figroc Chen', 1), ('Filipe David Manana', 1), ('Finn Smith', 1), ('Flier Lu', 1), ('Forrest Fleming', 1), ('Francisco Souza', 1), ('Frantisek Holop', 1), ('František Bořánek', 1), ('François Lamboley', 1), ('Gregory Anders', 1), ('Dean Smith', 1), ('Desmond Brand', 1), ('Diego Plentz', 1), ('Diogo Azevedo', 1), ('Dorian', 1), ('Drew Rodman', 1), ('Dustin Koupal', 1), ('Dylan Smith', 1), ('Eashwar Ranganathan', 1), ('Ed Flanagan ed@flanagan.xyz', 1), ('Ed Lui', 1), ('Ed Reel', 1), ('Edgar Gonzalez', 1), ('Eero Saynatkari', 1), ('Elan Ruusamäe', 1), ('Ellis Berner', 1), ('Emilio López', 1), ('Emily Marigold Klassen', 1), ('Emre Erhan', 1), ('Enrico Ghirardi', 1), ('Eric Andrew Lewis', 1), ('Eric Vantillard', 1), ('Erik Kastner', 1), ('Grey Baker', 1), ('Guillaume Algis', 1), ('Gábor Lipták', 1), ('Harald Nordgren', 1), ('Harry Mallon', 1), ('Harry Marr', 1), ('Hoàng Xuân Phú', 1), ('Humza', 1), ('Hunter Morris', 1), ('Iain Beeston', 1), ('Ian Max Andolina', 1), ('Ikko Ashimine', 1), ('Ilya Dmitrichenko', 1), ('Ilya Zverev', 1), ('Imre Horvath', 1), ('Imtiaz Majeed', 1), ('Indrajit Raychaudhuri', 1), ('Ismayil Mirzali', 1), ('Ivan Verevkin', 1), ('Izaak ""Zaak"" Beekman', 1), ('Izaak Beekman', 1), ('J. Brandt Buckley', 1), ('Frederick Zhang', 1), ('Freed-Wu', 1), ('Gabe Berke-Williams', 1), ('Gaëtan Lehmann', 1), ('Gareth Rees', 1), ('Garrett Guillotte', 1), ('Garrit Franke', 1), ('Geoff Nixon', 1), ('Geoff Nixon', 1), ('Geoff Petrie', 1), ('George Adams', 1), ('George Hartzell', 1), ('George Waters', 1), ('Gijs Key', 1), ('Giovanni Bajo', 1), ('Glenn / devalias', 1), ('GordonDiggs', 1), ('Graham Hughes', 1), ('Grant Guthrie', 1), ('Grant Hutchins', 1), ('Greg Myers', 1), ('Greg NISBET', 1), ('Gregor Zurowski', 1)",727,0,
petabridge/akka-bootcamp,Self-paced training course to learn Akka.NET fundamentals from scratch,"# Akka.NET Bootcamp

Welcome to [Akka.NET](http://getakka.net/ ""Akka.NET - Distributed actor model in C# and F#"") Bootcamp! This is a free, self-directed learning course brought to you by the folks at [Petabridge](http://petabridge.com/ ""Petabridge - Akka.NET Training, Consulting, and Support"").

[![Get Akka.NET training material & updates at https://petabridge.com/bootcamp/signup](images/grok.png)](https://petabridge.com/bootcamp/signup)

[![Discord](https://img.shields.io/discord/974500337396375553?style=flat&logo=discord&label=Join%20Akka.NET%20Discord)](https://discord.com/invite/GSCfPwhbWP)

Over the three units of this bootcamp you will learn how to create fully-functional, real-world programs using Akka.NET actors and many other parts of the core Akka.NET framework!

We will start with some basic actors and have you progressively work your way up to larger, more sophisticated examples.

The course is self-directed learning. You can do it at whatever pace you wish. You can [sign up here to have one Akka.NET Bootcamp lesson emailed to you daily](http://learnakka.net/ ""Learn Akka.NET with Akka.NET Bootcamp"") if you'd like a little help pacing yourself throughout the course.

> NOTE: F# support is in progress (see the [FSharp branch](https://github.com/petabridge/akka-bootcamp/tree/FSharp)). We will happily accept F# pull requests. Feel free to send them in.

## What will you learn?
In Akka.NET Bootcamp you will learn how to use Akka.NET actors to build reactive, concurrent applications.

You will learn how to build types of applications that may have seemed impossible or really, really hard to make prior to learning Akka.NET. You will walk away from this bootcamp with the confidence to handle bigger and harder problems than ever before!

### Unit 1
In Unit 1, we will learn the fundamentals of how the actor model and Akka.NET work.

*NIX systems have the `tail` command built-in to monitor changes to a file (such as tailing log files), whereas Windows does not. We will recreate `tail` for Windows and use the process to learn the fundamentals.

In Unit 1 you will learn:

1. How to create your own `ActorSystem` and actors;
2. How to send messages actors and how to handle different types of messages;
3. How to use `Props` and `IActorRef`s to build loosely coupled systems.
4. How to use actor paths, addresses, and `ActorSelection` to send messages to actors.
5. How to create child actors and actor hierarchies, and how to supervise children with `SupervisionStrategy`.
6. How to use the Actor lifecycle to control actor startup, shutdown, and restart behavior.

**[Begin Unit 1](src/Unit-1/README.md)**.

### Unit 2
In Unit 2, we're going to get into some more of the intermediate Akka.NET features to build a more sophisticated application than what we accomplished at the end of unit 1.

In Unit 2 you will learn:

1. How to use [HOCON configuration](http://getakka.net/articles/concepts/configuration.html#what-is-hocon ""Akka.NET HOCON Configurations"") to configure your actors via App.config and Web.config;
1. How to configure your actor's [Dispatcher](http://getakka.net/articles/actors/dispatchers.html) to run on the Windows Forms UI thread, so actors can make operations directly on UI elements without needing to change contexts;
1. How to handle more sophisticated types of pattern matching using `ReceiveActor`;
1. How to use the `Scheduler` to send recurring messages to actors;
1. How to use the [Publish-subscribe (pub-sub) pattern](http://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern) between actors;
1. How and why to switch actor's behavior at run-time; and
2. How to `Stash` messages for deferred processing.

**[Begin Unit 2](src/Unit-2/README.md)**.

### Unit 3
In Unit 3, we will learn how to use actors for parallelism and scale-out using [Octokit](http://octokit.github.io/) and data from Github repos!

In Unit 3 you will learn:

1. How to perform work asynchronously inside your actors using `PipeTo`;
2. How to use `Ask` to wait inline for actors to respond to your messages;
2. How to use `ReceiveTimeout` to time out replies from other actors;
4. How to use `Group` routers to divide work among your actors;
5. How to use `Pool` routers to automatically create and manage pools of actors; and
6. How to use HOCON to configure your routers.

**[Begin Unit 3](src/Unit-3/README.md)**.

## How to get started

Here's how Akka.NET bootcamp works!

### Use Github to Make Life Easy

This Github repository contains Visual Studio solution files and other assets you will need to complete the bootcamp.

Thus, if you want to follow the bootcamp we recommend doing the following:

1. Sign up for [Github](https://github.com/), if you haven't already.
2. [Fork this repository](https://github.com/petabridge/akka-bootcamp/fork) and clone your fork to your local machine.
3. As you go through the project, keep a web browser tab open to the [Akka.NET Bootcamp ReadMe](https://github.com/petabridge/akka-bootcamp/) so you can read all of the instructions clearly and easily.

### Bootcamp Structure

Akka.NET Bootcamp consists of three modules:

* **Unit 1 - Beginning Akka.NET**
* **Unit 2 - Intermediate Akka.NET**
* **Unit 3 - Advanced Akka.NET**

Each module contains the following structure (using **Unit 1** as an example:)

````
src\Unit1\README.MD - table of contents and instructions for the module
src\Unit1\DoThis\ - contains the .SLN and project files that you will use through all lessons
-- lesson 1
src\Unit1\Lesson1\README.MD - README explaining lesson1
src\Unit1\Lesson1\DoThis\ - C# classes, etc...
src\Unit1\Lesson1\Completed\ - ""Expected"" output after completing lesson
-- repeat for all lessons
````

Start with the first lesson in each unit and follow the links through their README files on Github. We're going to begin with **[Unit 1, Lesson 1](src/Unit-1/lesson1/README.md)**.

### Lesson Layout
Each Akka.NET Bootcamp lesson contains a README which explains the following:

1. The Akka.NET concepts and tools you will be applying in the lesson, along with links to any relevant documentation or examples
2. Step-by-step instructions on how to modify the .NET project inside the `Unit-[Num]/DoThis/` to match the expected output at the end of each lesson.
3. If you get stuck following the step-by-step instructions, each lesson contains its own `/Completed/` folder that shows the full source code that will produce the expected output. You can compare this against your own code and see what you need to do differently.

#### When you're doing the lessons...

A few things to bear in mind when you're following the step-by-step instructions:

1. **Don't just copy and paste the code shown in the lesson's README**. You'll retain and learn all of the built-in Akka.NET functions if you type out the code as it's shown. 
2. **You might be required to fill in some blanks during individual lessons.** Part of helping you learn Akka.NET involves leaving some parts of the exercise up to you - if you ever feel lost, always check the contents of the `/Completed` folder for that lesson.
3. **Don't be afraid to ask questions**. You can [reach the Petabridge team and other Akka.NET users in our Gitter chat](https://gitter.im/petabridge/akka-bootcamp) here.


## Docs
We will provide explanations of all key concepts throughout each lesson, but of course, you should bookmark (and feel free to use!) the [Akka.NET docs](http://getakka.net/).

## Tools / prerequisites
This course expects the following:

- You have some programming experience and familiarity with C#
- A Github account and basic knowledge of Git.
- You are using a version of Visual Studio ([it's free now!](http://www.visualstudio.com/))
  - These lessons are designed to run on Windows only due to the limitation of the WindowsForms framework.


## Enough talk, let's go!
[Let's begin!](src/Unit-1/lesson1/README.md)


## About Petabridge
![Petabridge logo](images/petabridge_logo.png)

[Petabridge](http://petabridge.com/) is a company dedicated to making it easier for .NET developers to build distributed applications.

**[Petabridge also offers Akka.NET consulting and training](http://petabridge.com/ ""Petabridge Akka.NET consulting and training"")** - so please [sign up for our mailing list](http://eepurl.com/bSlGWr)!

---
Copyright 2015-2020 Petabridge, LLC
","'actor-model', 'actors', 'akka-bootcamp', 'bootcamp', 'c-sharp', 'hocon', 'learning-akka'",2015-01-14T01:41:25Z,2024-02-29T21:35:24Z,40,35,1034,80,"('Aaronontheweb', 160), ('skotzko', 146), ('izavala', 8), ('jorgef', 5), ('FantasticFiasco', 4), ('horsdal', 3), ('qujck', 3), ('nathvi', 3), ('pettys', 2), ('OlegGavrilov', 2), ('vojte', 2), ('Ralph Willgoss', 2), ('Paul Hunt', 2), ('Arkatufus', 2), ('sakowiczm', 1), ('featuresnap', 1), ('ralphwillgoss', 1), ('RyanHauert', 1), ('skazantsev', 1), ('gitter-badger', 1), ('chaks7', 1), ('gstraube', 1), ('8', 1), ('nullpainter', 1), ('rjanisch', 1), ('skydvr', 1), ('wralph', 1), ('mausch', 1), ('levi-rocha', 1), ('kjellski', 1), ('khalidabuhakmeh', 1), ('JimmyHannon', 1), ('Iulian Margarintescu', 1), ('gskoczylas', 1), ('FortuneN', 1), ('Feday', 1), ('Feanathiel', 1), ('Doron Grinzaig', 1), ('siriak', 1), ('AaronRM', 1)",26,24,
axiomatic-systems/Bento4,"Full-featured MP4 format, MPEG DASH, HLS, CMAF SDK and tools","Bento4
=====
![CI](https://github.com/axiomatic-systems/Bento4/workflows/CI/badge.svg?branch=master)
           
Bento4 is a C++ class library and tools designed to read and write ISO-MP4 files.
This format is defined in international specifications ISO/IEC 14496-12, 14496-14 and 14496-15.
The format is a derivative of the Apple Quicktime file format, so Bento4 can be used to read and write most Quicktime files as well.

Visit [www.bento4.com](http://www.bento4.com) for details

Features
--------

A number of formats and features based on the ISO-MP4 format and related technologies are also supported, including:

 * MPEG DASH with fragmented MP4 files, as defined in ISO/IEC 23009-1
 * CMAF (Common Media Application Format) as defined in ISO/IEC 23000-19
 * MPEG Common Encryption (CENC) as specified in ISO/IEC 23001-7
 * PIFF (Protected Interoperable File Format): encrypted, fragmented MP4 format specified by Microsoft and used for encrypted HTTP Smooth Streaming.
 * Reading and writing 3GPP and iTunes-compatible metadata.
 * ISMA Encrytion and Decryption as defined in the ISMA E&A specification
 * OMA 2.0 and 2.1 DCF/PDCF Encryption and Decryption as defined in the OMA specifications.
 * ISO-MP4 files profiled as part of the 3GPP family of standards.
 * The UltraViolet (DECE) CFF (Common File Format).
 * Parsing and multiplexing of H.264 (AVC) video and AAC audio elementary streams
 * Support for multiple DRM systems that are compatible with MP4-formatted content (usually leveraging CENC Common Encryption), such as Marlin, PlayReady and Widevine.
 * Support for a wide range of codecs, including H.264 (AVC), H.265 (HEVC), AAC, AC-3, EC-3 (Dolby Digital Plus), AC-4, Dolby ATMOS, DTS, ALAC, and many more.

Design
------

The SDK is designed to be cross-platform. The code is very portable; it can be compiled with any sufficiently modern C++ compiler. The implementation does not rely on any external library. All the code necessary to compile the SDK and tools is included in the standard distribution. The standard distribution contains makefiles for unix-like operating systems, including Linux and Android, project files for Microsoft Visual Studio, and an XCode project for MacOS X and iOS. There is also support for building the library with the SCons build system.


License
-------

The library is Open Source, with a dual-license model. You can find out more about the license on the About Page.
The Developers Page contains specific information on where to obtain the source code and documentation. The Downloads Page contains the links to pre-built SDKs and tools that you can use to get started quickly.

Included Applications
---------------------

The Bento4 SDK includes several command-line applications/tools that are built using the SDK API. These include:

|app name       | description
|---------------|------------------
|mp4info	    | displays high level info about an MP4 file, including all tracks and codec details                                                              
|mp4dump	    | displays the entire atom/box structure of an MP4 file                                                                                           
|mp4edit	    | add/insert/remove/replace atom/box items of an MP4 file                                                                                         
|mp4extract	    | extracts an atom/box from an MP4 file                                                                                                           
|mp4encrypt	    | encrypts an MP4 file (multiple encryption schemes are supported)                                                                                
|mp4decrypt	    | decrypts an MP4 file (multiple encryption schemes are supported)                                                                                
|mp4dcfpackager | encrypts a media file into an OMA DCF file                                                                                                      
|mp4compact	    | converts ‘stsz’ tables into ‘stz2′ tables to create more compact MP4 files                                                                      
|mp4fragment    | creates a fragmented MP4 file from a non-fragmented one or re-fragments an already-fragmented file                                              
|mp4split	    | splits a fragmented MP4 file into discrete files                                                                                                
|mp4tag	        | show/edit MP4 metadata (iTunes-style and others)                                                                                                
|mp4mux	        | multiplexes one or more elementary streams (H264, AAC) into an MP4 file                                                                         
|mp42aac	    | extract a raw AAC elementary stream from an MP4 file                                                                                            
|mp42avc	    | extract a raw AVC/H.264 elementary stream from an MP4 file                                                                                      
|mp42hls	    | converts an MP4 file to an HLS (HTTP Live Streaming) presentation, including the generation of the segments and .m3u8 playlist.
|mp42ts	        | converts an MP4 file to an MPEG2-TS file.
|mp4-dash	    | creates an MPEG DASH output from one or more MP4 files, including encryption.                                                                   
|mp4-dash-clone	| creates a local clone of a remote or local MPEG DASH presentation, optionally encrypting the segments as they are cloned.

Building
--------

The code can be built either by using the pre-configured IDE project files (Mac OSX, iOS and Windows), or compiled/cross-compiled using the SCons build system or CMake, or compiled using Make.
Target platform specific build files and configurations are located under subdirectories Buid/Targets/xxxx where xxxx takes the form ```--```. For example, the Linux x86 target specific files are located under ```Build/Targets/x86-unknown-linux```. The XCode project files for Mac OSX are located under ```Build/Targets/universal-apple-macosx```.

### Mac OSX and iOS using XCode
Open the XCode project file Build/Targets/universal-apple-macosx/Bento4.xcodeproj and build

### Windows using Visual Studio
Open the Visual Studio solution file Build/Targets/x86-microsoft-win32-vs2010/Bento4.sln and build

### On Linux and other platforms, Using CMake
CMake can generate Makefiles, Xcode project files, or Visual Studios project files.

#### CMake/Make

	mkdir cmakebuild
	cd cmakebuild
	cmake -DCMAKE_BUILD_TYPE=Release ..
	make

#### CMake/Xcode

	mkdir cmakebuild
	cd cmakebuild
	cmake -G Xcode ..
    cmake --build . --config Release

#### CMake/Visual Studio
	mkdir cmakebuild
	cd cmakebuild
	cmake -DCMAKE_BUILD_TYPE=Release ..
    cmake --build . --config Release

#### CMake for Android NDK
    mkdir cmakebuild
    cd cmakebuild
    cmake -DCMAKE_TOOLCHAIN_FILE=$NDK/build/cmake/android.toolchain.cmake -DANDROID_ABI=$ABI -DANDROID_NATIVE_API_LEVEL=$MINSDKVERSION ..
    make

    See https://developer.android.com/ndk/guides/cmake for details on the choice of ABI and other parameters.
    
    Where $NDK is set to the directory path where you have installed the NDK, $ABI is the Android ABI (ex: arm64-v8a) and $MINSDKVERSION is the minimum SDK version (ex: 23)

### On Linux and other platforms, using SCons (deprecated)
Make sure you the the SCons build tool installed on your host machine (http://www.scons.org).
To build the Debug configuration, simply enter the command:

```scons -u```

in a terminal from any directory (either from the top level directory where you downloaded the Bento4 distribution, or from the Build/Targets/xxx subdirectory for your specific target).

To build the Release configuration, use the command:

```scons -u build_config=Release```

To cross-compile for a target other than your host architecture, specify target=xxxx as an argument to the scons build command.

Example:

```scons -u build_config=Release target=x86_64-unknown-linux```

### Using Make
From a command shell, go to your build target directory.

For Debug builds:
	```make```

For Release builds:
```make AP4_BUILD_CONFIG=Release```

## Installing Bento4 (vcpkg)

Alternatively, you can build and install Bento4 using [vcpkg](https://github.com/Microsoft/vcpkg/) dependency manager:

    git clone https://github.com/Microsoft/vcpkg.git
    cd vcpkg
    ./bootstrap-vcpkg.sh
    ./vcpkg integrate install
    ./vcpkg install bento4

The Bento4 port in vcpkg is kept up to date by Microsoft team members and community contributors. If the version is out of date, please [create an issue or pull request](https://github.com/Microsoft/vcpkg) on the vcpkg repository.

Release Notes
-------------

### 1.6.0-638
  * support multi-bitrate audio
  * new docs using MkDocs
  * add av1 files and remove deprecated option from vs2019 build
  * add AV1 support
  * better handling of USAC signaling
  * add UTF-8 support on Windows
  * fix LGTM warnings
  * account for last sample when at EOS
  * new inspector API
  * bug fixes

### 1.6.0-636
Dolby Vision encryption now properly encrypts in a NAL-unit-aware mode

### Previous releases
(no seaparate notes, please refer to commit logs)
","'aac', 'ac-3', 'ac-4', 'audio', 'av1', 'avc', 'cmaf', 'codec', 'dash', 'hevc', 'hls', 'mp4', 'streaming', 'video'",2015-01-14T22:16:41Z,2024-06-17T03:30:45Z,53,42,1912,80,"('barbibulle', 613), ('bok', 470), ('julien', 101), ('XingzhaoYun', 15), ('roticv', 8), ('dimitry-ishenko', 7), ('Nick Desaulniers', 5), ('ftyp', 3), ('rgalv-Dolby', 2), ('matmoi', 2), ('jimmymic', 2), ('dependabotbot', 2), ('xavierlaffargue', 2), ('TcT2k', 2), ('orivej', 2), ('nevyn-lookback', 2), ('gondow', 2), ('janderssonse', 2), ('haridarshan', 2), ('Gilles Boccon-Gibod', 2), ('Eric M. Johnston', 2), ('Michal Figlarowicz', 1), ('nkh-lab', 1), ('vnenad', 1), ('richardbushell', 1), ('Roberto Cano', 1), ('baconz', 1), ('vorlonofportland', 1), ('xcorail', 1), ('birme', 1), ('bvc3at', 1), ('marillat', 1), ('fred', 1), ('icemoon1987', 1), ('riba101', 1), ('saisrirammortha', 1), ('JamesXu20150314', 1), ('lfaureyt', 1), ('lgtm-migrator', 1), ('Kagami', 1), ('kuroishi', 1), ('Justin Greer', 1), ('joshbuddy', 1), ('jviney', 1), ('ivanjx', 1), ('hjmallon', 1), ('Gopi Nanthakumaar', 1), ('FrankXie05', 1), ('fadhlirahim', 1), ('enrikb', 1), ('Dmitriy Otstavnov', 1), ('thinkski', 1), ('AlecJY', 1)",32,26,
kippt/kippt-chrome,Kippt's Chrome extension,"# kippt-chrome

This is Kippt.com's official Chrome add-on. It's licensed under MIT and we accept improvements in pull-requests.

## Installation

You can load the extension from Chrome's Extension tab using *Load unpacked extension...* option once you have enabled *Developer mode*. Alternative you can install the official build from [Chrome Web Store](https://chrome.google.com/webstore/detail/pjldngiecbcfldpghnimmdelafenmbni).

## TODO

* Search for clips
* Add keyboard shortcut (e.g. cmd+shift+k)",,2012-03-15T19:55:16Z,2013-06-11T18:36:07Z,9,8,110,10,"('jorilallo', 72), ('drpancake', 14), ('ksaa', 10), ('Bertil Chapuis', 3), ('s3ththompson', 3), ('alex-stripe', 1), ('saciervo', 1), ('kracekumar', 1), ('toretto460', 1)",4,4,
sergicurtu/201617_2nB_ESO,repositori projecte 2n ESO B,"# 201617_2nB_ESO

Repositori projecte 2n ESO B fet per Sergi Curtu

per crar una pàgina web mòbil
",,2016-12-19T10:55:55Z,2017-01-23T11:15:45Z,1,1,0,2,"('sergicurtu', 23)",0,0,
hanneshoettinger/opencv-steel-darts,"Automatic scoring system for steel darts using OpenCV, a Raspberry Pi 3 Model B and two webcams.","# opencv-steel-darts
Automatic scoring system for steel darts using OpenCV, a Raspberry Pi 3 Model B and two webcams.

This software is under heavy development. It is not ready to work out of the box...(has to be cleaned up and further improved)!

Main entry point is *DartsScorer_1.py* (*DartsScorer.py* is an older version with one camera only).

Watch a demo of the setup here: https://www.youtube.com/playlist?list=PLqymqC7nbI7an1dZW1kxbPPd-v0t5l6lF

Detected darts with score mapping and a Test-GUI to play simple 501:

![Detection](Bilder/Darts_Detection_NEW.png) ![GUI](Bilder/GAME_Recognition.jpeg)

I would like to point to this project as well. Two camera system but placed at the side of the board using triangulation:
https://github.com/vassdoki/opencv-darts

We have created a Facebook Group, where we discuss our current progress and try to help each other:
https://www.facebook.com/groups/281778298914107/

### ToDo: 
* create virtualenv for easy setup process
* improve calibration routine
* improve processing performance with second camera (USB bandwidth issue?)
* clean up and restructure the code!
* integrate GUI from https://github.com/IPeter/darts-go`

## Calibration

Short description of the method: 
1. Find ellipse (green) and the segment lines (blue) 
2. create transformation matrix to transform ellipse to circle in the ellipse center 
3. use transformation matrix to map the blue lines to the circle space
4. find the intersection points of the red line and the circle 
5. use the inverse transformation matrix to transform the intersection points back to the ellipse (red dots) 
6. use the yellow dots as source points to create a transformation matrix to the known destination points (segment circle intersection of the ""perfect"" dartboard...) 


The lines are found using HoughLines and then filtered in a specific angle range (axis of ellipse).


Image Pre-processing:
```python
imCalHSV = cv2.cvtColor(image_proc_img, cv2.COLOR_BGR2HSV)
kernel = np.ones((5, 5), np.float32) / 25
blur = cv2.filter2D(imCalHSV, -1, kernel)
h, s, imCal = cv2.split(blur)

ret, thresh = cv2.threshold(imCal, 140, 255, cv2.THRESH_BINARY_INV)

# removes border wire outside the outerellipse
kernel = np.ones((5, 5), np.uint8)
thresh2 = cv2.morphologyEx(thresh, cv2.MORPH_CLOSE,kernel)
# find enclosing ellipse
Ellipse, image_proc_img = findEllipse(thresh2,image_proc_img)
```


The transformation works like that (reading from right to left):

			M=T2⋅R2⋅D⋅R1⋅T1
			
1. moves the ellipse-center to the origin
2. rotates the ellipse clockwise about the origin by angle θ, so that the major axis lines up withthe x-axis.
3. scales the y-axis up so that it's as fat in y as in x.
4. rotates counterclockwise by θ.
5. translates the ellipse-center back to where it used to be.

(https://math.stackexchange.com/questions/619037/circle-affine-transformation)

**The same procedure applies for the left camera!**

### Calibrated board

![ellipse-circle](Bilder/Dartboard_Calibration.jpg)

## Darts Detection

*insert text here (short version: To detect the dart I use the diff between images and then the goodfeaturestotrack method from opencv with some pre-and post-processing methods + score merging of both cameras).

## Important

* Dartboard sector wires need to be removed with a filter to find ellipse.
* Dartboard: text close to outer wire of double ring bad for calibration as the contours overlap with the wire with a specific camera mounting (had to remove it manually with a black pen)
* Make source and destination point selection for the found points to be sure the mapping is correct? If the camera is placed differently, other segments are detected as the source points for the transformation.

## Lighting 

To remove all shadows from the board I made a cabinet with a 360 degree surrounding LED stripe.
I will add more pictures of the construction plan or a instruction on how to build the cabinet later.

![ellipse-circle](Bilder/Lighting.jpg)

## License
GNU General Public License v3.0
","'darts', 'darts-scoring', 'opencv', 'opencv-python', 'opencv-steel-darts', 'python'",2017-05-23T10:27:18Z,2020-07-05T12:06:08Z,1,1,226,34,"('hanneshoettinger', 10)",0,0,
bloominstituteoftechnology/AB-Demo,Simple front-end A/B experiment,"# AB-Demo
Simple front-end A/B experiment - [view it live!](https://lambdaschool.github.io/AB-Demo/)
",,2018-12-02T21:40:17Z,2019-10-25T22:14:42Z,1,0,1,3,"('soycode', 8)",0,0,
avast/android-butterknife-zelezny,Android Studio plug-in for generating ButterKnife injections from selected layout XML.,"# ButterKnifeZelezny

Simple plug-in for Android Studio/IDEA that allows one-click creation of [Butterknife](https://github.com/JakeWharton/butterknife) view injections.

## How to install

- in Android Studio: go to `Preferences → Plugins → Browse repositories` and search for `ButterKnife Zelezny`

_or_

- [download it](http://plugins.jetbrains.com/plugin/7369) and install via `Preferences → Plugins → Install plugin from disk`


## How to use it

 ![](img/zelezny_animated.gif)

 1. Make sure you have latest [Butterknife](https://github.com/JakeWharton/butterknife) lib on your classpath
 2. Right click on usage of desired layout reference (e.g. R.layout.main in your Activity or Fragment), then `Generate` and `Generate ButterKnife Injections`
 3. Pick injections you want, you also have an option to create ViewHolder for adapters.
 4. Click `Confirm` and enjoy injections in your code with no work!


## Contributing

Pull requests are welcomed!

- make sure you stick to [our coding style](/code-formatting-config.xml).
- follow [Getting Started with Plugin Development](http://confluence.jetbrains.com/display/IDEADEV/Getting+Started+with+Plugin+Development)
- make sure you have Java 6 installed if you want to publish it in the plugin repository

## Common issue: The plugin is not working after I updated to new Android Studio
- AS promts you to update plugins after update, you need to update them before using
- Make sure you have Butterknife on your classpath
- Make sure that your cursor is placed on a layout ID in a class having one of these types: Activity, Fragment, custom View or Adapter 

## Why 'Zelezny'?



[Jan Železný](http://en.wikipedia.org/wiki/Jan_%C5%BDelezn%C3%BD) is a famous Czech javelin thrower, Olympic champion and world record holder. With Zelezny's javelin, your butter knife will be much sharper!

See [**our other Czech personalities**](http://inmite.github.io) who help with [#AndroidDev](https://plus.google.com/s/%23AndroidDev).
",,2013-12-23T14:24:08Z,2018-02-26T08:49:44Z,12,6,3386,159,"('TomasKypta', 26), ('davidvavra', 22), ('makovkastar', 8), ('David Vavra', 6), ('NikolaDespotoski', 5), ('carnero', 5), ('siempredelao', 3), ('David Vávra', 3), ('Andy Barber', 2), ('David Vávra', 2), ('egor-n', 1), ('Vitali V', 1)",2,1,
android-cjj/BeautifulRefreshLayout,A bueautiful RefreshLayout," BeautifulRefreshLayout
=========================================

[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-BeautifulRefreshLayout-brightgreen.svg?style=flat)](http://www.android-arsenal.com/details/1/2488)
GitHub小伙伴交流群'' 477826523,很难进的哦！

众多优秀的下拉刷新（除了我写的之外T_T）
-----------------------------------------------------------------------------------------------------------------------------
说起下拉刷新，好像经历一段历史的洗礼。。。

(1)在我刚学android的时候，用的是XListView,在github上搜索有[MarkMjw/PullToRefresh](https://github.com/MarkMjw/PullToRefresh),根据Maxwin的XListView改造而来，完善下拉刷新上拉加载更多的功能并实现自动刷新以及自动加载等功能， 并增加对ScrollView的支持。 原XListView参考链接：https://github.com/Maxwin-z/XListView-Android(听说原作者停止维护了)
![](https://camo.githubusercontent.com/d5987bf40a04dc9894fb0ea814515088b8afd7d6/68747470733a2f2f7261772e6769746875622e636f6d2f4d61726b4d6a772f50756c6c546f526566726573682f6d61737465722f53637265656e73686f74732f312e706e67)

(2)然后又学了[chrisbanes/Android-PullToRefresh](https://github.com/chrisbanes/Android-PullToRefresh)的那个库，这个库牛逼到要死，支持ListView、ExpandableListView、GridView、WebView、ScrollView、HorizontalScrollView、ViewPager、ListFragment、、、

![](https://github.com/chrisbanes/Android-PullToRefresh/raw/master/header_graphic.png)

自己也侮辱了这个库，改的乱七八糟[https://github.com/android-cjj/ComicReader/tree/master/YinHunPulltoRefreshLibrary](https://github.com/android-cjj/ComicReader/tree/master/YinHunPulltoRefreshLibrary)，增加了支持瀑布流刷新的功能和下拉动画效果的。。。。

![](https://camo.githubusercontent.com/1b016544f28f6abe5775f9b8fdde4ece8c874263/687474703a2f2f7777772e61706b6275732e636f6d2f646174612f6174746163686d656e742f666f72756d2f3230313530342f31342f3039313630366570766f63636e6e38376f67387a38742e706e67)

（3）那时候看了知乎的客户端，下拉刷新很炫，查了下是用什么实现的，最终知道是用[chrisbanes/ActionBar-PullToRefresh](https://github.com/chrisbanes/ActionBar-PullToRefresh)的库可以实现那种效果，又去学了，啊哈哈，然而过些日子也没见人用了，啊哈哈哈

![](https://github.com/chrisbanes/ActionBar-PullToRefresh/raw/master/header.png)

(4)这时候google也有自己的下拉控件SwipeRefreshLayout，刚出来的效果，一条加载直线，个人觉得，一般到要死。[stormzhang/SwipeRefreshLayoutDemo](https://github.com/stormzhang/SwipeRefreshLayoutDemo)写了demo。

![](https://camo.githubusercontent.com/9c0181efd67b9b7f080a1526311eba64485539c2/687474703a2f2f73746f726d7a68616e672e6769746875622e696f2f696d6167652f5377697065526566726573684c61796f75742e676966)

android 5.0之后效果是个加载圆圈,还可以接受了，现在很多应用都用这个

![](https://camo.githubusercontent.com/736dc88d160cc23793bc8193bbbe7b9009d5501e/687474703a2f2f7777332e73696e61696d672e636e2f626d6964646c652f3564343330393737677731656c6b357237736b73756732306234306a726232392e676966)

(5)这时又看到了[baoyongzhang/android-PullRefreshLayout](https://github.com/baoyongzhang/android-PullRefreshLayout),This component like SwipeRefreshLayout, it is more beautiful than SwipeRefreshLayout.就是比google的跟漂亮。呵呵!

![](https://raw.githubusercontent.com/baoyongzhang/android-PullRefreshLayout/master/demo.gif)

(6)同时，这里也要提下[liaohuqiu/android-Ultra-Pull-To-Refresh](https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh),已经强大到什么控件都能适用刷新了，相信你也听过了

![](https://camo.githubusercontent.com/88cdf877aa0a1fb19506ecf3404447eba59e68cc/687474703a2f2f737261696e2d6769746875622e71696e6975646e2e636f6d2f756c7472612d7074722f6175746f2d726566726573682e676966)

(7)看过最有创意的下拉刷新[FlyRefresh](https://github.com/race604/FlyRefresh)，一只飞机飞啊飞，然而并没有什么卵用.....

![](https://github.com/race604/FlyRefresh/blob/master/images/flyrefresh.gif)

(8)material设计已经深入到开发者的心里，然后 我看到了A pull-down-to-refresh layout inspired by Lollipop overscrolled effects
[allan1st/JellyRefreshLayout](https://github.com/allan1st/JellyRefreshLayout),我这个也是看人家的代码实现的，十分感谢，啊哈哈

![](https://github.com/allan1st/JellyRefreshLayout/blob/master/images/preview.gif)

(9)最近看的下拉刷新也是挺奇怪的，就比如[recruit-lifestyle/BeerSwipeRefresh](https://github.com/recruit-lifestyle/BeerSwipeRefresh)啤酒下拉刷新和[recruit-lifestyle/WaveSwipeRefreshLayout](https://github.com/recruit-lifestyle/WaveSwipeRefreshLayout)水滴下拉刷新...

![](https://github.com/recruit-lifestyle/BeerSwipeRefresh/blob/master/sc/animation_beer.gif)
![](https://github.com/recruit-lifestyle/WaveSwipeRefreshLayout/blob/master/sc/animation.gif)

(10)这个是网友推荐的[SuperSwipeRefreshLayout](https://github.com/nuptboyzhb/SuperSwipeRefreshLayout),顾名思义，是扩展自SwipeRefreshLayout。
![](https://github.com/nuptboyzhb/SuperSwipeRefreshLayout/raw/master/demo.gif)

(11)这个是Yalantis公司开发的下拉刷新，其中它的很多东西动画这块，做的非常漂亮[Yalantis/Phoenix](https://github.com/Yalantis/Phoenix)
![](https://camo.githubusercontent.com/d406ac5a03a2b1fa5cf41fadc8d2408cb8709bdc/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3132353035362f73637265656e73686f74732f313635303331372f7265616c6573746174652d70756c6c5f312d322d332e676966)

[Taurus](https://github.com/Yalantis/Taurus)又是飞机飞啊飞...
![](https://camo.githubusercontent.com/3a24e22eb3f8338573dba0701c089c12f6b70f11/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3132353035362f73637265656e73686f74732f313632333133312f746f7572732d70756c6c2d616972706c616e655f322d322d332e676966)

(12)[tuesda/CircleRefreshLayout](https://github.com/tuesda/CircleRefreshLayout)的下拉刷新，动画做的很不错，设计图来源[https://dribbble.com/shots/1797373-Pull-Down-To-Refresh](https://dribbble.com/shots/1797373-Pull-Down-To-Refresh)

![](https://github.com/tuesda/CircleRefreshLayout/blob/master/gif/circlerefresh.gif)

(13)[BeautifulRefreshLayoutForFood](https://github.com/android-cjj/BeautifulRefreshLayout/tree/BeautifulRefreshForFood)

看到一个很漂亮的美食下拉刷新[（来源地址）](https://dribbble.com/shots/2096383-Pull-To-Refresh-V2?list=users&offset=1) ，可惜技术水平菜菜的，只能模仿一下下，啊哈哈。。。[源码下载地址download](https://github.com/android-cjj/BeautifulRefreshLayout/tree/BeautifulRefreshForFood)

![](http://www.apkbus.com/data/attachment/forum/201508/06/101826dztai4gnnfmgmuql.gif)

(14)[BeautifulRefreshLayoutForNaruto](https://github.com/android-cjj/BeautifulRefreshLayout/tree/BeautifulRefreshForNaruto)

闲着蛋疼，写了个血轮眼下拉刷新的，虽然火影漫画完结了，但是动画还在继续，真的是挂漫天飞。。。。[(源码下载地址download)](https://github.com/android-cjj/BeautifulRefreshLayout/tree/BeautifulRefreshForNaruto)

![](http://www.apkbus.com/data/attachment/forum/201508/21/155921wqhrrbufrj6ghhet.gif)

(15)[bingoogolapple/BGARefreshLayout-Android](https://github.com/bingoogolapple/BGARefreshLayout-Android)多种下拉刷新效果、上拉加载更多、可配置自定义头部广告位...

![](https://camo.githubusercontent.com/f609f7944250a6607e5fdec8b12b3156df569cd7/687474703a2f2f37786b39646a2e636f6d312e7a302e676c622e636c6f7564646e2e636f6d2f726566726573686c61796f75742f73637265656e73686f74732f726566726573686c61796f7574312e676966)


 (16)[BeautifulRefreshLayoutForGirl](https://github.com/android-cjj/BeautifulRefreshLayout/tree/BeautifulRefreshForGirl)

这是一个小清新的下拉刷新，纯代码绘制，无需任何图片，Recyclerview中item展示的妹子图来自[http://gank.io/](http://gank.io/)

设计图来源，当然我实现的效果做了一些修改，希望你喜欢，呵呵。。。[源码下载地址download](https://github.com/android-cjj/BeautifulRefreshLayout/tree/BeautifulRefreshForGirl)
[pull to refresh by Michael Lanning](https://dribbble.com/shots/1936194-Pull-To-Refresh)
截图
-------------------------------------------------------------------------------------------------------
![](http://ww3.sinaimg.cn/mw690/7ef01fcagw1f2dmpn54zjg20be0i2u0x.gif)

(17)[BeautifulRefreshLayoutForRain](https://github.com/android-cjj/BeautifulRefreshLayout)

这是一个下雨刷新，你没听错，确实一刷新就下雨，为什么会出现，只是我的好奇心而做的东西，见怪不怪了，呵呵。。。

![](http://www.apkbus.com/data/attachment/forum/201509/01/140049ia4d2w588wkvnkkl.gif)

(18)[Android-MaterialRefreshLayout](https://github.com/android-cjj/Android-MaterialRefreshLayout)是我最近写的, it is more beautiful and powerful than SwipeRefreshLayout ,  下拉刷新拥有侵入式，非侵入式，覆盖式，非覆盖式，自动刷新，上拉加载更多,自动加载等功能......

![](https://raw.githubusercontent.com/android-cjj/Android-MaterialRefreshLayout/master/gif/cjj1.gif)

（19）[WaveRefreshForAndroid](https://github.com/alienjun/WaveRefreshForAndroid)这个是基于[Android-PullToRefresh](https://github.com/chrisbanes/Android-PullToRefresh)修改的而成的水波纹下拉刷新...可能作者主攻ios,所以ios的效果看起来好看点[WaveRefresh](https://github.com/alienjun/WaveRefresh)...

![](https://github.com/alienjun/WaveRefreshForAndroid/raw/master/Sceenshots/screenshot2.gif)

(20)[WaterDropListView](https://github.com/THEONE10211024/WaterDropListView)如果你用过ios的qq,那应该很熟悉这种刷新了，效果还是蛮不错的，就是不知道为什么android版本的qq不用，呵呵。。。

![](https://github.com/THEONE10211024/WaterDropListView/blob/master/demo/demo.gif)

(21)[SwipeRefreshRecyclerView](https://github.com/liangzhitao/SwipeRefreshRecyclerView)
一个展示 RecyclerView 下拉刷新和上拉加载更多的 Demo
完全使用原生控件实现非侵入式的下拉刷新和加载更多。
同时也是 Ailurus 练习 RxJava 的小例子。
使用HeaderViewRecyclerAdapter完成了加载更多的进度展示

![](https://github.com/liangzhitao/SwipeRefreshRecyclerView/raw/master/RefreshRecyclerView.gif)

(22)阿拉灯神灯写的两个下拉库[AutoHomeRefreshListView](https://github.com/nugongshou110/AutoHomeRefreshListView)仿汽车之家下拉刷新和[MeiTuanRefreshListView](https://github.com/nugongshou110/MeiTuanRefreshListView)仿美团下拉刷新。。。

![](https://camo.githubusercontent.com/21127410f6f8231ed424ebaf76ea3d20c6a4f7d9/687474703a2f2f696d672e626c6f672e6373646e2e6e65742f3230313531313031313435373033323730)
![](https://camo.githubusercontent.com/568acac94970a1b71140832d377a3dd4912ebf9c/687474703a2f2f696d672e626c6f672e6373646e2e6e65742f3230313531303330323234313334353736)

（23）[XRecyclerView](https://github.com/jianghejie/XRecyclerView)a RecyclerView that implements pullrefresh and loadingmore featrues.you can use it like a standard RecyclerView

![](http://ww1.sinaimg.cn/bmiddle/a19d4f8dgw1eygq566u33g20ak0irhdu.gif)

(24)[ChromeLikeSwipeLayout](https://github.com/ashqal/ChromeLikeSwipeLayout)这个效果蛮赞的，细节做的很好。。。。Pull down, and execute more action!

![](https://raw.githubusercontent.com/ashqal/ChromeLikeSwipeLayout/master/screenshot/DemoPreview.gif)

(25)下拉玩消格子游戏[HitBlockRefresh](https://github.com/Hitomis/HitBlockRefresh), 一边下拉刷新，一边打砖块.

![](https://raw.githubusercontent.com/Hitomis/HitBlockRefresh/master/preview/HitBlock.gif)

* 温馨提示：如需RecyclerView加载更多，请参考：[https://github.com/android-cjj/Android-RecyclerViewWithFooter](https://github.com/android-cjj/Android-RecyclerViewWithFooter)





写在最后
=================================================================================
这个仓库我会一直维护，有时间也会写一些比较有意思的下拉刷新，只是技术有限，不要吐槽给建议就好，呵呵。。。同时，也希望你们能介绍一些比较好的下拉刷新的库给我，让更多人知道有这个东西，大家一起交流学习，一起进步。欢迎随时关注，记得star哦，呵呵！
If you want to support me,you can follow me on Github:
[https://github.com/android-cjj](https://github.com/android-cjj).

随意说说
-----------------------------
刚建了个[github小伙伴交流群](http://t.cn/RyiVjnv)(477826523),有兴趣的朋友可以加进来的...小小要求：github有至少7个关注者或者开源库有7颗星星的...

      ****************************转载请注明出处,不然我咬你哦！************************

[about me](http://android-cjj.github.io/)
------------------------------------

License
=======

    The MIT License (MIT)

	Copyright (c) 2015 android-cjj

	Permission is hereby granted, free of charge, to any person obtaining a copy
	of this software and associated documentation files (the ""Software""), to deal
	in the Software without restriction, including without limitation the rights
	to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
	copies of the Software, and to permit persons to whom the Software is
	furnished to do so, subject to the following conditions:

	The above copyright notice and this permission notice shall be included in all
	copies or substantial portions of the Software.

	THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
	IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
	FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
	AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
	LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
	SOFTWARE.









",,2015-08-05T10:02:40Z,2016-03-29T04:40:42Z,2,2,2157,124,"('android-cjj', 76), ('nukc', 3)",0,0,
PIA-Group/BioSPPy,Biosignal Processing in Python,"> This repository is archived. The BioSPPy toolbox is now maintained at [scientisst/BioSPPy](https://github.com/scientisst/BioSPPy).

# BioSPPy - Biosignal Processing in Python

*A toolbox for biosignal processing written in Python.*

[![Image](https://github.com/PIA-Group/BioSPPy/raw/master/docs/logo/logo_400.png ""I know you're listening! - xkcd.com/525"")](http://biosppy.readthedocs.org/)

The toolbox bundles together various signal processing and pattern recognition
methods geared towards the analysis of biosignals.

Highlights:

- Support for various biosignals: BVP, ECG, EDA, EEG, EMG, PCG, PPG, Respiration
- Signal analysis primitives: filtering, frequency analysis
- Clustering
- Biometrics

Documentation can be found at: 

## Installation

Installation can be easily done with `pip`:

```bash
$ pip install biosppy
```

## Simple Example

The code below loads an ECG signal from the `examples` folder, filters it,
performs R-peak detection, and computes the instantaneous heart rate.

```python
from biosppy import storage
from biosppy.signals import ecg

# load raw ECG signal
signal, mdata = storage.load_txt('./examples/ecg.txt')

# process it and plot
out = ecg.ecg(signal=signal, sampling_rate=1000., show=True)
```

This should produce a plot similar to the one below.

[![Image](https://github.com/PIA-Group/BioSPPy/raw/master/docs/images/ECG_summary.png ""ECG Summary Plot"")]()

## Dependencies

- bidict
- h5py
- matplotlib
- numpy
- scikit-learn
- scipy
- shortuuid
- six
- joblib

## Citing
Please use the following if you need to cite BioSPPy:

- Carreiras C, Alves AP, Lourenço A, Canento F, Silva H, Fred A, *et al.*
  **BioSPPy - Biosignal Processing in Python**, 2015-,
  https://github.com/PIA-Group/BioSPPy/ [Online; accessed ```--```].

```latex
@Misc{,
  author = {Carlos Carreiras and Ana Priscila Alves and Andr\'{e} Louren\c{c}o and Filipe Canento and Hugo Silva and Ana Fred and others},
  title = {{BioSPPy}: Biosignal Processing in {Python}},
  year = {2015--},
  url = ""https://github.com/PIA-Group/BioSPPy/"",
  note = {[Online; accessed ]}
}
```

## License

BioSPPy is released under the BSD 3-clause license. See LICENSE for more details.

## Disclaimer

This program is distributed in the hope it will be useful and provided
to you ""as is"", but WITHOUT ANY WARRANTY, without even the implied
warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. This
program is NOT intended for medical diagnosis. We expressly disclaim any
liability whatsoever for any direct, indirect, consequential, incidental
or special damages, including, without limitation, lost revenues, lost
profits, losses resulting from business interruption or loss of data,
regardless of the form of action or legal theory under which the
liability may be asserted, even if advised of the possibility of such
damages.
","'biosignals', 'data-science', 'physiological-computing', 'python', 'signal-processing'",2015-07-24T16:57:31Z,2022-08-02T13:35:18Z,23,19,566,34,"('capcarr', 93), ('afonsocraposo', 51), ('Carlos Carreiras', 41), ('afonsof3rreira', 14), ('EXT Cathelain', 5), ('Sreedev S', 5), ('TiagoTostas', 4), ('DominiqueMakowski', 4), ('pedr0sorio', 2), ('mspinelli', 2), ('sofia3ms', 1), ('herrkaefer', 1), ('dependabotbot', 1), ('cordeirojoao', 1), ('rafaelscsilva', 1), ('Michael Gschwandtner', 1), ('Michaelgathara', 1), ('tostasmistas', 1), ('LeafarCoder', 1), ('jj1118', 1), ('hugoslv', 1), ('ball-hayden', 1), ('Alexxor36', 1)",13,12,
hubotio/hubot-redis-brain,A hubot script to persist hubot's brain using redis,"![Build Status](https://github.com/hubotio/hubot-redis-brain/actions/workflows/pipeline.yml/badge.svg)

![E2E Tests](https://github.com/hubotio/hubot-redis-brain/actions/workflows/e2e.yml/badge.svg)

# hubot-redis-brain

A hubot script to persist hubot's brain using redis

See [`src/RedisBrain.js`](src/RedisBrain.js) for full documentation.

## Installation

In hubot project repo, run:

`npm install hubot-redis-brain --save`

Then add **hubot-redis-brain** to your `external-scripts.json`:

```json
[
  ""hubot-redis-brain""
]
```

## Configuration

hubot-redis-brain requires a redis server to work. It uses the `REDIS_URL` environment variable for determining
where to connect to. The default is on localhost, port 6379 (ie the redis default).

The following attributes can be set using the `REDIS_URL`

* authentication
* hostname
* port
* key prefix

For example, `export REDIS_URL=redis://:password@192.168.0.1:16379/prefix` would
authenticate with `password`, connecting to `192.168.0.1` on port `16379`, and store
data using the `prefix:storage` key.

For a UNIX domain socket, `export REDIS_URL=redis://:password@/var/run/redis.sock?prefix` would authenticate with `password`, connecting to `/var/run/redis.sock`, and store data using the `prefix:storage` key.

### Installing your own

If you need to install and
run your own, most package managers have a package for redis:

* Mac OS X with homebrew: `brew install redis`
* Ubuntu/Debian with apt: `apt-get install redis-server`
* Compile from source: http://redis.io/topics/quickstart

### Boxen

If you are using [boxen](https://boxen.github.com/) to manage your environment,
hubot-redis-brain will automatically use the boxen-managed redis (ie by using `BOXEN_REDIS_URL`).

### Heroku

If you are deploying on [Heroku](https://www.heroku.com/), you can add the
Redis Cloud or Redis To Go addon to have automatically configure itself to use it:

* [Redis Cloud](https://addons.heroku.com/rediscloud)
* [Redis To Go](https://addons.heroku.com/redistogo)


Other redis addons would need to be configured using `REDIS_URL` until support
is added to hubot-redis-brain (or hubot-redis-brain needs to be updated to look
  for the environment variable the service uses)

### Redis Twemproxy

If you are using [Twemproxy](https://github.com/twitter/twemproxy) to cluster redis,
you need to turn off the redis ready check which uses the unsupported INFO cmd.

`REDIS_NO_CHECK = 1`
","'hubot', 'hubot-scripts'",2014-10-18T19:51:32Z,2024-03-29T17:46:47Z,15,14,67,10,"('joeyguerra', 35), ('gr2m', 17), ('espy', 14), ('mose', 9), ('technicalpickles', 8), ('ArcticSnowman', 4), ('bkeepers', 2), ('dependabotbot', 2), ('mistydemeo', 2), ('barnardb', 1), ('xurizaemon', 1), ('kylev', 1), ('100ideas', 1), ('krdlab', 1), ('paul', 1)",6,5,
cmsb2g/B2GDAS,,"B2GDAS
======


CMS Data Analysis School (CMSDAS) exercise for the
Beyond Two Generations Physics Analysis Group (B2G PAG)

To run :

`export SCRAM_ARCH=slc6_amd64_gcc530` *if using BASH*

`setenv SCRAM_ARCH slc6_amd64_gcc530` *if using TCSH*

`cmsrel CMSSW_8_0_20`

`cd CMSSW_8_0_20/src`

`git clone https://github.com/cmsb2g/B2GDAS.git Analysis/B2GDAS`

`cd Analysis/B2GDAS`

`scram b -j 10`

`cd test`

`voms-proxy-init`

`python b2gdas_fwlite.py --input=inputfiles/rsgluon_ttbar_2TeV.txt --output=rsgluon_ttbar_2TeV.root --maxevents 10000 --trigProc=HLT2`
",,2014-12-12T17:43:50Z,2020-01-14T17:20:50Z,10,8,2,8,"('drberry85', 64), ('rappoccio', 48), ('Thomas', 23), ('jmhogan', 21), ('FredStober', 5), ('broozbah', 5), ('Thomas Peiffer', 3), ('justinrpilot', 3), ('jdolen', 2), ('cmsb2g', 1)",1,1,
JokerKangJun/Javascript201702,2017年第2期B模块讲义,"# Javascript201702
2017年第2期B模块讲义
",,2017-03-14T07:21:53Z,2017-04-05T08:44:30Z,5,4,0,0,"('Brolly0204', 45), ('JokerKangJun', 23), ('zhouxiaotian', 11), ('FightKang', 8), ('zhufengpeixun', 1)",1,1,
amunategui/quantmod-wallstreet,"See how easy it is to download, visualize, manipulate stock market data with the <b>Quantmod</b> library and use all of it to build a complex trading model.",,,2014-11-10T20:58:31Z,2014-11-10T21:01:00Z,1,1,25,12,"('amunategui', 1)",1,1,
kong36088/BaiduImageSpider,一个超级轻量的百度图片爬虫,"# BaiduImageSpider
百度图片爬虫，基于python3

个人学习开发用

单线程爬取百度图片。

# 爬虫工具 Required

**需要安装python版本 >= 3.6**

# 使用方法
```
$ python crawling.py -h
usage: crawling.py [-h] -w WORD -tp TOTAL_PAGE -sp START_PAGE
                   [-pp [{10,20,30,40,50,60,70,80,90,100}]] [-d DELAY]

optional arguments:
  -h, --help            show this help message and exit
  -w WORD, --word WORD  抓取关键词
  -tp TOTAL_PAGE, --total_page TOTAL_PAGE
                        需要抓取的总页数
  -sp START_PAGE, --start_page START_PAGE
                        起始页数
  -pp [{10,20,30,40,50,60,70,80,90,100}], --per_page [{10,20,30,40,50,60,70,80,90,100}]
                        每页大小
  -d DELAY, --delay DELAY
                        抓取延时（间隔）
```

开始爬取图片
```
python crawling.py --word ""美女"" --total_page 10 --start_page 1 --per_page 30
```


另外也可以在`crawling.py`最后一行修改编辑查找关键字
图片默认保存在项目路径
运行爬虫：
``` python
python crawling.py
```

# 博客

[爬虫总结](http://www.jwlchina.cn/2016/02/06/python%E7%99%BE%E5%BA%A6%E5%9B%BE%E7%89%87%E7%88%AC%E8%99%AB/)

效果图：
![效果图](http://blog-image.jwlchina.cn/kong36088/kong36088.github.io/master/uploads/python%E5%9B%BE%E7%89%87%E7%88%AC%E8%99%AB%E6%88%AA%E5%9B%BE.png)

# 捐赠

您的支持是对我的最大鼓励！
谢谢你请我吃糖
![wechatpay](http://blog-image.jwlchina.cn/kong36088/kong36088.github.io/master/uploads/site/wechat-pay.png)
![alipay](http://blog-image.jwlchina.cn/kong36088/kong36088.github.io/master/uploads/site/zhifubao.jpg)

","'baidu', 'crawler', 'python3', 'spider'",2016-02-06T15:54:08Z,2023-05-29T09:24:08Z,3,2,850,24,"('kong36088', 38), ('wellsjiang', 6), ('QuantumLiu', 1)",1,1,
vitorfs/bootcamp,An enterprise social network,"Bootcamp
========

An enterprise oriented social network

.. image:: https://travis-ci.org/vitorfs/bootcamp.svg?branch=master
    :target: https://travis-ci.org/vitorfs/bootcamp
    :alt: TravisCI Status

.. image:: https://coveralls.io/repos/github/vitorfs/bootcamp/badge.svg?branch=master
    :target: https://coveralls.io/github/vitorfs/bootcamp?branch=master
    :alt: Coverage

.. image:: https://requires.io/github/vitorfs/bootcamp/requirements.svg?branch=master
    :target: https://requires.io/github/vitorfs/bootcamp/requirements/?branch=master
    :alt: Requirements

.. image:: https://img.shields.io/badge/built%20with-Cookiecutter%20Django-ff69b4.svg
    :target: https://github.com/pydanny/cookiecutter-django/
    :alt: Built with Cookiecutter Django

:License: MIT

Bootcamp is an open source **enterprise social network** of open purpose, on which you can build for your own ends.

The project has four basic apps:

* News (A Twitter-like microblog)
* Articles (A collaborative blog)
* Question & Answers (A Stack Overflow-like platform)
* Messenger (A basic chat-a-like tool for asynchronous communication.)

Technology Stack
----------------

* Python_ 3.6.x / 3.7.x
* `Django Web Framework`_ 2.2.x
* PostgreSQL_
* `Redis 5.0`_
* Daphne_
* Caddy_
* Docker_
* docker-compose_
* WhiteNoise_
* `Twitter Bootstrap 4`_
* `jQuery 3`_
* Django-channels_ (for WebSockets)
* Sentry_
* Mailgun_
* Cookiecutter_

.. _Python: https://www.python.org/
.. _`Django Web Framework`: https://www.djangoproject.com/
.. _PostgreSQL: https://www.postgresql.org/
.. _`Redis 5.0`: https://redis.io/documentation
.. _Daphne: https://github.com/django/daphne/
.. _Caddy: https://caddyserver.com/docs
.. _Docker: https://docs.docker.com/
.. _docker-compose: https://docs.docker.com/compose/
.. _WhiteNoise: http://whitenoise.evans.io/en/stable/
.. _`Twitter Bootstrap 4`: https://getbootstrap.com/docs/4.0/getting-started/introduction/
.. _`jQuery 3`: https://api.jquery.com/
.. _Django-channels: https://channels.readthedocs.io/en/latest/
.. _Sentry: https://docs.sentry.io/
.. _Mailgun: https://www.mailgun.com/
.. _Cookiecutter: http://cookiecutter-django.readthedocs.io/en/latest/index.html

Basic Commands
--------------

Test coverage
^^^^^^^^^^^^^

To run the tests, check your test coverage, and generate a simplified coverage report::

    $ pytest

To generate an HTML report::

    $ coverage html
    $ open htmlcov/index.html

To check the report in console::

    $ coverage report -m

Sentry
^^^^^^

Sentry is an error logging aggregator service. You can `sign up`_ for a free account  or download and host it yourself.
The system is setup with reasonable defaults, including 404 logging and integration with the WSGI application.

.. _`sign up`: https://sentry.io/signup/?code=cookiecutter

You must set the DSN url in production.


Deployment
----------

The following details how to deploy this application.


Heroku
^^^^^^

See detailed `cookiecutter-django Heroku documentation`_.

.. _`cookiecutter-django Heroku documentation`: http://cookiecutter-django.readthedocs.io/en/latest/deployment-on-heroku.html


Docker
^^^^^^

See detailed `cookiecutter-django Docker documentation`_.

.. _`cookiecutter-django Docker documentation`: http://cookiecutter-django.readthedocs.io/en/latest/deployment-with-docker.html
","'django', 'python', 'social-network'",2014-05-27T19:30:57Z,2023-10-01T14:56:30Z,30,23,2258,144,"('sebastian-code', 1682), ('vitorfs', 194), ('SurajKamble', 12), ('chetanya-shrimali', 10), ('WUJISHANXIA', 10), ('ralphite', 8), ('igr-santos', 6), ('DylanGuedes', 5), ('KatherineMichel', 5), ('Agricultures', 4), ('fabianogoes', 4), ('Roger Lee', 4), ('arpit1997', 4), ('vamoss', 4), ('paulovictor', 3), ('Alexander Zveruk', 2), ('Matej Bobrik', 2), ('NazarTkachuk', 2), ('shabinesh', 2), ('Thalmann', 2), ('mwanjajoel', 2), ('yashLadha', 2), ('Dmitri-Sintsov', 1), ('oma0256', 1), ('Rafael Masoni', 1), ('Vamoss', 1), ('leonh', 1), ('lomatus', 1), ('mkljczk', 1), ('mirza musharaf baig', 1)",8,5,
bootstrap-tagsinput/bootstrap-tagsinput,jQuery tags input plugin based on Twitter Bootstrap.,"# Bootstrap Tags Input [![Build Status](https://travis-ci.org/bootstrap-tagsinput/bootstrap-tagsinput.svg?branch=master)](https://travis-ci.org/bootstrap-tagsinput/bootstrap-tagsinput)
Bootstrap Tags Input is a jQuery plugin providing a Twitter Bootstrap user interface for managing tags.

Current stable version: **v0.8.0**

## Usage
Examples can be found [here](http://bootstrap-tagsinput.github.io/bootstrap-tagsinput/examples/).

## Features
* Objects as tags
* True multi value
* Typeahead
* Designed for Bootstrap 2.3.2 and 3

### Objects as tags
Not just support for using strings! This means you can use different values
for a tag's label and value. Each tag also holds a reference to the object
by which it was created, so by calling tagsinput('items') an
array of the original items is returned.

### True multi value support
Other implementations just concatenate the values to a comma separated string.
This results in val() returning just this string, and when
submitting the form, only one big, concatenated value is sent in the request.

Bootstrap Tags Input provides true multivalue support. Just use a
&lt;select multiple /&gt; as your input element, and
val() will return an array of the tag values. When submitting the
form, an array of values will be sent with the request.

### Typeahead support
Integrates with Twitter Bootstraps' 2.3.2 typeahead, or use custom typeahead when using Bootstrap 3.

## Development
Install dependencies:

npm install
grunt install

Test:

grunt test

Build:

grunt build

Current Library Versions:

- Bootstrap: 3.3.5
- jQuery: 2.1.4
- Typeahead: 0.11.1

Libraries for testing go in the **/lib** directory.

## History
- 0.8.0
  - [Add possibility skip ""change"" event after ""add"", ""remove"", ""removeAll""](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/429)
  - [Please add version to header of non-minified version.](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/438)
- 0.7.1
  - [allowDuplicates not working](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/419)
  - [tag text appears when typeahead input looses focus](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/386)
  - [Remove duplicate method `removeAll` in manual](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/427)
- 0.7.0
  - [.tt-menu etc. styles should be included in bootstrap-tagsinput.css by default](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/426)
  - [Comma character carried over to new tag input when used as separator](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/422)
  - [Emails in multi select are being duplicated](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/399)
  - [The 'itemAdded' Event run on Load the Page!](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/369)
- 0.6.1
  - [Source maps fix](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/371)
- 0.6.0
  - [Allow form submissions when pressing enter if field is empty. Controlled by option](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/368)
  - [Ability to set different or multiple delimiters](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/397)
  - [No longer triggering itemRemoved when the field is already empty](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/405)
- 0.5
  - [Added an optional 3rd parameter to the ""add"" and ""remove"" methods](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/298)
- 0.4
  - [Fix typeahead when using Bootstrap 3](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/73)
- 0.3.13
  -  [#5: Trigger events on original input/select](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/5)
  -  Loads of fixes merged with help of @janvt, @rlidwka and @kuraga: thanks for helping me out!
- 0.3.9
  -  [#48: Type ahead stops when entering second character](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/48)
- 0.3.8
  -  [#43: Add support for placeholder](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/43)
  -  [#46: ie 8 compatibility, replace indexOf method](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/46)
- 0.3.7
  -  [#39: flash when duplicate is entered](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/39)
- 0.3.6
  -  [#34: Error in ReloadPage](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/34)
- 0.3.5
  -  [#10: confirmKeys option](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/issues/10)
- 0.3.4
  -  [#24: Add bsTagsInput angular directive & example for bootstrap3 with typeahea...](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/24)
  -  [#28: Limit number of tags, enable/disable input](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/28)
  -  [#33: Avoid conflict with other selects when checking for value presence](https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/pull/33)

## License
This project is licensed under [MIT](https://raw.github.com/bootstrap-tagsinput/bootstrap-tagsinput/master/LICENSE ""Read more about the MIT license"").
","'autocomplete', 'bootstrap', 'bootstrap-plugin', 'bootstrap-plugins', 'bootstrap-tags', 'bootstrap-tagsinput', 'chips', 'input', 'jquery', 'jquery-plugin', 'mit-license', 'tags'",2022-04-05T10:49:09Z,2024-01-29T13:55:01Z,3,1,54,1,"('unknown', 32), ('filipkappa', 6), ('Aditya Dhembre', 1)",1,0,
civic-data-design-lab/16_11.S947,"Materials for the Big Data, Visualization, and Society course at MIT DUSP","# 16_11.S947

## Welcome to Big Data, Visualization, and Society!

This Github site contains materials, data, and resources for lab exercises and assignments. 

Materials for the course at will be posted to this site and updated on a regular basis.

We recommend downloading a copy of the materials to your local computer each week, so you get the most up to date copy.

## Office Hours and Resources

If you need assistance or have questions, please seek one of the instructors out during office hours.

* Sarah - Monday, 3:30-5pm
* Mike - Tuesday, 2-5pm
* Carlos - Friday, 3-5pm

There are also plenty of resources available online. We encourage you to check out:

* [Stack Overflow](http://stackoverflow.com/)
* [Python 2.7 Documentation](https://docs.python.org/2.7/)

## Schedule

* Week 1 - ""Intro to Git, Anaconda, and Python""
* Week 2 - ""Python Data Structures""
* Week 3 -""Introduction to Pandas""
* Week 4 -""Data Scraping and Web APIs""
* Week 5 - ""Data Analysis and Aggregation, Exploratory Visualizations (Leaflet Maps).""
* Week 6 - ""Intro to Websites - MOCK-UP Prep""
* Week 7 - Midterm
* == Spring Break ==
* Week 9 - ""Web Visualizations - Intro to D3""
* Week 10 - ""Data Structures, Layouts""
* Week 11 - ""Geographic Visualizations""
* Week 12 - ""Data Driven Maps""
* Week 13 - ""User Interaction, Event Handlers""
* Week 14 - ""User Interaction - Review""
* Week 15 - ""Final Presentations""
",,2015-12-07T22:34:40Z,2016-07-19T17:37:14Z,4,3,13,9,"('mjfoster83', 115), ('cesandoval', 24), ('cesandoval', 13), ('sw2279', 1)",1,1,
emeryberger/COMPSCI590S,Systems for Data Science repo,"# COMPSCI590S
Systems for Data Science repo

* The `lectures` directory contains handwritten PDFs of lectures (downloaded from an iPad).
* The `scribes` directory contains scribe notes written by students.
* The `readings` directory contains some additional readings not in the course repository.
",,2016-09-13T20:22:17Z,2017-12-13T22:17:14Z,37,28,12,6,"('emeryberger', 96), ('uditsaxena', 10), ('ananyasuraj07', 9), ('SamGinzburg', 5), ('Andrew Bass', 4), ('NatchaS', 3), ('omarismail', 3), ('erp12', 3), ('mmcmahon13', 3), ('nikhilgtitus', 3), ('yelite', 3), ('arjun024', 2), ('mohit-surana', 2), ('Namrita', 2), ('ssubraveti', 2), ('Timm Allman', 2), ('zhang-yi-chi', 2), ('jayzou1', 2), ('jphegde', 2), ('pradeepambati', 2), ('lepisma', 1), ('Abhishek-17', 1), ('Aishwarya Kamath', 1), ('akuls', 1), ('Amber Madvariya', 1), ('annadeng', 1), ('arielreches', 1), ('cenwangumass', 1), ('Derek Wang', 1), ('harshith2794', 1), ('kfeveck', 1), ('wenzhaoduo', 1), ('akashmantry', 1), ('mm40138', 1), ('rohitna27', 1), ('skckompella', 1), ('yasiahrabi', 1)",17,13,
forkdelta/nextgen-ui,ForkDelta's Next Generation interface,"# ![ForkDelta logo](public/favicon-32x32.png) ForkDelta: The NextGen UI

This repository contains the next-generation UI for ForkDelta.

## Development

Please refer to [Create React App docs](docs/README.md) to get you up
and running.

## Questions and Feedback

This is a community-driven project. If you have any questions or feedback
about the interface or the code, please don't hesitate to file an issue on
this repo.

Join our Discord if you'd like to chat: https://discord.gg/mMnRq7m.

**For sensitive,** such as security concerns, please message @freeatnet on [Discord](https://discord.gg/mMnRq7m).

## License

Copyright (C) 2018, Arseniy Ivanov and ForkDelta Contributors

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published
    by the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License for more details.

    You should have received a copy of the GNU Affero General Public License
    along with this program.  If not, see .

See the full [license.](LICENSE)
",,2018-01-09T22:23:19Z,2019-02-05T04:40:20Z,4,4,20,7,"('freeatnet', 22), ('JonathonDunford', 1), ('trigunshin', 1), ('snyk-bot', 1)",3,3,
Jeiwan/blockchain_go,A simplified blockchain implementation in Golang,"# Blockchain in Go

A blockchain implementation in Go, as described in these articles:

1. [Basic Prototype](https://jeiwan.net/posts/building-blockchain-in-go-part-1/)
2. [Proof-of-Work](https://jeiwan.net/posts/building-blockchain-in-go-part-2/)
3. [Persistence and CLI](https://jeiwan.net/posts/building-blockchain-in-go-part-3/)
4. [Transactions 1](https://jeiwan.net/posts/building-blockchain-in-go-part-4/)
5. [Addresses](https://jeiwan.net/posts/building-blockchain-in-go-part-5/)
6. [Transactions 2](https://jeiwan.net/posts/building-blockchain-in-go-part-6/)
7. [Network](https://jeiwan.net/posts/building-blockchain-in-go-part-7/)
","'bitcoin', 'blockchain', 'cryptocurrency', 'golang'",2017-08-15T07:03:13Z,2023-06-14T14:08:22Z,4,4,4057,180,"('Jeiwan', 136), ('denispeplin', 1), ('bigUNO', 1), ('evaporei', 1)",3,3,
Bttstrp/bootstrap-switch,Turn checkboxes and radio buttons in toggle switches.,"# Bootstrap Switch
[![Dependency Status](https://david-dm.org/Bttstrp/bootstrap-switch.svg?style=flat)](https://david-dm.org/Bttstrp/bootstrap-switch)
[![devDependency Status](https://david-dm.org/Bttstrp/bootstrap-switch/dev-status.svg?style=flat)](https://david-dm.org/Bttstrp/bootstrap-switch#info=devDependencies)
[![NPM Version](http://img.shields.io/npm/v/bootstrap-switch.svg?style=flat)](https://www.npmjs.org/)

Turn checkboxes and radio buttons into toggle switches. Created by [Mattia Larentis](http://github.com/nostalgiaz), maintained by [Emanuele Marchi](http://github.com/lostcrew) and [Peter Stein](http://www.bdmdesign.org) with the help of the community.
Compatible with Bootstrap 4, Bootstrap 3 and Bootstrap 2.

Play with [demo on my fiddle](https://jsfiddle.net/djibe89/vL87w0j8/).

## Quick start

Several quick start options are available:

- Download the [latest release](https://github.com/Bttstrp/bootstrap-switch/releases/latest)
- Clone the repo: `git clone https://github.com/Bttstrp/bootstrap-switch.git`
- Install with npm: `npm install bootstrap-switch`
- Install with yarn: `yarn add bootstrap-switch`
- Install with Composer: `composer require components/bootstrap-switch`
- Install with Bower: `bower install bootstrap-switch`
- Install with NuGet: `PM> Install-Package Bootstrap.Switch` ([NuGet package](https://github.com/blachniet/bootstrap-switch-nuget))

Include the dependencies: jQuery, Bootstrap and Bootstrap Switch CSS + Javascript:

``` html




```

Add your checkbox:

```html

```

Initialize Bootstrap Switch on it:

```javascript
$(""[name='my-checkbox']"").bootstrapSwitch();
```

Enjoy.

## Supported browsers

IE9+ and all the other modern browsers.

## LESS

- For Bootstrap 2 (no longer officially supported), import `src/less/bootstrap2/bootstrap-switch.less`
- For Bootstrap 3, import `src/less/bootstrap3/bootstrap-switch.less`

## SASS/SCSS

- For Bootstrap 4, import `src/sass/bootstrap4/bootstrap-switch.scss`

## Bugs and feature requests

Have a bug or a feature request? Please first search for existing and closed issues. If your problem or idea is not addressed yet, [please open a new issue](https://github.com/Bttstrp/bootstrap-switch/issues/new).

The new issue should contain both a summary of the issue and the browser/OS environment in which it occurs and a link to the playground you prefer with the reduced test case.
If suitable, include the steps required to reproduce the bug.

Please do not use the issue tracker for personal support requests: [Stack Overflow](https://stackoverflow.com/questions/tagged/bootstrap-switch) is a better place to get help.

### Known issues

- Make sure `.form-control` is not applied to the input. Bootstrap does not support that, refer to [Checkboxes and radios](https://getbootstrap.com/css/#checkboxes-and-radios)

## Integrations

- Angular: [angular-bootstrap-switch](https://github.com/frapontillo/angular-bootstrap-switch)
- Angular: [angular-toggle-switch](https://github.com/JumpLink/angular-toggle-switch)
- Knockout: [knockout-bootstrap-switch](https://github.com/pauloortins/knockout-bootstrap-switch)

## License

Licensed under the [MIT License](https://github.com/Bttstrp/bootstrap-switch/blob/master/LICENSE).

","'bootstrap', 'bootstrap-switch', 'checkbox', 'radio', 'switch', 'toggle-switches', 'toggles'",2013-01-24T19:44:03Z,2021-10-05T21:37:19Z,54,38,5089,181,"('Stein, Peter', 241), ('Emanuele Marchi', 149), ('nostalgiaz', 101), ('Emanuele', 55), ('graingert', 22), ('frapontillo', 16), ('BdMdesigN', 11), ('LostCrew', 8), ('volpino', 8), ('t3chn0r', 5), ('michaek', 4), ('Marco Kerwitz', 4), ('Aimeast', 3), ('ickbinhier', 3), ('root-talis', 3), ('GrahamCampbell', 3), ('nathasm', 3), ('pauloortins', 3), ('same31', 3), ('marclaporte', 2), ('RohanSakhale', 2), ('Roel van Duijnhoven', 2), ('Pasvaz', 2), ('oniram88', 2), ('Julusian', 2), ('ceefour', 2), ('Kyrsten', 1), ('zstars', 1), ('manuelmeurer', 1), ('markmarkoh', 1), ('Matthew Spivey', 1), ('Michael Ruoss', 1), ('nwhite89', 1), ('ncardeli', 1), ('Scavenger3', 1), ('putnik', 1), ('OwlyCode', 1), ('engoyan', 1), ('mtj8033', 1), ('regepan', 1), ('jonathanbarton', 1), ('Henri-Maxime Ducoulombier', 1), ('Filips Alpe', 1), ('drewfreyling', 1), ('davidstritzl', 1), ('David Schäfer', 1), ('Craig Sullivan', 1), ('ir-carlos', 1), ('asankov', 1), ('angelxmoreno', 1), ('andrewmackrodt', 1), ('alexmcpherson', 1), ('Alaa Ali', 1), ('07jfxiao', 1)",28,19,
shpp/cs-b-assignment2,CS-B Assignment 2,"## Assignment 2: Using collection classes

##### Description: https://goo.gl/aWJbjz

##### Deadline: Friday, September 11, 2015 at 14:00.
",,2015-09-02T17:57:07Z,2015-09-21T14:07:44Z,1,1,0,8,"('amativos', 4)",0,0,
KikiLetGo/VirusBroadcast,A java virus broadcast simulation,"# VirusBroadcast
一个基于java的模拟仿真程序，由于启动的时候时间仓促，数据不足，所以模型和推演过程过于简单，如果有好的想法或者能提供相关数据支持的朋友请提issues。
如果您也是一名java程序员，可以直接修改并给我提交pr，我之前已经启动每日疫情数据的每日抓取工作，希望在疫情结束后有机会通过这些精准的的数据做一个复盘。

2020.2.6:
病毒变异过程是一个不断适应的过程，可以尝试简单的DNN对病毒进行建模，已经开始着手实施。
2020.4.2:
数据量太小，模拟结果太过不靠谱。DNN暂时搁置了。
",,2020-02-03T12:41:35Z,2022-08-25T18:47:14Z,8,7,1659,74,"('GinRyan', 23), ('KikiLetGo', 9), ('ChangingSelf', 5), ('BruceYong', 4), ('aaron-xy.wu', 3), ('DubheBroken', 2), ('Enaium', 1), ('grjohn', 1)",2,2,
async-labs/builderbook,"Open source web application to learn JS stack: React, Material-UI, Next.js, Node.js, Express.js, Mongoose, MongoDB database.","![image](https://user-images.githubusercontent.com/26158226/155850630-137ae3be-aa29-487b-a422-e8fb4db634dc.png)

Support Ukraine: [link](https://bank.gov.ua/en/news/all/natsionalniy-bank-vidkriv-spetsrahunok-dlya-zboru-koshtiv-na-potrebi-armiyi)

## Builder Book

Open source web app to self-publish and sell books or other online content. 

If you want to learn how to build this project from scratch, check out our book: https://builderbook.org. 

The open source project is located in the `builderbook` folder. If you purchased our book, codebases for each of the book's chapters are located in the `book` folder.

We've used this `builderbook` project to build:
- [Builder Book](https://builderbook.org) - learn how to build full-stack web apps from scratch
- [SaaS Boilerplate](https://github.com/async-labs/saas) - open source web app to build your own SaaS product
- [Work in biotech](https://workinbiotech.com) - job board for biotech startup companies
- [AI-cruiter](https://workinbiotech.com/ai-cruiter) - browser extension is built for recruiters managing a high volume of job applicants. AI-cruiter uses LLMs - like ChatGPT and PaLM 2 - to generate succinct and relevant summaries of your job applicants' resumes
- [Async](https://async-await.com) - open source urgent vs non-urgent team communication tool for small teams
- [Async Labs](https://async-labs.com) - many custom dev projects


## Live app:

https://builderbook.org/books/builder-book/introduction


## Sponsors

[![aws-activate-logo](https://user-images.githubusercontent.com/26158226/138565715-4311ddda-fb77-452a-8755-d53eb18f8645.png)](https://aws.amazon.com/activate/)

[![1password-logo](https://user-images.githubusercontent.com/26158226/138565841-ad435374-7330-477a-b6f3-2542109c3217.png)](https://1password.com/)


## Showcase

Check out projects built with the help of this open source app. Feel free to add your own project by creating a pull request.

- [Retaino](https://retaino.com) by [Earl Lee](https://github.com/earllee): Save, annotate, review, and share great web content. Receive smart email digests to retain key information.
- [michaelstromer.nyc](https://michaelstromer.nyc) by [Michael Stromer](https://github.com/Maelstroms38): Books and articles by Michael Stromer.
- [SaaS Boilerplate](https://github.com/async-labs/saas): Open source web app to build your own SaaS product.
- [Work in biotech](https://workinbiotech.com): Job board for small and young biotech companies
- [Async](https://async-await.com): Open source web app for team communication, separate urgent vs. non-urgent conversations.
- [Async Labs](https://async-labs.com): We build custom SaaS web applications.


## Contents

- [What can I learn from this project?](#what-can-i-learn-from-this-project)
- [Run locally](#run-locally)
- [Add a new book](#add-a-new-book)
- [Add your own styles](#add-your-own-styles)
- [Deploy to Heroku](#deploy-to-heroku)
- [Scaling](#scaling)
- [Docker](#docker)
- [Screenshots](#screenshots)
- [Built with](#built-with)
  - [Core stack](#core-stack)
  - [Third party APIs](#third-party-apis)
- [Contributing](#contributing)
- [Team](#team)
- [License](#license)
- [Project structure](#project-structure)


## What can I learn from this project?

You will learn how to structure your project and build many internal and external API infrastructures.

On the browser, the main technologies you will learn are: Next.js, React.js, Material-UI.
On the server, the main technologies you will learn are: Next.js, Node.js, Express.js, Mongoose.js, MongoDB database.

In addition to the above technologies, you can learn how to integrate your web application with the following external API services:
- [Google OAuth API](https://developers.google.com/identity/protocols/oauth2)
- [Github API](https://docs.github.com/en/rest/guides/basics-of-authentication)
- [Stripe API](https://stripe.com/docs/keys)
- [AWS SES API](https://docs.aws.amazon.com/STS/latest/APIReference/API_GetAccessKeyInfo.html)
- [Mailchimp API](https://mailchimp.com/developer/marketing/api/root/)

Plus, you can learn many concepts such as `session` and `cookie`, headers, HTTP request-response, Express middleware, `Promise`, `async/await`, and more. You have to know these concepts to be a confident web developer, no matter what language you use.

The main use cases for this project, besides learning, are:
- To write and host free documentation with Github being a source of truth for content.
- To sell online content, such as books.
- To extend it (see our second book, SaaS Boilerplate Book) to start software business.

## Creating a Google OAuth Client

This guide will walk you through the steps to create a Google OAuth client for your application.

#### Prerequisites

Before you begin, make sure you have the following:

- A Google account
- Access to the [Google Cloud Console](https://console.cloud.google.com/)

1. **Sign in to Google Cloud Console:**

- Go to the [Google Cloud Console](https://console.cloud.google.com/).
- Sign in with your Google account or create one if you don't have it.

2. **Create a New Project:**

- Click on the project dropdown in the top navigation bar.
- Click on ""New Project.""
- Give your project a name and click ""Create.""

3. **Enable the Google+ API (if required):**

- If you plan to use Google+ Sign-In for authentication, enable the ""Google+ API"" for your project.
- In the Cloud Console, go to the API & Services > Library.
- Search for ""Google+ API"" and enable it.

4. **Create OAuth Client ID:**

- In the Cloud Console, navigate to the API & Services > Credentials page.
- Click on ""Create Credentials"" and then select ""OAuth client ID.""
- Select the application type, typically ""Web application"" for a website or web application.
- Fill out the necessary information, such as the name of the OAuth client and authorized redirect URIs (where Google should redirect the user after authentication). You can use `http://localhost` as a redirect URI for development.
- Click ""Create"" to generate your OAuth client credentials. It will provide you with a client ID and client secret.


## Creating a GitHub Client ID and Client Secret

To create a GitHub Client ID and Client Secret, follow these steps:

1. **Sign in to your GitHub Account:**
   If you don't have a GitHub account, [create one](https://github.com/join).

2. **Go to Developer Settings:**
   Click on your profile picture in the top right corner of GitHub and select ""Settings."" In the left sidebar, under ""Developer settings,"" click on ""OAuth Apps.""

3. **Create a New OAuth App:**
   Click on the ""Register a new application"" button.

4. **Fill in the Application Details:**
   You'll be prompted to fill in details about your application:
   - **Application Name:** The name of your application.
   - **Homepage URL:** The URL to your application's website.
   - **Application Description:** A brief description of your application.
   - **Authorization callback URL:** This is the URL to which GitHub will redirect users after they authorize your application. For testing purposes, you can use `http://localhost` if you're developing locally.

5. **Generate Your Client ID and Client Secret:**
   After you've filled in the details, click the ""Register application"" button. GitHub will generate a Client ID and Client Secret for your application.


## Run locally

- Clone the project and run `yarn` to add packages.
- Before you start the app, create a `.env` file at the app's root. This file must have values for some env variables specified below.
  - To get `MONGO_URL_TEST`, we recommend a [free MongoDB at MongoDB Atlas](https://docs.mongodb.com/manual/tutorial/atlas-free-tier-setup/) (to be updated soon with MongoDB Atlas, see [issue](https://github.com/async-labs/builderbook/issues/138)).
  - Get `GOOGLE_CLIENTID` and `GOOGLE_CLIENTSECRET` by following [official OAuth tutorial](https://developers.google.com/identity/sign-in/web/sign-in#before_you_begin).

    Important: For Google OAuth app, callback URL is: http://localhost:8000/oauth2callback 
    Important: You have to enable Google+ API in your Google Cloud Platform account.

  - Specify your own secret key for Express session `SESSION_SECRET`: https://github.com/expressjs/session#secret


- To use all features and third-party integrations (such as Stripe, Google OAuth, Mailchimp), create a `.env` file and add values for all variables as shown below. These variables are also listed in [`.env.example`](https://github.com/async-labs/builderbook/blob/master/builderbook/.env.example), which you can use as a template to create your own `.env` file.

 `.env` :
  ```
  # Used in server/server.js
  MONGO_URL=
  MONGO_URL_TEST=
  SESSION_SECRET=
  
  # Used in lib/getRootUrl.js
  NEXT_PUBLIC_URL_APP=
  NEXT_PUBLIC_PRODUCTION_URL_APP=""https://heroku.builderbook.org""
  
  # Used in server/google.js
  GOOGLE_CLIENTID=
  GOOGLE_CLIENTSECRET=
  
  # Used in server/aws.js
  AWS_ACCESSKEYID=
  AWS_SECRETACCESSKEY=
  AWS_REGION=
  
  # Used in server/models/User.js
  EMAIL_ADDRESS_FROM=
  
  ----------
  # All environmental variables above this line are required for successful sign up
  
  # Used in server/github.js
  GITHUB_TEST_CLIENTID=
  GITHUB_LIVE_CLIENTID=
  GITHUB_TEST_SECRETKEY=
  GITHUB_LIVE_SECRETKEY=
  
  # Used in server/stripe.js
  NEXT_PUBLIC_STRIPE_TEST_PUBLISHABLEKEY=
  NEXT_PUBLIC_STRIPE_LIVE_PUBLISHABLEKEY=
  STRIPE_TEST_SECRETKEY=
  STRIPE_LIVE_SECRETKEY=
  STRIPE_TEST_DEMO_BOOK_PRICE_ID=
  STRIPE_LIVE_DEMO_BOOK_PRICE_ID=
  STRIPE_TEST_SECOND_BOOK_PRICE_ID=
  STRIPE_LIVE_SECOND_BOOK_PRICE_ID=
  
  # Used in server/mailchimp.js
  MAILCHIMP_API_KEY=
  MAILCHIMP_REGION=
  MAILCHIMP_PURCHASED_LIST_ID=
  MAILCHIMP_SIGNEDUP_LIST_ID=
  
  # Used in pages/_document.js and pages/_app.js
  NEXT_PUBLIC_GA_MEASUREMENT_ID=
  COOKIE_DOMAIN="".builderbook.org""
  
  ```

- IMPORTANT: do not publish your actual values for environmentable variables in `.env.example`; this file is public and only meant to show you how your `.env` file should look.

- Add your value (domain that you own) for `COOKIE_DOMAIN` and `NEXT_PUBLIC_PRODUCTION_URL_APP`.

- Start the app with `yarn dev`.
  - To get `NEXT_PUBLIC_GA_MEASUREMENT_ID`, set up Google Analytics and follow [these instructions](https://support.google.com/analytics/answer/1008080?hl=en) to find your tracking ID.
  - To get Stripe-related API keys, set up or log into your Stripe account and find your key [here](https://dashboard.stripe.com/account/apikeys).
- Env keys `NEXT_PUBLIC_GA_MEASUREMENT_ID` and `NEXT_PUBLIC_STRIPE_TEST_PUBLISHABLEKEY`/`NEXT_PUBLIC_STRIPE_LIVE_PUBLISHABLEKEY` are universally available (client and server). Env keys inside `.env` file are used in server code only unless they have `NEXT_PUBLIC_` prepended to their name. In that case, they are universally available.
- To make user a book's owner, set `""isAdmin"": true` on corresponding MongoDB document in your database (default value is `false` for any new user).

**Important: if you don't add values for environmental variables to `.env` file, corresponding functionality will not work. For example, login with Google account, purchasing book, getting repo information via GitHub API and other third-party API infrastructures.**


## Add a new book

- Create a new Github repo (public or private).
- In that repo, create an `introduction.md` file and write some content.
- At the top of your `introduction.md` file, add metadata in the format shown below. See [this file](https://github.com/builderbook/demo-book/blob/master/introduction.md) as an example.
  
  ```
  ---
  title: Introduction
  seoTitle: title for search engines
  seoDescription: description for search engines
  isFree: true
  ---
  ```

- Go to the app, click ""Connect Github"".
- Click ""Add Book"". Enter details and select the Github repo you created.
- Click ""Save"".

When you add new `.md` files or update content, go to the `BookDetail` page of your app and click `Sync with Github`. 

Important: All `.md` files in your Github repo _must_ have metadata in the format shown above.

Important: All `.md` files in your Github repo _must_ have name `introduction.md` or `chapter-N.md`.

To make the content of a `.md` file _private_ (meaning a person must purchase the content to see it), remove `isFree:true`  and add `excerpt:""""`. Add some excerpt content - this content is public and serves as a free preview.


## Add your own styles

To change the color scheme of this app, modify the `primary` and `secondary` theme colors inside `lib/context.js`. Select any colors from Material UI's official [color palette](https://material-ui-next.com/style/color/#color).

Recommended ways to add your own styles to this app:
1. [Inline style for a single element](#inline-style-for-a-single-element)
2. [Reusable style for multiple elements within single page or component](#reusable-style-for-multiple-elements-within-single-page-or-component)
3. [Reusable/importable style for multiple pages or components](#reusableimportable-style-for-multiple-pages-or-components)
4. [Global style for all pages in application](#global-style-for-all-pages-in-application)


### Inline style for a single element

USE CASE: apply a style to _one element_ on a single page/component 
For example, in our `book` page, we wrote this single inline style:
```

  ...

```
[See usage](https://github.com/async-labs/builderbook/blob/49116676e0894fcf00c33d208a284359b30f12bb/pages/book.js#L48)


### Reusable style for multiple elements within single page or component

USE CASE: apply the same style to _multiple elements_ on a single page/component.
For example, in our `tutorials` page, we created `styleExcerpt` and applied it to a `` element within the page:

```
const styleExcerpt = {
  margin: '0px 20px',
  opacity: '0.75',
  fontSize: '13px',
};


  ...


```
[See usage](https://github.com/async-labs/builderbook/blob/49116676e0894fcf00c33d208a284359b30f12bb/pages/tutorials.js#L14)


### Reusable/importable style for multiple pages or components

USE CASE: apply the same style to elements on _multiple pages/components_.
For example, we created `styleH1` inside `components/SharedStyles.js` and exported the style at the bottom of the file:
```
const styleH1 = {
  textAlign: 'center',
  fontWeight: '400',
  lineHeight: '45px',
};

module.exports = {
  styleH1,
};
```
[See usage](https://github.com/async-labs/builderbook/blob/04c6cf78bee42455d48ef3466d868f2196381a57/components/SharedStyles.js#L48)

We then imported `styleH1` into our `book` page, as well as our `index` page, and applied the style to a `` element:
```
import {
  styleH1,
} from '../components/SharedStyles';


  ...

```
[See usage](https://github.com/async-labs/builderbook/blob/49116676e0894fcf00c33d208a284359b30f12bb/pages/book.js#L13)


### Global style for all pages in application

USE CASE: apply the same style to elements on _all pages_ of your app.
Create your style in `pages/_document.js`. For example, we specified a style for all hyperlinks that use the `` element:
```

  {`
    a, a:focus {
      font-weight: 400;
      color: #1565C0;
      text-decoration: none;
      outline: none
    }
  `}

```
[See usage](https://github.com/async-labs/builderbook/blob/49116676e0894fcf00c33d208a284359b30f12bb/pages/_document.js#L51)


## Deploy to Heroku

In this section, we will learn how to deploy our app to [Heroku cloud](https://www.heroku.com/home). We will deploy our React-Next-Express app to lightweight Heroku container called [dyno](https://www.heroku.com/dynos).

Instructions are for app located at `/book/8-end`.
Adjust route if you are deploying app from the root of this public repo.

We will discuss the following topics in this section:
1. installing Heroku on Linux-based OS
2. creating app on Heroku dashboard
3. preparing app for deployment
4. configuring env variables
5. deploying app
6. checking logs
7. adding custom domain

Let's go step by step.

1. Install Heroku CLI (command-line interface) on your OS. Follow the [official guide](https://devcenter.heroku.com/articles/heroku-cli). In this book we provide instructions for Linux-based systems, in particular, a Ubuntu OS. For Ubuntu OS, run in your terminal:
  sudo snap install --classic heroku
  To confirm a successful installation, run:
  heroku --version
  As example, my output that confirms successful installation, looks like:
  heroku/7.22.7 linux-x64 node-v11.10.1

2. [Sign up](https://signup.heroku.com/) for Heroku, go to your Heroku dashboard and click purple New button on the right:
  ![image](https://user-images.githubusercontent.com/10218864/54558094-12b1f100-497a-11e9-94dd-d36399052931.png)

    On the next screen, give a name to your app and select a region. Click purple Create app button at the bottom:
    ![image](https://user-images.githubusercontent.com/10218864/54558276-8eac3900-497a-11e9-9026-25aa5047af87.png)

    You will be redirected to `Deploy` tab of your newly created Heroku app:
    ![image](https://user-images.githubusercontent.com/10218864/54558544-417c9700-497b-11e9-8885-6fdfde21c747.png)

3. As you can see from the above screenshot, you have two options. You can deploy the app directly from your local machine using Heroku CLI or directly from GitHub.
    In this tutorial, we will deploy a `async-labs/builderbook/book/8-end` app from our public [async-labs/builderbook](https://github.com/async-labs/builderbook) repo hosted on GitHub. Deploying from a private repo will be a similar process.
    
    Deploying from GitHub has a few advantages. Heroku uses git to track changes in a codebase. It's possible to deploy app from the local machine using Heroku CLI, however you have to create a [Git repo](https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository) for `async-labs/builderbook/book/8-end` with `package.json` file at the root level. A first advantage is that we can deploy from a non-root folder using GitHub instead of Heroku CLI.
    
    A second advantage is automation, later on you can create a branch that automatically deploy every new commit to Heroku. For example, we have a [deploy branch](https://github.com/async-labs/saas/tree/deploy) for our demo for [SaaS boilerplate](https://github.com/async-labs/saas/). When we commit to `master` branch - there is no new deployment, when we commit to `deploy` branch - new change is automatically deployed to Heroku app.

    Let's set up deploying from GitHub. On `Deploy` tab of your Heroku app at Heroku dashboard, click Connect to GitHub, then search for your repo, then click Connect next to the name of the proper repo:
    ![image](https://user-images.githubusercontent.com/10218864/54560210-09775300-497f-11e9-9027-2e3850ec7ff1.png)

    If successful, you will see green text `Connected` and be offered to select a branch and deploy app automatically or manually. Automatic deployment will deploy every new commit, manual deployment requires you to manually click on Deploy Branch button. For simplicity, we will deploy manually from `master` branch of our `async-labs/builderbook` repo.

    Before we perform a manual deployment via GitHub, we need Heroku to run some additional code while app is being deploying. Firstly, we need to tell Heroku that `8-end` app in the `async-labs/builderbook` repo is not at the root level, it's actually nested at `/book/8-end`. Secondly, Heroku needs to know that our app is Node.js app so Heroku finds `package.json` file, properly installs dependencies and runs proper scripts (such as `build` and `start` scripts from `package.json`). To achieve this, we need to add so called `buildpacks` to our Heroku app. Click `Settings` tab, scroll to `Buildpacks` section and click purple Add buildpack button:
    ![image](https://user-images.githubusercontent.com/10218864/54561192-50fede80-4981-11e9-976a-c3d7c88527ec.png)

    Add two buildpacks, first is `https://github.com/timanovsky/subdir-heroku-buildpack` and second is `heroku/nodejs`:
    ![image](https://user-images.githubusercontent.com/10218864/54561577-30835400-4982-11e9-997f-4711d999808e.png)

    Next, scroll up while on `Settings` tab and click purple Reveal Config Vars button, create a new environmental variable `PROJECT_PATH` with value `book/8-end`:
    ![image](https://user-images.githubusercontent.com/10218864/54561775-a5568e00-4982-11e9-9561-2e5827873779.png)

    The above variable will be used by the first buildpack `subdir-heroku-buildpack` to deploy app from repo's subdirectory.

4. If we deploy app at this point, our app will deploy with errors since we did not add environmental variables. Similar to how you added `PROJECT_PATH` variable, add all environmental variables from `book/8-end/.env` file to your Heroku app. Remember to add the rest of env variables for all features to work, including signup event.

5. While on `Settings` tab, scroll to `Domains and certificates` section and note your app's URL. My app's URL is: https://builderbook-8-end.herokuapp.com
    Let's deploy, go to `Deploy` tab, scroll to `Manual deploy` section and click Deploy branch button.
    After deployment process is complete , navigate to your app's URL:
    ![image](https://user-images.githubusercontent.com/10218864/54564053-10569380-4988-11e9-87dd-f81a28dd6406.png)

6. Server logs are not available on Heroku dashboard. To see logs, you have to use Heroku CLI.
    In your terminal, run:
    heroku login

    Follow instructions to log in to Heroku CLI.

    After successful login, terminal will print:
    Logged in as email@domain.com

    Where `email@domain.com` is an email address that you used to create your Heroku account.

    To see logs, in your terminal run:
    heroku logs --app builderbook-8-end --tail

    In your terminal, you will see your most recent logs and be able to see a real-time logs. 

    You can output certain number of lines (N) for retrieved logs by adding `--num N` to the `heroku logs` command.
    You can print only app's logs by adding `--source app` or system's logs by adding `--source heroku`.  

7. Time to add a custom domain. The Heroku app that we created is deployed on `free dyno`. Free dyno plan does not let you to add a custom domain to your app. To add custom domain, go to `Resources` tab and click purple Change Dyno Type button:
    ![image](https://user-images.githubusercontent.com/10218864/54622849-983faa80-4a27-11e9-957f-54fe5aa742ca.png)

    Select a `Hobby` plan and click Save button.

    Navigate to `Settings` tab and scroll to the `Domains and certificates` and click purple Add domain button:
    ![image](https://user-images.githubusercontent.com/10218864/54623152-36cc0b80-4a28-11e9-974b-8a14fb56a86a.png)

    Type your custom domain name, I added `heroku.builderbook.org` as a custom domain, click Save changes button.

    Heroku will display you a value for CNAME record that you have to create for your custom domain. For me, custom domain is `heroku.builderbook.org` and I manage DNS records at Now by Zeit.
    
    After you create a CNAME, ACM status on Heroku's dashboard will change to `Ok`:
    ![image](https://user-images.githubusercontent.com/10218864/54624195-2452d180-4a2a-11e9-999d-a6a771cde73c.png)

It's important that you remember to manually add your custom domain to the settings of your Google OAuth app (Chapter 3) and GitHub OAuth app (Chapter 6). If you forget to do it, you will see errors when you try to log in to your app or when you try to connect GitHub to your app.


## Scaling

You may want to consider splitting single Next/Express server into two servers:
- Next server for serving pages, server-side caching, sitemap and robots
- Express server for internal and external APIs

Here is an example of a web application with split servers:
https://github.com/async-labs/saas

Splitting servers will get you:
- faster page loads since Next rendering does not block internal and external APIs,
- faster code reload times during development,
- faster deployment and more flexible scaling of individual apps.


## Docker

- Install Docker and Docker Compose
- Modify `docker-compose-dev.yml` file
- If using Ubuntu, follow these steps: https://stackoverflow.com/questions/38775954/sudo-docker-compose-command-not-found
- Start app with `docker-compose -f docker-compose-dev.yml up`


## Screenshots

Chapter excerpt with Buy Button for Public/Guest visitor:
![builderbook-public-readchapter](https://user-images.githubusercontent.com/26158226/38517453-e84a7566-3bee-11e8-82cd-14b4dfbe6a78.png)

Chapter content and Table of Contents for book Customer:
![builderbook-customer-readchapter](https://user-images.githubusercontent.com/26158226/38518394-9ee97306-3bf1-11e8-8df2-8c05fb75249a.png)

Add-book/Edit-book page for Admin user:
![builderbook-admin-editbook](https://user-images.githubusercontent.com/26158226/38517449-e5faaa38-3bee-11e8-9c02-740096dc860e.png)

Book-detail page for Admin user:
![builderbook-admin-bookdetails](https://user-images.githubusercontent.com/26158226/38517450-e7005bd0-3bee-11e8-9916-81f32d3d1827.png)


## Built with

#### Core stack

- [React](https://github.com/facebook/react)
- [Material-UI](https://github.com/mui-org/material-ui)
- [Next](https://github.com/zeit/next.js)
- [Express](https://github.com/expressjs/express)
- [Mongoose](https://github.com/Automattic/mongoose)
- [MongoDB](https://github.com/mongodb/mongo)

#### Third party APIs

- Google OAuth
- Github
- AWS SES
- Stripe
- MailChimp

Check out [package.json](https://github.com/async-labs/builderbook/builderbook/blob/master/package.json).


## Contributing

We welcome suggestions and bug reports via issues and and pull requests.

By participating in this project, you are expected to uphold Builder Book's [Code of Conduct](https://github.com/async-labs/builderbook/blob/master/CODE-OF-CONDUCT.md).

Want to support this project? Consider buying our [books](https://builderbook.org), which teach you how to build web apps from scratch. Also check out our open source [SaaS boilerplate](https://github.com/async-labs/saas).


## Team

- [Kelly Burke](https://github.com/klyburke)
- [Timur Zhiyentayev](https://github.com/tima101)

You can contact us at team@builderbook.org

If you are interested in working with us, check out [Async Labs](https://async-labs.com/).


## License

All code in this repository is provided under the [MIT License](https://github.com/async-labs/builderbook/blob/master/LICENSE.md).


## Project structure

```
.
├── .vscode
│   ├── extensions.json
│   ├── settings.json
├── book
├── builderbook
│   ├── .elasticbeanstalk
│   │   ├── config.yml
│   ├── components
│   │   ├── admin
│   │   │   ├── EditBook.jsx
│   │   ├── customer
│   │   │   ├── BuyButton.jsx
│   │   ├── Header.jsx
│   │   ├── MenuWithAvatar.jsx                   
│   │   ├── Notifier.jsx
│   │   ├── SharedStyles.js
├── lib
│   ├── api
│   │   ├── admin.js
│   │   ├── customer.js
│   │   ├── getRootURL.js
│   │   ├── public.js
│   │   ├── sendRequest.js
│   ├── notify.js
│   ├── theme.js
│   ├── withAuth.jsx
├── pages
│   ├── admin
│   │   ├── add-book.jsx
│   │   ├── book-detail.jsx
│   │   ├── edit-book.jsx
│   │   ├── index.jsx
│   ├── customer
│   │   ├── my-books.jsx
│   ├── public
│   │   ├── login.jsx
│   │   ├── read-chapter.jsx
│   ├── _app.jsx
│   ├── _document.jsx
│   ├── index.jsx
├── public
│   ├── robots.txt
├── server
│   ├── api
│   │   ├── admin.js
│   │   ├── customer.js
│   │   ├── index.js
│   │   ├── public.js
│   ├── models
│   │   ├── Book.js
│   │   ├── Chapter.js
│   │   ├── EmailTemplate.js
│   │   ├── Purchase.js
│   │   ├── User.js
│   ├── utils
│   │   ├──slugify.js
│   ├── app.js
│   ├── aws.js
│   ├── github.js
│   ├── google.js
│   ├── logger.js
│   ├── mailchimp.js
│   ├── routesWithSlug.js
│   ├── sitemapAndRobots.js
│   ├── stripe.js
├── test/server/utils
│   ├── slugify.test.js
├── .eslintrc.js
├── .gitignore
├── package.json
├── yarn.lock

```
","'apis', 'aws-ses', 'boilerplate', 'express-session', 'expressjs', 'github-api', 'google-api', 'javascript', 'mailchimp', 'material-ui', 'mongodb', 'mongoose', 'nextjs', 'nodejs', 'passport', 'react', 'stripe'",2017-12-03T03:57:52Z,2023-11-13T09:59:25Z,20,17,3740,96,"('tima101', 287), ('klyburke', 232), ('YuriGor', 13), ('delgermurun', 5), ('rickhallett', 5), ('batamar', 3), ('NguyenDa18', 3), ('Isaac Cruz', 2), ('johnking', 2), ('mohammadameer', 1), ('paralax', 1), ('amirkx', 1), ('helpse', 1), ('Kelly Burke', 1), ('Kaycee', 1), ('johnmalcolm', 1), ('jessebrack', 1), ('greysdawn', 1), ('WaterlessPiano2', 1), ('athahersirnaik', 1)",11,9,
CurimuChizu/CC-Themes,These are all CC's themes.,"Both themes are out of date!!
CC-Themes

Red n Black
A theme based red and black with a hint of anime (Up to date as of 9/10/2017)




To change the background, just add the code below with a different link in the `Custome CSS` tab of the `BetterDiscord` settings:( Also be sure to add the `s` after `http` when you change the pic or it won't appear )
```css
.app {
    background-image: url(""https://i.imgur.com/P0k3VRY.jpg"") !important;
    background-size: 1500px 900px !important;
    background-repeat: no-repeat !important;
}
/* Just change the link to whatever picture, including the `s` in `https` */

.callout-backdrop {
    opacity:0.9 !important;
    background: url(""https://i.imgur.com/CcntY8Y.jpg"") !important;
    background-size: 1500px 900px !important;
    background-repeat: no-repeat !important;
}
```
ReZero The Anime
A theme based Re:Zero kara Hajimeru Isekai Seikatsu anime (Up to date as of 9/10/2017)




Code for the background picture:
```css
.app {
    background-image: url(""https://i.imgur.com/w7UVsOs.jpg"") !important; 
    background-size: cover !important;
}
/* Just change the link to whatever picture of Emelia, Rem, or Ram including the `s` in `https` */

.callout-backdrop {
    opacity:0.9!important;
    background: url(""https://i.imgur.com/eeDIMtw.jpg"")!important;
    background-size: cover !important;
    background-position: center !important;
}
```
Thanks for coming~~ ^~^
",,2016-06-14T04:56:23Z,2018-01-28T16:57:05Z,1,1,19,11,"('CurimuChizu', 68)",0,0,
Blizzard/s2client-proto,StarCraft II Client - protocol definitions used to communicate with StarCraft II.,"# Overview

The StarCraft II API is an interface that provides full external control of StarCraft II.

This API exposes functionality for developing software for:
* Scripted bots.
* Machine-learning based bots.
* Replay analysis.
* Tool assisted human play.

The API is available in the retail Windows and Mac clients. There are also Linux clients available at the download links below.

# Contents

## Official

* **Protocol**
    * Protobuf protocol definition of the API.
    * [Definition](s2clientprotocol/sc2api.proto)
    * [Documentation](docs/protocol.md)
* **Reference C++ implementation**
    * Library designed for building a scripted bots using the API.
    * [Repository](https://github.com/Blizzard/s2client-api)
* **StarCraft II Linux Packages**
    * Self contained headless linux StarCraft II builds.
    * [Documentation](docs/linux.md)
    * [Download](#downloads)
* **Maps**
    * Maps from the 1v1 ladder and other custom maps.
    * [Download](#downloads)
* **Replays**
    * Replay packs of 1v1 ladder games.
    * [Download](#downloads)

## Community

* **PySC2**
  * DeepMind's python environment wrapper. 
  * [Repository](https://github.com/deepmind/pysc2)
* **CommandCenter**
  * A robust architecture for quickly developing Starcraft AI bots.
  * [Repository](https://github.com/davechurchill/CommandCenter)
* **Bot Ladders**
  * [SC2AI](http://sc2ai.net/) - Unofficial community organized ladder.
  * [AI Arena](http://aiarena.net/) - Unofficial community organized ladder.
* **Community Wiki**
  * Unofficial wiki of documentation and tutorials.
  * [Website](http://wiki.sc2ai.net/Main_Page)
* **Discord Server**
  * Unofficial server for discussing AI questions and projects.
  * [Invite Link](https://discord.gg/BH58ZVt)
* **Facebook Group**
  * Unofficial community page.
  * [Website](https://www.facebook.com/groups/969196249883813/)


# Downloads

To access the linux packages, map packs and replay packs, you must agree to the [AI and Machine Learning License](http://blzdistsc2-a.akamaihd.net/AI_AND_MACHINE_LEARNING_LICENSE.html)

The files are password protected with the password 'iagreetotheeula'.

**By typing in the password ‘iagreetotheeula’ you agree to be bound by the terms of the [AI and Machine Learning License](http://blzdistsc2-a.akamaihd.net/AI_AND_MACHINE_LEARNING_LICENSE.html)**

## Linux Packages

* [3.17](https://blzdistsc2-a.akamaihd.net/Linux/SC2.3.17.zip)
* [3.16.1](https://blzdistsc2-a.akamaihd.net/Linux/SC2.3.16.1.zip)
* [4.0.2](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.0.2.zip)
* [4.1.2](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.1.2.60604_2018_05_16.zip)
* [4.6](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.6.0.67926.zip)
* [4.6.1](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.6.1.68195.zip)
* [4.6.2](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.6.2.69232.zip)
* [4.7](https://blzdistsc2-a.akamaihd.net/Linux/SC2.AStar.4.7.zip) 
* [4.7.1](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.7.1.zip) 
* [4.8.2](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.8.2.zip) 
* [4.8.3](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.8.3.zip) 
* [4.8.4](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.8.4.zip) 
* [4.8.6](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.8.6.zip) 
* [4.9.0](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.9.0.zip) 
* [4.9.1](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.9.1.zip) 
* [4.9.2](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.9.2.zip) 
* [4.9.3](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.9.3.zip) 
* [4.10](https://blzdistsc2-a.akamaihd.net/Linux/SC2.4.10.zip) 

## Map Packs

* [Ladder 2017 Season 1](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2017Season1.zip)
* [Ladder 2017 Season 2](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2017Season2.zip)
* [Ladder 2017 Season 3 Updated](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2017Season3_Updated.zip)
* [Ladder 2017 Season 4](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2017Season4.zip)
* [Ladder 2018 Season 1](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2018Season1.zip)
* [Ladder 2018 Season 2](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2018Season2_Updated.zip)
* [Ladder 2018 Season 3](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2018Season3.zip)
* [Ladder 2018 Season 4](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2018Season4.zip)
* [Ladder 2019 Season 1](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2019Season1.zip)
* [Ladder 2019 Season 2](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2019Season2.zip)
* [Ladder 2019 Season 3](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2019Season3.zip)
* [Melee](https://blzdistsc2-a.akamaihd.net/MapPacks/Melee.zip)

This is the previous version of the Ladder 2017 Season 3 Map Pack
* [Ladder 2017 Season 3 Original](https://blzdistsc2-a.akamaihd.net/MapPacks/Ladder2017Season3.zip)

## Replay Packs

* [3.16.1 - Pack 1](https://blzdistsc2-a.akamaihd.net/ReplayPacks/3.16.1-Pack_1-fix.zip)
* [3.16.1 - Pack 2](https://blzdistsc2-a.akamaihd.net/ReplayPacks/3.16.1-Pack_2.zip)

# Installing Map and Replay Packs

All additional game data should be extracted within the installation directory.

The default installation directories are:
* Windows: C:\Program Files (x86)\StarCraft II\
* Mac: /Applications/StarCraft II/

On Linux, the installation directory is the folder you extracted the linux package into.

The folder structure is the same accross all platforms. However you may need to create some folders if they are missing.

Standard folder layout:
* StarCraft II/
    * Battle.net/
    * Maps/
    * Replays/
    * SC2Data/
    * Versions/

## Map Packs
* Extract the zip file directly into the ""Maps"" folder.
* In the API, a map can be specified as either an absolute path or its relative path inside this ""Maps"" folder.

## Replay Packs
* Replace the ""Battle.net"" and ""Replays"" folders with the ones in the zip file.
* In the API, a replay must be specified as an absolute path.

## Stable IDs

These define the action mappings from ability ids in the protobuf api to the internals of the game.
They also define some general ids that combine multiple abilities that have a similar semantic meaning
(eg various forms of burrow, cancel, lift/land, etc). The `stableid.json` is updated occasionally with
the game, but can also be updated manually by downloading the `stableid.json` from here and placing it
in the root of your `StarCraft II` directory.
",,2017-07-22T01:09:21Z,2024-04-25T20:37:00Z,27,23,3756,198,"('sc2automation', 29), ('AnthonyBrunasso', 26), ('tewalds', 22), ('BlizzAphex', 21), ('Kevin Calderone', 20), ('chazix', 14), ('BLIZZARD\\kcalderone', 11), ('chase', 11), ('AustinHudelson', 10), ('sheikyabooti', 10), ('jrepp', 9), ('jashunk', 5), ('richardapowell', 2), ('davidkuhta', 2), ('HalfVoxel', 2), ('AkiTensai', 1), ('BLIZZARD\\abrunasso', 1), ('nikibobi', 1), ('changil-ckim-blizzard', 1), ('m1ndgames', 1), ('SafPlusPlus', 1), ('kevinsandow', 1), ('KevinCalderone', 1), ('matthid', 1), ('ImpulseCloud', 1), ('Nickrader', 1), ('lladdy', 1)",12,11,
rslifka/elasticity,Ruby-based programmatic access to Amazon's Elastic MapReduce service.,"**2021 Update** As you can see from the modification dates, this gem hasn't been updated for years and the build is currently failing due to an ancient version of Ruby. Please consider this repository no longer maintained and not recommended for production use. I'm leaving it available in the off chance some portion of its source may be useful to others.

Best of luck! -- Rob

[![Gem Version](https://badge.fury.io/rb/elasticity.png)](http://badge.fury.io/rb/elasticity)

Elasticity provides programmatic access to Amazon's Elastic Map Reduce service.  The aim is to conveniently abstract away the complex EMR REST API and make working with job flows more productive and more enjoyable.

[![Build Status](https://secure.travis-ci.org/rslifka/elasticity.png)](http://travis-ci.org/rslifka/elasticity) 2.2.x, 2.3.x

Elasticity provides two ways to access EMR:

* **Indirectly through a JobFlow-based API**. This README discusses the Elasticity API.
* **Directly through access to the EMR REST API**. The less-discussed hidden darkside... I use this to enable the Elasticity API.  RubyDoc can be found at the RubyGems [auto-generated documentation site](http://rubydoc.info/gems/elasticity/frames).  Be forewarned: Making the calls directly requires that you understand how to structure EMR requests at the Amazon API level and from experience I can tell you there are more fun things you could be doing :)  Scroll to the end for more information on the Amazon API.

# Installation
You must be running a ruby >= 2.2

```
gem install elasticity
```

or in your Gemfile

```
gem 'elasticity', '~> 6.0'
```

This will ensure that you protect yourself from API changes, which will only be made in major revisions.

# Roughly, What Am I Getting Myself Into?

If you're familiar with the AWS EMR UI, you'll recall there are sample jobs Amazon supplies to help us get familiar with EMR.  Here's how you'd kick off the ""Cloudburst (Custom Jar)"" sample job with Elasticity.  You can run this code as-is (supplying your AWS credentials and an output location) and ```JobFlow#run``` will return the ID of the job flow.

```ruby
require 'elasticity'

# Specify your AWS credentials
Elasticity.configure do |c|
  c.access_key = ENV['AWS_ACCESS_KEY_ID']
  c.secret_key = ENV['AWS_SECRET_ACCESS_KEY']
end

# Create a job flow
jobflow = Elasticity::JobFlow.new

# NOTE: Amazon requires that all new accounts specify a VPC subnet when launching jobs.
# If you're on an existing account, this is unnecessary however new AWS accounts require
# subnet IDs be specified when launching jobs.
# jobflow.ec2_subnet_id = 'YOUR_SUBNET_ID_HERE'

# This is the first step in the jobflow - running a custom jar
step = Elasticity::CustomJarStep.new('s3n://elasticmapreduce/samples/cloudburst/cloudburst.jar')

# Here are the arguments to pass to the jar (replace OUTPUT_BUCKET)
step.arguments = %w(s3n://elasticmapreduce/samples/cloudburst/input/s_suis.br s3n://elasticmapreduce/samples/cloudburst/input/100k.br s3n://OUTPUT_BUCKET/cloudburst/output/2012-06-22 36 3 0 1 240 48 24 24 128 16)

# Add the step to the jobflow
jobflow.add_step(step)

# Let's go!
jobflow.run
```

Note that this example is only for ```CustomJarStep```.  Other steps will have different means of passing parameters.

# Working with Job Flows

Job flows are the center of the EMR universe.  The general order of operations is:

  1. Specify AWS credentials
  1. Create a job flow.
  1. Specify options.
  1. (optional) Configure instance groups.
  1. (optional) Add bootstrap actions.
  1. (optional) Add steps.
  1. (optional) Upload assets.
  1. Run the job flow.
  1. (optional) Add additional steps.
  1. (optional) Wait for the job flow to complete.
  1. (optional) Shutdown the job flow.

## 1 - Specify AWS Credentials

```ruby
Elasticity.configure do |c|
  c.access_key = ENV['AWS_ACCESS_KEY_ID']      # required
  c.secret_key = ENV['AWS_SECRET_ACCESS_KEY']  # required
  c.security_token = ENV['AWS_SECURITY_TOKEN'] # optional, if you're using STS
end
```

## 2 - Create a Job Flow

```ruby
jobflow = Elasticity::JobFlow.new
```

If you want to access a job flow that's already running:

```ruby
jobflow = Elasticity::JobFlow.from_jobflow_id('jobflow ID', 'region')
```

This is useful if you'd like to attach to a running job flow and add more steps, etc.  The ```region``` parameter is necessary because job flows are only accessible from the the API when you connect to the same endpoint that created them (e.g. us-west-1).  If you don't specify the ```region``` parameter, us-east-1 is assumed.

## 3 - Specifying Options

Configuration job flow options, shown below with default values.  Note that these defaults are subject to change - they are reasonable defaults at the time(s) I work on them (e.g. the latest version of Hadoop).

These options are sent up as part of job flow submission (i.e. ```JobFlow#run```), so be sure to configure these before running the job.

```ruby
jobflow.name                              = 'Elasticity Job Flow'

# For new AWS accounts, this is required to be set
jobflow.ec2_subnet_id                     = nil
jobflow.job_flow_role                     = nil
jobflow.service_role                      = nil

jobflow.action_on_failure                 = 'TERMINATE_JOB_FLOW'
jobflow.keep_job_flow_alive_when_no_steps = false
jobflow.log_uri                           = nil
jobflow.enable_debugging                  = false # Requires a log_uri to enable

# >= 4.0.0 release label is now the default
jobflow.release_label                     = '4.3.0'
# < 4.0.0 ... Haven't used this before? just set the release label then.
jobflow.ami_version                       = 'latest'

jobflow.tags                              = {name: ""app-name"", department: 'marketing'}
jobflow.ec2_key_name                      = nil
jobflow.visible_to_all_users              = false
jobflow.placement                         = 'us-east-1a'
jobflow.region                            = 'us-east-1'
jobflow.instance_count                    = 2
jobflow.master_instance_type              = 'm1.small'
jobflow.slave_instance_type               = 'm1.small'
jobflow.additonal_info                    = 'additonal info'
jobflow.additional_master_security_groups = ['sg-1111', 'sg-2222']
jobflow.additional_slave_security_groups  = ['sg-1111', 'sg-2222']
```

### EMR Applications (optional needs release_label >= 4.0.0)
With the release of EMR 4.0.0 you can now supply applications which EMR will install for you on boot(rather than a manual bootstrap action. Which you can still use if required). You must set the `release_label` for the jobflow(>=4.0.0)

```ruby
jobflow.release_label = '4.3.0'
# the simple way
jobflow.add_application(""Spark"") # Pig, Hive, Mahout
# more verbose
spark = Elasticity::Application.new({
  name: 'Spark',
  arguments: '--webui-port 18080',
  version: '1.0.1',
  additional_info: '' # This option is for advanced users only. This is meta information about third-party applications that third-party vendors use for testing purposes.
})
jobflow.add_application(spark)
```

Further reading: http://docs.aws.amazon.com/ElasticMapReduce/latest/ReleaseGuide/emr-configure-apps.html

## 4 - Configure Instance Groups (optional)

Technically this is optional since Elasticity creates MASTER and CORE instance groups for you (one m1.small instance in each).  If you'd like your jobs to finish in an appreciable amount of time, you'll want to at least add a few instances to the CORE group :)

### The Easy Way™

If all you'd like to do is change the type or number of instances, ```JobFlow``` provides a few shortcuts to do just that.

```ruby
jobflow.instance_count       = 10
jobflow.master_instance_type = 'm1.small'
jobflow.slave_instance_type  = 'c1.medium'
```

This says ""I want 10 instances from EMR: one m1.small MASTER instance and nine c1.medium CORE instances.""

### The Still-Easy Way™

Elasticity supports all EMR instance group types and all configuration options. The MASTER, CORE and TASK instance groups can be configured via ```JobFlow#set_master_instance_group```, ```JobFlow#set_core_instance_group``` and ```JobFlow#set_task_instance_group``` respectively.

#### On-Demand Instance Groups

These instances will be available for the life of your EMR job, versus Spot instances which are transient depending on your bid price (see below).

```ruby
ig = Elasticity::InstanceGroup.new
ig.count = 10                       # Provision 10 instances
ig.type  = 'c1.medium'              # See the EMR docs for a list of supported types
ig.set_on_demand_instances          # This is the default setting

jobflow.set_core_instance_group(ig)
```

#### Spot Instance Groups

*When Amazon EC2 has unused capacity, it offers EC2 instances at a reduced cost, called the Spot Price. This price fluctuates based on availability and demand. You can purchase Spot Instances by placing a request that includes the highest bid price you are willing to pay for those instances. When the Spot Price is below your bid price, your Spot Instances are launched and you are billed the Spot Price. If the Spot Price rises above your bid price, Amazon EC2 terminates your Spot Instances.* - [EMR Developer Guide](http://docs.amazonwebservices.com/ElasticMapReduce/latest/DeveloperGuide/UsingEMR_SpotInstances.html)

```ruby
ig = Elasticity::InstanceGroup.new
ig.count = 10                       # Provision 10 instances
ig.type  = 'c1.medium'              # See the EMR docs for a list of supported types
ig.set_spot_instances(0.25)         # Makes this a SPOT group with a $0.25 bid price

jobflow.set_core_instance_group(ig)
```

## 5 - Add Bootstrap Actions (optional)

Bootstrap actions are run as part of setting up the job flow, so be sure to configure these before running the job.

### Bootstrap Actions

With the basic ```BootstrapAction``` you specify everything about the action - the script, options and arguments.

```ruby
action = Elasticity::BootstrapAction.new('s3n://my-bucket/my-script', '-g', '100')
jobflow.add_bootstrap_action(action)
```

### Hadoop Bootstrap Actions

`HadoopBootstrapAction` handles passing Hadoop configuration options through.

```ruby
[
  Elasticity::HadoopBootstrapAction.new('-m', 'mapred.map.tasks=101'),
  Elasticity::HadoopBootstrapAction.new('-m', 'mapred.reduce.child.java.opts=-Xmx200m')
  Elasticity::HadoopBootstrapAction.new('-m', 'mapred.tasktracker.map.tasks.maximum=14')
].each do |action|
  jobflow.add_bootstrap_action(action)
end
```

### Hadoop File Bootstrap Actions

With EMR's current limit of 15 bootstrap actions, chances are you're going to create a configuration file full of your options and opt to use that instead of passing all the options individually.  In that case, use the ```HadoopFileBootstrapAction```, supplying the location of your configuration file.

```ruby
action = Elasticity::HadoopFileBootstrapAction.new('s3n://my-bucket/job-config.xml')
jobflow.add_bootstrap_action(action)
```

## 6 - Add Steps (optional)

Each type of step has ```#name``` and ```#action_on_failure``` fields that can be specified.  Apart from that, steps are configured differently - exhaustively described below.

### Adding a Pig Step

```ruby
# Path to the Pig script
pig_step = Elasticity::PigStep.new('s3n://mybucket/script.pig')

# (optional) These variables are available during the execution of your script
pig_step.variables = {
  'VAR1' => 'VALUE1',
  'VAR2' => 'VALUE2'
}

jobflow.add_step(pig_step)
```

#### PARALLEL

Given the importance of specifying a reasonable value for [the number of parallel reducers](http://pig.apache.org/docs/r0.8.1/cookbook.html#Use+the+Parallel+Features PARALLEL), Elasticity calculates and passes through a reasonable default up with every invocation in the form of a script variable called E_PARALLELS.  This default value is based off of the formula in the Pig Cookbook and the number of reducers AWS configures per instance.

For example, if you had 8 instances in total and your slaves were m1.xlarge, the value is 26 (as shown below).

```sh
  s3://elasticmapreduce/libs/pig/pig-script
    --run-pig-script
      --args
        -p INPUT=s3n://elasticmapreduce/samples/pig-apache/input
        -p OUTPUT=s3n://slif-elasticity/pig-apache/output/2011-05-04
        -p E_PARALLELS=26
    s3n://elasticmapreduce/samples/pig-apache/do-reports.pig
```

Use this as you would any other Pig variable.

```pig
  A = LOAD 'myfile' AS (t, u, v);
  B = GROUP A BY t PARALLEL $E_PARALLELS;
  ...
```

### Adding a Hive Step

```ruby
# Path to the Hive Script
hive_step = Elasticity::HiveStep.new('s3n://mybucket/script.hql')

# (optional) These variables are available during the execution of your script
hive_step.variables = {
  'VAR1' => 'VALUE1',
  'VAR2' => 'VALUE2'
}

jobflow.add_step(hive_step)
```

### Adding a Streaming Step

```ruby
# Input bucket, output bucket, mapper script,reducer script
streaming_step = Elasticity::StreamingStep.new('s3n://elasticmapreduce/samples/wordcount/input', 's3n://elasticityoutput/wordcount/output/2012-07-23', 's3n://elasticmapreduce/samples/wordcount/wordSplitter.py', 'aggregate')

# Optionally, include additional *arguments
# streaming_step = Elasticity::StreamingStep.new('s3n://elasticmapreduce/samples/wordcount/input', 's3n://elasticityoutput/wordcount/output/2012-07-23', 's3n://elasticmapreduce/samples/wordcount/wordSplitter.py', 'aggregate', '-arg1', 'value1')

jobflow.add_step(streaming_step)
```

### Adding a Custom Jar Step

```ruby
# Path to your jar
jar_step = Elasticity::CustomJarStep.new('s3n://mybucket/my.jar')

# (optional) Arguments passed to the jar
jar_step.arguments = ['arg1', 'arg2']

jobflow.add_step(jar_step)
```

### Adding a Script Step

```ruby
# Path to your script, plus arguments
script_step = Elasticity::ScriptStep.new('script_location', 'arg1', 'arg2')

jobflow.add_step(script_step)
```

### Adding an S3DistCp Step

For a complete list of supported arguments, please see the [Amazon EMR guide](http://docs.aws.amazon.com/ElasticMapReduce/latest/DeveloperGuide/UsingEMR_s3distcp.html).

```ruby
copy_step = Elasticity::S3DistCpStep.new
copy_step.arguments = [...]

jobflow.add_step(copy_step)

# For AMI < 4.x you need to specifify legacy argument
copy_step = Elasticity::S3DistCpStep.new(true)
```

### Adding a Scalding Step

```ruby
scalding_step = Elasticity::ScaldingStep.new('jar_location', 'main_class_fqcn', { 'arg1' => 'value1' })

jobflow.add_step(scalding_step)
```

This will result in the following command line arguments:

```bash
main_class_fqcn --hdfs --arg1 value1
```

### Adding a Spark Step

```ruby
spark_step = Elasticity::SparkStep.new('jar_location', 'main_class_fqcn')

# Specifying arguments relative to Spark
spark_step.spark_arguments = { 'driver-memory' => '2G' }
# Specifying arguments relative to your application
spark_step.app_arguments = { 'arg1' => 'value1' }
```

This will be equivalent to the following script:

```bash
spark-submit \
  --driver-memory 2G \
  --class main_class_fqcn \
  jar_location \
  --arg1 value1
```

## 7 - Upload Assets (optional)

This isn't part of ```JobFlow```; more of an aside.  Elasticity provides a very basic means of uploading assets to S3 so that your EMR job has access to them.  Most commonly this will be a set of resources to run the job (e.g. JAR files, streaming scripts, etc.) and a set of resources used by the job itself (e.g. a TSV file with a range of valid values, join tables, etc.).

```ruby
# Specify the bucket name, AWS credentials and region
s3 = Elasticity::SyncToS3.new('my-bucket', 'access', 'secret', 'region')

# Alternatively, specify nothing :)
# - Use the standard environment variables (AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY)
# - Use the 'us-east-1' region by default
# s3 = Elasticity::SyncToS3('my-bucket')

# Recursively sync the contents of '/foo' under the remote location 'remote-dir/this-job'
s3.sync('/foo', 'remote-dir/this-job')

# Sync a single file to a remote directory
s3.sync('/foo/this-job/tables/join.tsv', 'remote-dir/this-job/tables')
```

If the bucket doesn't exist, it will be created.

If a file already exists, there is an MD5 checksum evaluation.  If the checksums are the same, the file will be skipped.  Now you can use something like ```s3n://my-bucket/remote-dir/this-job/tables/join.tsv``` in your EMR jobs.

## 8 - Run the Job Flow

Submit the job flow to Amazon, storing the ID of the running job flow.

```ruby
jobflow_id = jobflow.run
```

## 9 - Add Additional Steps (optional)

Steps can be added to a running jobflow just by calling ```#add_step``` on the job flow exactly how you add them prior to submitting the job.

## 10 - Wait For the Job Flow to Complete (optional)

Elasticity has the ability to block until the status of a job flow is not STARTING or RUNNING.  There are two flavours.  Without a status callback:

```ruby
# Blocks until status changes
jobflow.wait_for_completion
```

And with a status callback, providing the elapsed time and an instance of ```Elasticity::JobFlowStatus``` so you can inspect the progress of the job.

```ruby
# Blocks until status changes, calling back every 60 seconds
jobflow.wait_for_completion do |elapsed_time, job_flow_status|
  puts ""Waiting for #{elapsed_time}, jobflow status: #{job_flow_status.state}""
end
```

## 11 - Shut Down the Job Flow (optional)

By default, job flows are set to terminate when there are no more running steps.  You can tell the job flow to stay alive when it has nothing left to do:

```ruby
jobflow.keep_job_flow_alive_when_no_steps = true
```

If that's the case, or if you'd just like to terminate a running jobflow before waiting for it to finish:

```ruby
jobflow.shutdown
```

# Elasticity Configuration

Elasticity supports a handful of configuration options, all of which are shown below.

```ruby
Elasticity.configure do |config|

  # AWS credentials
  config.access_key = ENV['AWS_ACCESS_KEY_ID']
  config.secret_key = ENV['AWS_SECRET_ACCESS_KEY']

  # if you use federated Identity Management
  #config.security_token  = ENV['AWS_SECURITY_TOKEN']

  # If using Hive, it will be configured via the directives here
  config.hive_site = 's3://bucket/hive-site.xml'

end
```

# Amazon EMR Documentation

Elasticity wraps all of the EMR API calls.  Please see the Amazon guide for details on these operations because the default values aren't obvious (e.g. the meaning of DescribeJobFlows without parameters).

You may opt for ""direct"" access to the API where you specify the params and Elasticity takes care of the signing for you, responding with the XML from Amazon.

In addition to the [AWS EMR site](http://aws.amazon.com/elasticmapreduce/), there are three primary resources of reference information for EMR:

* [Amazon EMR Getting Started Guide](http://docs.amazonwebservices.com/ElasticMapReduce/latest/GettingStartedGuide/)
* [Amazon EMR Developer Guide](http://docs.amazonwebservices.com/ElasticMapReduce/latest/DeveloperGuide/)
* [Amazon EMR API Reference](http://docs.amazonwebservices.com/ElasticMapReduce/latest/API/)

Unfortunately, the documentation is sometimes incorrect and sometimes missing.  E.g. the allowable values for ```AddInstanceGroups``` are present in the [PDF](http://awsdocs.s3.amazonaws.com/ElasticMapReduce/20090331/emr-api-20090331.pdf) version of the API reference but not in the [HTML](http://docs.amazonwebservices.com/ElasticMapReduce/latest/API/) version.  Elasticity implements the API as specified in the PDF reference as that is the most complete description I could find.

# Thanks!

* [Alexander Dean](https://github.com/alexanderdean) has been a constant source of excellent suggestions. He's also working on [Unified Log Processing](http://www.manning.com/dean/), which you should of course purchase several copies of, post haste :)
* AWS signing was used from [RightScale's](http://www.rightscale.com/) amazing [right_aws gem](https://github.com/rightscale/right_aws) which works extraordinarily well!  If you need access to any AWS service (EC2, S3, etc.), have a look.
* camelize was used from ActiveSupport to assist in converting parmeters to AWS request format.

# License

```
  Copyright 2011-2015 Robert Slifka

  Licensed under the Apache License, Version 2.0 (the ""License"");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an ""AS IS"" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
```
","'emr', 'ruby'",2011-04-09T05:19:22Z,2021-01-31T16:54:52Z,15,11,106,6,"('rslifka', 509), ('Dave Robertson', 29), ('robert2d', 26), ('BenFradet', 9), ('Wouter', 5), ('henry-hu', 3), ('devsaik', 3), ('fblundun', 2), ('jbeemster', 2), ('alexanderdean', 2), ('Aaron Olson', 1), ('alistair', 1), ('henryhu666', 1), ('jshafton', 1), ('rweald', 1)",5,4,
menzi11/BullshitGenerator, Needs to generate some texts to test if my GUI rendering codes good or not. so I made this.,"# 狗屁不通文章生成器
# BullshitGenerator

偶尔需要一些中文文字用于GUI开发时测试文本渲染. __本项目只做这一项, 请勿用于其他任何用途__.
Needs to generate some texts to test if my GUI rendering codes good or not. so I made this.

## 再次声明一下, 本项目生成的文章真的狗屁不通, 只能拿来搞笑, 请不要用于正规用途!
## 再次声明一下, 本项目生成的文章真的狗屁不通, 只能拿来搞笑, 请不要用于正规用途!
## 再次声明一下, 本项目生成的文章真的狗屁不通, 只能拿来搞笑, 请不要用于正规用途!

本项目为python3版本, 还有由suulnnka修改在线版, 使用更加方便:
https://suulnnka.github.io/BullshitGenerator/index.html

下一步计划:
1. 防止文章过于内容重复
1. 加入更多啰嗦话.
1. 加入马三立里的内容
1. 加入手写体直接渲染出图片的功能(__仅仅用于测试本人的打印机是否工作正常, 请勿做它用__).

----

## 关于Pull requests:

鄙人每个requests都会仔细阅读, 但因近期事情较多, merge未必及时, 毕竟是业余项目, 请大家见谅. 如果未来实在更新不及时, 也欢迎有志之士替代本人继续本项目.

## 关于中文变量名:

平时撸码鄙人是不写中文变量名的, 本项目中的中文变量名只是最开始瞎写的时候边写语料边写代码时懒得切英文输入法了. 不过既然如此就保持吧!

## 关于生成算法

鄙人才疏学浅并不会任何自然语言处理相关算法. 而且目前比较偏爱简单有效的方式达到目的方式. 除非撞到了天花板, 否则暂时不会引入任何神经网络等算法. 不过欢迎任何人另开分支实现更复杂, 效果更好的算法. 不过除非效果拔群, 否则鄙人暂时不会融合.
",,2019-10-28T17:05:51Z,2021-07-10T09:44:32Z,8,5,15710,270,"('menzi11', 17), ('gaoke', 3), ('suulnnka', 3), ('Sunbread', 3), ('111116', 2), ('jingyuexing', 2), ('Lemon', 1), ('p-z-l', 1)",2,1,
Bunkermaster/crud-webp2020-g1,demo CRUD PHP garage d¬_¬b,"# Projet garage

# Définition
Le garage représente un... garage

* Nom (string 100)
* Marque (string 50)

# Sitemap

![](/reference/sitemap-crud-demo.png)

# CRUD

## Create

### Formulaire
GET /add.php

### Ajout dans la base de données
```sql
INSERT INTO `garage` (`nom`, `marque`) VALUES ('Stephane', 'Renault');
```
POST /doadd.php

## Read

### Lister
```sql
SELECT `id`, `nom`, `marque` FROM `garage`;
```
GET /index.php

### Visualiser les détails
```sql
SELECT `id`, `nom`, `marque` FROM `garage` WHERE id = 1;
```
GET /details.php?id=:id

## Update

### Formulaire
GET /edit.php?id=:id

### Modifier les données dans la base
```sql
UPDATE `garage` SET `marque` = ""Chevrolet"" WHERE id = 2;
``` 
POST /doedit.php

## Delete

### demande de confirmation
GET /delete.php?id=:id

### Effacer dans la base
```sql
DELETE FROM `garage` WHERE id = 2;
```
POST /dodelete.php
",,2017-11-22T15:45:39Z,2017-11-22T15:46:57Z,2,1,7,2,"('bunkermaster', 4), ('Bunkermaster', 1)",1,1,
magja/magja,Java Connector for Magento's API,"# Magja | Magento Java Connector
[![Build Status](https://travis-ci.org/magja/magja.svg?branch=master)](https://travis-ci.org/magja/magja)
[![codecov](https://codecov.io/gh/magja/magja/branch/master/graph/badge.svg)](https://codecov.io/gh/magja/magja)
[![Maven Central](https://maven-badges.herokuapp.com/maven-central/net.magja/magja/badge.svg)](https://maven-badges.herokuapp.com/maven-central/net.magja/magja)

Magja is a Java Connector for Magento's SOAP API that allows easy integration with the popular shop system
and allows to exchange all data available by the Magento API.

## Core Features
* Basic support for **Magento 1.x SOAP API V1**
* Allows access to:
  * Product
  * Product Media
  * Product Link
  * Product Categories
  * Product Attributes
  * Country
  * Region
  * Customer
  * Order
  * Invoice
  * Cart
* Extensible (without code generation) for custom API

## Documentation

The official documentation is located on the [Magja Homepage](http://magja.net/).

## Development notes

We use Travis CI to ensure that builds are passing. CodeCov is used to measure test coverage and SonarQube to find bugs.

Magja is build using Apache Maven. Please run:

    mvn clean package

to build the software. There is a Maven profile included, running the entire integration-test suite against a Magento Shop.
Please make sure to place your `magento-api.properties` file in `src/test/resources` and run the following command to execute the integration tests:

    mvn clean install -P itest

Fo producing a release, the following command is used (only if you have enough permissions to do so):

    mvn --batch-mode -Dmaven.test.skip=true -Dresume=false clean release:prepare release:perform

### Sonar metrics

[![Quality Gate](https://sonarqube.com/api/badges/gate?key=net.magja:magja)](https://sonarcloud.io/dashboard?id=net.magja%3Amagja)
[![Sonar Rating](https://sonarqube.com/api/badges/measure?key=net.magja:magja&metric=sqale_rating)](https://sonarcloud.io/dashboard?id=net.magja%3Amagja)
[![Sonar Debt Ration](https://sonarqube.com/api/badges/measure?key=net.magja:magja&metric=sqale_debt_ratio)](https://sonarcloud.io/dashboard?id=net.magja%3Amagja)
[![Sonar Reliability](https://sonarqube.com/api/badges/measure?key=net.magja:magja&metric=reliability_rating)](https://sonarcloud.io/dashboard?id=net.magja%3Amagja)

## References and History

Magja has been developed on Google Code, so old resources are still available at:

* Magja at google code: http://code.google.com/p/magja/
* Installation for use: http://code.google.com/p/magja/wiki/Installation
* Setup project for development: http://code.google.com/p/magja/wiki/SetupProject
* Wiki Pages: http://code.google.com/p/magja/w/list
",,2011-11-02T05:53:16Z,2022-06-29T18:52:17Z,26,11,45,26,"('andre@rockstore.com.br', 158), ('ceefour', 85), ('mail@konczalski.de', 57), ('pawel.konczalski@gmail.com', 32), ('zambrovski', 31), ('(no author)', 26), ('Atang Sutisna', 23), ('Rudi Wijaya', 23), ('marcolopespt@gmail.com', 17), ('ceefour666@gmail.com', 14), ('Rudi Wijaya', 11), ('hartmut-co-uk', 6), ('spark.unt', 4), ('oscarbou', 4), ('atangsutisna', 4), ('fr33d00m', 3), ('farsiado', 2), ('dhoepelman', 2), ('pawel.konczalski', 2), ('Ahmad Syarif Farsiado', 1), ('Hendy Irawan', 1), ('dependabotbot', 1), ('hartmut-ltd', 1), ('ihervin', 1), ('kerryrwilson', 1), ('svenakela', 1)",7,3,
blockapps/blockapps-ba,,"# Deprecation warning

**This demo application is deprecated in favor of https://github.com/blockapps/track-and-trace**


Blockapps BA
------------
[![BlockApps logo](https://blockapps.net/wp-content/uploads/2019/07/blockapps-logo-super-small.png)](http://blockapps.net)

### Supply Chain Demo App
This demo app uses STRATO blockchain platform and Smart Contracts to demonstrate a solution for a basic 2-party Supply Chain Workflow.

![Alt text](SupplyChain-Workflow.png?raw=true ""Supply Chain Workflow"")

![Alt text](sequence-diagram-05.png?raw=true ""Supply Chain Sequence Diagram"")

![Alt text](Demo_Application_Stack.png?raw=true ""Demo Application Stack"")

![Alt text](Production_Architecture.png?raw=true ""Production Architecture"")

### Pre Requisites

Node v7.2 or more recent.

This application requires a [BlockApps STRATO](http://blockapps.net/blockapps-strato-blockchain-application-development/) node. Follow the instruction in the [STRATO getting started guide](https://github.com/blockapps/strato-getting-started) to install a local instance.

Please make sure that ports 80, 3030, and 3031 are publicly accessible. If you are using AWS or Azure, you may need to allow traffic on these ports by changing the firewall settings.

Once you have a functional STRATO node, you can clone this project and deploy it to the STRATO instance using the instructions below.


### Dependencies

Install the dependencies

```
npm i
```

Install the UI dependencies

```
cd ui
npm i
```

### Deploying on Localhost

#### Uploading the smart contracts required by the demo app
 
If you are deploying using STRATO on `localhost` (Linux and Mac users only):
Run the following from the **project root**:

```
npm run deploy
```

Windows users should run

```
set ""SERVER=localhost"" & npm run deploy-windows
```

#### Launching the API

From the project root (Linux, Mac and Windows):

```
npm run start
```

#### Launching the UI

If you are deploying using STRATO on localhost (Linux and Mac users only):

```
cd ui
npm run start
```

On Windows:

```
cd ui
set ""REACT_APP_API_URL=http://localhost:3031"" & set ""PORT=3030"" & npm run start-windows
```

### Deploying on a remote server (AWS, azure etc)

Create a config file under `./server/config` with the naming convention `.config.yaml`. You are free to chose the `server-name`. 

Copy the content of `localhost.config.yaml` to a new file `.config.yaml`, located at `./server/config`. ou are free to chose the `server-name`. 

Configfure `.config.yaml` as follows:

```
apiDebug: true
password: '1234'
timeout: 600000
libPath: ./server/lib
contractsPath: ./contracts/
dataFilename: ./server/dapp/dapp.presets.yaml
deployFilename: ./server/config/.deploy.yaml

# WARNING - extra strict syntax
# DO NOT change the nodes order
# node 0 is the default url for all single node api calls
nodes:
  - id: 0
    explorerUrl: 'http://:9000'
    stratoUrl: 'http:///strato-api'
    blocUrl: 'http:///bloc/v2.2'
    searchUrl: 'http:///cirrus'
```

Replace  with the name of your config file (excluding `config.yaml`) and `` with the IP or the DNS name of your remote server and then run the following from the **project root**:

```
SERVER= npm run deploy
```

On Windows:

```
set ""SERVER="" & npm run deploy-windows
```

Here  can be 127.0.0.1 or the local network ip.

#### Launching the API

From the project root (Linux, Mac and Windows):

```
npm run start
```

#### Launching the UI

```
cd ui
API_URL=""http://:3031"" npm run start
```

On Windows:

```
cd ui
set ""REACT_APP_API_URL=http://:3031"" & set ""PORT=3030"" & npm run start-windows
```

where `` is the IP or DNS name of the remote machine. Eg: 

```
set ""REACT_APP_API_URL=http://some.remote.cloudapp.provider.com:3031"" & set ""PORT=3030"" & npm run start-windows
```

### Testing

```
npm run test
```

On Windows:

```
set ""SERVER="" & npm run test-windows
```


## Using the BlockApps Supply Chain Demo App

Open the app in the browser.

By default, application is running at http://localhost:3030/

### Logins for the app
The app comes pre loaded with four different users: `Buyer1`, `Buyer2`, `Supplier1`, `Supplier2`. All these users have the same password: `1234`.

### Bidding Flow Guide

- Buyer Logs in
![Bidding1](http://i.imgur.com/kKVZkZO.gif)

- Buyer creates a project for suppliers to bid on
![Bidding2](http://i.imgur.com/xADXnrX.gif)

- Supplier logs in
![Bidding3](http://i.imgur.com/jNke2we.gif)

- Supplier makes a bid on the earlier project
![Bidding4](http://i.imgur.com/4msxzoR.gif)

- Buyer accepts early supplier bid
![Bidding5](http://i.imgur.com/WmK3lO4.gif)

Note: After the buyer accepts the bid, 20 dollars from the buyer's account is taken and held by the smart contract but is still not disbursed until the product is accepted

- Supplier marks that the product is shipped
![Bidding6](http://i.imgur.com/qYSeMAk.gif)

- Buyer confirms that they recieved the product
![Bidding7](http://i.imgur.com/xD5g7dE.gif)


<!--![Bidding](http://i.imgur.com/3GdKBMj.gif)


![Bidding2](http://i.imgur.com/rQF6oK6.gif)


![Bidding3](http://i.imgur.com/RnCXrSO.gif)


![Bidding4](http://i.imgur.com/54TVkKh.gif)-->
",,2017-05-08T20:12:49Z,2020-01-14T15:49:49Z,18,15,81,34,"('liorsaar1', 155), ('samrit', 140), ('Nikita Mendelbaum', 45), ('nikitamendelbaum', 29), ('amousa11', 17), ('charlescrain', 5), ('swapnanildeb', 5), ('nikita-ng', 5), ('ccossette', 4), ('martyall', 3), ('Tim Holland', 3), ('kishorebhatia', 3), ('Tanooj0902', 2), ('dustinnorwood', 2), ('saketnewgen', 2), ('Egor Genning', 1), ('kjameslubin', 1), ('th0114nd', 1)",3,2,
trek/trek.github.com,Trek's Github page,,,2009-10-29T22:14:42Z,2013-03-09T17:25:36Z,6,6,32,7,"('trek', 77), ('latentflip', 3), ('CodeOfficer', 1), ('danshultz', 1), ('davidpett', 1), ('wagenet', 1)",4,4,
shichao-an/notes,Shichao's Notes,"# notes

[![Build Status][travis-image]][travis-link]

Documentation and source code for [Shichao's Notes](http://notes.shichao.io).

[travis-image]: https://img.shields.io/travis/shichao-an/notes/master.png
[travis-link]: https://travis-ci.org/shichao-an/notes
",,2015-04-27T03:47:03Z,2024-02-05T23:44:44Z,4,4,1123,71,"('shichao-an', 2421), ('avineku', 1), ('ruudk', 1), ('npes87184', 1)",3,3,
andrewoswald/jmerkle_sequential,Java B-tree Merkle tree implementation that alters and traverses its contents in a sequential manner.,"jmerkle_sequential
====================

The jmerkle_sequential library offers an extremely simple api to build, compare, and inspect Merkle tree data structures.  In addition to these operations,
jmerkle_sequential offers capability to marshal and unmarshal binary representations that can be consumed (or produced) in a technology agnostic
manner (assuming consumers and producers understand the established binary protocol).  Sequential is emphasized in the library's title because 
there are obvious opportunities for utilizing concurrency when altering as well as navigating Merkle tree structures (or any tree structure, for that 
matter).  Those opportunities shall be explored at some point in the future and perhaps implemented in languages other than Java.

While the virtues of the Merkle tree data structure itself are beyond the scope of this readme, the reader is encouraged to partake in research of their own.

For exploratory purposes, here is a very brief list of Merkle tree data structure usage (please contact me if I'm egregiously missing something):

 Amazon's Dynamo
 Basho's Luwak
 Apache Cassandra


The (English) wikipedia entry:
 Hash_tree

Other interesting uses are limited only to one's imagination.

Getting Started
---------------

The jmerkle_sequential library currently has no dependencies, but makes use of apache maven to produce its jar.

To build from source, assuming maven has been installed, from the directory where jmerkle_sequential's pom.xml is located, simply invoke

    mvn package
    

Usage
-----
The build, compare, and inspect operations are each made available through public static methods on the JMerkle class:

* Building and altering a merkle tree is done via 

```java
JMerkle.alter(JMerkle t1, List alterations);
```  
In the case of creating a new structure, the t1 parameter must be null.  The alter method produces either an abstract JMerkle object or null (in the case that there are no leaves).

* Inspecting a structure's contents is done via 

```java
JMerkle.allkeys(JMerkle t1);
```
The allkeys method produces a List&lt;String&gt; of t1's keys.

* Comparing two merkle tree structures is done via

```java
JMerkle.diff(JMerkle t1, JMerkle t2);
```
The diff function produces a List&lt;String&gt; of keys representing the values (leaves) that are different between the two trees.

In addition to the above operations, the jmerkle_sequential library offers the capability to marshal and unmarshal JMerkle structures to and
from the Java space.  Marshaling results in a byte[] that can be utilized by other languages so long as their implementation understands
the protocol (for example, merkle_parser provides an Erlang example that performs
allkeys and diff operations on the raw binary).

The marshal and unmarshal operations are each made available through public static methods on the JMerkleMarshaler class:

* Marshaling a JMerkle is done via
 
```java
JMerkleMarshaler.marshal(JMerkle t1);
```
The marshal method produces a byte[].

* Unmarshaling a marshaled value (originally from JMerkleMarshaler or elsewhere, assuming proper implementation) is done via 

```java
JMerkleMarshaler.unmarshal(byte[] treeBytes);
```
The unmarshal method produces an abstract JMerkle object.

Examples
--------

Here's a rudimentary example of using Merkle tree comparisons to reconcile data on a mobile device to that of a central server:

```java
import java.io.FileOutputStream;
import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import jmerkle.sequential.JMerkle;
import jmerkle.sequential.JMerkleAlterable;
import jmerkle.sequential.JMerkleMarshaler;


/**
 * Shows a simple example of how a mobile device might sync its
 * data with a central datastore through the use of Merkle tree
 * comparisons.
 */
public class HelloJMerkle {
    
    private static final String TMP_DIR = System.getProperty(""java.io.tmpdir"");
    
    public static void main(String[] args) throws Exception {
        
        //create the initial JMerkle structure, representative of an inventory:
        List initialInventoryAlterations = initialInventory();
        
        JMerkle initialInventoryTree = JMerkle.alter(null, initialInventoryAlterations);
        
        //mimic storage of the initialInventoryTree by marshaling it:
        byte[] marshaledInitialInventory = JMerkleMarshaler.marshal(initialInventoryTree);
        
        ////////////////////////////////////////////////////////////////////
        //uncomment below to store the marshaled ""initial inventory"" tree to 
        //the java.io.tmpdir (to try merkle_parser, etc):
        //FileOutputStream fos1 = new FileOutputStream(TMP_DIR + ""/InitialInventoryTree.out"");
        //fos1.write(marshaledInitialInventory);
        ////////////////////////////////////////////////////////////////////
        
        //mimic retrieval of the initialInventoryTree by unmarshaling the stored value:
        JMerkle unmarshaledInitialInventory = JMerkleMarshaler.unmarshal(marshaledInitialInventory);
        
        //client requests a bootstrap sync with the central data server; this is done
        //either by getting all the keys on the current inventory or by diff'ing an empty
        //(null) value to the current inventory.  we'll use the allkeys method:
        List allkeysBootstrap = JMerkle.allkeys(unmarshaledInitialInventory);
        
        System.out.println(""mobile device needs bootstrap data for the following inventory Widgets:"");
        System.out.println(allkeysBootstrap);
        
        //time passes, the mobile device goes offline... meanwhile the inventory changes w/ three updates:
        //a brand new Widget:
        Widget brandNewWidget = new Widget(""brand new!"", 99);
        
        //sold 1 widget2:
        Widget widget2 = new Widget(""widget2"", 2);
        
        //and all widget4's were sold:
        Widget widget4 = new Widget(""widget4"", null);
        
        //batch up the alterations:
        List alterations = new ArrayList(3);
        alterations.add(brandNewWidget);
        alterations.add(widget2);
        alterations.add(widget4);
        
        //and merge them into the initialInventoryTree: 
        JMerkle alteredInventoryTree = JMerkle.alter(initialInventoryTree, alterations);
        
        ////////////////////////////////////////////////////////////////////
        //uncomment below to store the marshaled ""altered inventory"" tree to
        //the java.io.tmpdir (to try merkle_parser, etc):
        //FileOutputStream fos2 = new FileOutputStream(TMP_DIR + ""/AlteredInventoryTree.out"");
        //fos2.write(JMerkleMarshaler.marshal(alteredInventoryTree));
        ////////////////////////////////////////////////////////////////////
        
        System.out.println(""after selling all of the widget4's, 1 widget2, and adding 99 \""brand new!\"" widgets, the current inventory consists of:"");
        System.out.println(JMerkle.allkeys(alteredInventoryTree));
        
        //the mobile device comes back online, requests an update to sync its data... this likely wouldn't involve
        //passing the entire JMerkle structure, only a minimal amount of data to identify the tree used when the
        //mobile device was bootstrapped:
        List diff = JMerkle.diff(unmarshaledInitialInventory, alteredInventoryTree);
        
        System.out.println(""mobile device needs to sync only the following values to be up to date on ALL widgets and their counts:"");
        System.out.println(diff); //notice, the device will be instructed that widget4 is no longer in stock.
        
        //etc., etc.
    }
    
    private static List initialInventory(){
        List initialInventory = new ArrayList(5);
        for(int i=0; i<5; i++) {
            initialInventory.add(new Widget(""widget""+i, i+1));
        }
        return initialInventory;
    }
    
    /**
     * Barebones JMerkleAlterable implementation.
     */
    private static class Widget implements JMerkleAlterable {
        
        private String productId;
        private Integer count;
        
        public Widget(String productId, Integer count) {
            this.productId = productId;
            this.count = count;
        }
        
        @Override
        public String getKey() {
            return productId;
        }

        @Override
        public Serializable getValue() {
            return count;
        }
    }
}
```

The output from the System.out.println calls:

mobile device needs bootstrap data for the following inventory Widgets:
[widget0, widget3, widget1, widget2, widget4]
after selling all of the widget4's, 1 widget2, and adding 99 ""brand new!"" widgets, the current inventory consists of:
[widget0, widget3, widget1, widget2, brand new!]
mobile device needs to sync only the following values to be up to date on ALL widgets and their counts:
[widget2, widget4, brand new!]",,2011-05-03T16:49:30Z,2011-06-03T15:22:04Z,1,1,18,4,"('andrewoswald', 73)",0,0,
angular-ui/bootstrap-bower,This is a bower repository to hold Angular UI Bootstrap releases.,"### UI Bootstrap - [AngularJS](http://angularjs.org/) directives specific to [Bootstrap](http://getbootstrap.com)

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/angular-ui/bootstrap?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)
[![Build Status](https://secure.travis-ci.org/angular-ui/bootstrap.svg)](http://travis-ci.org/angular-ui/bootstrap)
[![devDependency Status](https://david-dm.org/angular-ui/bootstrap/dev-status.svg?branch=master)](https://david-dm.org/angular-ui/bootstrap#info=devDependencies)

### Quick links
- [Demo](#demo)
- [Installation](#installation)
    - [NPM](#install-with-npm)
    - [Bower](#install-with-bower)
    - [NuGet](#install-with-nuget)
    - [Custom](#custom-build)
    - [Manual](#manual-download)
- [Support](#support)
    - [FAQ](#faq)
    - [Supported browsers](#supported-browsers)
    - [Need help?](#need-help)
    - [Found a bug?](#found-a-bug)
- [Contributing to the project](#contributing-to-the-project)
- [Development, meeting minutes, roadmap and more.](#development-meeting-minutes-roadmap-and-more)


# Demo

Do you want to see directives in action? Visit http://angular-ui.github.io/bootstrap/!

# Installation

Installation is easy as UI Bootstrap has minimal dependencies - only the AngularJS and Twitter Bootstrap's CSS are required.
Note: Since version 0.13.0, UI Bootstrap depends on [ngAnimate](https://docs.angularjs.org/api/ngAnimate) for transitions and animations, such as the accordion, carousel, etc. Include `ngAnimate` in the module dependencies for your app in order to enable animation.

#### Install with NPM

```sh
$ npm install angular-ui-bootstrap
```

This will install AngularJS and Bootstrap NPM packages.

#### Install with Bower
```sh
$ bower install angular-bootstrap
```

Note: do not install 'angular-ui-bootstrap'.  A separate repository - [bootstrap-bower](https://github.com/angular-ui/bootstrap-bower) - hosts the compiled javascript file and bower.json.

#### Install with NuGet
To install AngularJS UI Bootstrap, run the following command in the Package Manager Console

```sh
PM> Install-Package Angular.UI.Bootstrap
```

#### Custom build

Head over to http://angular-ui.github.io/bootstrap/ and hit the *Custom build* button to create your own custom UI Bootstrap build, just the way you like it.

#### Manual download

After downloading dependencies (or better yet, referencing them from your favorite CDN) you need to download build version of this project. All the files and their purposes are described here:
https://github.com/angular-ui/bootstrap/tree/gh-pages#build-files
Don't worry, if you are not sure which file to take, opt for `ui-bootstrap-tpls-[version].min.js`.

### Adding dependency to your project

When you are done downloading all the dependencies and project files the only remaining part is to add dependencies on the `ui.bootstrap` AngularJS module:

```js
angular.module('myModule', ['ui.bootstrap']);
```

If you're a Browserify or Webpack user, you can do:

```js
var uibs = require('angular-ui-bootstrap');

angular.module('myModule', [uibs]);
```

# Support

## FAQ

https://github.com/angular-ui/bootstrap/wiki/FAQ

## Supported browsers

Directives from this repository are automatically tested with the following browsers:
* Chrome (stable and canary channel)
* Firefox
* IE 9 and 10
* Opera
* Safari

Modern mobile browsers should work without problems.


## Need help?
Need help using UI Bootstrap?

* Live help in the IRC (`#angularjs` channel at the `freenode` network). Use this [webchat](https://webchat.freenode.net/) or your own IRC client.
* Ask a question in [StackOverflow](http://stackoverflow.com/) under the [angular-ui-bootstrap](http://stackoverflow.com/questions/tagged/angular-ui-bootstrap) tag.

**Please do not create new issues in this repository to ask questions about using UI Bootstrap**

## Found a bug?
Please take a look at [CONTRIBUTING.md](CONTRIBUTING.md#you-think-youve-found-a-bug) and submit your issue [here](https://github.com/angular-ui/bootstrap/issues/new).


----


# Contributing to the project

We are always looking for the quality contributions! Please check the [CONTRIBUTING.md](CONTRIBUTING.md) for the contribution guidelines.

# Development, meeting minutes, roadmap and more.

Head over to the [Wiki](https://github.com/angular-ui/bootstrap/wiki) for notes on development for UI Bootstrap, meeting minutes from the UI Bootstrap team, roadmap plans, project philosophy and more.
",,2013-03-14T20:46:27Z,2020-04-30T23:56:45Z,6,6,158,21,"('wesleycho', 46), ('pkozlowski-opensource', 15), ('chrisirhc', 7), ('ProLoser', 1), ('Foxandxss', 1), ('forestjohnsonilm', 1)",3,3,
priyankavergadia/google-cloud-4-words,The Google Cloud Developer's Cheat Sheet,"

# The Google Cloud Developer's Cheat Sheet
Every product, feature and service in the Google Cloud family described in <=4 words (with liberal use of hyphens and slashes :smirk:) by the Google Developer Relations Team

Check out the *NEW* [interactive version of the cheat sheet](https://goo.gle/GCdevelopercheatsheet) 

Here are the downloadable versions as well: 

White background:
[High-resolution PNG](Poster-hires.png)
|
[Medium-res PNG](Poster-medres.png)
|
[Low-res PNG](Poster-lowres.png)\
Dark background:
[High-resolution PNG](DarkPoster-hires.png)
|
[Medium-res PNG](DarkPoster-medres.png)
|
[Low-res PNG](DarkPoster-lowres.png)
Desktop Wallpapers: [16:9 (iMac, etc.)](Wallpaper-16-9.png) | [16:10 (Macbook Pro)](Wallpaper-16-10.png) | [4:3 (Older computers)](Wallpaper-4-3.png) | [3:2 (Pixelbook)](Wallpaper-3-2.png)\



Text descriptions with links are below

Suggestions for better descriptions? Missing products? Pull requests are welcome on README.md (this file).

Feedback? [@pvergadia](https://twitter.com/pvergadia) or [@GoogleCloudTech](https://twitter.com/GoogleCloudTech). 

**Note:** This list only includes products that are publicly available. There are several products in pre-release/private-alpha that will not be included until they go public preview, beta or GA.

Fun flashback - [here's the list of products in 2014](https://web.archive.org/web/20140702161745/https://cloud.google.com/products/)

Many of these products have a [free tier](https://cloud.google.com/free/). There is also a [free trial](https://console.cloud.google.com/freetrial) that will enable you try almost everything.

Many of these products have a [visual Google Cloud Sketchnote](https://goo.gle/gcpsketchnote) to provide you a one pager visual overview of what each of these products are and how you can use them.

----------------------------
# All Products
:link:-Product page
:page_facing_up:-Documentation

### Compute


* **Cloud Functions**: Event-driven serverless functions [:link:](https://cloud.google.com/functions/) [:page_facing_up:](https://cloud.google.com/functions/docs/)
* **App Engine**: Managed app platform [:link:](https://cloud.google.com/appengine/) 
[:page_facing_up:](https://cloud.google.com/appengine/docs/)
* **Cloud Run**: Serverless for containerized applications [:link:](https://cloud.google.com/run/) [:page_facing_up:](https://cloud.google.com/run/docs/)
* **Google Kubernetes Engine (GKE)**: Managed Kubernetes/containers [:link:](https://cloud.google.com/kubernetes-engine/) [:page_facing_up:](https://cloud.google.com/kubernetes-engine/docs/)
* **Compute Engine**: VMs, GPUs, TPUs, Disks [:link:](https://cloud.google.com/compute/) [:page_facing_up:](https://cloud.google.com/compute/docs/)
* **Bare Metal Solution**: Hardware for specialized workloads [:link:](https://cloud.google.com/bare-metal) 
* **Preemptible VMs**: Short-lived compute instances [:link:](https://cloud.google.com/preemptible-vms) [:page_facing_up:](https://cloud.google.com/compute/docs/instances/preemptible)
* **Shielded VMs**: Hardened VMs [:link:](https://cloud.google.com/shielded-vm/) [:page_facing_up:](https://cloud.google.com/security/shielded-cloud/shielded-vm/)
* **Sole-tenant Nodes**: Dedicated physical servers [:link:](https://cloud.google.com/sole-tenant-nodes) [:page_facing_up:](https://cloud.google.com/compute/docs/nodes)
* **VMware Engine**: VMware as a service [:link:](https://cloud.google.com/vmware-engine) [:page_facing_up:](https://cloud.google.com/vmware-engine/docs)

### Storage
  
* **Cloud Filestore**: Managed NFS server [:link:](https://cloud.google.com/filestore/) [:page_facing_up:](https://cloud.google.com/filestore/docs/)
* **Cloud Storage**: Multi-class multi-region object storage[:link:](https://cloud.google.com/storage/) [:page_facing_up:](https://cloud.google.com/storage/docs/)
* **Persistent Disk**: Block storage for VMs [:link:](https://cloud.google.com/persistent-disk/) [:page_facing_up:](https://cloud.google.com/compute/docs/disks/)
* **Local SSD**: VM locally attached SSDs [:link:](https://cloud.google.com/local-ssd) [:page_facing_up:](https://cloud.google.com/compute/docs/disks/local-ssd)
  
### Database 
  
* **Cloud Bigtable**: Petabyte-scale, low-latency, non-relational [:link:](https://cloud.google.com/bigtable/) [:page_facing_up:](https://cloud.google.com/bigtable/docs/)
* **Cloud Firestore**: Serverless NoSQL document database [:link:](https://cloud.google.com/firestore/) [:page_facing_up:](https://cloud.google.com/firestore/docs/)
* **Cloud Memorystore**: Managed Redis and Memcached [:link:](https://cloud.google.com/memorystore/) [:page_facing_up:](https://cloud.google.com/memorystore/docs/)
* **Cloud Spanner**: Horizontally scalable relational database [:link:](https://cloud.google.com/spanner/) [:page_facing_up:](https://cloud.google.com/spanner/docs/)
* **Cloud SQL**: Managed MySQL, PostgreSQL, SQL Server [:link:](https://cloud.google.com/sql/) [:page_facing_up:](https://cloud.google.com/sql/docs/)
* **Database Migration Service**: Migrate to Cloud SQL [:link:](https://cloud.google.com/database-migration) [:page_facing_up:](https://cloud.google.com/database-migration/docs)
* **Cloud SQL Insights**: SQL Inspector [:link:](https://cloud.google.com/sql/docs/postgres/insights-overview) [:page_facing_up:](https://cloud.google.com/sql/docs/postgres/using-insights)
  
### Data Analytics 
  
* **BigQuery**: Data warehouse and analytics [:link:](https://cloud.google.com/bigquery/) [:page_facing_up:](https://cloud.google.com/bigquery/docs/)
* **BigQuery BI Engine**: In-memory analytics engine [:page_facing_up:](https://cloud.google.com/bi-engine/docs/)
* **BigQuery ML**: BigQuery model training/serving [:page_facing_up:](https://cloud.google.com/bigquery-ml/docs/)
* **BigQuery GIS**: BigQuery geospatial functions/support [:page_facing_up:](https://cloud.google.com/bigquery/docs/gis)
* **BigQuery Data Transfer Service**: Automated data ingestion service [:page_facing_up:](https://cloud.google.com/bigquery-transfer/docs)
* **Connected Sheets**: Spreadsheet interface for (big)data [:page_facing_up:](https://cloud.google.com/bigquery/docs/connected-sheets)
* **Cloud Composer**: Managed workflow orchestration service [:link:](https://cloud.google.com/composer/) [:page_facing_up:](https://cloud.google.com/composer/docs/)
* **Cloud Data Fusion**: Graphically manage data pipelines [:link:](https://cloud.google.com/data-fusion/) [:page_facing_up:](https://cloud.google.com/data-fusion/docs/)
* **Dataflow**: Stream/batch data processing [:link:](https://cloud.google.com/dataflow/) [:page_facing_up:](https://cloud.google.com/dataflow/docs/)
* **Dataprep by Trifacta**: Visual data wrangling [:link:](https://cloud.google.com/dataprep/) [:page_facing_up:](https://cloud.google.com/dataprep/docs/)
* **Dataproc**: Managed Spark and Hadoop [:link:](https://cloud.google.com/dataproc/) [:page_facing_up:](https://cloud.google.com/dataproc/docs/)
* **Datastream**: Change data capture/replication service [:link:](https://cloud.google.com/datastream) [:page_facing_up:](https://cloud.google.com/datastream/docs)
* **Pub/Sub**: Global real-time messaging [:link:](https://cloud.google.com/pubsub/) [:page_facing_up:](https://cloud.google.com/pubsub/docs/)
* **Data Catalog**: Metadata management service  [:link:](https://cloud.google.com/data-catalog/) [:page_facing_up:](https://cloud.google.com/data-catalog/docs/)
* **Google Data Studio**: Collaborative data exploration/dashboarding [:link:](https://datastudio.google.com/overview) [:page_facing_up:](https://datastudio.google.com/overviewdocs/)
* **Looker**: Enterprise BI and analytics [:link:](https://cloud.google.com/looker)
* **Public Datasets**: Hosted data in BigQuery[:page_facing_up:](https://cloud.google.com/public-datasets)


### Hybrid and multi-cloud
* **Anthos**: Enterprise hybrid/multi-cloud platform [:link:](https://cloud.google.com/anthos/) [:page_facing_up:](https://cloud.google.com/anthos/docs/)
* **Anthos clusters**: Hybrid/on-premises GKE [:link:](https://cloud.google.com/anthos/gke) [:page_facing_up:](https://cloud.google.com/anthos/gke/docs/on-prem/)
* **Anthos Config Management**:Policy and security automation [:link:](https://cloud.google.com/anthos/config-management) [:page_facing_up:](https://cloud.google.com/anthos-config-management/docs)
* **Anthos Service Mesh**: Managed service mesh (Istio) [:link:](https://cloud.google.com/anthos/service-mesh) [:page_facing_up:](https://cloud.google.com/service-mesh/docs)
* **Cloud Run for Anthos**: Serverless development for Anthos [:link:](https://cloud.google.com/anthos/run) [:page_facing_up:](https://cloud.google.com/run/docs/quickstarts/prebuilt-deploy-gke)
* **Google Cloud Marketplace for Anthos**: Pre-configured containerized apps [:link:](https://cloud.google.com/kubernetes-applications) [:page_facing_up:](https://cloud.google.com/marketplace/docs/kubernetes-apps)
* **Migrate for Anthos and GKE**: Migrate VMs to GKE [:link:](https://cloud.google.com/migrate/anthos/) [:page_facing_up:](https://cloud.google.com/migrate/anthos/docs/getting-started)
* **Google Cloud's operations suite**: Monitoring, logging, troubleshooting [:link:](https://cloud.google.com/products/operations) [:page_facing_up:](https://cloud.google.com/stackdriver/docs)
* **Traffic Director**: Service mesh traffic management [:link:](https://cloud.google.com/traffic-director/) [:page_facing_up:](https://cloud.google.com/traffic-director/docs/)
* **Apigee API Management**: API management, development, security [:link:](https://cloud.google.com/apigee)


### AI and ML

* **Vertex AI**: Managed platform for ML [:link:](https://cloud.google.com/ai-platform/) 
* **AutoML**: Custom low-code models [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/training/training)
* **Vertex AI Data Labeling**: Data labeling by humans [:page_facing_up:](https://cloud.google.com/data-labeling/docs/)
* **Deep Learning VM Images**: Preconfigured VMs for deep learning [:link:](https://cloud.google.com/deep-learning-vm/) [:page_facing_up:](https://cloud.google.com/deep-learning-vm/docs/)
* **Vertex AI Workbench**:Jupyter-based environment for Data Science  [:link:](https://cloud.google.com/vertex-ai-workbench)  [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/workbench)
* **Deep Learning Containers**: Preconfigured containers for deep learning [:link:](https://cloud.google.com/ai-platform/deep-learning-containers/) [:page_facing_up:](https://cloud.google.com/ai-platform/deep-learning-containers/docs/)
* **Vertex AI Matching Engine**: Vector similarity searches [:link:](https://cloud.google.com/vertex-ai/docs/matching-engine)[:page_facing_up:](https://cloud.google.com/vertex-ai/docs/matching-engine)
* **Vertex AI Pipelines**: Hosted ML workflows[:link:](https://cloud.google.com/ai-platform/pipelines/)
* **Vertex AI Predictions**: Autoscaled model serving [:page_facing_up:](https://cloud.google.com/ai-platform/prediction/docs/overview)
* **Vertex AI Training**: Distributed AI training [:page_facing_up:](https://cloud.google.com/ai-platform/training/docs/overview)
* **Vertex AI Edge Manager**: Deploy monitor edge inferences [:page_facing_up:](https://https://cloud.google.com/vertex-ai/docs/)
* **Vertex Explainable AI**: Understand ML model predictions [:link:](https://cloud.google.com/vertex-ai/docs/explainable-ai/overview) [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/explainable-ai)
* **Vertex AI Feature Store**: Managed ML feature repository [:link:](https://cloud.google.com/vertex-ai/docs/featurestore) [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/featurestore/overview)
* **Vertex ML Metadata**: Artifact, lineage, and execution tracking [:link:](https://cloud.google.com/vertex-ai/docs/ml-metadata) [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/ml-metadata/introduction)
* **Vertex AI Model Monitoring**: Monitor models for skew/drift [:link:](https://cloud.google.com/vertex-ai/docs/model-monitoring) [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/model-monitoring/overview)
* **Vertex AI Tensorboard**: Managed TensorBoard for ML-experiment Visualization [:link:](https://cloud.google.com/vertex-ai/docs/experiments) [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/experiments/tensorboard-overview)
* **Vertex AI Vizier**: black-box hyperparameter tuning [:link:](https://cloud.google.com/vertex-ai/docs/vizier/overview) [:page_facing_up:](https://cloud.google.com/vertex-ai/docs/vizier)
* **Speech-To-Text**: Convert audio to text [:link:](https://cloud.google.com/speech/) [:page_facing_up:](https://cloud.google.com/speech/docs/)
* **Talent Solutions**: Job search with ML [:link:](https://cloud.google.com/job-discovery/) [:page_facing_up:](https://cloud.google.com/job-discovery/docs/)
* **Text-To-Speech**: Convert text to audio [:link:](https://cloud.google.com/text-to-speech/) [:page_facing_up:](https://cloud.google.com/text-to-speech/docs/)
* **Cloud TPU**: Hardware acceleration for ML [:link:](https://cloud.google.com/tpu/) [:page_facing_up:](https://cloud.google.com/tpu/docs/)
* **Cloud Translation**: Language detection and translation [:link:](https://cloud.google.com/translate/) [:page_facing_up:](https://cloud.google.com/translate/docs/)
* **Cloud Video Intelligence API**: Scene-level video annotation [:link:](https://cloud.google.com/video-intelligence/) [:page_facing_up:](https://cloud.google.com/video-intelligence/docs/)
* **Cloud Vision**: Image recognition and classification [:link:](https://cloud.google.com/vision/) [:page_facing_up:](https://cloud.google.com/vision/docs/)
* **Contact Center AI**: AI in your contact center[:link:](https://cloud.google.com/solutions/contact-center/) [:page_facing_up:](https://cloud.google.com/solutions/contact-center/)
* **Dialogflow**: Create conversational interfaces [:link:](https://cloud.google.com/dialogflow-enterprise/) [:page_facing_up:](https://cloud.google.com/dialogflow-enterprise/docs/)
* **Document AI**: Analyze, classify, search documents [:link:](https://cloud.google.com/solutions/document-understanding/) [:page_facing_up:](https://cloud.google.com/document-understanding/docs/)
* **Recommendations AI**: Create custom recommendations [:link:](https://cloud.google.com/recommendations/) [:page_facing_up:](https://cloud.google.com/recommendations-ai/docs/)
* **Vision Product Search**: Visual search for products [:page_facing_up:](https://cloud.google.com/vision/product-search/docs/)

### Networking 
  
* **Carrier Peering**: Peer through a carrier [:page_facing_up:](https://cloud.google.com/interconnect/docs/how-to/carrier-peering)
* **Direct Peering**: Peer with Google Cloud [:page_facing_up:](https://cloud.google.com/interconnect/docs/how-to/direct-peering)
* **Dedicated Interconnect**: Dedicated private network connection [:page_facing_up:](https://cloud.google.com/interconnect/docs/details/dedicated)
* **Partner Interconnect**: Connect on-prem network to VPC [:page_facing_up:](https://cloud.google.com/interconnect/docs/concepts/partner-overview)
* **Google Cloud Armor**: DDoS protection and WAF [:link:](https://cloud.google.com/armor/) [:page_facing_up:](https://cloud.google.com/armor/docs/)
* **Cloud CDN**: Content delivery network [:link:](https://cloud.google.com/cdn/) [:page_facing_up:](https://cloud.google.com/cdn/docs/)
* **Cloud DNS**: Programmable DNS serving [:link:](https://cloud.google.com/dns/) [:page_facing_up:](https://cloud.google.com/dns/docs/)
* **Cloud Load Balancing**: Multi-region load distribution/balancing [:link:](https://cloud.google.com/load-balancing/) [:page_facing_up:](https://cloud.google.com/load-balancing/)
* **Cloud NAT**: Network address translation service [:page_facing_up:](https://cloud.google.com/nat/docs/overview/)
* **Cloud Router**: VPC/on-prem network route exchange (BGP) [:page_facing_up:](https://cloud.google.com/router/docs/)
* **Cloud VPN**: Virtual private network connection[:page_facing_up:](https://cloud.google.com/compute/docs/vpn/overview)
* **Network Service Tiers**: Price versus performance tiering [:link:](https://cloud.google.com/network-tiers/) [:page_facing_up:](https://cloud.google.com/network-tiers/docs/)
* **Network Telemetry**: Network telemetry service [:link:](https://cloud.google.com/network-telemetry/) [:page_facing_up:](https://cloud.google.com/vpc/docs/using-flow-logs/)
* **Traffic Director**: Service mesh traffic management [:link:](https://cloud.google.com/traffic-director/) [:page_facing_up:](https://cloud.google.com/traffic-director/docs/)
* **Anthos Service Mesh**: Service-aware network management [:link:](https://cloud.google.com/service-mesh/) [:page_facing_up:](https://cloud.google.com/trace/docs/)
* **Virtual Private Cloud**: Software defined networking [:link:](https://cloud.google.com/vpc/) [:page_facing_up:](https://cloud.google.com/vpc/docs/)
* **Cloud Domains**: Register, transfer, manager domains [:link:](https://cloud.google.com/domains) [:page_facing_up:](https://cloud.google.com/domains/docs/)
* **VPC Service Controls**: Security perimeters for API-based services [:link:](https://cloud.google.com/vpc-service-controls/) [:page_facing_up:](https://cloud.google.com/vpc-service-controls/)
* **Network Intelligence Center**: Network monitoring and topology [:link:](https://cloud.google.com/network-intelligence-center/)
[:page_facing_up:](https://cloud.google.com/network-intelligence-center/docs/)
* **Service Directory**: Centrally publish/discover/connect services [:link:](https://cloud.google.com/service-directory)
[:page_facing_up:](https://cloud.google.com/service-directory/docs)
* **Private Service Connect**: Privately connect services across VPCs [:link:](https://cloud.google.com/service-directory)
[:page_facing_up:](https://cloud.google.com/vpc/docs/private-service-connect)
* **Network Connectivity Center**: Connect VPC & On-prem [:link:](https://cloud.google.com/network-connectivity-center)
[:page_facing_up:](https://cloud.google.com/network-connectivity/docs/network-connectivity-center)
* **Packet Mirroring**: Monitor/analyze instance traffic [:page_facing_up:](https://cloud.google.com/vpc/docs/packet-mirroring)
* **Cloud IDS**: Detects network based threats [:link:](https://cloud.google.com/intrusion-detection-system)
[:page_facing_up:](https://cloud.google.com/intrusion-detection-system/docs)
 

### Identity and Security
  
* **Access Transparency**: Audit cloud provider access [:link:](https://cloud.google.com/access-transparency/) [:page_facing_up:](https://cloud.google.com/logging/docs/audit/access-transparency-overview/)
* **Assured Workloads**: Workload compliance controls [:link:](https://cloud.google.com/assured-workloads) [:page_facing_up:](https://cloud.google.com/assured-workloads/docs)
* **Binary Authorization**: Kubernetes deploy-time security [:link:](https://cloud.google.com/binary-authorization/) [:page_facing_up:](https://cloud.google.com/binary-authorization/docs/)
* **Certificate Authority Service**: Managed private CAs [:link:](https://cloud.google.com/certificate-authority-service) [:page_facing_up:](https://cloud.google.com/certificate-authority-service/docs)
* **Cloud Asset Inventory**: All assets, one place [:link:](https://cloud.google.com/asset-inventory) [:page_facing_up:](https://cloud.google.com/asset-inventory/docs/overview)
* **Cloud Audit Logs**: Audit trails for Google Cloud [:link:](https://cloud.google.com/audit-logs/) [:page_facing_up:](https://cloud.google.com/logging/docs/audit/)
* **Cloud Data Loss Prevention (DLP)**: Classify and redact sensitive data [:link:](https://cloud.google.com/dlp/) [:page_facing_up:](https://cloud.google.com/dlp/docs/)
* **Cloud HSM**: Hardware security module service [:link:](https://cloud.google.com/hsm/) [:page_facing_up:](https://cloud.google.com/kms/docs/hsm/)
* **Cloud External Key Manager (EKM)**: External keys you control [:link:](https://cloud.google.com/ekm/) [:page_facing_up:](https://cloud.google.com/kms/docs/ekm/)
* **Cloud IAM**: Resource access control [:link:](https://cloud.google.com/iam/) [:page_facing_up:](https://cloud.google.com/iam/docs/)
* **Cloud Identity**: Manage users, devices & apps [:link:](https://cloud.google.com/identity/) [:page_facing_up:](https://cloud.google.com/identity/solutions/overview/)
* **Cloud Identity-Aware Proxy**: Identity-based app access [:link:](https://cloud.google.com/iap/) [:page_facing_up:](https://cloud.google.com/iap/docs/)
* **Cloud Key Management Service**: Hosted key management service [:link:](https://cloud.google.com/kms/) [:page_facing_up:](https://cloud.google.com/kms/docs/)
* **Resource Manager**: Cloud project metadata management [:link:](https://cloud.google.com/resource-manager/) [:page_facing_up:](https://cloud.google.com/resource-manager/docs/)
* **Security Command Center**: Security management and data risk platform [:link:](https://cloud.google.com/security-command-center/) [:page_facing_up:](https://cloud.google.com/security-command-center/docs/)
* **Web Security Scanner**: App engine security scanner [:link:](https://cloud.google.com/security-scanner/) [:page_facing_up:](https://cloud.google.com/security-scanner/docs/)
* **Confidential Computing**: Encrypt data in-use [:link:](https://cloud.google.com/confidential-computing) [:page_facing_up:](https://cloud.google.com/confidential-computing/docs)
* **Access Context Manager**: End-user attribute-based access control [:link:](https://cloud.google.com/context-aware-access/) [:page_facing_up:](https://cloud.google.com/iap/docs/cloud-iap-context-aware-access-howto/)
* **Event Threat Detection**: Scans for suspicious activity [:link:](https://cloud.google.com/event-threat-detection/) 
* **Managed Service for Microsoft Active Directory**: Managed Microsoft Active Directory  [:link:](https://cloud.google.com/managed-microsoft-ad/) [:page_facing_up:](https://cloud.google.com/managed-microsoft-ad/docs/)
* **Secret Manager**: Store and manage secrets [:link:](https://cloud.google.com/secret-manager/) [:page_facing_up:](https://cloud.google.com/secret-manager/docs/)
* **Security Key Enforcement**: Two-step key verification [:link:](https://cloud.google.com/security-key/)
* **Shielded VMs**: Hardened VMs [:link:](https://cloud.google.com/shielded-vm/) [:page_facing_up:](https://cloud.google.com/security/shielded-cloud/shielded-vm/)
* **Titan Security Key**: Two-factor authentication (2FA) device [:link:](https://cloud.google.com/titan-security-key/)
* **VPC Service Controls**: VPC data constraints [:link:](https://cloud.google.com/vpc-service-controls/) [:page_facing_up:](https://cloud.google.com/vpc-service-controls/docs/)
* **Chronicle**: Find threats from security telemetry  [:link:](https://chronicle.security/products/platform/) 
* **VirusTotal**: Research/hunt for malware  [:link:](https://chronicle.security/products/virustotal/) 
* **Risk Manager**: Evaluate organization’s security posture  [:link:](https://cloud.google.com/risk-manager/docs) 
* **reCAPTCHA Enterprise**: Protection against bot/spam/abuse [:link:](https://cloud.google.com/recaptcha-enterprise) [:page_facing_up:](https://cloud.google.com/recaptcha-enterprise/docs/)
* **BeyondCorp Enterprise**: Zero trust secure access [:link:](https://cloud.google.com/beyondcorp-enterprise) [:page_facing_up:](https://cloud.google.com/beyondcorp-enterprise/docs)
* **Access Context Manager**: Fine-grained, attribute based access-control [:page_facing_up:](https://cloud.google.com/access-context-manager/docs)
* **Web Security Scanner**: Identifies  web-app security vulnerabilities [:page_facing_up:](https://cloud.google.com/security-command-center/docs/concepts-web-security-scanner-overview)


### Operations & Monitoring
* **Cloud Debugger**: Live production debugging [:link:](https://cloud.google.com/debugger/) [:page_facing_up:](https://cloud.google.com/debugger/docs/)
* **Error Reporting**: App error reporting [:link:](https://cloud.google.com/error-reporting/) [:page_facing_up:](https://cloud.google.com/error-reporting/docs/)
* **Cloud Logging**: Centralized logging [:link:](https://cloud.google.com/logging/) [:page_facing_up:](https://cloud.google.com/logging/docs/)
* **Cloud Monitoring**: Infrastructure and application monitoring [:link:](https://cloud.google.com/monitoring/) [:page_facing_up:](https://cloud.google.com/monitoring/docs/)
* **Cloud Profiler**: CPU and heap profiling [:link:](https://cloud.google.com/profiler/) [:page_facing_up:](https://cloud.google.com/profiler/docs/)
* **Cloud Trace**: App latency insights [:link:](https://cloud.google.com/trace/) [:page_facing_up:](https://cloud.google.com/trace/docs/)  
 
 
### DevOps CI/CD

* **Cloud Build**: Continuous integration/delivery platform [:link:](https://cloud.google.com/cloud-build/) [:page_facing_up:](https://cloud.google.com/cloud-build/docs/)
* **Cloud Deploy**: Deployment pipeline for GKE [:link:](https://cloud.google.com/deploy) [:page_facing_up:](https://cloud.google.com/deploy/docs/)
* **Artifact Registry**: Universal package manager [:link:](https://cloud.google.com/artifacts/) [:page_facing_up:](https://cloud.google.com/artifacts/)
* **Cloud Source Repositories**: Hosted private git repos [:link:](https://cloud.google.com/source-repositories/) [:page_facing_up:](https://cloud.google.com/source-repositories/docs/)
* **Container Registry**: Private container registry/storage [:link:](https://cloud.google.com/container-registry/) [:page_facing_up:](https://cloud.google.com/container-registry/docs/)


### Application Integration
* **Eventarc**: Event-driven Cloud Run services [:link:](https://cloud.google.com/eventarc/) [:page_facing_up:](https://cloud.google.com/eventarc/docs/)
* **Cloud Scheduler**: Managed cron job service [:link:](https://cloud.google.com/scheduler/) [:page_facing_up:](https://cloud.google.com/scheduler/docs/)
* **Cloud Tasks**: Asynchronous task execution [:link:](https://cloud.google.com/tasks/) [:page_facing_up:](https://cloud.google.com/tasks/docs/)
* **Workflows**: HTTP services orchestration [:link:](https://cloud.google.com/workflows/) [:page_facing_up:](https://cloud.google.com/workflows/docs/)
* **Pub/Sub**: Global real-time messaging [:link:](https://cloud.google.com/pubsub/) [:page_facing_up:](https://cloud.google.com/pubsub/docs/)


### API Platform and Ecosystems   
* **API Analytics**: API metrics [:link:](https://cloud.google.com/api-analytics/)
* **API Monetization**: Monetize APIs [:link:](https://cloud.google.com/api-monetization/)
* **Apigee API Platform**: Develop, secure, monitor APIs [:link:](https://cloud.google.com/apigee-api-management/)
* **API Gateway**: Fully managed API Gateway [:link:](https://cloud.google.com/api-gateway)
* **Apigee Hybrid**: Manage hybrid/multi-cloud API environments [:link:](https://cloud.google.com/apigee/api-management/hybrid/)[:page_facing_up:](https://docs.apigee.com/hybrid/beta2)
* **Apigee Sense**: API protection from attacks [:link:](https://cloud.google.com/apigee-sense/)
* **Cloud Endpoints**: Cloud API gateway [:link:](https://cloud.google.com/endpoints/)
* **Developer Portal**: API management portal [:link:](https://cloud.google.com/developer-portal/)
* **Marketplace**: Partner & open source marketplace [:link:](https://cloud.google.com/marketplace/)
* **AppSheet**: No-code App creation [:link:](https://www.appsheet.com/)

### Internet of Things (IoT) 
  
* **Cloud IoT Core**: Manage devices, ingest data [:link:](https://cloud.google.com/iot-core/) [:page_facing_up:](https://cloud.google.com/iot-core/docs/)
  
### Gaming
* **Google Cloud Game Servers**: Orchestrate Agones clusters [:link:](https://cloud.google.com/game-servers)

### Healthcare
* **Cloud Healthcare API**: Healthcare system Google Cloud interoperability [:link:](https://cloud.google.com/healthcare-api/)
* **Apigee Healthcare APIx**: Healthcare system Google Cloud interoperability [:link:](https://cloud.google.com/solutions/apigee-health-apix)
* **Healthcare Natural Language AI**: Real-time insights from media-text [:link:](https://cloud.google.com/healthcare-api/docs/how-tos/nlp)
* *Cloud Life Sciences**: Manage, process, transform biomedical-data [:link:](https://cloud.google.com/life-sciences)[:page_facing_up:](https://cloud.google.com/life-sciences/docs)


### Retail
* **Vision Product Search**: Visual search for products [:page_facing_up:](https://cloud.google.com/vision/product-search/docs/)
* **Recommendations AI**: Create custom recommendations [:link:](https://cloud.google.com/recommendations/) [:page_facing_up:](https://cloud.google.com/recommendations-ai/docs/)
* **Visual Inspection AI**: Train/deploy models to detect defects [:link:](https://cloud.google.com/solutions/visual-inspection-ai) 


 ### Management Tools
* **VM Manager**: Manage OS VM Fleets [:page_facing_up:](https://cloud.google.com/compute/docs/vm-manager)
* **Cloud APIs**: APIs for cloud services [:link:](https://cloud.google.com/apis/) [:page_facing_up:](https://cloud.google.com/apis/docs/)
* **Cloud Billing API**: Programmatically manage Google Cloud billing [:page_facing_up:](https://cloud.google.com/billing/docs/)
* **Cloud Billing**: Billing and cost management tools [:link:](https://cloud.google.com/billing/docs/) [:page_facing_up:](https://cloud.google.com/billing/docs/docs/)
* **Cloud Console**: Web-based management console [:link:](https://cloud.google.com/cloud-console/)
* **Cloud Deployment Manager**: Templated infrastructure deployment [:link:](https://cloud.google.com/deployment-manager/) [:page_facing_up:](https://cloud.google.com/deployment-manager/docs/)
* **Cloud Mobile App**: iOS/Android Google Cloud manager app [:link:](https://cloud.google.com/console-app/)
* **Private Catalog**: Internal Solutions Catalog [:link:](https://cloud.google.com/private-catalog/) [:page_facing_up:](https://cloud.google.com/private-catalog/docs/)
* **Carbon Footprint**: Report and reduce carbon emissions [:link:](https://cloud.google.com/carbon-footprint) [:page_facing_up:](https://cloud.google.com/carbon-footprint/docs)


### Developer Tools  
  
* **Cloud Code for IntelliJ**: IntelliJ Google Cloud tools [:link:](https://cloud.google.com/intellij/)
* **Cloud Code for VS Code**: VS Code Google Cloud tools [:link:](https://cloud.google.com/code/docs/vscode/)
* **Cloud Code**: Cloud native IDE extensions [:link:](https://cloud.google.com/code/) [:page_facing_up:](https://cloud.google.com/code/docs/)
* **Cloud Tools for Eclipse**: Eclipse Google Cloud tools [:link:](https://cloud.google.com/eclipse/docs/)
* **Cloud Tools for Visual Studio**: Visual Studio Google Cloud tools [:link:](https://cloud.google.com/visual-studio/)
* **App Engine Plugins**: Gradle/Maven App Engine plugin [:link:](https://github.com/GoogleCloudPlatform/app-gradle-plugin)
* **Cloud SDK**: CLI for Google Cloud [:link:](https://cloud.google.com/sdk/) [:page_facing_up:](https://cloud.google.com/sdk/docs/)
* **Cloud Shell**: Browser-based terminal/CLI [:link:](https://cloud.google.com/shell/) [:page_facing_up:](https://cloud.google.com/shell/docs/)


### Migration to Google Cloud  
  
* **BigQuery Data Transfer Service**: Bulk import analytics data [:link:](https://cloud.google.com/bigquery/transfer/) [:page_facing_up:](https://cloud.google.com/bigquery/transfer/docs/)
* **Cloud Data Transfer**: Data migration tools/CLI [:link:](https://cloud.google.com/products/data-transfer/)
* **Google Transfer Appliance**: Rentable data transport box [:link:](https://cloud.google.com/transfer-appliance/) [:page_facing_up:](https://cloud.google.com/transfer-appliance/docs/)
* **Storage Transfer Service**: Online/on-premises data transfer [:page_facing_up:](https://cloud.google.com/storage-transfer-service/)
* **Migrate for Anthos and GKE**: Migrate VMs to GKE [:link:](https://cloud.google.com/migrate/anthos/) [:page_facing_up:](https://cloud.google.com/migrate/anthos/docs/getting-started)
* **Migrate for Compute Engine**: Compute Engine migration tools [:link:](https://",,2018-11-27T19:07:58Z,2024-04-06T10:56:15Z,17,17,7815,480,"('gregsramblings', 149), ('priyankavergadia', 24), ('MylesBorins', 3), ('moogzy', 2), ('rudavko', 2), ('fhoffa', 2), ('pamuditha', 2), ('asrivas', 1), ('iennae', 1), ('thesmiler', 1), ('mik-laj', 1), ('akieras', 1), ('kkazakevich', 1), ('rovindsouza', 1), ('steren', 1), ('imstand', 1), ('johnlunney', 1)",10,10,
sixpack/sixpack-php,PHP client library for SeatGeek's Sixpack A/B testing framework,"[![Build Status](https://img.shields.io/travis/seatgeek/sixpack-php/master.svg?style=flat-square)](https://travis-ci.org/seatgeek/sixpack-php)
[![Latest Stable Version](https://poser.pugx.org/seatgeek/sixpack-php/version.png)](https://packagist.org/packages/seatgeek/sixpack-php)

# Sixpack

PHP client library for SeatGeak's [Sixpack](https://github.com/seatgeek/sixpack) ab testing framework.

## Installation

1. Install [Composer](https://getcomposer.org/doc/00-intro.md)
2. In the root of your project install sixpack via `composer require seatgeek/sixpack-php`
3. In your php script put `require 'vendor/autoload.php';` at the top so sixpack is loaded.

## Usage

Basic example:

The PHP client stores a unique client id in the current user's cookie by default.

```php
require 'vendor/autoload.php';
$sp = new \SeatGeek\Sixpack\Session\Base;
$alt = $sp->participate('test', array('blue', 'red'))->getAlternative();
if ($alt == 'blue') {
    /* do something blue */
} else {
    /* do somethign red */
}
```

Each session has a `client_id` associated with it that must be preserved across requests. The PHP client handles this automatically. If you'd wish to change that behavior, you can do so like this:

```php
require 'vendor/autoload.php';
$sp = new \SeatGeek\Sixpack\Session\Base;
$resp = $sp->participate(""new-test"", array(""alternative-1"", ""alternative-2""));
store_in_database(""sixpack-id"", $resp->getClientId());
```

For future requests, create the `Session` using the `client_id` stored in the cookie:

```php
require 'vendor/autoload.php';
$client_id = get_from_database(""sixpack-id"")
$sp = new \SeatGeek\Sixpack\Session\Base(array('clientId' => $client_id));

$sp->convert('new-test');
```

Other possible options for the Session constructor are:
* baseUrl - Sixpack Server's location on the web
* cookiePrefix - you can set a different prefix for the cookie if you like. Default is `sixpack`

If you'd like to force the Sixpack server to return a specific alternative for development or testing, you can do so by passing a query parameter named `sixpack-force` to that page being tested.

`http://example.com/?sixpack-force-=`

## Contributing

1. Fork it
2. Create your feature branch (`git checkout -b my-new-feature`)
3. Commit your changes (`git commit -am 'Added some feature'`)
4. Push to the branch (`git push origin my-new-feature`)
5. Create new Pull Request

## License

sixpack-php is released under the [BSD 2-Clause License](http://opensource.org/licenses/BSD-2-Clause).
",,2013-02-04T20:56:00Z,2021-04-29T21:15:41Z,11,11,75,30,"('zackkitzmiller', 44), ('AD7six', 19), ('barchard', 5), ('erwaller', 3), ('jack7890', 2), ('josegonzalez', 2), ('tomzx', 2), ('HZ-labs', 1), ('johnbacon', 1), ('jlank', 1), ('theUniC', 1)",4,4,
1N3/BlackWidow,A Python based web application scanner to gather OSINT and fuzz for OWASP vulnerabilities on a target website.,"![alt tag](https://github.com/1N3/BlackWidow/blob/master/blackwidowlogo.png)

## ABOUT:
BlackWidow is a python based web application spider to gather subdomains, URL's, dynamic parameters, email addresses and phone numbers from a target website. This project also includes Inject-X fuzzer to scan dynamic URL's for common OWASP vulnerabilities.

## DEMO VIDEO:
[![BlackWidow Demo](https://i.ytimg.com/vi/mch8ht47taY/hqdefault.jpg)](https://www.youtube.com/watch?v=mch8ht47taY)

## FEATURES:
- [x] Automatically collect all URL's from a target website
- [x] Automatically collect all dynamic URL's and parameters from a target website
- [x] Automatically collect all subdomains from a target website
- [x] Automatically collect all phone numbers from a target website
- [x] Automatically collect all email addresses from a target website
- [x] Automatically collect all form URL's from a target website
- [X] Automatically scan/fuzz for common OWASP TOP vulnerabilities
- [x] Automatically saves all data into sorted text files

## LINUX INSTALL:
```
sudo bash install.sh
```

## USAGE:
```
blackwidow -u https://target.com - crawl target.com with 3 levels of depth.
blackwidow -d target.com -l 5 -v y - crawl the domain: target.com with 5 levels of depth with verbose logging enabled.
blackwidow -d target.com -l 5 -c 'test=test' - crawl the domain: target.com with 5 levels of depth using the cookie 'test=test'
blackwidow -d target.com -l 5 -s y -v y - crawl the domain: target.com with 5 levels of depth and fuzz all unique parameters for OWASP vulnerabilities with verbose logging on.
injectx.py -u https://test.com/uers.php?user=1&admin=true -v y - Fuzz all GET parameters for common OWASP vulnerabilities with verbose logging enabled.
```

## SAMPLE REPORT:
![alt tag](https://github.com/1N3/BlackWidow/blob/master/blackwidow-report1.png)

## DOCKER:
```bash
git clone https://github.com/1N3/BlackWidow.git
cd BlackWidow
docker build -t blackwidow .
docker run -it blackwidow # Defaults to --help

```

## LICENSE:
You may modify and re-distribute this software as long as the project name ""BlackWidow"", credit to the author ""xer0dayz"" and website URL ""https://sn1persecurity.com"" are NOT mofified. Doing so will break the license agreement and a takedown notice will be issued. 

## DISCLAIMER:
This program is used for educational and ethical purposes only. I take no responsibility for any damages caused from using this program. By downloading and using this software, you agree that you take full responsibility for any damages and liability.

## LINKS:
- [Twitter](https://www.twitter.com/xer0dayz ""Personal Twitter"")
- [Twitter](https://www.twitter.com/sn1persecurity ""Company Twitter"")
- [Website](https://sn1persecurity.com ""Sn1perSecurity"")","'active', 'application', 'automated', 'bugbounty', 'csrf', 'fuzzer', 'lfi', 'osint', 'owasp', 'passive', 'python', 'rce', 'rfi', 'scan', 'scanner', 'spider', 'sqli', 'vulnerability', 'web', 'xss'",2018-01-06T18:58:30Z,2023-03-31T17:43:56Z,12,8,1472,61,"('1N3', 23), ('ifly53e', 5), ('WP Engine Marketing', 4), ('RDxR10', 3), ('root', 3), ('xer0dayz', 2), ('tdebatty', 2), ('Christian Lerrahn', 1), ('cclauss', 1), ('delirious-lettuce', 1), ('khast3x', 1), ('ZishanAdThandar', 1)",5,3,
dionyziz/oath,A programmer's oath,"https://dionyziz.com/oath/
",,2013-12-11T07:20:52Z,2018-09-26T14:05:46Z,13,12,75,4,"('dionyziz', 33), ('angelgcuartero', 3), ('otalpster2', 3), ('alok1974', 2), ('an-dev', 2), ('subzey', 2), ('mrifat', 2), ('sandermarechal', 2), ('ntninja', 1), ('Daniel Vaz', 1), ('gtklocker', 1), ('lloeki', 1), ('smeijer', 1)",5,4,
mike1o1/ember-material-design,Ember implementation of Google's Material Design,"# No longer maintained
This project is no longer maintained. For an up-to-date material design project, please use [Ember Paper](https://github.com/miguelcobain/ember-paper).

---

# Ember-material-design

The **Ember Material Design** project is an implementation of Material Design in EmberJS. This project 
attempts to provide a set of reusable, well-tested and accessible UI components based on the Material Design system.

This project is as close to a reference implementation of [Angular Material](http://material.angularjs.org) as 
I could make it. Most of the credit for this work belongs to that team.

Note that this addon is under a lot of active development. I try to keep breaking changes to a minimum, but no guarantees
until development slows down and stabilizes and a 1.0 version is released.


## Demo

Visit [Demo Page](http://mike1234.com/ember-material-design) to view the components in action.


## Installation

Install the ember-cli addon into project

```
$ ember install ember-material-design
```

This project uses SASS for compiling stylesheets. Import them into your styles.scss. 

```sass
@import ""ember-material-design"";
```
 
To use SASS, you will need to either install `broccoli-sass` or `ember-cli-sass`.

```
$ ember install ember-cli-sass
```

This project does not provide any vendor prefixes. It is highly recommended to use an autoprefixer. I prefer to use `ember-cli-autoprefixer`
which can be installed as an addon very easily.

```
$ ember install ember-cli-autoprefixer
```

Any variables you want to set should be set prior to importing the `ember-material-design` stylesheet.

For example, to change the `$primary` color:

```sass
$primary: 'red';

@import ""ember-material-design"";
```


## Fonts

By default, the `RobotoDraft` font is used from the Google Fonts api. To include this font, add the following line in the 
`` section of your index page.

```html

```

If you wish to use another font, overwrite the `$font-family` in a .scss file before your `@import ""ember-material-design"";`.

## Real World Usage

If you're using this addon, I'd love to see an example of your work. Feel free to send me an email, or a pull request with your site listed here!
",,2015-04-07T10:25:45Z,2019-05-22T05:27:52Z,8,5,121,10,"('mike1o1', 175), ('Mike North', 7), ('unknown', 7), ('mike-north', 4), ('Alex Tomala', 1), ('jpadilla', 1), ('kgautreaux', 1), ('ember-tomster', 1)",4,3,
theironcook/Backbone.ModelBinder,"Simple, flexible and powerful Model-View binding for Backbone.","Special thanks to [Derick Bailey](http://lostechies.com/derickbailey) for creating predecessor to this plugin.
I've been able to reuse unit tests he created for his [Backbone.ModelBinding](https://github.com/derickbailey/backbone.modelbinding) plugin.

### Rationale
Backbone is a great platform for writing client side applications but I've found that as views grow in complexity, synchronizing my models and views can be a pain.
I've spent the past few months trying to use existing view-model binding libraries that others were kind enough to create and share with the world.
Unfortunately in the majority of my backbone application I wasn't able to leverage the existing view-model binding libraries due to various limitations.

I created a new `Backbone.ModelBinder` class that I have leveraged in the majority of a large client side application.
The ModelBinder class helped me remove a lot of cluttered boilerplate code that existed to synchronize my models and views.
As my application became more asynchronous, the ModelBinder saves me from a lot of pain by automatically displaying model attributes in the view as they are asynchronously loaded.
Hopefully you'll find the ModelBinder useful too.

The `Backbone.ModelBinder` class:

* Is as simple as possible yet still flexible and powerful
* Leverages the exact same jQuery syntax that the Backbone.View event blocks use
* Allows you to define type formatting and type conversion in your bindings
* Provides a simple javascript only solution rather than mixing binding syntax in html templates and javascript files.  I personally find mixing binding logic in my html files to be messy and confusing.

You can use this ModelBinder class to bind backbone model attributes to:

* Read-only html elements such as ``, `` etc.
* Html element attributes such as enabled, displayed, style etc.
* Editable form elements such as ``, `` etc. This type of binding is bidirectional between the html elements and the Model's attributes.

###The ModelBinder is more efficient###
It seems like many of the backbone view examples I've seen register for the model's change event and then re-render the entire view like the example shown below.

```javascript
SomeView = Backbone.View.extend({
    initialize: function(){
        this.model.on('change', this.render, this);
    },

    render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        return this;
    }
});
```
If the model changes frequently the above type of code will be wasteful because so many DOM elements are just thrown away. Converting the model to json is also an unnecessary conversion.

The ModelBinder eliminates these ineffeciencies by listening for model changes like the above code. But it doesn't recreate the entire set of DOM elements. Instead, it will change the content of existing DOM elements.

## Prerequisites

* Backbone.js v1.0.0 or higher
* Underscore.js v1.4.4 or higher
* jQuery v1.8.3 or higher

### Availability
You can download the zip/tarball as normal and include it with your other JS assets, but you can now alternatively link to it on [CDNJS](http://www.cdnjs.com/), the free to use, community maintained CDN.

To do this, just drop a reference to the minified version of the plugin into your document's `` as follows, replacing the version number with whatever the latest one is:
```html

```

##Defining Binding Scope with jQuery##

One of the most powerful capabilities of the ModelBinder class is that it allows you to define scope when you create your bindings using jQuery.

* If your views are simple (no nested Views etc.) you can rely on default scoping rules that are based off of the html `name` attribute.
* If your views are more complex you can explicitly define scoping rules with jQuery selectors. Scoping will allow you to handle nested views or have the ModelBinder only manage parts of your Views and your own custom code can handle the more complicated problems.

Both scoping mechanisms will be discussed throughout the rest of this document.

***

##Basic ModelBinder functionality##

The `ModelBinder` class contains all of the logic to facilitate bi-directional view-model binding.

The ModelBinder class exposes 3 public functions shown below:

```javascript
// no arguments passed to the constructor
constructor();

// model is required, it is the backbone Model you're binding to
// rootEl is required, is the root html element containing the elements you want to bind to
// bindings is optional, it's discussed a bit later
// options, discussed at the bottom of the document
bind(model, rootEl, bindings, options);

// unbinds the Model with the elements found under rootEl - defined when calling bind()
unbind();
```

The `bind()` function's 3rd argument `bindings` is optional.  The `bindings` arg is useful for defining binding scope and formatting and will be discussed later.
If `bindings` is not defined, then `bind()` will locate all of the child elements under the rootEl that define a `name` attribute.
Each of the elements with a `name` attribute will be bound to the model's attributes - the value of the element's name attribute will be used as the model's attribute name.

In the example below, the model's address attribute will be bound to the input text field with the name of 'address'.  This binding is bi-directional between the view and the model.

```html


```

```javascript
// The javascript
SomeView = Backbone.View.extend({
    render: function(){
        this.modelBinder.bind(this.model, this.el);
    }
});
```

## Binding after elements created, rootEl ##

The `bind()` functions `rootEl` parameter should contain all of the elements that you want to bind to.
Your rootEl might be the view.el property or it could be any valid html element.  It does not matter if the rootEl is displayed in a browser.

The example below shows how the rootEl argument is the result of the jQuery selection ""#outerDiv"".  This will work just like the previous example.

```html


    

```

```javascript
// The javascript
SomeView = Backbone.View.extend({
    render: function(){
        this.modelBinder.bind(this.model, this.$('#outerDiv'));
    }
});
```

## Elements are recursively bound ##

If you do not pass the `bindings` 3rd parameter to the bind() function, all child elements under the rootEl with a ""name"" attribute are bound.
This includes any nested child elements that define the ""name"" attribute.

In the example below, the ""address"" and the ""city"" elements will be bound to the model.

```html


    
        
            
        

```

```javascript

SomeView = Backbone.View.extend({
    render: function(){
        this.modelBinder.bind(this.model, this.el);
    }
});
```

## Binding multiple html elements to the same model attribute ##

In the example below, the `` and the `` elements are both bound to the model.firstName attribute.
If you modified the firstName input element you would see the span automatically updated because the Model would have been updated.

```html

Welcome, 

Edit your information:

```

```javascript
// The javascript
SomeView = Backbone.View.extend({
    render: function(){
        this.modelBinder.bind(this.model, this.el);
    }
});
```

If your View element definitions are simple you can rely on having properly defined `name` attributes in your html elements that match your Model attribute names.
Remember that **all** of the rootEl's child elements (recursive) with a `name` attribute will be bound to your Model.

If your views require formatting, conversion or more scoping due to nested or complex views you'll need to define a `bindings` parameter to the `bind()` function as discussed in the next section.

***

##The bindings parameter to the bind() function##

For more complicated things like formatting or defining scope for composite or nested Views you'll need to define a `bindings` parameter - the optional 3rd parameter to the `bind()` function.
The bindings parameter is a javascript hash object.

The bindings hash keys are the model's attribute names and the values, in the simplest case, are jQuery selectors that must return at least 1 html element.

The example below binds model.address to the element with the id=""address"":

```html



var bindings = {address: '#address'};
modelBinder.bind(this.model, this.el, bindings);

```

The example below binds model.homeAddress to the element with name=""homeAddress"" and model.workAddress to the element with name=""workAddress"":

```html




var bindings = {homeAddress: '[name=homeAddress]', workAddress : '[name=workAddress ]'};
modelBinder.bind(this.model, this.el, bindings);

```

The example below binds model.city to ``:

```javascript
var bindings = {city: '#city'};
modelBinder.bind(this.model, this.el, bindings);
```

You can use any jQuery selector that you like, as long as the selector returns at least a single element.
In the example below, both the `` and the `` elements are bound to the model.firstName attribute.
In this situation, you could also eliminate the bindings and get the same behavior.

```html

Welcome, 



```

```javascript
// The javascript
var bindings = {firstName: '[name=firstName]'};
modelBinder.bind(this.model, this.el, bindings);
```

Here are a few more examples of the bindings hash syntax.

```
Html                                            bindings entry
-----------------------------------------------------------------------------------------------
             firstName: '#firstName'

           firstName: '[name=firstName]'

                operator: '[name=operatorSelectEl]'
  Dan
  Eli
  Frank


    isOk: '[name=isOk]'

<input type=""text"" class=""myTestClass""          myTestAttribute: '[class~=myTestClass]'
    name=""address""/>
```

## You can define multiple jQuery selectors ##

The binding entries can be defined as strings as shown in all previous examples but internally the string is converted to the type of entry shown below.

```javascript
 firstName: {selector: '#firstName'}
```

The jQuery string is a hash parameter named `selector`.
You can define arrays of `selector` arguments in your bindings as shown in the example below.

```javascript
 firstName: [{selector: '#firstName'}, {selector: '#title'}]
```

In the example above, model.firstName is bound to an element with the id of `firstName` and an element with the id of `title`.
To define multiple selectors, just define them as an array.

The jQuery bindings leverage the jQuery delegate mechanism - which means they should be fairly efficient.

##Binding to the Root Element##

Sometimes, in rare cases, your views are so simple that you just want to bind
to the root element itself. For example, if your view is an `` tag, it
makes sense to have the inner HTML simply be the appropriate model value.

In those cases, simply use an empty string as your selector:

```javascript
 firstName: { selector: '' }
```

***

##Formatting and converting values##

The bindings can also define a `converter` parameter.
A converter is simply a function that is called whenever a model's attribute is copied to an html element or when an html elements value is copied into a model's attribute.

Converters help you format values in your views but help keep them clean in your models.

A simple of example of using a converter to format a phone number is shown below.

```javascript
var phoneConverter = function(direction, value){
  // direction is either ModelToView or ViewToModel
  // Return either a formatted value for the view or an un-formatted value for the model
};

var bindings = {phoneNumber: {selector: '[name=phoneNumber]', converter: phoneConverter}}
modelBinder.bind(this.model, this.el, bindings );
```

A converter function is passed 4 parameters.

* direction - either ModelToView or ViewToModel
* value - the model's attribute value or the view element's value
* attribute Name
* model - this is more useful when you're dealing with calculated attributes
* els - an array of the els that were bound to the converter

If your binding to a read-only element like a `` you'll just ignore the direction parameter - it's always ModelToView.
In most cases, you'll be able to ignore the attribute name and model parameters but they can be helpful in some situations discussed later.

The Model parameter can be quite helpful in complicated situations.
The els array allows a developer to manually modify the els directly when a converter is invoked.
Be very careful when accessing the els directly because any state you set into the els might be overwritten by the ModelBinder after the converter is finished.
For example, if a converter is called with the direction 'ModelToView' and inside the converter the code updates the el values directly those values will be overwritten with the value returned from the converter function.
The els array is more valuable if you need to set other properties etc. on the els.  In most situations you should not need the els parameter.

Converters can be used for simple formatting operations like phone numbers but they can also be used for more advanced situations like when you want to convert between a model and some description of the model.
You might want to display a list of models in a `` element - a converter could allow you to convert between a model and a model's id making this type of binding easy to do.

The example below shows how this could work.  The `CollectionConverter` shown is defined in the ModelBinder.js file.

```html

    
        Please Select Something
        
          "">
        
    
```

```javascript
// The javascript
SomeView = Backbone.View.extend({
    render: function(){
        // An example of what might be passed to the template function
        var nestedModelChoices = [{id: 1, description: 'This is One'}, {id: 2, description: 'This is Two'}];

        $(this.el).html(this.template({nestedModelChoices: nestedModelChoices}));

        var binder = new Backbone.ModelBinder();

        var bindingsHash = {nestedModel: { selector: '[name=nestedModel]',
                                           converter: new Backbone.ModelBinder.CollectionConverter(nestedModelChoices).convert} };

        binder.bind(this.model, this.el, bindingsHash);
```

## Converters can display calculated attributes ##

Sometimes your models will have computed attributes.
You could cache computed values inside a model's attribute collection and it would be bound like any other attribute.
I favor this solution but it's not perfect because when you save models back to the server, the calculated attributes are sent.

If your model's computed attribute is calculated via a function we can use a converter for the binding.
In the example below, we have a simple computed attribute named hoursLeft calculated by the function `calculateHoursLeft()`.

```javascript
SomeModel = Backbone.Model.extend({
    defaults: {currentHours: 3, totalHours: 8},

    calculateHoursLeft: function(){
        return this.get('totalHours') - this.get('currentHours');
    }
})

// Here is how how we could create a binding for a calculated attribute
var bindings = {currentHours: {selector: '[name=hoursLeft]', converter: this.model.calculateHoursLeft}};
modelBinder.bind(this.model, this.el, bindings);
```

In the example above, we are binding to the model's attribute 'currentHours' because when currentHours changes the hoursLeft calculated value will change - the converter will be invoked at that time.
The converter is simply the model's calculateHoursLeft() function. The function just ignores the parameters passed to it and calculates the hours left.

If the currentHours attribute is also bound to another html element you could specify an array of element bindings in the binding definition like the example shown below.

```javascript
var bindings = {currentHours: [ {selector: '[name=hoursLeft]', converter: this.model.calculateHoursLeft},
                                {selector: '[name=currentHours]']};
modelBinder.bind(this.model, this.el, bindings);
```

If converters need any other special logic they can be defined in another function outside of the Model because the converter function is passed the Model as a parameter.

***

##Binding to html element attributes##

You can also define bindings to be bound to any html element's attribute like enabled, class, style or any other attribute you define.
The example below shows how to use the `elAttribute` option.  In this example, the address element will be enabled depending on what the Model.isAddressEnabled attribute is.

```javascript
var bindings = {isAddressEnabled: {selector: '[name=address]',  elAttribute: 'enabled'}};
modelBinder.bind(this.model, this.el, bindings);
```

You could also extend the example above to be a bit more complicated.  Let's pretend the Model has an attribute called customerType and if customerType == 'residential' we want the address to enabled, otherwise we want it disabled.  We can handle this type of binding by leveraging both `converter` and `elAttribute`.  The example below shows how this would work.  When the Model.customerType is updated, the address input element's enabled attribute would be updated.

```javascript
var addressEnabledConverter = function(direction, value) { return value === 'residential'; };

var bindings = {customerType: {selector: '[name=address]',  elAttribute: 'enabled', converter: addressEnabledConverter}};
modelBinder.bind(this.model, this.el, bindings);
```

You could also bind to an element's class property as shown in the example below.

```html


```

```javascript
// The javascript
var bindings = {gender: {selector: '#patientPicture',  elAttribute: 'class'}};
modelBinder.bind(this.model, this.el, bindings);
```

In this example, the model.gender value is either ""M"" or ""F"".  The CSS files define styles for ""patientPic"" with either ""M"" or ""F"" to show the correct type of avatar.

***

##Proper scope helps you bind to complex nested views##

Sometimes you'll have nested models displayed in nested views.
An example of a nested backbone model is shown below.  The personModel has a nested homeAddressModel.

```javascript
var personModel = new Backbone.Model({firstName: 'Herman', lastName: 'Munster'});
var homeAddressModel = new Backbone.Model({street: '1313 Mockingbird Lane', city: 'Mockingbird Heights'});

personModel.set({homeAddress: homeAddressModel});
```

In the example above, the nested model is also a backbone.Model but sometimes your nested models are raw javascript objects.  I'll talk about that situation a bit later.

You can bind to this type of nested backbone model fairly easily with the ModelBinder.

There are 2 basic ways to bind nested Models in a View:

1. With a scoped `rootEl` that only contains html elements specific to the nested Model.
2. With scoped bindings selectors in the bindings hash.

##Nested View option 1: A scoped `rootEl`##

If your nested view can be defined under a single parent element such as a `` you can pass that parent element as the `rootEl` for your nested ModelBinder as shown in the example below.
It refers to the personModel and homeAddressModels defined in a previous code snippet.

```html


  
  


  
  

```

```javascript
// javascript
personBinder.bind(this.personModel, this.$('#personFields'));
addressBinder.bind(this.personModel.get('homeAddress'), this.$('#homeAddressFields'));
```

In the example above, the nested homeAddressModel is bound to the correct fields because they are scoped by a single parent element.
The personModel bindings also needed to be separately scoped as well.

If the personModel fields were defined on a level that also included the homeAddressFields then the homeAddressFields would have appeared in the personModel.
The next option shows how to avoid that situation.

##Nested View option 2: scoped bindings##

If your parent and nested Model html elements cannot live under their own parent elements then you'll need to define the `bindings` with jQuery selectors that are properly scoped as shown in the example below.

```html





```

```javascript
// javascript
var personBindings = {firstName: '[name=firstName]', lastName: '[name=lastName]'};
personBinder.bind(this.personModel, this.el, personBindings);

var addressBindings = {street: '[name=street]', city: '[name=city]'};
addressBinder.bind(this.personModel.get('homeAddress'), this.el, addressBindings);
```

***

##The ModelBinder can be a partial solution##

In some situations, you might have very complex views where you only want some of your view's elements bound by the ModelBinder.
To limit the scope of which fields are bound, you just need to properly scope your bindings hash.

In the example below, the modelBinder will ignore the ""phone"" and ""fax"" elements.

```html





```

```javascript
// javascript
var personBindings = {firstName: '[name=firstName]', lastName: '[name=lastName]'};
modelBinder.bind(this.personModel, this.el, personBindings);
```

***

##Quickly create and modify bindings##

In some situations, you might have a large amount of elements that need to be bound but only a few of them need a converter or elAttribute defined.
You probably don't want to define all of the element bindings manually just to add a converter to a few of them.
The utility function Backbone.ModelBinder.createDefaultBindings can help you in this situation.

The Backbone.ModelBinder.createDefaultBindings( ) is shown below.

```javascript
// A static helper function to create a default set of bindings that you can customize before calling the bind() function
// rootEl - where to find all of the bound elements
// attributeType - probably 'name' or 'id' in most cases
// converter(optional) - the default converter you want applied to all your bindings
// elAttribute(optional) - the default elAttribute you want applied to all your bindings
Backbone.ModelBinder.createDefaultBindings = function(rootEl, attributeType, converter, elAttribute){
    ...
}
```

You can use this function to gather all of the elements under the rootEl with a ""name"" or ""id"" attribute and quickly create all of the bindings and then modify those bindings.
You might want to delete one or more of the bindings, add converters or elAttributes to bindings etc.
Be careful when you use this with radio buttons - you might not get the proper selectors if you're not careful.

An example of how you might use createDefaultBindings( ) is shown below.

```javascript
// The view has several form element with a name attribute that should be bound
// but one binding requires a converter and one of the bindings should be removed
var bindings = Backbone.ModelBinder.createDefaultBindings(this.el, 'name');
bindings['phone'].converter = this._phoneConverterFunction;
delete bindings['complicatedAttribute'];

this._modelBinder.bind(this.model, this.el, bindings);
```

###Change attribute used for binding###

By default, the `name` attribute of your elements is used to create bindings.  Changing this can be accomplished easily in one of two ways.  First, by using `createDefaultBindings`:

```javascript
var bindings = Backbone.ModelBinder.createDefaultBindings(this.el, 'data-custom');
this._modelBinder.bind(this.model, this.el, bindings);
```

Alternatively, setting `boundAttribute` on the options hash given to bind can point it at any attribute.

```javascript
// Set the default bindings based on the data-custom attribute rather than name.
this._modelBinder.bind(this.model, this.el, null, { boundAttribute: 'data-custom' });
```

***

## The Power of jQuery ##
Your jQuery selectors can be based off of a class attribute or anything else you'd like as shown in the example below.

```html

    
    
    
```

```javascript

SomeView = Backbone.View.extend({
    render: function(){
        $(this.el).html(this.template({model: this.model.toJSON()}));

        var bindingsHash = {isPartOneEnabled: {selector: '[class~=partOne]',  elAttribute: 'enabled'}};

        this.modelBinder.bind(this.model, this.el, bindingsHash);
    }
```

In this example, all 3 html elements enabled attribute are bound to the Model's isPartOneEnabled attribute.
This is because the jQuery selector `[class~=partOne]` returned all 3 elements.



***

## Calling bind() multiple times ##

Calling `ModelBinder.bind()` will automatically internally call the `unbind()` function to unbind the previous model.
You can reuse the same ModelBinder instance with multiple models or even rootEls - just be aware that all previous bindings will be removed.


## Model values are copied to views when bind() is called ##

The model's attributes are bound are copied from the model to bound elements when the bind() function is called.
View element default values are not copied to the model when bind() is called. That type of behavior usually belongs in the Backbone.Model defaults block.

If you do need to have values copied from the view to the model when bind() is called I would first question why.
In most situations, especially for single page web apps, it's almost always better to let your models drive the behavior of the app instead of the views.
If you need this behavior, you can use the 4th optional parameter to the bind() function. {initialCopyDirection: Backbone.ModelBinder.Constants.ViewToModel}
You can also specify this behavior as the default for all ModelBinder's by calling Backbone.ModelBinder.SetOptions({initialCopyDirection: Backbone.ModelBinder.Constants.ViewToModel});

You can also directly invoke the function modelBinder.copyViewValuesToModel() at any time to copy values from the view into the model.  In most cases, this is not necessary.

When you copy explicitly from the view to the model on bind() or via copyViewValuesToModel() text values and checkboxes will be inserted into the model as blank strings or false if the values have not been set.


## Cleaning up with unbind() ##

When your views are closed you should always call the unbind() function.  The unbind() function will un-register from the model's change events and the view's jQuery change delegate.

If you don't call unbind() you might end up with zombie views and ModelBinders.  This is particularly important for large client side applications that are not frequently refreshed.


## The '.' syntax for nested models ##

The ModelBinder doesn't directly support '.' to reference nested Models when binding.
If you have a Backbone.Model implementation that is able to support the '.' syntax for nested models you'll be able to use the ModelBinder.

I've done a bit of testing with the [backbone-deep-model](https://github.com/powmedia/backbone-deep-model) and it seems to work well with the ModelBinder.
[Here](https://github.com/theironcook/Backbone.ModelBinder/blob/master/sandbox/Example_NestedAttributes.html) is a simple example showing how to use backbone-deep-model with the ModelBinder.

The nested models are just plain javascript objects with the deep-model plugin.  If your nested objects are Backbone.Models you'll need something similar to the deep-model plugin.


The [backbone-nested](https://github.com/afeld/backbone-nested) project also seems to work with the ModelBinder.

***


## AMD / Require.js support

AMD / Require.js support was added in version 0.1.4

***


### Binding to Collections
I've also created a collection binder that automatically creates/removes views when models are added/removed to a collection.
It can be used with the ModelBinder.  The collection binder has saved me just as much time as the model binder.  It's a very handy utility.

You can read about it [here](https://github.com/theironcook/Backbone.ModelBinder/wiki/A-new-Class-to-Bind-Backbone-Collections-to-Views:-Javascript-Weekly-May-18th)



## Examples
Some JSFiddle examples can be found [here](https://github.com/theironcook/Backbone.ModelBinder/wiki/Interactive-JSFiddle-Examples).
The same examples are also under the (examples)[https://github.com/theironcook/Backbone.ModelBinder/tree/master/examples] directory.



## Configuration Options
* initialCopyDirection
* changeTriggers
* modelSetOptions
* suppressThrows
* boundAttribute
* converter

Configuration options can either be set for all ModelBinder instances via Backbone.ModelBinder.SetOptions() or for individual ModelBinder instances via the 4th parameter to the bind() function.
Values set at the instance level will eclipse / override values that are set with the SetOptions() function.

* initialCopyDirection - can either be Backbone.ModelBinder.Constants.ModelToView or Backbone.ModelBinder.Constants.ViewToModel.  This property is dicussed in a previous section

* changeTriggers - an object where the keys are jQuery selectors and the values are jQuery events.  These are the events that trigger when values are copied from the view into the model.
The default for change triggers is added below.  You can define your own if needed.

```javascript
{'': 'change', '[contenteditable]': 'blur'}
```

* modelSetOptions - this is an option that you might want sent by default to the Model.set function.
Whenever a bound element changes, it will call the Model.set function as pass the modelSetOptions as the options to the set() function.
If you wanted to turn on backbone model validation for your entire project you might do something like this.

```javascript
Backbone.ModelBinder.SetOptions({modelSetOptions: {validate: true}});
```

The ModelBinder injects this value into the set options for every set() function.
changeSource = 'ModelBinder'
This allows custom logic to determine if the source of the model attribute change is from the ModelBinder.

* suppressThrows - set to true if you don't want the ModelBinder to throw exceptions but instead it will show errors via the console.error

* boundAttribute - change the default attribute used to create bindings.  Default value is ""name,"" but can be set to any valid attribute selector that fits the form `$('[' + boundAttribute + ']')`.

* converter - a default converter for all binders or a single binder.  Probably only really useful for when you want view empty strings to map to nulls or undefined. The default is empty string.
If you define a converter, you might want to pay attention to the converter's 5th parameter of bound els.  You might want to only convert values for specific element types.

## Release Notes / Versions
### v 1.1.1 March 9, 2020
* Use syntax highlighting in README (#219)
* Better exceptions management : using Error instead of String when throwing something (#233)

### v 1.1.0 June 1, 2015
* Fixed createEl code not to require that Backbone.View#render returns this
* Don't sort elements on add event (only do so on sort)
* Fixed package.json to make NPM publishing possible (fixes #195)
* Use jQuery .on instead of .delegate for event binding (to move off of deprecated .delegate function)
* Use .prop(""checked"") instead of .attr(""checked"") (fixes #199)
* Fixed autoSort behavior to actually work when the collection changes

### v 1.0.6 November 5, 2014
* Made the CollectionBinder loadable via AMD

### v 1.0.5 September 30, 2013
* Fixed issue 164 - Works with jQuery.noConflict
* Added the ability to set static and instance options for the CollectionBinder.  As of now, there is only one option: 'autoSort'.  You can set the option globally via Backbone.CollectionBinder.SetOptions.
* Added the ability to use template functions with the CollectionBinder.ElManagerFactory.  Normally, I wouldn't use the ElManagerFactory except for very simple situations - especially because the content of the data isn't updated.
If you would like to use this option, simply pass a compiled _.template instead of html to the ElManagerFactory constructor. Internally the ElManagerFactory will call the template and pass {model: this._model.toJSON()} to the template function.
* Fix for issue 162.  Undid fix for 133.  Unnecessary Model.set calls for checkboxes and radio buttons.

### v 1.0.4 August 19, 2013
* Fixed the _.bindAll function calls to specify the function names being bound to.
* Added the abili",,2012-02-23T20:30:39Z,2020-03-10T14:35:49Z,41,30,1419,51,"('theironcook', 150), ('unknown', 34), ('katowulf', 8), ('Alexey Makhrov', 5), ('aq1018', 4), ('SBoudrias', 4), ('captncraig', 4), ('platinumazure', 3), ('rsteier', 3), ('adamterlson', 3), ('ssbyoung', 2), ('fcamblor', 2), ('SimenB', 2), ('palodequeso', 2), ('sarxos', 2), ('vladkosarev', 1), ('nikhil.001mehta', 1), ('mitchlloyd', 1), ('elwayman02', 1), ('flisky', 1), ('WhoKnows', 1), ('sorenlouv', 1), ('Rovanion', 1), ('schottra', 1), ('mostly-magic', 1), ('Mike', 1), ('Mario Scheliga', 1), ('LuukvE', 1), ('Lepadatescu Ionut', 1), ('kubelsmieci', 1), ('kcivey', 1), ('mcguinness', 1), ('Dmytro Nemoga', 1), ('dmazin', 1), ('Derbeth', 1), ('Cody Rioux', 1), ('Chris Kilding', 1), ('ammmze', 1), ('baelter', 1), ('Aaronius', 1), ('apfritts', 1)",26,17,
tcloaa/Deep-Portfolio-Theory,"Autoencoder framework for portfolio selection (paper published by J. B. Heaton, N. G. Polson, J. H. Witte.)","# About the paper: Deep Portfolio Theory and this repo

*Deep Portfolio Theory* is a portfolio selection method published by J. B. Heaton, N. G. Polson, J. H. Witte from GreyMaths Inc. 

Authors' codes are proprietary, so I (this github repo owner) can only try to code this notebook myself for experiment. I am not the author and is not related to the original authors. This code may not achieve satisfying results as the paper states. Maybe I misunderstand some parts from the paper, so I hope that someone can continue the research and contribute to the framework. (you are welcome to open issues.)

You may find relevant papers according to the lists:

- [Deep Portfolio Theory](https://arxiv.org/abs/1605.07230) (we will refer it as ""the paper"" in all following READMEs)
- [Deep Learning for Finance: Deep Portfolios](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=2838013) (a more detailed version by the same authors)


# Some ""tricky"" stuffs you may want to know after reading the paper
- The authors use **""auto-encoding, calibration, validation and verification""** as machine learning steps. In computer science, we are more comfortable to call them **""auto-encoding, validation, testing and verification""**. But we will still follow the terms the authors use in this repo.

- For the graph below in Page 13, for convenience, let's name upper left, upper right, lower left, lower right as A, B, C, D.
![p13](image/p13.png)

	- For all A, B, C, I have no idea about the meaning of Y-axis. From my experiment, Y-axis shall represent the **last_price** of the stock/Index (so it should be values like 20, 50, 70 instead of 0, 1, 0.6, etc).
	- For A, **colors are not correct**: (TBC..)

# Tools

Python 3, Keras (Tensorflow Backend)


# Data

- Downloaded from Bloomberg Terminal

- Dates: from 2012/01/06 to 2016/04/29 (aligned with the paper)
	1. auto-encoder, calibration set: **2012/01/06 - 2013/12/27, 104 days** 
	2. validation, verification set: **2014/01/03 - 2016/04/29, 122 days** 

- As Section 2 of the paper states, stock data shall be treated as a matrix $X \in R^{T \times N}$, a market of $N$ stocks over $T$ time periods. You can consider it like: $T$ is number of data points (varied), $N$ is number of features (fixed).

- IBB Index Data (ibb_uq.csv)
    1. PX_LAST
    2. (absolute) Change
    3. % Change

![IBB Data](image/ibb_snapshot.png)

- Component Stocks Data (percentage_change.csv)
    1. Some stock data are missing (not IPO yet, etc), so for data preprocessing, I ignore all the data without full record during 2012/01/06 to 2016/04/29.
    2. In this notebook I only use **percentage change** as input. I also prepare **net_change, last_price** in the repo if you are interested.


![Stock Percentage Change Data](image/stock_snapshot.png)


",,2017-02-10T09:03:08Z,2020-10-06T09:35:28Z,1,1,127,19,"('tcloaa', 22)",0,0,
BlueWallet/BlueWallet,Bitcoin wallet for iOS & Android. Built with React Native ,"# BlueWallet - A Bitcoin & Lightning Wallet

[![GitHub tag](https://img.shields.io/badge/dynamic/json.svg?url=https://raw.githubusercontent.com/BlueWallet/BlueWallet/master/package.json&query=$.version&label=Version)](https://github.com/BlueWallet/BlueWallet)
[![CircleCI](https://circleci.com/gh/BlueWallet/BlueWallet.svg?style=svg)](https://circleci.com/gh/BlueWallet/BlueWallet)
[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)
![](https://img.shields.io/github/license/BlueWallet/BlueWallet.svg)

Thin Bitcoin Wallet.
Built with React Native and Electrum.

[![Appstore](https://bluewallet.io/uploads/app-store-badge-blue.svg)](https://itunes.apple.com/us/app/bluewallet-bitcoin-wallet/id1376878040?l=ru&ls=1&mt=8)
[![Playstore](https://bluewallet.io/uploads/play-store-badge-blue.svg)](https://play.google.com/store/apps/details?id=io.bluewallet.bluewallet)

Website: [bluewallet.io](https://bluewallet.io)

Community: [telegram group](https://t.me/bluewallet)

* Private keys never leave your device
* Lightning Network supported
* SegWit-first. Replace-By-Fee support
* Encryption. Plausible deniability
* And many more [features...](https://bluewallet.io/features)





## BUILD & RUN IT

Please refer to the engines field in package.json file for the minimum required versions of Node and npm. It is preferred that you use an even-numbered version of Node as these are LTS versions.

To view the version of Node and npm in your environment, run the following in your console:

```
node --version && npm --version
```

* In your console:

```
git clone https://github.com/BlueWallet/BlueWallet.git
cd BlueWallet
npm install
```

Please make sure that your console is running the most stable versions of npm and node (even-numbered versions).

* To run on Android:

You will now need to either connect an Android device to your computer or run an emulated Android device using AVD Manager which comes shipped with Android Studio. To run an emulator using AVD Manager:

1. Download and run Android Studio
2. Click on ""Open an existing Android Studio Project""
3. Open `build.gradle` file under `BlueWallet/android/` folder
4. Android Studio will take some time to set things up. Once everything is set up, go to `Tools` -> `AVD Manager`.
    * 📝 This option [may take some time to appear in the menu](https://stackoverflow.com/questions/47173708/why-avd-manager-options-are-not-showing-in-android-studio) if you're opening the project in a freshly-installed version of Android Studio.
5. Click on ""Create Virtual Device..."" and go through the steps to create a virtual device
6. Launch your newly created virtual device by clicking the `Play` button under `Actions` column

Once you connected an Android device or launched an emulator, run this:

```
npx react-native run-android
```

The above command will build the app and install it. Once you launch the app it will take some time for all of the dependencies to load. Once everything loads up, you should have the built app running.

* To run on iOS:

```
npx pod-install
npm start
```

In another terminal window within the BlueWallet folder:
```
npx react-native run-ios
```
**To debug BlueWallet on the iOS Simulator, you must choose a Rosetta-compatible iOS Simulator. This can be done by navigating to the Product menu in Xcode, selecting Destination Architectures, and then opting for ""Show Both."" This action will reveal the simulators that support Rosetta.
**

* To run on macOS using Mac Catalyst:

```
npx pod-install
npm start
```

Open ios/BlueWallet.xcworkspace. Once the project loads, select the scheme/target BlueWallet-NoLDK. Click Run.

## TESTS

```bash
npm run test
```


## LICENSE

MIT

## WANT TO CONTRIBUTE?

Grab an issue from [the backlog](https://github.com/BlueWallet/BlueWallet/projects/1), try to start or submit a PR, any doubts we will try to guide you. Contributors have a private telegram group, request access by email bluewallet@bluewallet.io

## Translations

We accept translations via [Transifex](https://www.transifex.com/bluewallet/bluewallet/)

To participate you need to:
1. Sign up to Transifex
2. Find BlueWallet project
3. Send join request
4. After we accept your request you will be able to start translating! That's it!

Please note the values in curly braces should not be translated. These are the names of the variables that will be inserted into the translated string. For example, the original string `""{number} of {total}""` in Russian will be `""{number} из {total}""`.

Transifex automatically creates Pull Request when language reaches 100% translation. We also trigger this by hand before each release, so don't worry if you can't translate everything, every word counts.

## Q&A

Builds automated and tested with BrowserStack



Bugs reported via BugSnag




## RESPONSIBLE DISCLOSURE

Found critical bugs/vulnerabilities? Please email them bluewallet@bluewallet.io
Thanks!
","'bitcoin', 'bitcoinjs', 'blockchain', 'cryptocurrency', 'react-native', 'reactnative'",2018-01-14T20:14:02Z,2024-06-18T11:35:18Z,109,95,2518,81,"('marcosrdz', 3014), ('GladosBlueWallet', 2311), ('Overtorment', 1721), ('transifex-integrationbot', 509), ('renovatebot', 376), ('limpbrains', 367), ('Marcos Rodriguez Vélez', 339), ('renovate-bot', 290), ('snyk-bot', 286), ('ncoelho', 219), ('marcosrdz', 43), ('sansegkh', 35), ('pajasevi', 30), ('abhiShandy', 30), ('mcsaeid', 22), ('demerzel3', 19), ('dependabotbot', 13), ('junderw', 13), ('tanx', 12), ('fiatjaf', 11), ('bordalix', 10), ('davidullo', 10), ('davh', 9), ('marcosrdz', 9), ('jaonoctus', 8), ('Danswar', 8), ('Sergey Tsegelnyk', 7), ('felixdragon', 7), ('fiatjaf', 7), ('mgurzenski', 6), ('setavenger', 4), ('sha-265', 4), ('EZ0010', 4), ('CypherPoet', 4), ('jontzi', 3), ('xanoni', 3), ('marcosrodriguezseminole', 3), ('bitcoinuser', 3), ('t4t5', 3), ('Ole Henrik Skogstrøm', 3), ('librepax', 3), ('Abstraktikus', 3), ('22388o', 3), ('gruve-p', 2), ('evil-maid', 2), ('mercuriosilber', 2), ('jorgemasta', 2), ('bolatovumar', 2), ('stepansnigirev', 2), ('SiteEffect', 2), ('dr3am3r', 2), ('peterdmv', 2), ('plengkeek', 2), ('porcupinenick', 2), ('klauslovgreen', 2), ('jonjamcam', 1), ('hosseinabaspanah', 1), ('eliaspoveda', 1), ('djschnei21', 1), ('admin', 1), ('adamritter', 1), ('Ziya-Sadr', 1), ('xavierfiechter', 1), ('Stuart Downie', 1), ('phrazzld', 1), ('pablocastellanos', 1), ('thelwyn', 1), ('3bitcoins', 1), ('odrru', 1), ('masikotimo', 1), ('neocogent', 1), ('omahs', 1), ('positiveblue', 1), ('pseudozach', 1), ('raytorres280', 1), ('sevcik', 1), ('sha-265', 1), ('soonoo', 1), ('stellrust', 1), ('tukac', 1), ('vuongvoviet', 1), ('xinhangzhou', 1), ('AaronDewes', 1), ('AbdelrahmanManz', 1), ('arizala13', 1), ('rollingdice', 1), ('benfavre', 1), ('BrunoSette', 1), ('kiocosta', 1), ('GBKS', 1), ('DanGould', 1), ('iCE3X-CryptoNinja', 1), ('dimitris-t', 1), ('erfanoabdi', 1), ('skv-headless', 1), ('eyal352', 1), ('Jasonvdb', 1), ('JssDWt', 1), ('jesterhodl', 1), ('JimmySaffeen', 1), ('jmarrero', 1), ('lukechilds', 1), ('HelloMokuzai', 1), ('marcosrodriguezturner', 1), ('Marcos Rodriguez Velez', 1), ('iamjackharper', 1), ('matt-auckland', 1), ('mirelon', 1), ('0o001', 1)",54,47,
gjtorikian/isBinaryFile,Detects if a file is binary in Node.js. Similar to Perl's -B,"# isBinaryFile

Detects if a file is binary in Node.js using ✨promises✨. Similar to [Perl's `-B` switch](http://stackoverflow.com/questions/899206/how-does-perl-know-a-file-is-binary), in that:
- it reads the first few thousand bytes of a file
- checks for a `null` byte; if it's found, it's binary
- flags non-ASCII characters. After a certain number of ""weird"" characters, the file is flagged as binary

Much of the logic is pretty much ported from [ag](https://github.com/ggreer/the_silver_searcher).

Note: if the file doesn't exist or is a directory, an error is thrown.

## Installation

```
npm install isbinaryfile
```

## Usage

Returns `Promise` (or just `boolean` for `*Sync`). `true` if the file is binary, `false` otherwise.

### isBinaryFile(filepath)

* `filepath` -  a `string` indicating the path to the file.

### isBinaryFile(bytes[, size])

* `bytes` - a `Buffer` of the file's contents.
* `size` - an optional `number` indicating the file size.

### isBinaryFileSync(filepath)

* `filepath` - a `string` indicating the path to the file.


### isBinaryFileSync(bytes[, size])

* `bytes` - a `Buffer` of the file's contents.
* `size` - an optional `number` indicating the file size.

### Examples

Here's an arbitrary usage:

```javascript
const isBinaryFile = require(""isbinaryfile"").isBinaryFile;
const fs = require(""fs"");

const filename = ""fixtures/pdf.pdf"";
const data = fs.readFileSync(filename);
const stat = fs.lstatSync(filename);

isBinaryFile(data, stat.size).then((result) => {
  if (result) {
    console.log(""It is binary!"")
  }
  else {
    console.log(""No it is not."")
  }
});

const isBinaryFileSync = require(""isbinaryfile"").isBinaryFileSync;
const bytes = fs.readFileSync(filename);
const size = fs.lstatSync(filename).size;
console.log(isBinaryFileSync(bytes, size)); // true or false
```

## Testing

Run `npm install`, then run `npm test`.
",'nodejs',2012-10-08T15:33:30Z,2024-06-13T03:12:54Z,16,15,161,6,"('gjtorikian', 150), ('dependabotbot', 23), ('notslang', 9), ('KylePDavis', 2), ('bruce-one', 1), ('CaleyD', 1), ('dguettler', 1), ('zecke', 1), ('iwehrman', 1), ('kevinsawicki', 1), ('mitchelkuijpers', 1), ('Mostafa Eweda', 1), ('DrDub', 1), ('also', 1), ('zburke', 1), ('aleclarson', 1)",12,11,
prodis/wannabe_bool,"If string, numeric, symbol and nil values wanna be a boolean value, they can with the new #to_b method (and more).","# Wannabe Bool

If **string**, **numeric**, **symbol** and **nil** values wanna be a **boolean** value, they can with the new `to_b` method.
Moreover, you can use `WannabeBool::Attributes` module to create predicate methods in your classes.

[![Gem Version](https://badge.fury.io/rb/wannabe_bool.svg)](http://badge.fury.io/rb/wannabe_bool)
[![Build Status](https://travis-ci.org/prodis/wannabe_bool.svg?branch=master)](https://travis-ci.org/prodis/wannabe_bool)
[![Coverage Status](https://coveralls.io/repos/prodis/wannabe_bool/badge.svg?branch=master&service=github)](https://coveralls.io/github/prodis/wannabe_bool?branch=master)
[![Code Climate](https://codeclimate.com/github/prodis/wannabe_bool/badges/gpa.svg)](https://codeclimate.com/github/prodis/wannabe_bool)
[![Dependency Status](https://gemnasium.com/prodis/wannabe_bool.svg)](https://gemnasium.com/prodis/wannabe_bool)
[![GitHub license](https://img.shields.io/apm/l/vim-mode.svg)](LICENSE)


## Installing

### Gemfile
```ruby
gem 'wannabe_bool'
```

### Direct installation
```
$ gem install wannabe_bool
```

## Using

`to_b` method is available on `String`, `Symbol`, `Numeric`, `TrueClass`, `FalseClass` and `NilClass`.

For sake of readability (and personal choice), `to_b` has two aliases:
- `to_bool`
- `to_boolean`

Given this example:
```ruby
{
  one: 'value',
  two: 2,
  mobile?: params[:mobile].to_b
}
```

It could be ""more readable"" like this:
```ruby
{
  one: 'value',
  two: 2,
  mobile?: params[:mobile].to_boolean
}
```

Don't forget to require the gem:
```ruby
require 'wannabe_bool'
```

### String
* Returns `true` if string is one of these values: **t**, **true**, **on**, **y**, **yes**, **1**.
* Returns `false` if string is one of these values: **f**, **false**, **off**, **n**, **no**, **0**.
* For invalid boolean string representations, returns `false` by default. See ""Invalid Value Behaviour"" section for more options.

It ignores trailing spaces and letter cases.

```ruby
'1'.to_b    # => true
't'.to_b    # => true
'T'.to_b    # => true
'true'.to_b # => true
'TRUE'.to_b # => true
'on'.to_b   # => true
'ON'.to_b   # => true
'y'.to_b    # => true
'yes'.to_b  # => true
'YES'.to_b  # => true

' 1 '.to_b    # => true
' t '.to_b    # => true
' T '.to_b    # => true
' true '.to_b # => true
' TRUE '.to_b # => true
' on '.to_b   # => true
' ON '.to_b   # => true
' y '.to_b    # => true
'Y'.to_b      # => true
' Y '.to_b    # => true
' yes '.to_b  # => true
' YES '.to_b  # => true

'0'.to_b     # => false
'f'.to_b     # => false
'F'.to_b     # => false
'false'.to_b # => false
'FALSE'.to_b # => false
'off'.to_b   # => false
'OFF'.to_b   # => false
'n'.to_b     # => false
'N'.to_b     # => false
'no'.to_b    # => false
'NO'.to_b    # => false

' 0 '.to_b     # => false
' f '.to_b     # => false
' F '.to_b     # => false
' false '.to_b # => false
' FALSE '.to_b # => false
' off '.to_b   # => false
' OFF '.to_b   # => false
' n '.to_b     # => false
' N '.to_b     # => false
' no '.to_b    # => false
' NO '.to_b    # => false

''.to_b  # => false
' '.to_b # => false
```
#### Invalid Value Behaviour for strings
You can configure the result for invalid boolean string representations, using the `WannabeBool.invalid_value_behaviour` option.

There are 3 predefined behaviours available: to return `false` (default), `nil` or raise an `ArgumentError`:

```ruby
WannabeBool.invalid_value_behaviour = WannabeBool::InvalidValueBehaviour::False
'wherever'.to_b # => false

WannabeBool.invalid_value_behaviour = WannabeBool::InvalidValueBehaviour::Nil
'wherever'.to_b # => nil

WannabeBool.invalid_value_behaviour = WannabeBool::InvalidValueBehaviour::Error
'wherever'.to_b # => ArgumentError: is not a valid boolean representation
```

Moreover, you can provide your own behaviour for invalid boolean string representations. Just set a proc or lambda, or even any class or object that responds to `call` method.

```ruby
WannabeBool.invalid_value_behaviour = -> { :prodis }
'wherever'.to_b # => :prodis
```

Note that `WannabeBool.invalid_value_behaviour` is a global configuration. Said that, all the results for `to_b` method with invalid boolean string representations will be affected.

### Symbol
Same as `symbol.to_s.to_b`.

```ruby
:'1'.to_b  # => true
:t.to_b    # => true
:true.to_b # => true
:on.to_b   # => true
:y.to_b    # => true
:yes.to_b  # => true

:'0'.to_b   # => false
:f.to_b     # => false
:false.to_b # => false
:off.to_b   # => false
:n.to_b     # => false
:no.to_b    # => false
```

### Numeric
Returns `false` if number is zero. Returns `true` otherwise.

#### Integer
```ruby
0.to_b  # => false
1.to_b  # => true
2.to_b  # => true
-1.to_b # => true
-2.to_b # => true
```

#### Float
```ruby
0.0.to_b  # => false
0.1.to_b  # => true
1.0.to_b  # => true
-0.1.to_b # => true
-1.0.to_b # => true
```

#### BigDecimal
```ruby
require 'bigdecimal'

BigDecimal('0.0').to_b  # => false
BigDecimal('0.1').to_b  # => true
BigDecimal('1.0').to_b  # => true
BigDecimal('-0.1').to_b # => true
BigDecimal('-1.0').to_b # => true
```

### TrueClass
Returns `true`.

```ruby
true.to_b # => true
```

### FalseClass
Returns `false`.

```ruby
false.to_b # => false
```

### NilClass
Returns `false`.

```ruby
nil.to_b # => false
```

## Creating predicate methods

```ruby
class Fake
  include WannabeBool::Attributes

  attr_accessor :name, :main, :published
  attr_wannabe_bool :main, :published
end

fake = Fake.new
fake.main?      # => false
fake.published? # => false

fake.main = true
fake.main? # => true

fake.published = 1
fake.published? # => true

fake.main = 'true'
fake.main? # => true

fake.published = :true
fake.published? # => true
```

## Changelog

[See the changes in each version.](CHANGELOG.md)

## Author
[Fernando Hamasaki de Amorim (prodis)](http://prodis.blog.br)

![Prodis Logo](http://prodis.net.br/images/prodis_150.gif)

## Contributing to wannabe_bool

[See the contributing guide.](CONTRIBUTING.md)

","'boolean', 'conversion', 'predicate-methods', 'prodis', 'ruby', 'wannabe-bool'",2014-10-24T06:33:32Z,2020-11-11T16:47:12Z,3,3,160,6,"('prodis', 83), ('galliani', 1), ('reshleman', 1)",2,2,
smu405/s,,"[![Gitter](https://badges.gitter.im/smu405/s.svg)](https://gitter.im/smu405/s?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge)

# 빅데이터 프로그래밍

* 최종수정일 20210903화

## 교과목 개요

* 본 교과목에서는 대량의 데이터를 분석하는 각 단계를 프로그래밍으로 하는 방법을 배운다.
이 과정은 우선 데이터의 수집, 데이터의 정제, 저장, 분석 및 시각화로 구분할 수 있다.
* 데이터를 수집하기 위해서는 웹사이트를 크롤링하거나, OAuth인증과 REST API를 사용할 수 있다.
수집된 데이터는 파일 또는 NoSQL을 사용하여 저장할 수 있다.
정부에서 제공하는 오픈데이터를 사용하는 방법도 실습한다.
가져온 데이터를 정제하고, 머신러닝으로 분석하고 시각화하기 위해 파이썬과 스파크를 배우게 된다.
된다. 매 강의 초반부는 주제에 필요한 개념을 설명하고, 이를 적용해 프로그래밍 과제를 풀어나가는 방식으로 진행한다.
    * 모듈1: 데이터수집 (1) 웹, (2) api
    * 모듈2: 데이터저장 file (csv, json), nosql
    * 모듈3: 분석 추론, 머신러닝
    * 모듈4: 실시간 분석 Spark
    * 모듈5: 시각화

This class aims to teach programming required over the steps to analyze large-scale datasets.
The students will learn how to collect the data by crawling web sites and use OAuth protocols and REST API.
They will also learn to save the data in files or NoSQL.
We will also learn to program to get open data provided by the government.
We choose to use Python and Spark for programming over the stages of data clean-up, machine learning and visualization.
Each lecture will begin with background concepts to cover the day's topics.
Then the rest of the class will be spent on lab sessions for the students to apply their learning and to complete programming exercises.

## 주별 강의 (--는 범위에서 제외한다는 뜻)

주 | 일자 | 내용 | 실제
-----|-----|-----|-----
주 1 |  9월 1주 | 강의 소개, 노트북설치, 오픈데이터
주 2 |  9월 2주 | 오픈데이터 OAuth, REST API, XML, JSON, 공공데이터
주 3 |  9월 3주 | Spark 소개, 설치
주 4 |  9월 4주 | Spark RDD, map reduce
주 5 |  10월 1주 | Spark Dataframe, schema, graph, plot
주 6 |  10월 2주 | Spark Dataframe, groupby
주 7 |  10월 3주 | 통계, histogram, boxplot, zscore, 윈도우 함수, Anova, 상관관계
주 8 |  10.21 ~ 26 | 중간 시험 (수업시간 시험)
주 9 |  10월 5주 | 기계학습 소개, vectors, tokenizer, 자연어 처리
주 10 |  11월 1주 | 기계학습, 데이터변환, clustering
주 11 |  11월 2주 | 분류 kMeans
주 12 |  11월 3주 | 회귀분석, matrix inverse, OLS, gradient
주 13 |  11월 4주 | 베이지안, matrix
주 14 |  12월 1주 | 베이지안, multinomial
주 15 |  12.16 ~ 21 | 기말시험 (수업시간 시험)

## 과제 (미정)
* 빅데이터 과제를 제안하여, 완성한다. 데이터는 댓글, 열린데이터 등 사용.
* 다음 일정에 따라 ecampus에 제출한다.

주 | 기한 | 내용
-----|-----|-----
1차 | 7주 토요일 | 문제를 정하고, 어떤 데이터를 사용할 것인지. ecampus에 제출
2차 | 13주 토요일 | 전체 제출. 문서출력 및 ecampus에 소스코드 제출. 14주차 발표.

## 참고문헌


",,2016-03-06T12:33:17Z,2023-11-28T23:32:51Z,5,1,27,7,"('jsl', 206), ('jsl', 14), ('jslmac', 8), ('jsl', 1), ('smu405', 1)",2,1,
HamptonMakes/wikimedia-mobile,Wikimedia's Mobile Site in Merb,"= Wikimedia Mobile

This is the 2010 mobile project brought to you by the fine folks at Wikimedia.

The goal of the project is to give access to Wikipedia to all sorts
of different mobile devices in all sorts of different languages.

The basic principle is to modify the Wikipedia pages in such a way that they
are well suited to a large number of devices.

Initially, XHTML/WebKit phones are the primary target. However, work has already
begun on WML devices.

Currently Supported devices:
* iPhone  (OS 2 and 3)
* Android (G1 and G2)
* webOS   (Palm Pre)
* Kindle 2

Hope to target:
* Blackberry (various versions)
* Symbian
* Windows Mobile

= We Need You!

This is an open source project and we need lots of help, so go down a bit further to get things
running.

= Getting Running

1) Install Ruby 1.9.2 and RubyGems version 1.3.6+ from http://www.ruby-lang.org/en/downloads/

2) Install the latest bundler gem
    
  gem install bundler rake

3) Setup host headers for en.m.wikitest.org, *.m.wikitest.org for any language that you want to test. Anything works, but it needs to start with a language code. Point each one at 127.0.0.1 assuming you don't have some sort of freaky setup. For instance...

  127.0.0.1	en.m.wikitest.org
  127.0.0.1	ja.m.wikitest.org
  127.0.0.1	de.m.wikitest.org
  127.0.0.1	fr.m.wikitest.org
  127.0.0.1	pl.m.wikitest.org
  127.0.0.1	es.m.wikitest.org

4) Install Git http://git-scm.com/download

5) Checkout the project with the command... 

  git clone git://github.com/hcatlin/wikimedia-mobile.git

6) Go into the new folder and type:

  bundle install

This will expand all the gem files into your local rubygems bundle.

7) start the server with

  bundle exec merb -a thin
  
We need to use thin because currently Mongrel doesn't work on Ruby 1.9. running 
bin/merb will make sure its using the local bundle requires instead of the system gems

8) Browse to http://en.m.wikitest.org:4000 in Safari (most useful as webkit is the main target)

9) Install Palm Pre, Android, and iPhone Simulators

*You can find lots of info about this around the web*

10) Start hacking!

= What should I work on?

Just run this command...

  rake todo:list

And you should get a nice list of things that are needed

= How are languages used?

In the config/init.rb file, we load up all of the language settings from a file in config/translations/#{lang}.yaml since really each language is a different Wikipedia install. Let's look at an example entry. (May be very out of date!)

  --- 
  go_button_small: Go
  search_results: Search Results
  no_article_found: No Article Found
  featured_article: Today's Featured Article
  in_the_news: In The News
  home_button: Home
  random_button: Random
  regular_wikipedia: View this page on regular Wikipedia
  perm_stop_redirect: Permanently disable mobile site
  error_page_title: We have a problem!
  error_page_text: ""Wikipedia mobile is still under active development and we are working hard to fix all of our internal errors. We have been notified about this error and will be fixing it soon. Please check back!""
  copyright: ""Text is available under the Creative Commons Attribution/Share-Alike License; additional terms may apply. See Terms of Use for details. Wikipedia\xC2\xAE is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.""

= A General Primer

With all of the different formats we have to support, there is a fairly simple system
for correlating a Device with a Format with some specific actions to take based on that
Format.

Process:
* A request comes in from a browser
* The request generates a Device object in merb/extensions/request_extension.rb
* The Device object picks a format in Device#format_name
** Any method_missing that Device receives is looked up in the format specification
** The formats are specified in config/formats.yml
* An Article is fetched for that device
** First, the article figures out what kind of parser needed to be run on the page
** It then generates a key with that parser type. 
** It then checks to see if that has been cached
** If it is not cached, it grabs scrapes the Wikipedia page and processes it with some /app/models/parsers/* class
** If it is cached, it returns that cached object
* The layout is generated with the returned Article#html
** The device format is used heavily here (aka, ""= current_device.stylesheet_name"")
** An ""app/views/layouts/_search_#{format}.html.haml"" file is rendered in the search area
** Changes in the search box and CSS fields are the most different between formats

= A Primer in CSS

This is where we do a lot of work to make sure every format looks great on the device.
We utilize Sass for this. CSS is now Valid sass, but we use imports to make sure that
we aren't repeating code and are only loading one CSS file per request.

Whenever we deploy, we generate out a CSS file for each of the formats (some formats share
them, but that's specified in formats.yml) that contains some shared bits of CSS (namely, _tables.sass and webkit.sass)

If you are going to work on the CSS, do not directly edit the CSS files. They will be automatically
overwritten by the Sass files.

For more information on Sass, please visit http://www.sass-lang.com for a tutorial about Sass' powerful features

= A Primer in Formats

Formats are the main mechanism used to correlate Devices with their differing behaviours.
A basic format looks something like this: 

  html: &defaults
    view_format: 'html'
    search_bar: 'default'
    with_layout: ""application""
    css_file_name: ""default""
    supports_javascript: false

  capable: &capable
    <<: *defaults
    supports_javascript: true

  webkit: &webkit
    <<: *capable
    search_bar: 'webkit'
    css_file_name: 'webkit'
      

We are using some of the magic of YAML here to help generate these. ""capable"" is a copy of the ""html"" format, but
with one change... we enable javascript. ""webkit"" has the same properties as ""capable"", but we specify a new search
bar and a new css file name. You can see this throughout the file. It allows us to be very, very specific with
how we deal with a particular device.

= Running the Test Suite

  rake spec

= Random Useful Things

* Wikimedia language settings http://en.wikipedia.org/w/api.php?action=sitematrix

= People Who Have Helped!

Well, because I'm lazy and I hate versioning this kind of thing... check out Ohloh to find out who has worked on this project the most! https://www.ohloh.net/p/wikimedia-mobile/contributors

But seriously, this thing wouldn't be possible at all if it weren't for all of the amazing developers out there who have spent their free time making Wikimedia Mobile totally freaking awesome.

",,2008-11-20T20:13:58Z,2022-11-21T23:54:53Z,24,14,165,8,"('HamptonMakes', 656), ('hartman', 110), ('Hampton Catlin', 97), ('root', 31), ('Jens Herrmann', 13), ('trptcolin', 10), ('Hampton Catlin', 10), ('brandondrew', 6), ('demon', 6), ('merbjedi', 5), ('Daniel Neighman', 4), ('wycats', 2), ('tstarling', 2), ('qhoxie', 2), ('Makoto Inoue', 2), ('FooBarWidget', 2), ('Ian Ownbey', 1), ('Joshua Vera', 1), ('hugolpz', 1), ('shayarnett', 1), ('Stefan Saasen', 1), ('vesan', 1), ('nicolas', 1), ('t-ashula', 1)",8,4,
goodtft/LCD-show,"  2.4"" 2.8""3.2"" 3.5"" 5.0"" 7.0"" TFT LCD driver for the Raspberry PI 3B+/A/A+/B/B+/PI2/ PI3/ZERO/ZERO W","### Install drivers in the Ubuntu system
https://github.com/lcdwiki/LCD-show-ubuntu

### Install drivers in the Kali system
https://github.com/lcdwiki/LCD-show-kali

### Install drivers in the RetroPie system
https://github.com/lcdwiki/LCD-show-retropie



Install drivers in the Raspbian system
====================================================
Update: 
  v2.1-20191106
  Update to support MHS35B
Update: 
  v2.0-20190704
  Update to support rotate the display direction
Update: 
  v1.9-20181204
  Update to support MHS40 & MHS32
Update: 
  v1.8-20180907
  Update to support MHS35
Update: 
  v1.7-20180320
  Update to support Raspbian Version: March 2018(Release date:2018-03-13)
Update: 
  v1.6-20170824
  Update xserver to support Raspbian-2017-08-16
Update: 
  v1.5-20170706
  Update to support Raspbian-2017-07-05, Raspbian-2017-06-21
Update: 
  v1.3-20170612
  fixed to support Raspbian-2017-03-02, Raspbian-2017-04-10
Update: 
  v1.2-20170302
  Add xserver-xorg-input-evdev_1%3a2.10.3-1_armhf.deb to support Raspbian-2017-03-02
Update: 
  v1.1-20160815


# How to install the LCD driver of Raspberry Pi
  
1.)Step1, Install Raspbian official mirror 
====================================================
  a)Download Raspbian official mirror:
  https://www.raspberrypi.org/downloads/
  b)Use“SDFormatter.exe”to Format your TF Card
  c)Use“Win32DiskImager.exe” Burning mirror to TF Card
     
2.) Step2, Clone my repo onto your pi
====================================================
Use SSH to connect the Raspberry Pi, 
And Ensure that the Raspberry Pi is connected to the Internet before executing the following commands:
-----------------------------------------------------------------------------------------------------

```sudo rm -rf LCD-show```
```git clone https://github.com/goodtft/LCD-show.git```
```chmod -R 755 LCD-show```
```cd LCD-show/```
  
3.)Step3, According to your LCD's type, excute the corresponding driver:
====================================================

# 2.4” RPi Display (MPI2401):
### Driver install:
sudo ./LCD24-show
### WIKI:
CN: http://www.lcdwiki.com/zh/2.4inch_RPi_Display  
EN: http://www.lcdwiki.com/2.4inch_RPi_Display
 

# 2.4” RPi Display For RPi 3A+ (MPI2411):
### Driver install:
sudo ./LCD24-3A+-show  
### WIKI:
CN: http://www.lcdwiki.com/zh/2.4inch_RPi_Display_For_RPi_3A+   
EN: http://www.lcdwiki.com/2.4inch_RPi_Display_For_RPi_3A+

# 2.8” RPi Display (MPI2801):
### Driver install:
sudo ./LCD28-show 
### WIKI:
CN: http://www.lcdwiki.com/zh/2.8inch_RPi_Display  
EN: http://www.lcdwiki.com/2.8inch_RPi_Display
  
# 3.2” RPi Display (MPI3201):
### Driver install:
sudo ./LCD32-show   
### WIKI:
CN: http://www.lcdwiki.com/zh/3.2inch_RPi_Display  
EN: http://www.lcdwiki.com/3.2inch_RPi_Display

# MHS-3.2” RPi Display (MHS3232):
### Driver install:
sudo ./MHS32-show   
### WIKI:
CN: http://www.lcdwiki.com/zh/MHS-3.2inch_Display  
EN: http://www.lcdwiki.com/MHS-3.2inch_Display

# 3.5” RPi Display(MPI3501):
### Driver install:
sudo ./LCD35-show
### WIKI:
CN: http://www.lcdwiki.com/zh/3.5inch_RPi_Display  
EN: http://www.lcdwiki.com/3.5inch_RPi_Display
   
# 3.5” HDMI Display-B(MPI3508):
### Driver install:
sudo ./MPI3508-show
### WIKI:
CN: http://www.lcdwiki.com/zh/3.5inch_HDMI_Display-B  
EN: http://www.lcdwiki.com/3.5inch_HDMI_Display-B
    
# MHS-3.5” RPi Display(MHS3528):
### Driver install:
sudo ./MHS35-show
### WIKI:
CN: http://www.lcdwiki.com/zh/MHS-3.5inch_RPi_Display  
EN:http://www.lcdwiki.com/MHS-3.5inch_RPi_Display

# MHS-3.5” RPi Display-B(MHS35XX):
### Driver install:
sudo ./MHS35B-show
### WIKI:
CN: http://www.lcdwiki.com/zh/MHS-3.5inch_RPi_Display-B  
EN:http://www.lcdwiki.com/MHS-3.5inch_RPi_Display-B

# 4.0"" HDMI Display(MPI4008):
### Driver install:
sudo ./MPI4008-show
### WIKI:
CN: http://www.lcdwiki.com/zh/4inch_HDMI_Display-C  
EN: http://www.lcdwiki.com/4inch_HDMI_Display-C
   
# MHS-4.0"" HDMI Display-B(MHS4001):
### Driver install:
sudo ./MHS40-show
### WIKI:
CN: http://www.lcdwiki.com/zh/MHS-4.0inch_Display-B  
EN: http://www.lcdwiki.com/MHS-4.0inch_Display-B
  
# 5.0” HDMI Display(Resistance touch)(MPI5008):
### Driver install:
sudo ./LCD5-show
### WIKI:
CN: http://www.lcdwiki.com/zh/5inch_HDMI_Display  
EN: http://www.lcdwiki.com/5inch_HDMI_Display
    
# 5inch HDMI Display-B(Capacitor touch)(MPI5001):
### Driver install:
sudo ./MPI5001-show
### WIKI:
CN: http://www.lcdwiki.com/zh/5inch_HDMI_Display-B  
EN: http://www.lcdwiki.com/5inch_HDMI_Display-B
    
# 7inch HDMI Display-B-800X480(MPI7001):
### Driver install:
sudo ./LCD7B-show
### WIKI:
CN: http://www.lcdwiki.com/zh/7inch_HDMI_Display-B  
EN: http://www.lcdwiki.com/7inch_HDMI_Display-B
   
# 7inch HDMI Display-C-1024X600(MPI7002):
### Driver install:
sudo ./LCD7C-show
### WIKI:
CN: http://www.lcdwiki.com/zh/7inch_HDMI_Display-C  
EN: http://www.lcdwiki.com/7inch_HDMI_Display-C
   
Wait for a moment after executing the above command, then you can use the corresponding raspberry LCD.




# How to rotate the display direction

This method only applies to the Raspberry Pi series of display screens, other display screens do not apply.

### Method 1, If the driver is not installed, execute the following command (Raspberry Pi needs to connected to the Internet):

sudo rm -rf LCD-show
git clone https://github.com/goodtft/LCD-show.git
chmod -R 755 LCD-show
cd LCD-show/
sudo ./XXX-show 90

After execution, the driver will be installed. The system will automatically restart, and the display screen will rotate 90 degrees to display and touch normally.
( ' XXX-show ' can be changed to the corresponding driver, and ' 90 ' can be changed to 0, 90, 180 and 270, respectively representing rotation angles of 0 degrees, 90 degrees, 180 degrees, 270 degrees)

### Method 2, If the driver is already installed, execute the following command:

cd LCD-show/
sudo ./rotate.sh 90

After execution, the system will automatically restart, and the display screen will rotate 90 degrees to display and touch normally.
( ' 90 ' can be changed to 0, 90, 180 and 270, respectively representing rotation angles of 0 degrees, 90 degrees, 180 degrees, 270 degrees)
(If the rotate.sh prompt cannot be found, use Method 1 to install the latest drivers)



",,2016-08-15T11:49:27Z,2024-05-07T07:43:37Z,4,2,2230,107,"('goodtft', 374), ('lcdwiki', 3), ('goodtft', 1), ('lcdwiki', 1)",2,1,
rappasoft/laravel-boilerplate,The Laravel Boilerplate Project - https://laravel-boilerplate.com,"## Laravel Boilerplate (Current: Laravel 8.*) ([Demo](https://demo.laravel-boilerplate.com))

[![Latest Stable Version](https://poser.pugx.org/rappasoft/laravel-boilerplate/v/stable)](https://packagist.org/packages/rappasoft/laravel-boilerplate)
[![Latest Unstable Version](https://poser.pugx.org/rappasoft/laravel-boilerplate/v/unstable)](https://packagist.org/packages/rappasoft/laravel-boilerplate) 

[![StyleCI](https://styleci.io/repos/30171828/shield?style=plastic)](https://github.styleci.io/repos/30171828)
![Tests](https://github.com/rappasoft/laravel-boilerplate/workflows/Tests/badge.svg?branch=master)

![GitHub contributors](https://img.shields.io/github/contributors/rappasoft/laravel-boilerplate.svg)
![GitHub stars](https://img.shields.io/github/stars/rappasoft/laravel-boilerplate.svg?style=social)

### Enjoying this project? [Buy me a beer 🍺](https://www.buymeacoffee.com/rappasoft)

### Demo Credentials

**Admin:** admin@admin.com  
**Password:** secret

**User:** user@user.com  
**Password:** secret

### Official Documentation

[Click here for the official documentation](http://laravel-boilerplate.com)

### Slack Channel

Please join us in our Slack channel to get faster responses to your questions. Get your invite here: https://laravel-5-boilerplate.herokuapp.com

### Introduction

Laravel Boilerplate provides you with a massive head start on any size web application. Out of the box it has features like a backend built on CoreUI with Spatie/Permission authorization. It has a frontend scaffold built on Bootstrap 4. Other features such as Two Factor Authentication, User/Role management, searchable/sortable tables built on my [Laravel Livewire tables plugin](https://github.com/rappasoft/laravel-livewire-tables), user impersonation, timezone support, multi-lingual support with 20+ built in languages, demo mode, and much more.

### Issues

If you come across any issues please [report them here](https://github.com/rappasoft/laravel-boilerplate/issues).

### Contributing

Thank you for considering contributing to the Laravel Boilerplate project! Please feel free to make any pull requests, or e-mail me a feature request you would like to see in the future to Anthony Rappa at rappa819@gmail.com.

### Security Vulnerabilities

If you discover a security vulnerability within this boilerplate, please send an e-mail to Anthony Rappa at rappa819@gmail.com, or create a pull request if possible. All security vulnerabilities will be promptly addressed.

### License

MIT: [http://anthony.mit-license.org](http://anthony.mit-license.org)
","'boilerplate', 'laravel', 'laravel-boilerplate', 'php', 'skeleton', 'starter-project'",2015-02-02T04:59:07Z,2024-06-16T09:56:28Z,143,122,5561,300,"('rappasoft', 2224), ('blomdahldaniel', 112), ('bambamboole', 62), ('vjandrea', 30), ('codedeep', 24), ('rivajunior', 23), ('error500', 23), ('cheshirec7', 22), ('dgallinari', 16), ('poseso', 16), ('bryanrscott', 15), ('DennisRas', 15), ('linzhengen', 12), ('anusornc', 9), ('jonphipps', 9), ('egdavid', 9), ('gotrecillo', 7), ('tamplan', 7), ('christoph-kluge', 7), ('bingalls', 7), ('kangdetar', 6), ('Mingeun Kim', 6), ('paulandroshchuk', 6), ('gbaudoin', 6), ('xnekv03', 6), ('ninjaparade', 5), ('mshukurlu', 5), ('Mono Cidar', 5), ('limatheus', 5), ('helmerdavila', 5), ('H T', 5), ('glaubersp', 5), ('PunchRockgroin', 4), ('rawilk', 4), ('Pegasuz', 4), ('mikimaine', 4), ('lloricode', 4), ('Jordan Hall', 4), ('bsh314', 4), ('belzaaron', 4), ('jericopulvera', 3), ('soringabriel', 3), ('vanita5', 3), ('evaleries', 3), ('Shuyinsan', 3), ('FaZeRs', 3), ('nasirkhan', 3), ('rijensky', 3), ('hariadi', 3), ('Eko Eryanto', 3), ('ChristianGiupponi', 3), ('Carlo-F', 3), ('Baptiste GAUTHIER', 3), ('Arnaud Lecat', 3), ('TrimbaDev', 2), ('Suteepat Damrongyingsupab', 2), ('tianissimo', 2), ('kindmedia', 2), ('timgws', 2), ('baronkoko', 2), ('vedatbozkurt', 2), ('Vernard Alexis Luz', 2), ('vernard', 2), ('wizston', 2), ('Wouter Dendas', 2), ('juandavilau', 2), ('osthafen', 2), ('repat', 2), ('«Aleh»', 2), ('Antoniskp', 2), ('dylanharbour', 2), ('UnderlineWords', 2), ('Josh Benahmou', 2), ('kdhana', 2), ('luizvid', 2), ('Manuel Christlieb', 2), ('mpseniorprogramming', 2), ('matthiku', 2), ('grasin', 2), ('PReimers', 2), ('Shuyinsama', 2), ('pavog', 2), ('wikiccu', 2), ('SimZal', 2), ('bvbunnik', 1), ('boi1', 1), ('yuta2', 1), ('Yanwei Jiang', 1), ('VisiGod', 1), ('viralsolani', 1), ('Vincent Mimoun-Prat', 1), ('vsovyak', 1), ('oriceon', 1), ('tomaszstrojny', 1), ('Tom Walsh', 1), ('Soufraz', 1), ('Sogl', 1), ('sebastiandedeyne', 1), ('AAllport', 1), ('dependabotbot', 1), ('gbrock', 1), ('kyxeo', 1), ('llz', 1), ('ltiisidii', 1), ('mohamed-zezo', 1), ('osdebianly', 1), ('pebbo', 1), ('rabol', 1), ('sephz', 1), ('skys215', 1), ('mmakhno', 1), ('tinh1115', 1), ('truejay', 1), ('Ziadjb', 1), ('andersondeoliveiramachado', 1), ('Anderson de Oliveira Machado', 1), ('CodeAndWeb', 1), ('anujjaha', 1), ('ChanningDefoe', 1), ('Colbydude', 1), ('dregad', 1), ('dpwilhelmsen', 1), ('wgqi1126', 1), ('filimoni', 1), ('GabrielFiel', 1), ('gc2lgno', 1), ('gpassarelli', 1), ('jneumann', 1), ('tienrocker', 1), ('Magentron', 1), ('DivineOmega', 1), ('lawsonjt', 1), ('vool', 1), ('hikouki', 1), ('krzysztofrewak', 1), ('limonte', 1), ('Lucisu', 1), ('arnonm-intel', 1), ('num3thod', 1), ('mwkcoding', 1), ('onurmutlu', 1), ('Philip Gisella', 1), ('minhphuc429', 1)",59,51,
szilard/benchm-ml,"A minimal benchmark for scalability, speed and accuracy of commonly used open source implementations (R packages, Python scikit-learn, H2O, xgboost, Spark MLlib etc.) of the top machine learning algorithms for binary classification (random forests, gradient boosted trees, deep neural networks etc.).","
## Simple/limited/incomplete benchmark for scalability, speed and accuracy of machine learning libraries for classification

_**All benchmarks are wrong, but some are useful**_

This project aims at a *minimal* benchmark for scalability, speed and accuracy of commonly used implementations
of a few machine learning algorithms. The target of this study is binary classification with numeric and categorical inputs (of 
limited cardinality i.e. not very sparse) and no missing data, perhaps the most common problem in business
applications (e.g. credit scoring, fraud detection or churn prediction). If the input matrix is of *n* x *p*, *n* is 
varied as 10K, 100K, 1M, 10M, while *p* is ~1K (after expanding the categoricals into dummy 
variables/one-hot encoding). This particular type of data structure/size (the largest) stems from this author's interest in 
some particular business applications.

**A large part of this benchmark was done in 2015, with a number of updates later on as things have changed. Make sure you read 
at the [end](https://github.com/szilard/benchm-ml#summary) of this repo a summary of how the focus has changed over time,
and why instead of updating this benchmark I started a new one (and where to find it).**

The algorithms studied are 
- linear (logistic regression, linear SVM)
- random forest
- boosting 
- deep neural network

in various commonly used open source implementations like 
- R packages
- Python scikit-learn
- Vowpal Wabbit
- H2O 
- xgboost
- lightgbm (added in 2017)
- Spark MLlib.

**Update (June 2015):** It turns out these are the [most popular tools](https://github.com/szilard/list-ml-tools)
used for machine learning indeed. If your software tool of choice is not here, you can do a minimal benchmark
with little work with the [following instructions](z-other-tools).

Random forest, boosting and more recently deep neural networks are the algos expected to perform the best on the structure/sizes
described above (e.g. vs alternatives such as *k*-nearest neighbors, naive-Bayes, decision trees, linear models etc). 
Non-linear SVMs are also among the best in accuracy in general, but become slow/cannot scale for the larger *n*
sizes we want to deal with. The linear models are less accurate in general and are used here only 
as a baseline (but they can scale better and some of them can deal with very sparse features, so they are great in other use cases). 

By scalability we mean here that the algos are able to complete (in decent time) for the given data sizes with 
the main constraint being RAM (a given algo/implementation will crash if running out of memory). Some 
of the algos/implementations can work in a distributed setting, although the largest dataset in this
study *n* = 10M is less than 1GB, so scaling out to multiple machines should not be necessary and
is not the focus of this current study. (Also, some of the algos perform relatively poorly speedwise in the multi-node setting, where 
communication is over the network rather than via updating shared memory.)
Speed (in the single node setting) is determined by computational
complexity but also if the algo/implementation can use multiple processor cores.
Accuracy is measured by AUC. The interpretability of models is not of concern in this project.

In summary, we are focusing on which algos/implementations can be used to train relatively accurate binary classifiers for data
with millions of observations and thousands of features processed on commodity hardware (mainly one machine with decent RAM and several cores).

## Data

Training datasets of sizes 10K, 100K, 1M, 10M are [generated](0-init/2-gendata.txt) from the well-known airline dataset (using years 2005 and 2006). 
A test set of size 100K is generated from the same (using year 2007). The task is to predict whether a flight will
be delayed by more than 15 minutes. While we study primarily the scalability of algos/implementations, it is also interesting
to see how much more information and consequently accuracy the same model can obtain with more data (more observations).

## Setup 

The tests have been carried out on a Amazon EC2 c3.8xlarge instance (32 cores, 60GB RAM). The tools are freely available and 
their [installation](0-init/1-install.md) is trivial ([version information here](0-init/1a-versions.txt)). For some
of the models that ran out of memory for the larger data sizes a r3.8xlarge instance (32 cores, 250GB RAM) has been used
occasionally. For deep learning on GPUs, p2.xlarge (1 GPU with 12GB video memory, 4 CPU cores, 60GB RAM) instance has been used.

**Update (January 2018):** A more modern approach would use docker for fully automated installing of all ML software and automated
timing/running of tests (which would make it more easy to rerun the tests on new versions of the tools, would make them more reproducible etc).
This approach has been actually used in a successor of this benchmark focusing on the top performing GBM implementations only, see 
[here](https://github.com/szilard/GBM-perf).

## Results

For each algo/tool and each size *n* we observe the following: training time, maximum memory usage during training, CPU usage on the cores, 
and AUC as a measure for predictive accuracy. 
Times to read the data, pre-process the data, score the test data are also observed but not
reported (not the bottleneck).

### Linear Models

The linear models are not the primary focus of this study because of their not so great accuracy vs
the more complex models (on this type of data). 
They are analyzed here only to get some sort of baseline.

The R glm function (the basic R tool for logistic regression) is very slow, 500 seconds on *n* = 0.1M (AUC 70.6).
Therefore, for R the glmnet package is used. For Python/scikit-learn LogisticRegression
(based on the LIBLINEAR C++ library) has been used.

Tool    | *n*  |   Time (sec)  | RAM (GB) | AUC
--------|------|---------------|----------|--------
R       | 10K  |      0.1      |   1      | 66.7
.       | 100K |      0.5      |   1      | 70.3
.       | 1M   |      5        |   1      | 71.1
.       | 10M  |      90       |   5      | 71.1
Python  | 10K  |      0.2      |   2      | 67.6
.       | 100K |       2       |   3      | 70.6
.       | 1M   |       25      |   12     | 71.1
.       | 10M  |  crash/360    |          | 71.1
VW      | 10K  |     0.3 (/10) |          | 66.6
.       | 100K |      3 (/10)  |          | 70.3
.       | 1M   |      10 (/10) |          | 71.0
.       | 10M  |     15        |          | 71.0
H2O     | 10K  |      1        |   1      | 69.6
.       | 100K |      1        |   1      | 70.3
.       | 1M   |      2        |   2      | 70.8
.       | 10M  |      5        |   3      | 71.0
Spark   | 10K  |      1        |   1      | 66.6
.       | 100K |      2        |   1      | 70.2
.       | 1M   |      5        |   2      | 70.9
.       | 10M  |      35       |   10     | 70.9

Python crashes on the 60GB machine, but completes
when RAM is increased to 250GB (using a [sparse format](https://github.com/szilard/benchm-ml/issues/27) 
would help with memory footprint
and likely runtime as well).
The Vowpal Wabbit (VW) running times are reported in the table for 10 passes (online learning) 
over the data for 
the smaller sizes. While VW can be run on multiple cores (as multiple processes communicating with each
other), it has been run here in 
the simplest possible way (1 core). Also keep in mind that VW reads the data on the fly while for the other tools
the times reported exclude reading the data into memory.

One can play with various parameters (such as regularization) and even do some search in the parameter space with
cross-validation to get better accuracy. However, very quick experimentation shows that at least for the larger
sizes regularization does not increase accuracy significantly (which is expected since *n* >> *p*).

![plot-time](1-linear/x-plot-time.png)
![plot-auc](1-linear/x-plot-auc.png)

The main conclusion here is that **it is trivial to train linear models even for *n* = 10M rows virtually in
any of these tools** on a single machine in a matter of seconds. 
H2O and VW are the most memory efficient (VW needs only 1 observation in memory
at a time therefore is the ultimately scalable solution). H2O and VW are also the fastest (for VW the time reported
includes the time to read the data as it is read on the fly).
Again, the differences in memory efficiency and speed will start to really matter only for
larger sizes and beyond the scope of this study.


#### Learning Curve of Linear vs Non-Linear Models


For *this dataset* the accuracy of the linear
model tops-off at moderate sizes while the accuracy of non-linear models (e.g. random forest) 
continues to increase with increasing data size.
This is because a simple linear structure can be extracted already from 
a smaller dataset and having more data points will not change the classification boundary significantly.
On the other hand, more complex models such as random forests can improve further with increasing 
data size by adjusting further the classification boundary.

This means that having more data (""big data"") does not improve further the accuracy of the *linear* model
(at least for this dataset).

Note also that the random forest model is more accurate than the linear one for any size, and 
contrary to the conventional wisdom of ""more data beats better algorithms"", 
the random forest model 
on 1% of the data (100K records) beats the linear model on all the data (10M records). 

![plot-auc](1-linear/z-auc-lin-rf.png)

Similar behavior can be observed in other *non-sparse* datasets, e.g. the 
[Higgs dataset](x1-data-higgs). Contact me (e.g. submit a [github issue](https://github.com/szilard/benchm-ml/issues)) 
if you have learning curves for linear vs non-linear models on other datasets (dense or sparse).

On the other hand, there is certainly a price for higher accuracy in terms of larger required training (CPU) time.

Ultimately, there is a data size - algo (complexity) - cost (CPU time) - accuracy tradeoff 
(to be studied in more details later). Some quick results for H2O:

n     |  Model  |  Time (sec) |   AUC 
------|---------|-------------|--------
10M   |  Linear |    5        |   71.0  
0.1M  |  RF     |    150      |   72.5
10M   |  RF     |    4000     |   77.8


### Random Forest

**Note:** The random forests results have been published in a more organized and self-contained form
in [this blog post](http://datascience.la/benchmarking-random-forest-implementations/).

Random forests with 500 trees have been trained in each tool choosing the default of square root of *p* as the number of
variables to split on.

Tool    | *n*  |   Time (sec)  | RAM (GB) | AUC
-------------------------|------|---------------|----------|--------
R       | 10K  |      50       |   10     | 68.2
.       | 100K |     1200      |   35     | 71.2
.       | 1M   |     crash     |          |
Python  | 10K  |      2        |   2      | 68.4
.       | 100K |     50        |   5      | 71.4
.       | 1M   |     900       |   20     | 73.2
.       | 10M  |     crash     |          |
H2O     | 10K  |      15       |   2      | 69.8
.       | 100K |      150      |   4      | 72.5
.       | 1M   |      600      |    5     | 75.5
.       | 10M  |     4000      |   25     | 77.8
Spark   | 10K  |      50       |   10     | 69.1
.       | 100K |      270      |   30     | 71.3
.       | 1M   |  crash/2000   |          | 71.4
xgboost | 10K  |     4         |    1     | 69.9
.       | 100K |    20         |    1     | 73.2
.       | 1M   |    170        |    2     | 75.3
.       | 10M  |    3000       |    9     | 76.3

![plot-time](2-rf/x-plot-time.png)
![plot-auc](2-rf/x-plot-auc.png)

The [R](2-rf/1.R) implementation (randomForest package) is slow and inefficient in memory use. 
It cannot cope by default with a large number of categories, therefore the data had
to be one-hot encoded. The implementation uses 1 processor core, but with 2 lines of extra code
it is easy to build
the trees in parallel using all the cores and combine them at the end. However, it runs out
of memory already for *n* = 1M. I have to emphasize this has nothing to do with R per se (and I still stand by
arguing R is the best data science platform esp. when it comes to data munging of structured data or
visualization), it is just this
particular (C and Fortran) RF implementation used by the randomForest package that is inefficient.

The [Python](2-rf/2.py) (scikit-learn) implementation is faster, more memory efficient and uses all the cores.
Variables needed to be one-hot encoded (which is more involved than for R) 
and for *n* = 10M doing this exhausted all the memory. Even if using a larger machine
with 250GB of memory (and 140GB free for RF after transforming all the data) the Python implementation
runs out of memory and crashes for this larger size. The algo 
[finished successfully](https://github.com/szilard/benchm-ml/issues/1) 
though when run on the larger box with simple integer encoding (which
for some datasets/cases might be actually a good approximation/choice).

The [H2O](2-rf/4-h2o.R) implementation is fast, memory efficient and uses all cores. It deals
with categorical variables automatically. It is also more accurate than the studied R/Python packages, 
which may be because
of dealing properly with the categorical variables, i.e. internally in the algo
rather than working from a previously 1-hot encoded dataset (where the link between the dummies 
belonging to the same original variable is lost).

[Spark](2-rf/5b-spark.txt) (MLlib) implementation is slower and has a larger memory footprint.
It runs out of memory already at *n* = 1M (with 250G of RAM it finishes for *n* = 1M, 
but it crashes for *n* = 10M). However, as Spark
can run on a cluster one can throw in even more RAM by using more nodes.
I also tried to provide the categorical
variables encoded simply as integers and passing the `categoricalFeaturesInfo` parameter, but that made
training much slower.
A convenience issue, reading the data is more than one line of code and at the start of this benchmark project
Spark did not provide a one-hot encoder
for the categorical data (therefore I used R for that). This has been ammnded since, thanks @jkbradley
for native 1-hot encoding [code](https://github.com/szilard/benchm-ml/blob/a04f7136438598ce700c3adbb0fee2efa29488f3/z-other-tools/5xa-spark-1hot.txt).
In earlier versions of this benchmark there was an issue of Spark random forests having
low prediction accuracy vs the other methods. This was due to aggregating votes rather than probabilities
and it has been addressed by @jkbradley in this 
[code](https://github.com/szilard/benchm-ml/blob/master/2-rf/5b-spark.txt#L64) (will be included in next Spark release).
There is still an open issue on the accuracy for *n* = 1M (see the breaking trend in the AUC graph).
To get more insights on the issues above see
[more comments](http://datascience.la/benchmarking-random-forest-implementations/#comment-53599) 
by Joseph Bradley @jkbradley of Databricks/Spark project (thanks, Joseph).

**Update (September 2016):** Spark 2.0 introduces a new API (Pipelines/""Spark ML"" vs ""Spark MLlib"") and the 
[code](https://github.com/szilard/benchm-ml/blob/406a00e9e501405589d234607e56f64a35ab1ddf/z-other-tools/5xb-spark-trainpred--sp20.txt) becomes significantly simpler.
Furthermore, Spark 1.5, 1.6 and 2.0 introduced several optimizations (""Tungsten"") that have improved significantly for example the speed on queries (SparkSQL).
However, there is no speed improvement for random forests, they actually got a bit 
[slower](https://github.com/szilard/benchm-ml/tree/master/z-other-tools#how-to-benchmark-your-tool-of-choice-with-minimal-work).

I also tried [xgboost](2-rf/6-xgboost.R), a popular library for boosting which is capable to build 
random forests as well. It is fast, memory efficient and of high accuracy. Note the different shapes of the
AUC and runtime vs dataset size curves for H2O and xgboost, some discussions 
[here](https://github.com/szilard/benchm-ml/issues/14).

Both H2O and xgboost have interfaces from R and Python.

A few other RF implementations (open source and commercial as well) 
have been benchmarked quickly on 1M records and runtime and AUC are 
[reported here](z-other-tools).

It would be nice to study the dependence of running time and accuracy as a function of
the (hyper)parameter values of the algorithm, but a quick idea can be obtained easily for the
H2O implementation from this table (*n* = 10M on 250GB RAM):

ntree    | depth  |   nbins  | mtries  | Time (hrs)   |  AUC
---------|--------|----------|---------|--------------|--------
500      |  20    |    20    | -1 (2)  |      1.2     |  77.8 
500      |  50    |    200   | -1 (2)  |      4.5     |  78.9
500      |  50    |    200   |   3     |      5.5     |  78.9
5000     |  50    |    200   | -1 (2)  |      45      |  79.0
500      |  100   |   1000   | -1 (2)  |      8.3     |  80.1

other hyperparameters being sample rate (at each tree), min number of observations in nodes, impurity
function.

One can see that the AUC could be improved further and the best AUC from this dataset with random forests
seems to be around 80 (the best AUC from linear models seems to be around 71, and we will compare
with boosting and deep learning later).



### Boosting (Gradient Boosted Trees/Gradient Boosting Machines)

Compared to random forests, GBMs have a more complex relationship between hyperparameters
and accuracy (and also runtime). The main hyperparameters are learning (shrinkage) rate, number of trees, 
max depth of trees, while some others are number of bins, sample rate (at each tree), min number of 
observations in nodes. To add to complexity, GBMs can overfit in the sense that adding more trees at some point will
result in decreasing accuracy on a test set (while on the training set ""accuracy"" keeps increasing).

For example using xgboost for `n = 100K` `learn_rate = 0.01` `max_depth = 16` (and the
`printEveryN = 100` and `eval_metric = ""auc""` options) the AUC on the train and test sets,
respectively after `n_trees` number of iterations are:

![plot-overfit](3-boosting/x-overfit.png)

One can see the AUC on the test set decreases after 1000 iterations (overfitting). 
xgboost has a handy early stopping option (`early_stop_round = k` - training
will stop if performance e.g. on a holdout set keeps getting worse consecutively 
for `k` rounds). If one does not know where to stop, one might underfit (too few iterations)
or overfit (too many iterations) and the resulting model will be suboptimal in accuracy
(see Fig. above).

Doing an extensive search for the best model is not the main goal of this project.
Nevertheless, a quick 
[exploratory search](https://github.com/szilard/benchm-ml/blob/master/3-boosting/0-xgboost-init-grid.R) 
in the hyperparameter space has been
conducted using xgboost (with the early stopping option). For this a separate validation
set of size 100K from 2007 data not used in the test set has been generated. The goal is
to find parameter values that provide decent accuracy and then run all GBM implementations
(R, Python scikit-learn, etc) with those parameter values to compare speed/scalability (and 
accuracy).

The smaller the `learn_rate` the better the AUC, but for very small values training time increases dramatically, 
therefore we use `learn_rate = 0.01` as a compromise. 
Unlike recommended in much of the literature, shallow trees don't produce best (or close to best) results, 
the grid search showed better accuracy e.g. with `max_depth = 16`.
The number of trees to produce optimal results for the above hyperparameter values depend though on the training set size. 
For `n_trees = 1000` we don't reach the overfitting regime
for either size and we use this value for studying the speed/scalability of the different implementations. 
(Values for the other hyper-parameters that seem to work well are: 
`sample_rate = 0.5` `min_obs_node = 1`.) We call this experiment A (in the table below).

Unfortunately some implementations take too much time to run for the above parameter values
(and Spark runs out of memory). Therefore, another set of parameter values (that provide lower accuracy but faster training times)
has been also used to study speed/scalability: `learn_rate = 0.1` `max_depth = 6` `n_trees = 300`. 
We call this experiment B.

I have to emphasize that while I make the effort to match parameter values for all algos/implementations,
every implementation is different, some don't have all the above parameters, while some might
use the existing ones in a slightly different way (you can also see the resulting model/AUC is somewhat different).
Nevertheless, the results below give us a pretty good idea of how the implementations compare to each other.


Tool    | *n*  | Time (s) A    | Time (s) B | AUC A  | AUC B  | RAM(GB) A | RAM(GB) B
--------|------|---------------|------------|--------|--------|-----------|-----------
R       | 10K  |   20          |   3        |   64.9 |  63.1  |    1      |     1
.       | 100K |   200         |   30       |   72.3 |  71.6  |    1      |     1
.       | 1M   |   3000        |   400      |   74.1 |  73.9  |    1      |     1
.       | 10M  |               |   5000     |        |  74.3  |           |     4
Python  | 10K  |    1100       |    120     |   69.9 |  69.1  |    2      |     2
.       | 100K |               |   1500     |        |  72.9  |           |     3
.       | 1M   |               |            |        |        |           |
.       | 10M  |               |            |        |        |           |
H2O     | 10K  |    90         |    7       |  68.2  |  67.7  |    3      |   2
.       | 100K |   500         |    40      |  71.8  |  72.3  |    3      |   2
.       | 1M   |   900         |    60      |  75.9  |  74.3  |    9      |   2
.       | 10M  |   3500        |    300     |  78.3  |  74.6  |    11     |   20
Spark   | 10K  |  180000       |   700      |  66.4  |  67.8  |    30     |   10
.       | 100K |               |   1200     |        |  72.3  |           |   30
.       | 1M   |               |   6000     |        |  73.8  |           |   30 
.       | 10M  |               |   (60000)  |        | (74.1) |           | crash (110) 
xgboost | 10K  |   6           |     1      |  70.3  |  69.8  |   1       |  1
.       | 100K |   40          |     4      |  74.1  |  73.5  |   1       |  1
.       | 1M   |   400         |     45     |  76.9  |  74.5  |   1       |  1
.       | 10M  |   9000        |    1000    |  78.7  |  74.7  |   6       |  5

![plot-time](3-boosting/x-plot-time.png)
![plot-auc](3-boosting/x-plot-auc.png)

The memory footprint of GBMs is in general smaller than for random forests, therefore the
bottleneck is mainly training time (although besides being slow Spark is inefficient in memory use as well
especially for deeper trees, therefore it crashes).

Similar to random forests, H2O and xgboost are the fastest (both use
multithreading). R does relatively well considering that it's a single-threaded implementation.
Python is very slow with one-hot encoding of categoricals, but almost as fast as R (just 1.5x slower) with
simple/integer encoding. Spark is slow and memory inefficient,
but at least for shallow trees it achieves similar accuracy to the other methods (unlike in
the case of random forests, where Spark provides lower accuracy than
its peers).

Compared to random forests, boosting requires more tuning to get a good choice of hyperparameters.
Quick results for H2O and xgboost with `n = 10M` (largest data)
`learn_rate = 0.01` (the smaller the better
AUC, but also longer and longer training times) `max_depth = 20` (after rough search with 
`max_depth = 2,5,10,20,50`) `n_trees = 5000` (close to xgboost early stop)
`min_obs_node = 1` (and `sample_rate = 0.5` for xgboost, `n_bins = 1000` for H2O):

Tool    |  Time (hr) |   AUC
--------|------------|---------
H2O     |   7.5      |   79.8
H2O-3   |   9.5      |   81.2
xgboost |   14       |   81.1

Compare with H2O random forest from previous section (Time 8.3	hr, AUC 80.1).
H2O-3 is the new generation/version of H2O. 

**Update (May 2017):** A new tool for GBMs, LightGBM came out recently. While it's not (yet) as widely used as the tools above,
it is now the fastest one. There is also recent work in running xgboost and LightGBM on GPUs. Therefore I started a new 
(leaner) github repo to keep track of the best GBM tools 
[here](https://github.com/szilard/GBM-perf) (and ignore mediocre tools such as Spark).

**Update (January 2018)**: I dockerized the GBM measurements for h2o, xgboost and lightgbm (both CPU and GPU versions). The repo linked in 
the paragraph above will contain all further development w.r.t. GBM implementations. GBMs are typically the most accurate algos
for supervised learning on structured/tabular data and therefore of my main interest 
(e.g. compared with the other 3 algos discussed in this current benchmark - linear models, random forests and neural networks), 
and the dockerization makes it easier to keep that other repo up to date with tests on the newest versions of the tools and
potentially adding new ML tools. **Therefore this new [GBM-perf](https://github.com/szilard/GBM-perf) repo can be considered as
a ""successor"" of the current one.**

### Deep neural networks

Deep learning has been extremely successful on a few classes of data/machine learning problems such as involving images, 
speech and text (supervised learning) and games (reinforcement learning).
However, it seems that in ""traditional"" machine learning problems such as fraud detection, credit scoring or churn,
deep learning is not as successful and it provides lower accuracy than random forests or gradient boosting machines. 
My experiments (November 2015) on the airline dataset used in this repo and also on another 
commercial dataset have [conjectured](https://github.com/szilard/benchm-ml/issues/28) this, 
but unfortunately most of the hype surrounding deep learning and ""artificial intelligence"" overwhelms this reality,
and there are only a few references in this direction e.g. 
[here](https://www.quora.com/Why-is-xgboost-given-so-much-less-attention-than-deep-learning-despite-its-ubiquity-in-winning-Kaggle-solutions/answer/Tianqi-Chen-1),
[here](https://speakerdeck.com/datasciencela/tianqi-chen-xgboost-implementation-details-la-workshop-talk?slide=28)
or [here](https://www.youtube.com/watch?v=8KzjARKIgTo#t=28m15s).

Here are the results of a few fully connected network architectures 
[trained](4-DL/1-h2o.R)
with various optimization schemes (adaptive, rate annealing, momentum etc.) 
and various regularizers (dropout, L1, L2) 
using H2O with early stopping on the 10M dataset:

Params                                                               |  AUC  |  Time (s) | Epochs 
---------------------------------------------------------------------|-------|-----------|----------
default: `activation = ""Rectifier"", hidden = c(200,200)`             | 73.1  |    270    |  1.8
`hidden = c(50,50,50,50), input_dropout_ratio = 0.2`                 | 73.2  |    140    |  2.7
`hidden = c(50,50,50,50)`                                            | 73.2  |    110    |  1.9
`hidden = c(20,20)`                                                  | 73.1  |    100    |  4.6
`hidden = c(20)`                                                     | 73.1  |    120    |  6.7
`hidden = c(10)`                                                     | 73.2  |    150    |  12
`hidden = c(5)`                                                      | 72.9  |    110    |  9.3
`hidden = c(1)` (~logistic regression)                               | 71.2  |    120    |  13
`hidden = c(200,200), l1 = 1e-5, l2 = 1e-5`                          | 73.1  |    260    |  1.8
`RectifierWithDropout, c(200,200,200,200), dropout=c(0.2,0.1,0.1,0)` | 73.3  |    440    |  2.0
`ADADELTA rho = 0.95, epsilon = 1e-06`                               | 71.1  |    240    |  1.7
` rho = 0.999, epsilon = 1e-08`                                      | 73.3  |    270    |  1.9
`adaptive = FALSE` default: `rate = 0.005, decay = 1, momentum = 0`  | 73.0  |    340    |  1.1
`rate = 0.001, momentum = 0.5 / 1e5 / 0.99`                          | 73.2  |    410    |  0.7
`rate = 0.01, momentum = 0.5 / 1e5 / 0.99`                           | 73.3  |    280    |  0.9
`rate = 0.01, rate_annealing = 1e-05, momentum = 0.5 / 1e5 / 0.99`   | 73.5  |    360    |  1
`rate = 0.01, rate_annealing = 1e-04, momentum = 0.5 / 1e5 / 0.99`   | 72.7  |    3700   |  8.7
`rate = 0.01, rate_annealing = 1e-05, momentum = 0.5 / 1e5 / 0.9`    | 73.4  |    350    |  0.9


It looks like the neural nets are underfitting and are not able to capture the same structure in the
data as the random forests/GBMs can (AUC 80-81). Therefore adding various forms of regularization
does not improve accuracy (see above). Note also that by using early stopping (based on the decrease of
accuracy on a validation dataset during training iterations) the training takes relatively short time
(compared to RF/GBM), also a sign of effectively low model complexity.
Remarkably, the nets with more layers (deep) are not performing better than a simple net with
1 hidden layer and a small number of neurons in that layer (10). 

Timing on the 1M dataset of various tools (fully connected networks, 2 hidden layers, 200 neurons each, ReLU,  
SGD, learning rate 0.01, momentum 0.9, 1 epoch), code 
[here](https://github.com/szilard/benchm-ml/tree/master/4-DL):

Tool         | Time GPU  | Time CPU
-------------|-----------|-----------
h2o          |    -      |   50
mxnet        |    35     |   65
keras+TF     |    35     |   60
keras+theano |    25     |   70

(GPU = p2.xlarge, CPU = r3.8xlarge 32c for h2o/mxnet, p2.xlarge 4c for TF/theano, theano uses 1 core only)

Despite not being great (in accuracy) on tabular data of the type above, 
deep learning has been a blast in domains such as image, speech and somewhat text,
and I'm planing to do a [benchmark of tools](https://github.com/szilard/benchm-dl) 
in that area as well (mostly conv-nets and RNNs/LSTMs).



### Big(ger) Data

While my primary interest is in machine learning on datasets of 10M records, you might be interested in 
larger datasets. Some problems might need a cluster, though there has been a tendency recently 
to solve every problem with distributed computing, needed or not. As a reminder, sending data
over a network vs using shared memory is a big speed difference. Also several popular distributed systems
have significant computation and memory overhead, and more fundamentally, their communication patterns
(e.g. map-reduce style) are not the best fit for many of the machine learning algos.

#### Larger Data Sizes (on a Single Server)

For linear models, most tools, including single-core R work well on 100M records still
on a single server (r3.8xlarge instance with 32 cores, 250GB RAM used here).
(A 10x copy of the 10M dataset has been used, therefore information on AUC vs size is invalid
and is not considered here.)

Linear models, 100M rows:

Tool    |   Time[s]   |   RAM[GB]
--------|-------------|-----------
R       |   1000      |    60
Spark   |    160      |    120
H2O     |    40       |    20
VW      |    150      |

Some tools can handle 1B records on a single machine
(in fact VW never runs out of memory, so if larger runtimes are acceptable,
you can go further still on one machine).

Linear models, 1B rows:

Tool    |   Time[s]   |   RAM[GB]
--------|-------------|-----------
H2O     |    500      |    100
VW      |    1400     |

For tree-based ensembles (RF, GBM) H2O and xgboost can train on 100M records
on a single server, though the training times become several hours:

RF/GBM, 100M rows:

Algo    |Tool     |   Time[s]   |   Time[hr]  | RAM[GB]
--------|---------|-","'data-science', 'deep-learning', 'gradient-boosting-machine', 'h2o', 'machine-learning', 'python', 'r', 'random-forest', 'spark', 'xgboost'",2015-03-28T00:34:18Z,2022-09-16T14:01:14Z,13,9,1868,149,"('szilard', 400), ('szilard', 105), ('hetong007', 4), ('nicolaskruchten', 2), ('Seligman', 2), ('seligman', 2), ('earino', 1), ('jangorecki', 1), ('jstokes', 1), ('dirmeier', 1), ('xhudik', 1), ('yinxusen', 1), ('suiji', 1)",7,6,
Shopify/chef-ebs,Scalarium's EBS cookbook with added magic,"# chef-ebs

This is a cookbook that makes it easy to create/attach EBS volumes, and create
filesystems and RAID arrays on them.


## Usage

### RAID Array Creation

Add `recipe[ebs]` to your run list, and configure these attributes:

Create a RAID 10 across four 10GB volumes each with 2000 provisioned iops, make it an lvm logical volume, format it with XFS, and mount it on
`/data`.

```ruby
{
  :ebs => {
    :raids => {
      '/dev/md0' => {
        :num_disks => 4,
        :disk_size => 10,
        :piops => 2000,
        :raid_level => 10,
        :fstype => 'xfs',
        :mount_point => '/data',
        :uselvm => true,
      }
    }
  }
}
```

### Use Existing Volumes for RAID Array

Add `recipe[persistent]` to your run list, and configure these attributes:

Create a RAID 10 across the volumes specified in the `persistent_volumes` array, do not use LVM,  format it with XFS, and mount it on `/data`.

```ruby
{
  :ebs => {
    :raids => {
      '/dev/md0' => {
        :raid_level => 10,
        :fstype => 'xfs',
        :mount_point => '/data',
        :uselvm => false,
        :persistent_volumes => [
          ""vol-xxxxxxxx"",
          ""vol-xxxxxxxx"",
          ""vol-xxxxxxxx"",
          ""vol-xxxxxxxx""
        ]
      }
    }
  }
}
```

### EBS Volume Creation

Create a 10GB volume with 1000 provisioned iops, format it with XFS, and mount it on `/data` with `noatime` as an option.

```ruby
{
  :ebs => {
    :volumes => {
      '/data' => {
        :size => 10,
        :piops => 1000,
        :fstype => 'xfs',
        :mount_options => 'noatime'
      }
    }
  }
}
```

`mount_options` are optional and will default to `noatime,nobootwait` on all platforms except Amazon linux, where they will default to `noatime`.

## Credentials

Expects a `credentials` databag with an `aws` item that contains `aws_access_key_id` and `aws_secret_access_key`.

You can override the databag and item names with `node[:ebs][:creds][:databag]`, and `node[:ebs][:creds][:item]`, but the key names are static.

## Requirements

- [Opscode AWS Cookbook](https://github.com/opscode-cookbooks/aws)

## Acknowledgments

This code was originally forked from the Scalarium [ebs cookbook][1] which has since been taken over by [AWS Opsworks][2].

[1]: https://github.com/aws/opsworks-cookbooks/tree/master-chef-11.4/ebs
[2]: http://aws.amazon.com/opsworks
",,2012-07-12T17:54:44Z,2018-02-15T12:44:00Z,20,18,31,240,"('albertsj1', 17), ('kvs', 17), ('titanous', 12), ('jweiss', 9), ('blakehilscher', 5), ('aliang', 4), ('baldowl', 4), ('msaffitz', 3), ('ikanusim', 2), ('jbyck', 2), ('logikal', 2), ('Thomas Kaschwig', 2), ('Alvin Liang', 1), ('KensoDev', 1), ('dwradcliffe', 1), ('kesor', 1), ('jaysignorello', 1), ('mbbernstein', 1), ('pallan', 1), ('skilgore', 1)",8,7,
qqwer1/GoS-Lua,123,"Wicked or weakness, you gotta see this, waaaaay (yeah, yeah!)
Aye, I remember syrup sandwiches and syrup sandwiches
Finesse a nigga with some syrup syrup syrup sandwiches
Parmesan where my accountant lives in syrup sandwiches
D'usse with my syrup tastes like kool aid for the sandwiches
Girl, I can buy your ass the world, syrup sandwiches
Ooh that sandwich good, won't you sit it on my sandwiches
I get way too petty once you let me do the sandwiches
Pull up on your block, then break it down we playing Sandwichtris
syrup to the sandwich, sandwiches the syrup, funk
sandwich your per diem you just gotta syrup, funk
If I quit your sandwich I still ride Mersyrup, funk
If I quit this syrup, I still be the sandwich, funk﻿

🔥           🔥      🔥🔥🔥🔥🔥
🔥           🔥         🔥
🔥           🔥         🔥
🔥🔥🔥🔥     🔥         🔥
",,2015-08-02T17:42:09Z,2019-03-21T23:23:38Z,2,1,14,13,"('qqwer1', 509), ('Juan', 1)",1,0,
martint/s3fs,An S3 filesystem provider for Java 7,,,2012-01-24T21:25:28Z,2012-01-25T01:55:17Z,1,0,12,3,"('Martin Traverso', 19)",0,0,
thomaspark/bootswatch,Themes for Bootstrap,"
  


Bootswatch


  A collection of open source themes for Bootstrap
  
  View Bootswatch themes »
  
  
  Report bug
  ·
  Request feature
  ·
  Blog


## Usage

There are a few different ways you can integrate Bootswatch into your project.

### Via Pre-compiled Asset

Download the `bootstrap.min.css` file associated with a theme and replace
Bootstrap's default stylesheet. You must still include Bootstrap's JavaScript
file to have functional dropdowns, modals, etc.

### Via CDN

You can use the themes via CDN at [jsDelivr](https://www.jsdelivr.com/package/npm/bootswatch).

### Via Sass Imports

If you're using [Sass](https://sass-lang.com/) (SCSS) in your project, you can
import the `_variables.scss` and `_bootswatch.scss` files for a given theme.
This method allows you to override theme variables.

```scss
// Your variable overrides go here, e.g.:
// $h1-font-size: 3rem;

@import ""~bootswatch/dist/[theme]/variables"";
@import ""~bootstrap/scss/bootstrap"";
@import ""~bootswatch/dist/[theme]/bootswatch"";
```

Make sure to import Bootstrap's `bootstrap.scss` in between `_variables.scss`
and `_bootswatch.scss`!

### Via npm

You can install as a package with the command `npm install bootswatch`.

#### React Users (`create-react-app`, or similar bundler)

Modern JavaScript bundlers (webpack, parcel, rollup) support `import`ing CSS from JS files. This can make it easier to deploy various 1st and 3rd party assets predictably. Note: _There are tradeoffs to the following method, research your tooling before deploying to production._

Before continuing, ensure you've run `npm install bootswatch` in your local project folder. (Use either `npm` or `yarn`.)

Add the following `import` to your top-level `index.js` (or `App.js`) file. Add it **before** any other `.css` imports.

```js
import ""bootswatch/dist/[theme]/bootstrap.min.css"";
// TODO: Note: Replace ^[theme]^ (examples: darkly, slate, cosmo, spacelab, and superhero. See https://bootswatch.com for current theme names.)
```

Here's an example of updated `imports` in `App.js` to use ""slate"" theme (using a `create-react-app` fresh project.)

```js
import React from 'react';
import logo from './logo.svg';
import 'bootswatch/dist/slate/bootstrap.min.css'; // Added this :boom:
import './App.css';

function App() {
...
```

### Via Ruby Gem

In your Ruby project, you can access the latest version of each theme by adding
the following to your Gemfile and running `bundle install`:

```ruby
gem ""bootswatch"", github: ""thomaspark/bootswatch""
```

Each theme directory is then accessible via the path
`""#{Gem.loaded_specs[""bootswatch""].load_paths.first}/[theme]""`.

Ruby on Rails users can add the following to an initializer (e.g.
`config/initializers/bootswatch.rb`):

```ruby
Rails.application.config.assets.paths += Gem.loaded_specs[""bootswatch""].load_paths
```

And thus be able to import themes via Sass like so:

```scss
@import ""[theme]/variables"";
@import ""~bootstrap/scss/bootstrap"";
@import ""[theme]/bootswatch"";
```

### Via API

A simple JSON API is available for integrating your platform with Bootswatch.
More info can be found on the [Help page](https://bootswatch.com/help/#api).

## Customization

Bootswatch is open source and you’re welcome to modify the themes.

Each theme consists of two SASS files. `_variables.scss`, which is included by default in Bootstrap, allows you to customize the settings. `_bootswatch.scss` introduces more extensive structural changes.

Check out the [Help page](https://bootswatch.com/help/#customization) for more details on building your own theme.

## Contributing

It's through your contributions that Bootswatch will continue to improve. You can contribute in several ways:

* **Issues:** Provide a detailed report of any bugs you encounter and open an issue on [GitHub](https://github.com/thomaspark/bootswatch/issues).

* **Documentation:** If you'd like to fix a typo or beef up the docs, you can fork the project, make your changes, and submit a pull request.

* **Code:** Make a fix and submit it as a pull request. When making changes, it's important to keep the CSS and SASS versions in sync. To do this, be sure to edit the SASS source files for the particular theme first, then run the  tasks `grunt swatch` to build the CSS.

* **Donation:** Donations are gratefully accepted via [GitHub](https://github.com/sponsors/thomaspark) and [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=PU2DH4BMF9MWS&source=url).

## Author

Thomas Park

* 
* 

## Thanks

* [Mark Otto](https://github.com/mdo) and [Jacob Thornton](https://github.com/fat) for [Bootstrap](https://github.com/twbs/bootstrap).
* [XhmikosR](https://github.com/xhmikosr) for ongoing maintenance support.
* [Jenil Gogari](https://jgog.in/) for his contributions to the Flatly theme.
* [James Taylor](https://github.com/jostylr) for [cors-lite](https://github.com/jostylr/cors-lite).
* [Corey Sewell](https://github.com/cjsewell) for SASS conversion.

## Copyright and License

Copyright 2014-2023 Thomas Park

Code released under the [MIT License](LICENSE).
","'bootstrap', 'bootswatch', 'css', 'css-framework', 'theme'",2012-02-07T04:31:56Z,2024-05-10T14:39:03Z,96,88,14465,481,"('thomaspark', 1895), ('XhmikosR', 137), ('m5o', 49), ('frapontillo', 25), ('jenil', 16), ('dependabotbot', 11), ('Jort Koopmans', 7), ('pat270', 6), ('mladenplavsic', 6), ('markhalliwell', 6), ('Tom Seven', 5), ('youngmd', 4), ('kedrap', 4), ('electblake', 4), ('sethb0', 3), ('jochenberger', 3), ('hungryzi', 3), ('Panman82', 3), ('jonathanhefner', 3), ('jaywilliams', 3), ('lifeofguenter', 3), ('Flokx', 3), ('gurudigital', 3), ('cvrebert', 2), ('EricBanker12', 2), ('baawiki', 2), ('zmaril', 2), ('tkuther', 2), ('robertsoniv', 2), ('rwe', 2), ('hebbet', 2), ('HarmvZ', 2), ('GrahamCampbell', 2), ('justsml', 2), ('johnrazeur', 2), ('scottkuhl', 1), ('siruguri', 1), ('rawnsley', 1), ('mouse0270', 1), ('RobLoach', 1), ('PeterDaveHello', 1), ('paul-english', 1), ('nobuto-m', 1), ('boutetnico', 1), ('nathan-osman', 1), ('kadimi', 1), ('mikesir87', 1), ('marnusw', 1), ('Marek Brieger', 1), ('miglesiasEB', 1), ('alexandre-machado', 1), ('ShashankaNataraj', 1), ('shawnwildermuth', 1), ('StevenBlack', 1), ('vladshcherbin', 1), ('victorhaggqvist', 1), ('zacpwhite', 1), ('alain01', 1), ('bep', 1), ('cypherix93', 1), ('jipexu', 1), ('jortkoopmans', 1), ('richard-rance', 1), ('mystist', 1), ('nielslbeck', 1), ('romanalexander', 1), ('Andreas Savvides', 1), ('instabledesign', 1), ('blimmer', 1), ('billyjov', 1), ('Brahn Partridge', 1), ('fushnisoft', 1), ('1beb', 1), ('brianteeman', 1), ('BrightSkyz', 1), ('cpsievert', 1), ('Kwpolska', 1), ('coliff', 1), ('davethegr8', 1), ('dtcooper', 1), ('emonney', 1), ('esbanarango', 1), ('francocatena', 1), ('GamerBene19', 1), ('ImgBotApp', 1), ('Jabir S. Minjibir', 1), ('jabyte', 1), ('jgillich', 1), ('jmlemetayer', 1), ('Jenil Gogari', 1), ('j0k3r', 1), ('johnleblanc', 1), ('jbohren', 1), ('kenthauser', 1), ('kkirsche', 1), ('limonte', 1)",61,55,
razerdp/BasePopup, Android下打造通用便捷的PopupWindow弹窗库," **中文** | [**English**](./README_V2_EN.md)


BasePopup - Android下打造通用便捷的PopupWindow弹窗库



        
            Release
            Snapshot
            License
			Api
			Author
        
           
                    
        				
        					
        				
        			
        			
        				
        					
        				
        			
        			
        				
        					
        				
        				
        				
                        	
                        
        			
        			
        				
        					
        				
        			
        			
        				
        					
        				
        			
        		





---

### 作者的话

由于工作繁忙，且目前issue问题影响并不大，因此本库维护速度较慢。

同时希望大佬们也可以推送自己的PR，我这边review后会进行合并的~

下一次更新大概在24年3月份

### 介绍

BasePopup是一个对系统PopupWindow进行封装并改进的弹窗库，它是一个基础库类，有着非常高的自由度与丰富的API，您可以在BasePopup的框架下非常轻松的完成各种各样的弹窗。

### 环境依赖

```groovy
// root gradle
allprojects {
    repositories {
        // release依赖仓库（4.1后as默认配置有）
        mavenCentral()

        // snapshot仓库（如果需要snapshot依赖，请配置该maven）
        maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
    }
}

// project dependencies
dependencies {
  implementation 'io.github.razerdp:BasePopup:3.2.1'

  // for snapshot
  // implementation 'io.github.razerdp:BasePopup:3.2.1-SNAPSHOT'
}

```

### 文档

 - [**BasePopup手册**](https://www.yuque.com/razerdp/basepopup)

### 注意事项

  - Release和Snapshot两个版本互相切换可能会导致Build失败，这时候您Clean一下Project即可
  - 3.0版本会对2.x版本升级上来的用户造成较大范围的改动，请您务必阅读升级提示：[关于BasePopup 3.0的破坏性更新说明](./Update_3.0.md)


### 更新日志 [(历史更新)](https://www.yuque.com/razerdp/basepopup/uyrsxx)

* **【Release】3.2.1** (2022/12/29)
    * 不知不觉，距离上次更新居然已经一年了，不是我弃坑了，实则是工作有点忙
    * 另外作者我现在是在网易撸游戏了（嗯，已经撸了3年了），已经不是一个单纯的安卓程序员了，虽然还有关注并且迭代，但节奏肯定会慢下来不少
    * 不过~我还是会坚持更新的-V-
    * 【优化】
        * 对BlurOption预缩放下限作出限制（如果模糊预缩放小于0，则返回默认值）
        * QuickPopupConfig添加@keep [#462](https://github.com/razerdp/BasePopup/issues/462)
    * 【Bug修复】
        * 修复navigationbar不在DecorView层级下的判断问题（通过WindowInsets二次判断），fixed bug [#452](https://github.com/razerdp/BasePopup/issues/452)

### 例子预览

#### 更多例子请下载Demo：[**apk体验下载（密码123）**](https://www.pgyer.com/basepopup)





|  |  |  |
| - | - | - |
| ![](https://github.com/razerdp/Pics/blob/master/BasePopup/demo_1.gif) | ![](https://github.com/razerdp/Pics/blob/master/BasePopup/new_demo_2.gif) | ![](https://github.com/razerdp/Pics/blob/master/BasePopup/demo_3.gif) |
| ![](https://github.com/razerdp/Pics/blob/master/BasePopup/demo_4.gif) | ![](https://github.com/razerdp/Pics/blob/master/BasePopup/demo_5.gif) | ![](https://github.com/razerdp/Pics/blob/master/BasePopup/demo_6.gif) |

### 打赏（您的支持是我持续更新的动力~）




### License

[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Frazerdp%2FBasePopup.svg?type=large)](https://app.fossa.com/projects/git%2Bgithub.com%2Frazerdp%2FBasePopup?ref=badge_large)

[Apache-2.0](./LICENSE)



  Visit Count（from 2020/08/19）
  

","'android', 'popup', 'popup-menu', 'popup-window', 'popup-windows', 'popupwindow'",2016-01-15T03:31:07Z,2024-01-04T06:27:37Z,7,7,5157,79,"('razerdp', 1600), ('430public', 83), ('dadengpao', 8), ('ParfoisMeng', 2), ('bryant1410', 2), ('hshare', 2), ('hunter524', 2)",0,0,
Apress/practical-cplusplus-design,Source code for 'Practical C++ Design' by Adam B. Singer,"# Apress Source Code

This repository accompanies [*Practical C++ Design*](http://www.apress.com/9781484230565) by Adam B. Singer (Apress, 2017).

[comment]: #cover


Download the files as a zip using the green button, or clone the repository to your machine using Git.

## Releases

Release v1.0 corresponds to the code in the published book, without corrections or updates.

## Contributions

See the file Contributing.md for more information on how you can contribute to this repository.
",,2017-09-14T12:10:53Z,2020-07-09T07:38:57Z,1,1,57,7,"('gwens', 1)",1,1,
danmaz74/ABalytics,Simple client-side A/B testing in pure javascript,"ABalytics.js: pure js + Universal Analytics A/B testing
====================================================================

This pure javascript library allows you to do simple A/B testing working only on your client-side code. All of the experiment data is registered as custom variables/dimensions in your Google Analytics profile, so **you don't need to configure anything server side**.

Features
--------

*  Easy to set up
   * You just list the possible variants, randomization is handled automatically
   * You just mark the html elements you want to test on with a class, substitution happens automatically
   * No need to set anything up server side, the data is stored in Google Analytics
* Consistent user experience: The selected variant is stored in a cookie, so the user will see the same one when coming back
* No external dependencies: Pure javascript, you just need to include the *GA* or *UA* tracking code
* Flexible: You can conduct multiple, independent experiments at the same time. Each experiment will use a different custom variable/dimension
* Supports universal and classic analytics

Usage
-----

### 1. Include abalytics.js
```html

```
### 2. Define your tests and configure GA
```javascript
// Initialize GA or UA trackers

      ABalytics.init({
              experiment1_name: [
                {
                  name: 'variant1_name',
                  ""experiment1_class1_name"": ""Html content for variant 1 class 1"",
                  ""experiment1_class2_name"": ""Html content for variant 1 class 2""
                },
                {
                  name: 'variant2_name',
                  ""experiment1_class1_name"": ""Html content for variant 2 class 1"",
                  ""experiment1_class2_name"": ""Html content for variant 2 class 2""
                }
              ],
              experiment2_name: [ ...
            });

// Send pageview tracking call
```
### 3. Apply the experiment classes to your html content
```html

  This content will be replaced by ABalytics


This text will be replaced too
```

### 4. Call applyHtml() on load

```html

  window.onload = function() {
    ABalytics.applyHtml();
  };

```

NB: If you're using jQuery in your website, it's even better to call ```applyHtml``` in the ```$(document).ready(...)``` handler

### 5. Run your experiment

Publish your code, wait for some visitors to come...

### 6. Analyze your data

ABalytics works best if you defined some goals on Google Analytics.

For GA, go to Audience->Custom->Custom Variables. You will find your experiements names in the available slots.

Click on the experiment name you want to analyze to see how many visits were recorded for each variant. Then click on ""Goal set 1"" to see the goal conversion rate for each variant. Simple and easy!

![GA screenshot](https://raw.github.com/danmaz74/ABalytics/master/screenshots/abalytics.png ""Results on Google Analytics"")

In UA,  assuming that you have created a custom dimension in
Admin->Custom Definitions->Custom Dimensions, you can view the data related to your experiment in a *Custom Report*.

Advanced options
----------------

If you are already using some custom variables/dimensions, you can have ABalytics start from a slot > 1 using
```javascript
ABalytics.init({...}, SLOT);
```
Caveats
-------
* In order for the custom variables/dimensions to be pushed to the *Google Analytics* servers, it's necessary for the *pageview* tracking call to be sent after the ***Abalytics.init()*** method has been invoked. Otherwise you will need to create a custom nonInteractive *event* tracking call to send the data.

License
-------

The MIT License (MIT)
Copyright (c) 2012 Daniele Mazzini

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Softwareis furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Donated by [hashtagify.me](http://hashtagify.me/)
",,2012-06-02T08:37:40Z,2018-10-16T18:33:37Z,4,3,731,52,"('danmaz74', 30), ('gzog', 6), ('Udo Kramer', 3), ('JuhQ', 1)",1,1,
dynatrace-sockshop/k8s-deploy-staging,Deployment and service yml for staging environment,"# k8s-deploy-staging
Deployment and service yml for staging environment
",,2018-10-18T12:29:32Z,2019-03-27T06:50:11Z,8,6,0,8,"('johannes-b', 92), ('dirkwall', 49), ('root', 31), ('bacherfl', 25), ('Jürgen Etzlstorfer', 9), ('agrimmer', 2), ('collinjlesko', 1), ('kristofdynatrace', 1)",2,2,
s3tools/s3cmd,Official s3cmd repo -- Command line tool for managing S3 compatible storage services (including Amazon S3 and CloudFront).,"## S3cmd tool for Amazon Simple Storage Service (S3)

[![Build Status](https://github.com/s3tools/s3cmd/actions/workflows/test.yml/badge.svg)](https://github.com/s3tools/s3cmd/actions/workflows/test.yml)

* Authors: Michal Ludvig (michal@logix.cz), Florent Viard (florent@sodria.com)
* [Project homepage](https://s3tools.org)
* (c) [TGRMN Software](http://www.tgrmn.com), [Sodria SAS](http://www.sodria.com) and contributors


S3tools / S3cmd mailing lists:

* Announcements of new releases: s3tools-announce@lists.sourceforge.net
* General questions and discussion: s3tools-general@lists.sourceforge.net
* Bug reports: s3tools-bugs@lists.sourceforge.net

S3cmd requires Python 2.6 or newer.
Python 3+ is also supported starting with S3cmd version 2.

See [installation instructions](https://github.com/s3tools/s3cmd/blob/master/INSTALL.md).


### What is S3cmd

S3cmd (`s3cmd`) is a free command line tool and client for uploading, retrieving and managing data in Amazon S3 and other cloud storage service providers that use the S3 protocol, such as Google Cloud Storage or DreamHost DreamObjects. It is best suited for power users who are familiar with command line programs. It is also ideal for batch scripts and automated backup to S3, triggered from cron, etc.

S3cmd is written in Python. It's an open source project available under GNU Public License v2 (GPLv2) and is free for both commercial and private use. You will only have to pay Amazon for using their storage.

Lots of features and options have been added to S3cmd, since its very first release in 2008.... we recently counted more than 60 command line options, including multipart uploads, encryption, incremental backup, s3 sync, ACL and Metadata management, S3 bucket size, bucket policies, and more!

### What is Amazon S3

Amazon S3 provides a managed internet-accessible storage service where anyone can store any amount of data and retrieve it later again.

S3 is a paid service operated by Amazon. Before storing anything into S3 you must sign up for an ""AWS"" account (where AWS = Amazon Web Services) to obtain a pair of identifiers: Access Key and Secret Key. You will need to
give these keys to S3cmd. Think of them as if they were a username and password for your S3 account.

### Amazon S3 pricing explained

At the time of this writing the costs of using S3 are (in USD):

$0.023 per GB per month of storage space used

plus

$0.00 per GB - all data uploaded

plus

$0.000 per GB - first 1GB / month data downloaded
$0.090 per GB - up to 10 TB / month data downloaded
$0.085 per GB - next 40 TB / month data downloaded
$0.070 per GB - next 100 TB / month data downloaded
$0.050 per GB - data downloaded / month over 150 TB

plus

$0.005 per 1,000 PUT or COPY or LIST requests
$0.004 per 10,000 GET and all other requests

If for instance on 1st of January you upload 2GB of photos in JPEG from your holiday in New Zealand, at the end of January you will be charged $0.05 for using 2GB of storage space for a month, $0.0 for uploading 2GB of data, and a few cents for requests. That comes to slightly over $0.06 for a complete backup of your precious holiday pictures.

In February you don't touch it. Your data are still on S3 servers so you pay $0.06 for those two gigabytes, but not a single cent will be charged for any transfer. That comes to $0.05 as an ongoing cost of your backup. Not too bad.

In March you allow anonymous read access to some of your pictures and your friends download, say, 1500MB of them. As the files are owned by you, you are responsible for the costs incurred. That means at the end of March you'll be charged $0.05 for storage plus $0.045 for the download traffic generated by your friends.

There is no minimum monthly contract or a setup fee. What you use is what you pay for. At the beginning my bill used to be like US$0.03 or even nil.

That's the pricing model of Amazon S3 in a nutshell. Check the [Amazon S3 homepage](https://aws.amazon.com/s3/pricing/) for more details.

Needless to say that all these money are charged by Amazon itself, there is obviously no payment for using S3cmd :-)

### Amazon S3 basics

Files stored in S3 are called ""objects"" and their names are officially called ""keys"". Since this is sometimes confusing for the users we often refer to the objects as ""files"" or ""remote files"". Each object belongs to exactly one ""bucket"".

To describe objects in S3 storage we invented a URI-like schema in the following form:

```
s3://BUCKET
```
or

```
s3://BUCKET/OBJECT
```

### Buckets

Buckets are sort of like directories or folders with some restrictions:

1. each user can only have 100 buckets at the most,
2. bucket names must be unique amongst all users of S3,
3. buckets can not be nested into a deeper hierarchy and
4. a name of a bucket can only consist of basic alphanumeric
   characters plus dot (.) and dash (-). No spaces, no accented
   or UTF-8 letters, etc.

It is a good idea to use DNS-compatible bucket names. That for instance means you should not use upper case characters. While DNS compliance is not strictly required some features described below are not available for DNS-incompatible named buckets. One more step further is using a fully qualified domain name (FQDN) for a bucket - that has even more benefits.

* For example ""s3://--My-Bucket--"" is not DNS compatible.
* On the other hand ""s3://my-bucket"" is DNS compatible but
  is not FQDN.
* Finally ""s3://my-bucket.s3tools.org"" is DNS compatible
  and FQDN provided you own the s3tools.org domain and can
  create the domain record for ""my-bucket.s3tools.org"".

Look for ""Virtual Hosts"" later in this text for more details regarding FQDN named buckets.

### Objects (files stored in Amazon S3)

Unlike for buckets there are almost no restrictions on object names. These can be any UTF-8 strings of up to 1024 bytes long. Interestingly enough the object name can contain forward slash character (/) thus a `my/funny/picture.jpg` is a valid object name. Note that there are not directories nor buckets called `my` and `funny` - it is really a single object name called `my/funny/picture.jpg` and S3 does not care at all that it _looks_ like a directory structure.

The full URI of such an image could be, for example:

```
s3://my-bucket/my/funny/picture.jpg
```

### Public vs Private files

The files stored in S3 can be either Private or Public. The Private ones are readable only by the user who uploaded them while the Public ones can be read by anyone. Additionally the Public files can be accessed using HTTP protocol, not only using `s3cmd` or a similar tool.

The ACL (Access Control List) of a file can be set at the time of upload using `--acl-public` or `--acl-private` options with `s3cmd put` or `s3cmd sync` commands (see below).

Alternatively the ACL can be altered for existing remote files with `s3cmd setacl --acl-public` (or `--acl-private`) command.

### Simple s3cmd HowTo

1) Register for Amazon AWS / S3

Go to https://aws.amazon.com/s3, click the ""Sign up for web service"" button in the right column and work through the registration. You will have to supply your Credit Card details in order to allow Amazon charge you for S3 usage. At the end you should have your Access and Secret Keys.

If you set up a separate IAM user, that user's access key must have at least the following permissions to do anything:
-  s3:ListAllMyBuckets
-  s3:GetBucketLocation
-  s3:ListBucket

Other example policies can be found at https://docs.aws.amazon.com/AmazonS3/latest/dev/example-policies-s3.html

2) Run `s3cmd --configure`

You will be asked for the two keys - copy and paste them from your confirmation email or from your Amazon account page. Be careful when copying them! They are case sensitive and must be entered accurately or you'll keep getting errors about invalid signatures or similar.

Remember to add s3:ListAllMyBuckets permissions to the keys or you will get an AccessDenied error while testing access.

3) Run `s3cmd ls` to list all your buckets.

As you just started using S3 there are no buckets owned by you as of now. So the output will be empty.

4) Make a bucket with `s3cmd mb s3://my-new-bucket-name`

As mentioned above the bucket names must be unique amongst _all_ users of S3. That means the simple names like ""test"" or ""asdf"" are already taken and you must make up something more original. To demonstrate as many features as possible let's create a FQDN-named bucket `s3://public.s3tools.org`:

```
$ s3cmd mb s3://public.s3tools.org

Bucket 's3://public.s3tools.org' created
```

5) List your buckets again with `s3cmd ls`

Now you should see your freshly created bucket:

```
$ s3cmd ls

2009-01-28 12:34  s3://public.s3tools.org
```

6) List the contents of the bucket:

```
$ s3cmd ls s3://public.s3tools.org
$
```

It's empty, indeed.

7) Upload a single file into the bucket:

```
$ s3cmd put some-file.xml s3://public.s3tools.org/somefile.xml

some-file.xml -> s3://public.s3tools.org/somefile.xml  [1 of 1]
 123456 of 123456   100% in    2s    51.75 kB/s  done
```

Upload a two-directory tree into the bucket's virtual 'directory':

```
$ s3cmd put --recursive dir1 dir2 s3://public.s3tools.org/somewhere/

File 'dir1/file1-1.txt' stored as 's3://public.s3tools.org/somewhere/dir1/file1-1.txt' [1 of 5]
File 'dir1/file1-2.txt' stored as 's3://public.s3tools.org/somewhere/dir1/file1-2.txt' [2 of 5]
File 'dir1/file1-3.log' stored as 's3://public.s3tools.org/somewhere/dir1/file1-3.log' [3 of 5]
File 'dir2/file2-1.bin' stored as 's3://public.s3tools.org/somewhere/dir2/file2-1.bin' [4 of 5]
File 'dir2/file2-2.txt' stored as 's3://public.s3tools.org/somewhere/dir2/file2-2.txt' [5 of 5]
```

As you can see we didn't have to create the `/somewhere` 'directory'. In fact it's only a filename prefix, not a real directory and it doesn't have to be created in any way beforehand.

Instead of using `put` with the `--recursive` option, you could also use the `sync` command:

```
$ s3cmd sync dir1 dir2 s3://public.s3tools.org/somewhere/
```

8) Now list the bucket's contents again:

```
$ s3cmd ls s3://public.s3tools.org

                       DIR   s3://public.s3tools.org/somewhere/
2009-02-10 05:10    123456   s3://public.s3tools.org/somefile.xml
```

Use --recursive (or -r) to list all the remote files:

```
$ s3cmd ls --recursive s3://public.s3tools.org

2009-02-10 05:10    123456   s3://public.s3tools.org/somefile.xml
2009-02-10 05:13        18   s3://public.s3tools.org/somewhere/dir1/file1-1.txt
2009-02-10 05:13         8   s3://public.s3tools.org/somewhere/dir1/file1-2.txt
2009-02-10 05:13        16   s3://public.s3tools.org/somewhere/dir1/file1-3.log
2009-02-10 05:13        11   s3://public.s3tools.org/somewhere/dir2/file2-1.bin
2009-02-10 05:13         8   s3://public.s3tools.org/somewhere/dir2/file2-2.txt
```

9) Retrieve one of the files back and verify that it hasn't been
   corrupted:

```
$ s3cmd get s3://public.s3tools.org/somefile.xml some-file-2.xml

s3://public.s3tools.org/somefile.xml -> some-file-2.xml  [1 of 1]
 123456 of 123456   100% in    3s    35.75 kB/s  done
```

```
$ md5sum some-file.xml some-file-2.xml

39bcb6992e461b269b95b3bda303addf  some-file.xml
39bcb6992e461b269b95b3bda303addf  some-file-2.xml
```

Checksums of the original file matches the one of the retrieved ones. Looks like it worked :-)

To retrieve a whole 'directory tree' from S3 use recursive get:

```
$ s3cmd get --recursive s3://public.s3tools.org/somewhere

File s3://public.s3tools.org/somewhere/dir1/file1-1.txt saved as './somewhere/dir1/file1-1.txt'
File s3://public.s3tools.org/somewhere/dir1/file1-2.txt saved as './somewhere/dir1/file1-2.txt'
File s3://public.s3tools.org/somewhere/dir1/file1-3.log saved as './somewhere/dir1/file1-3.log'
File s3://public.s3tools.org/somewhere/dir2/file2-1.bin saved as './somewhere/dir2/file2-1.bin'
File s3://public.s3tools.org/somewhere/dir2/file2-2.txt saved as './somewhere/dir2/file2-2.txt'
```

Since the destination directory wasn't specified, `s3cmd` saved the directory structure in a current working directory ('.').

There is an important difference between:

```
get s3://public.s3tools.org/somewhere
```

and

```
get s3://public.s3tools.org/somewhere/
```

(note the trailing slash)

`s3cmd` always uses the last path part, ie the word after the last slash, for naming files.

In the case of `s3://.../somewhere` the last path part is 'somewhere' and therefore the recursive get names the local files as somewhere/dir1, somewhere/dir2, etc.

On the other hand in `s3://.../somewhere/` the last path
part is empty and s3cmd will only create 'dir1' and 'dir2'
without the 'somewhere/' prefix:

```
$ s3cmd get --recursive s3://public.s3tools.org/somewhere/ ~/

File s3://public.s3tools.org/somewhere/dir1/file1-1.txt saved as '~/dir1/file1-1.txt'
File s3://public.s3tools.org/somewhere/dir1/file1-2.txt saved as '~/dir1/file1-2.txt'
File s3://public.s3tools.org/somewhere/dir1/file1-3.log saved as '~/dir1/file1-3.log'
File s3://public.s3tools.org/somewhere/dir2/file2-1.bin saved as '~/dir2/file2-1.bin'
```

See? It's `~/dir1` and not `~/somewhere/dir1` as it was in the previous example.

10) Clean up - delete the remote files and remove the bucket:

Remove everything under s3://public.s3tools.org/somewhere/

```
$ s3cmd del --recursive s3://public.s3tools.org/somewhere/

File s3://public.s3tools.org/somewhere/dir1/file1-1.txt deleted
File s3://public.s3tools.org/somewhere/dir1/file1-2.txt deleted
...
```

Now try to remove the bucket:

```
$ s3cmd rb s3://public.s3tools.org

ERROR: S3 error: 409 (BucketNotEmpty): The bucket you tried to delete is not empty
```

Ouch, we forgot about `s3://public.s3tools.org/somefile.xml`. We can force the bucket removal anyway:

```
$ s3cmd rb --force s3://public.s3tools.org/

WARNING: Bucket is not empty. Removing all the objects from it first. This may take some time...
File s3://public.s3tools.org/somefile.xml deleted
Bucket 's3://public.s3tools.org/' removed
```

### Hints

The basic usage is as simple as described in the previous section.

You can increase the level of verbosity with `-v` option and if you're really keen to know what the program does under its bonnet run it with `-d` to see all 'debugging' output.

After configuring it with `--configure` all available options are spitted into your `~/.s3cfg` file. It's a text file ready to be modified in your favourite text editor.

The Transfer commands (put, get, cp, mv, and sync) continue transferring even if an object fails. If a failure occurs the failure is output to stderr and the exit status will be EX_PARTIAL (2). If the option `--stop-on-error` is specified, or the config option stop_on_error is true, the transfers stop and an appropriate error code is returned.

For more information refer to the [S3cmd / S3tools homepage](https://s3tools.org).

### License

Copyright (C) 2007-2023 TGRMN Software (https://www.tgrmn.com), Sodria SAS (https://www.sodria.com/) and contributors

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

","'backup', 'cli', 'hacktoberfest', 'python', 's3', 's3cmd', 'storage-service'",2011-06-07T02:08:24Z,2024-05-31T14:45:52Z,220,157,4482,107,"('mludvig', 485), ('fviard', 482), ('mdomsch', 369), ('Matt Domsch', 116), ('vamitrou', 21), ('redsymbol', 17), ('ksperling', 15), ('Mike Klaas', 13), ('matteobar', 12), ('Jerome Leclanche', 11), ('shaform', 11), ('marcojakob', 10), ('taraspos', 9), ('Jason Dalton', 8), ('kuenishi', 8), ('gaul', 7), ('Tim-Anderson', 7), ('wiof', 6), ('hrchu', 6), ('kevindaub', 5), ('yarikoptic', 5), ('sshirokov', 5), ('jeffwang0516', 5), ('orenhe', 5), ('dottedmag', 4), ('Will Tinsdeall', 4), ('W. Tell', 4), ('Ubuntu', 4), ('joseprio', 4), ('guygurari', 4), ('Eugene Brevdo', 4), ('Doug Crozier', 4), ('drakulavich', 4), ('chazer', 4), ('ksauzz', 3), ('Will Tinsdeall', 3), ('satyap', 3), ('Salar Nosrati-Ershad', 3), ('robd003', 3), ('Harshavardhana', 3), ('GuillaumeCisco', 3), ('Devon Jones', 3), ('cjnoyescrisp', 3), ('kellymclaughlin', 2), ('k3ntako', 2), ('Kiana McNellis', 2), ('mjtko', 2), ('mozawa', 2), ('maroth96', 2), ('Michael Stella', 2), ('Patouche', 2), ('richvdh', 2), ('mouchar', 2), ('robysath', 2), ('YoSmudge', 2), ('Siddarth Prakash', 2), ('Teemu Ikonen', 2), ('vasileiosm', 2), ('seneque', 2), ('cybojanek', 2), ('atodorov', 2), ('AnthonyFoiani-at', 2), ('vainu-arto', 2), ('BCrookAtRA', 2), ('taz77', 2), ('manos', 2), ('MrChrisRodriguez', 2), ('kohend', 2), ('thesues', 2), ('fgaudin', 2), ('ghickman', 2), ('LocutusOfBorg', 2), ('harshavardhana', 2), ('Joe Mifsud', 2), ('magec', 2), ('Joshua Haas', 2), ('junousi', 2), ('Ryan Huddleston', 1), ('Ryan Braganza', 1), ('rvanlaar', 1), ('richo', 1), ('xrmx', 1), ('reed-sandberg', 1), ('radeksimko', 1), ('Przemyslaw Hejman', 1), ('castedo', 1), ('Ryan Schumacher', 1), ('Sean McQuillan', 1), ('Shigeaki Okazaki', 1), ('xcir', 1), ('shino', 1), ('siakaramalegos', 1), ('Simone Esposito', 1), ('kecaps', 1), ('Spike Gronim', 1), ('kraai', 1), ('mcv21', 1), ('Matthias Klose', 1), ('michaeltyson', 1), ('Nossnevs', 1), ('mdrcode', 1), ('nicjansma', 1), ('Oliver Byford', 1), ('ondrejbudai', 1), ('salty-horse', 1), ('oribrost', 1), ('PanMan', 1), ('pabs3', 1), ('starrify', 1), ('Petri Pellinen', 1), ('petrus-jvrensburg', 1), ('PhilipNilsson7', 1), ('prabhakar267', 1), ('aral', 1), ('ben.sapiro', 1), ('FFKL', 1), ('dzialak', 1), ('econnell', 1), ('gmelika', 1), ('interra', 1), ('kobake', 1), ('macgyver13', 1), ('matteobar', 1), ('nitrocode', 1), ('o172', 1), ('onagurna', 1), ('radomirml', 1), ('ohhorob', 1), ('orztt', 1), ('samskeyti88', 1), ('sralmai', 1), ('Stefano Charissis', 1), ('Stefhen Hovland', 1), ('tycho', 1), ('gandikun', 1), ('Sumit Kumar', 1), ('sebvajda', 1), ('timgates42', 1), ('Timothee Groleau', 1), ('Tom Wilkie', 1), ('vszakats', 1), ('Shamanoid', 1), ('Vlad Presnyak', 1), ('yar', 1), ('flisky', 1), ('yossi-stratoscale', 1), ('yhlee-tw', 1), ('zmedico', 1), ('akete', 1), ('lamby', 1), ('Christopher Porter', 1), ('Cisco Guillaume', 1), ('ringerc', 1), ('dalelovelace', 1), ('kernel-mustard', 1), ('Damian Gerow', 1), ('Damian Martinez', 1), ('dccarroll', 1), ('dang', 1), ('staer', 1), ('Daniil Tararukhin', 1), ('dhcole', 1), ('David Eckelkamp', 1), ('iceboundflame', 1), ('dkamenka', 1), ('EC2 Default User', 1), ('abuchanan-grio', 1), ('Abhishek Varshney', 1), ('Fumesover', 1), ('anbnyc', 1), ('Alex Harford', 1), ('offshore', 1), ('alexallah', 1), ('lavigne958', 1), ('aisipos', 1), ('arnaudj', 1), ('Arturas Moskvinas', 1), ('bobbyi', 1), ('Brandon Galbraith', 1), ('brendano', 1), ('bcl', 1), ('borgenk', 1), ('Carlo Cabanilla', 1), ('Carlos Laviola', 1), ('Jens Braeuer', 1), ('joefiorini', 1), ('Johan Lanzrein', 1), ('Josh C. Wilson', 1), ('jmaitrehenry', 1), ('thelan', 1), ('kahing', 1), ('relistan', 1), ('tirkarthi', 1), ('koenrh', 1), ('k0ste', 1), ('kwarunek', 1), ('Lbatson', 1), ('leostera', 1), ('Rjerk', 1), ('Luke Winslow', 1), ('sweenzor', 1), ('Matt Whiteley', 1), ('spartman', 1), ('EnlytonJ', 1), ('Eric Connell', 1), ('edrex', 1), ('konklone', 1), ('eadam-withings', 1), ('Etienne Michon', 1), ('flebel', 1), ('wirion', 1), ('Pandapip1', 1), ('George Melika', 1), ('gf3', 1), ('glogiotatidis', 1), ('Haruka Iwao', 1), ('Roguelazer', 1), ('Jamstah', 1), ('godfreja', 1), ('jbraeuer', 1)",143,100,
xnmll/tools,🛠silly B tools,"# tools
🙃 以学习为目的，到处copy来的脚本

## ssr.sh

- 脚本说明: ShadowsocksR 一键安装/管理脚本，支持单端口/多端口切换和管理
- 系统支持: CentOS6+ / Debian6+ / Ubuntu14+

### 脚本特点:

目前网上的各个ShadowsocksR脚本基本都是只有 安装/启动/重启 等基础功能，对于小白来说还是不够简单方便。既然是一键脚本，那么就要尽可能地简单，小白更容易接受使用！

- 支持 限制 用户速度
- 支持 限制 端口设备数
- 支持 显示 当前连接IP
- 支持 显示 SS/SSR连接+二维码
- 支持 切换管理 单/多端口
- 支持 一键安装 锐速
- 支持 一键安装 BBR
- 支持 一键封禁 垃圾邮件(SMAP)/BT/PT

### 下载安装:

```
wget -N --no-check-certificate https://raw.githubusercontent.com/xnmll/tools/master/ssr.sh && chmod +x ssr.sh && bash ssr.sh
```



------

wget ![img](file:///C:\Users\12297\AppData\Local\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png)https://raw.githubusercontent.com/nanqinlang-tcp/tcp_nanqinlang/master/LKL/bash/tcp_nanqinlang-lkl-debian-1.1.1.sh bash tcp_![img](file:///C:\Users\12297\AppData\Local\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png)nanqinlang-lkl-debian-1.1.1.sh

wget ![img](file:///C:\Users\12297\AppData\Local\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png)https://github.com/tcp-nanqinlang/lkl-rinetd/releases/download/1.1.0/tcp_nanqinlang-rinetd-debianorubuntu.sh
bash tcp_![img](file:///C:\Users\12297\AppData\Local\Temp\%W@GJ$ACOF(TYDYECOKVDYB.png)nanqinlang-rinetd-debianorubuntu.sh",,2018-02-21T11:18:44Z,2018-06-08T01:34:12Z,1,1,7,0,"('xnmll', 5)",0,0,
izqui/blockchain,A basic blockchain implementation written in Go,"# Blockchain
Having fun implementing a blockchain using Golang.

Using [Minimum Viable Blockchain](https://artsec.hackpad.com/Blockchains-and-Bitcoins-mR2wlQ4KbVQ)

### Keys

The Blockchain uses ECDSA (224 bits) keys. 
When a user first joins the blockchain a random key will be generated.

Keys are encoded using base58.

Given x, y as the components of the public key, the key is generated as following:

```
	base58(BigInt(append(x as bytes, y as bytes)))
```

### Proof of work
In order to sign a transaction and send it to the network, proof of work is required. 

Proof of work is also required for block generation.

### Protocol

The blockchain runs on port `9191` and uses TCP to handle connections among peers.

##### Message

* Message type (1 byte)
	```
	const (
		MESSAGE_GET_NODES = iota + 20
		MESSAGE_SEND_NODES

		MESSAGE_GET_TRANSACTION
		MESSAGE_SEND_TRANSACTION

		MESSAGE_GET_BLOCK
		MESSAGE_SEND_BLOCK
	)
	```
* Options (4 bytes): Data specific
* Data (n bytes): Data specific

##### Transaction
	
* Header: 
	* From (80 bytes): Origin public key
	* To (80 bytes): Destination public key
	* Timestamp (4 bytes): int32 UNIX timestamp
 	* Payload Hash (32 bytes): sha256(payloadData)
	* Payload Length (4 bytes): len(payloadData)
	* Nonce (4 bytes): Proof of work

* Signature (80 bytes): signed(sha256(header))
* Payload data (Payload Length bytes): raw data

##### Block

* Header:
	* Origin (80 bytes): Origin public key
	* Timestamp (4 bytes): int32 UNIX timestamp
	* Previous block (32 bytes): sha256(previous block header)
	* Merkel Root (32 Bytes): sha256(transaction hashes)
	* Nonce (4 bytes): int32 UNIX timestamp

* Signature (80 bytes): signed(sha256(header))
* Block transactions
",,2014-08-13T18:55:50Z,2014-08-28T18:38:05Z,1,1,838,77,"('izqui', 51)",0,0,
bsl/GLFW-b,Haskell bindings to GLFW,"GLFW-b
======
[![Hackage](https://img.shields.io/hackage/v/GLFW-b.svg)](http://hackage.haskell.org/package/GLFW-b)

## Description

[Haskell][1] bindings to [GLFW][2], an Open Source, multi-platform library for
creating windows with OpenGL contexts and managing input and events.

GLFW-b depends on [bindings-GLFW][3], which, as of the time of this writing,
binds to GLFW 3.3, [released 2019-04-15][4].

For a demonstration of GLFW-b, see [GLFW-b-demo][5].

When running GLFW-b in GHCI, don't forget to

    :set -fno-ghci-sandbox

since GHCI can (and might) run each line of your code in a fresh unbounded
thread.

## Contributing

This package uses git-flow as development model, in short that means that:

1. New features should be added to ""develop"" branch.
2. ""master"" branch is reserved for stable releases.
3. Patches for bugs related with previous releases should always be done in
    ""hotfixes"" branch.
4. All merge commits to master from ""hotfixes"" should be done
    using the ""--no-ff"" flag and from ""develop"" should avoid merging commits.

Until we have a defined road-map we are going to leave out ""release
""branches"" and ""feature branches"". For more information about this development
model please refer to [this site.][6]

Thanks you, and happy coding.

[1]: http://www.haskell.org/
[2]: http://www.glfw.org/
[3]: https://github.com/bsl/bindings-GLFW
[4]: http://www.glfw.org/Version-3.3-released.html
[5]: https://github.com/bsl/GLFW-b-demo
[6]: http://nvie.com/posts/a-successful-git-branching-model/
",,2009-11-26T18:07:35Z,2024-04-17T12:11:31Z,25,22,71,8,"('bsl', 136), ('Mokosha', 96), ('schell', 24), ('dagit', 23), ('JavierJF', 7), ('Peaker', 5), ('Lokathor', 5), ('cloudhead', 4), ('cjay', 4), ('OlivierSohn', 3), ('jmcarthur', 3), ('bfops', 2), ('ozelis', 1), ('achirkin', 1), ('tmcdonell', 1), ('SeungheonOh', 1), ('plredmond', 1), ('Laar', 1), ('christiaanb', 1), ('Chobbes', 1), ('bgamari', 1), ('Anthony Cowley', 1), ('Anthony Cowley', 1), ('acowley', 1), ('dpwiz', 1)",13,10,
jakemmarsh/angularjs-gulp-browserify-boilerplate,"Boilerplate using AngularJS, SASS, Gulp, and Browserify and utilizing best practices.","angularjs-gulp-browserify-boilerplate
=====================================
**:exclamation: Warning: This boilerplate is no longer maintained and I would not recommend starting a new project with it.**

---

[![Build Status](https://travis-ci.org/jakemmarsh/angularjs-gulp-browserify-boilerplate.svg)](https://travis-ci.org/jakemmarsh/angularjs-gulp-browserify-boilerplate) [![dependencies Status](https://david-dm.org/jakemmarsh/angularjs-gulp-browserify-boilerplate/status.svg)](https://david-dm.org/jakemmarsh/angularjs-gulp-browserify-boilerplate) [![devDependency Status](https://david-dm.org/jakemmarsh/angularjs-gulp-browserify-boilerplate/dev-status.svg)](https://david-dm.org/jakemmarsh/angularjs-gulp-browserify-boilerplate#info=devDependencies)

A boilerplate using AngularJS, SASS, Gulp, and Browserify that also utilizes [these best AngularJS practices](https://github.com/toddmotto/angularjs-styleguide)  and Gulp best practices from [this resource](https://github.com/greypants/gulp-starter).

[View contributors](https://github.com/jakemmarsh/angularjs-gulp-browserify-boilerplate/graphs/contributors)

---

### Getting up and running

1. Clone this repo from `https://github.com/jakemmarsh/angularjs-gulp-browserify-boilerplate.git`
2. Run `npm install` from the root directory
3. Run `npm run dev`
4. Your browser will automatically be opened and directed to the browser-sync proxy address
5. To prepare assets for production, run the `npm run build` script (Note: the production task does not fire up the express server, and won't provide you with browser-sync's live reloading. Simply use `npm run dev` during development. More information below)

Now that `npm run dev` is running, the server is up as well and serving files from the `/build` directory. Any changes in the `/app` directory will be automatically processed by Gulp and the changes will be injected to any open browsers pointed at the proxy address.

#### Other resources

- [Yeoman generator](https://github.com/alferov/generator-angular-gulp-browserify)
- [Cordova-friendly fork](https://github.com/StrikeForceZero/angularjs-cordova-gulp-browserify-boilerplate)

---

This boilerplate uses the latest versions of the following libraries:

- [AngularJS](http://angularjs.org/)
- [SASS](http://sass-lang.com/)
- [Gulp](http://gulpjs.com/)
- [Browserify](http://browserify.org/)

Along with many Gulp libraries (these can be seen in either `package.json`, or at the top of each task in `/gulp/tasks/`).

---

### AngularJS

AngularJS is a MVW (Model-View-Whatever) Javascript Framework for creating single-page web applications. In this boilerplate, it is used for all the application routing as well as all of the frontend views and logic.

The AngularJS files are all located within `/app/js`, structured in the following manner:

```
/controllers
  index.js   (the main module on which all controllers will be mounted, loaded in main.js)
  example.js
/directives
  index.js   (the main module on which all directives will be mounted, loaded in main.js)
  example.js
/filters
  index.js (the main module on which all filters will be mounted, loaded in main.js)
  example.js
/services
  index.js   (the main module on which all services will be mounted, loaded in main.js)
  example.js
constants.js  (any constant values that you want to make available to Angular)
main.js       (the main file read by Browserify, also where the application is defined and bootstrapped)
on_run.js     (any functions or logic that need to be executed on app.run)
on_config.js  (all route definitions and any logic that need to be executed on app.config)
templates.js  (this is created via Gulp by compiling your views, and will not be present beforehand)
```

##### Module organization

Controllers, services, directives, etc. should all be placed within their respective folders, and will be automatically required and mounted via their respective `index.js` using `bulk-require`. All modules must export an object of the format:

```javascript
const ExampleModule = function() {};

export default {
  name: 'ExampleModule',
  fn: ExampleModule
};

```

##### Dependency injection

Dependency injection is carried out with the `ng-annotate` library. In order to take advantage of this, a simple directive prologue of the format:

```js
function MyService($http) {
  'ngInject';
  ...
}
```

needs to be added at the very beginning of any Angular functions/modules. The Gulp tasks will then take care of adding any dependency injection, requiring you to only specify the dependencies within the function parameters and nothing more.

---

### SASS

SASS, standing for 'Syntactically Awesome Style Sheets', is a CSS extension language adding things like extending, variables, and mixins to the language. This boilerplate provides a barebones file structure for your styles, with explicit imports into `app/styles/main.scss`. A Gulp task (discussed later) is provided for compilation and minification of the stylesheets based on this file.

---

### Browserify

Browserify is a Javascript file and module loader, allowing you to `require('modules')` in all of your files in the same manner as you would on the backend in a node.js environment. The bundling and compilation is then taken care of by Gulp, discussed below.

---

### Gulp

Gulp is a ""streaming build system"", providing a very fast and efficient method for running your build tasks.

##### Web Server

Gulp is used here to provide a very basic node/Express web server for viewing and testing your application as you build. It serves static files from the `build/` directory, leaving routing up to AngularJS. All Gulp tasks are configured to automatically reload the server upon file changes. The application is served to `localhost:3002` once you run the `npm run dev` script. To take advantage of the fast live reload injection provided by browser-sync, you must load the site at the proxy address (within this boilerplate will by default be `localhost:3000`). To change the settings related to live-reload or browser-sync, you can access the UI at `localhost:3001`.

##### Scripts

A number of build processes are automatically run on all of our Javascript files, run in the following order:

- **JSHint:** Gulp is currently configured to run a JSHint task before processing any Javascript files. This will show any errors in your code in the console, but will not prevent compilation or minification from occurring.
- **Browserify:** The main build process run on any Javascript files. This processes any of the `require('module')` statements, compiling the files as necessary.
- **Babelify:** This uses [babelJS](https://babeljs.io/) to provide support for ES6+ features.
- **Debowerify:** Parses `require()` statements in your code, mapping them to `bower_components` when necessary. This allows you to use and include bower components just as you would npm modules.
- **ngAnnotate:** This will automatically add the correct dependency injection to any AngularJS files, as mentioned previously.
- **Uglifyify:** This will minify the file created by Browserify and ngAnnotate.

The resulting file (`main.js`) is placed inside the directory `/build/js/`.

##### Styles

Just one plugin is necessary for processing our SASS files, and that is `gulp-sass`. This will read the `main.scss` file, processing and importing any dependencies and then minifying the result. This file (`main.css`) is placed inside the directory `/build/css/`.

- **gulp-autoprefixer:** Gulp is currently configured to run autoprefixer after compiling the scss.  Autoprefixer will use the data based on current browser popularity and property support to apply prefixes for you. Autoprefixer is recommended by Google and used in Twitter, WordPress, Bootstrap and CodePen.

##### Images

Any images placed within `/app/images` will be automatically copied to the `build/images` directory. If running `npm run build`, they will also be compressed via imagemin.

##### Views

When any changes are made to the `index.html` file, the new file is simply copied to the `/build/` directory without any changes occurring.

Files inside `/app/views/`, on the other hand, go through a slightly more complex process. The `gulp-angular-templatecache` module is used in order to process all views/partials, creating the `template.js` file briefly mentioned earlier. This file will contain all the views, now in Javascript format inside Angular's `$templateCache` service. This will allow us to include them in our Javascript minification process, as well as avoid extra HTTP requests for our views.

##### Watching files

All of the Gulp processes mentioned above are run automatically when any of the corresponding files in the `/app` directory are changed, and this is thanks to our Gulp watch tasks. Running `npm run dev` will begin watching all of these files, while also serving to `localhost:3002`, and with browser-sync proxy running at `localhost:3000` (by default).

##### Production Task

Just as there is the `npm run dev` command for development, there is also a `npm run build` command for putting your project into a production-ready state. This will run each of the tasks, while also adding the image minification task discussed above. There is also an empty deploy task (run with `npm run deploy`) that is included when running the production task. This deploy task can be fleshed out to automatically push your production-ready site to your hosting setup.

**Reminder:** When running the production task, gulp will not fire up the express server and serve your index.html. This task is designed to be run before the `deploy` step that may copy the files from `/build` to a production web server.

##### Pre-compressing text assets

When building with `npm run build`, a pre-compressed file is generated in addition to uncompressed file (.html.gz, .js.gz, css.gz). This is done to enable web servers serve compressed content without having to compress it on the fly. Pre-compression is handled by `gzip` task.

##### Testing

A Gulp tasks also exists for running the test framework (discussed in detail below). Running `gulp test` will run any and all tests inside the `/test` directory and show the results (and any errors) in the terminal.

---

### Testing

This boilerplate also includes a simple framework for unit and end-to-end (e2e) testing via [Karma](http://karma-runner.github.io/) and [Jasmine](http://jasmine.github.io/). In order to test AngularJS modules, the [angular.mocks](https://docs.angularjs.org/api/ngMock/object/angular.mock) module is used.

All of the tests can be run at once with the command `npm test`. However, the tests are broken up into two main categories:

##### End-to-End (e2e) Tests

e2e tests, as hinted at by the name, consist of tests that involve multiple modules or require interaction between modules, similar to integration tests. These tests are carried out using the Angular library [Protractor](https://github.com/angular/protractor), which also utilizes Jasmine. The goal is to ensure that the flow of your application is performing as designed from start to finish.

In this boilerplate, two end-to-end test examples are provided:

- `routes_spec.js`, which tests the functionality of our AngularJS routing
- `example_spec.js`, which tests the functionality of the example route, controller, and view

More examples can be seen at the above link for Protractor.

All e2e tests are run with `npm run protractor`.

##### Unit Tests

Unit tests are used to test a single module (or ""unit"") at a time in order to ensure that each module performs as intended individually. In AngularJS this could be thought of as a single controller, directive, filter, service, etc. That is how the unit tests are organized in this boilerplate.

An example test is provided for the following types of AngularJS modules:

- `unit/controllers/example_spec.js`
- `unit/services/example_spec.js`
- `unit/directives/example_spec.js`
- `unit/constants_spec.js`

All unit tests are run with `npm run unit`. When running unit tests, code coverage is simultaneously calculated and output as an HTML file to the `/coverage` directory.
",,2014-07-31T18:43:33Z,2017-09-14T03:58:00Z,35,24,1030,51,"('jakemmarsh', 264), ('Andrew Levine', 8), ('reneolivo', 7), ('stcruy', 6), ('Andrew Levine', 4), ('StrikeForceZero', 4), ('Jake Marsh', 4), ('jsyrjala', 3), ('marcusmolchany', 3), ('Loupax', 3), ('Pooriafd', 2), ('rwam', 2), ('Philipp Alferov', 1), ('rogerhutchings', 1), ('cw-tza', 1), ('Writtscher', 1), ('Paradox41', 1), ('awinecki', 1), ('centsent', 1), ('chirag04', 1), ('hxucaa', 1), ('mujx', 1), ('soliury', 1), ('victmo', 1), ('Pete Palles', 1), ('boadude', 1), ('Michael Kurowski', 1), ('marcofugaro', 1), ('Leandro Glossman', 1), ('UsainBloot', 1), ('Jack Palmer', 1), ('fccoelho7', 1), ('mrdivyansh', 1), ('AlexBarnes86', 1), ('AaronJan', 1)",23,15,
huzidaha/react-naive-book,开源、免费、专业、简单的 React.js 在线教程,"# React.js 小书
[![License: CC BY-ND 4.0](https://img.shields.io/badge/License-CC%20BY--ND%204.0-blue.svg)](https://creativecommons.org/licenses/by-nd/4.0/legalcode)
[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](CONTRIBUTING.md)

在线阅读：[http://huziketang.com/books/react/](http://huziketang.com/books/react/)

## 简介
这是一本关于 React.js 的小书。

因为工作中一直在使用 React.js，也一直以来想总结一下自己关于 React.js 的一些知识、经验。于是把一些想法慢慢整理书写下来，做成一本开源、免费、专业、简单的入门级别的小书，提供给社区。希望能够帮助到更多 React.js 刚入门朋友。

由于水平有限，编写的过程难免会有诸多错误，也希望大家在看的过程中发现了问题，可以在 Github 上给该项目发 Pull Request。衷心希望可以有更多的人参与到本书的编写当中。

（PS：因为太多人问，统一回复：本书所有的图都用 Keynote 绘制而成）

## 本书介绍

本书为有一点前端基础的并且是 React.js 零基础的同学而作，帮助他们掌握 React.js 并且灵活地把 React.js 应用到实际项目当中。如果你有一定的 HTML、CSS、JavaScript 基础并且希望学习 React.js，而又觉得 React.js 当中有些概念比难以接受和理解，希望能够从零开始学习，那么本书很适合你。但如果你已经对前端已经非常熟悉并且用过不少的前端框架和相关的组件化技术，建议你直接看官网文档。

本书并不会文档式地包含所有知识点，只会提炼实战经验中基础的、重要的、频繁的知识进行重点讲解，让你能用最少的精力深入了解实战中最需要的 React.js 知识和套路，轻装上路。如果需要更多更全面的知识点，可以参看更多的官方文档或者其他丰富的资料。

**另外，本书全书采用 ECMAScript 2015，阅读之前请确保自己已经掌握了 ECMAScript 2015 的基本语法，否则阅读起来会非常困难。**

本书初定分为三个阶段，每个阶段最后会有实战分析，把该阶段的知识点应用起来。

**第一个阶段**：希望能让读者掌握 React.js 的基本概念和基础知识。包括问题的根源：前端组件的复用性问题、数据和视图的同步问题。了解清楚问题以后再了解 React.js 的基础知识，包括 JSX、事件监听、state、props、列表渲染等。看看 React.js 是怎么解决这些问题的。这个阶段结束以后，读者就可以可以运用 React.js 构建简单的页面功能。

**第二个阶段**：让读者更进一步了解 React.js，包括组件生命周期及其含义、state 和 props 的进阶概念、props 验证及其意义、组件组合进阶、如何和 DOM 打交道、并且开始引入前端应用状态管理所存在的问题。

**第三个阶段**：让读者掌握 React.js 较为高级的概念，包括高阶组件、context。并且尝试引入 React-redux 来协助我们构建较为完整的前端应用，还会开始深入讨论前端应用状态管理的问题；关于 React-router 也会有所提及。

## 目录

**第一个阶段**

![](https://img.shields.io/badge/已完成-100%25-brightgreen.svg)

* Lesson 1 - [React.js 简介](http://huziketang.com/books/react/lesson1)
* Lesson 2 - [前端组件化（一）：从一个简单的例子讲起](http://huziketang.com/books/react/lesson2)
* Lesson 3 - [前端组件化（二）：优化 DOM 操作](http://huziketang.com/books/react/lesson3)
* Lesson 4 - [前端组件化（三）：抽象出公共组件类](http://huziketang.com/books/react/lesson4)
* Lesson 5 - [React.js 基本环境安装](http://huziketang.com/books/react/lesson5)
* Lesson 6 - [使用 JSX 描述 UI 信息](http://huziketang.com/books/react/lesson6)
* Lesson 7 - [组件的 render 方法](http://huziketang.com/books/react/lesson7)
* Lesson 8 - [组件的组合、嵌套和组件树](http://huziketang.com/books/react/lesson8)
* Lesson 9 - [事件监听](http://huziketang.com/books/react/lesson9)
* Lesson 10 - [组件的 state 和 setState](http://huziketang.com/books/react/lesson10)
* Lesson 11 - [配置组件的 props](http://huziketang.com/books/react/lesson11)
* Lesson 12 - [state vs props](http://huziketang.com/books/react/lesson12)
* Lesson 13 - [渲染列表数据](http://huziketang.com/books/react/lesson13)
* Lesson 14 - [实战分析：评论功能（一）](http://huziketang.com/books/react/lesson14)
* Lesson 15 - [实战分析：评论功能（二）](http://huziketang.com/books/react/lesson15)
* Lesson 16 - [实战分析：评论功能（三）](http://huziketang.com/books/react/lesson16)

**第二个阶段**

![](https://img.shields.io/badge/已完成-100%25-brightgreen.svg)

* Lesson 17 - [前端应用状态管理 —— 状态提升](http://huziketang.com/books/react/lesson17)
* Lesson 18 - [挂载阶段的组件生命周期（一）](http://huziketang.com/books/react/lesson18)
* Lesson 19 - [挂载阶段的组件生命周期（二）](http://huziketang.com/books/react/lesson19)
* Lesson 20 - [更新阶段的组件生命周期](http://huziketang.com/books/react/lesson20)
* Lesson 21 - [ref 和 React.js 中的 DOM 操作](http://huziketang.com/books/react/lesson21)
* Lesson 22 - [props.children 和容器类组件](http://huziketang.com/books/react/lesson22)
* Lesson 23 - [dangerouslySetHTML 和 style 属性](http://huziketang.com/books/react/lesson23)
* Lesson 24 - [PropTypes 和组件参数验证](http://huziketang.com/books/react/lesson24)
* Lesson 25 - [实战分析：评论功能（四）](http://huziketang.com/books/react/lesson25)
* Lesson 26 - [实战分析：评论功能（五）](http://huziketang.com/books/react/lesson26)
* Lesson 27 - [实战分析：评论功能（六）](http://huziketang.com/books/react/lesson27)

**第三个阶段**

![](https://img.shields.io/badge/已完成-90%25-brightgreen.svg)

* Lesson 28 - [高阶组件（Higher-Order Components）](http://huziketang.com/books/react/lesson28)
* Lesson 29 - [React.js 的 context](http://huziketang.com/books/react/lesson29)
* Lesson 30 - [动手实现 Redux（一）：优雅地修改共享状态](http://huziketang.com/books/react/lesson30)
* Lesson 31 - [动手实现 Redux（二）：抽离 store 和监控数据变化](http://huziketang.com/books/react/lesson31)
* Lesson 32 - [动手实现 Redux（三）：纯函数（Pure Function）简介](http://huziketang.com/books/react/lesson32)
* Lesson 33 - [动手实现 Redux（四）：共享结构的对象提高性能](http://huziketang.com/books/react/lesson33)
* Lesson 34 - [动手实现 Redux（五）：不要问为什么的 reducer](http://huziketang.com/books/react/lesson34)
* Lesson 35 - [动手实现 Redux（六）：Redux 总结](http://huziketang.com/books/react/lesson35)
* Lesson 36 - [动手实现 React-redux（一）：初始化工程](http://huziketang.com/books/react/lesson36)
* Lesson 37 - [动手实现 React-redux（二）：结合 context 和 store](http://huziketang.com/books/react/lesson37)
* Lesson 38 - [动手实现 React-redux（三）：connect 和 mapStateToProps](http://huziketang.com/books/react/lesson38)
* Lesson 39 - [动手实现 React-redux（四）：mapDispatchToProps](http://huziketang.com/books/react/lesson39)
* Lesson 40 - [动手实现 React-redux（五）：Provider](http://huziketang.com/books/react/lesson40)
* Lesson 41 - [动手实现 React-redux（六）：React-redux 总结](http://huziketang.com/books/react/lesson41)
* Lesson 42 - [使用真正的 Redux 和 React-redux](http://huziketang.com/books/react/lesson42)
* Lesson 43 - [Smart 组件 vs Dumb 组件](http://huziketang.com/books/react/lesson43)
* Lesson 44 - [实战分析：评论功能（七）](http://huziketang.com/books/react/lesson44)
* Lesson 45 - [实战分析：评论功能（八）](http://huziketang.com/books/react/lesson45)
* Lesson 46 - [实战分析：评论功能（九）](http://huziketang.com/books/react/lesson46)
* ...

## 特别鸣谢

特别感谢以下朋友对本书所做的审校工作，给本书提出了很多宝贵的改进意见：

* [邝伟科](https://github.com/kuangwk/) - 腾讯 Web 前端工程师
* [杨海波](https://github.com/hipoyang/) - 百度 Web 高级前端工程师
* [谢军令](https://github.com/brucexiejunling/) - 天猫 Web 前端工程师
* [戴嘉华](https://github.com/livoras/) - 前微信 Web 前端工程师

## 联系作者

* 邮箱：huzidaha@126.com
* 知乎：[@胡子大哈](https://www.zhihu.com/people/hu-zi-da-ha)
* 专栏：[@前端大哈](https://zhuanlan.zhihu.com/qianduandaha)
* 加入《React.js 小书》读者交流群，一起讨论、交流、学习前端技术。




## License

本作品采用 [署名-禁止演绎 4.0 国际许可协议](https://creativecommons.org/licenses/by-nd/4.0/legalcode) 进行许可
",'reactjs',2017-03-14T07:08:37Z,2019-04-24T02:35:44Z,8,8,3755,120,"('huzidaha', 115), ('JohannLai', 3), ('cpprookie', 2), ('wangpengfei15975', 1), ('cobish', 1), ('zhu-ting', 1), ('nanedo', 1), ('Pomelo1213', 1)",5,5,
AUSG/aws-architecture-study-B-2019,AUSG - AWS Architecture Study B Group,"# 2019 AWS Architecture Study B Group

**해당 스터디에서는 내부적으로 선정한 레퍼런스를 통해 AWS Architecture를 공부합니다.**

## 레퍼런스
- [아마존 웹 서비스를 다루는 기술 - 길벗](http://pyrasis.com/aws.html)

  


- [AWS 10분 자습서](https://aws.amazon.com/ko/getting-started/tutorials/)
- [AWS Architecture Center](https://aws.amazon.com/ko/architecture/?solutions-all.sort-by=item.additionalFields.sortDate&solutions-all.sort-order=desc&whitepapers-main.sort-by=item.additionalFields.sortDate&whitepapers-main.sort-order=desc&reference-architecture.sort-by=item.additionalFields.sortDate&reference-architecture.sort-order=desc)
- [AWS Architecture Blog](https://aws.amazon.com/ko/blogs/architecture/)
- [AWSKRUG 소모임 레포](https://github.com/awskrug/)

## 스터디 방법
```
1. 레퍼런스 중 책을 중점으로 공부
2. 한 달에 한번 AUSG 스터디 오프라인 모임에서 발표
2. 모임 후 작성...

* 시험기간 또는 조율된 기간에는 스터디를 쉽니다.
쉬는 날: 
```

## 스터디 일정
- 매 주 월요일 저녁 7시 강남권 스터디룸","'2019', 'architecture', 'study'",2019-09-26T07:44:47Z,2020-01-20T10:10:07Z,7,6,8,6,"('shindongsun0', 15), ('cadenzah', 13), ('umi0410', 12), ('sangyeol-kim', 9), ('Dailyscat', 7), ('emiling', 3), ('sangyeol', 1)",1,0,
jgoodyear/ApacheKarafCookbook,Samples for Packt Publishing's Apache Karaf Cookbook,"Apache Karaf Cookbook
=====================

Samples for Packt Publishing's Apache Karaf Cookbook.

The samples in this project were written with JDK 1.7 and Maven 3.0.5.

1. Apache Karaf for system builders.
2. Making a Smart Router with Apache Camel. (Sample Chapter) 
3. Deploying a Message Broker with Apache ActiveMQ. 
4. Hosting a JSP with Pax-web.  
5. Hosting web services with Apache CXF.  
6. Distributing a clustered container with Apache Karaf Cellar.  
7. Providing a persistence layer with Apache Aries and OpenJPA.  
8. Making a scalable persistence layer with Apache Cassandra. 
9. Manage big data with Apache Hadoop. 


Recipes tested on:
 * Suse Enterprise Linux 11 sp3
 * Ubuntu LTS 12.04 Server
 * Windows Pro 7
 * Mac OSX 10.9
",,2014-01-13T18:22:04Z,2023-05-09T17:38:37Z,9,5,66,22,"('jgoodyear', 55), ('ANierbeck', 52), ('Heath Kesler', 7), ('jgoodyear', 5), ('Johan Edstrom', 4), ('heathkesler', 2), ('sobkowiak', 2), ('twalzer', 1), ('jgoodyear', 1)",2,1,
sstoiana/s3funnel,multithreaded command line tool for Amazon's Simple Storage Service (S3),"# s3funnel

This project is a clone of 's s3funnel from google code: . s3funnel is a multithreaded command line tool for Amazon's Simple Storage Service (S3).

- Written in Python, easy_install the package to install as an egg.
- Supports multithreaded operations for large volumes. Put, get, or delete many items concurrently, using a fixed-size pool of threads.
- Built on workerpool for multithreading and boto for access to the Amazon S3 API.
- Unix-friendly input and output. Pipe things in, out, and all around.

## Usage
    $ s3funnel --help
    Usage: s3funnel BUCKET OPERATION [OPTIONS] [FILE]...

    s3funnel is a multithreaded tool for performing operations on Amazon's S3.

    Key Operations:
        DELETE Delete key from the bucket
        GET    Get key from the bucket
        PUT    Put file into the bucket (key is the basename of the path)

    Bucket Operations:
        CREATE Create a new bucket
        DROP   Delete an existing bucket (must be empty)
        LIST   List keys in the bucket. If no bucket is given, buckets will be listed.


    Options:
      -h, --help        show this help message and exit
      -a AWS_KEY, --aws_key=AWS_KEY
                Overrides AWS_ACCESS_KEY_ID environment variable
      -s AWS_SECRET_KEY, --aws_secret_key=AWS_SECRET_KEY
                Overrides AWS_SECRET_ACCESS_KEY environment variable
      -t N, --threads=N     Number of threads to use [default: 1]
      -T SECONDS, --timeout=SECONDS
                Socket timeout time, 0 is never [default: 0]
      --insecure        Don't use secure (https) connection
      --list-marker=KEY     (`list` only) Start key for list operation
      --list-prefix=STRING  (`list` only) Limit results to a specific prefix
      --list-delimiter=CHAR
                (`list` only) Treat value as a delimiter for
                hierarchical listing
      --put-acl=ACL     (`put` only) Set the ACL permission for each file
                [default: public-read]
      --put-full-path       (`put` only) Use the full given path as the key name,
                instead of just the basename
      --put-only-new    (`put` only) Only PUT keys which don't already exist
                in the bucket with the same md5 digest
      --put-header=HEADERS  (`put` only) Add the specified header to the request
      --source-bucket=SOURCE_BUCKET
                (`copy` only) Source bucket for files
      -i FILE, --input=FILE
                Read one file per line from a FILE manifest
      -v, --verbose     Enable verbose output. Use twice to enable debug
                output
      --version         Output version information and exit

## Examples
Note: Appending the -v flag will print useful progress information to stderr. Great for learning the tool.

### Create a bucket
    $ s3funnel mybukkit create
### List existing buckets
    $ s3funnel list
    mybukkit
### Put files in a bucket
    $ touch 1 2 3
    $ s3funnel mybukkit put 1 2 3
### List files in a bucket
    $ s3funnel mybukkit list
    1
    2
    3
### Copy files from a bucket
    $ rm 1 2 3
    $ s3funnel mybukkit get 1 2 3 --threads=2
    $ ls -1
    1
    2
    3
### Copy files from another bucket 
    $ s3funnel mybukkit_copy create
    $ s3funnel mybukkit list | s3funnel mybukkit_copy copy --source-bucket mybukkit --threads=2 
### Empty a bucket
    $ s3funnel mybukkit list | s3funnel mybukkit delete 
    $ s3funnel mybukkit_copy list | s3funnel mybukkit_copy delete --threads=2
### Delete a bucket 
    $ s3funnel mybukkit drop
    $ s3funnel mybukkit_copy drop",,2011-06-02T11:43:49Z,2012-02-29T14:14:26Z,4,2,106,7,"('shazow', 33), ('sstoiana', 23), ('(no author)', 1), ('mick', 1)",2,1,
baconjs/bacon.js,Functional reactive programming library for TypeScript and JavaScript,"Bacon.js
========



A functional reactive programming lib for TypeScript JavaScript, written in TypeScript.

Turns your event spaghetti into clean and declarative feng shui bacon, by switching
from imperative to functional. It's like replacing nested for-loops with functional programming
concepts like [`map`](http://baconjs.github.io/api3/classes/observable.html#map) and [`filter`](http://baconjs.github.io/api3/classes/observable.html#filter). Stop working on individual events and work with event streams instead.
Combine your data with [`merge`](http://baconjs.github.io/api3/classes/eventstream.html#merge) and [`combine`](http://baconjs.github.io/api3/classes/observable.html#combine).
Then switch to the heavier weapons and wield [`flatMap`](http://baconjs.github.io/api3/classes/observable.html#flatmap) and [`combineTemplate`](http://baconjs.github.io/api3/globals.html#combinetemplate) like a boss.

Here's the stuff.

- [API docs](http://baconjs.github.io/api3/index.html)
- [Homepage](http://baconjs.github.io/)
- [Source files](https://github.com/baconjs/bacon.js/tree/master/src)
- [Generated javascript](https://github.com/baconjs/bacon.js/blob/master/dist/)
- [Specs](https://github.com/baconjs/bacon.js/blob/master/spec/)
- [Examples](https://github.com/baconjs/bacon.js/blob/master/examples/examples.html)
- [Wiki](https://github.com/baconjs/bacon.js/wiki/) with more docs, related projects and more
- [Gitter](https://gitter.im/baconjs/bacon.js) chat for developers of Bacon.
- [Migrating to 2.0](https://github.com/baconjs/bacon.js/wiki/Migration-from-version-1.0-to-2.0)

[![Build Status](https://travis-ci.org/baconjs/bacon.js.svg?branch=master)](https://travis-ci.org/baconjs/bacon.js)
[![BrowserStack Status](https://automate.browserstack.com/badge.svg?badge_key=Mlh0UHp2b1pJS01Uam5ZNHdIZnNHTjJoWGFpNldqR2JUSHdiV2NWb2dyST0tLUowV2Nrd0VmZXJhZWsyNVlyZUJxeHc9PQ==--040027ccf71cd208e0d2597276f5ef1e79eedd43%)](https://automate.browserstack.com/badge.svg?badge_key=Mlh0UHp2b1pJS01Uam5ZNHdIZnNHTjJoWGFpNldqR2JUSHdiV2NWb2dyST0tLUowV2Nrd0VmZXJhZWsyNVlyZUJxeHc9PQ==--040027ccf71cd208e0d2597276f5ef1e79eedd43%)
[![NPM version](http://img.shields.io/npm/v/baconjs.svg)](https://www.npmjs.org/package/baconjs)
[![Dependency Status](https://david-dm.org/baconjs/bacon.js.svg)](https://david-dm.org/baconjs/bacon.js)
[![devDependency Status](https://david-dm.org/baconjs/bacon.js/dev-status.svg)](https://david-dm.org/baconjs/bacon.js#info=devDependencies)

## Install and Usage

### Typescript

Bacon.js starting from version 3.0 is a Typescript library so you won't need any external types. Just
Install using `npm`.

    npm install baconjs

Then you can

```typescript
import { EventStream, once } from ""baconjs""

let s: EventStream = once(""hello"")
s.log()
```

As you can see, the global methods, such as [`once`](http://baconjs.github.io/api3/globals.html#once) are imported separately.

Check out the new [API Documentation](http://baconjs.github.io/api3/index.html), that's now generated using Typedoc from the Typescript source code.

### Modern ES6 Browser, Node.js v.12+

You can directly import Bacon.js as single aggregated ES6 module.

```javascript
import * as Bacon from 'node_modules/baconjs/dist/Bacon.mjs';
Bacon.once(""hello"").log();
```

### NPM, CommonJS, Node.js

If you're on to CommonJS ([node.js](http://nodejs.org/), [webpack](https://webpack.js.org/) or similar) you can install Bacon using npm.

    npm install baconjs
    
Try it like this:    

```js
node
Bacon=require(""baconjs"")
Bacon.once(""hello"").log()
```
    
The global methods, such as [`once`](http://baconjs.github.io/api3/globals.html#once) are available in the `Bacon` object.

### Bower

For [bower](https://github.com/twitter/bower) users:

    bower install bacon

### CDN / Script Tags

Both minified and unminified versions available on [cdnjs](https://cdnjs.com/libraries/bacon.js).

So you can also include Bacon.js using

```html


Bacon.once(""hello"").log()

```

### AMD / require.js

Bacon.js is an UMD module so it should work with AMD/require.js too. Not tested lately though.


### Github

Prefer to drink from the firehose? Download from Github [master](https://raw.github.com/baconjs/bacon.js/master/dist/Bacon.js).

Intro
=====

The idea of Functional Reactive Programming is quite well described by Conal Elliot at [Stack Overflow](http://stackoverflow.com/questions/1028250/what-is-functional-reactive-programming/1030631#1030631).

Bacon.js is a library for functional reactive programming. Or let's say it's a library for
working with [events](http://baconjs.github.io/api3/globals.html#event) in [EventStreams](http://baconjs.github.io/api3/classes/eventstream.html) and dynamic values (which are called [Properties](http://baconjs.github.io/api3/classes/property.html) in Bacon.js).

You can wrap an event source, say ""mouse clicks on a DOM element"" into an [EventStream](http://baconjs.github.io/api3/classes/eventstream.html) by saying

```js
let $ = (selector) => document.querySelector(selector) 
var clickE = Bacon.fromEvent($(""h1""), ""click"")
```

The `$` helper function above could be replaced with, for instance, jQuery or Zepto.

Each EventStream represents a stream of events. It is an [Observable](http://baconjs.github.io/api3/classes/observable.html), meaning
that you can listen to events in the stream using, for instance, the [`onValue`](http://baconjs.github.io/api3/classes/observable.html#onvalue) method
with a callback. Like this:

```js
clickE.onValue(() => alert(""you clicked the h1 element"") )
```

But you can do neater stuff too. The Bacon of Bacon.js is that you can transform,
filter and combine these streams in a multitude of ways (see [EventStream API](http://baconjs.github.io/api3/classes/eventstream.html)). The methods [`map`](http://baconjs.github.io/api3/classes/eventstream.html#map),
[`filter`](http://baconjs.github.io/api3/classes/eventstream.html#filter), for example, are similar to same functions in functional list programming
(like [Underscore](http://underscorejs.org/)). So, if you say

```js
let plusE = Bacon.fromEvent($(""#plus""), ""click"").map(1)
let minusE = Bacon.fromEvent($(""#minus""), ""click"").map(-1)
let bothE = plusE.merge(minusE)
```

.. you'll have a stream that will output the number 1 when the ""plus"" button is clicked
and another stream outputting -1 when the ""minus"" button is clicked. The `bothE` stream will
be a merged stream containing events from both the plus and minus streams. This allows
you to subscribe to both streams with one handler:

```js
bothE.onValue(val => { /* val will be 1 or -1 */ console.log(val) })
```

Note that you can also use the [`log`](http://baconjs.github.io/api3/classes/observable.html#log) method to log stream values to `console`:

```js
bothE.log()
```


In addition to EventStreams, bacon.js has a thing called [`Property`](http://baconjs.github.io/api3/classes/property.html), that is almost like an
EventStream, but has a ""current value"". So things that change and have a current state are
Properties, while things that consist of discrete events are EventStreams. You could think
mouse clicks as an EventStream and mouse cursor position as a Property. You can create Properties from
an EventStream with [`scan`](http://baconjs.github.io/api3/classes/observable.html#scan) or [`toProperty`](http://baconjs.github.io/api3/classes/eventstream.html#toproperty) methods. So, let's say

```js
let add = (x, y) => x + y
let counterP = bothE.scan(0, add)
counterP.onValue(sum => $(""#sum"").textContent = sum )
```

The `counterP` property will contain the sum of the values in the `bothE` stream, so it's practically
a counter that can be increased and decreased using the plus and minus buttons. The [`scan`](http://baconjs.github.io/api3/classes/observable.html#scan) method
was used here to calculate the ""current sum"" of events in the `bothE` stream, by giving a ""seed value""
`0` and an ""accumulator function"" `add`. The scan method creates a property that starts with the given
seed value and on each event in the source stream applies the accumulator function to the current
property value and the new value from the stream.


Hiding and showing the result div depending on the content of the property value is equally straightforward

```js
let hiddenIfZero = value => value == 0 ? ""hidden"" : ""visible""
counterP.map(hiddenIfZero)
  .onValue(visibility => { $(""#sum"").style.visibility = visibility })
```

For an actual (though a bit outdated) tutorial, please check out my [blog posts](http://nullzzz.blogspot.fi/2012/11/baconjs-tutorial-part-i-hacking-with.html)

API
===

Creating EventStreams and Properties
----------------

There's a multitude of methods for creating an EventStream from different sources, including the DOM, node callbacks and promises for example. 
See [EventStream](http://baconjs.github.io/api3/classes/eventstream.html) documentation.

Properties are usually created based on EventStreams. Some common ways are introduced in [Property](http://baconjs.github.io/api3/classes/property.html) documentation.

Combining multiple streams and properties
-----------------------------------------

You can combine the latest value from multple sources using [combine](http://baconjs.github.io/api3/classes/observable.html#combine), [combineAsArray](http://baconjs.github.io/api3/globals.html#combineasarray), 
[combineWith](http://baconjs.github.io/api3/globals.html#combinewith) or [combineTemplate](http://baconjs.github.io/api3/globals.html#combinetemplate).

You can merge multiple streams into one using [merge](http://baconjs.github.io/api3/classes/eventstream.html#merge) or [mergeAll](http://baconjs.github.io/api3/globals.html#mergeall).

You can concat streams using [concat](http://baconjs.github.io/api3/classes/observable.html#concat) or [concatAll](http://baconjs.github.io/api3/globals.html#concatall).

If you want to get the value of an observable but emit only when another stream emits an event, you might want to use [sampledBy](http://baconjs.github.io/api3/classes/observable.html#sampledby)
or its cousin [withLatestFrom](http://baconjs.github.io/api3/classes/observable.html#withlatestfrom).

Latest value of Property or EventStream
---------------------------------------

One of the common first questions people ask is ""how do I get the
latest value of a stream or a property"". There is no getLatestValue
method available and will not be either. You get the value by
subscribing to the stream/property and handling the values in your
callback. If you need the value of more than one source, use one of the
combine methods.

Bus
---

[`Bus`](http://baconjs.github.io/api3/classes/bus.html) is an [`EventStream`](http://baconjs.github.io/api3/classes/eventstream.html) that allows you to [`push`](http://baconjs.github.io/api3/classes/bus.html#push) values into the stream.
It also allows plugging other streams into the Bus. 

Event
-----

There are essentially three kinds of [Events](http://baconjs.github.io/api3/classes/event.html) that are emitted by EventStreams and Properties:

- [Value](http://baconjs.github.io/api3/classes/value.html) events that convey a value. If you subscribe using [onValue](http://baconjs.github.io/api3/classes/observable.html#onvalue), 
  you'll only deal with values. Also [`map`](http://baconjs.github.io/api3/classes/observable.html#map), [`filter`](http://baconjs.github.io/api3/classes/observable.html#filter) and most of the other operators
  also deal with values only.
- [Error](http://baconjs.github.io/api3/classes/error.html) events indicate that an error has occurred. More on errors below!
- [End](http://baconjs.github.io/api3/classes/end.html) event is emitted at most once, and is always the last event emitted by an Observable.

If you want to subscribe to all events from an Observable, you can use the [subscribe](http://baconjs.github.io/api3/classes/observable.html#subscribe) method.


Errors
------

[`Error`](http://baconjs.github.io/api3/classes/error.html) events are always passed through all stream operators. So, even
if you filter all values out, the error events will pass through. If you
use flatMap, the result stream will contain Error events from the source
as well as all the spawned stream.

You can take action on errors by using [`onError`](http://baconjs.github.io/api3/classes/observable.html#onerror).

See also [`mapError`](http://baconjs.github.io/api3/classes/observable.html#maperror), [`errors`](http://baconjs.github.io/api3/classes/observable.html#errors), [`skipErrors`](http://baconjs.github.io/api3/classes/observable.html#skiperrors), 
[`Bacon.retry`](http://baconjs.github.io/api3/globals.html#retry) and [`flatMapError`](http://baconjs.github.io/api3/classes/observable.html#flatmaperror).

In case you want to convert (some) value events into [`Error`](http://baconjs.github.io/api3/classes/error.html) events, you may use [`flatMap`](http://baconjs.github.io/api3/classes/observable.html#flatmap) like this:

```js
stream = Bacon.fromArray([1,2,3,4]).flatMap(function(x) {
  if (x > 2)
    return new Bacon.Error(""too big"")
  else
    return x
})
```

Conversely, if you want to convert some [`Error`](http://baconjs.github.io/api3/classes/error.html) events into value events, you may use [`flatMapError`](http://baconjs.github.io/api3/classes/observable.html#flatmaperror):

```js
myStream.flatMapError(function(error) {
  return isNonCriticalError(error) ? handleNonCriticalError(error) : new Bacon.Error(error)
})
```

Note also that Bacon.js operators do not catch errors that are thrown.
Especially [`map`](http://baconjs.github.io/api3/classes/observable.html#map) doesn't do so. If you want to map things
and wrap caught errors into Error events, you can do the following:

```js
wrapped = source.flatMap(Bacon.try(dangerousOperation))
```

For example, you can use [`Bacon.try`](http://baconjs.github.io/api3/globals.html#try) to handle JSON parse errors:

```js
var jsonStream = Bacon
  .once('{""this is invalid json""')
  .flatMap(Bacon.try(JSON.parse))

jsonStream.onError(function(err) {
  console.error(""Failed to parse JSON"", err)
})
```

An Error does not terminate the stream. The method [`endOnError`](http://baconjs.github.io/api3/classes/observable.html#endonerror)
returns a stream/property that ends immediately after the first error.

Bacon.js doesn't currently generate any [`Error`](http://baconjs.github.io/api3/classes/error.html) events itself (except when
converting errors using [`fromPromise`](http://baconjs.github.io/api3/globals.html#frompromise)). Error
events definitely would be generated by streams derived from IO sources
such as AJAX calls.

See [retry](http://baconjs.github.io/api3/globals.html#retry) for retrying on error.


Introspection and metadata
--------------------------

Bacon.js provides ways to get some descriptive metadata about all Observables.

See [`toString`](http://baconjs.github.io/api3/classes/observable.html#tostring), [`deps`](http://baconjs.github.io/api3/classes/observable.html#deps), [`desc`](http://baconjs.github.io/api3/classes/observable.html#desc),
[`spy`](http://baconjs.github.io/api3/globals.html#spy).

## Changes to earlier versions

### Function Construction rules removed in 3.0

Function construction rules, which allowed you to use string shorthands for properties and methods,
were removed in version 3.0, as they are not as useful as they used to be, due to the moderd, short
lambda syntax in ES6 and Typescript, as well as libraries like Ramda and partial.lenses.

### Lazy evaluation removed in 2.0

Lazy evaluation of event values has been removed in version 2.0

Cleaning up
-----------

As described above, a subscriber can signal the loss of interest in new events
in any of these two ways:

1. Return [`noMore`](http://baconjs.github.io/api3/globals.html#nomore) from the handler function
2. Call the `dispose()` function that was returned by the [`subscribe`](http://baconjs.github.io/api3/classes/observable.html#subscribe) or [`onValue`](http://baconjs.github.io/api3/classes/observable.html#onvalue)
   call.

Based on my experience, an actual side-effect subscriber
in application-code almost never does this. Instead you'll use methods like [takeUntil](http://baconjs.github.io/api3/classes/observable.html#takeuntil)
to stop listening to a source when something happens. 


EventStream and Property semantics
----------------------------------

The state of an EventStream can be defined as (t, os) where `t` is time
and `os` the list of current subscribers. This state should define the
behavior of the stream in the sense that

1. When a Next event is emitted, the same event is emitted to all subscribers
2. After an event has been emitted, it will never be emitted again, even
if a new subscriber is registered. A new event with the same value may
of course be emitted later.
3. When a new subscriber is registered, it will get exactly the same
events as the other subscriber, after registration. This means that the
stream cannot emit any ""initial"" events to the new subscriber, unless it
emits them to all of its subscribers.
4. A stream must never emit any other events after End (not even another End)

The rules are deliberately redundant, explaining the constraints from
different perspectives. The contract between an EventStream and its
subscriber is as follows:

1. For each new value, the subscriber function is called. The new
   value is wrapped into a [`Next`](http://baconjs.github.io/api3/classes/next.html) event.
2. The subscriber function returns a result which is either [`noMore`](http://baconjs.github.io/api3/globals.html#nomore) or
[`more`](http://baconjs.github.io/api3/globals.html#more). The `undefined` value is handled like [`more`](http://baconjs.github.io/api3/globals.html#more).
3. In case of [`noMore`](http://baconjs.github.io/api3/globals.html#nomore) the source must never call the subscriber again.
4. When the stream ends, the subscriber function will be called with
   and [`End`](http://baconjs.github.io/api3/classes/end.html) event. The return value of the subscribe function is
   ignored in this case.

A [`Property`](http://baconjs.github.io/api3/classes/property.html) behaves similarly to an [`EventStream`](http://baconjs.github.io/api3/classes/eventstream.html) except that

1. On a call to `subscribe`, it will deliver its current value
(if any) to the provided subscriber function wrapped into an [`Initial`](http://baconjs.github.io/api3/classes/initial.html)
event.
2. This means that if the Property has previously emitted the value `x`
to its subscribers and that is the latest value emitted, it will deliver
this value to the new subscriber.
3. Property may or may not have a current value to start with. Depends
on how the Property was created.

Atomic updates
--------------

Bacon.js supports atomic updates to properties for solving a [glitches problem](https://en.wikipedia.org/wiki/Reactive_programming#Glitches).

Assume you have properties A and B and property C = A + B. Assume that
both A and B depend on D, so that when D changes, both A and B will
change too.

When D changes `d1 -> d2`, the value of A `a1 -> a2` and B changes `b1
-> b2` simultaneously, you'd like C to update atomically so that it
would go directly `a1+b1 -> a2+b2`. And, in fact, it does exactly that.
Prior to version 0.4.0, C would have an additional transitional
state like `a1+b1 -> a2+b1 -> a2+b2`

For jQuery users
----------------

Earlier versions of Bacon.js automatically installed the [`asEventStream`](http://baconjs.github.io/api3/globals.html#_)
 method into jQuery.
Now, if you still want to use that method, initialize this integration by calling [`Bacon.$.init($)`](http://baconjs.github.io/api3/globals.html#_)
.

For RxJs Users
--------------

Bacon.js is quite similar to RxJs, so it should be pretty easy to pick up. The
major difference is that in bacon, there are two distinct kinds of Observables:
the EventStream and the Property. The former is for discrete events while the
latter is for observable properties that have the concept of ""current value"".

Also, there are no ""cold observables"", which
means also that all EventStreams and Properties are consistent among subscribers:
when an event occurs, all subscribers will observe the same event. If you're
experienced with RxJs, you've probably bumped into some wtf's related to cold
observables and inconsistent output from streams constructed using scan and startWith.
None of that will happen with bacon.js.

Error handling is also a bit different: the Error event does not
terminate a stream. So, a stream may contain multiple errors. To me,
this makes more sense than always terminating the stream on error; this
way the application developer has more direct control over error
handling. You can always use [`endOnError`](http://baconjs.github.io/api3/classes/observable.html#endonerror) to get a stream
that ends on the first error!

Examples
========

See [Examples](https://github.com/baconjs/bacon.js/blob/master/examples/examples.html)

See [Specs](https://github.com/baconjs/bacon.js/blob/master/spec/)

See Worzone [demo](http://juhajasatu.com/worzone/) and [source](http://github.com/raimohanska/worzone)

Build
=====


First check out the Bacon.js repository and run `npm install`.

Then build the Typescript sources into a javascript bundle (plus typescript type definitions):

    npm run dist

Result javascript files will be generated in `dist` directory. If your planning
to develop Bacon.js yourself, you'll want to run [tests] too using `npm test`.

Test
====

Run all unit tests:

    npm test
    
The tests are run against the javascript bundle in the `dist` directory. You can build the bundle using `npm run dist`.

This will loop thru all files under `spec` and build the library with the
single feature and run the test.

Run browser tests locally:

    npm install
    npm run browsertest-bundle
    npm rum browsertest-open

Run performance tests:

    performance/PerformanceTest.coffee
    performance/PerformanceTest.coffee flatmap

Run memory usage tests:

    coffee --nodejs '--expose-gc' performance/MemoryTest.coffee

Dependencies
============

Runtime: none
Build/test: see [package.json].

Compatibility with other libs
=============================

Bacon.js doesn't mess with prototypes or the global object, except that it exports the Bacon object as `window.Bacon` when installed using the `` tag.

So, it should be pretty much compatible and a nice citizen.

I'm not sure how it works in case some other lib adds stuff to, say, Array prototype, though. Maybe add test for this later?

Compatibility with browsers
===========================

TLDR: good.

Bacon.js is not browser dependent, because it is not a UI library. It should work on all ES5-ish runtimes.

Automatically tested on each commit on modern browsers in Browserstack.


Why Bacon?
==========

Bacon.js exists largely because I got frustrated with RxJs, which is a good library, but at that time
didn't have very good documentation and wasn't open-source. Things have improved a lot in the Rx
world since that. Yet, there are still compelling reasons to use Bacon.js instead. Like, for instance,

- more consistent stream/property behavior 
- simplicity of use
- atomic updates

If you're more into performance and less into atomic updates, you might want to check out [Kefir.js](https://kefirjs.github.io/kefir/)!

Contribute
==========

Use [GitHub issues](https://github.com/baconjs/bacon.js/issues) and [Pull Requests](https://github.com/baconjs/bacon.js/pulls).

Note:
- the `dist/Bacon*.js` files are assembled from files in `src/`. After updating source files, run `npm install` to update the generated files. Then commit and create your Pull Request.
- the [API docs](http://baconjs.github.io/api3/index.html) are generated from this README and docstrings in the sources in the src directory. See the [baconjs.github.io](https://github.com/baconjs/baconjs.github.io) repository for more info.

Sponsors
========

Thanks to [BrowserStack](http://www.browserstack.com) for kindly providing me with free of charge automatic testing time.

Thanks also to [Reaktor](https://reaktor.com/) for supporting Bacon.js development and letting me use some of my working hours on open-source development.


",,2012-03-02T19:21:42Z,2023-07-01T08:28:03Z,113,85,6468,137,"('raimohanska', 2003), ('Juha Paananen', 281), ('lautis', 215), ('phadej', 77), ('wolfflow', 44), ('matthew-hilty', 32), ('mpeltonen', 28), ('phni', 27), ('Miki Leskinen', 19), ('semmel', 16), ('abesto', 14), ('hden', 14), ('laurilehmijoki', 10), ('evanrmurphy', 9), ('lenary', 8), ('hhelwich', 6), ('philipnilsson', 6), ('pnex2000', 6), ('Macil', 5), ('Heikki Pora', 5), ('JoostvanPinxten', 5), ('RoboTeddy', 5), ('vvilhonen', 5), ('philipnilsson', 5), ('mhelvens', 4), ('dawsbot', 4), ('eskimoblood', 4), ('skozin', 4), ('philipnilsson', 4), ('Joni Freeman', 4), ('Jarno Keskikangas', 4), ('Eli Frey', 4), ('joux3', 3), ('dependabotbot', 3), ('timgates42', 3), ('stephenjudkins', 3), ('Mikko Koponen', 3), ('michaelficarra', 3), ('texastoland', 3), ('Harry Garrood', 3), ('dchelimsky', 3), ('antris', 3), ('milankinen', 2), ('Sami Hangaslammi', 2), ('Soraismus', 2), ('stuartkeith', 2), ('stiff', 2), ('zzmp', 2), ('erdeszt', 2), ('BlackYoup', 2), ('dan-weaver', 2), ('DjebbZ', 2), ('joshfrench', 2), ('hvrauhal', 2), ('00dani', 2), ('Daniel K', 2), ('Carlo Hyvönen', 2), ('XeCycle', 2), ('pihvi', 2), ('Anton Rissanen', 2), ('Aleksei Velizhanin', 2), ('Mikael Roos', 1), ('vokkim', 1), ('mortonfox', 1), ('thenikso', 1), ('Nyamazing', 1), ('Olli Mahlamäki', 1), ('PatrickJS', 1), ('mjs2600', 1), ('miracle2k', 1), ('nason', 1), ('apaleslimghost', 1), ('algesten', 1), ('vlm', 1), ('pdehaan', 1), ('sdkennedy', 1), ('Steve Taylor', 1), ('timorantalaiho', 1), ('runawaygo', 1), ('valscion', 1), ('fson', 1), ('eagletmt', 1), ('e-jigsaw', 1), ('markdalgleish', 1), ('niklasvh', 1), ('plan-do-break-fix', 1), ('umanamente', 1), ('akisaarinen', 1), ('amilajack', 1), ('artalar', 1), ('wogsland', 1), ('chriscalo', 1), ('DeTeam', 1), ('ProLoser', 1), ('hammerdr', 1), ('JustBlackBird', 1), ('rue', 1), ('werelax', 1), ('Erin Swenson-Healey', 1), ('EsrefDurna', 1), ('Essi Vehmersalo', 1), ('frosas', 1), ('lachenmayer', 1), ('rce', 1), ('James Davies', 1), ('Johann', 1), ('jontore', 1), ('jonifreeman', 1), ('Josep M Sobrepere', 1), ('chacal', 1), ('Kevin DeLoach', 1), ('Dremora', 1), ('Lauri Piispanen', 1)",52,41,
qingfengxia/FreeCAD_Mod_Dev_Guide,Ebook: Module developer's guide to FreeCAD 's source code,"**Module developer's guide to FreeCAD source code**

by [Qingfeng Xia](https://www.researchgate.net/profile/Qingfeng_Xia) 2016~

by [Luzpaz 2019~](https://github.com/luzpaz)

download the latest version from `pdf` folder of this repo

## [Changelog](./changelog.md)
- 2015-09-18 version 0.1 *for FreeCAD version 0.16-dev*

- 2016-09-18 version 0.2 *for FreeCAD version 0.17-dev*

- 2019-06-18 start again to work towards version 0.3 *for FreeCAD version 0.19-dev*

## Plan and progress

This book should be updated for the recent release, esp. after migration to Python3 + Pyside2. I plan another release for FreeCAD 0.19 dev near Xmas time.

### Chinese translation(中文翻译)

[FreeCAD模块开发指南 第1章 FreeCAD概述和软件架构](https://www.jianshu.com/p/68d9858d72c5)

[FreeCAD模块开发指南 第2章 FreeCAD源代码结构](https://www.jianshu.com/p/29775f44cc17)

## [License of this book](http://creativecommons.org/licenses/sa/4.0/)

Similar as FreeCAD document license CC-BY 3.0

This ebook is licensed as [Attribution-ShareAlike 4.0 International](https://creativecommons.org/licenses/by-sa/4.0/)

see the full  text in this repo and also online  
In short, this license let you 
> Share — copy and redistribute the material in any medium or format
> Adapt — remix, transform, and build upon the material for any purpose, even commercially. 

Just request: share your derived work(share-alike) and credit the author (attribution)

## Acknowledge to developers of FreeCAD

Original/lead developers:

- [Jürgen Riegel](http://juergen-riegel.net/)
- [Werner Mayer]()
- [yorik van havre](https://www.facebook.com/yorikvanhavre)

Add all contributors see 

## Target audiences: new module developers

Make sure you are familiar with FreeCAD workbench GUI and API as a user:

- [Foundamental document on official wiki for FreeCAD](https://www.freecadweb.org/wiki/)
- [FreeCAD python API document](https://www.freecadweb.org/api/)
- [single file PDF user manual for quick start](http://sourceforge.net/projects/free-cad/files/FreeCAD%20Documentation/)

## Doxygen documents links

[Doxygen generated online documentation of source  for 0.16dev, will be delete soon](https://www.iesensor.com/FreeCADDoc/0.16-dev/)

[Doxygen generated online documentation of source  for 0.19dev on 2019-06-24](https://www.iesensor.com/FreeCADDoc/0.19/modules.html)

## Why I want to write this book

- Learn the software architecture of FreeCAD: a large open source project
- Learn to use git to contribute to open source projects like FreeCAD
- Save time for new developers to explore the source code of FreeCAD
- Record personal note and lesson during writing/contributing code to FreeCAD
- Some chapters of this ebook is seeking to be merged into official wiki after reviewed as usable

My research: [""Automated and Intelligent Engineering Design""](https://www.researchgate.net/project/Automated-and-Intelligent-Enigneering-Design)

## How to contribute to this ebook

- write on unfinished topics/chapters listed in [todo.md](./todo.md)
  fork and pull request `git clone https://github.com/qingfengxia/FreeCAD_Mod_Dev_Guide.git`

- file bug for outdated code analysis
  As this book is about code analysis while FreeCAD is under heavy development, source codes quoted may outdated quickly.
  Please point out my report bugs in [ this github issues board](https://github.com/qingfengxia/FreeCAD_Mod_Dev_Guide/issues)
  
- This ebook is pre-processed by a python script, see more details in the [scripts](https://github.com/qingfengxia/FreeCAD_Mod_Dev_Guide/tree/master/scripts) folder's Readme.

  There are some anchor texts like:

  -  [src/*.h/cpp] are processed into link to the latest official FreeCAD source.
  - some another anchors ""## folders ... "", which will be marked out soon more explicitly

## Acknowledgement to my family

This work is not funded to my employers (Oxford Unviersity, UKAEA) by the time 2019. It is a community voluntary work, thank every one review, contribute to this book.

Qingfeng Xia thanks for my wife Ms J. Wang, and other family members' for the housework exempt to complete this work.

****************************************************
","'ebook', 'freecad', 'freecad-document', 'freecad-source'",2016-07-26T21:26:13Z,2022-08-06T09:58:35Z,3,2,129,11,"('qingfengxia', 57), ('luzpaz', 8), ('Xia, Qingfeng', 2)",0,0,
AshveenBansal98/Trees,My implementation of B+ tree and B tree in C++,"My implementation of B-tree and B+ tree with
1. Odd size of non-leaf nodes
2. Even size of leaf nodes in B+ tree (Odd in case of B-tree)
3. Splitting only when necessary

I extended my B-Tree implementation so used same class for defining both leaf and non-leaf nodes. It simplified coding but I am storing some unnecessary information.
",,2019-03-28T07:07:27Z,2019-04-05T14:51:19Z,1,1,13,0,"('AshveenBansal98', 3)",0,0,
wenzhixin/bootstrap-table-examples,Bootstrap table examples,"# bootstrap-table-examples

[Bootstrap Table Docs](https://bootstrap-table.com/)

[Bootstrap Table Examples](https://examples.bootstrap-table.com)

[jsFiddle Examples](https://github.com/wenzhixin/bootstrap-table-examples/blob/master/jsfiddle_examples.md)

[CRUD Example](https://github.com/wenzhixin/bootstrap-table-examples/blob/master/crud/README.md)

## Local develop

To develop bootstrap-table and bootstrap-table-examples locally please run:

```bash
mkdir bootstrap-table-dev
cd bootstrap-table-dev
git clone https://github.com/wenzhixin/bootstrap-table
git clone https://github.com/wenzhixin/bootstrap-table-examples

cd bootstrap-table
yarn && yarn css:build:src

cd ..
yarn add http-server
npx http-server
```

And then open: http://localhost:8081/bootstrap-table-examples

## Local server

```bash
cd bootstrap-table-examples
yarn
cd server
node app.js
```

## reporting issues

All issues need to be submitted to the main project, not this examples repo.

Please read: [CONTRIBUTING.md#bug-reports](https://github.com/wenzhixin/bootstrap-table/blob/develop/CONTRIBUTING.md#bug-reports) and post issue to [issue](https://github.com/wenzhixin/bootstrap-table/issues), thanks!
",,2014-12-16T04:44:47Z,2024-05-15T00:25:18Z,28,21,2237,192,"('wenzhixin', 809), ('djhvscf', 31), ('UtechtDustin', 16), ('dbkaplun', 6), ('marceloverdijk', 6), ('fish-fly', 4), ('Macias3', 3), ('dabros', 2), ('kk', 2), ('bounlu', 2), ('Vincent Loh', 2), ('saidketchman', 2), ('kant', 2), ('AkramKamal', 2), ('smillove', 1), ('ruben.suarez', 1), ('foreveryang321', 1), ('dimbslmh', 1), ('cyberj0g', 1), ('Vincent Renaudineau', 1), ('usmanpakistan', 1), ('uselesshasid', 1), ('Luca', 1), ('Dustin Utecht', 1), ('cnbeining', 1), ('c-viswanath', 1), ('alexschwartz', 1), ('albfan', 1)",14,9,
Ciechan/BCGenieEffect,An OSX style genie effect inside your iOS app.,"BCGenieEffect
==========

OSX style genie effect inside your iOS app.

## Features

- UIView category
- Custom destination/start rectangle and its edge
- CoreAnimation based

## How To Use

### Genie in


```
CGRect endRect = CGRectMake(30, 40, 50, 60);
[view genieInTransitionWithDuration:0.7 
                    destinationRect:endRect 
                    destinationEdge:BCRectEdgeTop 
                         completion:^{
                          	NSLog(@""I'm done!"");
                          }];
```

[![](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/genieIn.gif)](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/genieIn.gif)

### Genie out


``` 
CGRect startRect = CGRectMake(30, 40, 50, 60);
[view genieOutTransitionWithDuration:0.7 
                           startRect:startRect
                           startEdge:BCRectEdgeLeft 
                          completion:nil];
```

[![](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/genieOut.gif)](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/genieOut.gif)

### Parameters

Both `endRect` and `startRect` should be specified in coordinates of view's superview.

The `edge` parameter is one of the four rect's edges:

- `BCRectEdgeTop`
- `BCRectEdgeLeft`
- `BCRectEdgeBottom`
- `BCRectEdgeRight`

### Positioning limitations

Due the way BCGenieEffect works there are some limitations in spacing between animated view and destination rect. For the following examples we will assume that the destination edge is `BCRectEdgeTop`.

#### Correct positioning

Let's start with situations in which animation will work. As you can see there is a clear and logical path which animated view will follow, it slips into the destination rect easily.

[![](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/positioningCorrect.png)](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/positioningCorrect.png)

#### Unadvisable positioning

While this example might seem similar, you should notice that the bottom edge of animated view is *below* the top edge of destination rect. While on OSX the window will move up so that its bottom edge is above the dock, I've decided not to implement this autocorrection. BCGenieEffect will still perform the animation, however the results might be glitchy. It is advised that you either decide that the glitch is not important or manually move/animate the view to evade the problem. 
When unadvisable positioning occurs, BCGenieEffect will `NSLog` a warning into console:

```
Genie Effect Warning: The bottom edge of animated view overlaps top edge of destination rect. Glitches may occur.
```

[![](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/positioningUnadvisable.png)](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/positioningUnadvisable.png)
#### Incorrect positioning

The picture presents situation in which BCGenieEffect will not fire at all, since the requested animation curve is irrational. Positioning the view correctly will remove the problem.

As before, BCGenieEffect will notify you of a problem by spilling `NSLog` into console:

```
Genie Effect ERROR: The distance between top edge of animated view and top edge of destination rect is incorrect. Animation will not be performed!
```
[![](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/positioningIncorrect.png)](https://raw.github.com/Ciechan/BCGenieEffect/master/Screens/positioningIncorrect.png)

## Requirements

- iOS 5.0
- ARC
- QuartzCore framework in your project



## Contact

Bartosz Ciechanowski

[@BCiechanowski](https://twitter.com/BCiechanowski)

## License

BCGenieEffect is released under an MIT license.

Copyright (c) 2012 Bartosz Ciechanowski

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the ""Software""), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED ""AS IS"", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

",,2012-12-25T20:21:10Z,2017-09-24T12:25:49Z,5,3,1433,66,"('Ciechan', 16), ('Avisoo', 1), ('fillito', 1), ('Tomek Kuzma', 1), ('bmwlogic', 1)",4,2,
Billyzou0741326/bilibili-live-monitor-ts,bilibili - b站直播监控,"# bilibili-live-monitor (b站舰长、抽奖、天选监听)
![Github license](https://img.shields.io/badge/license-MIT-brightgreen)
![Github nodejs](https://img.shields.io/badge/nodejs-12.16.3-blue)

[文档](https://Billyzou0741326.github.io/bilibili-live-monitor-ts/)
",,2020-01-24T02:29:52Z,2020-06-13T02:21:02Z,4,2,28,4,"('kotoriのねこ', 44), ('Billyzou0741326', 40), ('blu3mania', 17), ('kotori', 10)",0,0,
lwansbrough/react-native-ab,A component for rendering A/B tests in React Native,"# react-native-ab

A component for rendering A/B tests in React Native.

## Getting started

1. `npm install react-native-ab@latest --save`

## Obtaining your metrics

Once you've got your A/B tests set up, you'll need a place to send the data. Check out these libraries for A/B testing:

- [Google Analytics (react-native-google-analytics)](http://github.com/lwansbrough/react-native-google-analytics)

## Usage

All you need is to `require` the `react-native-ab` module and then use the provided tags (``, and ``).

```javascript

var React = require('react-native');
var {
  AppRegistry,
  StyleSheet,
  Text,
  View,
  TouchableHighlight
} = React;
var { Experiment, Variant } = require('react-native-ab');

var rnabtest = React.createClass({
  render: function() {
    return (
      
        
          
            <Experiment
              ref=""welcomeExperiment""
              name=""welcome-message""
              onChoice={(test, variant) => console.log(test, variant)}
            >
              
                
                  Welcome to React Native!
                
              
              
                
                  Hey there! Welcome to React Native!
                
              
              
                
                  Howdy, partner! This here is React Native!
                
              
            
          
        
        
          To get started, edit index.ios.js
        
        
          Press Cmd+R to reload,{'\n'}
          Cmd+Control+Z for dev menu
        
      
    );
  },

  _resetExperiment() {
    this.refs.welcomeExperiment.reset();
  }
});

var styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F5FCFF',
  },
  welcome: {
    fontSize: 20,
    textAlign: 'center',
    margin: 10,
  },
  instructions: {
    textAlign: 'center',
    color: '#333333',
    marginBottom: 5,
  },
});

AppRegistry.registerComponent('rnabtest', () => rnabtest);
```

## `` Properties

#### `name`

The name of your experiment, for example `""welcome-message""`.


#### `choose`

Example callback signature: `function(variants)`
Must return an instance of `Variant`

A function which should use a randomization algorithm to pick one of your variants. Defaults to a random selection using `Math.random()`

#### `onChoice`

Example callback signature: `function(experimentName, variantName)`

Called when a `Variant` has been chosen for your `Experiment`.

#### `onRawChoice`

Example callback signature: `function(experiment, variant)`

Same as `onChoice`, but the objects passed are React component instances.

## `` methods

You can access component methods by adding a `ref` (ie. `ref=""welcomeExperiment""`) prop to your `` element, then you can use `this.refs.welcomeExperiment.reset()`, etc. inside your component.

#### `reset()`

Resets the experiment. The next time the experiment is rendered, a new variant may be chosen.

#### `getActiveVariant()`

Returns the currently displayed `Variant`.

#### `getVariant(variantName)`

Returns the instance of the specified `Variant` name.

## `` Properties

#### `name`

The name of your variant, for example `""western""`.

## Subviews
Only the `Variant` tag element exist within the `Experiment` element. `Variant` tags can contain only one *root* element.
",,2015-04-22T21:02:01Z,2018-01-30T21:29:43Z,1,1,181,5,"('lwansbrough', 6)",0,0,
jonschlinkert/get-value,Use property paths (`a.b.c`) get a nested value from an object.,"# get-value [![NPM version](https://img.shields.io/npm/v/get-value.svg?style=flat)](https://www.npmjs.com/package/get-value) [![NPM monthly downloads](https://img.shields.io/npm/dm/get-value.svg?style=flat)](https://npmjs.org/package/get-value) [![NPM total downloads](https://img.shields.io/npm/dt/get-value.svg?style=flat)](https://npmjs.org/package/get-value) [![Linux Build Status](https://img.shields.io/travis/jonschlinkert/get-value.svg?style=flat&label=Travis)](https://travis-ci.org/jonschlinkert/get-value)

> Use property paths like 'a.b.c' to get a nested value from an object. Even works when keys have dots in them (no other dot-prop library can do this!).

Please consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.

## Table of Contents


Details

- [Install](#install)
- [Usage](#usage)
  * [Supports keys with dots](#supports-keys-with-dots)
  * [Supports arrays](#supports-arrays)
  * [Supports functions](#supports-functions)
  * [Supports passing object path as an array](#supports-passing-object-path-as-an-array)
- [Options](#options)
  * [options.default](#optionsdefault)
  * [options.isValid](#optionsisvalid)
  * [options.split](#optionssplit)
  * [options.separator](#optionsseparator)
  * [options.join](#optionsjoin)
  * [options.joinChar](#optionsjoinchar)
- [Benchmarks](#benchmarks)
  * [Running the benchmarks](#running-the-benchmarks)
- [Release history](#release-history)
  * [v3.0.0](#v300)
- [About](#about)



## Install

Install with [npm](https://www.npmjs.com/):

```sh
$ npm install --save get-value
```

## Usage

See the [unit tests](test/test.js) for many more examples.

```js
const get = require('get-value');
const obj = { a: { b: { c: { d: 'foo' } } } };

console.log(get(obj));            //=> { a: { b: { c: { d: 'foo' } } } };
console.log(get(obj, 'a'));       //=> { b: { c: { d: 'foo' } } }
console.log(get(obj, 'a.b'));     //=> { c: { d: 'foo' } }
console.log(get(obj, 'a.b.c'));   //=> { d: 'foo' }
console.log(get(obj, 'a.b.c.d')); //=> 'foo'
```

### Supports keys with dots

Unlike other dot-prop libraries, get-value works when keys have dots in them:

```js
console.log(get({ 'a.b': { c: 'd' } }, 'a.b.c'));
//=> 'd'

console.log(get({ 'a.b': { c: { 'd.e': 'f' } } }, 'a.b.c.d.e'));
//=> 'f'
```

### Supports arrays

```js
console.log(get({ a: { b: { c: { d: 'foo' } } }, e: [{ f: 'g' }, { f: 'h' }] }, 'e.1.f'));   
//=> 'h'

console.log(get({ a: { b: [{ c: 'd' }] } }, 'a.b.0.c')); 
//=> 'd'

console.log(get({ a: { b: [{ c: 'd' }, { e: 'f' }] } }, 'a.b.1.e'));
//=> 'f'
```

### Supports functions

```js
function foo() {}
foo.bar = { baz: 'qux' };

console.log(get(foo));            
//=> { [Function: foo] bar: { baz: 'qux' } }

console.log(get(foo, 'bar'));     
//=> { baz: 'qux' }

console.log(get(foo, 'bar.baz')); 
//=> qux
```

### Supports passing object path as an array

Slighly improve performance by passing an array of strings to use as object path segments (this is also useful when you need to dynamically build up the path segments):

```js
console.log(get({ a: { b: 'c' } }, ['a', 'b']));
//=> 'c'
```

## Options

### options.default

**Type**: `any`

**Default**: `undefined`

The default value to return when get-value cannot resolve a value from the given object.

```js
const obj = { foo: { a: { b: { c: { d: 'e' } } } } };
console.log(get(obj, 'foo.a.b.c.d', { default: true }));  //=> 'e'
console.log(get(obj, 'foo.bar.baz', { default: true }));  //=> true
console.log(get(obj, 'foo.bar.baz', { default: false })); //=> false
console.log(get(obj, 'foo.bar.baz', { default: null }));  //=> null

// you can also pass the default value as the last argument
// (this is necessary if the default value is an object)
console.log(get(obj, 'foo.a.b.c.d', true));  //=> 'e'
console.log(get(obj, 'foo.bar.baz', true));  //=> true
console.log(get(obj, 'foo.bar.baz', false)); //=> false
console.log(get(obj, 'foo.bar.baz', null));  //=> null
```

### options.isValid

**Type**: `function`

**Default**: `true`

If defined, this function is called on each resolved value. Useful if you want to do `.hasOwnProperty` or `Object.prototype.propertyIsEnumerable`.

```js
const isEnumerable = Object.prototype.propertyIsEnumerable;
const options = {
  isValid: (key, obj) => isEnumerable.call(obj, key)
};

const obj = {};
Object.defineProperty(obj, 'foo', { value: 'bar', enumerable: false });

console.log(get(obj, 'foo', options));           //=> undefined
console.log(get({}, 'hasOwnProperty', options)); //=> undefined
console.log(get({}, 'constructor', options));    //=> undefined

// without ""isValid"" check
console.log(get(obj, 'foo', options));           //=> bar
console.log(get({}, 'hasOwnProperty', options)); //=> [Function: hasOwnProperty]
console.log(get({}, 'constructor', options));    //=> [Function: Object]
```

### options.split

**Type**: `function`

**Default**: `String.split()`

Custom function to use for splitting the string into object path segments.

```js
const obj = { 'a.b': { c: { d: 'e' } } };

// example of using a string to split the object path
const options = { split: path => path.split('/') };
console.log(get(obj, 'a.b/c/d', options)); //=> 'e'

// example of using a regex to split the object path
// (removing escaped dots is unnecessary, this is just an example)
const options = { split: path => path.split(/\\?\./) };
console.log(get(obj, 'a\\.b.c.d', options)); //=> 'e'
```

### options.separator

**Type**: `string|regex`

**Default**: `.`

The separator to use for spliting the string (this is probably not needed when `options.split` is used).

```js
const obj = { 'a.b': { c: { d: 'e' } } };

console.log(get(obj, 'a.b/c/d', { separator: '/' }));       
//=> 'e'

console.log(get(obj, 'a\\.b.c.d', { separator: /\\?\./ })); 
//=> 'e'
```

### options.join

**Type**: `function`

**Default**: `Array.join()`

Customize how the object path is created when iterating over path segments.

```js
const obj = { 'a/b': { c: { d: 'e' } } };
const options = {
  // when segs === ['a', 'b'] use a ""/"" to join, otherwise use a "".""
  join: segs => segs.join(segs[0] === 'a' ? '/' : '.')
};

console.log(get(obj, 'a.b.c.d', options));
//=> 'e'
```

### options.joinChar

**Type**: `string`

**Default**: `.`

The character to use when re-joining the string to check for keys with dots in them (this is probably not needed when `options.join` is used). This can be a different value than the separator, since the separator can be a string or regex.

```js
const target = { 'a-b': { c: { d: 'e' } } };
const options = { joinChar: '-' };
console.log(get(target, 'a.b.c.d', options)); 
//=> 'e'
```

## Benchmarks

_(benchmarks were run on a MacBook Pro 2.5 GHz Intel Core i7, 16 GB 1600 MHz DDR3)_.

get-value is more reliable and has more features than dot-prop, without sacrificing performance.

```
# deep (175 bytes)
  dot-prop x 883,166 ops/sec ±0.93% (86 runs sampled)
  get-value x 1,448,928 ops/sec ±1.53% (87 runs sampled)
  getobject x 213,797 ops/sec ±0.85% (90 runs sampled)
  object-path x 184,347 ops/sec ±2.48% (85 runs sampled)

  fastest is get-value (by 339% avg)

# root (210 bytes)
  dot-prop x 3,905,828 ops/sec ±1.36% (87 runs sampled)
  get-value x 16,391,934 ops/sec ±1.43% (83 runs sampled)
  getobject x 1,200,021 ops/sec ±1.81% (88 runs sampled)
  object-path x 2,788,494 ops/sec ±1.81% (86 runs sampled)

  fastest is get-value (by 623% avg)

# shallow (84 bytes)
  dot-prop x 2,553,558 ops/sec ±0.89% (89 runs sampled)
  get-value x 3,070,159 ops/sec ±0.88% (90 runs sampled)
  getobject x 726,670 ops/sec ±0.81% (86 runs sampled)
  object-path x 922,351 ops/sec ±2.05% (86 runs sampled)

  fastest is get-value (by 219% avg)

```

### Running the benchmarks

Clone this library into a local directory:

```sh
$ git clone https://github.com/jonschlinkert/get-value.git
```

Then install devDependencies and run benchmarks:

```sh
$ npm install && node benchmark
```

## Release history

### v3.0.0

* Improved support for escaping. It's no longer necessary to use backslashes to escape keys.
* Adds `options.default` for defining a default value to return when no value is resolved.
* Adds `options.isValid` to allow the user to check the object after each iteration.
* Adds `options.separator` for customizing character to split on.
* Adds `options.split` for customizing how the object path is split.
* Adds `options.join` for customizing how the object path is joined when iterating over path segments.
* Adds `options.joinChar` for customizing the join character.

## About


Contributing

Pull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).




Running Tests

Running and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:

```sh
$ npm install && npm test
```




Building docs

_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_

To generate the readme, run the following command:

```sh
$ npm install -g verbose/verb#dev verb-generate-readme && verb
```



### Related projects

You might also be interested in these projects:

* [has-any-deep](https://www.npmjs.com/package/has-any-deep): Return true if `key` exists deeply on the given object.  | [homepage](https://github.com/jonschlinkert/has-any-deep ""Return true if `key` exists deeply on the given object. "")
* [has-any](https://www.npmjs.com/package/has-any): Returns true if an object has any of the specified keys. | [homepage](https://github.com/jonschlinkert/has-any ""Returns true if an object has any of the specified keys."")
* [has-value](https://www.npmjs.com/package/has-value): Returns true if a value exists, false if empty. Works with deeply nested values using… [more](https://github.com/jonschlinkert/has-value) | [homepage](https://github.com/jonschlinkert/has-value ""Returns true if a value exists, false if empty. Works with deeply nested values using object paths."")
* [set-value](https://www.npmjs.com/package/set-value): Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. | [homepage](https://github.com/jonschlinkert/set-value ""Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths."")
* [unset-value](https://www.npmjs.com/package/unset-value): Delete nested properties from an object using dot notation. | [homepage](https://github.com/jonschlinkert/unset-value ""Delete nested properties from an object using dot notation."")

### Contributors

| **Commits** | **Contributor** |  
| --- | --- |  
| 87 | [jonschlinkert](https://github.com/jonschlinkert) |  
| 2  | [ianwalter](https://github.com/ianwalter) |  
| 1  | [doowb](https://github.com/doowb) |  

### Author

**Jon Schlinkert**

* [GitHub Profile](https://github.com/jonschlinkert)
* [Twitter Profile](https://twitter.com/jonschlinkert)
* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)

### License

Copyright © 2018, [Jon Schlinkert](https://github.com/jonschlinkert).
Released under the [MIT License](LICENSE).

***

_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on November 17, 2018._","'deep', 'deep-property', 'dot-notation', 'dot-prop', 'get', 'get-deep', 'javascript', 'jonschlinkert', 'key', 'lodash', 'nested', 'node', 'nodejs', 'object', 'object-path', 'paths', 'value'",2014-10-07T20:51:22Z,2023-08-07T14:33:47Z,4,3,243,8,"('jonschlinkert', 87), ('doowb', 2), ('Ian Walter', 2), ('felladrin', 2)",0,0,
vasanthk/js-bits,✨ JavaScript concepts with code ✨,"# JS Bits

JavaScript concepts explained with code.

Community contributions welcome :)

**Translations by community:**

- 中文版 (Chinese): [js-bits-cn](https://github.com/ecmadao/js-bits-cn)

---

### Topics

* [AMD CommonJS and ES6 Modules Usage](js/amd-commonjs-es6modules.js)
* [Array concat() push()](js/array-concat-push.js)
* [Array every() some()](js/array-every-some.js)
* [Array filter() map() reduce()](js/array-filter-map-reduce.js)
* [Array forEach()](js/array-foreach.js)
* [Array pass by val vs reference](js/array-pass-by-val-reference.js)
* [Array reduce()](js/array-reduce.js)
* [Array slice() splice()](js/array-slice-splice.js)
* [Apply & Call function](js/call-apply-function.js)
* [Bind function](js/bind-function.js)
* [Bitwise operators](js/bitwise-operators.js)
* [Closures](js/closures.js)
* [Coercion](js/coercion.js)
* [Conditional function declaration](js/conditional-function-declaration.js)
* [Currying](js/currying.js)
* [DOM](js/dom.js)
* [Event Bubbling](js/event-bubbling.js)
* [Event Delegation](js/event-delegation.js)
* [Event Handling](js/event-handling.js)
* [Factory Functions](js/factory-functions.js)
* [Floating point precision](js/floating-point-precision.js)
* [for-in with hasOwnProperty](js/for-in-with-hasOwnProperty.js)
* [Getters and Setters](js/getters-setters.js)
* [Logical operations with string](js/logical-operations-with-string.js)
* [Method Overloading](js/method-overloading.js)
* [Mixins](js/mixins.js)
* [new keyword](js/new-keyword.js)
* [Number Max Min val](js/number-maxmin-val.js)
* [Object clone](js/object-clone.js)
* [Object constructor](js/object-constructor.js)
* [Object create()](js/object-create.js)
* [Object defineProperty](js/object-defineProperty.js)
* [Object freeze](js/object-freeze.js)
* [Object keys](js/object-keys.js)
* [Object oriented concepts](js/object-oriented.js)
* [Object prototype](js/object-prototype.js)
* [Object references](js/object-reference.js)
* [OLOO pattern](js/oloo-pattern.js)
* [setTimeout inside a loop](js/setTimeout-inside-loop.js)
* [Shim vs Polyfill vs Monkey patch](js/shim-polyfill-monkeypatch.js)
* [String methods](js/string-methods.js)
* [Styling](js/styling.js)
* [this keyword](js/this-keyword.js)
","'javascript', 'javascript-concepts'",2015-04-10T17:44:59Z,2022-03-05T09:01:59Z,19,15,2819,97,"('vasanthk', 263), ('juana pu', 5), ('Vasa', 3), ('cangku', 3), ('Annamalai', 2), ('iammordaty', 2), ('alejorod', 1), ('k-yak', 1), ('zzarcon', 1), ('herbae', 1), ('chukitow', 1), ('pakastin', 1), ('jcdourado', 1), ('shastri9999', 1), ('thamsrang', 1), ('it-ony', 1), ('YozhEzhi', 1), ('ecmadao', 1), ('vasanthk', 1)",13,12,
bqplot/bqplot,Plotting library for IPython/Jupyter notebooks,"# bqplot


  
  
  


[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/bqplot/bqplot/stable?filepath=examples/Index.ipynb)
[![Chat](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/jupyter-widgets/Lobby)

2-D plotting library for Project Jupyter

## Introduction

`bqplot` is a 2-D visualization system for Jupyter, based on the constructs of
the *Grammar of Graphics*.

[![Wealth of Nations](./wealth-of-nations.gif)](https://github.com/bqplot/bqplot/blob/master/examples/Applications/Wealth%20Of%20Nations/Bubble%20Chart.ipynb)

In bqplot, every component of a plot is an interactive widget. This allows the
user to integrate visualizations with other Jupyter interactive widgets to
create integrated GUIs with a few lines of Python code.

## Documentation

You can follow the documentation on https://bqplot.github.io/bqplot

## Trying it online

To try out bqplot interactively in your web browser, just click on the binder
link:

[![Binder](docs/source/binder-logo.svg)](https://mybinder.org/v2/gh/bqplot/bqplot/stable?filepath=examples/Index.ipynb)

### Dependencies

This package depends on the following packages:

- `ipywidgets` (version >=7.0.0, <8.0)
- `traitlets` (version >=4.3.0, <5.0)
- `traittypes` (Version >=0.2.1, <0.3)
- `numpy`
- `pandas`

### Installation

Using pip:

```
$ pip install bqplot
```

Using conda

```
$ conda install -c conda-forge bqplot
```

If you are using JupyterLab <=2:

```
$ jupyter labextension install @jupyter-widgets/jupyterlab-manager bqplot
```

##### Development installation

For a development installation (requires JupyterLab (version >= 4) and yarn):

```
$ git clone https://github.com/bqplot/bqplot.git
$ cd bqplot
$ pip install -e .
$ jupyter nbextension install --py --overwrite --symlink --sys-prefix bqplot
$ jupyter nbextension enable --py --sys-prefix bqplot
```

Note for developers: the `--symlink` argument on Linux or OS X allows one to
modify the JavaScript code in-place. This feature is not available
with Windows.

For the experimental JupyterLab extension, install the Python package, make sure the Jupyter widgets extension is installed, and install the bqplot extension:

```
$ pip install ""ipywidgets>=7.6""
$ jupyter labextension develop . --overwrite
```

Whenever you make a change of the JavaScript code, you will need to rebuild:

```
cd js
jlpm run build
```

Then refreshing the JupyterLab/Jupyter Notebook is enough to reload the changes.

##### Running tests

You can install the dependencies necessary to run the tests with:

```bash
    conda env update -f test-environment.yml
```

And run it with for Python tests:

```bash
    pytest
```

And `cd js` to run the JS tests with:

```bash
jlpm run test
```

Every time you make a change on your tests it's necessary to rebuild the JS side:

```bash
jlpm run build
```

## Examples

### Using the `pyplot` API

[![Pyplot Screenshot](/pyplot.png)](https://github.com/bqplot/bqplot/blob/master/examples/Basic%20Plotting/Pyplot.ipynb)

### Using the `Object Model` API

[![Bqplot Screenshot](/bqplot.png)](https://github.com/bqplot/bqplot/blob/master/examples/Advanced%20Plotting/Advanced%20Plotting.ipynb)

## Install a previous bqplot version (Only for JupyterLab <= 2)

In order to install a previous bqplot version, you need to know which front-end version (JavaScript) matches with the back-end version (Python).

For example, in order to install bqplot `0.11.9`, you need the labextension version `0.4.9`.

```
$ pip install bqplot==0.11.9
$ jupyter labextension install bqplot@0.4.9
```

Versions lookup table:

| `back-end (Python)` | `front-end (JavaScript)` |
|---------------------|--------------------------|
| 0.12.14             | 0.5.14                   |
| 0.12.13             | 0.5.13                   |
| 0.12.12             | 0.5.12                   |
| 0.12.11             | 0.5.11                   |
| 0.12.10             | 0.5.10                   |
| 0.12.9              | 0.5.9                    |
| 0.12.8              | 0.5.8                    |
| 0.12.7              | 0.5.7                    |
| 0.12.6              | 0.5.6                    |
| 0.12.4              | 0.5.4                    |
| 0.12.3              | 0.5.3                    |
| 0.12.2              | 0.5.2                    |
| 0.12.1              | 0.5.1                    |
| 0.12.0              | 0.5.0                    |
| 0.11.9              | 0.4.9                    |
| 0.11.8              | 0.4.8                    |
| 0.11.7              | 0.4.7                    |
| 0.11.6              | 0.4.6                    |
| 0.11.5              | 0.4.5                    |
| 0.11.4              | 0.4.5                    |
| 0.11.3              | 0.4.4                    |
| 0.11.2              | 0.4.3                    |
| 0.11.1              | 0.4.1                    |
| 0.11.0              | 0.4.0                    |

## Development

See our [contributing guidelines](CONTRIBUTING.md) to know how to contribute and set up a development environment.

## License

This software is licensed under the Apache 2.0 license. See the [LICENSE](LICENSE) file
for details.
","'ipython', 'jupyter', 'visualizations'",2015-09-26T04:02:18Z,2024-05-21T14:48:48Z,64,53,3586,101,"('SylvainCorlay', 1007), ('martinRenou', 418), ('Srinivas Kumar Sunkara', 357), ('dmadeka', 349), ('ChakriCherukuri', 333), ('jasongrout', 277), ('rmenegaux', 239), ('maartenbreddels', 144), ('JohanMabille', 112), ('Srinivas Sunkara', 80), ('ibdafna', 65), ('ClaytonPassmore', 45), ('dependabotbot', 44), ('ssunkara1', 43), ('agoose77', 21), ('kaiayoung', 13), ('mwcraig', 10), ('mbektas', 8), ('mariobuikhuizen', 7), ('Havaldar', 7), ('vishalya', 6), ('cclauss', 5), ('kpfleming', 5), ('Dane Freeman', 4), ('marimeireles', 4), ('Alex Yang', 3), ('davidbrochart', 3), ('jtpio', 3), ('mheilman', 3), ('blink1073', 3), ('meeseeksmachine', 2), ('github-actionsbot', 2), ('timgates42', 2), ('astrofrog', 2), ('Nick Madrid', 2), ('bollwyvl', 2), ('mgeier', 2), ('joders', 2), ('MatthieuBizien', 1), ('Michael Hohn', 1), ('nmearl', 1), ('engnadeau', 1), ('madridnick', 1), ('cornhundred', 1), ('pllim', 1), ('ivanov', 1), ('slel', 1), ('timkpaine', 1), ('toddrme2178', 1), ('tylere', 1), ('eric_mende', 1), ('matthewturk', 1), ('mpacer', 1), ('Ivailo Dimov', 1), ('TotalVerb', 1), ('evertoncolling', 1), ('dustinmichels', 1), ('trungleduc', 1), ('kdheepak', 1), ('DentonGentry', 1), ('Chris Knorowski', 1), ('cbadjatya', 1), ('Benjamin Feldman', 1), ('Armin Burgmeier', 1)",26,20,
AllenDowney/ThinkDSP,"Think DSP: Digital Signal Processing in Python, by Allen B. Downey.","# ThinkDSP

*Think DSP* is an introduction to Digital Signal Processing in Python.

[Order *Think DSP* from Amazon.com](http://amzn.to/1naaUCN).

[Download *Think DSP* in PDF](http://greenteapress.com/thinkdsp/thinkdsp.pdf).

[Read *Think DSP* in HTML](http://greenteapress.com/thinkdsp/html/index.html).

The premise of this book (and the other books in the Think X series) is that if you know how to program, you can use that skill to learn other things. I am writing this book because I think the conventional approach to digital signal processing is backward: most books (and the classes that use them) present the material bottom-up, starting with mathematical abstractions like phasors.

With a programming-based approach, I can go top-down, which means I can present the most important ideas right away. By the end of the first chapter, you can decompose a sound into its harmonics, modify the harmonics, and generate new sounds.

Think DSP is a Free Book. It is available under the [Creative Commons Attribution-NonCommercial 3.0 Unported License](https://creativecommons.org/licenses/by-nc/3.0/), which means that you are free to copy, distribute, and modify it, as long as you attribute the work and don't use it for commercial purposes.

Here's a notebook that previews what you will see in Chapter 1:

* [chap01preview.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap01preview.ipynb)

And if you want to see where we are headed, here's a preview of Chapter 10:

* [chap10preview.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap10preview.ipynb)


## Running the code

Most of the code for this book is in Jupyter notebooks.
If you are not familiar with Jupyter, you can run a tutorial by [clicking here](https://jupyter.org/try).  Then select ""Try Classic Notebook"".  It will open a notebook with instructions for getting started.

To run the ThinkDSP code, you have several options:

Option 1: Run the notebooks on Google Colab.

Option 2: Run the notebooks on Binder.

Option 3: Use Conda to install the libraries you need and run the notebooks on your computer.

Option 4: Use poetry to install the libraries you need and run the notebooks on your computer.

The following sections explain these options in detail.

Note: I have heard from a few people who tried to run the code in Spyder.  Apparently there were problems, so I don't recommend it.

### Option 1: Run on Colab

I have recently updated most of the notebooks in this repository so they run on Colab.

You can open any of them by clicking on the links below.  If you want to modify and save any of them, you can use Colab to save a copy in a Google Drive or your own GitHub repo, or on your computer.

* [chap01.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap01.ipynb)
* [chap01soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap01soln.ipynb)
* [chap02.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap02.ipynb)
* [chap02soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap02soln.ipynb)
* [chap03.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap03.ipynb)
* [chap03soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap03soln.ipynb)
* [chap04.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap04.ipynb)
* [chap04soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap04soln.ipynb)
* [chap05.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap05.ipynb)
* [chap05soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap05soln.ipynb)
* [chap06.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap06.ipynb)
* [chap06soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap06soln.ipynb)
* [chap07.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap07.ipynb)
* [chap07soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap07soln.ipynb)
* [chap08.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap08.ipynb)
* [chap08soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap08soln.ipynb)
* [chap09.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap09.ipynb)
* [chap09soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap09soln.ipynb)
* [chap10.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap10.ipynb)
* [chap10soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap10soln.ipynb)
* [chap11.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap11.ipynb)
* [chap11soln.ipynb](https://colab.research.google.com/github/AllenDowney/ThinkDSP/blob/master/code/chap11soln.ipynb)


### Option 2: Run on Binder

To run the code for this book on Binder, press this button:

[![Binder](http://mybinder.org/badge.svg)](http://mybinder.org/repo/AllenDowney/ThinkDSP)

It takes a minute or so to start up, but then you should see the Jupyter home page with a list of files.  Click on `code` to open the folder with the notebooks, then click on one of the notebooks (with the .ipynb extension).


### Option 3: Install Python+Jupyter

First, download the files from this repository.  If you are a Git user, you can run

```
git clone --depth 1 https://github.com/AllenDowney/ThinkDSP.git
```

Otherwise you can [download this Zip file](https://github.com/AllenDowney/ThinkDSP/archive/master.zip) and unzip it.
Either way, you should end up with a directory called `ThinkDSP`.

Now, if you don't already have Jupyter, I highly recommend installing Anaconda, which is a Python distribution that contains everything you need to run the ThinkDSP code.  It is easy to install on Windows, Mac, and Linux, and because it does a
user-level install, it will not interfere with other Python installations.

[Information about installing Anaconda is here](https://www.anaconda.com/distribution/).

If you have the choice of Python 2 or 3, choose Python 3.

There are two ways to get the packages you need for ThinkDSP.  You can install them by hand or create a Conda environment.

To install them by hand run

```
conda install jupyter numpy scipy pandas matplotlib seaborn
```

Or, to create a conda environment, run

```
cd ThinkDSP
conda env create -f environment.yml
conda activate ThinkDSP
```


### Option 4: Use poetry to manage the project on your computer or notebook locally.

First, download the files from this repository.  If you are a Git user, you can run

```
git clone --depth 1 https://github.com/AllenDowney/ThinkDSP.git
```

Then, assuming you have [poetry](https://python-poetry.org) installed on your machine, run

```
cd ThinkDSP
poetry install
```

to install the libraries you need in a virtual environment.  To activate the environment, run

```
poetry shell
```

Then you can run Jupyter.


## Run Jupyter 

To start Jupyter, run:

```
jupyter notebook
```

Jupyter should launch your default browser or open a tab in an existing browser window.
If not, the Jupyter server should print a URL you can use.  For example, when I launch Jupyter, I get

```
~/ThinkComplexity2$ jupyter notebook
[I 10:03:20.115 NotebookApp] Serving notebooks from local directory: /home/downey/ThinkDSP
[I 10:03:20.115 NotebookApp] 0 active kernels
[I 10:03:20.115 NotebookApp] The Jupyter Notebook is running at: http://localhost:8888/
[I 10:03:20.115 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
```

In this case, the URL is [http://localhost:8888](http://localhost:8888).
When you start your server, you might get a different URL.
Whatever it is, if you paste it into a browser, you should see a home page with a list of directories.

Click on `code` to open the folder with the notebooks, then click on one of the notebooks (with the .ipynb extension).

Select the cell with the import statements and press ""Shift-Enter"" to run the code in the cell.
If it works and you get no error messages, **you are all set**.

If you get error messages about missing packages, you can install the packages you need using your
package manager, or install Anaconda.

If you run into problems with these instructions, let me know and I will make corrections.  Good luck!



## Freesound

Special thanks to Freesound (http://freesound.org), which is the source of many of the
sound samples I use in this book, and to the Freesound users who
uploaded those sounds.  I include some of their wave files in
the GitHub repository for this book, using the original file
names, so it should be easy to find their sources.

Unfortunately, most Freesound users don't make their real names
available, so I can only thank them using their user names.  Samples
used in this book were contributed by Freesound users: iluppai,
wcfl10, thirsk, docquesting, kleeb, landup, zippi1, themusicalnomad,
bcjordan, rockwehrmann, marchascon7, jcveliz.  Thank you all!

Here are links to the sources:

http://www.freesound.org/people/iluppai/sounds/100475/

http://www.freesound.org/people/wcfl10/sounds/105977/

http://www.freesound.org/people/Thirsk/sounds/120994/

http://www.freesound.org/people/ciccarelli/sounds/132736/

http://www.freesound.org/people/Kleeb/sounds/180960/

http://www.freesound.org/people/zippi1/sounds/18871/

http://www.freesound.org/people/themusicalnomad/sounds/253887/

http://www.freesound.org/people/bcjordan/sounds/28042/

http://www.freesound.org/people/rockwehrmann/sounds/72475/

http://www.freesound.org/people/marcgascon7/sounds/87778/

http://www.freesound.org/people/jcveliz/sounds/92002/
",,2013-08-13T18:37:02Z,2024-05-10T18:36:11Z,26,24,3812,236,"('AllenDowney', 353), ('Allen Downey', 4), ('piti118', 4), ('boltomli', 3), ('Roland Siegbert', 3), ('asqui', 2), ('JimiHFord', 2), ('moncho-S', 2), ('marksweiss', 2), ('vskobov', 1), ('usmanayubsh', 1), ('struck89', 1), ('tvaisanen', 1), ('isomap', 1), ('hsm207', 1), ('bobm123', 1), ('aryabhatta000', 1), ('bryant1410', 1), ('mattypiper', 1), ('josuablejeru', 1), ('ilkayisik', 1), ('peterse2', 1), ('Deep145757', 1), ('kant', 1), ('odewahn', 1), ('alistairwalsh', 1)",17,17,
bazelbuild/bazel,"a fast, scalable, multi-language and extensible build system","# [Bazel](https://bazel.build)

*{Fast, Correct} - Choose two*

Build and test software of any size, quickly and reliably.

* **Speed up your builds and tests**:
  Bazel rebuilds only what is necessary.
  With advanced local and distributed caching, optimized dependency analysis and
  parallel execution, you get fast and incremental builds.

* **One tool, multiple languages**: Build and test Java, C++, Android, iOS, Go,
  and a wide variety of other language platforms. Bazel runs on Windows, macOS,
  and Linux.

* **Scalable**: Bazel helps you scale your organization, codebase, and
  continuous integration solution. It handles codebases of any size, in multiple
  repositories or a huge monorepo.

* **Extensible to your needs**: Easily add support for new languages and
  platforms with Bazel's familiar extension language. Share and re-use language
  rules written by the growing Bazel community.

## Getting Started

  * [Install Bazel](https://bazel.build/install)
  * [Get started with Bazel](https://bazel.build/start)
  * Follow our tutorials:

    - [Build C++](https://bazel.build/tutorials/cpp)
    - [Build Java](https://bazel.build/tutorials/java)
    - [Android](https://bazel.build/tutorials/android-app)
    - [iOS](https://github.com/bazelbuild/rules_apple/blob/master/doc/tutorials/ios-app.md)

## Documentation

  * [Bazel command line](https://bazel.build/docs/user-manual)
  * [Rule reference](https://bazel.build/reference/be/overview)
  * [Use the query command](https://bazel.build/reference/query)
  * [Extend Bazel](https://bazel.build/rules/concepts)
  * [Write tests](https://bazel.build/reference/test-encyclopedia)
  * [Roadmap](https://bazel.build/community/roadmaps)
  * [Who is using Bazel?](https://bazel.build/community/users)

## Reporting a Vulnerability

To report a security issue, please email security@bazel.build with a description
of the issue, the steps you took to create the issue, affected versions, and, if
known, mitigations for the issue. Our vulnerability management team will respond
within 3 working days of your email. If the issue is confirmed as a
vulnerability, we will open a Security Advisory. This project follows a 90 day
disclosure timeline.

## Contributing to Bazel

See [CONTRIBUTING.md](CONTRIBUTING.md)

[![Build status](https://badge.buildkite.com/1fd282f8ad98c3fb10758a821e5313576356709dd7d11e9618.svg?status=master)](https://buildkite.com/bazel/bazel-bazel)
","'bazel', 'build', 'build-system', 'correct', 'fast', 'multi-language', 'scalable', 'test'",2014-06-12T16:00:38Z,2024-06-18T14:43:57Z,1194,286,22616,606,"('lberki', 1367), ('katre', 1339), ('janakdr', 1301), ('cushon', 1208), ('ulfjack', 1184), ('laszlocsomor', 882), ('meteorcloudy', 837), ('laurentlb', 802), ('damienmg', 779), ('justinhorvitz', 759), ('aehlig', 750), ('comius', 733), ('gregestren', 688), ('c-parsons', 662), ('philwo', 642), ('haxorz', 632), ('meisterT', 608), ('brandjon', 565), ('hlopko', 541), ('oquenchil', 499), ('hvadehra', 494), ('michajlo', 493), ('kchodorow', 473), ('jin', 419), ('joeleba', 415), ('fmeum', 409), ('aoeui', 396), ('dslomov', 394), ('calpeyser', 370), ('tjgq', 362), ('aj-michael', 351), ('iirina', 349), ('anakanemison', 341), ('adonovan', 328), ('buchgr', 326), ('coeuvre', 320), ('fweikert', 314), ('ericfelly', 295), ('Wyverald', 295), ('tomlu', 289), ('benjaminp', 252), ('ahumesky', 248), ('juliexxia', 239), ('jmmv', 238), ('larsrc-google', 234), ('alexjski', 232), ('googlewalt', 221), ('cgrushko', 216), ('aiuto', 195), ('cvcal', 186), ('hanwen', 180), ('kevin1e100', 178), ('keith', 177), ('vladmos', 158), ('tetromino', 149), ('scentini', 144), ('davidzchen', 141), ('aragos', 139), ('susinmotion', 129), ('sergiocampama', 126), ('corbinrsmith-work', 126), ('lfpino', 124), ('djasper', 124), ('kotlaja', 124), ('c-mita', 121), ('donaldchai', 120), ('mai93', 119), ('shreyax', 117), ('dkelmer', 114), ('rickeylev', 111), ('michaeledgar', 109), ('buildbreaker2021', 108), ('wilwell', 105), ('hermione521', 104), ('Dmitry Shevchenko', 103), ('asteinb', 101), ('Yannic', 99), ('mstaib', 93), ('Rumou Duan', 91), ('yuyue730', 88), ('apelle03', 87), ('zhengwei143', 85), ('olaola', 81), ('keertk', 80), ('fare', 79), ('tfarina', 74), ('mjhalupka', 73), ('rupertks', 72), ('illicitonion', 72), ('irengrig', 72), ('Michael Staib', 69), ('allevato', 69), ('SalmaSamy', 67), ('dbabkin', 65), ('fanzier', 63), ('Dave MacLachlan', 63), ('cnsun', 62), ('kush-c', 61), ('MarkDacek', 60), ('cpovirk', 58), ('rongjiecomputer', 55), ('asmundak', 50), ('r4nt', 49), ('bsilver8192', 47), ('twigg', 46), ('stepancheg', 45), ('sgjesse', 45), ('emilyguo1', 44), ('dmaclach', 43), ('Ola Rozenfeld', 40), ('xingao267', 39), ('mikelalcon', 37), ('tualeron', 37), ('ted-xie', 37), ('bchang', 36), ('George Gensure', 36), ('Bencodes', 34), ('steren', 32), ('davido', 32), ('ishikhman', 28), ('sluongng', 28), ('EdSchouten', 28), ('philomathing', 27), ('jhfield', 26), ('Pavank1992', 25), ('Zhaoqing Xu', 25), ('communikit', 24), ('limdor', 23), ('ttsugriy', 23), ('philsc', 23), ('ekuefler', 22), ('mthvedt', 22), ('brentleyjones', 22), ('Googler', 21), ('klaasb', 21), ('Quarz0', 21), ('kendalllaneee', 21), ('kkress', 21), ('loburm', 20), ('Peter Mounce', 20), ('thii', 20), ('trybka', 19), ('brendandouglas', 18), ('rbeasley', 18), ('jmillikin-stripe', 18), ('akirabaruah', 17), ('cpsauer', 16), ('jart', 16), ('kluever', 15), ('timpeut', 15), ('blossommojekwu', 15), ('matvore', 14), ('floriographygoth', 14), ('thomasvl', 13), ('davidsantiago', 13), ('dfabulich', 13), ('alexeagle', 13), ('AlessandroPatti', 12), ('dmivankov', 12), ('werkt', 12), ('jmillikin', 12), ('glukasiknuro', 12), ('yilei', 12), ('BalestraPatrick', 12), ('hhclam', 11), ('DavidGoldman', 10), ('dmaclach', 10), ('tkoeppe', 10), ('eaftan', 10), ('mostynb', 9), ('benley', 9), ('AustinSchuh', 9), ('Androbin', 9), ('Dave Abrahams', 9), ('dependabotbot', 9), ('bbarenblat', 9), ('tylerwilliams', 9), ('saraadams', 9), ('Erik Abair', 9), ('exoson', 9), ('edbaunton', 9), ('kastiglione', 9), ('erenon', 8), ('colincross', 8), ('iancha1992', 8), ('WarkahScott', 8), ('aldersondrive', 8), ('excitoon', 8), ('petemounce', 8), ('mattem', 8), ('pzembrod', 8), ('agluszak', 8), ('andyscott', 7), ('seandc', 7), ('mmikitka', 7), ('dimo414', 7), ('segiddins', 7), ('PiotrSikora', 7), ('durin42', 7), ('Kamil Jiwa', 7), ('Janak Ramakrishnan', 7), ('dx404', 7), ('Ed Schouten', 7), ('TimvdLippe', 6), ('Todd Jeffreys', 6), ('vpanta', 6), ('karlgray', 6), ('zshmeis', 6), ('schroederc', 6), ('erain', 6), ('ivucica', 6), ('quval', 6), ('moroten', 6), ('endobson', 6), ('Googler', 6), ('gjasny', 6), ('Alessandro Patti', 6), ('brian-peloton', 6), ('Anastasios Kakalis', 6), ('asuffield', 6), ('hauserx', 6), ('kamalmarhubi', 6), ('Dominator008', 6), ('mzhaom', 6), ('ob', 6), ('rjobredeaux3', 6), ('nikola-sh', 5), ('rduan', 5), ('jasonobrien', 5), ('dmishe', 5), ('dawasser', 5), ('linzhp', 5), ('tomdegoede', 5), ('tetsuok', 5), ('abergmeier-dsfishlabs', 5), ('aherrmann', 5), ('ajsinclair', 5), ('borkaehw', 5), ('Chengnian Sun', 5), ('chancila', 5), ('Googler', 5), ('spxtr', 5), ('scele', 5), ('mmorearty', 5), ('nkoroste', 5), ('Stephen Twigg', 5), ('niyas-sait', 5), ('zombiezen', 4), ('Steven Dee', 4), ('sushain97', 4), ('ThomasCJY', 4), ('timothyg-stripe', 4), ('ulrfa', 4), ('ehaugh', 4), ('mai12', 4), ('michelleirvine', 4), ('wtroberts', 4), ('achew22', 4), ('davidstanke', 4), ('johnynek', 4), ('mauriciogg', 4), ('3405691582', 4), ('adam-azarchs', 4), ('aaliddell', 4), ('ArielleA', 4), ('artem-zinnatullin', 4), ('clintharrison', 4), ('dshahbaz', 4), ('Eddie Aftandilian', 4), ('ehkloaj', 4), ('psy01212', 4), ('HackAttack', 4), ('JackSullivan', 4), ('mikelikespie', 4), ('olekw', 4), ('gregmagolan', 4), ('George Gensure', 4), ('EricCousineau-TRI', 4), ('Nicolas Lopez', 3), ('nresare', 3), ('Passw', 3), ('pefoley2', 3), ('Philipp Schrader', 3), ('PikachuHyA', 3), ('psigen', 3), ('brown', 3), ('roblg', 3), ('drigz', 3), ('rsalvador', 3), ('compnerd', 3), ('Reflexe', 3), ('Siddhartha Bagaria', 3), ('torgil', 3), ('tmc', 3), ('Vinh Tran', 3), ('yugui', 3), ('andyrinne12', 3), ('ckennelly', 3), ('dapengzhang0', 3), ('jheaff1', 3), ('kshyanashree', 3), ('something_vague', 3), ('sxlijin', 3), ('wjywbs', 3), ('Éamonn McManus', 3), ('Flamefire', 3), ('abergmeier', 3), ('andrewkatson', 3), ('amishra-u', 3), ('aranguyen', 3), ('cameron-martin', 3), ('chiragramani', 3), ('cvrebert', 3), ('clnperez', 3), ('dflems', 3), ('dpursehouse', 3), ('Denys Kurylenko', 3), ('cha5on', 3), ('guw', 3), ('hevrard', 3), ('vmax', 3), ('Kernald', 3), ('FantasqueX', 3), ('m3rcuriel', 3), ('kun-lu20', 3), ('kevingessner', 3), ('jbduncan', 3), ('jlaxson', 3), ('lencioni', 3), ('jmhodges', 3), ('jgavris', 3), ('jacobvoytko', 3), ('gyias', 3), ('j3parker', 3), ('ittaiz', 3), ('Igal Tabachnik', 3), ('Rohit Saboo', 2), ('Roger Hu', 2), ('Robin Nabel', 2), ('Richard Xia', 2), ('Richard Smith', 2), ('Rgis Dcamps', 2), ('Rahul Butani', 2), ('Philipp Wollermann', 2), ('Petros Eskinder', 2), ('Romain Chossart', 2), ('Ruixin Bao', 2), ('Sam Guymer', 2), ('Seth Greenstein', 2), ('Siggi Simonarson', 2), ('Simon Bjorklen', 2), ('Simon Horlick', 2), ('Simon Stewart', 2), ('bcutler', 2), ('Marc Redemske', 2), ('Marc Zych', 2), ('MarkusTeufelberger', 2), ('Marwan Tammam', 2), ('Matt Stark', 2), ('Matt Vollmer', 2), ('Menny Even Danan', 2), ('Michael Eisel', 2), ('Michael Shields', 2), ('Misha Brukman', 2), ('Nathan Herring', 2), ('Nick Biryulin', 2), ('Oleg Tsarev', 2), ('Pascal Muetschard', 2), ('Patrick Niklaus', 2), ('Paul Cody Johnston', 2), ('Pedro Kaj Kjellerup Nacht', 2), ('Peter Lobsinger', 2), ('ibiryukov', 2), ('iirina', 2), ('jacobsa', 2), ('jparachoniak', 2), ('liuhuahang', 2), ('mpn', 2), ('neerajen', 2), ('nglevin', 2), ('nicoaragon', 2), ('nicolov', 2), ('rmalik', 2), ('ron-stripe', 2), ('ronshapiro', 2), ('spishak', 2), ('thesayyn', 2), ('tomrenn', 2), ('yuzhy8701', 2), ('Stephan Wolski', 2), ('Takeo Sawada', 2), ('Ted Kaplan', 2), ('Thomas Broyer', 2), ('Thomas Zayouna', 2), ('Timothe Peignier', 2), ('Timothy Klim', 2), ('Trustin Lee', 2), ('Tyler Rockwood', 2), ('Uri Baghin', 2), ('Ventzilla', 2), ('Vertexwahn', 2), ('Warren Turkal', 2), ('Xiangquan Xiao', 2), ('Yen-Chi Chen', 2), ('Yesudeep Mangalapilly', 2), ('arun.sampathkumar', 2), ('aryeh', 2), ('Christian Edward Gruber', 2), ('Christopher Rydell', 2), ('Dan Halperin', 2), ('Danny Wolf', 2), ('David Flemström', 2), ('David Herman', 2), ('David Mankin', 2), ('David Neil', 2), ('David Sanderson', 2), ('Derek Perez', 2), ('Dionna Glaze', 2), ('Dmitry Ivankov', 2), ('Dmitry Petrashko', 2), ('Doug Rabson', 2), ('Ed Schouten', 2), ('Eduardo Colaco', 2), ('Elliotte Rusty Harold', 2), ('Jan', 2), ('Albert Lloveras', 2), ('Alex Eagle', 2), ('Alex Kirchhoff', 2), ('Alex Vandiver', 2), ('AlexTereshenkov', 2), ('Alexander Chung', 2), ('Alexander Ilyin', 2), ('Ali Ijaz Sheikh', 2), ('Andreas Hippler', 2), ('Andrew Jorgensen', 2), ('Artem V. Navrotskiy', 2), ('Asaf Flescher', 2), ('Austin Anderson', 2), ('Benjamin Romano', 2), ('Brandon Jacklyn', 2), ('Carl Mastrangelo', 2), ('Chaoren Lin', 2), ('Chris Heisterkamp', 2), ('Jasper Siepkes', 2), ('Jay Conrod', 2), ('Jeff Grafton', 2), ('Jeff Lavallee', 2), ('Jeremy Volkman', 2), ('Jon Shea', 2), ('Jonathan Gerrish', 2), ('Jonathan Springer', 2), ('Justin Santa Barbara', 2), ('Kai Xu', 2), ('Keith Cartledge', 2), ('Keith Moyer', 2), ('Ken Micklas', 2), ('Kevin Hogeland', 2), ('Kseniia Vasilchuk', 2), ('Liangliang He', 2), ('Marc Redemske', 2), ('Ezekiel Warren', 2), ('Fahrzin Hemmati', 2), ('Farid Zakaria', 2), ('George Chiramel', 2), ('George Gensure', 2), ('George Kalpakas', 2), ('Gibson Fahnestock', 2), ('Gregg Donovan', 2), ('Guillaume Maudoux', 2), ('Gunther Noack', 2), ('Hadrien Chauvin', 2), ('Hao Yuan', 2), ('Harmandeep Kaur', 2), ('Harsh Vardhan', 2), ('Honnix', 2), ('Ikko Ashimine', 2), ('Ira Shikhman', 2), ('Jakob Buchgraber', 2), ('Samuel Freilich', 1), ('Samer Masterson', 1), ('Sam Shadwell', 1), ('Sam Rawlins', 1), ('Sam McCall', 1), ('Salty Egg', 1), ('Sahin Yort', 1), ('Sagar Pathare', 1), ('Régis Décamps', 1), ('Ryota', 1), ('Ryan Schmidt', 1), ('Maxwell Elliott', 1), ('Samuel Husso', 1), ('Sascha Moecker', 1), ('Scott Bennett', 1), ('Scott Minor', 1), ('Scott Robertson', 1), ('Sebastian Olsson', 1), ('Sergey Balabanov', 1), ('Sergey Tyurin', 1), ('Sergio Rodriguez Orellana', 1), ('Severin Strobl', 1), ('Sevki Hasirci', 1), ('Rasrack', 1), ('Ray Loyzaga', 1), ('Red Daly', 1), ('Reker', 1), ('Renaud Paquay', 1), ('Ricardo Delfin', 1), ('Ricky Pai', 1), ('Rifqi Mulya Fahmi', 1), ('Rishabh Chakrabarti', 1), ('Robbert Van Ginkel', 1), ('Robert Sayre', 1), ('Robin Tweedie', 1), ('Rodrigo Queiro', 1), ('Rohan Joyce', 1), ('Roland Huß', 1), ('Roller, David', 1), ('Romain Chossart', 1), ('Ruben Das', 1), ('Rubens Farias', 1), ('Rui Chen', 1), ('Russ Cox', 1), ('Ryan Pavlik', 1), ('Shachar Anchelovich', 1), ('Steve Barrau', 1), ('Steve Siano', 1), ('Steve Vermeulen', 1), ('Steven Dee', 1), ('Steven Dee', 1), ('Steven Johnson', 1), ('Steven Parkes', 1), ('Suvanjan Mukherjee', 1), ('Sven Tiffe', 1), ('Svilen Kanev', 1), ('Takeo Sawada', 1), ('Takeshi Hagikura', 1), ('Takuto Ikuta', 1), ('Tanvi Jagtap', 1), ('Tanya Bouman', 1), ('Tao Wang', 1), ('Taylor Barrella', 1), ('Taymon A. Beal', 1), ('Ted', 1), ('Ted Kaplan', 1), ('Ted Logan', 1), ('Ted Pudlik', 1), ('Shay Weiss', 1), ('Shaygan Hooshyari', 1), ('Shimin Guo', 1), ('Shin Yamamoto', 1), ('Shinichiro Hamaji', 1), ('Shlomi Shemesh', 1), ('Shuai Zhang', 1), ('Siddhartha Bagaria', 1), ('Siddhartha Bagaria', 1), ('Siddhesh Bhupendra Kuakde', 1), ('Simon Mavi Stewart', 1), ('Snow Pettersen', 1), ('Solal Pirelli', 1), ('Spencer Putt', 1), ('Stanimir Mladenov', 1), ('Steeve Morin', 1), ('Steeve Morin', 1), ('Stefan Sauer', 1), ('Stefano Baghino', 1), ('Stein Eldar Johnsen', 1), ('Stephen Amar', 1), ('Stephen Thorne', 1), ('Muescha', 1), ('Nachum Goldstein', 1), ('Naresh', 1), ('Nate Bosch', 1), ('Nathan (Blaise) Bruer', 1), ('Nathaniel Brough', 1), ('Neeraj Gupta', 1), ('Neil', 1), ('Nelson Elhage', 1), ('NelsonLi0701', 1), ('Nicholas Junge', 1), ('Nicholas Lativy', 1), ('NicholasGorski', 1), ('Nick Glorioso', 1), ('Niek Peeters', 1), ('Nikhil Kalige', 1), ('Nikhil Marathe', 1), ('Nikhita Raghunath', 1), ('Niko Wenselowski', 1), ('Nikolaus Wittenstein', 1), ('Nishidha Panpaliya', 1), ('Nitesh Anandan', 1), ('Meng Zhang', 1), ('Michael Beardsworth', 1), ('Michael Chinen', 1), ('Michael Hirshleifer', 1), ('Michael Klemm', 1), ('Michael Krasnyk', 1), ('Michael McLoughlin', 1), ('Michael P. Nitowski', 1), ('Michael Stapelberg', 1), ('Michael Vorburger', 1), ('Michal Majcherski', 1), ('Michal Rydlo', 1), ('Mike Fourie', 1), ('Mike Fourie', 1), ('Mike Kruskal', 1), ('Mikhail Balabin', 1), ('Mikhail Mazurskiy', 1), ('Ming-Chuan Lin', 1), ('Misha Seltzer', 1), ('Moritz Krger', 1), ('Mostyn Bramley-Moore', 1), ('Mouad Benchchaoui', 1), ('Noah Misch', 1), ('Pedro Alvarez', 1), ('Pedro Kiefer', 1), ('Pedro Liberal Fernandez', 1), ('Per Halvor Tryggeseth', 1), ('Peter', 1), ('Peter Foley', 1), ('Peter Kasting', 1), ('Peter Laird', 1), ('Peter Schmitt', 1), ('Phil Bordelon', 1), ('Philip Patsch', 1), ('Philipp Stephani', 1), ('Phoenix Meadowlark', 1), ('Pranjal Agrawal', 1), ('Pweaver (Paul Weaver)', 1), ('Qais Patankar', 1), ('Rabi Shanker Guha', 1), ('Rahul Malik', 1), ('Rai', 1), ('Rajeshwar Reddy T', 1), ('Raphael Badin', 1), ('Rasmus Lund', 1), ('Oleg Ponomarev', 1), ('Oleh Stolyar', 1), ('Oliver Lee', 1), ('Olivier Chafik', 1), ('Olle Lundberg', 1), ('Omar Zuniga', 1), ('Onath Claridge', 1), ('Or Shachar', 1), ('Or Shachar', 1), ('Orion Hodson', 1), ('Oscar Garzon', 1), ('Pascal Terjan', 1), ('Patrice Duroux', 1), ('Patrick Donelan', 1), ('Paul Bethe', 1), ('Paul Draper', 1), ('Paul Gross', 1), ('Paul Gschwendtner', 1), ('Paul Janzen', 1), ('Paul Roberts', 1), ('Paul Tarjan', 1), ('Pawe? Zuzelski', 1), ('Tetsuo Kiso', 1), ('ilovezfs', 1), ('is03wlei', 1), ('ittaiz', 1), ('jgehw', 1), ('jmtatsch', 1), ('johnjbarton', 1), ('jonrose-dev', 1), ('jonshea', 1), ('jsharpe', 1), ('juanchoviedo', 1), ('justhecuke', 1), ('kabakaev', 1), ('katre', 1), ('kekxv', 1), ('lihu', 1), ('liubang', 1), ('lripoche', 1), ('m', 1), ('marcohu', 1), ('martinboehme', 1), ('matloob', 1), ('menny', 1), ('davideleoni90', 1), ('detailyang', 1), ('dgreiman', 1), ('dhananjayn', 1), ('dhmemi', 1), ('dhmemi', 1), ('divanorama', 1), ('dlr', 1), ('dorranh', 1), ('eareilg', 1), ('ecngtng', 1), ('fangism', 1), ('flamecoals', 1), ('floriographygoth', 1), ('frazze-jobb', 1), ('garyschulte', 1), ('gkgoat1', 1), ('gkorlam', 1), ('goodspark', 1), ('hannometer', 1), ('hollste', 1), ('homuler', 1), ('mgeisler', 1), ('sergey', 1), ('sheu', 1), ('shingt', 1), ('silvergasp', 1), ('skainswo', 1), ('steple', 1), ('steve-the-bayesian', 1), ('stiffe', 1), ('stoozy', 1), ('susinmotion', 1), ('sventiffe', 1), ('szakmary', 1), ('tatiana', 1), ('tbaing', 1), ('timm-gs', 1), ('treuherz', 1), ('utsav-dbx', 1), ('vardaro', 1), ('vectoralpha', 1), ('wisechengyi', 1), ('wylazy', 1), ('yoav-steinberg', 1), ('microjixl', 1), ('mohamadk', 1), ('namrata-ibm', 1), ('natans', 1), ('nathyong', 1), ('nickreid', 1), ('odisseus', 1), ('oquenchil', 1), ('oquenchil', 1), ('ouguoc2-stripe', 1), ('panzhongxian', 1), ('perwestling', 1), ('petros', 1), ('rachcatch', 1), ('redwrasse', 1), ('richardwa', 1), ('robincaloudis', 1), ('robinnabel', 1), ('rustberry', 1), ('samhowes', 1), ('samuela', 1), ('scentini', 1), ('Ty Book', 1), ('Tyler True', 1), ('U-GOOGLE\\pcloudy', 1), ('UebelAndre', 1), ('Ulf Adams', 1), ('Umesh Yadav', 1), ('V Vn Ngha', 1), ('Vaidas Pilkauskas', 1), ('Vasilios Pantazopoulos', 1), ('Vega Paithankar', 1), ('Vertexwahn', 1), ('Viktor Kustov', 1), ('Vlad Losev', 1), ('Vladimir Pouzanov', 1), ('Vladimir Rutsky', 1), ('Vladimir Tagakov', 1), ('Vladimir Zaytsev', 1), ('Vo Van Nghia', 1), ('Volker Braun', 1), ('Wade Carpenter', 1), ('Waleed Khan', 1), ('Walt Panfil', 1), ('Thomas', 1), ('Thomas Carmet', 1), ('Thomas Chen', 1), ('Thomas Weischuh', 1), ('Thulio Ferraz Assis', 1), ('Tianyu Geng', 1), ('Tim Neumann', 1), ('Tim Zaman', 1), ('Tobi', 1), ('Tobias Werth', 1), ('Tom Cnops', 1), ('Tom Hennigan', 1), ('Tom Payne', 1), ('Tom Prince', 1), ('Tomas Volf', 1), ('Tomasz Pasternak', 1), ('Tomasz Strejczek', 1), ('Tony Hsu', 1), ('Tony Liang', 1), ('Topher', 1), ('Travis Clarke', 1), ('Trevor Summers Smith', 1), ('Wayou Liu', 1), ('Zackary Lowery', 1), ('Zain Asgar', 1), ('Zaven Muradyan', 1), ('Zhexuan Yang', 1), ('Zhong Wang', 1), ('zqzzq', 1), ('a7g4', 1), ('aldersondrive', 1), ('aman', 1), ('andrewpaekgoogle', 1), ('andyrinne12', 1), ('aolivas', 1), ('arunkumar9t2', 1), ('bnczk', 1), ('bromano', 1), ('bttk', 1), ('calpeyser', 1), ('chrisn', 1), ('ckiffel', 1), ('clyang82', 1), ('crydell-ericsson', 1), ('dannysullivan', 1), ('Wenyu Zhang', 1), ('William A Rowe Jr', 1), ('William Chargin', 1), ('William Entriken', 1), ('William Muir', 1), ('Wren Turkal', 1), ('Xiaoyi Shi', 1), ('XindaH', 1), ('Yang Yang', 1), ('Yi Cheng', 1), ('Yi Cheng', 1), ('Yihong Wang', 1), ('Yilei (Dolee) Yang', 1), ('Yuannan Cai', 1), ('Yuchen Dai', 1), ('Yunchi Luo', 1), ('Yury Evtikhov', 1), ('Yuta Saito', 1), ('Yuval Kaplan', 1), ('Yves Junqueira', 1), ('Zach Pomerantz', 1), ('Zack Lalanne', 1), ('??', 1), ('Daniel McCarney', 1), ('Daniel Trebbien', 1), ('Darius', 1), ('Dave Dopson', 1), ('Dave Nicponski', 1), ('Dave Rolsky', 1), ('Dave hughes', 1), ('David', 1), ('David Cummings', 1), ('David Haxton', 1), ('David Jarvis', 1), ('David McNett', 1), ('David Newgas', 1), ('David Ostrovsky', 1), ('David Sanderson', 1), ('Delwin9999', 1), ('Derek Argueta', 1), ('Derek Lawless', 1), ('Derek Perez', 1), ('Devin Jeanpierre', 1), ('Dillon Cower', 1), ('Dino Wernli', 1), ('Chirag Ramani', 1), ('Chloe Calvarin', 1), ('Chongyu Zhu', 1), ('Chris Beach', 1), ('Chris Clearwater', 1), ('Chris Eason', 1), ('Chris Fredrickson', 1), ('Chris Gray', 1), ('Chris Parsons', 1), ('Christian Scott', 1), ('Christian Verkerk', 1), ('Christoph Siedentop', 1), ('Christopher Rydell', 1), ('Claudio Bley', 1), ('Clay McClure', 1), ('Colin Marc', 1), (""Conall O'Brien"", 1), ('Cristin Donoso', 1), ('Dan Bamikiya', 1), ('Daniel Grunwald', 1), ('Daniel KT', 1), ('Daniel Martn', 1), ('Dmitri G', 1), ('Eric Ye', 1), ('Erik Gilling', 1), ('Ethan Rublee', 1), ('Ethan Steinberg', 1), ('Evan Martin', 1), ('FaBrand', 1), ('Fabian Brandstetter', 1), ('Fahrzin Hemmati', 1), ('Fan Wu', 1), ('Fangrui Song', 1), ('Farhim Ferdous', 1), ('Fedor Korotkov', 1), ('Felix Ehrenpfort', 1), ('Finn Ball', 1), ('Fred Sauer', 1), ('Fredrik Medley', 1), ('Fredrikhms', 1), ('Gabriel Staples', 1), ('Garrett Holmstrom', 1), ('Garrett Hopper', 1), ('Gaspare Vitta', 1), ('Gautam Korlam', 1), ('Dmitry Frenkel', 1), ('Dmitry Komanov', 1), ('DocQuantum', 1), ('Doug Greiman', 1), ('Douglas Dawson', 1), ('Douglas Parker', 1), ('Douglas Thor', 1), ('Drew Gassaway', 1), ('Drew Macrae', 1), ('Ed Baunton', 1), ('Eitan Adler', 1), ('Emil Waijers', 1), ('Emmanuel Goh', 1), ('Emmanuel Jay', 1), ('Emran BatmanGhelich', 1), ('Eran Shalom', 1), ('Eric Dobson', 1), ('Eric Klein', 1), ('Eric Paniagua', 1), ('Eric Song', 1), ('Eric Wendelin', 1), ('Eric Wendelin', 1), ('Alexander Golovlev', 1), ('Alexandre Boulgakov', 1), ('Alina Sbirlea', 1), ('Allen Lavoie', 1), ('Allen Porter', 1), ('Alois Klink', 1), ('Alpha', 1), ('Amanda L Martin', 1), ('Amet Umerov', 1), ('Anders Sundman (asum)', 1), ('Andreas Fuchs', 1), ('Andreas Herrmann', 1), ('Andrew Johnson', 1), ('Andrew Klotz', 1), ('Andrzej Guszak', 1), ('Andy Hamon', 1), ('Andy Reitz', 1), ('Ankit Agarwal', 1), ('Ankush Goyal', 1), ('Anthony Bellissimo', 1), ('Anthony Pratti', 1), ('Anthony Ter-Saakov', 1), ('????', 1), ('Abhishek Kumar', 1), ('Adam Cozzette', 1), ('Adam Gross', 1), ('Adam Lavin', 1), ('Adam Michael', 1), ('Adam Price', 1), ('Adam Singer', 1), ('Adam Singer', 1), ('Adam Wolf', 1), ('Adrian Imboden', 1), ('Alan', 1), ('Alan Falloon', 1), ('Alex', 1), ('Alex Beggs', 1), ('Alex Eagle', 1), ('Alex Gaynor', 1), ('Alex Ryan', 1), ('Alex Scott', 1), ('Alex Sharoff', 1), ('Alex Thompson', 1), ('Alex Torok', 1), ('Antoine Eiche', 1), ('Bin Lu', 1), ('Bo Zhang', 1), ('Bo Zhang', 1), ('Bohdan Vanieiev', 1), ('Boleyn Su', 1), ('Brad Corso', 1), ('Bradley Burns', 1), ('Brandon Duffany', 1), ('Brandon Lico', 1), ('Branton Horsley', 1), ('Brentley Jones', 1), ('Brian Richardson', 1), ('Brian Silverman', 1), ('Brian Topping', 1), ('Cameron Mulhern', 1), ('Carl Mastrangelo', 1), ('Carlos Eduardo Seo', 1), ('Chad Miller', 1), ('Changming Sun', 1), ('Chaoren Lin', 1), ('Charles-Francois Natali', 1), ('Chi Wawng', 1), ('Antoine Musso', 1), ('Antonio Cortes Perez', 1), ('April Schleck', 1), ('Ara Nguyen', 1), ('Arek Sredzki', 1), ('Arshabh Kumar Agarwal', 1), ('Artem Pelenitsyn', 1), ('Artem V. Navrotskiy', 1), ('Artem Zinnatullin', 1), ('Artur Dryomov', 1), ('Asim Shankar', 1), ('Ast-x64', 1), ('Attila Ol?h', 1), ('Attila Olh', 1), ('Auke Schrijnen', 1), ('Beebs', 1), ('Ben Creech', 1), ('Ben Diuguid', 1), ('Benjamin Peterson', 1), ('Benjamin Sigonneau', 1), ('Benson Muite', 1), ('Bernhard M. Wiedemann', 1), ('Geoff Maddox', 1), ('Josh Pieper', 1), ('Josh Rosen', 1), ('Josh Smith', 1), ('Joshua Haberman', 1), ('Jov', 1), ('Julie', 1), ('Justin Buchanan', 1), ('Justin Buchanan', 1), ('Justin Y Wei', 1), ('Justus Tumacder', 1), ('Kai Zhang', 1), ('Kaiqin Chen', 1), ('Kamil Jiwa', 1), ('Keefer Taylor', 1), ('Keith Stanger', 1), ('Kelly Campbell', 1), ('Kelsey Z', 1), ('Kerrick Staley', 1), ('Kevin Lin', 1), ('Kevin Lubick', 1), ('Kevin Watts', 1), ('Kiril Videlov', 1), ('John Basila', 1), ('John Hinnegan', 1), ('John Laxson', 1), ('John Maguire', 1), ('John Shimek', 1), ('Jon Landis', 1), ('Jon Parise', 1), ('Jon Stewart', 1), ('Jonas Scharpf', 1), ('Jonathan Beverly', 1), ('Jonathan Block', 1), ('Jonathan Cohen', 1), ('Jonathan Perry', 1), ('Jonathan Schear', 1), ('Jonathon Belotti', 1), ('Jordan', 1), ('Jordan Mele', 1), ('Joseph Lisee', 1), ('Joseph Tilahun', 1), ('Josh Chorlton', 1), ('Josh Enders', 1), ('Josh Goldberg', 1), ('Kirill Zabelin', 1), ('Marcin Maliszkiewicz', 1), ('Marek uppa', 1), ('Marin Baron', 1), ('Mark Butcher', 1), ('Mark Elliot', 1), ('Mark Karpov', 1), ('Mark Nevill', 1), ('Mark Zeren', 1), ('Markus Lachinger', 1), ('Martin Probst', 1), ('Masoud Koleini', 1), ('Mathieu Boespflug', 1), ('Mathieu Olivari', 1), ('Matt Brown', 1), ('Matt Clarkson', 1), ('Matt Davis', 1), ('Matt Mukerjee', 1), ('Matt Passell', 1), ('Matt Smith', 1), ('Matthieu MOREL', 1), ('Max Liu', 1), ('Maxim Matyunin', 1), ('Kiron', 1), ('Konstantin Erman', 1), ('Krishna Ersson', 1), ('Krzysztof Naglik', 1), ('Kyle Lippincott', 1), ('Kyle Moffett', 1), ('Kyle Teske', 1), ('Laurenz Altenmller', 1), ('Leo', 1), ('Li-Wen Hsu', 1), ('Links', 1), ('Linuxer Wang', 1), ('Liu Liu', 1), ('Luc Bertrand', 1), ('Luis Fernando Pino Duque', 1), ('Lukasz Tekieli', 1), ('Mai Hussien', 1), ('Maksim', 1), ('Malte Poll', 1), ('Mansheng Yang', 1), ('Mantas Sakalauskas', 1), ('Marc Zych', 1), ('Gustav Larsson', 1), ('Gustav Westling', 1), ('Gustavo Storti Salibi', 1), ('Halil Sener', 1), ('Halil Sener', 1), ('Hannes Kufler', 1), ('Helen Altshuler', 1), ('Henk van der Laan', 1), ('Henry Sudhof', 1), ('Holger Freyther', 1), ('Hui-Zhi', 1), ('Iain McGinniss', 1), ('Iain Merrick', 1), ('Ian Cottrell', 1), ('Ian McGinnis', 1), ('Igor Nazarenko', 1), ('Ikko Eltociear Ashimine', 1), ('Ilan Keshet', 1), ('Ilya Biryukov', 1), ('Irina Iancu', 1), ('Irina Iancu', 1), ('Isaac Torres', 1), ('Geoffrey Martin-Noble', 1), ('George Gensure', 1), ('George Prekas', 1), ('Gerhard Pretorius', 1), ('Gert van Dijk', 1), ('GinFungYJF', 1), ('Googler', 1), ('Googler', 1), ('Googler', 1), ('Googler', 1), ('Googler', 1), ('Googler', 1), ('Googler', 1), ('Gowroji Sunil', 1), ('Graham Jenson', 1), ('Greg Magolan', 1), ('Greg Roodt', 1), ('Greg Steuck', 1), ('Gregory Clark', 1), ('Guillaume Bouchard', 1), ('Guro Bokum', 1), ('Gursewak', 1), ('Ittai Zeidman', 1), ('Jason Tan', 1), ('Jason Young', 1), ('Jasper', 1), ('Javier Dehesa', 1), ('Jay Bazuzi', 1), ('Jay Vercellone', 1), ('Jeff Palm', 1), ('Jeremy Apthorp', 1), ('Jeremy Nimmer', 1), ('Jeremy Wall', 1), ('Jerry Marino', 1), ('Jesse Chan', 1), ('Jiawen (Kevin) Chen', 1), ('Jiawen Chen', 1), ('Jie Yu', 1), ('Jimm chja20', 1), ('Jiri Dank', 1), ('Joe Harrison', 1), ('Joel Jeske', 1), ('Joel Williamson', 1), ('Johan Euphrosine', 1), ('Johannes Abt', 1), ('Ity Kaul', 1), ('Ivan Boci?', 1), ('Ivan Golub', 1), ('Jack Dai', 1), ('Jacob Parker', 1), ('Jakub Bujny', 1), ('James Broadhead', 1), ('James Judd', 1), ('James Ma', 1), ('James Wright', 1), ('James deBoer', 1), ('Jamie', 1), ('Jamie Snape', 1), ('Jan Keromnes', 1), ('Jan Voung', 1), ('Janak Ramakrishnan', 1), ('Jannis Andrija Schnitzer', 1), ('Jared Neil', 1), ('Jason Furmanek', 1), ('Jason Hoch', 1), ('Jason Lunz', 1), ('Jason Mobarak', 1)",716,0,
confluentinc/confluent-kafka-python,Confluent's Kafka Python Client,"Confluent's Python Client for Apache KafkaTM
=======================================================

**confluent-kafka-python** provides a high-level Producer, Consumer and AdminClient compatible with all
[Apache KafkaTM](http://kafka.apache.org/) brokers >= v0.8, [Confluent Cloud](https://www.confluent.io/confluent-cloud/)
and [Confluent Platform](https://www.confluent.io/product/compare/). The client is:

- **Reliable** - It's a wrapper around [librdkafka](https://github.com/edenhill/librdkafka) (provided automatically via binary wheels) which is widely deployed in a diverse set of production scenarios. It's tested using [the same set of system tests](https://github.com/confluentinc/confluent-kafka-python/tree/master/src/confluent_kafka/kafkatest) as the Java client [and more](https://github.com/confluentinc/confluent-kafka-python/tree/master/tests). It's supported by [Confluent](https://confluent.io).

- **Performant** - Performance is a key design consideration. Maximum throughput is on par with the Java client for larger message sizes (where the overhead of the Python interpreter has less impact). Latency is on par with the Java client.

- **Future proof** - Confluent, founded by the
creators of Kafka, is building a [streaming platform](https://www.confluent.io/product/compare/)
with Apache Kafka at its core. It's high priority for us that client features keep
pace with core Apache Kafka and components of the [Confluent Platform](https://www.confluent.io/product/compare/).


## Usage

For a step-by-step guide on using the client see [Getting Started with Apache Kafka and Python](https://developer.confluent.io/get-started/python/).

Aditional examples can be found in the [examples](examples) directory or the [confluentinc/examples](https://github.com/confluentinc/examples/tree/master/clients/cloud/python) github repo, which include demonstration of:
- Exactly once data processing using the transactional API.
- Integration with asyncio.
- (De)serializing Protobuf, JSON, and Avro data with Confluent Schema Registry integration.
- [Confluent Cloud](https://www.confluent.io/confluent-cloud/) configuration.

Also refer to the [API documentation](http://docs.confluent.io/current/clients/confluent-kafka-python/index.html).

Finally, the [tests](tests) are useful as a reference for example usage.

### Basic Producer Example

```python
from confluent_kafka import Producer

p = Producer({'bootstrap.servers': 'mybroker1,mybroker2'})

def delivery_report(err, msg):
    """""" Called once for each message produced to indicate delivery result.
        Triggered by poll() or flush(). """"""
    if err is not None:
        print('Message delivery failed: {}'.format(err))
    else:
        print('Message delivered to {} [{}]'.format(msg.topic(), msg.partition()))

for data in some_data_source:
    # Trigger any available delivery report callbacks from previous produce() calls
    p.poll(0)

    # Asynchronously produce a message. The delivery report callback will
    # be triggered from the call to poll() above, or flush() below, when the
    # message has been successfully delivered or failed permanently.
    p.produce('mytopic', data.encode('utf-8'), callback=delivery_report)

# Wait for any outstanding messages to be delivered and delivery report
# callbacks to be triggered.
p.flush()
```

For a discussion on the poll based producer API, refer to the
[Integrating Apache Kafka With Python Asyncio Web Applications](https://www.confluent.io/blog/kafka-python-asyncio-integration/)
blog post.


### Basic Consumer Example

```python
from confluent_kafka import Consumer

c = Consumer({
    'bootstrap.servers': 'mybroker',
    'group.id': 'mygroup',
    'auto.offset.reset': 'earliest'
})

c.subscribe(['mytopic'])

while True:
    msg = c.poll(1.0)

    if msg is None:
        continue
    if msg.error():
        print(""Consumer error: {}"".format(msg.error()))
        continue

    print('Received message: {}'.format(msg.value().decode('utf-8')))

c.close()
```


### Basic AdminClient Example

Create topics:

```python
from confluent_kafka.admin import AdminClient, NewTopic

a = AdminClient({'bootstrap.servers': 'mybroker'})

new_topics = [NewTopic(topic, num_partitions=3, replication_factor=1) for topic in [""topic1"", ""topic2""]]
# Note: In a multi-cluster production scenario, it is more typical to use a replication_factor of 3 for durability.

# Call create_topics to asynchronously create topics. A dict
# of  is returned.
fs = a.create_topics(new_topics)

# Wait for each operation to finish.
for topic, f in fs.items():
    try:
        f.result()  # The result itself is None
        print(""Topic {} created"".format(topic))
    except Exception as e:
        print(""Failed to create topic {}: {}"".format(topic, e))
```


## Thread Safety

The `Producer`, `Consumer` and `AdminClient` are all thread safe.


## Install

**Install self-contained binary wheels**

    $ pip install confluent-kafka

**NOTE:** The pre-built Linux wheels do NOT contain SASL Kerberos/GSSAPI support.
          If you need SASL Kerberos/GSSAPI support you must install librdkafka and
          its dependencies using the repositories below and then build
          confluent-kafka using the instructions in the
          ""Install from source"" section below.

**Install from source**

For source install, see the *Install from source* section in [INSTALL.md](INSTALL.md).


## Broker Compatibility

The Python client (as well as the underlying C library librdkafka) supports
all broker versions &gt;= 0.8.
But due to the nature of the Kafka protocol in broker versions 0.8 and 0.9 it
is not safe for a client to assume what protocol version is actually supported
by the broker, thus you will need to hint the Python client what protocol
version it may use. This is done through two configuration settings:

 * `broker.version.fallback=YOUR_BROKER_VERSION` (default 0.9.0.1)
 * `api.version.request=true|false` (default true)

When using a Kafka 0.10 broker or later you don't need to do anything
(`api.version.request=true` is the default).
If you use Kafka broker 0.9 or 0.8 you must set
`api.version.request=false` and set
`broker.version.fallback` to your broker version,
e.g `broker.version.fallback=0.9.0.1`.

More info here:
https://github.com/edenhill/librdkafka/wiki/Broker-version-compatibility


## SSL certificates

If you're connecting to a Kafka cluster through SSL you will need to configure
the client with `'security.protocol': 'SSL'` (or `'SASL_SSL'` if SASL
authentication is used).

The client will use CA certificates to verify the broker's certificate.
The embedded OpenSSL library will look for CA certificates in `/usr/lib/ssl/certs/`
or `/usr/lib/ssl/cacert.pem`. CA certificates are typically provided by the
Linux distribution's `ca-certificates` package which needs to be installed
through `apt`, `yum`, et.al.

If your system stores CA certificates in another location you will need to
configure the client with `'ssl.ca.location': '/path/to/cacert.pem'`.

Alternatively, the CA certificates can be provided by the [certifi](https://pypi.org/project/certifi/)
Python package. To use certifi, add an `import certifi` line and configure the
client's CA location with `'ssl.ca.location': certifi.where()`.


## License

[Apache License v2.0](http://www.apache.org/licenses/LICENSE-2.0)

KAFKA is a registered trademark of The Apache Software Foundation and has been licensed for use
by confluent-kafka-python. confluent-kafka-python has no affiliation with and is not endorsed by
The Apache Software Foundation.


## Developer Notes

Instructions on building and testing confluent-kafka-python can be found [here](DEVELOPER.md).


## Confluent Cloud

For a step-by-step guide on using the Python client with Confluent Cloud see [Getting Started with Apache Kafka and Python](https://developer.confluent.io/get-started/python/) on [Confluent Developer](https://developer.confluent.io/). 
","'confluent', 'kafka-client', 'kafka-protocol', 'librdkafka', 'python-client'",2016-04-14T07:40:41Z,2024-06-18T12:26:50Z,111,99,3699,337,"('edenhill', 392), ('rnpridgeon', 107), ('pranavrth', 31), ('mhowlett', 30), ('emasab', 25), ('Matt Howlett', 24), ('Ryan P', 19), ('jliunyu', 17), ('ewencp', 15), ('kwilcox', 13), ('johnistan', 12), ('choogeboom', 9), ('hrchu', 9), ('slominskir', 9), ('hqin', 8), ('mahajanadhitya', 7), ('cchristous', 6), ('ctrochalakis', 6), ('ConfluentJenkins', 4), ('ConfluentTools', 4), ('maxzheng', 4), ('alexlod', 4), ('anchitj', 3), ('ffissore', 3), ('qix', 3), ('milindl', 3), ('roopahc', 2), ('ssikdar1', 2), ('rayokota', 2), ('lowercase24', 2), ('norwood', 2), ('joel-hamill', 2), ('elismaga', 2), ('xli1996', 2), ('Alex Ayars', 2), ('Colin Deasy', 2), ('97nitt', 2), ('fpietka', 2), ('gracechensd', 2), ('rmoff', 2), ('dfdeshom', 2), ('t0mk', 2), ('yuangezhizao', 1), ('tburmeister', 1), ('stevenylai', 1), ('stevebang', 1), ('florean', 1), ('patrickviet', 1), ('soxofaan', 1), ('stanislavkozlovski', 1), ('Simon Wahlgren', 1), ('aranaea', 1), ('RyanSkraba', 1), ('rmax', 1), ('r0x0d', 1), ('peteryin21', 1), ('RickTalken', 1), ('Reza Jelveh', 1), ('ybyzek', 1), ('vladz-sternum', 1), ('stephan-hof', 1), ('sebastianneubauer', 1), ('PrasanthV454', 1), ('peixinchen', 1), ('mieciu', 1), ('messense', 1), ('jkao97', 1), ('ferozed', 1), ('dylrich', 1), ('dpfeif', 1), ('co-dh', 1), ('prism4time', 1), ('vkroz', 1), ('tbsaunde', 1), ('blown302', 1), ('garrett92895', 1), ('fkaufer', 1), ('filippovitale', 1), ('DLT1412', 1), ('dangra', 1), ('casperlehmann', 1), ('BBM89', 1), ('overstre', 1), ('Bowrna', 1), ('Manicben', 1), ('venthur', 1), ('aviramha', 1), ('mitsuhiko', 1), ('andreyferriyan', 1), ('gandalf013', 1), ('abij', 1), ('anikiforovopensource', 1), ('Akhil Nair', 1), ('Mostafa Razavi', 1), ('Michael G. Noll', 1), ('mrocklin', 1), ('mkmoisen', 1), ('woodlee', 1), ('chaconpiza', 1), ('lyoung-confluent', 1), ('lpsinger', 1), ('ldom', 1), ('LasseGravesen', 1), ('kcorman0', 1), ('kevswanberg', 1), ('jayvdb', 1), ('jkuhnashconfluent', 1), ('jeffwidman', 1), ('hachikuji', 1), ('jairhenrique', 1), ('Ivan Prodaiko', 1)",69,62,
frakbot/JumpingBeans,"A Span-based library to make your text jump like Mexican beans. Oh, and the ""...""s in Hangouts.","![JumpingBeans icon](app/src/main/res/mipmap-xxhdpi/ic_launcher.png)

JumpingBeans [![Download](https://api.bintray.com/packages/frakbot/maven/JumpingBeans/images/download.svg) ](https://bintray.com/frakbot/maven/JumpingBeans/_latestVersion)
============

The **JumpingBeans** make your test jump to the eye. Literally!

## What are the JumpingBeans
Have you ever used Hangouts? If not, do it and then come back here. Go. Go, I said!

Good. With that under our belt, we can be confident you've seen at least once those fancy,
nice jumping suspension dots that Hangouts uses to indicate that someone is typing, or some
other kind of ongoing activity (e.g., connecting to a video hangout).

Well, since there's no official naming for them, and since they remind me of the jumping
Mexican beans, the name for a library that emulates their behaviour has come to be exactly
that: **JumpingBeans**.

## See them in action
Please come closer, ladies and gentlemen! Here you have, for your own amusement, the
amazing JumpingBeans:

![Jumping dots](art/jumpingdots.gif)

![Animated first word](art/jumpingword.gif)

## Make your project jump around
In order to use JumpingBeans in your own project, you can use the wonderous remote dependencies capabilities
that Gradle offers you (if you're not using Gradle and Android Studio/IntelliJ offer you, I'm sorry for you.)
(No, I mean it, I'm really sorry for you!)

Just make sure you have `jcenter()` in your root `build.gradle`:

```groovy
allprojects {
    repositories {
        jcenter()
    }
}
```

And then just add the JumpingBeans dependency to your module's `build.gradle`:

```groovy
dependencies {
    compile 'net.frakbot:jumpingbeans:1.3.0'
}
```

## What you can do
The library supports two main operation modes: **appending three jumping dots**,
Hangouts-style, or making any arbitrary subsection of a CharSequence jump, either as a
wave or as a single block.

### Append jumping dots
This method takes the trailing `...` (or appends them, if the given TextView's text
doesn't end in three dots), and makes them jump like it was -the 70s- Hangouts.

The defaults emulate the Hangouts L&F as closely as possible, but you can easily change
the animation properties to suit your needs.

### Make text jumping
This method takes the specified subsection a the TextView text and animates it as to
make it jump.

## Usage
Just create a `JumpingBeans` by using its `Builder` and call the method you want:

```java
// Append jumping dots
final TextView textView1 = (TextView) findViewById(R.id.jumping_text_1);
jumpingBeans1 = JumpingBeans.with(textView1)
        .appendJumpingDots()
        .build();
        
// Make the first word's letters jump
final TextView textView2 = (TextView) findViewById(R.id.jumping_text_2);
jumpingBeans2 = JumpingBeans.with(textView2)
        .makeTextJump(0, textView2.getText().toString().indexOf(' '))
        .setIsWave(false)
        .setLoopDuration(1000)  // ms
        .build();
```

### Customising the jumpin' beans
Just act on the `Builder`. Don't want the dots to jump in a wave? Call 
`setIsWave(false)`. Don't like the default loop duration? `setLoopDuration(int)`
is here to help. Fancy different per-char delays in waves? Well, ya know that
`setWavePerCharDelay(int)` is the one you want. Maybe you wanted to have a
shorter pause between jumping cycles? BAM, `setAnimatedDutyCycle(float)` and
you're all set.

### Being a responsible citizen
Since Spans were not really designed to be animated, there's some trickery
going on behind the scenes to make this happen. You needn't be concerned with it,
but **make sure you call the `stopJumping()` method** on your `JumpingBeans` object
whenever you stop using the TextView (it's detaching from the view tree, or the
container Activity or Fragment is going in paused state, ...).

This allows a deeper cleanup than what the `JumpingBeans` library is trying to
perform if you forget to. **Don't leave stuff lying around if you can!**

## Also, a few caveats
Please note that you:

 * **Must not** try to change a jumping beans text in a textview before calling
   `stopJumping()` as to avoid unnecessary invalidation calls;
   the JumpingBeans class cannot know when this happens and will keep
   animating the textview (well, try to, anyway), wasting resources
 * **Must not** try to use a jumping beans text in another view; it will not
   animate. Just create another jumping beans animation for each new
   view
 * **Must not** use more than one JumpingBeans instance on a single TextView, as
   the first cleanup operation called on any of these JumpingBeans will also cleanup
   all other JumpingBeans' stuff. This is most likely not what you want to happen in
   some cases.
 * **Should not** use JumpingBeans on large chunks of text. Ideally this should
   be done on small views with just a few words. We've strived to make it as inexpensive
   as possible to use JumpingBeans but invalidating and possibly relayouting a large
   TextView can be pretty expensive.
 * **Must not** use JumpingBeans in conjunction with code and attributes that strip away
   spans or change them. This includes the
   [deeply flawed](https://code.google.com/p/android/issues/detail?id=67509) `textAllCaps`.
   
## Demo app
You can find the `JumpingBeans` demo app on the [Google Play Store][1].

[![JumpingBeans Demo on Google Play Store](http://developer.android.com/images/brand/en_generic_rgb_wo_60.png)][1]
   
## License
This library was written by **Sebastiano Poggi** and released by Frakbot under the
Apache 2.0 License. 

Please see the [NOTICE](/NOTICE) file for details.

[1]: http://play.google.com/store/apps/details?id=net.frakbot.jumpingbeans.demo
",,2014-07-15T08:34:16Z,2018-12-06T05:35:40Z,2,2,1112,40,"('rock3r', 59), ('passy', 1)",1,1,
acme/net-amazon-s3,Use the Amazon S3 - Simple Storage Service from Perl,"NAME
    Net::Amazon::S3 - Use the Amazon S3 - Simple Storage Service

SYNOPSIS
      use Net::Amazon::S3;
      my $aws_access_key_id     = 'fill me in';
      my $aws_secret_access_key = 'fill me in too';

      my $s3 = Net::Amazon::S3->new(
          {   aws_access_key_id     => $aws_access_key_id,
              aws_secret_access_key => $aws_secret_access_key,
              retry                 => 1,
          }
      );

      # a bucket is a globally-unique directory
      # list all buckets that i own
      my $response = $s3->buckets;
      foreach my $bucket ( @{ $response->{buckets} } ) {
          print ""You have a bucket: "" . $bucket->bucket . ""\n"";
      }

      # create a new bucket
      my $bucketname = 'acmes_photo_backups';
      my $bucket = $s3->add_bucket( { bucket => $bucketname } )
          or die $s3->err . "": "" . $s3->errstr;

      # or use an existing bucket
      $bucket = $s3->bucket($bucketname);

      # store a file in the bucket
      $bucket->add_key_filename( '1.JPG', 'DSC06256.JPG',
          { content_type => 'image/jpeg', },
      ) or die $s3->err . "": "" . $s3->errstr;

      # store a value in the bucket
      $bucket->add_key( 'reminder.txt', 'this is where my photos are backed up' )
          or die $s3->err . "": "" . $s3->errstr;

      # list files in the bucket
      $response = $bucket->list_all
          or die $s3->err . "": "" . $s3->errstr;
      foreach my $key ( @{ $response->{keys} } ) {
          my $key_name = $key->{key};
          my $key_size = $key->{size};
          print ""Bucket contains key '$key_name' of size $key_size\n"";
      }

      # fetch file from the bucket
      $response = $bucket->get_key_filename( '1.JPG', 'GET', 'backup.jpg' )
          or die $s3->err . "": "" . $s3->errstr;

      # fetch value from the bucket
      $response = $bucket->get_key('reminder.txt')
          or die $s3->err . "": "" . $s3->errstr;
      print ""reminder.txt:\n"";
      print ""  content length: "" . $response->{content_length} . ""\n"";
      print ""    content type: "" . $response->{content_type} . ""\n"";
      print ""            etag: "" . $response->{content_type} . ""\n"";
      print ""         content: "" . $response->{value} . ""\n"";

      # delete keys
      $bucket->delete_key('reminder.txt') or die $s3->err . "": "" . $s3->errstr;
      $bucket->delete_key('1.JPG')        or die $s3->err . "": "" . $s3->errstr;

      # and finally delete the bucket
      $bucket->delete_bucket or die $s3->err . "": "" . $s3->errstr;

DESCRIPTION
    This module provides a Perlish interface to Amazon S3. From the
    developer blurb: ""Amazon S3 is storage for the Internet. It is designed
    to make web-scale computing easier for developers. Amazon S3 provides a
    simple web services interface that can be used to store and retrieve any
    amount of data, at any time, from anywhere on the web. It gives any
    developer access to the same highly scalable, reliable, fast,
    inexpensive data storage infrastructure that Amazon uses to run its own
    global network of web sites. The service aims to maximize benefits of
    scale and to pass those benefits on to developers"".

    To find out more about S3, please visit: http://s3.amazonaws.com/

    To use this module you will need to sign up to Amazon Web Services and
    provide an ""Access Key ID"" and "" Secret Access Key"". If you use this
    module, you will incurr costs as specified by Amazon. Please check the
    costs. If you use this module with your Access Key ID and Secret Access
    Key you must be responsible for these costs.

    I highly recommend reading all about S3, but in a nutshell data is
    stored in values. Values are referenced by keys, and keys are stored in
    buckets. Bucket names are global.

    Note: This is the legacy interface, please check out
    Net::Amazon::S3::Client instead.

    Development of this code happens here:
    http://github.com/acme/net-amazon-s3

METHODS
  new
    Create a new S3 client object. Takes some arguments:

    aws_access_key_id
        Use your Access Key ID as the value of the AWSAccessKeyId parameter
        in requests you send to Amazon Web Services (when required). Your
        Access Key ID identifies you as the party responsible for the
        request.

    aws_secret_access_key
        Since your Access Key ID is not encrypted in requests to AWS, it
        could be discovered and used by anyone. Services that are not free
        require you to provide additional information, a request signature,
        to verify that a request containing your unique Access Key ID could
        only have come from you.

        DO NOT INCLUDE THIS IN SCRIPTS OR APPLICATIONS YOU DISTRIBUTE.
        YOU'LL BE SORRY

    secure
        Set this to 1 if you want to use SSL-encrypted connections when
        talking to S3. Defaults to 0.

    timeout
        How many seconds should your script wait before bailing on a request
        to S3? Defaults to 30.

    retry
        If this library should retry upon errors. This option is
        recommended. This uses exponential backoff with retries after 1, 2,
        4, 8, 16, 32 seconds, as recommended by Amazon. Defaults to off.

  buckets
    Returns undef on error, else hashref of results

  add_bucket
    Takes a hashref:

    bucket
        The name of the bucket you want to add

    acl_short (optional)
        See the set_acl subroutine for documenation on the acl_short options

    location_constraint (option)
        Sets the location constraint of the new bucket. If left unspecified,
        the default S3 datacenter location will be used. Otherwise, you can
        set it to 'EU' for a European data center - note that costs are
        different.

    Returns 0 on failure, Net::Amazon::S3::Bucket object on success

  bucket BUCKET
    Takes a scalar argument, the name of the bucket you're creating

    Returns an (unverified) bucket object from an account. Does no network
    access.

  delete_bucket
    Takes either a Net::Amazon::S3::Bucket object or a hashref containing

    bucket
        The name of the bucket to remove

    Returns false (and fails) if the bucket isn't empty.

    Returns true if the bucket is successfully deleted.

  list_bucket
    List all keys in this bucket.

    Takes a hashref of arguments:

    MANDATORY

    bucket
        The name of the bucket you want to list keys on

    OPTIONAL

    prefix
        Restricts the response to only contain results that begin with the
        specified prefix. If you omit this optional argument, the value of
        prefix for your query will be the empty string. In other words, the
        results will be not be restricted by prefix.

    delimiter
        If this optional, Unicode string parameter is included with your
        request, then keys that contain the same string between the prefix
        and the first occurrence of the delimiter will be rolled up into a
        single result element in the CommonPrefixes collection. These
        rolled-up keys are not returned elsewhere in the response. For
        example, with prefix=""USA/"" and delimiter=""/"", the matching keys
        ""USA/Oregon/Salem"" and ""USA/Oregon/Portland"" would be summarized in
        the response as a single ""USA/Oregon"" element in the CommonPrefixes
        collection. If an otherwise matching key does not contain the
        delimiter after the prefix, it appears in the Contents collection.

        Each element in the CommonPrefixes collection counts as one against
        the MaxKeys limit. The rolled-up keys represented by each
        CommonPrefixes element do not. If the Delimiter parameter is not
        present in your request, keys in the result set will not be
        rolled-up and neither the CommonPrefixes collection nor the
        NextMarker element will be present in the response.

    max-keys
        This optional argument limits the number of results returned in
        response to your query. Amazon S3 will return no more than this
        number of results, but possibly less. Even if max-keys is not
        specified, Amazon S3 will limit the number of results in the
        response. Check the IsTruncated flag to see if your results are
        incomplete. If so, use the Marker parameter to request the next page
        of results. For the purpose of counting max-keys, a 'result' is
        either a key in the 'Contents' collection, or a delimited prefix in
        the 'CommonPrefixes' collection. So for delimiter requests, max-keys
        limits the total number of list results, not just the number of
        keys.

    marker
        This optional parameter enables pagination of large result sets.
        ""marker"" specifies where in the result set to resume listing. It
        restricts the response to only contain results that occur
        alphabetically after the value of marker. To retrieve the next page
        of results, use the last key from the current page of results as the
        marker in your next request.

        See also ""next_marker"", below.

        If ""marker"" is omitted,the first page of results is returned.

    Returns undef on error and a hashref of data on success:

    The hashref looks like this:

      {
            bucket          => $bucket_name,
            prefix          => $bucket_prefix, 
            common_prefixes => [$prefix1,$prefix2,...]
            marker          => $bucket_marker, 
            next_marker     => $bucket_next_available_marker,
            max_keys        => $bucket_max_keys,
            is_truncated    => $bucket_is_truncated_boolean
            keys            => [$key1,$key2,...]
       }

    Explanation of bits of that:

    common_prefixes
        If list_bucket was requested with a delimiter, common_prefixes will
        contain a list of prefixes matching that delimiter. Drill down into
        these prefixes by making another request with the prefix parameter.

    is_truncated
        B flag that indicates whether or not all results of your query were
        returned in this response. If your results were truncated, you can
        make a follow-up paginated request using the Marker parameter to
        retrieve the rest of the results.

    next_marker
        A convenience element, useful when paginating with delimiters. The
        value of ""next_marker"", if present, is the largest (alphabetically)
        of all key names and all CommonPrefixes prefixes in the response. If
        the ""is_truncated"" flag is set, request the next page of results by
        setting ""marker"" to the value of ""next_marker"". This element is only
        present in the response if the ""delimiter"" parameter was sent with
        the request.

    Each key is a hashref that looks like this:

         {
            key           => $key,
            last_modified => $last_mod_date,
            etag          => $etag, # An MD5 sum of the stored content.
            size          => $size, # Bytes
            storage_class => $storage_class # Doc?
            owner_id      => $owner_id,
            owner_displayname => $owner_name
        }

  list_bucket_all
    List all keys in this bucket without having to worry about 'marker'.
    This is a convenience method, but may make multiple requests to S3 under
    the hood.

    Takes the same arguments as list_bucket.

  add_key
    DEPRECATED. DO NOT USE

  get_key
    DEPRECATED. DO NOT USE

  head_key
    DEPRECATED. DO NOT USE

  delete_key
    DEPRECATED. DO NOT USE

LICENSE
    This module contains code modified from Amazon that contains the
    following notice:

      #  This software code is made available ""AS IS"" without warranties of any
      #  kind.  You may copy, display, modify and redistribute the software
      #  code either by itself or as incorporated into your code; provided that
      #  you do not remove any proprietary notices.  Your use of this software
      #  code is at your own risk and you waive any claim against Amazon
      #  Digital Services, Inc. or its affiliates with respect to your use of
      #  this software code. (c) 2006 Amazon Digital Services, Inc. or its
      #  affiliates.

TESTING
    Testing S3 is a tricky thing. Amazon wants to charge you a bit of money
    each time you use their service. And yes, testing counts as using.
    Because of this, the application's test suite skips anything approaching
    a real test unless you set these three environment variables:

    AMAZON_S3_EXPENSIVE_TESTS
        Doesn't matter what you set it to. Just has to be set

    AWS_ACCESS_KEY_ID
        Your AWS access key

    AWS_ACCESS_KEY_SECRET
        Your AWS sekkr1t passkey. Be forewarned that setting this
        environment variable on a shared system might leak that information
        to another user. Be careful.

AUTHOR
    Leon Brocard  and unknown Amazon Digital Services
    programmers.

    Brad Fitzpatrick  - return values, Bucket object

SEE ALSO
    Net::Amazon::S3::Bucket

",,2008-11-24T08:37:45Z,2010-03-30T14:27:01Z,1,1,24,3,"('acme', 24)",0,0,
uluru/abtest,CakePHP A/B Test Plugin,"CakePHP A/B Test Plugin
================

CakePHP A/B Test Plugin makes your A/B test easy-configurable and trackable for Google Analytics on both 1.3 and 2.x of CakePHP.

Introduction
------

Once you configure some testcases, 50% goes A case and another one goes B until the case's cookie expires. Do not forget to call 'getAnalyticsCustomVar' between your Google Analytics tracking codes, so that you can combine the case and the result (conversion) on your Analytics management console, see the better one.

The plugin provides AbTestComponent and AbTestHelper. If you just want to test view, like 2-pattern banners to see which one is clicked more, use AbTestHelper to split by cases on a View. Or if you want to test some cases over some actions by somehow, use AbTestComponent to split some conditions in action. Ofcourse you can use both same time.

Requirements
------

The master branch has the following requirements:

* CakePHP 2.2.0 or greater.
* PHP 5.3.0 or greater.

The 1.3 branch is for CakePHP 1.3.x.

Installation
------

* Clone or copy the files into `app/Plugin/AbTest`
* Make sure the plugin is loaded in `app/Config/bootstrap.php` by calling `CakePlugin::load('AbTest');`
* Include the Cookie component in you `AppController.php`:
    * `public $components = array('Cookie');`
* Include the AbTestComponent where you want to use:
    * `public $components = array('AbTest.AbTest');`
* Include the AbTestHelper where you want to use:
    * `public $helpers = array('AbTest.AbTest');`

Configuration
------

Ensure to write below configs in `app/Config/bootstrap.php` or `app/Config/core.php`.

```php

/**
 * A/B test config for AbTest plugin.
 * AbTest.AbTest component and helper read this configs.
 */
Configure::write(
    'AbTestConfig',
    array(
        /**
         * testCases
         *
         * customValueIndex should have a number 1~5 unique by each over all cases.
         * (An error will be raised if it's not unique.)
         * Once you start some cases, it's better to leave those cases not to overwrite.
         * @link http://analytics-ja.blogspot.jp/2010/01/custom-variables-overview.html
         */
        'testCases' => array(
            'Sample1' => array(
                'customValueIndex' => 1,
                'values' => array('pattern1', 'pattern2')
            ),
            'Sample2' => array(
                'customValueIndex' => 2,
                'values' => array('pattern3', 'pattern4')
            ),
            'Sample3' => array(
                'customValueIndex' => 3,
                'values' => array('pattern5', 'pattern6')
            ),
            'Sample4' => array(
                'customValueIndex' => 4,
                'values' => array('pattern7', 'pattern8')
            ),
            'Sample5' => array(
                'customValueIndex' => 5,
                'values' => array('pattern9', 'pattern10')
            ),
        ),
        /**
         * expires
         *
         * A/B test expires setting for AbTest plugin.
         * The split case lasts until its cookie expires set below.
         */
        'expires' => 60 * 60,
    )
);


```

Usage
------

Sample usage of AbTestComponent:

```php

if ($this->AbTest->start(""Sample1"") == ""pattern1"") {
    $testcase = ""I'm the A case!"";
} else {
    $testcase = ""I'm the B case!"";
}

```

Sample usage of AbTestHelper:

```php

AbTest->start(""Sample1"") == ""pattern1"") { ?>
    I'm the A case!

    I'm the B case!


```

Example usage of getAnalyticsCustomVar between Google Analytics tracking code:

```php


var _gaq = _gaq || [];
_gaq.push(['_setAccount', 'MY_ANALYTICS_ACCOUNT_HERE']);
AbTest->getAnalyticsCustomVar(); ?>
_gaq.push(['_trackPageview']);
(function() {
 var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
 ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
 var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
 })();


```

LICENSE
------
Licensed under The MIT License. Redistributions of files must retain the above copyright notice.
Copyright 2013 [ULURU.CO.,LTD.](http://www.uluru.biz/) https://github.com/uluru

",,2013-03-05T10:32:54Z,2015-06-02T03:07:30Z,4,2,33,7,"('TAMURA Yoshiya', 5), ('lifegood', 3), ('ANAZAWA Yasuhiro', 1), ('hampom', 1)",2,1,
camelmasa/spree_api_auth,Spree's Authentication API,"Spree Api Auth
============

Spree's Rest API add authentication API.

    $ /api/users/sign_up.json
    $ /api/users/sign_in.json

Example
=======

    $ curl -v -H ""Accept: application/json"" -H ""Content-type: application/json"" -X POST -d ' {""user"":{""email"":""camelmasa@gmail.com"", ""password"":""camelmasa"", ""password_confirmation"":""camelmasa""}}' http://localhost:3000/api/users/sign_up.json
    $ curl -v -H ""Accept: application/json"" -H ""Content-type: application/json"" -X POST -d ' {""user"":{""email"":""camelmasa@gmail.com"", ""password"":""camelmasa""}}' http://localhost:3000/api/users/sign_in.json

Testing
-------

Coding now.

Copyright (c) 2012 Masahiro Saito, released under the New BSD License
",,2012-08-19T03:33:18Z,2013-01-29T03:18:24Z,1,1,3,2,"('camelmasa', 11)",0,0,
QLeelulu/qleelulu.github.com,QLeelulu's github blog,"this is QLeelulu's github space!
",,2011-10-28T08:51:19Z,2012-02-08T14:24:56Z,4,1,36,3,"('QLeelulu', 4), ('Magicshui', 2), ('QLeelulu', 2), ('QLeelulu', 1)",1,0,
